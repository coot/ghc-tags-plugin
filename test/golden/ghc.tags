!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	libffi/build/testsuite/libffi.call/nested_struct10.c	/^typedef struct A {$/;"	s	file:
A	libffi/build/testsuite/libffi.call/nested_struct10.c	/^} A;$/;"	t	typeref:struct:A	file:
A	libffi/build/testsuite/libffi.call/nested_struct11.c	/^typedef struct A {$/;"	s	file:
A	libffi/build/testsuite/libffi.call/nested_struct11.c	/^} A;$/;"	t	typeref:struct:A	file:
A	libffi/build/testsuite/libffi.call/nested_struct2.c	/^typedef struct A {$/;"	s	file:
A	libffi/build/testsuite/libffi.call/nested_struct2.c	/^} A;$/;"	t	typeref:struct:A	file:
A	libffi/build/testsuite/libffi.call/nested_struct3.c	/^typedef struct A {$/;"	s	file:
A	libffi/build/testsuite/libffi.call/nested_struct3.c	/^} A;$/;"	t	typeref:struct:A	file:
A	libffi/build/testsuite/libffi.call/nested_struct4.c	/^typedef struct A {$/;"	s	file:
A	libffi/build/testsuite/libffi.call/nested_struct4.c	/^} A;$/;"	t	typeref:struct:A	file:
A	libffi/build/testsuite/libffi.call/nested_struct5.c	/^typedef struct A {$/;"	s	file:
A	libffi/build/testsuite/libffi.call/nested_struct5.c	/^} A;$/;"	t	typeref:struct:A	file:
A	libffi/build/testsuite/libffi.call/nested_struct6.c	/^typedef struct A {$/;"	s	file:
A	libffi/build/testsuite/libffi.call/nested_struct6.c	/^} A;$/;"	t	typeref:struct:A	file:
A	libffi/build/testsuite/libffi.call/nested_struct7.c	/^typedef struct A {$/;"	s	file:
A	libffi/build/testsuite/libffi.call/nested_struct7.c	/^} A;$/;"	t	typeref:struct:A	file:
A	libffi/build/testsuite/libffi.call/nested_struct8.c	/^typedef struct A {$/;"	s	file:
A	libffi/build/testsuite/libffi.call/nested_struct8.c	/^} A;$/;"	t	typeref:struct:A	file:
A	libffi/build/testsuite/libffi.call/nested_struct9.c	/^typedef struct A {$/;"	s	file:
A	libffi/build/testsuite/libffi.call/nested_struct9.c	/^} A;$/;"	t	typeref:struct:A	file:
ABORT	libffi/build/src/dlmalloc.c	507;"	d	file:
ABORT_ON_ASSERT_FAILURE	libffi/build/src/dlmalloc.c	510;"	d	file:
ACQUIRE_LOCK	libffi/build/src/dlmalloc.c	1447;"	d	file:
ACQUIRE_LOCK	libffi/build/src/dlmalloc.c	1459;"	d	file:
ACQUIRE_LOCK	libffi/build/src/dlmalloc.c	1491;"	d	file:
ACQUIRE_MAGIC_INIT_LOCK	libffi/build/src/dlmalloc.c	1514;"	d	file:
ACQUIRE_MAGIC_INIT_LOCK	libffi/build/src/dlmalloc.c	1517;"	d	file:
ACQUIRE_MORECORE_LOCK	libffi/build/src/dlmalloc.c	1506;"	d	file:
ACQUIRE_MORECORE_LOCK	libffi/build/src/dlmalloc.c	1509;"	d	file:
ACQ_ASSERT	rts/STM.c	103;"	d	file:
ACQ_ASSERT	rts/STM.c	106;"	d	file:
ALLOCATE_APPEND	rts/sm/CNF.c	/^    ALLOCATE_APPEND,$/;"	e	enum:__anon45	file:
ALLOCATE_IMPORT_APPEND	rts/sm/CNF.c	/^    ALLOCATE_IMPORT_APPEND,$/;"	e	enum:__anon45	file:
ALLOCATE_IMPORT_NEW	rts/sm/CNF.c	/^    ALLOCATE_IMPORT_NEW,$/;"	e	enum:__anon45	file:
ALLOCATE_NEW	rts/sm/CNF.c	/^    ALLOCATE_NEW,$/;"	e	enum:__anon45	file:
ALL_PROCESSOR_GROUPS	rts/win32/OSThreads.c	262;"	d	file:
ARGS_REGISTER_SIZE	libffi/build/src/microblaze/ffi.c	37;"	d	file:
ARRSIZE	testsuite/tests/rts/testblockalloc.c	/^const int ARRSIZE  = 256;$/;"	v
ARRSIZE	testsuite/tests/rts/testheapalloced.c	/^const int ARRSIZE  = 2000;$/;"	v
ARRSIZE	testsuite/tests/rts/testmblockalloc.c	/^const int ARRSIZE  = 64;$/;"	v
ASM_NEEDS_REGISTERS	libffi/build/src/powerpc/ffi_darwin.c	/^enum { ASM_NEEDS_REGISTERS = 4 }; \/* r28-r31 *\/$/;"	e	enum:__anon5	file:
ASM_NEEDS_REGISTERS	libffi/build/src/powerpc/ffi_sysv.c	39;"	d	file:
ASM_NEEDS_REGISTERS64	libffi/build/src/powerpc/ffi_linux64.c	/^enum { ASM_NEEDS_REGISTERS64 = 4 };$/;"	e	enum:__anon8	file:
AVG	rts/Ticky.c	43;"	d	file:
AddDelayRequest	rts/win32/IOManager.c	/^AddDelayRequest ( HsInt          usecs,$/;"	f
AddIORequest	rts/win32/IOManager.c	/^AddIORequest ( int   fd,$/;"	f
AddProcRequest	rts/win32/IOManager.c	/^AddProcRequest ( void* proc,$/;"	f
AdjustorStub	rts/Adjustor.c	/^typedef struct AdjustorStub {$/;"	s	file:
AdjustorStub	rts/Adjustor.c	/^} AdjustorStub;$/;"	t	typeref:struct:AdjustorStub	file:
AllocateOp	rts/sm/CNF.c	/^} AllocateOp;$/;"	t	typeref:enum:__anon45	file:
AreaBelow	utils/hp2ps/AreaBelow.c	/^AreaBelow(void)$/;"	f
Axes	utils/hp2ps/Axes.c	/^Axes(void)$/;"	f
B	libffi/build/testsuite/libffi.call/nested_struct10.c	/^typedef struct B {$/;"	s	file:
B	libffi/build/testsuite/libffi.call/nested_struct10.c	/^} B;$/;"	t	typeref:struct:B	file:
B	libffi/build/testsuite/libffi.call/nested_struct11.c	/^typedef struct B {$/;"	s	file:
B	libffi/build/testsuite/libffi.call/nested_struct11.c	/^} B;$/;"	t	typeref:struct:B	file:
B	libffi/build/testsuite/libffi.call/nested_struct2.c	/^typedef struct B {$/;"	s	file:
B	libffi/build/testsuite/libffi.call/nested_struct2.c	/^} B;$/;"	t	typeref:struct:B	file:
B	libffi/build/testsuite/libffi.call/nested_struct3.c	/^typedef struct B {$/;"	s	file:
B	libffi/build/testsuite/libffi.call/nested_struct3.c	/^} B;$/;"	t	typeref:struct:B	file:
B	libffi/build/testsuite/libffi.call/nested_struct4.c	/^typedef struct B {$/;"	s	file:
B	libffi/build/testsuite/libffi.call/nested_struct4.c	/^} B;$/;"	t	typeref:struct:B	file:
B	libffi/build/testsuite/libffi.call/nested_struct5.c	/^typedef struct B {$/;"	s	file:
B	libffi/build/testsuite/libffi.call/nested_struct5.c	/^} B;$/;"	t	typeref:struct:B	file:
B	libffi/build/testsuite/libffi.call/nested_struct6.c	/^typedef struct B {$/;"	s	file:
B	libffi/build/testsuite/libffi.call/nested_struct6.c	/^} B;$/;"	t	typeref:struct:B	file:
B	libffi/build/testsuite/libffi.call/nested_struct7.c	/^typedef struct B {$/;"	s	file:
B	libffi/build/testsuite/libffi.call/nested_struct7.c	/^} B;$/;"	t	typeref:struct:B	file:
B	libffi/build/testsuite/libffi.call/nested_struct8.c	/^typedef struct B {$/;"	s	file:
B	libffi/build/testsuite/libffi.call/nested_struct8.c	/^} B;$/;"	t	typeref:struct:B	file:
B	libffi/build/testsuite/libffi.call/nested_struct9.c	/^typedef struct B {$/;"	s	file:
B	libffi/build/testsuite/libffi.call/nested_struct9.c	/^} B;$/;"	t	typeref:struct:B	file:
BCO_GET_LARGE_ARG	rts/Disassembler.c	65;"	d	file:
BCO_GET_LARGE_ARG	rts/Interpreter.c	73;"	d	file:
BCO_LIT	rts/Interpreter.c	76;"	d	file:
BCO_NEXT	rts/Disassembler.c	47;"	d	file:
BCO_NEXT	rts/Interpreter.c	55;"	d	file:
BCO_NEXT_32	rts/Disassembler.c	48;"	d	file:
BCO_NEXT_32	rts/Interpreter.c	56;"	d	file:
BCO_NEXT_64	rts/Disassembler.c	51;"	d	file:
BCO_NEXT_64	rts/Interpreter.c	59;"	d	file:
BCO_NEXT_WORD	rts/Disassembler.c	57;"	d	file:
BCO_NEXT_WORD	rts/Interpreter.c	65;"	d	file:
BCO_NEXT_WORD	rts/Interpreter.c	68;"	d	file:
BCO_PTR	rts/Interpreter.c	75;"	d	file:
BCO_READ_NEXT_32	rts/Disassembler.c	49;"	d	file:
BCO_READ_NEXT_32	rts/Interpreter.c	57;"	d	file:
BCO_READ_NEXT_64	rts/Disassembler.c	52;"	d	file:
BCO_READ_NEXT_64	rts/Interpreter.c	60;"	d	file:
BCO_READ_NEXT_WORD	rts/Disassembler.c	58;"	d	file:
BCO_READ_NEXT_WORD	rts/Interpreter.c	66;"	d	file:
BCO_READ_NEXT_WORD	rts/Interpreter.c	69;"	d	file:
BCP	nofib/imaginary/paraffins/paraffins.c	/^enum kind_paraffin { BCP, CCP };$/;"	e	enum:kind_paraffin	file:
BCP_array	nofib/imaginary/paraffins/paraffins.c	/^PARAFFIN *BCP_array[MAX_SIZE_PARAFFIN];$/;"	v
BCP_counts	nofib/imaginary/paraffins/paraffins.c	/^int      BCP_counts[MAX_SIZE_RADICAL];$/;"	v
BCP_generator	nofib/imaginary/paraffins/paraffins.c	/^BCP_generator (n)$/;"	f
BEGIN	utils/unlit/unlit.c	/^typedef enum { START, BLANK, TEXT, DEFN, BEGIN, END, \/*PSEUDO,*\/ ENDFILE, HASH, SHEBANG } line;$/;"	e	enum:__anon61	file:
BEGINCODE	utils/unlit/unlit.c	61;"	d	file:
BEGINPSEUDOCODE	utils/unlit/unlit.c	68;"	d	file:
BELIEVE_ST_NLINK	utils/lndir/lndir.c	104;"	d	file:
BLANK	utils/unlit/unlit.c	/^typedef enum { START, BLANK, TEXT, DEFN, BEGIN, END, \/*PSEUDO,*\/ ENDFILE, HASH, SHEBANG } line;$/;"	e	enum:__anon61	file:
BLOCKS_IN_STACK	rts/TraverseHeap.c	133;"	d	file:
BREAK_FOR_EACH	rts/STM.c	157;"	d	file:
BUF	rts/eventlog/EventLog.c	1119;"	d	file:
BUF	testsuite/tests/rts/testwsdeque.c	23;"	d	file:
BUFSIZE	rts/RtsMessages.c	115;"	d	file:
BUFSIZE	utils/lndir/lndir.c	173;"	d	file:
BYTE	rts/xxhash.c	/^    typedef uint8_t  BYTE;$/;"	t	file:
BYTE	rts/xxhash.c	/^    typedef unsigned char      BYTE;$/;"	t	file:
BYTE	utils/hp2ps/Axes.c	/^typedef enum {MEGABYTE, KILOBYTE, BYTE} mkb; $/;"	e	enum:__anon59	file:
B_TO_W	rts/Arena.c	59;"	d	file:
B_fn	libffi/build/testsuite/libffi.call/nested_struct10.c	/^static B B_fn(struct A b2, struct B b3, struct C b4)$/;"	f	file:
B_fn	libffi/build/testsuite/libffi.call/nested_struct2.c	/^B B_fn(struct A b0, struct B b1)$/;"	f
B_fn	libffi/build/testsuite/libffi.call/nested_struct3.c	/^B B_fn(struct A b0, struct B b1)$/;"	f
B_fn	libffi/build/testsuite/libffi.call/nested_struct4.c	/^static B B_fn(struct A b2, struct B b3)$/;"	f	file:
B_fn	libffi/build/testsuite/libffi.call/nested_struct5.c	/^static B B_fn(struct A b2, struct B b3)$/;"	f	file:
B_fn	libffi/build/testsuite/libffi.call/nested_struct6.c	/^static B B_fn(struct A b2, struct B b3, struct C b4)$/;"	f	file:
B_fn	libffi/build/testsuite/libffi.call/nested_struct7.c	/^static B B_fn(struct A b2, struct B b3)$/;"	f	file:
B_fn	libffi/build/testsuite/libffi.call/nested_struct8.c	/^static B B_fn(struct A b2, struct B b3, struct C b4)$/;"	f	file:
B_fn	libffi/build/testsuite/libffi.call/nested_struct9.c	/^static B B_fn(struct A b2, struct B b3, struct C b4)$/;"	f	file:
B_gn	libffi/build/testsuite/libffi.call/nested_struct10.c	/^B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
B_gn	libffi/build/testsuite/libffi.call/nested_struct2.c	/^B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
B_gn	libffi/build/testsuite/libffi.call/nested_struct3.c	/^B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
B_gn	libffi/build/testsuite/libffi.call/nested_struct4.c	/^B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
B_gn	libffi/build/testsuite/libffi.call/nested_struct5.c	/^B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
B_gn	libffi/build/testsuite/libffi.call/nested_struct6.c	/^B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
B_gn	libffi/build/testsuite/libffi.call/nested_struct7.c	/^B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
B_gn	libffi/build/testsuite/libffi.call/nested_struct8.c	/^B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
B_gn	libffi/build/testsuite/libffi.call/nested_struct9.c	/^B_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
Basename	utils/hp2ps/Utilities.c	/^Basename(char *name)$/;"	f
BigStruct	libffi/build/testsuite/libffi.call/huge_struct.c	/^typedef	struct BigStruct{$/;"	s	file:
BigStruct	libffi/build/testsuite/libffi.call/huge_struct.c	/^} BigStruct;$/;"	t	typeref:struct:BigStruct	file:
BigTitleOutlineBox	utils/hp2ps/PsFile.c	/^BigTitleOutlineBox(void)$/;"	f	file:
BigTitleText	utils/hp2ps/PsFile.c	/^BigTitleText(void)$/;"	f	file:
BorderOutlineBox	utils/hp2ps/PsFile.c	/^BorderOutlineBox(void)$/;"	f	file:
C	libffi/build/testsuite/libffi.call/nested_struct10.c	/^typedef struct C {$/;"	s	file:
C	libffi/build/testsuite/libffi.call/nested_struct10.c	/^} C;$/;"	t	typeref:struct:C	file:
C	libffi/build/testsuite/libffi.call/nested_struct11.c	/^typedef struct C {$/;"	s	file:
C	libffi/build/testsuite/libffi.call/nested_struct11.c	/^} C;$/;"	t	typeref:struct:C	file:
C	libffi/build/testsuite/libffi.call/nested_struct6.c	/^typedef struct C {$/;"	s	file:
C	libffi/build/testsuite/libffi.call/nested_struct6.c	/^} C;$/;"	t	typeref:struct:C	file:
C	libffi/build/testsuite/libffi.call/nested_struct8.c	/^typedef struct C {$/;"	s	file:
C	libffi/build/testsuite/libffi.call/nested_struct8.c	/^} C;$/;"	t	typeref:struct:C	file:
C	libffi/build/testsuite/libffi.call/nested_struct9.c	/^typedef struct C {$/;"	s	file:
C	libffi/build/testsuite/libffi.call/nested_struct9.c	/^} C;$/;"	t	typeref:struct:C	file:
C	nofib/imaginary/paraffins/paraffins.c	/^enum kind_radical { H, C };$/;"	e	enum:kind_radical	file:
CALL_FIRST	rts/win32/veh_excn.c	84;"	d	file:
CALL_LAST	rts/win32/veh_excn.c	85;"	d	file:
CALL_MMAP	libffi/build/src/dlmalloc.c	1299;"	d	file:
CALL_MMAP	libffi/build/src/dlmalloc.c	1315;"	d	file:
CALL_MMAP	libffi/build/src/dlmalloc.c	1323;"	d	file:
CALL_MMAP	libffi/build/src/dlmalloc.c	1362;"	d	file:
CALL_MMAP	libffi/build/src/dlmalloc.c	1399;"	d	file:
CALL_MORECORE	libffi/build/src/dlmalloc.c	1412;"	d	file:
CALL_MORECORE	libffi/build/src/dlmalloc.c	1414;"	d	file:
CALL_MREMAP	libffi/build/src/dlmalloc.c	1406;"	d	file:
CALL_MREMAP	libffi/build/src/dlmalloc.c	1408;"	d	file:
CALL_MUNMAP	libffi/build/src/dlmalloc.c	1300;"	d	file:
CALL_MUNMAP	libffi/build/src/dlmalloc.c	1308;"	d	file:
CALL_MUNMAP	libffi/build/src/dlmalloc.c	1363;"	d	file:
CALL_MUNMAP	libffi/build/src/dlmalloc.c	1400;"	d	file:
CANARY	libffi/build/testsuite/libffi.call/float1.c	19;"	d	file:
CANARY	libffi/build/testsuite/libffi.call/float4.c	19;"	d	file:
CANNOTOPEN	utils/unlit/unlit.c	54;"	d	file:
CANNOTWRITE	utils/unlit/unlit.c	55;"	d	file:
CANNOTWRITESTDOUT	utils/unlit/unlit.c	56;"	d	file:
CASTOP	rts/WSDeque.c	47;"	d	file:
CASTOP	testsuite/tests/rts/testwsdeque.c	31;"	d	file:
CAS_NAND	libraries/ghc-prim/cbits/atomic.c	149;"	d	file:
CCP	nofib/imaginary/paraffins/paraffins.c	/^enum kind_paraffin { BCP, CCP };$/;"	e	enum:kind_paraffin	file:
CCP_array	nofib/imaginary/paraffins/paraffins.c	/^PARAFFIN *CCP_array[MAX_SIZE_PARAFFIN];$/;"	v
CCP_counts	nofib/imaginary/paraffins/paraffins.c	/^int      CCP_counts[MAX_SIZE_RADICAL];$/;"	v
CCP_generator_with_no_copying	nofib/imaginary/paraffins/paraffins.c	/^CCP_generator_with_no_copying (n)$/;"	f
CCS_ID	rts/Profiling.c	/^static unsigned int CCS_ID = 1;$/;"	v	file:
CCS_LIST	rts/Profiling.c	/^static CostCentreStack *CCS_LIST = NULL;$/;"	v	file:
CC_ID	rts/Profiling.c	/^static unsigned int CC_ID  = 1;$/;"	v	file:
CC_LIST	rts/Profiling.c	/^CostCentre      *CC_LIST  = NULL;$/;"	v
CHUNK_ALIGN_MASK	libffi/build/src/dlmalloc.c	1273;"	d	file:
CHUNK_OVERHEAD	libffi/build/src/dlmalloc.c	1678;"	d	file:
CHUNK_OVERHEAD	libffi/build/src/dlmalloc.c	1680;"	d	file:
CIF_FLAGS_CHAR	libffi/build/src/vax/ffi.c	37;"	d	file:
CIF_FLAGS_DINT	libffi/build/src/m68k/ffi.c	119;"	d	file:
CIF_FLAGS_DINT	libffi/build/src/m88k/ffi.c	62;"	d	file:
CIF_FLAGS_DINT	libffi/build/src/vax/ffi.c	40;"	d	file:
CIF_FLAGS_DOUBLE	libffi/build/src/m68k/ffi.c	121;"	d	file:
CIF_FLAGS_FLOAT	libffi/build/src/m68k/ffi.c	120;"	d	file:
CIF_FLAGS_INT	libffi/build/src/m68k/ffi.c	118;"	d	file:
CIF_FLAGS_INT	libffi/build/src/m88k/ffi.c	61;"	d	file:
CIF_FLAGS_INT	libffi/build/src/vax/ffi.c	39;"	d	file:
CIF_FLAGS_LDOUBLE	libffi/build/src/m68k/ffi.c	122;"	d	file:
CIF_FLAGS_POINTER	libffi/build/src/m68k/ffi.c	123;"	d	file:
CIF_FLAGS_SHORT	libffi/build/src/vax/ffi.c	38;"	d	file:
CIF_FLAGS_SINT16	libffi/build/src/m68k/ffi.c	127;"	d	file:
CIF_FLAGS_SINT8	libffi/build/src/m68k/ffi.c	126;"	d	file:
CIF_FLAGS_STRUCT1	libffi/build/src/m68k/ffi.c	124;"	d	file:
CIF_FLAGS_STRUCT2	libffi/build/src/m68k/ffi.c	125;"	d	file:
CINUSE_BIT	libffi/build/src/dlmalloc.c	1722;"	d	file:
CLEAN	rts/sm/NonMovingSweep.c	169;"	d	file:
CLEAN	rts/sm/NonMovingSweep.c	275;"	d	file:
CLZW	rts/sm/BlockAlloc.c	239;"	d	file:
CLZW	rts/sm/BlockAlloc.c	241;"	d	file:
CMFAIL	libffi/build/src/dlmalloc.c	1294;"	d	file:
CODE_ENDIAN	libffi/build/src/arc/ffi.c	37;"	d	file:
CODE_ENDIAN	libffi/build/src/arc/ffi.c	39;"	d	file:
COMPILING_RTS_MAIN	rts/RtsMain.c	9;"	d	file:
COND_PR_CTR	rts/Ticky.c	206;"	d	file:
CONST_MPZ_INIT	libraries/integer-gmp/cbits/wrappers.c	51;"	d	file:
CORRUPTION_ERROR_ACTION	libffi/build/src/dlmalloc.c	2239;"	d	file:
CORRUPTION_ERROR_ACTION	libffi/build/src/dlmalloc.c	2245;"	d	file:
C_fn	libffi/build/testsuite/libffi.call/nested_struct11.c	/^static C C_fn (int x, int y, int z, C source, int i, int j, int k)$/;"	f	file:
Caret	utils/hp2ps/Marks.c	/^Caret(floatish x, floatish y, floatish d)$/;"	f	file:
Census	rts/ProfHeap.c	/^} Census;$/;"	t	typeref:struct:__anon44	file:
CloseHandleFinaliser	libraries/Win32/cbits/HsWin32.c	/^void CloseHandleFinaliser(HANDLE h) {$/;"	f
CommaPrint	utils/hp2ps/Utilities.c	/^CommaPrint(FILE *fp, intish n)$/;"	f
CompletedReq	rts/win32/AsyncIO.c	/^typedef struct CompletedReq {$/;"	s	file:
CompletedReq	rts/win32/AsyncIO.c	/^} CompletedReq;$/;"	t	typeref:struct:CompletedReq	file:
CreateBMPFile	libraries/Win32/cbits/dumpBMP.c	/^void CreateBMPFile(LPCTSTR pszFileName, HBITMAP hBmp, HDC hDC)$/;"	f
Curve	utils/hp2ps/Curves.c	/^Curve(struct entry *e)$/;"	f	file:
Curves	utils/hp2ps/Curves.c	/^Curves(void)$/;"	f
CurvesInit	utils/hp2ps/Curves.c	/^CurvesInit(void)$/;"	f
DBL_HIDDEN	libraries/base/cbits/primFloat.c	332;"	d	file:
DBL_POWER2	libraries/base/cbits/primFloat.c	333;"	d	file:
DBL_UPP	libraries/base/cbits/primFloat.c	498;"	d	file:
DEBUG_BUILD_ONLY	rts/RtsFlags.c	861;"	d	file:
DEBUG_LEVEL	libffi/build/src/pa/ffi.c	41;"	d	file:
DEBUG_LOG	rts/linker/LoadArchive.c	32;"	d	file:
DEBUG_LoadSymbols	rts/Printer.c	/^extern void DEBUG_LoadSymbols( const char *name )$/;"	f
DEBUG_LoadSymbols	rts/Printer.c	/^extern void DEBUG_LoadSymbols( const char *name STG_UNUSED )$/;"	f
DEFAULT_GRANULARITY	libffi/build/src/closures.c	301;"	d	file:
DEFAULT_GRANULARITY	libffi/build/src/dlmalloc.c	556;"	d	file:
DEFAULT_GRANULARITY	libffi/build/src/dlmalloc.c	558;"	d	file:
DEFAULT_MMAP_THRESHOLD	libffi/build/src/closures.c	298;"	d	file:
DEFAULT_MMAP_THRESHOLD	libffi/build/src/dlmalloc.c	570;"	d	file:
DEFAULT_MMAP_THRESHOLD	libffi/build/src/dlmalloc.c	572;"	d	file:
DEFAULT_TRIM_THRESHOLD	libffi/build/src/dlmalloc.c	563;"	d	file:
DEFAULT_TRIM_THRESHOLD	libffi/build/src/dlmalloc.c	565;"	d	file:
DEFN	utils/unlit/unlit.c	/^typedef enum { START, BLANK, TEXT, DEFN, BEGIN, END, \/*PSEUDO,*\/ ENDFILE, HASH, SHEBANG } line;$/;"	e	enum:__anon61	file:
DEFNCHAR	utils/unlit/unlit.c	50;"	d	file:
DHIGHBIT	rts/StgPrimFloat.c	33;"	d	file:
DIRECT_MMAP	libffi/build/src/dlmalloc.c	1301;"	d	file:
DIRECT_MMAP	libffi/build/src/dlmalloc.c	1329;"	d	file:
DIRECT_MMAP	libffi/build/src/dlmalloc.c	1364;"	d	file:
DIRECT_MMAP	libffi/build/src/dlmalloc.c	1401;"	d	file:
DISCARD_NEW	rts/WSDeque.c	235;"	d	file:
DISTINCTNAMES	utils/unlit/unlit.c	57;"	d	file:
DLGTEMPLATE_WORKING_SIZE	libraries/Win32/cbits/diatemp.c	19;"	d	file:
DMSBIT	rts/StgPrimFloat.c	34;"	d	file:
Dbls	libffi/build/testsuite/libffi.call/cls_dbls_struct.c	/^typedef struct Dbls {$/;"	s	file:
Dbls	libffi/build/testsuite/libffi.call/cls_dbls_struct.c	/^} Dbls;$/;"	t	typeref:struct:Dbls	file:
DeleteObjectFinaliser	libraries/Win32/cbits/HsWin32.c	/^void DeleteObjectFinaliser(HGDIOBJ h) {$/;"	f
DeregisterWorkItem	rts/win32/IOManager.c	/^DeregisterWorkItem(IOManagerState* ioMan,$/;"	f	file:
Deviation	utils/hp2ps/Deviation.c	/^Deviation(void)$/;"	f
Dimensions	utils/hp2ps/Dimensions.c	/^Dimensions(void)$/;"	f
Disaster	utils/hp2ps/Error.c	/^Disaster(const char *fmt, ...)$/;"	f
DllMain	rts/RtsDllMain.c	/^DllMain ( HINSTANCE hInstance STG_UNUSED$/;"	f
DoTitleAndBox	utils/hp2ps/PsFile.c	/^static void DoTitleAndBox(void)$/;"	f	file:
DropSuffix	utils/hp2ps/Utilities.c	/^DropSuffix(char *name, char *suffix)$/;"	f
EFI64	libffi/build/src/x86/ffiw64.c	33;"	d	file:
EFI64	libffi/build/src/x86/ffiw64.c	35;"	d	file:
EH_UNWINDING	rts/win32/veh_excn.c	89;"	d	file:
ELF_TARGET_386	rts/linker/Elf.c	84;"	d	file:
ELF_TARGET_AMD64	rts/linker/Elf.c	87;"	d	file:
ELF_TARGET_SPARC	rts/linker/Elf.c	82;"	d	file:
ELF_TARGET_X64_64	rts/linker/Elf.c	86;"	d	file:
EMPTYSCRIPT	utils/unlit/unlit.c	52;"	d	file:
END	utils/unlit/unlit.c	/^typedef enum { START, BLANK, TEXT, DEFN, BEGIN, END, \/*PSEUDO,*\/ ENDFILE, HASH, SHEBANG } line;$/;"	e	enum:__anon61	file:
ENDCODE	utils/unlit/unlit.c	63;"	d	file:
ENDFILE	utils/unlit/unlit.c	/^typedef enum { START, BLANK, TEXT, DEFN, BEGIN, END, \/*PSEUDO,*\/ ENDFILE, HASH, SHEBANG } line;$/;"	e	enum:__anon61	file:
ENDPSEUDOCODE	utils/unlit/unlit.c	70;"	d	file:
EPSFSpecialComments	utils/hp2ps/PsFile.c	/^EPSFSpecialComments(floatish epsfscale)$/;"	f	file:
ERRTABLESIZE	libraries/base/cbits/Win32Utils.c	77;"	d	file:
EVENT_BUFSIZ	rts/win32/ThrIOManager.c	26;"	d	file:
EVENT_LOG_SIZE	rts/eventlog/EventLog.c	33;"	d	file:
EVENT_SIZE_DYNAMIC	rts/eventlog/EventLog.c	242;"	d	file:
EXPORT	testsuite/tests/ghci/linking/dyn/A.c	3;"	d	file:
EXPORT	testsuite/tests/ghci/linking/dyn/A.c	6;"	d	file:
EXPORT	testsuite/tests/ghci/linking/dyn/A.c	9;"	d	file:
EXPORT	testsuite/tests/ghci/linking/dyn/B.c	11;"	d	file:
EXPORT	testsuite/tests/ghci/linking/dyn/B.c	3;"	d	file:
EXPORT	testsuite/tests/ghci/linking/dyn/B.c	7;"	d	file:
EXTERN_BIT	libffi/build/src/dlmalloc.c	1421;"	d	file:
Error	utils/hp2ps/Error.c	/^Error(const char *fmt, ...)$/;"	f
EscapePrint	utils/hp2ps/PsFile.c	/^EscapePrint(char *s, int w)$/;"	f	file:
EventDesc	rts/eventlog/EventLog.c	/^char *EventDesc[] = {$/;"	v
EventType	rts/eventlog/EventLog.c	/^} EventType;$/;"	t	typeref:struct:_EventType	file:
EventsBuf	rts/eventlog/EventLog.c	/^} EventsBuf;$/;"	t	typeref:struct:_EventsBuf	file:
F1	libraries/base/cbits/md5.c	140;"	d	file:
F2	libraries/base/cbits/md5.c	141;"	d	file:
F3	libraries/base/cbits/md5.c	142;"	d	file:
F4	libraries/base/cbits/md5.c	143;"	d	file:
FAIL	rts/linker/LoadArchive.c	27;"	d	file:
FALSE	nofib/imaginary/paraffins/paraffins.c	/^enum boolean { FALSE, TRUE };$/;"	e	enum:boolean	file:
FD_SETSIZE	libraries/base/cbits/inputReady.c	20;"	d	file:
FENCEPOST_HEAD	libffi/build/src/dlmalloc.c	1726;"	d	file:
FFIBFIN_RET_BYTE	libffi/build/src/bfin/ffi.c	40;"	d	file:
FFIBFIN_RET_HALFWORD	libffi/build/src/bfin/ffi.c	41;"	d	file:
FFIBFIN_RET_INT32	libffi/build/src/bfin/ffi.c	43;"	d	file:
FFIBFIN_RET_INT64	libffi/build/src/bfin/ffi.c	42;"	d	file:
FFIBFIN_RET_VOID	libffi/build/src/bfin/ffi.c	39;"	d	file:
FFI_COMPLEX_TYPEDEF	libffi/build/src/types.c	47;"	d	file:
FFI_DECLARE_FASTCALL	libffi/build/src/x86/ffi.c	240;"	d	file:
FFI_DECLARE_FASTCALL	libffi/build/src/x86/ffi.c	242;"	d	file:
FFI_DECLARE_FASTCALL	libffi/build/src/x86/ffi.c	245;"	d	file:
FFI_LDBL_CONST	libffi/build/src/types.c	82;"	d	file:
FFI_LDBL_CONST	libffi/build/src/types.c	84;"	d	file:
FFI_MIPS_STOP_HERE	libffi/build/src/mips/ffi.c	49;"	d	file:
FFI_MIPS_STOP_HERE	libffi/build/src/mips/ffi.c	51;"	d	file:
FFI_MMAP_EXEC_SELINUX	libffi/build/src/closures.c	62;"	d	file:
FFI_MMAP_EXEC_WRIT	libffi/build/src/closures.c	46;"	d	file:
FFI_MMAP_EXEC_WRIT	libffi/build/src/closures.c	53;"	d	file:
FFI_TRAMPOLINE_COUNT	libffi/build/src/closures.c	104;"	d	file:
FFI_TYPEDEF	libffi/build/src/types.c	36;"	d	file:
FFI_TYPE_LONGDOUBLE	libffi/build/src/aarch64/ffi.c	37;"	d	file:
FFI_TYPE_LONGDOUBLE	libffi/build/src/aarch64/ffi.c	38;"	d	file:
FFI_TYPE_LONGDOUBLE	libffi/build/src/alpha/ffi.c	40;"	d	file:
FFI_TYPE_LONGDOUBLE	libffi/build/src/alpha/ffi.c	41;"	d	file:
FFI_TYPE_LONGDOUBLE	libffi/build/src/sparc/ffi.c	42;"	d	file:
FFI_TYPE_LONGDOUBLE	libffi/build/src/sparc/ffi.c	43;"	d	file:
FFI_TYPE_LONGDOUBLE	libffi/build/src/sparc/ffi64.c	40;"	d	file:
FFI_TYPE_LONGDOUBLE	libffi/build/src/sparc/ffi64.c	41;"	d	file:
FFI_TYPE_LONGDOUBLE	libffi/build/src/x86/ffi.c	45;"	d	file:
FFI_TYPE_LONGDOUBLE	libffi/build/src/x86/ffi.c	46;"	d	file:
FFI_TYPE_STRUCT_REGS	libffi/build/src/xtensa/ffi.c	48;"	d	file:
FF_COLOUR	nofib/gc/fulsom/raster/raster.c	45;"	d	file:
FF_COLOUR	nofib/real/fulsom/raster/raster.c	45;"	d	file:
FF_SQUARE	nofib/gc/fulsom/raster/raster.c	44;"	d	file:
FF_SQUARE	nofib/real/fulsom/raster/raster.c	44;"	d	file:
FHIGHBIT	rts/StgPrimFloat.c	37;"	d	file:
FIELD_SIZE	includes/dist-derivedconstants/header/tmp.c	22;"	d	file:
FIRST_ARG_SLOT	libffi/build/src/pa/ffi.c	40;"	d	file:
FIX_ARGP	libffi/build/src/mips/ffi.c	55;"	d	file:
FIX_ARGP	libffi/build/src/mips/ffi.c	63;"	d	file:
FLAG_4_GPR_ARGUMENTS	libffi/build/src/powerpc/ffi_darwin.c	/^  FLAG_4_GPR_ARGUMENTS  = 1 << (31- 5),$/;"	e	enum:__anon3	file:
FLAG_ARG_NEEDS_COPY	libffi/build/src/powerpc/ffi_darwin.c	/^  FLAG_ARG_NEEDS_COPY   = 1 << (31- 7),$/;"	e	enum:__anon3	file:
FLAG_FP_ARGUMENTS	libffi/build/src/powerpc/ffi_darwin.c	/^  FLAG_FP_ARGUMENTS     = 1 << (31- 6), \/* cr1.eq; specified by ABI  *\/$/;"	e	enum:__anon3	file:
FLAG_RETURNS_128BITS	libffi/build/src/powerpc/ffi_darwin.c	/^  FLAG_RETURNS_128BITS	= 1 << (31-31), \/* These go in cr7  *\/$/;"	e	enum:__anon3	file:
FLAG_RETURNS_64BITS	libffi/build/src/powerpc/ffi_darwin.c	/^  FLAG_RETURNS_64BITS	= 1 << (31-28),$/;"	e	enum:__anon3	file:
FLAG_RETURNS_FP	libffi/build/src/powerpc/ffi_darwin.c	/^  FLAG_RETURNS_FP	= 1 << (31-29),$/;"	e	enum:__anon3	file:
FLAG_RETURNS_NOTHING	libffi/build/src/powerpc/ffi_darwin.c	/^  FLAG_RETURNS_NOTHING	= 1 << (31-30),$/;"	e	enum:__anon3	file:
FLAG_RETURNS_STRUCT	libffi/build/src/powerpc/ffi_darwin.c	/^  FLAG_RETURNS_STRUCT	= 1 << (31-27), \/* This goes in cr6  *\/$/;"	e	enum:__anon3	file:
FLAG_RETVAL_REFERENCE	libffi/build/src/powerpc/ffi_darwin.c	/^  FLAG_RETVAL_REFERENCE = 1 << (31- 4)$/;"	e	enum:__anon3	file:
FLAG_SHOULD_FREE	rts/Pool.c	15;"	d	file:
FLT_HIDDEN	libraries/base/cbits/primFloat.c	272;"	d	file:
FLT_POWER2	libraries/base/cbits/primFloat.c	273;"	d	file:
FLT_UPP	libraries/base/cbits/primFloat.c	464;"	d	file:
FMSBIT	rts/StgPrimFloat.c	38;"	d	file:
FOOTERS	libffi/build/src/dlmalloc.c	504;"	d	file:
FORCE_INLINE	rts/xxhash.c	117;"	d	file:
FORCE_INLINE	rts/xxhash.c	121;"	d	file:
FORCE_INLINE	rts/xxhash.c	123;"	d	file:
FORCE_INLINE	rts/xxhash.c	126;"	d	file:
FORKPROCESS_PRIMOP_SUPPORTED	rts/Schedule.c	112;"	d	file:
FOR_EACH_ENTRY	rts/STM.c	139;"	d	file:
FOR_EACH_STABLE_PTR	rts/StablePtr.c	291;"	d	file:
FOUR_PARTS	nofib/imaginary/paraffins/paraffins.c	/^  FOUR_PARTS;$/;"	t	typeref:struct:four_parts	file:
FOUR_SIZE_T_SIZES	libffi/build/src/dlmalloc.c	1268;"	d	file:
FUDGE	utils/hp2ps/Dimensions.c	193;"	d	file:
FUNDESCS	rts/Adjustor.c	291;"	d	file:
FUN_OFFSET	includes/dist-derivedconstants/header/tmp.c	24;"	d	file:
FdState	rts/posix/Select.c	/^enum FdState {$/;"	g	file:
FetchWork	rts/win32/WorkQueue.c	/^FetchWork ( WorkQueue* pq, void** ppw )$/;"	f
FileEventLogWriter	rts/eventlog/EventLogWriter.c	/^const EventLogWriter FileEventLogWriter = {$/;"	v
FlagDefaultsHook	rts/hooks/FlagDefaults.c	/^FlagDefaultsHook (void)$/;"	f
Fp	utils/hp2ps/Main.c	/^Fp(char *rootname, char **filename, char *suffix, char *mode)$/;"	f	file:
FreeLibraryFinaliser	libraries/Win32/cbits/HsWin32.c	/^void FreeLibraryFinaliser(HMODULE m) {$/;"	f
FreeWorkQueue	rts/win32/WorkQueue.c	/^FreeWorkQueue ( WorkQueue* pq )$/;"	f
GCC_HAS_BUILTIN_CLEAR_CACHE	rts/sm/Storage.c	1548;"	d	file:
GC_coll_cpu	rts/Stats.c	/^static Time *GC_coll_cpu = NULL;$/;"	v	file:
GC_coll_elapsed	rts/Stats.c	/^static Time *GC_coll_elapsed = NULL;$/;"	v	file:
GC_coll_max_pause	rts/Stats.c	/^static Time *GC_coll_max_pause = NULL;$/;"	v	file:
GC_end_faults	rts/Stats.c	/^static W_ GC_end_faults = 0;$/;"	v	file:
GENCAT_CC	libraries/base/cbits/WCsubst.c	75;"	d	file:
GENCAT_CF	libraries/base/cbits/WCsubst.c	82;"	d	file:
GENCAT_CO	libraries/base/cbits/WCsubst.c	67;"	d	file:
GENCAT_CS	libraries/base/cbits/WCsubst.c	80;"	d	file:
GENCAT_LL	libraries/base/cbits/WCsubst.c	85;"	d	file:
GENCAT_LM	libraries/base/cbits/WCsubst.c	87;"	d	file:
GENCAT_LO	libraries/base/cbits/WCsubst.c	91;"	d	file:
GENCAT_LT	libraries/base/cbits/WCsubst.c	71;"	d	file:
GENCAT_LU	libraries/base/cbits/WCsubst.c	76;"	d	file:
GENCAT_MC	libraries/base/cbits/WCsubst.c	64;"	d	file:
GENCAT_ME	libraries/base/cbits/WCsubst.c	68;"	d	file:
GENCAT_MN	libraries/base/cbits/WCsubst.c	90;"	d	file:
GENCAT_ND	libraries/base/cbits/WCsubst.c	69;"	d	file:
GENCAT_NL	libraries/base/cbits/WCsubst.c	89;"	d	file:
GENCAT_NO	libraries/base/cbits/WCsubst.c	65;"	d	file:
GENCAT_PC	libraries/base/cbits/WCsubst.c	72;"	d	file:
GENCAT_PD	libraries/base/cbits/WCsubst.c	77;"	d	file:
GENCAT_PE	libraries/base/cbits/WCsubst.c	79;"	d	file:
GENCAT_PF	libraries/base/cbits/WCsubst.c	81;"	d	file:
GENCAT_PI	libraries/base/cbits/WCsubst.c	88;"	d	file:
GENCAT_PO	libraries/base/cbits/WCsubst.c	70;"	d	file:
GENCAT_PS	libraries/base/cbits/WCsubst.c	83;"	d	file:
GENCAT_SC	libraries/base/cbits/WCsubst.c	84;"	d	file:
GENCAT_SK	libraries/base/cbits/WCsubst.c	66;"	d	file:
GENCAT_SM	libraries/base/cbits/WCsubst.c	73;"	d	file:
GENCAT_SO	libraries/base/cbits/WCsubst.c	78;"	d	file:
GENCAT_ZL	libraries/base/cbits/WCsubst.c	86;"	d	file:
GENCAT_ZP	libraries/base/cbits/WCsubst.c	63;"	d	file:
GENCAT_ZS	libraries/base/cbits/WCsubst.c	74;"	d	file:
GETESP	testsuite/tests/rts/spalign.c	10;"	d	file:
GETESP	testsuite/tests/rts/spalign.c	12;"	d	file:
GET_PTR_TAG	rts/sm/Compact.c	/^GET_PTR_TAG(W_ p)$/;"	f
GHCConcSignalSignalHandlerStore	rts/Globals.c	/^    GHCConcSignalSignalHandlerStore,$/;"	e	enum:__anon37	file:
GHCConcWindowsIOManagerThreadStore	rts/Globals.c	/^    GHCConcWindowsIOManagerThreadStore,$/;"	e	enum:__anon37	file:
GHCConcWindowsPendingDelaysStore	rts/Globals.c	/^    GHCConcWindowsPendingDelaysStore,$/;"	e	enum:__anon37	file:
GHCConcWindowsProddingStore	rts/Globals.c	/^    GHCConcWindowsProddingStore,$/;"	e	enum:__anon37	file:
GLOBALLY_INITIALIZE	libffi/build/src/dlmalloc.c	2207;"	d	file:
GNUC3_ATTRIBUTE	rts/Adjustor.c	/^static void GNUC3_ATTRIBUTE(used) obscure_ccall_wrapper(void)$/;"	f	file:
GNUC3_ATTRIBUTE	rts/StgCRun.c	/^static void GNUC3_ATTRIBUTE(used)$/;"	f	file:
GNUC3_ATTRIBUTE	rts/posix/Select.c	/^static void GNUC3_ATTRIBUTE(__noreturn__)$/;"	f	file:
GNU_ATTRIBUTE	rts/Hpc.c	/^static void GNU_ATTRIBUTE(__noreturn__)$/;"	f	file:
GNU_ATTRIBUTE	rts/RtsFlags.c	/^static void GNU_ATTRIBUTE(__noreturn__)$/;"	f	file:
GNU_ATTRIBUTE	rts/RtsMessages.c	/^void GNU_ATTRIBUTE(__noreturn__)$/;"	f
Gamma_k	nofib/spectral/simple/simple.c	/^double Gamma_k[MAXSIZE][MAXSIZE],Gamma_l[MAXSIZE][MAXSIZE];$/;"	v
Gamma_l	nofib/spectral/simple/simple.c	/^double Gamma_k[MAXSIZE][MAXSIZE],Gamma_l[MAXSIZE][MAXSIZE];$/;"	v
GarbageCollect	rts/sm/GC.c	/^GarbageCollect (uint32_t collect_gen,$/;"	f
GenSymCounter	compiler/cbits/genSym.c	/^static HsInt GenSymCounter = 0;$/;"	v	file:
GenSymInc	compiler/cbits/genSym.c	/^static HsInt GenSymInc = 1;$/;"	v	file:
GetAuxFile	utils/hp2ps/AuxFile.c	/^GetAuxFile(FILE *auxfp)$/;"	f
GetAuxLine	utils/hp2ps/AuxFile.c	/^GetAuxLine(FILE *auxfp)$/;"	f	file:
GetAuxTok	utils/hp2ps/AuxFile.c	/^static void GetAuxTok(FILE *auxfp)$/;"	f	file:
GetEntry	utils/hp2ps/HpFile.c	/^GetEntry(char *name)$/;"	f	file:
GetGroupCountProc	rts/win32/OSThreads.c	/^typedef DWORD(WINAPI *GetGroupCountProc)(void);$/;"	t	file:
GetHpFile	utils/hp2ps/HpFile.c	/^GetHpFile(FILE *infp)$/;"	f
GetHpLine	utils/hp2ps/HpFile.c	/^GetHpLine(FILE *infp)$/;"	f	file:
GetHpTok	utils/hp2ps/HpFile.c	/^GetHpTok(FILE *infp, int startline)$/;"	f	file:
GetIdent	utils/hp2ps/HpFile.c	/^GetIdent(FILE *infp)$/;"	f
GetItemCountProc	rts/win32/OSThreads.c	/^typedef DWORD(WINAPI *GetItemCountProc)(WORD);$/;"	t	file:
GetNonNullModuleHandle	driver/utils/dynwrapper.c	/^HINSTANCE GetNonNullModuleHandle(LPTSTR dll) {$/;"	f
GetNonNullProcAddress	driver/utils/dynwrapper.c	/^void *GetNonNullProcAddress(HINSTANCE h, char *sym) {$/;"	f
GetNumber	utils/hp2ps/HpFile.c	/^GetNumber(FILE *infp)$/;"	f
GetString	utils/hp2ps/HpFile.c	/^GetString(FILE *infp)$/;"	f
GetWork	rts/win32/WorkQueue.c	/^GetWork ( WorkQueue* pq, void** ppw )$/;"	f
GetWorkQueueHandle	rts/win32/WorkQueue.c	/^GetWorkQueueHandle ( WorkQueue* pq )$/;"	f
H	nofib/imaginary/paraffins/paraffins.c	/^enum kind_radical { H, C };$/;"	e	enum:kind_radical	file:
H	rts/StgPrimFloat.c	43;"	d	file:
H	rts/StgPrimFloat.c	46;"	d	file:
HALF_MAX_SIZE_T	libffi/build/src/dlmalloc.c	1270;"	d	file:
HASH	utils/unlit/unlit.c	/^typedef enum { START, BLANK, TEXT, DEFN, BEGIN, END, \/*PSEUDO,*\/ ENDFILE, HASH, SHEBANG } line;$/;"	e	enum:__anon61	file:
HASH_TABLE_SIZE	rts/RetainerSet.c	24;"	d	file:
HAS_FLAG	libraries/base/cbits/fs.c	103;"	d	file:
HAS_FLAG	rts/fs.c	103;"	d	file:
HAS_FLAG	utils/fs/fs.c	165;"	d	file:
HAS_FLAG	utils/lndir/fs.c	103;"	d	file:
HAS_FLAG	utils/unlit/fs.c	103;"	d	file:
HAVE_MMAP	libffi/build/src/dlmalloc.c	454;"	d	file:
HAVE_MMAP	libffi/build/src/dlmalloc.c	470;"	d	file:
HAVE_MMAP	libffi/build/src/dlmalloc.c	479;"	d	file:
HAVE_MMAP	libffi/build/src/dlmalloc.c	522;"	d	file:
HAVE_MNTENT	libffi/build/src/closures.c	47;"	d	file:
HAVE_MORECORE	libffi/build/src/closures.c	288;"	d	file:
HAVE_MORECORE	libffi/build/src/dlmalloc.c	455;"	d	file:
HAVE_MORECORE	libffi/build/src/dlmalloc.c	471;"	d	file:
HAVE_MORECORE	libffi/build/src/dlmalloc.c	478;"	d	file:
HAVE_MORECORE	libffi/build/src/dlmalloc.c	539;"	d	file:
HAVE_MORECORE	libffi/build/src/dlmalloc.c	541;"	d	file:
HAVE_MREMAP	libffi/build/src/closures.c	291;"	d	file:
HAVE_MREMAP	libffi/build/src/dlmalloc.c	529;"	d	file:
HAVE_MREMAP	libffi/build/src/dlmalloc.c	531;"	d	file:
HCHUNK	rts/Hash.c	26;"	d	file:
HC_start_time	rts/Stats.c	/^static Time HC_start_time, HC_tot_time = 0;     \/\/ heap census prof user time$/;"	v	file:
HC_tot_time	rts/Stats.c	/^static Time HC_start_time, HC_tot_time = 0;     \/\/ heap census prof user time$/;"	v	file:
HCe_start_time	rts/Stats.c	/^static Time HCe_start_time, HCe_tot_time = 0;   \/\/ heap census prof elap time$/;"	v	file:
HCe_tot_time	rts/Stats.c	/^static Time HCe_start_time, HCe_tot_time = 0;   \/\/ heap census prof elap time$/;"	v	file:
HDIRSIZE	rts/Hash.c	22;"	d	file:
HEAPSIZE	nofib/imaginary/paraffins/paraffins.c	33;"	d	file:
HEAP_ALLOCED_GC	rts/sm/Evac.c	35;"	d	file:
HEAP_ALLOCED_miss	rts/sm/MBlock.c	/^StgBool HEAP_ALLOCED_miss(StgWord mblock, const void *p)$/;"	f
HEAP_LFH	rts/linker/PEi386.c	288;"	d	file:
HI	libffi/build/src/nios2/ffi.c	280;"	d	file:
HI	libffi/build/src/nios2/ffi.c	289;"	d	file:
HLOAD	rts/Hash.c	24;"	d	file:
HSEGSIZE	rts/Hash.c	20;"	d	file:
HSUNIX_EXECVPE_H_NO_COMPAT	libraries/unix/cbits/execvpe.c	25;"	d	file:
Hash	utils/hp2ps/HpFile.c	/^Hash(char *s)$/;"	f	file:
HashList	rts/Hash.c	/^} HashList;$/;"	t	typeref:struct:hashlist	file:
HashListChunk	rts/Hash.c	/^} HashListChunk;$/;"	t	typeref:struct:chunklist	file:
HeapOptimizeResources	rts/linker/PEi386.c	289;"	d	file:
HsEnd	testsuite/tests/dynlibs/T4464B.c	/^void HsEnd(void) {$/;"	f
HsStart	testsuite/tests/dynlibs/T4464B.c	/^void HsStart(void) {$/;"	f
IA64FunDesc	rts/Adjustor.c	/^} IA64FunDesc;$/;"	t	typeref:struct:_IA64FunDesc	file:
IEEE_FLOATING_POINT	libraries/base/cbits/primFloat.c	13;"	d	file:
IEEE_FLOATING_POINT	rts/StgPrimFloat.c	19;"	d	file:
IF_STM_CG_LOCK	rts/STM.c	169;"	d	file:
IF_STM_CG_LOCK	rts/STM.c	221;"	d	file:
IF_STM_CG_LOCK	rts/STM.c	222;"	d	file:
IF_STM_FG_LOCKS	rts/STM.c	170;"	d	file:
IF_STM_FG_LOCKS	rts/STM.c	276;"	d	file:
IF_STM_FG_LOCKS	rts/STM.c	277;"	d	file:
IF_STM_UNIPROC	rts/STM.c	168;"	d	file:
IF_STM_UNIPROC	rts/STM.c	173;"	d	file:
IF_STM_UNIPROC	rts/STM.c	174;"	d	file:
IMPORT	testsuite/tests/ghci/linking/dyn/B.c	12;"	d	file:
IMPORT	testsuite/tests/ghci/linking/dyn/B.c	4;"	d	file:
IMPORT	testsuite/tests/ghci/linking/dyn/B.c	8;"	d	file:
INCHES	utils/hp2ps/Main.c	/^typedef enum {POINTS, INCHES, MILLIMETRES} pim;$/;"	e	enum:__anon60	file:
INCL_DOS	libffi/build/src/dlmalloc.c	468;"	d	file:
INITIAL_LOCK	libffi/build/src/dlmalloc.c	1446;"	d	file:
INITIAL_LOCK	libffi/build/src/dlmalloc.c	1458;"	d	file:
INITIAL_LOCK	libffi/build/src/dlmalloc.c	1490;"	d	file:
INITIAL_LOCK	libffi/build/src/dlmalloc.c	1502;"	d	file:
INIT_SNT_SIZE	rts/StableName.c	25;"	d	file:
INIT_SPT_SIZE	rts/StablePtr.c	94;"	d	file:
INLINE	libraries/Win32/cbits/HsGDI.c	2;"	d	file:
INLINE	libraries/Win32/cbits/HsWin32.c	2;"	d	file:
INLINE	libraries/base/cbits/PrelIOUtils.c	7;"	d	file:
INLINE_HEADER	testsuite/tests/rts/testheapalloced.c	4;"	d	file:
INSECURE	libffi/build/src/dlmalloc.c	519;"	d	file:
INTAVG	rts/Ticky.c	40;"	d	file:
INTERP_TICK	rts/Interpreter.c	177;"	d	file:
INTERP_TICK	rts/Interpreter.c	236;"	d	file:
INUSE_BITS	libffi/build/src/dlmalloc.c	1723;"	d	file:
IN_STGCRUN	rts/StgCRun.c	44;"	d	file:
IN_STG_CODE	includes/dist-derivedconstants/header/tmp.c	1;"	d	file:
IOManagerState	rts/win32/IOManager.c	/^typedef struct IOManagerState {$/;"	s	file:
IOManagerState	rts/win32/IOManager.c	/^} IOManagerState;$/;"	t	typeref:struct:IOManagerState	file:
IOWorkerProc	rts/win32/IOManager.c	/^IOWorkerProc(PVOID param)$/;"	f	file:
IO_MANAGER_DIE	rts/posix/Signals.c	135;"	d	file:
IO_MANAGER_DIE	rts/win32/ThrIOManager.c	20;"	d	file:
IO_MANAGER_SYNC	rts/posix/Signals.c	136;"	d	file:
IO_MANAGER_WAKEUP	rts/posix/Signals.c	134;"	d	file:
IO_MANAGER_WAKEUP	rts/win32/ThrIOManager.c	19;"	d	file:
IS_EXT	libraries/base/cbits/fs.c	206;"	d	file:
IS_EXT	libraries/base/cbits/fs.c	262;"	d	file:
IS_EXT	rts/fs.c	206;"	d	file:
IS_EXT	rts/fs.c	262;"	d	file:
IS_EXT	utils/fs/fs.c	285;"	d	file:
IS_EXT	utils/fs/fs.c	341;"	d	file:
IS_EXT	utils/lndir/fs.c	206;"	d	file:
IS_EXT	utils/lndir/fs.c	262;"	d	file:
IS_EXT	utils/unlit/fs.c	206;"	d	file:
IS_EXT	utils/unlit/fs.c	262;"	d	file:
IS_MMAPPED_BIT	libffi/build/src/dlmalloc.c	1297;"	d	file:
IS_MMAPPED_BIT	libffi/build/src/dlmalloc.c	1304;"	d	file:
ITERATIONS	testsuite/tests/rts/linker/linker_error.c	9;"	d	file:
ITERATIONS	testsuite/tests/rts/linker/linker_unload.c	7;"	d	file:
Identorder	utils/hp2ps/Deviation.c	/^Identorder(int iflag) \/* iflag is a funny three-way flag ? WDP 95\/03 *\/$/;"	f
IntFun	testsuite/tests/rts/T10296a_c.c	/^typedef int (* IntFun)(int a, int b);$/;"	t	file:
IsIdChar	utils/hp2ps/HpFile.c	/^IsIdChar(int ch)$/;"	f
KEEP_INLINES	rts/Inlines.c	4;"	d	file:
KEEP_LOCKCLOSURE	rts/Schedule.c	10;"	d	file:
KILOBYTE	utils/hp2ps/Axes.c	/^typedef enum {MEGABYTE, KILOBYTE, BYTE} mkb; $/;"	e	enum:__anon59	file:
KIND_PARAFFIN	nofib/imaginary/paraffins/paraffins.c	/^typedef enum kind_paraffin KIND_PARAFFIN;$/;"	t	typeref:enum:kind_paraffin	file:
KIND_RADICAL	nofib/imaginary/paraffins/paraffins.c	/^typedef enum kind_radical KIND_RADICAL;$/;"	t	typeref:enum:kind_radical	file:
Key	utils/hp2ps/Key.c	/^void Key(void)$/;"	f
KeyEntry	utils/hp2ps/Key.c	/^KeyEntry(floatish centreline, char *name, floatish colour)$/;"	f	file:
KeyWidth	utils/hp2ps/Dimensions.c	/^KeyWidth(void)$/;"	f	file:
L	rts/StgPrimFloat.c	42;"	d	file:
L	rts/StgPrimFloat.c	45;"	d	file:
LACKS_ERRNO_H	libffi/build/src/dlmalloc.c	462;"	d	file:
LACKS_STRINGS_H	libffi/build/src/dlmalloc.c	460;"	d	file:
LACKS_STRING_H	libffi/build/src/dlmalloc.c	459;"	d	file:
LACKS_SYS_MMAN_H	libffi/build/src/closures.c	322;"	d	file:
LACKS_SYS_MMAN_H	libffi/build/src/dlmalloc.c	458;"	d	file:
LACKS_SYS_MMAN_H	libffi/build/src/dlmalloc.c	472;"	d	file:
LACKS_SYS_PARAM_H	libffi/build/src/dlmalloc.c	457;"	d	file:
LACKS_SYS_TYPES_H	libffi/build/src/dlmalloc.c	461;"	d	file:
LACKS_UNISTD_H	libffi/build/src/dlmalloc.c	456;"	d	file:
LDV_recordDead	rts/ProfHeap.c	/^LDV_recordDead( const StgClosure *c, uint32_t size )$/;"	f
LENBEGINCODE	utils/unlit/unlit.c	62;"	d	file:
LENBEGINPSEUDOCODE	utils/unlit/unlit.c	69;"	d	file:
LENENDCODE	utils/unlit/unlit.c	64;"	d	file:
LENENDPSEUDOCODE	utils/unlit/unlit.c	71;"	d	file:
LENGTH	nofib/shootout/fasta/fasta-c.c	38;"	d	file:
LIBFFI_HIDE_BASIC_TYPES	libffi/build/src/types.c	29;"	d	file:
LIBFFI_NOT_DLL	rts/Interpreter.c	37;"	d	file:
LINKAGE_AREA_GPRS	libffi/build/src/powerpc/ffi_darwin.c	/^  LINKAGE_AREA_GPRS = 6$/;"	e	enum:__anon4	file:
LO	libffi/build/src/nios2/ffi.c	281;"	d	file:
LO	libffi/build/src/nios2/ffi.c	290;"	d	file:
LOAD_STACK_POINTERS	rts/Interpreter.c	78;"	d	file:
LOAD_THREAD_STATE	rts/Interpreter.c	87;"	d	file:
LOAD_THREAD_STATE	rts/Interpreter.c	91;"	d	file:
LOOPS	testsuite/tests/rts/testblockalloc.c	/^const int LOOPS    = 100;$/;"	v
LOOPS	testsuite/tests/rts/testheapalloced.c	/^const int LOOPS    = 20000;$/;"	v
LOOPS	testsuite/tests/rts/testmblockalloc.c	/^const int LOOPS    = 1000;$/;"	v
LTOP_BIT	libraries/base/cbits/primFloat.c	334;"	d	file:
Landscape	utils/hp2ps/PsFile.c	/^Landscape(void)$/;"	f	file:
LdvCensusForDead	rts/LdvProfile.c	/^LdvCensusForDead( uint32_t N )$/;"	f
LdvCensusKillAll	rts/LdvProfile.c	/^LdvCensusKillAll( void )$/;"	f
LibHSghcFastStringTable	rts/Globals.c	/^    LibHSghcFastStringTable,$/;"	e	enum:__anon37	file:
LibHSghcGlobalDynFlags	rts/Globals.c	/^    LibHSghcGlobalDynFlags,$/;"	e	enum:__anon37	file:
LibHSghcInitLinkerDone	rts/Globals.c	/^    LibHSghcInitLinkerDone,$/;"	e	enum:__anon37	file:
LibHSghcPersistentLinkerState	rts/Globals.c	/^    LibHSghcPersistentLinkerState,$/;"	e	enum:__anon37	file:
LibHSghcStaticOptions	rts/Globals.c	/^    LibHSghcStaticOptions,$/;"	e	enum:__anon37	file:
LibHSghcStaticOptionsReady	rts/Globals.c	/^    LibHSghcStaticOptionsReady,$/;"	e	enum:__anon37	file:
LibdwSession_	rts/Libdw.c	/^struct LibdwSession_ {$/;"	s	file:
Lock	rts/FileLock.c	/^} Lock;$/;"	t	typeref:struct:__anon36	file:
LongGCSync	rts/hooks/LongGCSync.c	/^void LongGCSync (uint32_t me USED_IF_THREADS, Time t STG_UNUSED)$/;"	f
LongGCSyncEnd	rts/hooks/LongGCSync.c	/^void LongGCSyncEnd (Time t)$/;"	f
LowResTimeToTime	rts/posix/Select.c	48;"	d	file:
LowResTimeToTime	rts/posix/Select.c	52;"	d	file:
M32_MAX_FREE_PAGE_POOL_SIZE	rts/linker/M32Alloc.c	207;"	d	file:
M32_MAX_PAGES	rts/linker/M32Alloc.c	142;"	d	file:
MAGIC	testsuite/tests/rts/T10904lib.c	5;"	d	file:
MAIN_CAP_SYM	rts/RtsSymbols.c	327;"	d	file:
MAIN_CAP_SYM	rts/RtsSymbols.c	329;"	d	file:
MALLINFO_FIELD_TYPE	libffi/build/src/dlmalloc.c	585;"	d	file:
MALLOC_ALIGNMENT	libffi/build/src/dlmalloc.c	501;"	d	file:
MALLOC_FAILURE_ACTION	libffi/build/src/dlmalloc.c	463;"	d	file:
MALLOC_FAILURE_ACTION	libffi/build/src/dlmalloc.c	535;"	d	file:
MAP_ANON	rts/posix/OSMem.c	58;"	d	file:
MAP_ANONYMOUS	libffi/build/src/dlmalloc.c	1311;"	d	file:
MAP_FAILED	rts/posix/OSMem.c	53;"	d	file:
MAP_LOW_MEM	rts/Linker.c	192;"	d	file:
MAP_LOW_MEM	rts/Linker.c	202;"	d	file:
MARK_ARRAY_CHUNK_LENGTH	rts/sm/NonMovingMark.c	38;"	d	file:
MAXALLOC	testsuite/tests/rts/testblockalloc.c	/^const int MAXALLOC = ((8 * 1024 * 1024) \/ BLOCK_SIZE - 1);$/;"	v
MAXALLOC	testsuite/tests/rts/testheapalloced.c	/^const int MAXALLOC = ((8 * 1024 * 1024) \/ BLOCK_SIZE - 1);$/;"	v
MAXALLOC	testsuite/tests/rts/testmblockalloc.c	/^const int MAXALLOC = 16;$/;"	v
MAXDEGREES	nofib/real/fem/inC/fem.c	9;"	d	file:
MAXELEMENTS	nofib/real/fem/inC/fem.c	10;"	d	file:
MAXLINE	rts/Linker.c	677;"	d	file:
MAXMATERIALS	nofib/real/fem/inC/fem.c	11;"	d	file:
MAXNODELOAD	nofib/real/fem/inC/fem.c	12;"	d	file:
MAXNODES	nofib/real/fem/inC/fem.c	8;"	d	file:
MAXPATHLEN	utils/lndir/lndir.c	73;"	d	file:
MAXSIZE	nofib/spectral/simple/simple.c	69;"	d	file:
MAXVOLUMESTIFF	nofib/real/fem/inC/fem.c	13;"	d	file:
MAX_CLASSES	libffi/build/src/x86/ffi64.c	100;"	d	file:
MAX_CODE	nofib/real/compress2/inC/prefix_trees.c	/^int MAX_CODE = 1000;$/;"	v
MAX_EACCES_RANGE	libraries/base/cbits/Win32Utils.c	87;"	d	file:
MAX_ENTRIES	nofib/real/compress/lzw.c	12;"	d	file:
MAX_EXEC_ERROR	libraries/base/cbits/Win32Utils.c	82;"	d	file:
MAX_FPRARGS	libffi/build/src/s390/ffi.c	48;"	d	file:
MAX_FPRARGS	libffi/build/src/s390/ffi.c	50;"	d	file:
MAX_GPRARGS	libffi/build/src/bfin/ffi.c	34;"	d	file:
MAX_GPRARGS	libffi/build/src/s390/ffi.c	44;"	d	file:
MAX_GPR_REGS	libffi/build/src/x86/ffi64.c	40;"	d	file:
MAX_NUM_RADICALS	nofib/imaginary/paraffins/paraffins.c	30;"	d	file:
MAX_N_OLD_SPTS	rts/StablePtr.c	103;"	d	file:
MAX_N_OLD_SPTS	rts/StablePtr.c	105;"	d	file:
MAX_REQUEST	libffi/build/src/dlmalloc.c	1699;"	d	file:
MAX_REQUESTS	rts/win32/AsyncIO.c	47;"	d	file:
MAX_SIEVE	nofib/imaginary/primes/csieve.c	4;"	d	file:
MAX_SIZE_PARAFFIN	nofib/imaginary/paraffins/paraffins.c	32;"	d	file:
MAX_SIZE_RADICAL	nofib/imaginary/paraffins/paraffins.c	31;"	d	file:
MAX_SIZE_T	libffi/build/src/dlmalloc.c	488;"	d	file:
MAX_SMALL_REQUEST	libffi/build/src/dlmalloc.c	2072;"	d	file:
MAX_SMALL_SIZE	libffi/build/src/dlmalloc.c	2071;"	d	file:
MAX_SPARE_INCALLS	rts/Task.c	253;"	d	file:
MAX_SSE_REGS	libffi/build/src/x86/ffi64.c	41;"	d	file:
MAX_SYMNAME	testsuite/tests/rts/linker/runner.c	7;"	d	file:
MAX_THUNK_SELECTOR_DEPTH	rts/sm/Evac.c	57;"	d	file:
MAX_THUNK_SELECTOR_DEPTH	rts/sm/NonMovingShortcut.c	17;"	d	file:
MAX_UNI_CHAR	libraries/base/cbits/WCsubst.c	92;"	d	file:
MB	rts/sm/Sanity.c	1148;"	d	file:
MCHUNK_SIZE	libffi/build/src/dlmalloc.c	1675;"	d	file:
MD5STEP	libraries/base/cbits/md5.c	146;"	d	file:
MEGABYTE	utils/hp2ps/Axes.c	/^typedef enum {MEGABYTE, KILOBYTE, BYTE} mkb; $/;"	e	enum:__anon59	file:
MEM_COMMIT	rts/posix/OSMem.c	/^    MEM_COMMIT = 2,$/;"	e	enum:__anon41	file:
MEM_MODULE	rts/xxhash.c	525;"	d	file:
MEM_RESERVE	rts/posix/OSMem.c	/^    MEM_RESERVE = 1,$/;"	e	enum:__anon41	file:
MEM_RESERVE_AND_COMMIT	rts/posix/OSMem.c	/^    MEM_RESERVE_AND_COMMIT = MEM_RESERVE | MEM_COMMIT$/;"	e	enum:__anon41	file:
MFAIL	libffi/build/src/dlmalloc.c	1293;"	d	file:
MILLIMETRES	utils/hp2ps/Main.c	/^typedef enum {POINTS, INCHES, MILLIMETRES} pim;$/;"	e	enum:__anon60	file:
MIN	libffi/build/src/metag/ffi.c	30;"	d	file:
MINGW_HAS_SECURE_API	libraries/base/cbits/Win32Utils.c	13;"	d	file:
MINGW_HAS_SECURE_API	rts/PathUtils.c	12;"	d	file:
MINGW_HAS_SECURE_API	utils/hsc2hs/cbits/utils.c	13;"	d	file:
MIN_ALIGN	rts/Arena.c	55;"	d	file:
MIN_CACHE_LINE_SIZE	libffi/build/src/powerpc/ffi_linux64.c	655;"	d	file:
MIN_CACHE_LINE_SIZE	libffi/build/src/powerpc/ffi_sysv.c	618;"	d	file:
MIN_CHUNK_SIZE	libffi/build/src/dlmalloc.c	1689;"	d	file:
MIN_EACCES_RANGE	libraries/base/cbits/Win32Utils.c	86;"	d	file:
MIN_EXEC_ERROR	libraries/base/cbits/Win32Utils.c	81;"	d	file:
MIN_LARGE_SIZE	libffi/build/src/dlmalloc.c	2070;"	d	file:
MIN_LINE_SIZE	libffi/build/src/powerpc/ffi_darwin.c	1154;"	d	file:
MIN_REQUEST	libffi/build/src/dlmalloc.c	1700;"	d	file:
MIN_SMALL_INDEX	libffi/build/src/dlmalloc.c	2292;"	d	file:
MIN_STACK_SIZE	libffi/build/src/pa/ffi.c	39;"	d	file:
MIN_STACK_WORDS	rts/Threads.c	44;"	d	file:
MISSINGBLANK	utils/unlit/unlit.c	51;"	d	file:
MISSINGENDCODE	utils/unlit/unlit.c	58;"	d	file:
MISSINGENDPSEUDOCODE	utils/unlit/unlit.c	67;"	d	file:
MLOCK_T	libffi/build/src/dlmalloc.c	1445;"	d	file:
MLOCK_T	libffi/build/src/dlmalloc.c	1457;"	d	file:
MLOCK_T	libffi/build/src/dlmalloc.c	1472;"	d	file:
MMAP_32BIT_BASE_DEFAULT	rts/Linker.c	222;"	d	file:
MMAP_32BIT_BASE_DEFAULT	rts/Linker.c	225;"	d	file:
MMAP_CHUNK_OVERHEAD	libffi/build/src/dlmalloc.c	1684;"	d	file:
MMAP_CLEARS	libffi/build/src/dlmalloc.c	464;"	d	file:
MMAP_CLEARS	libffi/build/src/dlmalloc.c	525;"	d	file:
MMAP_FLAGS	libffi/build/src/dlmalloc.c	1314;"	d	file:
MMAP_FLAGS	libffi/build/src/dlmalloc.c	1321;"	d	file:
MMAP_FOOT_PAD	libffi/build/src/dlmalloc.c	1686;"	d	file:
MMAP_PROT	libffi/build/src/dlmalloc.c	1309;"	d	file:
MORECORE	libffi/build/src/dlmalloc.c	548;"	d	file:
MORECORE_CONTIGUOUS	libffi/build/src/dlmalloc.c	545;"	d	file:
MORECORE_CONTIGUOUS	libffi/build/src/dlmalloc.c	551;"	d	file:
MPN_LOGIC_OP_WRAPPER	libraries/integer-gmp/cbits/wrappers.c	845;"	d	file:
MR_STAT	rts/Stats.c	867;"	d	file:
MR_STAT_GEN	rts/Stats.c	869;"	d	file:
MSPACES	libffi/build/src/dlmalloc.c	495;"	d	file:
MSPACES	libffi/build/src/dlmalloc.c	497;"	d	file:
MY_DMINEXP	rts/StgPrimFloat.c	31;"	d	file:
MY_FMINEXP	rts/StgPrimFloat.c	36;"	d	file:
M_GRANULARITY	libffi/build/src/dlmalloc.c	596;"	d	file:
M_MMAP_THRESHOLD	libffi/build/src/dlmalloc.c	597;"	d	file:
M_PI	nofib/spectral/fft2/fft.c	69;"	d	file:
M_TRIM_THRESHOLD	libffi/build/src/dlmalloc.c	595;"	d	file:
MainCapability	rts/Capability.c	/^Capability MainCapability;$/;"	v
MakeChunk	utils/hp2ps/HpFile.c	/^MakeChunk(void)$/;"	f	file:
MakeEntry	utils/hp2ps/HpFile.c	/^MakeEntry(char *name)$/;"	f
MakeIdentTable	utils/hp2ps/HpFile.c	/^MakeIdentTable(void)$/;"	f	file:
MallocFailHook	rts/hooks/MallocFail.c	/^MallocFailHook (W_ request_size \/* in bytes *\/, const char *msg)$/;"	f
MapHashData	rts/sm/Scav.c	/^} MapHashData;$/;"	t	typeref:struct:__anon47	file:
Marks	utils/hp2ps/Marks.c	/^Marks(void)$/;"	f
MaxCombinedHeight	utils/hp2ps/Scale.c	/^MaxCombinedHeight(void)$/;"	f
MaxStoreKey	rts/Globals.c	/^    MaxStoreKey$/;"	e	enum:__anon37	file:
Maybe_Stable_Names	rts/RtsSymbols.c	39;"	d	file:
N	rts/sm/GC.c	/^uint32_t N;$/;"	v
NACQ_ASSERT	rts/STM.c	104;"	d	file:
NACQ_ASSERT	rts/STM.c	107;"	d	file:
NARGS	libffi/build/testsuite/libffi.call/many2.c	11;"	d	file:
NEED_GOT	rts/linker/Elf.c	98;"	d	file:
NEED_PLT	rts/linker/Elf.c	99;"	d	file:
NEW_STRUCT	nofib/imaginary/paraffins/paraffins.c	20;"	d	file:
NFREGARG	libffi/build/src/sh/ffi.c	35;"	d	file:
NFREGARG	libffi/build/src/sh64/ffi.c	34;"	d	file:
NGREGARG	libffi/build/src/sh/ffi.c	33;"	d	file:
NGREGARG	libffi/build/src/sh64/ffi.c	33;"	d	file:
NMATCH	rts/Linker.c	672;"	d	file:
NO_MALLINFO	libffi/build/src/closures.c	294;"	d	file:
NO_MALLINFO	libffi/build/src/dlmalloc.c	582;"	d	file:
NSMALLBINS	libffi/build/src/dlmalloc.c	2065;"	d	file:
NTREEBINS	libffi/build/src/dlmalloc.c	2066;"	d	file:
NULL	utils/coverity/model.c	16;"	d	file:
NULLSTR	utils/unlit/unlit.c	49;"	d	file:
NUMCAT_CC	libraries/base/cbits/WCsubst.c	/^    NUMCAT_CC,  \/* Other, Control *\/$/;"	e	enum:__anon25	file:
NUMCAT_CF	libraries/base/cbits/WCsubst.c	/^    NUMCAT_CF,  \/* Other, Format *\/$/;"	e	enum:__anon25	file:
NUMCAT_CN	libraries/base/cbits/WCsubst.c	/^    NUMCAT_CN   \/* Other, Not Assigned *\/$/;"	e	enum:__anon25	file:
NUMCAT_CO	libraries/base/cbits/WCsubst.c	/^    NUMCAT_CO,  \/* Other, Private Use *\/$/;"	e	enum:__anon25	file:
NUMCAT_CS	libraries/base/cbits/WCsubst.c	/^    NUMCAT_CS,  \/* Other, Surrogate *\/$/;"	e	enum:__anon25	file:
NUMCAT_LL	libraries/base/cbits/WCsubst.c	/^    NUMCAT_LL,  \/* Letter, Lowercase *\/$/;"	e	enum:__anon25	file:
NUMCAT_LM	libraries/base/cbits/WCsubst.c	/^    NUMCAT_LM,  \/* Letter, Modifier *\/$/;"	e	enum:__anon25	file:
NUMCAT_LO	libraries/base/cbits/WCsubst.c	/^    NUMCAT_LO,  \/* Letter, Other *\/$/;"	e	enum:__anon25	file:
NUMCAT_LT	libraries/base/cbits/WCsubst.c	/^    NUMCAT_LT,  \/* Letter, Titlecase *\/$/;"	e	enum:__anon25	file:
NUMCAT_LU	libraries/base/cbits/WCsubst.c	/^    NUMCAT_LU,  \/* Letter, Uppercase *\/$/;"	e	enum:__anon25	file:
NUMCAT_MC	libraries/base/cbits/WCsubst.c	/^    NUMCAT_MC,  \/* Mark, Spacing Combining *\/$/;"	e	enum:__anon25	file:
NUMCAT_ME	libraries/base/cbits/WCsubst.c	/^    NUMCAT_ME,  \/* Mark, Enclosing *\/$/;"	e	enum:__anon25	file:
NUMCAT_MN	libraries/base/cbits/WCsubst.c	/^    NUMCAT_MN,  \/* Mark, Non-Spacing *\/$/;"	e	enum:__anon25	file:
NUMCAT_ND	libraries/base/cbits/WCsubst.c	/^    NUMCAT_ND,  \/* Number, Decimal *\/$/;"	e	enum:__anon25	file:
NUMCAT_NL	libraries/base/cbits/WCsubst.c	/^    NUMCAT_NL,  \/* Number, Letter *\/$/;"	e	enum:__anon25	file:
NUMCAT_NO	libraries/base/cbits/WCsubst.c	/^    NUMCAT_NO,  \/* Number, Other *\/$/;"	e	enum:__anon25	file:
NUMCAT_PC	libraries/base/cbits/WCsubst.c	/^    NUMCAT_PC,  \/* Punctuation, Connector *\/$/;"	e	enum:__anon25	file:
NUMCAT_PD	libraries/base/cbits/WCsubst.c	/^    NUMCAT_PD,  \/* Punctuation, Dash *\/$/;"	e	enum:__anon25	file:
NUMCAT_PE	libraries/base/cbits/WCsubst.c	/^    NUMCAT_PE,  \/* Punctuation, Close *\/$/;"	e	enum:__anon25	file:
NUMCAT_PF	libraries/base/cbits/WCsubst.c	/^    NUMCAT_PF,  \/* Punctuation, Final quote *\/$/;"	e	enum:__anon25	file:
NUMCAT_PI	libraries/base/cbits/WCsubst.c	/^    NUMCAT_PI,  \/* Punctuation, Initial quote *\/$/;"	e	enum:__anon25	file:
NUMCAT_PO	libraries/base/cbits/WCsubst.c	/^    NUMCAT_PO,  \/* Punctuation, Other *\/$/;"	e	enum:__anon25	file:
NUMCAT_PS	libraries/base/cbits/WCsubst.c	/^    NUMCAT_PS,  \/* Punctuation, Open *\/$/;"	e	enum:__anon25	file:
NUMCAT_SC	libraries/base/cbits/WCsubst.c	/^    NUMCAT_SC,  \/* Symbol, Currency *\/$/;"	e	enum:__anon25	file:
NUMCAT_SK	libraries/base/cbits/WCsubst.c	/^    NUMCAT_SK,  \/* Symbol, Modifier *\/$/;"	e	enum:__anon25	file:
NUMCAT_SM	libraries/base/cbits/WCsubst.c	/^    NUMCAT_SM,  \/* Symbol, Math *\/$/;"	e	enum:__anon25	file:
NUMCAT_SO	libraries/base/cbits/WCsubst.c	/^    NUMCAT_SO,  \/* Symbol, Other *\/$/;"	e	enum:__anon25	file:
NUMCAT_ZL	libraries/base/cbits/WCsubst.c	/^    NUMCAT_ZL,  \/* Separator, Line *\/$/;"	e	enum:__anon25	file:
NUMCAT_ZP	libraries/base/cbits/WCsubst.c	/^    NUMCAT_ZP,  \/* Separator, Paragraph *\/$/;"	e	enum:__anon25	file:
NUMCAT_ZS	libraries/base/cbits/WCsubst.c	/^    NUMCAT_ZS,  \/* Separator, Space *\/$/;"	e	enum:__anon25	file:
NUM_ARG_REGS	libffi/build/src/tile/ffi.c	38;"	d	file:
NUM_BLOCKS	libraries/base/cbits/WCsubst.c	93;"	d	file:
NUM_CONVBLOCKS	libraries/base/cbits/WCsubst.c	94;"	d	file:
NUM_FPR_ARG_REGISTERS	libffi/build/src/powerpc/ffi_darwin.c	/^  NUM_FPR_ARG_REGISTERS = 13,$/;"	e	enum:__anon4	file:
NUM_FPR_ARG_REGISTERS	libffi/build/src/powerpc/ffi_sysv.c	41;"	d	file:
NUM_FPR_ARG_REGISTERS64	libffi/build/src/powerpc/ffi_linux64.c	/^  NUM_FPR_ARG_REGISTERS64 = 13$/;"	e	enum:__anon7	file:
NUM_FREE_LISTS	rts/sm/BlockAlloc.c	157;"	d	file:
NUM_GPR_ARG_REGISTERS	libffi/build/src/powerpc/ffi_darwin.c	/^  NUM_GPR_ARG_REGISTERS = 8,$/;"	e	enum:__anon4	file:
NUM_GPR_ARG_REGISTERS	libffi/build/src/powerpc/ffi_sysv.c	40;"	d	file:
NUM_GPR_ARG_REGISTERS64	libffi/build/src/powerpc/ffi_linux64.c	/^  NUM_GPR_ARG_REGISTERS64 = 8,$/;"	e	enum:__anon7	file:
NUM_LAT1BLOCKS	libraries/base/cbits/WCsubst.c	96;"	d	file:
NUM_OBJS	testsuite/tests/rts/linker/unload_multiple_objs/linker_unload_multiple_objs.c	11;"	d	file:
NUM_RULES	libraries/base/cbits/WCsubst.c	97;"	d	file:
NUM_SPACEBLOCKS	libraries/base/cbits/WCsubst.c	95;"	d	file:
NUM_SUB_RADICALS	nofib/imaginary/paraffins/paraffins.c	29;"	d	file:
N_COLOUR_SHADES	utils/hp2ps/Shade.c	79;"	d	file:
N_HASH	utils/hp2ps/HpFile.c	452;"	d	file:
N_MARKS	utils/hp2ps/HpFile.c	17;"	d	file:
N_MONO_SHADES	utils/hp2ps/Shade.c	72;"	d	file:
N_PENDING_EVENTS	rts/win32/ConsoleHandler.c	25;"	d	file:
N_PENDING_HANDLERS	rts/posix/Signals.c	229;"	d	file:
N_SAMPLES	utils/hp2ps/HpFile.c	18;"	d	file:
N_X_MARKS	utils/hp2ps/Axes.c	49;"	d	file:
N_Y_MARKS	utils/hp2ps/Axes.c	135;"	d	file:
NeedVarargsPrototypes	utils/lndir/lndir.c	46;"	d	file:
NewIOWorkerThread	rts/win32/IOManager.c	/^NewIOWorkerThread(IOManagerState* iom)$/;"	f	file:
NewWorkQueue	rts/win32/WorkQueue.c	/^NewWorkQueue()$/;"	f
NextPage	utils/hp2ps/PsFile.c	/^void NextPage(void) {$/;"	f
OBJPATH	testsuite/tests/rts/linker/linker_unload.c	10;"	d	file:
OBJPATH	testsuite/tests/rts/linker/linker_unload.c	12;"	d	file:
OCSectionIndex	rts/CheckUnload.c	/^} OCSectionIndex;$/;"	t	typeref:struct:__anon34	file:
OCSectionIndices	rts/CheckUnload.c	/^} OCSectionIndices;$/;"	t	typeref:struct:__anon35	file:
OFS_INT16	libffi/build/src/sh/ffi.c	507;"	d	file:
OFS_INT16	libffi/build/src/sh/ffi.c	510;"	d	file:
OFS_INT8	libffi/build/src/sh/ffi.c	506;"	d	file:
OFS_INT8	libffi/build/src/sh/ffi.c	509;"	d	file:
ONETHOUSAND	utils/hp2ps/Utilities.c	58;"	d	file:
ONLY_MSPACES	libffi/build/src/dlmalloc.c	491;"	d	file:
OPS	libffi/build/src/tile/ffi.c	243;"	d	file:
OPS	libffi/build/src/tile/ffi.c	251;"	d	file:
OPTION_SAFE	rts/RtsFlags.c	803;"	d	file:
OPTION_UNSAFE	rts/RtsFlags.c	804;"	d	file:
OnExitHook	rts/hooks/OnExit.c	/^OnExitHook (void)$/;"	f
OneTwoFive	utils/hp2ps/Axes.c	/^OneTwoFive(floatish y)$/;"	f	file:
OpenFile	utils/hp2ps/Utilities.c	/^OpenFile(char *s, char *mode)$/;"	f
OpenPTY	nofib/real/hidden/etc/nbpip.c	/^static OpenPTY () {$/;"	f	file:
OpenedSO	rts/Linker.c	/^   OpenedSO;$/;"	t	typeref:struct:_OpenedSO	file:
OrderFor	utils/hp2ps/Reorder.c	/^OrderFor(char *ident, int order)$/;"	f
OrderOf	utils/hp2ps/Reorder.c	/^OrderOf(char *ident)$/;"	f	file:
OutOfHeapHook	rts/hooks/OutOfHeap.c	/^OutOfHeapHook (W_ request_size, W_ heap_size) \/* both sizes in bytes *\/$/;"	f
PACKAGE	rts/Printer.c	755;"	d	file:
PACKAGE_VERSION	rts/Printer.c	756;"	d	file:
PARAFFIN	nofib/imaginary/paraffins/paraffins.c	/^  PARAFFIN;$/;"	t	typeref:struct:paraffin	file:
PARALLEL_GC	rts/sm/Evac_thr.c	2;"	d	file:
PARALLEL_GC	rts/sm/Scav_thr.c	2;"	d	file:
PC	rts/Ticky.c	41;"	d	file:
PCSIO	rts/win32/OSThreads.c	/^typedef BOOL (WINAPI *PCSIO)(HANDLE);$/;"	t	file:
PGM	rts/RtsFlags.c	83;"	d	file:
PINUSE_BIT	libffi/build/src/dlmalloc.c	1721;"	d	file:
POINTS	utils/hp2ps/Main.c	/^typedef enum {POINTS, INCHES, MILLIMETRES} pim;$/;"	e	enum:__anon60	file:
POP	testsuite/tests/rts/testwsdeque.c	9;"	d	file:
POSTACTION	libffi/build/src/dlmalloc.c	2210;"	d	file:
POSTACTION	libffi/build/src/dlmalloc.c	2218;"	d	file:
PREACTION	libffi/build/src/dlmalloc.c	2209;"	d	file:
PREACTION	libffi/build/src/dlmalloc.c	2214;"	d	file:
PRIME32_1	rts/xxhash.c	/^static const U32 PRIME32_1 = 2654435761U;$/;"	v	file:
PRIME32_2	rts/xxhash.c	/^static const U32 PRIME32_2 = 2246822519U;$/;"	v	file:
PRIME32_3	rts/xxhash.c	/^static const U32 PRIME32_3 = 3266489917U;$/;"	v	file:
PRIME32_4	rts/xxhash.c	/^static const U32 PRIME32_4 =  668265263U;$/;"	v	file:
PRIME32_5	rts/xxhash.c	/^static const U32 PRIME32_5 =  374761393U;$/;"	v	file:
PRIME64_1	rts/xxhash.c	/^static const U64 PRIME64_1 = 11400714785074694791ULL;$/;"	v	file:
PRIME64_2	rts/xxhash.c	/^static const U64 PRIME64_2 = 14029467366897019727ULL;$/;"	v	file:
PRIME64_3	rts/xxhash.c	/^static const U64 PRIME64_3 =  1609587929392839161ULL;$/;"	v	file:
PRIME64_4	rts/xxhash.c	/^static const U64 PRIME64_4 =  9650029242287828579ULL;$/;"	v	file:
PRIME64_5	rts/xxhash.c	/^static const U64 PRIME64_5 =  2870177450012600261ULL;$/;"	v	file:
PRINT_NODE_MATRIX	nofib/spectral/simple/simple.c	113;"	d	file:
PRINT_ZONE_MATRIX	nofib/spectral/simple/simple.c	114;"	d	file:
PROCEED_ON_ERROR	libffi/build/src/dlmalloc.c	513;"	d	file:
PROFILING	includes/dist-derivedconstants/header/tmp.c	9;"	d	file:
PROFILING_BUILD_ONLY	rts/RtsFlags.c	834;"	d	file:
PR_CTR	rts/Ticky.c	202;"	d	file:
PR_HST	rts/Ticky.c	209;"	d	file:
PR_HST_BINS	rts/Ticky.c	313;"	d	file:
PR_HST_BINS	rts/Ticky.c	320;"	d	file:
PTR64	libffi/build/src/ia64/ffi.c	/^typedef void *PTR64 __attribute__((mode(DI)));$/;"	t	file:
PUSH_FIELD	rts/sm/NonMovingMark.c	1182;"	d	file:
PUSH_FIELD	rts/sm/NonMovingMark.c	1608;"	d	file:
Page	rts/linker/elf_reloc_aarch64.c	16;"	d	file:
PlotCurveLeftToRight	utils/hp2ps/Curves.c	/^PlotCurveLeftToRight(floatish *x, floatish *y)$/;"	f	file:
PlotCurveRightToLeft	utils/hp2ps/Curves.c	/^PlotCurveRightToLeft(floatish *x, floatish *y)$/;"	f	file:
Point	libffi/build/testsuite/libffi.call/pyobjc-tc.c	/^typedef struct Point {$/;"	s	file:
Point	libffi/build/testsuite/libffi.call/pyobjc-tc.c	/^} Point;$/;"	t	typeref:struct:Point	file:
PoolEntry	rts/Pool.c	/^} PoolEntry;$/;"	t	typeref:struct:PoolEntry_	file:
PoolEntry_	rts/Pool.c	/^typedef struct PoolEntry_ {$/;"	s	file:
Pool_	rts/Pool.c	/^struct Pool_ {$/;"	s	file:
Portrait	utils/hp2ps/PsFile.c	/^Portrait(void)$/;"	f	file:
PrintData	rts/Libdw.c	/^struct PrintData {$/;"	s	file:
PrintTickyInfo	rts/Ticky.c	/^PrintTickyInfo(void)$/;"	f
ProcHandle	utils/hsc2hs/cbits/utils.c	/^typedef PHANDLE ProcHandle;$/;"	t	file:
Prologue	utils/hp2ps/PsFile.c	/^Prologue(void)$/;"	f	file:
PtyName	nofib/real/hidden/etc/nbpip.c	/^static char PtyName[32], TtyName[32];$/;"	v	file:
PtyProto	nofib/real/hidden/etc/nbpip.c	6;"	d	file:
PutAuxFile	utils/hp2ps/AuxFile.c	/^PutAuxFile(FILE *auxfp)$/;"	f
PutPsFile	utils/hp2ps/PsFile.c	/^PutPsFile(void)$/;"	f
RA	nofib/shootout/fasta/fasta-c.c	35;"	d	file:
RADICAL	nofib/imaginary/paraffins/paraffins.c	/^  RADICAL;$/;"	t	typeref:struct:radical	file:
RC	nofib/shootout/fasta/fasta-c.c	36;"	d	file:
RCSid	nofib/spectral/fft2/fft.c	/^static char RCSid[] = "$Id: fft.c,v 1.2 2001\/05\/27 17:37:59 sof Exp $";$/;"	v	file:
RECURSION_TRUNCATES	rts/Profiling.c	530;"	d	file:
RELEASE_LOCK	libffi/build/src/dlmalloc.c	1448;"	d	file:
RELEASE_LOCK	libffi/build/src/dlmalloc.c	1460;"	d	file:
RELEASE_LOCK	libffi/build/src/dlmalloc.c	1492;"	d	file:
RELEASE_MAGIC_INIT_LOCK	libffi/build/src/dlmalloc.c	1515;"	d	file:
RELEASE_MAGIC_INIT_LOCK	libffi/build/src/dlmalloc.c	1518;"	d	file:
RELEASE_MORECORE_LOCK	libffi/build/src/dlmalloc.c	1507;"	d	file:
RELEASE_MORECORE_LOCK	libffi/build/src/dlmalloc.c	1510;"	d	file:
REPORT	rts/Stats.c	586;"	d	file:
REPORT_PCT	rts/Stats.c	593;"	d	file:
RESERVE_FLAGS	rts/posix/OSMem.c	63;"	d	file:
RESERVE_FLAGS	rts/posix/OSMem.c	65;"	d	file:
RESERVE_FLAGS	rts/posix/OSMem.c	67;"	d	file:
RETURN_TO_SCHEDULER	rts/Interpreter.c	111;"	d	file:
RETURN_TO_SCHEDULER_NO_PAUSE	rts/Interpreter.c	128;"	d	file:
REUSE_MEMORY	rts/STM.c	164;"	d	file:
RMAX	nofib/shootout/fasta/fasta-c.c	34;"	d	file:
ROUNDUP	rts/Arena.c	58;"	d	file:
ROUND_DOWN	rts/linker/M32Alloc.c	136;"	d	file:
ROUND_SIZE	libffi/build/src/s390/ffi.c	54;"	d	file:
ROUND_TO_CACHE_LINE	rts/Task.c	208;"	d	file:
ROUND_UP	libffi/build/src/pa/ffi.c	37;"	d	file:
ROUND_UP	rts/linker/M32Alloc.c	135;"	d	file:
ROUND_UP_WDS	rts/Interpreter.c	1748;"	d	file:
RP_start_time	rts/Stats.c	/^static Time RP_start_time  = 0, RP_tot_time  = 0;  \/\/ retainer prof user time$/;"	v	file:
RP_tot_time	rts/Stats.c	/^static Time RP_start_time  = 0, RP_tot_time  = 0;  \/\/ retainer prof user time$/;"	v	file:
RPe_start_time	rts/Stats.c	/^static Time RPe_start_time = 0, RPe_tot_time = 0;  \/\/ retainer prof elap time$/;"	v	file:
RPe_tot_time	rts/Stats.c	/^static Time RPe_start_time = 0, RPe_tot_time = 0;  \/\/ retainer prof elap time$/;"	v	file:
RSP_DELTA	rts/StgCRun.c	429;"	d	file:
RSP_DELTA	rts/StgCRun.c	539;"	d	file:
RTCHECK	libffi/build/src/dlmalloc.c	2457;"	d	file:
RTCHECK	libffi/build/src/dlmalloc.c	2459;"	d	file:
RTCHECK	libffi/build/src/dlmalloc.c	2462;"	d	file:
RTS	rts/RtsFlags.c	82;"	d	file:
RTS_DARWIN_ONLY_SYMBOLS	rts/RtsSymbols.c	269;"	d	file:
RTS_DARWIN_ONLY_SYMBOLS	rts/RtsSymbols.c	315;"	d	file:
RTS_FD_IS_BLOCKING	rts/posix/Select.c	/^    RTS_FD_IS_BLOCKING,$/;"	e	enum:FdState	file:
RTS_FD_IS_INVALID	rts/posix/Select.c	/^    RTS_FD_IS_INVALID,$/;"	e	enum:FdState	file:
RTS_FD_IS_READY	rts/posix/Select.c	/^    RTS_FD_IS_READY = 0,$/;"	e	enum:FdState	file:
RTS_INTCHAR_SYMBOLS	rts/RtsSymbols.c	519;"	d	file:
RTS_INTCHAR_SYMBOLS	rts/RtsSymbols.c	521;"	d	file:
RTS_LIBDW_SYMBOLS	rts/RtsSymbols.c	45;"	d	file:
RTS_LIBFFI_SYMBOLS	rts/RtsSymbols.c	349;"	d	file:
RTS_LIBGCC_SYMBOLS	rts/RtsSymbols.c	984;"	d	file:
RTS_LIBGCC_SYMBOLS	rts/RtsSymbols.c	995;"	d	file:
RTS_LIBGCC_SYMBOLS	rts/RtsSymbols.c	999;"	d	file:
RTS_MINGW_COMPAT_SYMBOLS	rts/RtsSymbols.c	152;"	d	file:
RTS_MINGW_COMPAT_SYMBOLS	rts/RtsSymbols.c	264;"	d	file:
RTS_MINGW_ONLY_SYMBOLS	rts/RtsSymbols.c	130;"	d	file:
RTS_MINGW_ONLY_SYMBOLS	rts/RtsSymbols.c	263;"	d	file:
RTS_OPENBSD_ONLY_SYMBOLS	rts/RtsSymbols.c	319;"	d	file:
RTS_OPENBSD_ONLY_SYMBOLS	rts/RtsSymbols.c	323;"	d	file:
RTS_POSIX_ONLY_SYMBOLS	rts/RtsSymbols.c	54;"	d	file:
RTS_POSIX_ONLY_SYMBOLS	rts/RtsSymbols.c	66;"	d	file:
RTS_PROF_SYMBOLS	rts/RtsSymbols.c	527;"	d	file:
RTS_PROF_SYMBOLS	rts/RtsSymbols.c	538;"	d	file:
RTS_RET_SYMBOLS	rts/RtsSymbols.c	366;"	d	file:
RTS_RET_SYMBOLS	rts/RtsSymbols.c	368;"	d	file:
RTS_SYMBOLS	rts/RtsSymbols.c	541;"	d	file:
RTS_TICKY_SYMBOLS	rts/RtsSymbols.c	392;"	d	file:
RTS_USER_SIGNALS_SYMBOLS	rts/RtsSymbols.c	333;"	d	file:
RTS_USER_SIGNALS_SYMBOLS	rts/RtsSymbols.c	341;"	d	file:
RTS_WIN32_ONLY	rts/RtsSymbols.c	69;"	d	file:
RTS_WIN32_ONLY	rts/RtsSymbols.c	71;"	d	file:
RTS_WIN64_ONLY	rts/RtsSymbols.c	75;"	d	file:
RTS_WIN64_ONLY	rts/RtsSymbols.c	77;"	d	file:
Rect	libffi/build/testsuite/libffi.call/pyobjc-tc.c	/^typedef struct Rect {$/;"	s	file:
Rect	libffi/build/testsuite/libffi.call/pyobjc-tc.c	/^} Rect;$/;"	t	typeref:struct:Rect	file:
RegisterWorkItem	rts/win32/IOManager.c	/^RegisterWorkItem(IOManagerState* ioMan,$/;"	f	file:
ReleaseResource	driver/ghci/ghci.c	/^void ReleaseResource(void) {$/;"	f
Reorder	utils/hp2ps/Reorder.c	/^Reorder(void)$/;"	f
Round	utils/hp2ps/Axes.c	/^Round(floatish y)$/;"	f	file:
RtsFlags	rts/RtsFlags.c	/^RTS_FLAGS RtsFlags;$/;"	v
S	utils/hsc2hs/test/asm/tmp.c	/^struct S { int unused; };$/;"	s	file:
SAVE_STACK_POINTERS	rts/Interpreter.c	83;"	d	file:
SAVE_THREAD_STATE	rts/Interpreter.c	100;"	d	file:
SAVE_THREAD_STATE	rts/Interpreter.c	96;"	d	file:
SCRATCH_SIZE	testsuite/tests/rts/testwsdeque.c	7;"	d	file:
SECTION_INDEX_VALID	rts/linker/Elf.c	442;"	d	file:
SEED	testsuite/tests/rts/testblockalloc.c	/^const int SEED     = 0xf00f00;$/;"	v
SEED	testsuite/tests/rts/testheapalloced.c	/^const int SEED     = 0xf00f00;$/;"	v
SEED	testsuite/tests/rts/testmblockalloc.c	/^const int SEED     = 0xf00f00;$/;"	v
SEGMENT_FILLED	rts/sm/NonMovingSweep.c	/^    SEGMENT_FILLED    \/\/ segment is full: place on filled list$/;"	e	enum:SweepResult	file:
SEGMENT_FREE	rts/sm/NonMovingSweep.c	/^    SEGMENT_FREE,     \/\/ segment is empty: place on free list$/;"	e	enum:SweepResult	file:
SEGMENT_PARTIAL	rts/sm/NonMovingSweep.c	/^    SEGMENT_PARTIAL,  \/\/ segment is partially filled: place on active list$/;"	e	enum:SweepResult	file:
SHEBANG	utils/unlit/unlit.c	/^typedef enum { START, BLANK, TEXT, DEFN, BEGIN, END, \/*PSEUDO,*\/ ENDFILE, HASH, SHEBANG } line;$/;"	e	enum:__anon61	file:
SIX_SIZE_T_SIZES	libffi/build/src/dlmalloc.c	1269;"	d	file:
SIZE	libraries/process/tests/process007_fd.c	7;"	d	file:
SIZE_T_BITSIZE	libffi/build/src/dlmalloc.c	1260;"	d	file:
SIZE_T_ONE	libffi/build/src/dlmalloc.c	1265;"	d	file:
SIZE_T_SIZE	libffi/build/src/dlmalloc.c	1259;"	d	file:
SIZE_T_TWO	libffi/build/src/dlmalloc.c	1266;"	d	file:
SIZE_T_ZERO	libffi/build/src/dlmalloc.c	1264;"	d	file:
SMALLBIN_SHIFT	libffi/build/src/dlmalloc.c	2067;"	d	file:
SMALLBIN_WIDTH	libffi/build/src/dlmalloc.c	2068;"	d	file:
SNT_size	rts/StableName.c	/^unsigned int SNT_size = 0;$/;"	v
SPT_size	rts/StablePtr.c	/^static unsigned int SPT_size = 0;$/;"	v	file:
SPURIOUSENDCODE	utils/unlit/unlit.c	59;"	d	file:
SSE_CLASS_P	libffi/build/src/x86/ffi64.c	102;"	d	file:
STACK_ARG_SIZE	libffi/build/src/cris/ffi.c	32;"	d	file:
STACK_ARG_SIZE	libffi/build/src/prep_cif.c	32;"	d	file:
START	utils/unlit/unlit.c	/^typedef enum { START, BLANK, TEXT, DEFN, BEGIN, END, \/*PSEUDO,*\/ ENDFILE, HASH, SHEBANG } line;$/;"	e	enum:__anon61	file:
STATIC_INLINE	rts/sm/Compact.c	33;"	d	file:
STATIC_INLINE	rts/sm/Compact.c	34;"	d	file:
STG_GLOBAL	rts/StgCRun.c	118;"	d	file:
STG_GLOBAL	rts/StgCRun.c	121;"	d	file:
STG_GLOBAL	rts/StgCRun.c	244;"	d	file:
STG_GLOBAL	rts/StgCRun.c	633;"	d	file:
STG_GLOBAL	testsuite/tests/rts/spalign.c	4;"	d	file:
STG_GLOBAL	testsuite/tests/rts/spalign.c	6;"	d	file:
STG_HIDDEN	rts/StgCRun.c	119;"	d	file:
STG_HIDDEN	rts/StgCRun.c	122;"	d	file:
STG_HIDDEN	rts/StgCRun.c	247;"	d	file:
STG_HIDDEN	rts/StgCRun.c	249;"	d	file:
STG_HIDDEN	rts/StgCRun.c	635;"	d	file:
STRINGIFY	rts/linker/elf_plt.c	11;"	d	file:
STRUCT_VALUE_ADDRESS_WITH_ARG	libffi/build/src/sh/ffi.c	39;"	d	file:
STRUCT_VALUE_ADDRESS_WITH_ARG	libffi/build/src/sh/ffi.c	41;"	d	file:
SYMLINKS	utils/lndir/lndir.c	103;"	d	file:
SaveCurve	utils/hp2ps/Curves.c	/^SaveCurve(floatish *y, floatish *py)$/;"	f	file:
Scale	utils/hp2ps/Scale.c	/^Scale(void)$/;"	f
Scaling	utils/hp2ps/PsFile.c	/^Scaling(floatish epsfscale)$/;"	f	file:
SetPSColour	utils/hp2ps/Shade.c	/^SetPSColour(floatish shade)$/;"	f
SetThreadGroupAffinityProc	rts/win32/OSThreads.c	/^typedef BOOL(WINAPI *SetThreadGroupAffinityProc)(HANDLE, const GROUP_AFFINITY*, PGROUP_AFFINITY);$/;"	t	file:
ShadeCurve	utils/hp2ps/Curves.c	/^ShadeCurve(floatish *x, floatish *y, floatish *py, floatish shade)$/;"	f	file:
ShadeFor	utils/hp2ps/Shade.c	/^ShadeFor(char *ident, floatish shade)$/;"	f
ShadeOf	utils/hp2ps/Shade.c	/^ShadeOf(char *ident)$/;"	f
ShutdownIOManager	rts/win32/IOManager.c	/^void ShutdownIOManager ( bool wait_threads )$/;"	f
Size	libffi/build/testsuite/libffi.call/pyobjc-tc.c	/^typedef struct Size {$/;"	s	file:
Size	libffi/build/testsuite/libffi.call/pyobjc-tc.c	/^} Size;$/;"	t	typeref:struct:Size	file:
SpB	rts/Interpreter.c	146;"	d	file:
SpW	rts/Interpreter.c	145;"	d	file:
Sp_addB	rts/Interpreter.c	140;"	d	file:
Sp_addW	rts/Interpreter.c	142;"	d	file:
Sp_minusB	rts/Interpreter.c	135;"	d	file:
Sp_minusW	rts/Interpreter.c	138;"	d	file:
Sp_plusB	rts/Interpreter.c	134;"	d	file:
Sp_plusW	rts/Interpreter.c	137;"	d	file:
Sp_subB	rts/Interpreter.c	141;"	d	file:
Sp_subW	rts/Interpreter.c	143;"	d	file:
StackOverflowHook	ghc/hschooks.c	/^StackOverflowHook (StgWord stack_size)    \/* in bytes *\/$/;"	f
StackOverflowHook	rts/hooks/StackOverflow.c	/^StackOverflowHook (W_ stack_size)    \/* in bytes *\/$/;"	f
StandardSpecialComments	utils/hp2ps/PsFile.c	/^StandardSpecialComments(void)$/;"	f	file:
StartIOManager	rts/win32/IOManager.c	/^StartIOManager(void)$/;"	f
StgReturn	rts/StgCRun.c	/^StgFunPtr StgReturn(void)$/;"	f
StgRun	rts/StgCRun.c	/^StgRegTable * StgRun(StgFunPtr f, StgRegTable *basereg STG_UNUSED)$/;"	f
StgRun	rts/StgCRun.c	/^StgRun(StgFunPtr f, StgRegTable *basereg) {$/;"	f
StoreKey	rts/Globals.c	/^} StoreKey;$/;"	t	typeref:enum:__anon37	file:
StoreSample	utils/hp2ps/HpFile.c	/^StoreSample(struct entry *en, intish bucket, floatish value)$/;"	f
StringSize	utils/hp2ps/Dimensions.c	/^StringSize(char *s)$/;"	f
SubmitWork	rts/win32/WorkQueue.c	/^SubmitWork ( WorkQueue* pq, void* pw )$/;"	f
SweepResult	rts/sm/NonMovingSweep.c	/^enum SweepResult {$/;"	g	file:
SymE_HasDataProto	rts/RtsSymbols.c	1036;"	d	file:
SymE_HasDataProto	rts/RtsSymbols.c	1046;"	d	file:
SymE_HasProto	rts/RtsSymbols.c	1006;"	d	file:
SymE_HasProto	rts/RtsSymbols.c	1017;"	d	file:
SymE_HasProto	rts/RtsSymbols.c	1035;"	d	file:
SymE_HasProto	rts/RtsSymbols.c	1044;"	d	file:
SymE_NeedsDataProto	rts/RtsSymbols.c	1009;"	d	file:
SymE_NeedsDataProto	rts/RtsSymbols.c	1012;"	d	file:
SymE_NeedsDataProto	rts/RtsSymbols.c	1016;"	d	file:
SymE_NeedsDataProto	rts/RtsSymbols.c	1038;"	d	file:
SymE_NeedsDataProto	rts/RtsSymbols.c	1052;"	d	file:
SymE_NeedsProto	rts/RtsSymbols.c	1008;"	d	file:
SymE_NeedsProto	rts/RtsSymbols.c	1011;"	d	file:
SymE_NeedsProto	rts/RtsSymbols.c	1015;"	d	file:
SymE_NeedsProto	rts/RtsSymbols.c	1037;"	d	file:
SymE_NeedsProto	rts/RtsSymbols.c	1051;"	d	file:
SymI_HasDataProto	rts/RtsSymbols.c	1042;"	d	file:
SymI_HasProto	rts/RtsSymbols.c	1019;"	d	file:
SymI_HasProto	rts/RtsSymbols.c	1032;"	d	file:
SymI_HasProto	rts/RtsSymbols.c	1040;"	d	file:
SymI_HasProto_deprecated	rts/RtsSymbols.c	1021;"	d	file:
SymI_HasProto_deprecated	rts/RtsSymbols.c	1034;"	d	file:
SymI_HasProto_deprecated	rts/RtsSymbols.c	1067;"	d	file:
SymI_HasProto_redirect	rts/RtsSymbols.c	1020;"	d	file:
SymI_HasProto_redirect	rts/RtsSymbols.c	1033;"	d	file:
SymI_HasProto_redirect	rts/RtsSymbols.c	1056;"	d	file:
SymI_NeedsDataProto	rts/RtsSymbols.c	1004;"	d	file:
SymI_NeedsDataProto	rts/RtsSymbols.c	1031;"	d	file:
SymI_NeedsDataProto	rts/RtsSymbols.c	1050;"	d	file:
SymI_NeedsProto	rts/RtsSymbols.c	1003;"	d	file:
SymI_NeedsProto	rts/RtsSymbols.c	1030;"	d	file:
SymI_NeedsProto	rts/RtsSymbols.c	1049;"	d	file:
SystemEventThreadEventManagerStore	rts/Globals.c	/^    SystemEventThreadEventManagerStore,$/;"	e	enum:__anon37	file:
SystemEventThreadIOManagerThreadStore	rts/Globals.c	/^    SystemEventThreadIOManagerThreadStore,$/;"	e	enum:__anon37	file:
SystemTimerThreadEventManagerStore	rts/Globals.c	/^    SystemTimerThreadEventManagerStore,$/;"	e	enum:__anon37	file:
SystemTimerThreadIOManagerThreadStore	rts/Globals.c	/^    SystemTimerThreadIOManagerThreadStore,$/;"	e	enum:__anon37	file:
T	libffi/build/testsuite/libffi.call/cls_uchar_va.c	/^typedef unsigned char T;$/;"	t	file:
T	libffi/build/testsuite/libffi.call/cls_uint_va.c	/^typedef unsigned int T;$/;"	t	file:
T	libffi/build/testsuite/libffi.call/cls_ulong_va.c	/^typedef unsigned long T;$/;"	t	file:
T	libffi/build/testsuite/libffi.call/cls_ushort_va.c	/^typedef unsigned short T;$/;"	t	file:
TABPOS	utils/unlit/unlit.c	122;"	d	file:
TASK_ID	rts/Task.c	342;"	d	file:
TASK_ID	rts/Task.c	344;"	d	file:
TERMSIG_EXITSTATUS	libraries/process/cbits/runProcess.c	28;"	d	file:
TEXT	utils/unlit/unlit.c	/^typedef enum { START, BLANK, TEXT, DEFN, BEGIN, END, \/*PSEUDO,*\/ ENDFILE, HASH, SHEBANG } line;$/;"	e	enum:__anon61	file:
TFD_CLOEXEC	rts/posix/itimer/Pthread.c	80;"	d	file:
THREADED_BUILD_ONLY	rts/RtsFlags.c	852;"	d	file:
THREADED_RTS	includes/dist-derivedconstants/header/tmp.c	10;"	d	file:
THREADED_RTS	testsuite/tests/rts/testwsdeque.c	1;"	d	file:
THREADS	testsuite/tests/rts/testwsdeque.c	8;"	d	file:
THREE_PARTS	nofib/imaginary/paraffins/paraffins.c	/^  THREE_PARTS;$/;"	t	typeref:struct:three_parts	file:
THRESHOLD_PERCENT	utils/hp2ps/Main.c	/^floatish THRESHOLD_PERCENT = DEFAULT_THRESHOLD;$/;"	v
THUMB_FUNC	rts/StgCRun.c	860;"	d	file:
THUMB_FUNC	rts/StgCRun.c	862;"	d	file:
TICKY_BUILD_ONLY	rts/RtsFlags.c	825;"	d	file:
TICKY_C	rts/Ticky.c	9;"	d	file:
TICK_PRINT	rts/Stats.c	597;"	d	file:
TICK_PRINT_TOT	rts/Stats.c	604;"	d	file:
TICK_VAR_INI	rts/Stats.c	574;"	d	file:
TOKEN_BATCH_SIZE	rts/STM.c	888;"	d	file:
TOP_FOOT_SIZE	libffi/build/src/dlmalloc.c	2192;"	d	file:
TOSTRING	rts/RtsUtils.c	286;"	d	file:
TOSTRING	rts/linker/elf_plt.c	12;"	d	file:
TOSTRING2	rts/RtsUtils.c	285;"	d	file:
TOTAL_CALLS	rts/Stats.c	/^StgInt TOTAL_CALLS=1;$/;"	v
TRACE	rts/STM.c	112;"	d	file:
TRACE_cap	rts/Trace.c	/^int TRACE_cap;$/;"	v
TRACE_gc	rts/Trace.c	/^int TRACE_gc;$/;"	v
TRACE_nonmoving_gc	rts/Trace.c	/^int TRACE_nonmoving_gc;$/;"	v
TRACE_sched	rts/Trace.c	/^int TRACE_sched;$/;"	v
TRACE_spark_full	rts/Trace.c	/^int TRACE_spark_full;$/;"	v
TRACE_spark_sampled	rts/Trace.c	/^int TRACE_spark_sampled;$/;"	v
TRACE_user	rts/Trace.c	/^int TRACE_user;$/;"	v
TRACING_BUILD_ONLY	rts/RtsFlags.c	843;"	d	file:
TREEBIN_SHIFT	libffi/build/src/dlmalloc.c	2069;"	d	file:
TRUE	nofib/imaginary/paraffins/paraffins.c	/^enum boolean { FALSE, TRUE };$/;"	e	enum:boolean	file:
TRY_MAP_32BIT	rts/Linker.c	193;"	d	file:
TRY_MAP_32BIT	rts/Linker.c	195;"	d	file:
TUPLE	nofib/imaginary/paraffins/paraffins.c	/^  TUPLE;$/;"	t	typeref:struct:tuple	file:
TWENTY	utils/hp2ps/Main.c	/^int TWENTY = DEFAULT_TWENTY;$/;"	v
TWO_SIZE_T_SIZES	libffi/build/src/dlmalloc.c	1267;"	d	file:
TYPE_SIZE	includes/dist-derivedconstants/header/tmp.c	23;"	d	file:
ThinkOfAShade	utils/hp2ps/Shade.c	/^ThinkOfAShade(void)$/;"	f	file:
TimeToLowResTimeRoundDown	rts/posix/Select.c	49;"	d	file:
TimeToLowResTimeRoundDown	rts/posix/Select.c	53;"	d	file:
TimeToLowResTimeRoundUp	rts/posix/Select.c	50;"	d	file:
TimeToLowResTimeRoundUp	rts/posix/Select.c	54;"	d	file:
TimeToSecondsDbl	rts/Stats.c	29;"	d	file:
TitleOutlineBox	utils/hp2ps/PsFile.c	/^TitleOutlineBox(void)$/;"	f	file:
TitleText	utils/hp2ps/PsFile.c	/^TitleText(void)$/;"	f	file:
TokenToString	utils/hp2ps/HpFile.c	/^TokenToString(token t)$/;"	f
TopTwenty	utils/hp2ps/TopTwenty.c	/^TopTwenty(void)$/;"	f
TraceElement	utils/hp2ps/TraceElement.c	/^void TraceElement(void)$/;"	f
TtyName	nofib/real/hidden/etc/nbpip.c	/^static char PtyName[32], TtyName[32];$/;"	v	file:
TtyProto	nofib/real/hidden/etc/nbpip.c	7;"	d	file:
U16	rts/xxhash.c	/^    typedef uint16_t U16;$/;"	t	file:
U16	rts/xxhash.c	/^    typedef unsigned short     U16;$/;"	t	file:
U32	rts/xxhash.c	/^    typedef uint32_t U32;$/;"	t	file:
U32	rts/xxhash.c	/^    typedef unsigned int       U32;$/;"	t	file:
U64	rts/xxhash.c	/^    typedef uint64_t U64;$/;"	t	file:
U64	rts/xxhash.c	/^    typedef unsigned long long U64;   \/* if your compiler doesn't support unsigned long long, replace by another 64-bit type here. Note that xxhash.h will also need to be updated. *\/$/;"	t	file:
UINT128	libffi/build/src/x86/ffi64.c	45;"	d	file:
UINT128	libffi/build/src/x86/ffi64.c	49;"	d	file:
UINT128	libffi/build/src/x86/ffi64.c	51;"	d	file:
UNDERSCORE	rts/Adjustor.c	192;"	d	file:
UNDERSCORE	rts/Adjustor.c	194;"	d	file:
UNICODE	libraries/Win32/cbits/diatemp.c	13;"	d	file:
UNICODE	libraries/Win32/cbits/dumpBMP.c	19;"	d	file:
UNICODE	libraries/Win32/cbits/ellipse.c	1;"	d	file:
UNICODE	libraries/Win32/cbits/errors.c	1;"	d	file:
UNICODE	libraries/process/cbits/runProcess.c	8;"	d	file:
UNICODE	rts/win32/veh_excn.c	8;"	d	file:
UNIQUE_BITS	compiler/cbits/genSym.c	8;"	d	file:
UNIQUE_MASK	compiler/cbits/genSym.c	9;"	d	file:
UNTAG_PTR	rts/sm/Compact.c	/^UNTAG_PTR(W_ p)$/;"	f
USAGE	utils/unlit/unlit.c	53;"	d	file:
USAGE_ERROR_ACTION	libffi/build/src/dlmalloc.c	2240;"	d	file:
USAGE_ERROR_ACTION	libffi/build/src/dlmalloc.c	2249;"	d	file:
USED_IF_x86_64_HOST_ARCH	rts/linker/PEi386.c	178;"	d	file:
USED_IF_x86_64_HOST_ARCH	rts/linker/PEi386.c	180;"	d	file:
USE_BUILTIN_FFS	libffi/build/src/closures.c	283;"	d	file:
USE_BUILTIN_FFS	libffi/build/src/dlmalloc.c	576;"	d	file:
USE_DEV_RANDOM	libffi/build/src/dlmalloc.c	579;"	d	file:
USE_DL_PREFIX	libffi/build/src/closures.c	280;"	d	file:
USE_LOCKS	libffi/build/src/closures.c	279;"	d	file:
USE_LOCKS	libffi/build/src/dlmalloc.c	516;"	d	file:
USE_LOCK_BIT	libffi/build/src/dlmalloc.c	1499;"	d	file:
USE_LOCK_BIT	libffi/build/src/dlmalloc.c	1501;"	d	file:
USE_MMAP_BIT	libffi/build/src/dlmalloc.c	1298;"	d	file:
USE_MMAP_BIT	libffi/build/src/dlmalloc.c	1305;"	d	file:
USE_NONCONTIGUOUS_BIT	libffi/build/src/dlmalloc.c	1418;"	d	file:
USE_PTHREAD_FOR_ITIMER	rts/posix/Itimer.c	29;"	d	file:
USE_PTHREAD_FOR_ITIMER	rts/posix/Itimer.c	38;"	d	file:
USE_PTHREAD_FOR_ITIMER	rts/posix/Itimer.c	48;"	d	file:
USE_PTHREAD_FOR_ITIMER	rts/posix/Itimer.c	52;"	d	file:
USE_READDIR_R	libraries/unix/cbits/HsUnix.c	51;"	d	file:
USE_READDIR_R	libraries/unix/cbits/HsUnix.c	53;"	d	file:
USE_SYNC_FETCH_AND_NAND	libraries/ghc-prim/cbits/atomic.c	164;"	d	file:
USE_SYNC_FETCH_AND_NAND	libraries/ghc-prim/cbits/atomic.c	166;"	d	file:
USE_TIMERFD_FOR_ITIMER	rts/posix/itimer/Pthread.c	70;"	d	file:
USE_TIMERFD_FOR_ITIMER	rts/posix/itimer/Pthread.c	72;"	d	file:
USE_TIMER_CREATE	rts/posix/Itimer.c	70;"	d	file:
USE__BUILTIN___CLEAR_CACHE	libffi/build/src/mips/ffi.c	36;"	d	file:
UTF8_ACCEPT	libraries/text/cbits/cbits.c	26;"	d	file:
UTF8_REJECT	libraries/text/cbits/cbits.c	27;"	d	file:
U_NEW_STRUCT	nofib/imaginary/paraffins/paraffins.c	84;"	d	file:
Units	utils/hp2ps/Main.c	/^Units(char *wstr)$/;"	f	file:
UnmapViewOfFileFinaliser	libraries/Win32/cbits/HsWin32.c	/^void UnmapViewOfFileFinaliser(void * p) {$/;"	f
Usage	utils/hp2ps/Error.c	/^Usage(const char *str)$/;"	f
Variables	utils/hp2ps/PsFile.c	/^Variables(void)$/;"	f	file:
VirtualAllocExNumaProc	rts/win32/OSMem.c	/^typedef LPVOID(WINAPI *VirtualAllocExNumaProc)(HANDLE, LPVOID, SIZE_T, DWORD, DWORD, DWORD);$/;"	t	file:
WIDTH	nofib/shootout/fasta/fasta-c.c	37;"	d	file:
WIN32	libffi/build/src/dlmalloc.c	448;"	d	file:
WIN32_LEAN_AND_MEAN	libffi/build/src/dlmalloc.c	452;"	d	file:
WINVER	driver/utils/isMinTTY.c	5;"	d	file:
WORD_FFI_ALIGN	libffi/build/src/microblaze/ffi.c	38;"	d	file:
WORD_SIZE	libffi/build/src/microblaze/ffi.c	36;"	d	file:
WeakDone	rts/sm/MarkWeak.c	/^typedef enum { WeakPtrs, WeakThreads, WeakDone } WeakStage;$/;"	e	enum:__anon46	file:
WeakPtrs	rts/sm/MarkWeak.c	/^typedef enum { WeakPtrs, WeakThreads, WeakDone } WeakStage;$/;"	e	enum:__anon46	file:
WeakStage	rts/sm/MarkWeak.c	/^typedef enum { WeakPtrs, WeakThreads, WeakDone } WeakStage;$/;"	t	typeref:enum:__anon46	file:
WeakThreads	rts/sm/MarkWeak.c	/^typedef enum { WeakPtrs, WeakThreads, WeakDone } WeakStage;$/;"	e	enum:__anon46	file:
WidthInPoints	utils/hp2ps/Main.c	/^WidthInPoints(char *wstr)$/;"	f	file:
WndPump	libraries/Win32/cbits/WndProc.c	/^WndPump ()$/;"	f
X	utils/hsc2hs/test/asm/tmp.c	3;"	d	file:
X86_64_COMPLEX_X87_CLASS	libffi/build/src/x86/ffi64.c	/^    X86_64_COMPLEX_X87_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_64_ELF_NONPIC_HACK	rts/linker/Elf.c	79;"	d	file:
X86_64_INTEGERSI_CLASS	libffi/build/src/x86/ffi64.c	/^    X86_64_INTEGERSI_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_64_INTEGER_CLASS	libffi/build/src/x86/ffi64.c	/^    X86_64_INTEGER_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_64_MEMORY_CLASS	libffi/build/src/x86/ffi64.c	/^    X86_64_MEMORY_CLASS$/;"	e	enum:x86_64_reg_class	file:
X86_64_NO_CLASS	libffi/build/src/x86/ffi64.c	/^    X86_64_NO_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_64_SSEDF_CLASS	libffi/build/src/x86/ffi64.c	/^    X86_64_SSEDF_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_64_SSESF_CLASS	libffi/build/src/x86/ffi64.c	/^    X86_64_SSESF_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_64_SSEUP_CLASS	libffi/build/src/x86/ffi64.c	/^    X86_64_SSEUP_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_64_SSE_CLASS	libffi/build/src/x86/ffi64.c	/^    X86_64_SSE_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_64_X87UP_CLASS	libffi/build/src/x86/ffi64.c	/^    X86_64_X87UP_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_64_X87_CLASS	libffi/build/src/x86/ffi64.c	/^    X86_64_X87_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_INIT_FPU	rts/RtsStartup.c	76;"	d	file:
XAxis	utils/hp2ps/Axes.c	/^XAxis(void)$/;"	f	file:
XAxisMark	utils/hp2ps/Axes.c	/^XAxisMark(floatish x, floatish num)$/;"	f	file:
XFUDGE	utils/hp2ps/Axes.c	50;"	d	file:
XXH32	rts/xxhash.c	/^XXH_PUBLIC_API unsigned int XXH32 (const void* input, size_t len, unsigned int seed)$/;"	f
XXH32_canonicalFromHash	rts/xxhash.c	/^XXH_PUBLIC_API void XXH32_canonicalFromHash(XXH32_canonical_t* dst, XXH32_hash_t hash)$/;"	f
XXH32_copyState	rts/xxhash.c	/^XXH_PUBLIC_API void XXH32_copyState(XXH32_state_t* dstState, const XXH32_state_t* srcState)$/;"	f
XXH32_createState	rts/xxhash.c	/^XXH_PUBLIC_API XXH32_state_t* XXH32_createState(void)$/;"	f
XXH32_digest	rts/xxhash.c	/^XXH_PUBLIC_API unsigned int XXH32_digest (const XXH32_state_t* state_in)$/;"	f
XXH32_digest_endian	rts/xxhash.c	/^FORCE_INLINE U32 XXH32_digest_endian (const XXH32_state_t* state, XXH_endianess endian)$/;"	f
XXH32_endian_align	rts/xxhash.c	/^FORCE_INLINE U32 XXH32_endian_align(const void* input, size_t len, U32 seed, XXH_endianess endian, XXH_alignment align)$/;"	f
XXH32_freeState	rts/xxhash.c	/^XXH_PUBLIC_API XXH_errorcode XXH32_freeState(XXH32_state_t* statePtr)$/;"	f
XXH32_hashFromCanonical	rts/xxhash.c	/^XXH_PUBLIC_API XXH32_hash_t XXH32_hashFromCanonical(const XXH32_canonical_t* src)$/;"	f
XXH32_reset	rts/xxhash.c	/^XXH_PUBLIC_API XXH_errorcode XXH32_reset(XXH32_state_t* statePtr, unsigned int seed)$/;"	f
XXH32_round	rts/xxhash.c	/^static U32 XXH32_round(U32 seed, U32 input)$/;"	f	file:
XXH32_update	rts/xxhash.c	/^XXH_PUBLIC_API XXH_errorcode XXH32_update (XXH32_state_t* state_in, const void* input, size_t len)$/;"	f
XXH32_update_endian	rts/xxhash.c	/^FORCE_INLINE XXH_errorcode XXH32_update_endian (XXH32_state_t* state, const void* input, size_t len, XXH_endianess endian)$/;"	f
XXH64	rts/xxhash.c	/^XXH_PUBLIC_API unsigned long long XXH64 (const void* input, size_t len, unsigned long long seed)$/;"	f
XXH64_canonicalFromHash	rts/xxhash.c	/^XXH_PUBLIC_API void XXH64_canonicalFromHash(XXH64_canonical_t* dst, XXH64_hash_t hash)$/;"	f
XXH64_copyState	rts/xxhash.c	/^XXH_PUBLIC_API void XXH64_copyState(XXH64_state_t* dstState, const XXH64_state_t* srcState)$/;"	f
XXH64_createState	rts/xxhash.c	/^XXH_PUBLIC_API XXH64_state_t* XXH64_createState(void)$/;"	f
XXH64_digest	rts/xxhash.c	/^XXH_PUBLIC_API unsigned long long XXH64_digest (const XXH64_state_t* state_in)$/;"	f
XXH64_digest_endian	rts/xxhash.c	/^FORCE_INLINE U64 XXH64_digest_endian (const XXH64_state_t* state, XXH_endianess endian)$/;"	f
XXH64_endian_align	rts/xxhash.c	/^FORCE_INLINE U64 XXH64_endian_align(const void* input, size_t len, U64 seed, XXH_endianess endian, XXH_alignment align)$/;"	f
XXH64_freeState	rts/xxhash.c	/^XXH_PUBLIC_API XXH_errorcode XXH64_freeState(XXH64_state_t* statePtr)$/;"	f
XXH64_hashFromCanonical	rts/xxhash.c	/^XXH_PUBLIC_API XXH64_hash_t XXH64_hashFromCanonical(const XXH64_canonical_t* src)$/;"	f
XXH64_mergeRound	rts/xxhash.c	/^static U64 XXH64_mergeRound(U64 acc, U64 val)$/;"	f	file:
XXH64_reset	rts/xxhash.c	/^XXH_PUBLIC_API XXH_errorcode XXH64_reset(XXH64_state_t* statePtr, unsigned long long seed)$/;"	f
XXH64_round	rts/xxhash.c	/^static U64 XXH64_round(U64 acc, U64 input)$/;"	f	file:
XXH64_update	rts/xxhash.c	/^XXH_PUBLIC_API XXH_errorcode XXH64_update (XXH64_state_t* state_in, const void* input, size_t len)$/;"	f
XXH64_update_endian	rts/xxhash.c	/^FORCE_INLINE XXH_errorcode XXH64_update_endian (XXH64_state_t* state, const void* input, size_t len, XXH_endianess endian)$/;"	f
XXH_CPU_LITTLE_ENDIAN	rts/xxhash.c	211;"	d	file:
XXH_FORCE_ALIGN_CHECK	rts/xxhash.c	89;"	d	file:
XXH_FORCE_ALIGN_CHECK	rts/xxhash.c	91;"	d	file:
XXH_FORCE_MEMORY_ACCESS	rts/xxhash.c	54;"	d	file:
XXH_FORCE_MEMORY_ACCESS	rts/xxhash.c	57;"	d	file:
XXH_FORCE_NATIVE_FORMAT	rts/xxhash.c	77;"	d	file:
XXH_GCC_VERSION	rts/xxhash.c	177;"	d	file:
XXH_STATIC_ASSERT	rts/xxhash.c	242;"	d	file:
XXH_STATIC_LINKING_ONLY	rts/xxhash.c	108;"	d	file:
XXH_aligned	rts/xxhash.c	/^typedef enum { XXH_aligned, XXH_unaligned } XXH_alignment;$/;"	e	enum:__anon55	file:
XXH_alignment	rts/xxhash.c	/^typedef enum { XXH_aligned, XXH_unaligned } XXH_alignment;$/;"	t	typeref:enum:__anon55	file:
XXH_bigEndian	rts/xxhash.c	/^typedef enum { XXH_bigEndian=0, XXH_littleEndian=1 } XXH_endianess;$/;"	e	enum:__anon54	file:
XXH_endianess	rts/xxhash.c	/^typedef enum { XXH_bigEndian=0, XXH_littleEndian=1 } XXH_endianess;$/;"	t	typeref:enum:__anon54	file:
XXH_free	rts/xxhash.c	/^static void  XXH_free  (void* p)  { free(p); }$/;"	f	file:
XXH_get32bits	rts/xxhash.c	268;"	d	file:
XXH_get64bits	rts/xxhash.c	628;"	d	file:
XXH_littleEndian	rts/xxhash.c	/^typedef enum { XXH_bigEndian=0, XXH_littleEndian=1 } XXH_endianess;$/;"	e	enum:__anon54	file:
XXH_malloc	rts/xxhash.c	/^static void* XXH_malloc(size_t s) { return malloc(s); }$/;"	f	file:
XXH_memcpy	rts/xxhash.c	/^static void* XXH_memcpy(void* dest, const void* src, size_t size) { return memcpy(dest,src,size); }$/;"	f	file:
XXH_read32	rts/xxhash.c	/^static U32 XXH_read32(const void* memPtr) { return *(const U32*) memPtr; }$/;"	f	file:
XXH_read32	rts/xxhash.c	/^static U32 XXH_read32(const void* memPtr)$/;"	f	file:
XXH_read32	rts/xxhash.c	/^static U32 XXH_read32(const void* ptr) { return ((const unalign*)ptr)->u32; }$/;"	f	file:
XXH_read64	rts/xxhash.c	/^static U64 XXH_read64(const void* memPtr) { return *(const U64*) memPtr; }$/;"	f	file:
XXH_read64	rts/xxhash.c	/^static U64 XXH_read64(const void* memPtr)$/;"	f	file:
XXH_read64	rts/xxhash.c	/^static U64 XXH_read64(const void* ptr) { return ((const unalign64*)ptr)->u64; }$/;"	f	file:
XXH_readBE32	rts/xxhash.c	/^static U32 XXH_readBE32(const void* ptr)$/;"	f	file:
XXH_readBE64	rts/xxhash.c	/^static U64 XXH_readBE64(const void* ptr)$/;"	f	file:
XXH_readLE32	rts/xxhash.c	/^FORCE_INLINE U32 XXH_readLE32(const void* ptr, XXH_endianess endian)$/;"	f
XXH_readLE32_align	rts/xxhash.c	/^FORCE_INLINE U32 XXH_readLE32_align(const void* ptr, XXH_endianess endian, XXH_alignment align)$/;"	f
XXH_readLE64	rts/xxhash.c	/^FORCE_INLINE U64 XXH_readLE64(const void* ptr, XXH_endianess endian)$/;"	f
XXH_readLE64_align	rts/xxhash.c	/^FORCE_INLINE U64 XXH_readLE64_align(const void* ptr, XXH_endianess endian, XXH_alignment align)$/;"	f
XXH_rotl32	rts/xxhash.c	181;"	d	file:
XXH_rotl32	rts/xxhash.c	184;"	d	file:
XXH_rotl64	rts/xxhash.c	182;"	d	file:
XXH_rotl64	rts/xxhash.c	185;"	d	file:
XXH_swap32	rts/xxhash.c	/^static U32 XXH_swap32 (U32 x)$/;"	f	file:
XXH_swap32	rts/xxhash.c	189;"	d	file:
XXH_swap32	rts/xxhash.c	191;"	d	file:
XXH_swap64	rts/xxhash.c	/^static U64 XXH_swap64 (U64 x)$/;"	f	file:
XXH_swap64	rts/xxhash.c	563;"	d	file:
XXH_swap64	rts/xxhash.c	565;"	d	file:
XXH_unaligned	rts/xxhash.c	/^typedef enum { XXH_aligned, XXH_unaligned } XXH_alignment;$/;"	e	enum:__anon55	file:
XXH_versionNumber	rts/xxhash.c	/^XXH_PUBLIC_API unsigned XXH_versionNumber (void) { return XXH_VERSION_NUMBER; }$/;"	f
Y	utils/hsc2hs/test/asm/tmp.c	4;"	d	file:
YAxis	utils/hp2ps/Axes.c	/^YAxis(void)$/;"	f	file:
YAxisMark	utils/hp2ps/Axes.c	/^YAxisMark(floatish y, floatish num, mkb unit)$/;"	f	file:
YFUDGE	utils/hp2ps/Axes.c	136;"	d	file:
_Arena	rts/Arena.c	/^struct _Arena {$/;"	s	file:
_CRT_glob	utils/ghc-pkg/CRT_noglob.c	/^unsigned long _CRT_glob = 0;$/;"	v
_DARWIN_C_SOURCE	rts/posix/OSThreads.c	20;"	d	file:
_EventType	rts/eventlog/EventLog.c	/^typedef struct _EventType {$/;"	s	file:
_EventsBuf	rts/eventlog/EventLog.c	/^typedef struct _EventsBuf {$/;"	s	file:
_GNU_SOURCE	libffi/build/src/closures.c	30;"	d	file:
_GNU_SOURCE	libffi/build/src/dlmalloc.c	443;"	d	file:
_GNU_SOURCE	nofib/shootout/reverse-complement/revcomp-c.c	7;"	d	file:
_GNU_SOURCE	rts/sm/CNF.c	11;"	d	file:
_IA64FunDesc	rts/Adjustor.c	/^typedef struct _IA64FunDesc {$/;"	s	file:
_ISOC99_SOURCE	libraries/integer-gmp/cbits/wrappers.c	10;"	d	file:
_OpenedSO	rts/Linker.c	/^   struct _OpenedSO {$/;"	s	file:
_SC_PAGE_SIZE	libffi/build/src/dlmalloc.c	1213;"	d	file:
_STRUCT_MALLINFO	libffi/build/src/dlmalloc.c	631;"	d	file:
_VirtualAllocExNuma	rts/win32/OSMem.c	/^VirtualAllocExNumaProc _VirtualAllocExNuma;$/;"	v
_WIN32_WINNT	driver/utils/isMinTTY.c	6;"	d	file:
__BSD_VISIBLE	rts/posix/OSThreads.c	15;"	d	file:
__ImageBase	rts/linker/PEi386.c	249;"	d	file:
__STDC_FORMAT_MACROS	libraries/Cabal/cabal-testsuite/PackageTests/Regression/T5309/memoized-tcm/dynamicCharacterOperations.c	8;"	d	file:
__STRICT_ANSI__	rts/win32/OSThreads.c	19;"	d	file:
___hsc2hs_BOM___	utils/hsc2hs/test/asm/tmp.c	/^unsigned long long ___hsc2hs_BOM___ = 0x100000000;$/;"	v
__abs	rts/StgPrimFloat.c	49;"	d	file:
__current_fun__	libraries/Win32/cbits/WndProc.c	/^char* __current_fun__ = NULL;$/;"	v
__declspec	libffi/build/src/x86/ffi.c	50;"	d	file:
__decodeDouble_2Int	rts/StgPrimFloat.c	/^__decodeDouble_2Int (I_ *man_sign, W_ *man_high, W_ *man_low, I_ *exp, StgDouble dbl)$/;"	f
__decodeDouble_Int64	rts/StgPrimFloat.c	/^__decodeDouble_Int64 (StgInt64 *const mantissa, const StgDouble dbl)$/;"	f
__decodeFloat_Int	rts/StgPrimFloat.c	/^__decodeFloat_Int (I_ *man, I_ *exp, StgFloat flt)$/;"	f
__dummy__	testsuite/tests/rts/spalign.c	/^void __dummy__(void)$/;"	f
__get_temp_file_name	utils/hsc2hs/cbits/utils.c	/^bool __get_temp_file_name (wchar_t* pathName, wchar_t* prefix,$/;"	f
__has_builtin	libraries/ghc-prim/cbits/atomic.c	160;"	d	file:
__hs_create_device_name	libraries/base/cbits/fs.c	/^static wchar_t* __hs_create_device_name (const wchar_t* filename) {$/;"	f	file:
__hs_create_device_name	rts/fs.c	/^static wchar_t* __hs_create_device_name (const wchar_t* filename) {$/;"	f	file:
__hs_create_device_name	utils/lndir/fs.c	/^static wchar_t* __hs_create_device_name (const wchar_t* filename) {$/;"	f	file:
__hs_create_device_name	utils/unlit/fs.c	/^static wchar_t* __hs_create_device_name (const wchar_t* filename) {$/;"	f	file:
__hs_exception_filter	rts/win32/veh_excn.c	/^long WINAPI __hs_exception_filter(struct _EXCEPTION_POINTERS *exception_data)$/;"	f
__hs_exception_handler	rts/win32/veh_excn.c	/^long WINAPI __hs_exception_handler(struct _EXCEPTION_POINTERS *exception_data)$/;"	f
__hs_handle	rts/win32/veh_excn.c	/^PVOID __hs_handle = NULL;$/;"	v
__hsbase_MD5Final	libraries/base/cbits/md5.c	/^__hsbase_MD5Final(uint8_t digest[16], struct MD5Context *ctx)$/;"	f
__hsbase_MD5Init	libraries/base/cbits/md5.c	/^__hsbase_MD5Init(struct MD5Context *ctx)$/;"	f
__hsbase_MD5Transform	libraries/base/cbits/md5.c	/^__hsbase_MD5Transform(uint32_t buf[4], uint32_t const in[16])$/;"	f
__hsbase_MD5Update	libraries/base/cbits/md5.c	/^__hsbase_MD5Update(struct MD5Context *ctx, uint8_t const *buf, int len)$/;"	f
__hsbase_unsetenv	libraries/base/cbits/SetEnv.c	/^int __hsbase_unsetenv(const char *name) {$/;"	f
__hscore_d_name	libraries/unix/cbits/HsUnix.c	/^char *__hscore_d_name( struct dirent* d )$/;"	f
__hscore_free_dirent	libraries/unix/cbits/HsUnix.c	/^void __hscore_free_dirent(struct dirent *dEnt)$/;"	f
__hscore_get_saved_termios	rts/posix/TTY.c	/^__hscore_get_saved_termios(int fd)$/;"	f
__hscore_readdir	libraries/unix/cbits/HsUnix.c	/^int __hscore_readdir( DIR *dirPtr, struct dirent **pDirEnt )$/;"	f
__hscore_set_saved_termios	rts/posix/TTY.c	/^__hscore_set_saved_termios(int fd, void* ts)$/;"	f
__hsunix_execvpe	libraries/unix/cbits/execvpe.c	/^__hsunix_execvpe(const char *name, char *const argv[], char *const envp[])$/;"	f
__hsunix_grantpt	libraries/unix/cbits/HsUnix.c	/^int   __hsunix_grantpt(int fd)   { return grantpt(fd);  }$/;"	f
__hsunix_ptsname	libraries/unix/cbits/HsUnix.c	/^char *__hsunix_ptsname(int fd)   { return ptsname(fd);  }$/;"	f
__hsunix_push_module	libraries/unix/cbits/HsUnix.c	/^int __hsunix_push_module(int fd, const char *module)$/;"	f
__hsunix_rtldDefault	libraries/unix/cbits/HsUnix.c	/^void *__hsunix_rtldDefault (void) {return RTLD_DEFAULT;}$/;"	f
__hsunix_rtldNext	libraries/unix/cbits/HsUnix.c	/^void *__hsunix_rtldNext (void) {return RTLD_NEXT;}$/;"	f
__hsunix_unlockpt	libraries/unix/cbits/HsUnix.c	/^int   __hsunix_unlockpt(int fd)  { return unlockpt(fd); }$/;"	f
__image_base	rts/linker/PEi386.c	255;"	d	file:
__int_encodeDouble	rts/StgPrimFloat.c	/^__int_encodeDouble (I_ j, I_ e)$/;"	f
__int_encodeFloat	rts/StgPrimFloat.c	/^__int_encodeFloat (I_ j, I_ e)$/;"	f
__mpz_andn	libraries/integer-gmp/cbits/wrappers.c	/^__mpz_andn(mpz_t r, const mpz_t s1, const mpz_t s2)$/;"	f	file:
__noreturn__	rts/RtsFlags.c	/^static void errorUsage (void) GNU_ATTRIBUTE(__noreturn__);$/;"	v
__noreturn__	rts/RtsMessages.c	/^void rtsBadAlignmentBarf(void) GNUC3_ATTRIBUTE(__noreturn__);$/;"	v
__noreturn__	rts/RtsStartup.c	/^static void exitBySignal(int sig) GNUC3_ATTRIBUTE(__noreturn__);$/;"	v
__noreturn__	rts/linker/elf_reloc_aarch64.c	/^int64_t decodeAddendAarch64(Section * section, Elf_Rel * rel) GNU_ATTRIBUTE(__noreturn__);$/;"	v
__register_hs_exception_handler	rts/win32/veh_excn.c	/^void __register_hs_exception_handler( void )$/;"	f
__rts_iob_func	rts/linker/PEi386.c	/^const void* __rts_iob_func = (void*)&__acrt_iob_func;$/;"	v
__unregister_hs_exception_handler	rts/win32/veh_excn.c	/^void __unregister_hs_exception_handler( void )$/;"	f
__waitForJobCompletion	utils/hsc2hs/cbits/utils.c	/^__waitForJobCompletion ( HANDLE hJob, HANDLE ioPort, DWORD timeout,$/;"	f
__word_encodeDouble	rts/StgPrimFloat.c	/^__word_encodeDouble (W_ j, I_ e)$/;"	f
__word_encodeFloat	rts/StgPrimFloat.c	/^__word_encodeFloat (W_ j, I_ e)$/;"	f
_assertFail	rts/RtsMessages.c	/^_assertFail(const char*filename, unsigned int linenum)$/;"	f
_assertFail	utils/coverity/model.c	/^void _assertFail(const char *filename, unsigned int linenum)$/;"	f
_bdescr	rts/sm/Storage.c	/^_bdescr (StgPtr p)$/;"	f
_charblock_	libraries/base/cbits/WCsubst.c	/^struct _charblock_ $/;"	s	file:
_convrule_	libraries/base/cbits/WCsubst.c	/^struct _convrule_ $/;"	s	file:
_counter	rts/ProfHeap.c	/^typedef struct _counter {$/;"	s	file:
_d	libffi/build/src/aarch64/ffi.c	/^union _d$/;"	u	file:
_fpreset	rts/RtsStartup.c	/^void _fpreset(void)$/;"	f
_get_osfhandle	libraries/base/cbits/consUtils.c	14;"	d	file:
_gm_	libffi/build/src/dlmalloc.c	/^static struct malloc_state _gm_;$/;"	v	typeref:struct:malloc_state	file:
_hs_bytestring_int_dec	libraries/bytestring/cbits/itoa.c	/^char* _hs_bytestring_int_dec (int x, char* buf)$/;"	f
_hs_bytestring_int_dec_padded9	libraries/bytestring/cbits/itoa.c	/^void _hs_bytestring_int_dec_padded9 (int x, char* buf)$/;"	f
_hs_bytestring_long_long_int_dec	libraries/bytestring/cbits/itoa.c	/^char* _hs_bytestring_long_long_int_dec (long long int x, char* buf)$/;"	f
_hs_bytestring_long_long_int_dec_padded18	libraries/bytestring/cbits/itoa.c	/^void _hs_bytestring_long_long_int_dec_padded18 (long long int x, char* buf)$/;"	f
_hs_bytestring_long_long_uint_dec	libraries/bytestring/cbits/itoa.c	/^char* _hs_bytestring_long_long_uint_dec (long long unsigned int x, char* buf)$/;"	f
_hs_bytestring_long_long_uint_hex	libraries/bytestring/cbits/itoa.c	/^char* _hs_bytestring_long_long_uint_hex (long long unsigned int x, char* buf) {$/;"	f
_hs_bytestring_uint_dec	libraries/bytestring/cbits/itoa.c	/^char* _hs_bytestring_uint_dec (unsigned int x, char* buf)$/;"	f
_hs_bytestring_uint_hex	libraries/bytestring/cbits/itoa.c	/^char* _hs_bytestring_uint_hex (unsigned int x, char* buf) {$/;"	f
_hs_text_decode_latin1	libraries/text/cbits/cbits.c	/^_hs_text_decode_latin1(uint16_t *dest, const uint8_t *src,$/;"	f
_hs_text_decode_utf8	libraries/text/cbits/cbits.c	/^_hs_text_decode_utf8(uint16_t *const dest, size_t *destoff,$/;"	f
_hs_text_decode_utf8_int	libraries/text/cbits/cbits.c	/^_hs_text_decode_utf8_int(uint16_t *const dest, size_t *destoff,$/;"	f	file:
_hs_text_decode_utf8_state	libraries/text/cbits/cbits.c	/^_hs_text_decode_utf8_state(uint16_t *const dest, size_t *destoff,$/;"	f
_hs_text_encode_utf8	libraries/text/cbits/cbits.c	/^_hs_text_encode_utf8(uint8_t **destp, const uint16_t *src, size_t srcoff,$/;"	f
_hs_text_memcmp	libraries/text/cbits/cbits.c	/^int _hs_text_memcmp(const void *a, size_t aoff, const void *b, size_t boff,$/;"	f
_hs_text_memcpy	libraries/text/cbits/cbits.c	/^void _hs_text_memcpy(void *dest, size_t doff, const void *src, size_t soff,$/;"	f
_makeStub	rts/linker/elf_plt.c	14;"	d	file:
_stat	utils/fs/fs.c	/^int FS(_stat) (const char *path, struct _stat *buffer)$/;"	f
_stat64	utils/fs/fs.c	/^int FS(_stat64) (const char *path, struct __stat64 *buffer)$/;"	f
_stgAssert	utils/hp2ps/Main.c	/^_stgAssert (filename, linenum)$/;"	f
_v	libffi/build/src/aarch64/ffi.c	/^struct _v$/;"	s	file:
_wstat	utils/fs/fs.c	/^int FS(_wstat) (const wchar_t *path, struct _stat *buffer)$/;"	f
_wstat64	utils/fs/fs.c	/^int FS(_wstat64) (const wchar_t *path, struct __stat64 *buffer)$/;"	f
a	libffi/build/testsuite/libffi.call/cls_12byte.c	/^  int a;$/;"	m	struct:cls_struct_12byte	file:
a	libffi/build/testsuite/libffi.call/cls_16byte.c	/^  int a;$/;"	m	struct:cls_struct_16byte	file:
a	libffi/build/testsuite/libffi.call/cls_18byte.c	/^  double a;$/;"	m	struct:cls_struct_18byte	file:
a	libffi/build/testsuite/libffi.call/cls_19byte.c	/^  double a;$/;"	m	struct:cls_struct_19byte	file:
a	libffi/build/testsuite/libffi.call/cls_1_1byte.c	/^  unsigned char a;$/;"	m	struct:cls_struct_1_1byte	file:
a	libffi/build/testsuite/libffi.call/cls_20byte.c	/^  double a;$/;"	m	struct:cls_struct_20byte	file:
a	libffi/build/testsuite/libffi.call/cls_20byte1.c	/^  int a;$/;"	m	struct:cls_struct_20byte	file:
a	libffi/build/testsuite/libffi.call/cls_24byte.c	/^  double a;$/;"	m	struct:cls_struct_24byte	file:
a	libffi/build/testsuite/libffi.call/cls_2byte.c	/^  unsigned char a;$/;"	m	struct:cls_struct_2byte	file:
a	libffi/build/testsuite/libffi.call/cls_3_1byte.c	/^  unsigned char a;$/;"	m	struct:cls_struct_3_1byte	file:
a	libffi/build/testsuite/libffi.call/cls_3byte1.c	/^  unsigned short a;$/;"	m	struct:cls_struct_3byte	file:
a	libffi/build/testsuite/libffi.call/cls_3byte2.c	/^  unsigned char a;$/;"	m	struct:cls_struct_3byte_1	file:
a	libffi/build/testsuite/libffi.call/cls_4_1byte.c	/^  unsigned char a;$/;"	m	struct:cls_struct_4_1byte	file:
a	libffi/build/testsuite/libffi.call/cls_4byte.c	/^  unsigned short a;$/;"	m	struct:cls_struct_4byte	file:
a	libffi/build/testsuite/libffi.call/cls_5_1_byte.c	/^  unsigned char a;$/;"	m	struct:cls_struct_5byte	file:
a	libffi/build/testsuite/libffi.call/cls_5byte.c	/^  unsigned short a;$/;"	m	struct:cls_struct_5byte	file:
a	libffi/build/testsuite/libffi.call/cls_64byte.c	/^  double a;$/;"	m	struct:cls_struct_64byte	file:
a	libffi/build/testsuite/libffi.call/cls_6_1_byte.c	/^  unsigned char a;$/;"	m	struct:cls_struct_6byte	file:
a	libffi/build/testsuite/libffi.call/cls_6byte.c	/^  unsigned short a;$/;"	m	struct:cls_struct_6byte	file:
a	libffi/build/testsuite/libffi.call/cls_7_1_byte.c	/^  unsigned char a;$/;"	m	struct:cls_struct_7byte	file:
a	libffi/build/testsuite/libffi.call/cls_7byte.c	/^  unsigned short a;$/;"	m	struct:cls_struct_7byte	file:
a	libffi/build/testsuite/libffi.call/cls_8byte.c	/^  int a;$/;"	m	struct:cls_struct_8byte	file:
a	libffi/build/testsuite/libffi.call/cls_9byte1.c	/^  int a;$/;"	m	struct:cls_struct_9byte	file:
a	libffi/build/testsuite/libffi.call/cls_9byte2.c	/^  double a;$/;"	m	struct:cls_struct_9byte	file:
a	libffi/build/testsuite/libffi.call/cls_align_double.c	/^  unsigned char a;$/;"	m	struct:cls_struct_align	file:
a	libffi/build/testsuite/libffi.call/cls_align_float.c	/^  unsigned char a;$/;"	m	struct:cls_struct_align	file:
a	libffi/build/testsuite/libffi.call/cls_align_longdouble.c	/^  unsigned char a;$/;"	m	struct:cls_struct_align	file:
a	libffi/build/testsuite/libffi.call/cls_align_longdouble_split.c	/^  long double a;$/;"	m	struct:cls_struct_align	file:
a	libffi/build/testsuite/libffi.call/cls_align_longdouble_split2.c	/^  long double a;$/;"	m	struct:cls_struct_align	file:
a	libffi/build/testsuite/libffi.call/cls_align_pointer.c	/^  unsigned char a;$/;"	m	struct:cls_struct_align	file:
a	libffi/build/testsuite/libffi.call/cls_align_sint16.c	/^  unsigned char a;$/;"	m	struct:cls_struct_align	file:
a	libffi/build/testsuite/libffi.call/cls_align_sint32.c	/^  unsigned char a;$/;"	m	struct:cls_struct_align	file:
a	libffi/build/testsuite/libffi.call/cls_align_sint64.c	/^  unsigned char a;$/;"	m	struct:cls_struct_align	file:
a	libffi/build/testsuite/libffi.call/cls_align_uint16.c	/^  unsigned char a;$/;"	m	struct:cls_struct_align	file:
a	libffi/build/testsuite/libffi.call/cls_align_uint32.c	/^  unsigned char a;$/;"	m	struct:cls_struct_align	file:
a	libffi/build/testsuite/libffi.call/cls_align_uint64.c	/^  unsigned char a;$/;"	m	struct:cls_struct_align	file:
a	libffi/build/testsuite/libffi.call/cls_struct_va1.c	/^  unsigned a;$/;"	m	struct:large_tag	file:
a	libffi/build/testsuite/libffi.call/cls_struct_va1.c	/^  unsigned char a;$/;"	m	struct:small_tag	file:
a	libffi/build/testsuite/libffi.call/huge_struct.c	/^	uint8_t		a;$/;"	m	struct:BigStruct	file:
a	libffi/build/testsuite/libffi.call/nested_struct.c	/^  double a;$/;"	m	struct:cls_struct_16byte1	file:
a	libffi/build/testsuite/libffi.call/nested_struct1.c	/^  double a;$/;"	m	struct:cls_struct_16byte1	file:
a	libffi/build/testsuite/libffi.call/nested_struct10.c	/^  unsigned long long a;$/;"	m	struct:A	file:
a	libffi/build/testsuite/libffi.call/nested_struct11.c	/^  A a;$/;"	m	struct:C	file:
a	libffi/build/testsuite/libffi.call/nested_struct2.c	/^  unsigned long a;$/;"	m	struct:A	file:
a	libffi/build/testsuite/libffi.call/nested_struct3.c	/^  unsigned long long a;$/;"	m	struct:A	file:
a	libffi/build/testsuite/libffi.call/nested_struct4.c	/^  double a;$/;"	m	struct:A	file:
a	libffi/build/testsuite/libffi.call/nested_struct5.c	/^  long double a;$/;"	m	struct:A	file:
a	libffi/build/testsuite/libffi.call/nested_struct6.c	/^  double a;$/;"	m	struct:A	file:
a	libffi/build/testsuite/libffi.call/nested_struct7.c	/^  unsigned long long a;$/;"	m	struct:A	file:
a	libffi/build/testsuite/libffi.call/nested_struct8.c	/^  unsigned long long a;$/;"	m	struct:A	file:
a	libffi/build/testsuite/libffi.call/nested_struct9.c	/^  unsigned char a;$/;"	m	struct:A	file:
a	libffi/build/testsuite/libffi.call/problem1.c	/^  double a;$/;"	m	struct:my_ffi_struct	file:
a	libffi/build/testsuite/libffi.call/stret_large.c	/^	double a;$/;"	m	struct:struct_108byte	file:
a	libffi/build/testsuite/libffi.call/stret_large2.c	/^	double a;$/;"	m	struct:struct_116byte	file:
a	libffi/build/testsuite/libffi.call/stret_medium.c	/^	double a;$/;"	m	struct:struct_72byte	file:
a	libffi/build/testsuite/libffi.call/stret_medium2.c	/^	double a;$/;"	m	struct:struct_72byte	file:
a	libffi/build/testsuite/libffi.call/testclosure.c	/^  float a;$/;"	m	struct:cls_struct_combined	file:
a	libffi/build/testsuite/libffi.call/va_1.c	/^  unsigned a;$/;"	m	struct:large_tag	file:
a	libffi/build/testsuite/libffi.call/va_1.c	/^  unsigned char a;$/;"	m	struct:small_tag	file:
a	libffi/build/testsuite/libffi.call/va_struct1.c	/^  unsigned a;$/;"	m	struct:large_tag	file:
a	libffi/build/testsuite/libffi.call/va_struct1.c	/^  unsigned char a;$/;"	m	struct:small_tag	file:
a	libffi/build/testsuite/libffi.call/va_struct2.c	/^  unsigned a;$/;"	m	struct:large_tag	file:
a	libffi/build/testsuite/libffi.call/va_struct2.c	/^  unsigned char a;$/;"	m	struct:small_tag	file:
a	libffi/build/testsuite/libffi.call/va_struct3.c	/^  unsigned a;$/;"	m	struct:large_tag	file:
a	libffi/build/testsuite/libffi.call/va_struct3.c	/^  unsigned char a;$/;"	m	struct:small_tag	file:
a	testsuite/tests/rts/T11788.c	/^int a()$/;"	f
a	testsuite/tests/rts/linker/T11223/bar.c	/^int a()$/;"	f
a	testsuite/tests/rts/linker/T11223/foo.c	/^int a()$/;"	f
a_x	libffi/build/testsuite/libffi.call/nested_struct11.c	/^  float a_x;$/;"	m	struct:A	file:
a_y	libffi/build/testsuite/libffi.call/nested_struct11.c	/^  float a_y;$/;"	m	struct:A	file:
aa	libffi/build/testsuite/libffi.call/huge_struct.c	/^	uint16_t	aa;$/;"	m	struct:BigStruct	file:
abandonRequestWait	rts/win32/AsyncIO.c	/^abandonRequestWait( void )$/;"	f
abandonWorkRequest	rts/win32/IOManager.c	/^abandonWorkRequest ( int reqID )$/;"	f
abandon_req_wait	rts/win32/AsyncIO.c	/^static HANDLE           abandon_req_wait = INVALID_HANDLE_VALUE;$/;"	v	file:
abi_params	libffi/build/src/x86/ffi.c	/^static const struct abi_params abi_params[FFI_LAST_ABI] = {$/;"	v	typeref:struct:abi_params	file:
abi_params	libffi/build/src/x86/ffi.c	/^struct abi_params$/;"	s	file:
absolute_time	libraries/base/cbits/DarwinUtils.c	/^void absolute_time(double *result)$/;"	f
accountAllocation	rts/sm/Storage.c	/^accountAllocation(Capability *cap, W_ n)$/;"	f
acquireAllCapabilities	rts/Schedule.c	/^static void acquireAllCapabilities(Capability *cap, Task *task)$/;"	f	file:
active_work_items	rts/win32/IOManager.c	/^    WorkItem*        active_work_items;$/;"	m	struct:IOManagerState	file:
active_work_lock	rts/win32/IOManager.c	/^    CritSection      active_work_lock;$/;"	m	struct:IOManagerState	file:
actualPush	rts/Profiling.c	/^actualPush (CostCentreStack *ccs, CostCentre *cc)$/;"	f	file:
actualPush_	rts/Profiling.c	/^actualPush_ (CostCentreStack *ccs, CostCentre *cc, CostCentreStack *new_ccs)$/;"	f	file:
add2	testsuite/tests/ghci/linking/add.c	/^int add2(int x, int y) { return x + y; }$/;"	f
addCopySection	rts/linker/PEi386.c	/^addCopySection (ObjectCode *oc, Section *s, SectionKind kind,$/;"	f	file:
addDLL	rts/Linker.c	/^addDLL( pathchar *dll_name )$/;"	f
addDLLHandle	rts/linker/PEi386.c	/^static void addDLLHandle(pathchar* dll_name, HINSTANCE instance) {$/;"	f	file:
addDLL_PEi386	rts/linker/PEi386.c	/^addDLL_PEi386( pathchar *dll_name, HINSTANCE *loaded )$/;"	f
addDelayRequest	rts/win32/AsyncIO.c	/^addDelayRequest(HsInt usecs)$/;"	f
addDiaControl	libraries/Win32/cbits/diatemp.c	/^addDiaControl$/;"	f
addDoProcRequest	rts/win32/AsyncIO.c	/^addDoProcRequest(void* proc, void* param)$/;"	f
addElement	rts/RetainerSet.c	/^addElement(retainer r, RetainerSet *rs)$/;"	f
addIORequest	rts/win32/AsyncIO.c	/^addIORequest(int   fd,$/;"	f
addLibrarySearchPath	rts/Linker.c	/^HsPtr addLibrarySearchPath(pathchar* dll_path)$/;"	f
addLibrarySearchPath_PEi386	rts/linker/PEi386.c	/^HsPtr addLibrarySearchPath_PEi386(pathchar* dll_path)$/;"	f
addProddableBlock	rts/Linker.c	/^addProddableBlock ( ObjectCode* oc, void* start, int size )$/;"	f
addSection	rts/Linker.c	/^addSection (Section *s, SectionKind kind, SectionAlloc alloc,$/;"	f
addToIndexTable	rts/Profiling.c	/^addToIndexTable (IndexTable *it, CostCentreStack *new_ccs,$/;"	f	file:
add_all_int16	testsuite/tests/ffi/should_run/PrimFFIInt16_c.c	/^int16_t add_all_int16($/;"	f
add_all_int8	testsuite/tests/ffi/should_run/PrimFFIInt8_c.c	/^int8_t add_all_int8($/;"	f
add_all_word16	testsuite/tests/ffi/should_run/PrimFFIWord16_c.c	/^uint16_t add_all_word16($/;"	f
add_all_word8	testsuite/tests/ffi/should_run/PrimFFIWord8_c.c	/^uint8_t add_all_word8($/;"	f
add_code	nofib/real/compress2/inC/prefix_trees.c	/^struct ptree *add_code (root,r,n) $/;"	f
add_segment	libffi/build/src/dlmalloc.c	/^static void add_segment(mstate m, char* tbase, size_t tsize, flag_t mmapped) {$/;"	f	file:
add_segment_exec_offset	libffi/build/src/dlmalloc.c	1955;"	d	file:
add_to_fname_table	rts/Printer.c	/^static HashTable * add_to_fname_table = NULL;$/;"	v	file:
addrToStableHash	rts/StableName.c	/^static HashTable *addrToStableHash = NULL;$/;"	v	file:
addr_t	rts/linker/elf_reloc_aarch64.c	/^typedef uint64_t addr_t;$/;"	t	file:
address	rts/sm/MBlock.c	/^    W_ address;$/;"	m	struct:free_list	file:
advance_next_free	rts/sm/NonMoving.c	/^static bool advance_next_free(struct NonmovingSegment *seg, const unsigned int blk_count)$/;"	f	file:
aggregateCCCosts	rts/Profiling.c	/^aggregateCCCosts( CostCentreStack *ccs )$/;"	f	file:
aggregateCensusInfo	rts/ProfHeap.c	/^aggregateCensusInfo( void )$/;"	f	file:
aix_adjust_aggregate_sizes	libffi/build/src/powerpc/ffi_darwin.c	/^aix_adjust_aggregate_sizes (ffi_type *s)$/;"	f	file:
aix_fd	libffi/build/src/powerpc/ffi_darwin.c	/^} aix_fd;$/;"	t	typeref:struct:aix_fd_struct	file:
aix_fd_struct	libffi/build/src/powerpc/ffi_darwin.c	/^typedef struct aix_fd_struct {$/;"	s	file:
align_as_chunk	libffi/build/src/dlmalloc.c	1696;"	d	file:
align_offset	libffi/build/src/dlmalloc.c	1279;"	d	file:
all_tasks	rts/Task.c	/^Task *all_tasks = NULL;$/;"	v
all_tasks_mutex	rts/Task.c	/^Mutex all_tasks_mutex;$/;"	v
allchars	libraries/base/cbits/WCsubst.c	/^static const struct _charblock_ allchars[]={$/;"	v	typeref:struct:_charblock_	file:
allocAlignedGroupOnNode	rts/sm/BlockAlloc.c	/^allocAlignedGroupOnNode (uint32_t node, W_ n)$/;"	f
allocBlockOnNode_lock	rts/sm/BlockAlloc.c	/^allocBlockOnNode_lock(uint32_t node)$/;"	f
allocBlock_lock	rts/sm/BlockAlloc.c	/^allocBlock_lock(void)$/;"	f
allocBlocks_sync	rts/sm/GCUtils.c	/^allocBlocks_sync(uint32_t n, bdescr **hd)$/;"	f	file:
allocGroup	rts/sm/BlockAlloc.c	/^bdescr* allocGroup (W_ n)$/;"	f
allocGroupOnNode	rts/sm/BlockAlloc.c	/^allocGroupOnNode (uint32_t node, W_ n)$/;"	f
allocGroupOnNode_lock	rts/sm/BlockAlloc.c	/^allocGroupOnNode_lock(uint32_t node, W_ n)$/;"	f
allocGroupOnNode_sync	rts/sm/GCUtils.c	/^bdescr* allocGroupOnNode_sync(uint32_t node, uint32_t n)$/;"	f
allocGroup_lock	rts/sm/BlockAlloc.c	/^allocGroup_lock(W_ n)$/;"	f
allocGroup_sync	rts/sm/GCUtils.c	/^bdescr* allocGroup_sync(uint32_t n)$/;"	f
allocHashList	rts/Hash.c	/^allocHashList (HashTable *table)$/;"	f	file:
allocHashTable	rts/Hash.c	/^allocHashTable(void)$/;"	f
allocLargeChunk	rts/sm/BlockAlloc.c	/^bdescr* allocLargeChunk (W_ min, W_ max)$/;"	f
allocLargeChunkOnNode	rts/sm/BlockAlloc.c	/^bdescr* allocLargeChunkOnNode (uint32_t node, W_ min, W_ max)$/;"	f
allocNew	rts/win32/OSMem.c	/^allocNew(uint32_t n) {$/;"	f	file:
allocNurseries	rts/sm/Storage.c	/^allocNurseries (uint32_t from, uint32_t to)$/;"	f	file:
allocNursery	rts/sm/Storage.c	/^allocNursery (uint32_t node, bdescr *tail, W_ blocks)$/;"	f	file:
allocSegment	rts/Hash.c	/^allocSegment(HashTable *table, int segment)$/;"	f
allocSparkPool	rts/Sparks.c	/^allocSparkPool( void )$/;"	f
alloc_fn	rts/Pool.c	/^    alloc_thing_fn alloc_fn;$/;"	m	struct:Pool_	file:
alloc_for_copy	rts/sm/Evac.c	/^alloc_for_copy (uint32_t size, uint32_t gen_no)$/;"	f
alloc_mega_group	rts/sm/BlockAlloc.c	/^alloc_mega_group (uint32_t node, StgWord mblocks)$/;"	f	file:
alloc_nonmoving_allocator	rts/sm/NonMoving.c	/^static struct NonmovingAllocator *alloc_nonmoving_allocator(uint32_t n_caps)$/;"	f	file:
alloc_rec	rts/win32/OSMem.c	/^} alloc_rec;$/;"	t	typeref:struct:alloc_rec_	file:
alloc_rec_	rts/win32/OSMem.c	/^typedef struct alloc_rec_ {$/;"	s	file:
alloc_stg_trec_chunk	rts/STM.c	/^static StgTRecChunk *alloc_stg_trec_chunk(Capability *cap) {$/;"	f	file:
alloc_stg_trec_header	rts/STM.c	/^static StgTRecHeader *alloc_stg_trec_header(Capability *cap,$/;"	f	file:
alloc_stg_tvar_watch_queue	rts/STM.c	/^static StgTVarWatchQueue *alloc_stg_tvar_watch_queue(Capability *cap,$/;"	f	file:
alloc_todo_block	rts/sm/GCUtils.c	/^alloc_todo_block (gen_workspace *ws, uint32_t size)$/;"	f
allocate	rts/sm/Storage.c	/^allocate (Capability *cap, W_ n)$/;"	f
allocateExec	rts/sm/Storage.c	/^AdjustorWritable allocateExec (W_ bytes, AdjustorExecutable *exec_ret)$/;"	f
allocateExec	rts/sm/Storage.c	/^AdjustorWritable allocateExec(W_ bytes, AdjustorExecutable *exec_ret)$/;"	f
allocateForCompact	rts/sm/CNF.c	/^allocateForCompact (Capability *cap,$/;"	f
allocateMightFail	rts/sm/Storage.c	/^allocateMightFail (Capability *cap, W_ n)$/;"	f
allocatePackedChar	libraries/Cabal/cabal-testsuite/PackageTests/Regression/T5309/memoized-tcm/dynamicCharacterOperations.c	/^packedChar *allocatePackedChar( size_t alphSize, size_t numElems ) {$/;"	f
allocatePinned	rts/sm/Storage.c	/^allocatePinned (Capability *cap, W_ n)$/;"	f
allocate_NONUPD	rts/Interpreter.c	/^allocate_NONUPD (Capability *cap, int n_words)$/;"	f
allocate_int_to_reg_or_stack	libffi/build/src/aarch64/ffi.c	/^allocate_int_to_reg_or_stack (struct call_context *context,$/;"	f	file:
allocate_to_stack	libffi/build/src/aarch64/ffi.c	/^allocate_to_stack (struct arg_state *state, void *stack,$/;"	f	file:
allocatedExecs	rts/sm/Storage.c	/^static HashTable* allocatedExecs;$/;"	v	file:
allocated_bytes_at_heapoverflow	rts/Schedule.c	/^uint64_t allocated_bytes_at_heapoverflow = 0;$/;"	v
allocating_variadic	libffi/build/src/aarch64/ffi.c	/^  unsigned allocating_variadic;$/;"	m	struct:arg_state	file:
allocs	rts/win32/OSMem.c	/^static alloc_rec* allocs = NULL;$/;"	v	file:
alpha	nofib/spectral/simple/simple.c	/^double alpha[MAXSIZE][MAXSIZE], s[MAXSIZE][MAXSIZE];$/;"	v
alu	nofib/shootout/fasta/fasta-c.c	/^static char *alu =$/;"	v	file:
amino	nofib/shootout/fasta/fasta-c.c	/^} amino;$/;"	t	typeref:struct:__anon32	file:
anySparks	rts/Capability.c	/^anySparks (void)$/;"	f
anyUserHandlers	rts/posix/Signals.c	/^anyUserHandlers(void)$/;"	f
any_needs_fixup	rts/sm/CNF.c	/^any_needs_fixup(StgCompactNFDataBlock *block)$/;"	f
any_work	rts/sm/GC.c	/^any_work (void)$/;"	f	file:
app_ptrs_itbl	rts/Interpreter.c	/^static StgWord app_ptrs_itbl[] = {$/;"	v	file:
appendCCS	rts/Profiling.c	/^appendCCS ( CostCentreStack *ccs1, CostCentreStack *ccs2 )$/;"	f
appendRtsArg	rts/RtsFlags.c	/^static void appendRtsArg (char *arg)$/;"	f	file:
appendString	libraries/Win32/cbits/diatemp.c	/^appendString (LPWORD ptr, LPCWSTR text)$/;"	f
appendWeakList	rts/sm/NonMoving.c	/^static void appendWeakList( StgWeak **w1, StgWeak *w2 )$/;"	f	file:
apply	testsuite/tests/ffi/should_run/T493_c.c	/^int apply(intfun_p f, int x)$/;"	f
apply_fun	testsuite/tests/rts/T10296a_c.c	/^int apply_fun(int n, IntFun f, int a, int b) {$/;"	f
areabelow	utils/hp2ps/Main.c	/^floatish areabelow;$/;"	v
arena	libffi/build/src/dlmalloc.c	/^  MALLINFO_FIELD_TYPE arena;    \/* non-mmapped space allocated from system *\/$/;"	m	struct:mallinfo	file:
arena	rts/ProfHeap.c	/^    Arena     * arena;$/;"	m	struct:__anon44	file:
arena	rts/RetainerSet.c	/^static Arena *arena;            \/\/ arena in which we store retainer sets$/;"	v	file:
arenaAlloc	rts/Arena.c	/^arenaAlloc( Arena *arena, size_t size )$/;"	f
arenaBlocks	rts/Arena.c	/^arenaBlocks( void )$/;"	f
arenaFree	rts/Arena.c	/^arenaFree( Arena *arena )$/;"	f
arena_blocks	rts/Arena.c	/^static long arena_blocks = 0;$/;"	v	file:
arg	libffi/build/src/closures.c	/^  const char *arg;$/;"	m	struct:__anon1	file:
arg_init	libffi/build/src/aarch64/ffi.c	/^arg_init (struct arg_state *state)$/;"	f	file:
arg_state	libffi/build/src/aarch64/ffi.c	/^struct arg_state$/;"	s	file:
argp	libffi/build/src/arm/ffi.c	/^  char argp[];$/;"	m	struct:closure_frame	file:
args	libffi/build/src/x86/ffiw64.c	/^  UINT64 args[];$/;"	m	struct:win64_closure_frame	file:
argument_size	rts/Adjustor.c	/^    StgInt          argument_size;$/;"	m	struct:AdjustorStub	file:
arm_atomic_spin_lock	rts/OldARMAtomic.c	/^void arm_atomic_spin_lock()$/;"	f
arm_atomic_spin_trylock	rts/OldARMAtomic.c	/^static int arm_atomic_spin_trylock (void)$/;"	f	file:
arm_atomic_spin_unlock	rts/OldARMAtomic.c	/^void arm_atomic_spin_unlock()$/;"	f
assemble_loadvec	nofib/real/fem/inC/assemble_loadvec.c	/^assemble_loadvec() {$/;"	f
assemble_stiffness	nofib/real/fem/inC/assemble_stiffness.c	/^assemble_stiffness() {$/;"	f
assert	libffi/build/src/dlmalloc.c	1176;"	d	file:
assert	libffi/build/src/dlmalloc.c	1181;"	d	file:
assert	utils/coverity/model.c	17;"	d	file:
assert_in_nonmoving_heap	rts/sm/NonMoving.c	/^void assert_in_nonmoving_heap(StgPtr p)$/;"	f
assignNurseriesToCapabilities	rts/sm/Storage.c	/^assignNurseriesToCapabilities (uint32_t from, uint32_t to)$/;"	f	file:
assignNurseryToCapability	rts/sm/Storage.c	/^assignNurseryToCapability (Capability *cap, uint32_t n)$/;"	f
assign_to_ffi_arg	libffi/build/src/tile/ffi.c	/^assign_to_ffi_arg(ffi_sarg *out, void *in, const ffi_type *type,$/;"	f	file:
associate	rts/RetainerProfile.c	/^associate( StgClosure *c, RetainerSet *s )$/;"	f
atomic_spin	rts/OldARMAtomic.c	/^static volatile int atomic_spin = 0;$/;"	v	file:
auxfile	utils/hp2ps/Main.c	/^char *auxfile;$/;"	v
auxfp	utils/hp2ps/Main.c	/^static FILE* auxfp;$/;"	v	file:
auxxrange	utils/hp2ps/Main.c	/^floatish auxxrange = 0.0;$/;"	v
auxyrange	utils/hp2ps/Main.c	/^floatish auxyrange = 0.0;$/;"	v
available	rts/Pool.c	/^    PoolEntry *available;$/;"	m	struct:Pool_	file:
awaitEvent	rts/posix/Select.c	/^awaitEvent(bool wait)$/;"	f
awaitEvent	rts/win32/AwaitEvent.c	/^awaitEvent(bool wait)$/;"	f
awaitRequests	rts/win32/AsyncIO.c	/^awaitRequests(bool wait)$/;"	f
awaitUserSignals	rts/posix/Signals.c	/^awaitUserSignals(void)$/;"	f
awaitUserSignals	rts/win32/ConsoleHandler.c	/^void awaitUserSignals(void)$/;"	f
awakenBlockedExceptionQueue	rts/RaiseAsync.c	/^awakenBlockedExceptionQueue (Capability *cap, StgTSO *tso)$/;"	f
b	libffi/build/testsuite/libffi.call/cls_12byte.c	/^  int b;$/;"	m	struct:cls_struct_12byte	file:
b	libffi/build/testsuite/libffi.call/cls_16byte.c	/^  double b;$/;"	m	struct:cls_struct_16byte	file:
b	libffi/build/testsuite/libffi.call/cls_18byte.c	/^  unsigned char b;$/;"	m	struct:cls_struct_18byte	file:
b	libffi/build/testsuite/libffi.call/cls_19byte.c	/^  unsigned char b;$/;"	m	struct:cls_struct_19byte	file:
b	libffi/build/testsuite/libffi.call/cls_20byte.c	/^  double b;$/;"	m	struct:cls_struct_20byte	file:
b	libffi/build/testsuite/libffi.call/cls_20byte1.c	/^  double b;$/;"	m	struct:cls_struct_20byte	file:
b	libffi/build/testsuite/libffi.call/cls_24byte.c	/^  double b;$/;"	m	struct:cls_struct_24byte	file:
b	libffi/build/testsuite/libffi.call/cls_2byte.c	/^  unsigned char b;$/;"	m	struct:cls_struct_2byte	file:
b	libffi/build/testsuite/libffi.call/cls_3_1byte.c	/^  unsigned char b;$/;"	m	struct:cls_struct_3_1byte	file:
b	libffi/build/testsuite/libffi.call/cls_3byte1.c	/^  unsigned char b;$/;"	m	struct:cls_struct_3byte	file:
b	libffi/build/testsuite/libffi.call/cls_3byte2.c	/^  unsigned short b;$/;"	m	struct:cls_struct_3byte_1	file:
b	libffi/build/testsuite/libffi.call/cls_4_1byte.c	/^  unsigned char b;$/;"	m	struct:cls_struct_4_1byte	file:
b	libffi/build/testsuite/libffi.call/cls_4byte.c	/^  unsigned short b;$/;"	m	struct:cls_struct_4byte	file:
b	libffi/build/testsuite/libffi.call/cls_5_1_byte.c	/^  unsigned char b;$/;"	m	struct:cls_struct_5byte	file:
b	libffi/build/testsuite/libffi.call/cls_5byte.c	/^  unsigned short b;$/;"	m	struct:cls_struct_5byte	file:
b	libffi/build/testsuite/libffi.call/cls_64byte.c	/^  double b;$/;"	m	struct:cls_struct_64byte	file:
b	libffi/build/testsuite/libffi.call/cls_6_1_byte.c	/^  unsigned char b;$/;"	m	struct:cls_struct_6byte	file:
b	libffi/build/testsuite/libffi.call/cls_6byte.c	/^  unsigned short b;$/;"	m	struct:cls_struct_6byte	file:
b	libffi/build/testsuite/libffi.call/cls_7_1_byte.c	/^  unsigned char b;$/;"	m	struct:cls_struct_7byte	file:
b	libffi/build/testsuite/libffi.call/cls_7byte.c	/^  unsigned short b;$/;"	m	struct:cls_struct_7byte	file:
b	libffi/build/testsuite/libffi.call/cls_8byte.c	/^  float b;$/;"	m	struct:cls_struct_8byte	file:
b	libffi/build/testsuite/libffi.call/cls_9byte1.c	/^  double b;$/;"	m	struct:cls_struct_9byte	file:
b	libffi/build/testsuite/libffi.call/cls_9byte2.c	/^  int b;$/;"	m	struct:cls_struct_9byte	file:
b	libffi/build/testsuite/libffi.call/cls_align_double.c	/^  double b;$/;"	m	struct:cls_struct_align	file:
b	libffi/build/testsuite/libffi.call/cls_align_float.c	/^  float b;$/;"	m	struct:cls_struct_align	file:
b	libffi/build/testsuite/libffi.call/cls_align_longdouble.c	/^  long double b;$/;"	m	struct:cls_struct_align	file:
b	libffi/build/testsuite/libffi.call/cls_align_longdouble_split.c	/^  long double b;$/;"	m	struct:cls_struct_align	file:
b	libffi/build/testsuite/libffi.call/cls_align_longdouble_split2.c	/^  long double b;$/;"	m	struct:cls_struct_align	file:
b	libffi/build/testsuite/libffi.call/cls_align_pointer.c	/^  void *b;$/;"	m	struct:cls_struct_align	file:
b	libffi/build/testsuite/libffi.call/cls_align_sint16.c	/^  signed short b;$/;"	m	struct:cls_struct_align	file:
b	libffi/build/testsuite/libffi.call/cls_align_sint32.c	/^  signed int b;$/;"	m	struct:cls_struct_align	file:
b	libffi/build/testsuite/libffi.call/cls_align_sint64.c	/^  signed long long b;$/;"	m	struct:cls_struct_align	file:
b	libffi/build/testsuite/libffi.call/cls_align_uint16.c	/^  unsigned short b;$/;"	m	struct:cls_struct_align	file:
b	libffi/build/testsuite/libffi.call/cls_align_uint32.c	/^  unsigned int b;$/;"	m	struct:cls_struct_align	file:
b	libffi/build/testsuite/libffi.call/cls_align_uint64.c	/^  unsigned long long b;$/;"	m	struct:cls_struct_align	file:
b	libffi/build/testsuite/libffi.call/cls_struct_va1.c	/^  unsigned b;$/;"	m	struct:large_tag	file:
b	libffi/build/testsuite/libffi.call/cls_struct_va1.c	/^  unsigned char b;$/;"	m	struct:small_tag	file:
b	libffi/build/testsuite/libffi.call/huge_struct.c	/^	int8_t		b;$/;"	m	struct:BigStruct	file:
b	libffi/build/testsuite/libffi.call/nested_struct.c	/^  float b;$/;"	m	struct:cls_struct_16byte1	file:
b	libffi/build/testsuite/libffi.call/nested_struct1.c	/^  float b;$/;"	m	struct:cls_struct_16byte1	file:
b	libffi/build/testsuite/libffi.call/nested_struct10.c	/^  unsigned char b;$/;"	m	struct:A	file:
b	libffi/build/testsuite/libffi.call/nested_struct11.c	/^  B b;$/;"	m	struct:C	file:
b	libffi/build/testsuite/libffi.call/nested_struct2.c	/^  unsigned char b;$/;"	m	struct:A	file:
b	libffi/build/testsuite/libffi.call/nested_struct3.c	/^  unsigned char b;$/;"	m	struct:A	file:
b	libffi/build/testsuite/libffi.call/nested_struct4.c	/^  unsigned char b;$/;"	m	struct:A	file:
b	libffi/build/testsuite/libffi.call/nested_struct5.c	/^  unsigned char b;$/;"	m	struct:A	file:
b	libffi/build/testsuite/libffi.call/nested_struct6.c	/^  unsigned char b;$/;"	m	struct:A	file:
b	libffi/build/testsuite/libffi.call/nested_struct7.c	/^  unsigned char b;$/;"	m	struct:A	file:
b	libffi/build/testsuite/libffi.call/nested_struct8.c	/^  unsigned char b;$/;"	m	struct:A	file:
b	libffi/build/testsuite/libffi.call/nested_struct9.c	/^  unsigned long long b;$/;"	m	struct:A	file:
b	libffi/build/testsuite/libffi.call/problem1.c	/^  double b;$/;"	m	struct:my_ffi_struct	file:
b	libffi/build/testsuite/libffi.call/stret_large.c	/^	double b;$/;"	m	struct:struct_108byte	file:
b	libffi/build/testsuite/libffi.call/stret_large2.c	/^	double b;$/;"	m	struct:struct_116byte	file:
b	libffi/build/testsuite/libffi.call/stret_medium.c	/^	double b;$/;"	m	struct:struct_72byte	file:
b	libffi/build/testsuite/libffi.call/stret_medium2.c	/^	double b;$/;"	m	struct:struct_72byte	file:
b	libffi/build/testsuite/libffi.call/testclosure.c	/^  float b;$/;"	m	struct:cls_struct_combined	file:
b	libffi/build/testsuite/libffi.call/va_1.c	/^  unsigned b;$/;"	m	struct:large_tag	file:
b	libffi/build/testsuite/libffi.call/va_1.c	/^  unsigned char b;$/;"	m	struct:small_tag	file:
b	libffi/build/testsuite/libffi.call/va_struct1.c	/^  unsigned b;$/;"	m	struct:large_tag	file:
b	libffi/build/testsuite/libffi.call/va_struct1.c	/^  unsigned char b;$/;"	m	struct:small_tag	file:
b	libffi/build/testsuite/libffi.call/va_struct2.c	/^  unsigned b;$/;"	m	struct:large_tag	file:
b	libffi/build/testsuite/libffi.call/va_struct2.c	/^  unsigned char b;$/;"	m	struct:small_tag	file:
b	libffi/build/testsuite/libffi.call/va_struct3.c	/^  unsigned b;$/;"	m	struct:large_tag	file:
b	libffi/build/testsuite/libffi.call/va_struct3.c	/^  unsigned char b;$/;"	m	struct:small_tag	file:
b	nofib/gc/fulsom/raster/raster.c	/^  int r,g,b;$/;"	m	struct:pixm	file:
b	nofib/real/fulsom/raster/raster.c	/^  int r,g,b;$/;"	m	struct:pixm	file:
b	testsuite/tests/rts/T11788.c	/^int b()$/;"	f
b	testsuite/tests/rts/linker/T11223/foo.c	/^int b()$/;"	f
b_x	libffi/build/testsuite/libffi.call/nested_struct11.c	/^  float b_x;$/;"	m	struct:B	file:
b_y	libffi/build/testsuite/libffi.call/nested_struct11.c	/^  float b_y;$/;"	m	struct:B	file:
back_chain	libffi/build/src/s390/ffi.c	/^  void *back_chain;$/;"	m	struct:call_frame	file:
backtraceAlloc	rts/Libdw.c	/^static Backtrace *backtraceAlloc(void) {$/;"	f	file:
backtraceAllocChunk	rts/Libdw.c	/^static BacktraceChunk *backtraceAllocChunk(BacktraceChunk *next) {$/;"	f	file:
backtraceFree	rts/Libdw.c	/^void backtraceFree(Backtrace *bt STG_UNUSED) { }$/;"	f
backtraceFree	rts/Libdw.c	/^void backtraceFree(Backtrace *bt) {$/;"	f
backtracePush	rts/Libdw.c	/^static void backtracePush(Backtrace *bt, StgPtr pc) {$/;"	f	file:
backtrace_handler	rts/posix/Signals.c	/^backtrace_handler(int sig STG_UNUSED)$/;"	f	file:
bar	libffi/build/testsuite/libffi.call/many2.c	/^bar (uint8_t a, uint8_t b, uint8_t c, uint8_t d,$/;"	f
bar	testsuite/tests/ghci/linking/dyn/B.c	/^EXPORT int bar()$/;"	f
bar	testsuite/tests/rts/T12031/bar.c	/^void bar(void) {$/;"	f
bar	testsuite/tests/rts/linker/section_alignment.c	/^alignas(32) int bar = 0;       \/* goes to __common that follows __data$/;"	v
bar_2d_force	nofib/real/fem/inC/bar_2d.c	/^float bar_2d_force(ea,xl,yl,xr,yr,ul,vl,ur,vr)$/;"	f
bar_2d_stif	nofib/real/fem/inC/bar_2d.c	/^bar_2d_stif(ea,xl,yl,xr,yr,ke)$/;"	f
barf	rts/RtsMessages.c	/^barf(const char*s, ...)$/;"	f
barf	utils/coverity/model.c	/^void barf(const char *s, ...)$/;"	f
base	libffi/build/src/dlmalloc.c	/^  char*        base;             \/* base address *\/$/;"	m	struct:malloc_segment	file:
base	rts/win32/OSMem.c	/^    char* base;        \/\/ base address, non-MBLOCK-aligned$/;"	m	struct:block_rec_	file:
base	rts/win32/OSMem.c	/^    char* base;    \/\/ non-aligned base address, directly from VirtualAlloc$/;"	m	struct:alloc_rec_	file:
baseName	utils/hp2ps/Main.c	/^static char *baseName; \/* "basename" is a std C library name (sigh) *\/$/;"	v	file:
base_getErrorMessage	libraries/base/cbits/Win32Utils.c	/^LPWSTR base_getErrorMessage(DWORD err)$/;"	f
baz	testsuite/tests/rts/T12031/baz.c	/^void baz(void) {$/;"	f
bb	libffi/build/testsuite/libffi.call/huge_struct.c	/^	int16_t		bb;$/;"	m	struct:BigStruct	file:
bc	nofib/real/fem/inC/fem.c	/^        int   bc;$/;"	m	struct:__anon27	file:
bcount	rts/Hash.c	/^    int bcount;             \/* Number of buckets *\/$/;"	m	struct:hashtable	file:
bcp	nofib/imaginary/paraffins/paraffins.c	/^	PARAFFIN     *bcp;$/;"	m	struct:tuple	file:
begin	nofib/shootout/reverse-complement/revcomp-c.c	/^   char *begin, *end;$/;"	m	struct:work_s	file:
begin	rts/eventlog/EventLog.c	/^  StgInt8 *begin;$/;"	m	struct:_EventsBuf	file:
bflag	utils/hp2ps/Main.c	/^boolish bflag = 0; 	\/* use a big title box			*\/$/;"	v
big_int_union	libffi/build/src/x86/ffi64.c	/^union big_int_union$/;"	u	file:
bin_find	libffi/build/src/dlmalloc.c	/^static int bin_find(mstate m, mchunkptr x) {$/;"	f	file:
bindex_t	libffi/build/src/dlmalloc.c	/^typedef size_t bindex_t;               \/* Described below *\/$/;"	t	file:
binmap_t	libffi/build/src/dlmalloc.c	/^typedef unsigned int binmap_t;         \/* Described below *\/$/;"	t	file:
bit_for_tree_index	libffi/build/src/dlmalloc.c	2334;"	d	file:
bit_reverse_copy	nofib/spectral/fft2/fft.c	/^static void bit_reverse_copy(complex * input, complex * output, int n)$/;"	f	file:
bk	libffi/build/src/dlmalloc.c	/^  struct malloc_chunk* bk;$/;"	m	struct:malloc_chunk	typeref:struct:malloc_chunk::malloc_chunk	file:
bk	libffi/build/src/dlmalloc.c	/^  struct malloc_tree_chunk* bk;$/;"	m	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
blackHoleOwner	rts/Messages.c	/^StgTSO * blackHoleOwner (StgClosure *bh)$/;"	f
blah	testsuite/tests/ffi/should_run/T8083_c.c	/^void blah (void) {$/;"	f
blkcmp	libraries/base/cbits/WCsubst.c	/^static int blkcmp(const void *vk,const void *vb)$/;"	f	file:
blockUserSignals	rts/posix/Signals.c	/^blockUserSignals(void)$/;"	f
blockUserSignals	rts/win32/ConsoleHandler.c	/^blockUserSignals(void)$/;"	f
block_is_full	rts/sm/CNF.c	/^block_is_full (StgCompactNFDataBlock *block)$/;"	f	file:
block_rec	rts/win32/OSMem.c	/^} block_rec;$/;"	t	typeref:struct:block_rec_	file:
block_rec_	rts/win32/OSMem.c	/^typedef struct block_rec_ {$/;"	s	file:
blockedThrowTo	rts/RaiseAsync.c	/^blockedThrowTo (Capability *cap, StgTSO *target, MessageThrowTo *msg)$/;"	f
blocked_queue_hd	rts/Schedule.c	/^StgTSO *blocked_queue_hd = NULL;$/;"	v
blocked_queue_tl	rts/Schedule.c	/^StgTSO *blocked_queue_tl = NULL;$/;"	v
bool	nofib/imaginary/paraffins/paraffins.c	/^typedef enum boolean bool;$/;"	t	typeref:enum:boolean	file:
boolean	nofib/imaginary/paraffins/paraffins.c	/^enum boolean { FALSE, TRUE };$/;"	g	file:
borderheight	utils/hp2ps/Dimensions.c	/^floatish borderheight   = BORDER_HEIGHT;$/;"	v
borderspace	utils/hp2ps/Dimensions.c	/^floatish borderspace    = BORDER_SPACE;$/;"	v
borderthick	utils/hp2ps/Dimensions.c	/^floatish borderthick    = BORDER_THICK;$/;"	v
borderwidth	utils/hp2ps/Dimensions.c	/^floatish borderwidth    = BORDER_WIDTH;$/;"	v
boundTaskExiting	rts/Task.c	/^boundTaskExiting (Task *task)$/;"	f
broadcastCondition	rts/posix/OSThreads.c	/^broadcastCondition ( Condition* pCond )$/;"	f
broadcastCondition	rts/win32/OSThreads.c	/^broadcastCondition ( Condition* pCond )$/;"	f
buf_append	rts/ProfHeap.c	/^buf_append(char *p, const char *q, char *end)$/;"	f	file:
bufs	testsuite/tests/rts/testwsdeque.c	/^int bufs[THREADS];$/;"	v
buildOCSectionIndices	rts/CheckUnload.c	/^static OCSectionIndices* buildOCSectionIndices(ObjectCode *ocs)$/;"	f	file:
build_fixup_table	rts/sm/CNF.c	/^build_fixup_table (StgCompactNFDataBlock *block, uint32_t *pcount)$/;"	f	file:
build_watch_queue_entries_for_trec	rts/STM.c	/^static void build_watch_queue_entries_for_trec(Capability *cap,$/;"	f	file:
bump_static_flag	rts/sm/NonMovingMark.c	/^bump_static_flag(StgClosure **link_field, StgClosure *q STG_UNUSED)$/;"	f	file:
byteSwap	libraries/base/cbits/md5.c	/^byteSwap(uint32_t *buf, unsigned words)$/;"	f	file:
byteread	libraries/binary/benchmarks/CBenchmark.c	/^unsigned char byteread(unsigned char *a, int bytes) {$/;"	f
bytewrite	libraries/binary/benchmarks/CBenchmark.c	/^void bytewrite(unsigned char *a, int bytes) {$/;"	f
c	libffi/build/testsuite/libffi.call/cls_12byte.c	/^  int c;$/;"	m	struct:cls_struct_12byte	file:
c	libffi/build/testsuite/libffi.call/cls_16byte.c	/^  int c;$/;"	m	struct:cls_struct_16byte	file:
c	libffi/build/testsuite/libffi.call/cls_18byte.c	/^  unsigned char c;$/;"	m	struct:cls_struct_18byte	file:
c	libffi/build/testsuite/libffi.call/cls_19byte.c	/^  unsigned char c;$/;"	m	struct:cls_struct_19byte	file:
c	libffi/build/testsuite/libffi.call/cls_20byte.c	/^  int c;$/;"	m	struct:cls_struct_20byte	file:
c	libffi/build/testsuite/libffi.call/cls_20byte1.c	/^  double c;$/;"	m	struct:cls_struct_20byte	file:
c	libffi/build/testsuite/libffi.call/cls_24byte.c	/^  int c;$/;"	m	struct:cls_struct_24byte	file:
c	libffi/build/testsuite/libffi.call/cls_3_1byte.c	/^  unsigned char c;$/;"	m	struct:cls_struct_3_1byte	file:
c	libffi/build/testsuite/libffi.call/cls_4_1byte.c	/^  unsigned char c;$/;"	m	struct:cls_struct_4_1byte	file:
c	libffi/build/testsuite/libffi.call/cls_5_1_byte.c	/^  unsigned char c;$/;"	m	struct:cls_struct_5byte	file:
c	libffi/build/testsuite/libffi.call/cls_5byte.c	/^  unsigned char c;$/;"	m	struct:cls_struct_5byte	file:
c	libffi/build/testsuite/libffi.call/cls_64byte.c	/^  double c;$/;"	m	struct:cls_struct_64byte	file:
c	libffi/build/testsuite/libffi.call/cls_6_1_byte.c	/^  unsigned char c;$/;"	m	struct:cls_struct_6byte	file:
c	libffi/build/testsuite/libffi.call/cls_6byte.c	/^  unsigned char c;$/;"	m	struct:cls_struct_6byte	file:
c	libffi/build/testsuite/libffi.call/cls_7_1_byte.c	/^  unsigned char c;$/;"	m	struct:cls_struct_7byte	file:
c	libffi/build/testsuite/libffi.call/cls_7byte.c	/^  unsigned char c;$/;"	m	struct:cls_struct_7byte	file:
c	libffi/build/testsuite/libffi.call/cls_align_double.c	/^  unsigned char c;$/;"	m	struct:cls_struct_align	file:
c	libffi/build/testsuite/libffi.call/cls_align_float.c	/^  unsigned char c;$/;"	m	struct:cls_struct_align	file:
c	libffi/build/testsuite/libffi.call/cls_align_longdouble.c	/^  unsigned char c;$/;"	m	struct:cls_struct_align	file:
c	libffi/build/testsuite/libffi.call/cls_align_longdouble_split.c	/^  long double c;$/;"	m	struct:cls_struct_align	file:
c	libffi/build/testsuite/libffi.call/cls_align_longdouble_split2.c	/^  long double c;$/;"	m	struct:cls_struct_align	file:
c	libffi/build/testsuite/libffi.call/cls_align_pointer.c	/^  unsigned char c;$/;"	m	struct:cls_struct_align	file:
c	libffi/build/testsuite/libffi.call/cls_align_sint16.c	/^  unsigned char c;$/;"	m	struct:cls_struct_align	file:
c	libffi/build/testsuite/libffi.call/cls_align_sint32.c	/^  unsigned char c;$/;"	m	struct:cls_struct_align	file:
c	libffi/build/testsuite/libffi.call/cls_align_sint64.c	/^  unsigned char c;$/;"	m	struct:cls_struct_align	file:
c	libffi/build/testsuite/libffi.call/cls_align_uint16.c	/^  unsigned char c;$/;"	m	struct:cls_struct_align	file:
c	libffi/build/testsuite/libffi.call/cls_align_uint32.c	/^  unsigned char c;$/;"	m	struct:cls_struct_align	file:
c	libffi/build/testsuite/libffi.call/cls_align_uint64.c	/^  unsigned char c;$/;"	m	struct:cls_struct_align	file:
c	libffi/build/testsuite/libffi.call/cls_struct_va1.c	/^  unsigned c;$/;"	m	struct:large_tag	file:
c	libffi/build/testsuite/libffi.call/float1.c	/^  unsigned char c[sizeof (double)];$/;"	m	union:__anon9	file:
c	libffi/build/testsuite/libffi.call/float4.c	/^  unsigned char c[sizeof (double)];$/;"	m	union:__anon10	file:
c	libffi/build/testsuite/libffi.call/huge_struct.c	/^	uint16_t	c;$/;"	m	struct:BigStruct	file:
c	libffi/build/testsuite/libffi.call/nested_struct.c	/^  int c;$/;"	m	struct:cls_struct_16byte1	file:
c	libffi/build/testsuite/libffi.call/nested_struct1.c	/^  int c;$/;"	m	struct:cls_struct_16byte1	file:
c	libffi/build/testsuite/libffi.call/problem1.c	/^  double c;$/;"	m	struct:my_ffi_struct	file:
c	libffi/build/testsuite/libffi.call/stret_large.c	/^	double c;$/;"	m	struct:struct_108byte	file:
c	libffi/build/testsuite/libffi.call/stret_large2.c	/^	double c;$/;"	m	struct:struct_116byte	file:
c	libffi/build/testsuite/libffi.call/stret_medium.c	/^	double c;$/;"	m	struct:struct_72byte	file:
c	libffi/build/testsuite/libffi.call/stret_medium2.c	/^	double c;$/;"	m	struct:struct_72byte	file:
c	libffi/build/testsuite/libffi.call/testclosure.c	/^  float c;$/;"	m	struct:cls_struct_combined	file:
c	libffi/build/testsuite/libffi.call/va_1.c	/^  unsigned c;$/;"	m	struct:large_tag	file:
c	libffi/build/testsuite/libffi.call/va_struct1.c	/^  unsigned c;$/;"	m	struct:large_tag	file:
c	libffi/build/testsuite/libffi.call/va_struct2.c	/^  unsigned c;$/;"	m	struct:large_tag	file:
c	libffi/build/testsuite/libffi.call/va_struct3.c	/^  unsigned c;$/;"	m	struct:large_tag	file:
c	nofib/shootout/fasta/fasta-c.c	/^   char c;$/;"	m	struct:__anon32	file:
c	nofib/spectral/simple/simple.c	/^double c,new_c;$/;"	v
c	rts/ProfHeap.c	/^    } c;$/;"	m	struct:_counter	typeref:union:_counter::__anon42	file:
c	rts/TraverseHeap.c	/^    StgClosure *c;$/;"	m	struct:stackElement_	file:
c	testsuite/tests/rts/T11788.c	/^int c()$/;"	f
c	testsuite/tests/rts/linker/T11223/foo.c	/^int c()$/;"	f
c0	nofib/spectral/simple/simple.c	/^double c0 = 1.22474487;$/;"	v
c1	libffi/build/testsuite/libffi.call/struct5.c	/^  char c1;$/;"	m	struct:__anon15	file:
c1	nofib/spectral/simple/simple.c	/^double c1 = 0.50;$/;"	v
c2	libffi/build/testsuite/libffi.call/struct5.c	/^  char c2;$/;"	m	struct:__anon15	file:
cFoo2	libraries/Cabal/cabal-testsuite/PackageTests/Exec/T4049/csrc/MyForeignLibWrapper.c	/^int cFoo2() {$/;"	f
cFoo2	libraries/Cabal/cabal-testsuite/PackageTests/ForeignLibs/csrc/MyForeignLibWrapper.c	/^int cFoo2() {$/;"	f
c_AlphaBlend	libraries/Win32/cbits/alphablend.c	/^BOOL c_AlphaBlend ( HDC hdcDest, int nXOriginDest, int nYOriginDest, int nWidthDest, int hHeightDest$/;"	f
c_shades	utils/hp2ps/Shade.c	/^static floatish c_shades[ N_COLOUR_SHADES ] = {$/;"	v	file:
calcNeeded	rts/sm/Storage.c	/^calcNeeded (bool force_major, memcount *blocks_needed)$/;"	f
calcTotalAllocated	rts/sm/Storage.c	/^calcTotalAllocated (void)$/;"	f
calcTotalCompactW	rts/sm/Storage.c	/^StgWord calcTotalCompactW (void)$/;"	f
calcTotalLargeObjectsW	rts/sm/Storage.c	/^StgWord calcTotalLargeObjectsW (void)$/;"	f
calc_n32_return_struct_flags	libffi/build/src/mips/ffi.c	/^calc_n32_return_struct_flags(int soft_float, ffi_type *arg)$/;"	f	file:
calc_n32_struct_flags	libffi/build/src/mips/ffi.c	/^calc_n32_struct_flags(int soft_float, ffi_type *arg,$/;"	f	file:
call	rts/Adjustor.c	/^    unsigned char   call[8];$/;"	m	struct:AdjustorStub	file:
call16	testsuite/tests/ffi/should_run/T2594_c.c	/^void call16(funtype16 fun) { fun(-1); }$/;"	f
call32	testsuite/tests/ffi/should_run/T2594_c.c	/^void call32(funtype32 fun) { fun(-1); }$/;"	f
call64	testsuite/tests/ffi/should_run/T2594_c.c	/^void call64(funtype64 fun) { fun(-1); }$/;"	f
call8	testsuite/tests/ffi/should_run/T2594_c.c	/^void call8 (funtype8 fun)  { fun(-1); }$/;"	f
callC	nofib/smp/callback001/cbits.c	/^void callC( FUNC* f) {$/;"	f
callC	nofib/smp/callback002/cbits.c	/^void callC( FUNC* f) {$/;"	f
callC	testsuite/tests/ffi/should_run/ffi014_cbits.c	/^void callC( FUNC* f) {$/;"	f
call_context	libffi/build/src/aarch64/ffi.c	/^struct call_context$/;"	s	file:
call_fn_blob	testsuite/tests/ffi/should_run/T4221_c.c	/^double call_fn_blob(fn_blob* fn_blob, double arg) {$/;"	f
call_frame	libffi/build/src/arm/ffi.c	/^struct call_frame$/;"	s	file:
call_frame	libffi/build/src/s390/ffi.c	/^struct call_frame$/;"	s	file:
call_frame	libffi/build/src/x86/ffi.c	/^struct call_frame$/;"	s	file:
callback	testsuite/tests/concurrent/should_run/hs_try_putmvar001_c.c	/^struct callback {$/;"	s	file:
callback	testsuite/tests/concurrent/should_run/hs_try_putmvar001_c.c	/^void* callback(struct callback *p)$/;"	f
callback	testsuite/tests/concurrent/should_run/hs_try_putmvar003_c.c	/^struct callback {$/;"	s	file:
callback	testsuite/tests/concurrent/should_run/hs_try_putmvar003_c.c	/^void* callback(struct callback_queue *q)$/;"	f
callback_queue	testsuite/tests/concurrent/should_run/hs_try_putmvar003_c.c	/^struct callback_queue {$/;"	s	file:
callee	libffi/build/testsuite/libffi.call/problem1.c	/^my_ffi_struct callee(struct my_ffi_struct a1, struct my_ffi_struct a2)$/;"	f
calloc_must_clear	libffi/build/src/dlmalloc.c	1768;"	d	file:
calloc_must_clear	libffi/build/src/dlmalloc.c	1770;"	d	file:
cap	testsuite/tests/concurrent/should_run/hs_try_putmvar001_c.c	/^    int cap;$/;"	m	struct:callback	file:
cap	testsuite/tests/concurrent/should_run/hs_try_putmvar003_c.c	/^    int cap;$/;"	m	struct:callback	file:
capEventBuf	rts/eventlog/EventLog.c	/^EventsBuf *capEventBuf; \/\/ one EventsBuf for each Capability$/;"	v
capabilities	rts/Capability.c	/^Capability **capabilities = NULL;$/;"	v
capno	rts/eventlog/EventLog.c	/^  EventCapNo capno; \/\/ which capability this buffer belongs to, or -1$/;"	m	struct:_EventsBuf	file:
caseconv	libraries/base/cbits/WCsubst.c	5081;"	d	file:
catch_signal	libraries/haskeline/examples/export/main.c	/^void catch_signal(int signo) {$/;"	f
category	libraries/base/cbits/WCsubst.c	/^	unsigned int category;$/;"	m	struct:_convrule_	file:
catnumber	libraries/base/cbits/WCsubst.c	/^	unsigned int catnumber;$/;"	m	struct:_convrule_	file:
cc	libffi/build/testsuite/libffi.call/huge_struct.c	/^	uint32_t	cc;$/;"	m	struct:BigStruct	file:
ccp	nofib/imaginary/paraffins/paraffins.c	/^	PARAFFIN     *ccp;$/;"	m	struct:tuple	file:
ccsSetSelected	rts/Profiling.c	/^ccsSetSelected (CostCentreStack *ccs)$/;"	f	file:
ccs_mutex	rts/Profiling.c	/^static Mutex ccs_mutex;$/;"	v	file:
censuses	rts/ProfHeap.c	/^static Census *censuses = NULL;$/;"	v	file:
cflag	utils/hp2ps/Main.c	/^boolish cflag = 0;      \/* colour output                        *\/$/;"	v
ch	utils/hp2ps/HpFile.c	/^int ch;                                         \/* last character read  *\/$/;"	v
change_mparam	libffi/build/src/dlmalloc.c	/^static int change_mparam(int param_number, int value) {$/;"	f	file:
char_to_ffi_type	rts/Adjustor.c	/^static ffi_type * char_to_ffi_type(char c)$/;"	f	file:
checkAddress	rts/CheckUnload.c	/^static void checkAddress (HashTable *addrs, const void *addr,$/;"	f	file:
checkAndLoadImportLibrary	rts/linker/PEi386.c	/^bool checkAndLoadImportLibrary( pathchar* arch_name, char* member_name, FILE* f )$/;"	f
checkBlockingQueues	rts/Threads.c	/^checkBlockingQueues (Capability *cap, StgTSO *tso)$/;"	f
checkClosure	rts/sm/Sanity.c	/^checkClosure( const StgClosure* p )$/;"	f
checkClosureProfSanity	rts/sm/Sanity.c	/^checkClosureProfSanity(const StgClosure *p)$/;"	f	file:
checkClosureShallow	rts/sm/Sanity.c	/^checkClosureShallow( const StgClosure* p )$/;"	f	file:
checkCompactObjects	rts/sm/Sanity.c	/^checkCompactObjects(bdescr *bd)$/;"	f	file:
checkFPUStack	rts/RtsUtils.c	/^void checkFPUStack(void)$/;"	f
checkFatArchive	rts/linker/LoadArchive.c	/^static StgBool checkFatArchive(char magic[static 20], FILE* f, pathchar* path)$/;"	f	file:
checkFreeListSanity	rts/sm/BlockAlloc.c	/^checkFreeListSanity(void)$/;"	f
checkFullHeap	rts/sm/Sanity.c	/^static void checkFullHeap (bool after_major_gc)$/;"	f	file:
checkGeneration	rts/sm/Sanity.c	/^static void checkGeneration (generation *gen,$/;"	f	file:
checkGlobalTSOList	rts/sm/Sanity.c	/^checkGlobalTSOList (bool checkTSOs)$/;"	f
checkHeapChain	rts/sm/Sanity.c	/^void checkHeapChain (bdescr *bd)$/;"	f
checkHeapChunk	rts/sm/Sanity.c	/^checkHeapChunk(StgPtr start, StgPtr end)$/;"	f
checkIfDllLoaded	rts/linker/PEi386.c	/^static bool checkIfDllLoaded(HINSTANCE instance)$/;"	f	file:
checkLargeBitmap	rts/sm/Sanity.c	/^checkLargeBitmap( StgPtr payload, StgLargeBitmap* large_bitmap, uint32_t size )$/;"	f	file:
checkLargeObjects	rts/sm/Sanity.c	/^checkLargeObjects(bdescr *bd)$/;"	f
checkLocalMutableLists	rts/sm/Sanity.c	/^checkLocalMutableLists (uint32_t cap_no)$/;"	f	file:
checkLoop	rts/Profiling.c	/^checkLoop (CostCentreStack *ccs, CostCentre *cc)$/;"	f	file:
checkMutableList	rts/sm/Sanity.c	/^checkMutableList( bdescr *mut_bd, uint32_t gen )$/;"	f	file:
checkMutableLists	rts/sm/Sanity.c	/^checkMutableLists (void)$/;"	f	file:
checkNonmovingHeap	rts/sm/Sanity.c	/^void checkNonmovingHeap (const struct NonmovingHeap *heap)$/;"	f
checkNonmovingSegments	rts/sm/Sanity.c	/^static void checkNonmovingSegments (struct NonmovingSegment *seg)$/;"	f	file:
checkNurserySanity	rts/sm/Sanity.c	/^checkNurserySanity (nursery *nursery)$/;"	f
checkPAP	rts/sm/Sanity.c	/^checkPAP (StgClosure *tagged_fun, StgClosure** payload, StgWord n_args)$/;"	f	file:
checkProddableBlock	rts/Linker.c	/^checkProddableBlock (ObjectCode *oc, void *addr, size_t size )$/;"	f
checkPtrInArena	rts/Arena.c	/^void checkPtrInArena( StgPtr p, Arena *arena )$/;"	f
checkRunQueue	rts/sm/Sanity.c	/^checkRunQueue(Capability *cap)$/;"	f
checkSTACK	rts/sm/Sanity.c	/^checkSTACK (StgStack *stack)$/;"	f	file:
checkSanity	rts/sm/Sanity.c	/^void checkSanity (bool after_gc, bool major_gc)$/;"	f
checkSmallBitmap	rts/sm/Sanity.c	/^checkSmallBitmap( StgPtr payload, StgWord bitmap, uint32_t size )$/;"	f	file:
checkSparkCountInvariant	rts/Capability.c	/^bool checkSparkCountInvariant (void)$/;"	f
checkStackChunk	rts/sm/Sanity.c	/^checkStackChunk( StgPtr sp, StgPtr stack_end )$/;"	f
checkStackFrame	rts/sm/Sanity.c	/^checkStackFrame( StgPtr c )$/;"	f
checkStaticObjects	rts/sm/Sanity.c	/^checkStaticObjects ( StgClosure* static_objects )$/;"	f
checkSuid	rts/RtsFlags.c	/^static void checkSuid (RtsOptsEnabledEnum enabled STG_UNUSED)$/;"	f	file:
checkSuid	rts/RtsFlags.c	/^static void checkSuid(RtsOptsEnabledEnum enabled)$/;"	f	file:
checkTSO	rts/sm/Sanity.c	/^checkTSO(StgTSO *tso)$/;"	f
checkUniqueRange	compiler/cbits/genSym.c	/^STATIC_INLINE void checkUniqueRange(HsInt u STG_UNUSED) {$/;"	f
checkUnload	rts/CheckUnload.c	/^void checkUnload (StgClosure *static_objects)$/;"	f
checkUnsafe	rts/RtsFlags.c	/^static void checkUnsafe(RtsOptsEnabledEnum enabled)$/;"	f	file:
checkWeakPtrSanity	rts/sm/MarkWeak.c	/^static void checkWeakPtrSanity(StgWeak *hd, StgWeak *tl)$/;"	f	file:
check_free_chunk	libffi/build/src/dlmalloc.c	2258;"	d	file:
check_free_chunk	libffi/build/src/dlmalloc.c	2266;"	d	file:
check_if_enough_mem	libraries/Win32/cbits/diatemp.c	/^check_if_enough_mem(DIA_TEMPLATE* dia, LPCWSTR text, LPCWSTR classname)$/;"	f	file:
check_in_mut_list	rts/sm/NonMoving.c	/^void check_in_mut_list(StgClosure *p)$/;"	f
check_in_nonmoving_heap	rts/sm/NonMovingMark.c	/^bool check_in_nonmoving_heap(StgClosure *p) {$/;"	f	file:
check_inuse_chunk	libffi/build/src/dlmalloc.c	2259;"	d	file:
check_inuse_chunk	libffi/build/src/dlmalloc.c	2267;"	d	file:
check_malloc_state	libffi/build/src/dlmalloc.c	2262;"	d	file:
check_malloc_state	libffi/build/src/dlmalloc.c	2271;"	d	file:
check_malloced_chunk	libffi/build/src/dlmalloc.c	2260;"	d	file:
check_malloced_chunk	libffi/build/src/dlmalloc.c	2269;"	d	file:
check_mmapped_chunk	libffi/build/src/dlmalloc.c	2261;"	d	file:
check_mmapped_chunk	libffi/build/src/dlmalloc.c	2270;"	d	file:
check_object_freed	testsuite/tests/rts/linker/unload_multiple_objs/linker_unload_multiple_objs.c	/^void check_object_freed(char *obj_path) {$/;"	f
check_object_in_compact	rts/sm/CNF.c	/^check_object_in_compact (StgCompactNFData *str, StgClosure *p)$/;"	f
check_object_unloaded_but_not_freed	testsuite/tests/rts/linker/unload_multiple_objs/linker_unload_multiple_objs.c	/^void check_object_unloaded_but_not_freed(char *obj_path) {$/;"	f
check_read_only	rts/STM.c	/^static StgBool check_read_only(StgTRecHeader *trec STG_UNUSED) {$/;"	f	file:
check_segment_merge	libffi/build/src/dlmalloc.c	1952;"	d	file:
check_segment_merge	libffi/build/src/dlmalloc.c	1977;"	d	file:
check_tail	rts/sm/BlockAlloc.c	/^check_tail (bdescr *bd)$/;"	f	file:
check_top_chunk	libffi/build/src/dlmalloc.c	2263;"	d	file:
check_top_chunk	libffi/build/src/dlmalloc.c	2268;"	d	file:
checkattr	libraries/base/cbits/WCsubst.c	/^inline static int checkattr(int c,unsigned int catmask)$/;"	f	file:
checkattr_s	libraries/base/cbits/WCsubst.c	/^inline static int checkattr_s(int c,unsigned int catmask)$/;"	f	file:
checking	libffi/build/testsuite/libffi.call/negint.c	/^static int checking(int a, short b, signed char c)$/;"	f	file:
child	libffi/build/src/dlmalloc.c	/^  struct malloc_tree_chunk* child[2];$/;"	m	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
childFailed	libraries/process/cbits/runProcess.c	/^static void childFailed(int pipe, int failCode) {$/;"	f	file:
chunk	rts/Hash.c	/^  HashList *chunk;$/;"	m	struct:chunklist	file:
chunk2mem	libffi/build/src/dlmalloc.c	1693;"	d	file:
chunk_minus_offset	libffi/build/src/dlmalloc.c	1738;"	d	file:
chunk_plus_offset	libffi/build/src/dlmalloc.c	1737;"	d	file:
chunklist	rts/Hash.c	/^typedef struct chunklist {$/;"	s	file:
chunks	rts/Hash.c	/^    HashListChunk *chunks;$/;"	m	struct:hashtable	file:
chunksize	libffi/build/src/dlmalloc.c	1731;"	d	file:
cif	libffi/build/src/x86/ffi.c	/^  ffi_cif *cif;					\/* 28 *\/$/;"	m	struct:closure_frame	file:
cinuse	libffi/build/src/dlmalloc.c	1729;"	d	file:
classify_argument	libffi/build/src/x86/ffi64.c	/^classify_argument (ffi_type *type, enum x86_64_reg_class classes[],$/;"	f	file:
clearImportSymbol	rts/RtsSymbolInfo.c	/^void clearImportSymbol(ObjectCode *owner, const void *label)$/;"	f
clear_cinuse	libffi/build/src/dlmalloc.c	1734;"	d	file:
clear_pinuse	libffi/build/src/dlmalloc.c	1733;"	d	file:
clear_segment	rts/sm/NonMovingSweep.c	/^clear_segment(struct NonmovingSegment* seg)$/;"	f	file:
clear_segment_free_blocks	rts/sm/NonMovingSweep.c	/^clear_segment_free_blocks(struct NonmovingSegment* seg)$/;"	f	file:
clear_smallmap	libffi/build/src/dlmalloc.c	2355;"	d	file:
clear_treemap	libffi/build/src/dlmalloc.c	2359;"	d	file:
clk_tck	libraries/base/cbits/sysconf.c	/^long clk_tck(void) {$/;"	f
closeAllRetainerSet	rts/RetainerSet.c	/^closeAllRetainerSet(void)$/;"	f
closeBlockMarker	rts/eventlog/EventLog.c	/^void closeBlockMarker (EventsBuf *ebuf)$/;"	f
closeCondition	rts/posix/OSThreads.c	/^closeCondition( Condition* pCond )$/;"	f
closeCondition	rts/win32/OSThreads.c	/^closeCondition( Condition* pCond )$/;"	f
closeMutex	rts/posix/OSThreads.c	/^closeMutex(Mutex* pMut)$/;"	f
closeMutex	rts/win32/OSThreads.c	/^closeMutex (Mutex* pMut)$/;"	f
closeTraverseStack	rts/TraverseHeap.c	/^closeTraverseStack( traverseState *ts )$/;"	f
closure	libffi/build/src/arm/ffi.c	/^  void *closure;$/;"	m	struct:call_frame	file:
closureIdentity	rts/ProfHeap.c	/^closureIdentity( const StgClosure *p )$/;"	f	file:
closureSatisfiesConstraints	rts/ProfHeap.c	/^closureSatisfiesConstraints( const StgClosure* p )$/;"	f	file:
closure_flags	rts/ClosureFlags.c	/^StgWord16 closure_flags[] = {$/;"	v
closure_frame	libffi/build/src/arm/ffi.c	/^struct closure_frame$/;"	s	file:
closure_frame	libffi/build/src/x86/ffi.c	/^struct closure_frame$/;"	s	file:
closure_loc_test_fn0	libffi/build/testsuite/libffi.call/closure_loc_fn0.c	/^closure_loc_test_fn0(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
closure_loc_test_type0	libffi/build/testsuite/libffi.call/closure_loc_fn0.c	/^typedef int (*closure_loc_test_type0)(unsigned long long, int, unsigned long long,$/;"	t	file:
closure_test	libffi/build/testsuite/libffi.call/closure_simple.c	/^closure_test(ffi_cif* cif __UNUSED__, void* resp, void** args, void* userdata)$/;"	f	file:
closure_test_fn	libffi/build/testsuite/libffi.call/cls_dbls_struct.c	/^closure_test_fn(Dbls p)$/;"	f
closure_test_fn0	libffi/build/testsuite/libffi.call/closure_fn0.c	/^closure_test_fn0(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
closure_test_fn0	libffi/build/testsuite/libffi.call/closure_fn4.c	/^closure_test_fn0(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
closure_test_fn0	libffi/build/testsuite/libffi.call/closure_fn6.c	/^closure_test_fn0(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
closure_test_fn1	libffi/build/testsuite/libffi.call/closure_fn1.c	/^static void closure_test_fn1(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
closure_test_fn2	libffi/build/testsuite/libffi.call/closure_fn2.c	/^static void closure_test_fn2(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
closure_test_fn3	libffi/build/testsuite/libffi.call/closure_fn3.c	/^static void closure_test_fn3(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
closure_test_fn5	libffi/build/testsuite/libffi.call/closure_fn5.c	/^closure_test_fn5(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
closure_test_gn	libffi/build/testsuite/libffi.call/cls_dbls_struct.c	/^closure_test_gn(ffi_cif* cif __UNUSED__, void* resp __UNUSED__,$/;"	f
closure_test_type0	libffi/build/testsuite/libffi.call/closure_fn0.c	/^typedef int (*closure_test_type0)(unsigned long long, int, unsigned long long,$/;"	t	file:
closure_test_type0	libffi/build/testsuite/libffi.call/closure_fn4.c	/^typedef int (*closure_test_type0)(unsigned long long, unsigned long long,$/;"	t	file:
closure_test_type0	libffi/build/testsuite/libffi.call/closure_fn5.c	/^typedef int (*closure_test_type0)(unsigned long long, unsigned long long,$/;"	t	file:
closure_test_type0	libffi/build/testsuite/libffi.call/closure_fn6.c	/^typedef int (*closure_test_type0)(unsigned long long,$/;"	t	file:
closure_test_type0	libffi/build/testsuite/libffi.call/closure_simple.c	/^typedef int (ABI_ATTR *closure_test_type0)(int, int, int, int);$/;"	t	file:
closure_test_type1	libffi/build/testsuite/libffi.call/closure_fn1.c	/^typedef int (*closure_test_type1)(float, float, float, float, signed short,$/;"	t	file:
closure_test_type2	libffi/build/testsuite/libffi.call/closure_fn2.c	/^typedef int (*closure_test_type2)(double, double, double, double, signed short,$/;"	t	file:
closure_test_type3	libffi/build/testsuite/libffi.call/closure_fn3.c	/^typedef int (*closure_test_type3)(float, float, float, float, float, float,$/;"	t	file:
closure_type_names	rts/Printer.c	/^const char *closure_type_names[] = {$/;"	v
cls_double_va_fn	libffi/build/testsuite/libffi.call/cls_double_va.c	/^cls_double_va_fn(ffi_cif* cif __UNUSED__, void* resp, $/;"	f	file:
cls_large_fn	libffi/build/testsuite/libffi.call/huge_struct.c	/^cls_large_fn(ffi_cif* cif __UNUSED__, void* resp, void** args, void* userdata __UNUSED__)$/;"	f	file:
cls_ldouble_fn	libffi/build/testsuite/libffi.call/cls_longdouble.c	/^long double cls_ldouble_fn($/;"	f
cls_ldouble_gn	libffi/build/testsuite/libffi.call/cls_longdouble.c	/^cls_ldouble_gn(ffi_cif* cif __UNUSED__, void* resp, $/;"	f	file:
cls_longdouble_va_fn	libffi/build/testsuite/libffi.call/cls_longdouble_va.c	/^cls_longdouble_va_fn(ffi_cif* cif __UNUSED__, void* resp, $/;"	f	file:
cls_pointer_fn	libffi/build/testsuite/libffi.call/cls_pointer.c	/^void* cls_pointer_fn(void* a1, void* a2)$/;"	f
cls_pointer_fn1	libffi/build/testsuite/libffi.call/cls_pointer_stack.c	/^void* cls_pointer_fn1(void* a1, void* a2)$/;"	f
cls_pointer_fn2	libffi/build/testsuite/libffi.call/cls_pointer_stack.c	/^void* cls_pointer_fn2(void* a1, void* a2)$/;"	f
cls_pointer_gn	libffi/build/testsuite/libffi.call/cls_pointer.c	/^cls_pointer_gn(ffi_cif* cif __UNUSED__, void* resp, $/;"	f	file:
cls_pointer_gn	libffi/build/testsuite/libffi.call/cls_pointer_stack.c	/^cls_pointer_gn(ffi_cif* cif __UNUSED__, void* resp, $/;"	f	file:
cls_ret_T	libffi/build/testsuite/libffi.call/cls_uchar_va.c	/^typedef T (*cls_ret_T)(T, ...);$/;"	t	file:
cls_ret_T	libffi/build/testsuite/libffi.call/cls_uint_va.c	/^typedef T (*cls_ret_T)(T, ...);$/;"	t	file:
cls_ret_T	libffi/build/testsuite/libffi.call/cls_ulong_va.c	/^typedef T (*cls_ret_T)(T, ...);$/;"	t	file:
cls_ret_T	libffi/build/testsuite/libffi.call/cls_ushort_va.c	/^typedef T (*cls_ret_T)(T, ...);$/;"	t	file:
cls_ret_T_fn	libffi/build/testsuite/libffi.call/cls_uchar_va.c	/^static void cls_ret_T_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_ret_T_fn	libffi/build/testsuite/libffi.call/cls_uint_va.c	/^static void cls_ret_T_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_ret_T_fn	libffi/build/testsuite/libffi.call/cls_ulong_va.c	/^static void cls_ret_T_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_ret_T_fn	libffi/build/testsuite/libffi.call/cls_ushort_va.c	/^static void cls_ret_T_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_ret_double	libffi/build/testsuite/libffi.call/cls_double.c	/^typedef double (*cls_ret_double)(double);$/;"	t	file:
cls_ret_double_fn	libffi/build/testsuite/libffi.call/cls_double.c	/^static void cls_ret_double_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_ret_float	libffi/build/testsuite/libffi.call/cls_float.c	/^typedef float (*cls_ret_float)(float);$/;"	t	file:
cls_ret_float_fn	libffi/build/testsuite/libffi.call/cls_float.c	/^static void cls_ret_float_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_ret_schar	libffi/build/testsuite/libffi.call/cls_schar.c	/^typedef signed char (*cls_ret_schar)(signed char);$/;"	t	file:
cls_ret_schar_fn	libffi/build/testsuite/libffi.call/cls_schar.c	/^static void cls_ret_schar_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_ret_sint	libffi/build/testsuite/libffi.call/cls_sint.c	/^typedef signed int (*cls_ret_sint)(signed int);$/;"	t	file:
cls_ret_sint_fn	libffi/build/testsuite/libffi.call/cls_sint.c	/^static void cls_ret_sint_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_ret_sshort	libffi/build/testsuite/libffi.call/cls_sshort.c	/^typedef signed short (*cls_ret_sshort)(signed short);$/;"	t	file:
cls_ret_sshort_fn	libffi/build/testsuite/libffi.call/cls_sshort.c	/^static void cls_ret_sshort_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_ret_uchar	libffi/build/testsuite/libffi.call/cls_uchar.c	/^typedef unsigned char (*cls_ret_uchar)(unsigned char);$/;"	t	file:
cls_ret_uchar_fn	libffi/build/testsuite/libffi.call/cls_uchar.c	/^static void cls_ret_uchar_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_ret_uint	libffi/build/testsuite/libffi.call/cls_uint.c	/^typedef unsigned int (*cls_ret_uint)(unsigned int);$/;"	t	file:
cls_ret_uint_fn	libffi/build/testsuite/libffi.call/cls_uint.c	/^static void cls_ret_uint_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_ret_ulonglong	libffi/build/testsuite/libffi.call/cls_ulonglong.c	/^typedef unsigned long long (*cls_ret_ulonglong)(unsigned long long);$/;"	t	file:
cls_ret_ulonglong_fn	libffi/build/testsuite/libffi.call/cls_ulonglong.c	/^static void cls_ret_ulonglong_fn(ffi_cif* cif __UNUSED__, void* resp,$/;"	f	file:
cls_ret_ushort	libffi/build/testsuite/libffi.call/cls_ushort.c	/^typedef unsigned short (*cls_ret_ushort)(unsigned short);$/;"	t	file:
cls_ret_ushort_fn	libffi/build/testsuite/libffi.call/cls_ushort.c	/^static void cls_ret_ushort_fn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_108byte_fn	libffi/build/testsuite/libffi.call/stret_large.c	/^struct_108byte cls_struct_108byte_fn($/;"	f
cls_struct_108byte_gn	libffi/build/testsuite/libffi.call/stret_large.c	/^cls_struct_108byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args, void* userdata __UNUSED__)$/;"	f	file:
cls_struct_116byte_fn	libffi/build/testsuite/libffi.call/stret_large2.c	/^struct_116byte cls_struct_116byte_fn($/;"	f
cls_struct_116byte_gn	libffi/build/testsuite/libffi.call/stret_large2.c	/^cls_struct_116byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args, void* userdata __UNUSED__)$/;"	f	file:
cls_struct_12byte	libffi/build/testsuite/libffi.call/cls_12byte.c	/^typedef struct cls_struct_12byte {$/;"	s	file:
cls_struct_12byte	libffi/build/testsuite/libffi.call/cls_12byte.c	/^} cls_struct_12byte;$/;"	t	typeref:struct:cls_struct_12byte	file:
cls_struct_12byte_fn	libffi/build/testsuite/libffi.call/cls_12byte.c	/^cls_struct_12byte cls_struct_12byte_fn(struct cls_struct_12byte b1,$/;"	f
cls_struct_12byte_gn	libffi/build/testsuite/libffi.call/cls_12byte.c	/^static void cls_struct_12byte_gn(ffi_cif* cif __UNUSED__, void* resp,$/;"	f	file:
cls_struct_16byte	libffi/build/testsuite/libffi.call/cls_16byte.c	/^typedef struct cls_struct_16byte {$/;"	s	file:
cls_struct_16byte	libffi/build/testsuite/libffi.call/cls_16byte.c	/^} cls_struct_16byte;$/;"	t	typeref:struct:cls_struct_16byte	file:
cls_struct_16byte1	libffi/build/testsuite/libffi.call/nested_struct.c	/^typedef struct cls_struct_16byte1 {$/;"	s	file:
cls_struct_16byte1	libffi/build/testsuite/libffi.call/nested_struct.c	/^} cls_struct_16byte1;$/;"	t	typeref:struct:cls_struct_16byte1	file:
cls_struct_16byte1	libffi/build/testsuite/libffi.call/nested_struct1.c	/^typedef struct cls_struct_16byte1 {$/;"	s	file:
cls_struct_16byte1	libffi/build/testsuite/libffi.call/nested_struct1.c	/^} cls_struct_16byte1;$/;"	t	typeref:struct:cls_struct_16byte1	file:
cls_struct_16byte2	libffi/build/testsuite/libffi.call/nested_struct.c	/^typedef struct cls_struct_16byte2 {$/;"	s	file:
cls_struct_16byte2	libffi/build/testsuite/libffi.call/nested_struct.c	/^} cls_struct_16byte2;$/;"	t	typeref:struct:cls_struct_16byte2	file:
cls_struct_16byte2	libffi/build/testsuite/libffi.call/nested_struct1.c	/^typedef struct cls_struct_16byte2 {$/;"	s	file:
cls_struct_16byte2	libffi/build/testsuite/libffi.call/nested_struct1.c	/^} cls_struct_16byte2;$/;"	t	typeref:struct:cls_struct_16byte2	file:
cls_struct_16byte_fn	libffi/build/testsuite/libffi.call/cls_16byte.c	/^cls_struct_16byte cls_struct_16byte_fn(struct cls_struct_16byte b1,$/;"	f
cls_struct_16byte_gn	libffi/build/testsuite/libffi.call/cls_16byte.c	/^static void cls_struct_16byte_gn(ffi_cif* cif __UNUSED__, void* resp,$/;"	f	file:
cls_struct_18byte	libffi/build/testsuite/libffi.call/cls_18byte.c	/^typedef struct cls_struct_18byte {$/;"	s	file:
cls_struct_18byte	libffi/build/testsuite/libffi.call/cls_18byte.c	/^} cls_struct_18byte;$/;"	t	typeref:struct:cls_struct_18byte	file:
cls_struct_18byte_fn	libffi/build/testsuite/libffi.call/cls_18byte.c	/^cls_struct_18byte cls_struct_18byte_fn(struct cls_struct_18byte a1,$/;"	f
cls_struct_18byte_gn	libffi/build/testsuite/libffi.call/cls_18byte.c	/^cls_struct_18byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_19byte	libffi/build/testsuite/libffi.call/cls_19byte.c	/^typedef struct cls_struct_19byte {$/;"	s	file:
cls_struct_19byte	libffi/build/testsuite/libffi.call/cls_19byte.c	/^} cls_struct_19byte;$/;"	t	typeref:struct:cls_struct_19byte	file:
cls_struct_19byte_fn	libffi/build/testsuite/libffi.call/cls_19byte.c	/^cls_struct_19byte cls_struct_19byte_fn(struct cls_struct_19byte a1,$/;"	f
cls_struct_19byte_gn	libffi/build/testsuite/libffi.call/cls_19byte.c	/^cls_struct_19byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_1_1byte	libffi/build/testsuite/libffi.call/cls_1_1byte.c	/^typedef struct cls_struct_1_1byte {$/;"	s	file:
cls_struct_1_1byte	libffi/build/testsuite/libffi.call/cls_1_1byte.c	/^} cls_struct_1_1byte;$/;"	t	typeref:struct:cls_struct_1_1byte	file:
cls_struct_1_1byte_fn	libffi/build/testsuite/libffi.call/cls_1_1byte.c	/^cls_struct_1_1byte cls_struct_1_1byte_fn(struct cls_struct_1_1byte a1,$/;"	f
cls_struct_1_1byte_gn	libffi/build/testsuite/libffi.call/cls_1_1byte.c	/^cls_struct_1_1byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_20byte	libffi/build/testsuite/libffi.call/cls_20byte.c	/^typedef struct cls_struct_20byte {$/;"	s	file:
cls_struct_20byte	libffi/build/testsuite/libffi.call/cls_20byte.c	/^} cls_struct_20byte;$/;"	t	typeref:struct:cls_struct_20byte	file:
cls_struct_20byte	libffi/build/testsuite/libffi.call/cls_20byte1.c	/^typedef struct cls_struct_20byte {$/;"	s	file:
cls_struct_20byte	libffi/build/testsuite/libffi.call/cls_20byte1.c	/^} cls_struct_20byte;$/;"	t	typeref:struct:cls_struct_20byte	file:
cls_struct_20byte_fn	libffi/build/testsuite/libffi.call/cls_20byte.c	/^cls_struct_20byte cls_struct_20byte_fn(struct cls_struct_20byte a1,$/;"	f
cls_struct_20byte_fn	libffi/build/testsuite/libffi.call/cls_20byte1.c	/^cls_struct_20byte cls_struct_20byte_fn(struct cls_struct_20byte a1,$/;"	f
cls_struct_20byte_gn	libffi/build/testsuite/libffi.call/cls_20byte.c	/^cls_struct_20byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_20byte_gn	libffi/build/testsuite/libffi.call/cls_20byte1.c	/^cls_struct_20byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_24byte	libffi/build/testsuite/libffi.call/cls_24byte.c	/^typedef struct cls_struct_24byte {$/;"	s	file:
cls_struct_24byte	libffi/build/testsuite/libffi.call/cls_24byte.c	/^} cls_struct_24byte;$/;"	t	typeref:struct:cls_struct_24byte	file:
cls_struct_24byte_fn	libffi/build/testsuite/libffi.call/cls_24byte.c	/^cls_struct_24byte cls_struct_24byte_fn(struct cls_struct_24byte b0,$/;"	f
cls_struct_24byte_gn	libffi/build/testsuite/libffi.call/cls_24byte.c	/^cls_struct_24byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_2byte	libffi/build/testsuite/libffi.call/cls_2byte.c	/^typedef struct cls_struct_2byte {$/;"	s	file:
cls_struct_2byte	libffi/build/testsuite/libffi.call/cls_2byte.c	/^} cls_struct_2byte;$/;"	t	typeref:struct:cls_struct_2byte	file:
cls_struct_2byte_fn	libffi/build/testsuite/libffi.call/cls_2byte.c	/^cls_struct_2byte cls_struct_2byte_fn(struct cls_struct_2byte a1,$/;"	f
cls_struct_2byte_gn	libffi/build/testsuite/libffi.call/cls_2byte.c	/^cls_struct_2byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_3_1byte	libffi/build/testsuite/libffi.call/cls_3_1byte.c	/^typedef struct cls_struct_3_1byte {$/;"	s	file:
cls_struct_3_1byte	libffi/build/testsuite/libffi.call/cls_3_1byte.c	/^} cls_struct_3_1byte;$/;"	t	typeref:struct:cls_struct_3_1byte	file:
cls_struct_3_1byte_fn	libffi/build/testsuite/libffi.call/cls_3_1byte.c	/^cls_struct_3_1byte cls_struct_3_1byte_fn(struct cls_struct_3_1byte a1,$/;"	f
cls_struct_3_1byte_gn	libffi/build/testsuite/libffi.call/cls_3_1byte.c	/^cls_struct_3_1byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_3byte	libffi/build/testsuite/libffi.call/cls_3byte1.c	/^typedef struct cls_struct_3byte {$/;"	s	file:
cls_struct_3byte	libffi/build/testsuite/libffi.call/cls_3byte1.c	/^} cls_struct_3byte;$/;"	t	typeref:struct:cls_struct_3byte	file:
cls_struct_3byte_1	libffi/build/testsuite/libffi.call/cls_3byte2.c	/^typedef struct cls_struct_3byte_1 {$/;"	s	file:
cls_struct_3byte_1	libffi/build/testsuite/libffi.call/cls_3byte2.c	/^} cls_struct_3byte_1;$/;"	t	typeref:struct:cls_struct_3byte_1	file:
cls_struct_3byte_fn	libffi/build/testsuite/libffi.call/cls_3byte1.c	/^cls_struct_3byte cls_struct_3byte_fn(struct cls_struct_3byte a1,$/;"	f
cls_struct_3byte_fn1	libffi/build/testsuite/libffi.call/cls_3byte2.c	/^cls_struct_3byte_1 cls_struct_3byte_fn1(struct cls_struct_3byte_1 a1,$/;"	f
cls_struct_3byte_gn	libffi/build/testsuite/libffi.call/cls_3byte1.c	/^cls_struct_3byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_3byte_gn1	libffi/build/testsuite/libffi.call/cls_3byte2.c	/^cls_struct_3byte_gn1(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_4_1byte	libffi/build/testsuite/libffi.call/cls_4_1byte.c	/^typedef struct cls_struct_4_1byte {$/;"	s	file:
cls_struct_4_1byte	libffi/build/testsuite/libffi.call/cls_4_1byte.c	/^} cls_struct_4_1byte;$/;"	t	typeref:struct:cls_struct_4_1byte	file:
cls_struct_4_1byte_fn	libffi/build/testsuite/libffi.call/cls_4_1byte.c	/^cls_struct_4_1byte cls_struct_4_1byte_fn(struct cls_struct_4_1byte a1,$/;"	f
cls_struct_4_1byte_gn	libffi/build/testsuite/libffi.call/cls_4_1byte.c	/^cls_struct_4_1byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_4byte	libffi/build/testsuite/libffi.call/cls_4byte.c	/^typedef struct cls_struct_4byte {$/;"	s	file:
cls_struct_4byte	libffi/build/testsuite/libffi.call/cls_4byte.c	/^} cls_struct_4byte;$/;"	t	typeref:struct:cls_struct_4byte	file:
cls_struct_4byte_fn	libffi/build/testsuite/libffi.call/cls_4byte.c	/^cls_struct_4byte cls_struct_4byte_fn(struct cls_struct_4byte a1,$/;"	f
cls_struct_4byte_gn	libffi/build/testsuite/libffi.call/cls_4byte.c	/^cls_struct_4byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_5byte	libffi/build/testsuite/libffi.call/cls_5_1_byte.c	/^typedef struct cls_struct_5byte {$/;"	s	file:
cls_struct_5byte	libffi/build/testsuite/libffi.call/cls_5_1_byte.c	/^} cls_struct_5byte;$/;"	t	typeref:struct:cls_struct_5byte	file:
cls_struct_5byte	libffi/build/testsuite/libffi.call/cls_5byte.c	/^typedef struct cls_struct_5byte {$/;"	s	file:
cls_struct_5byte	libffi/build/testsuite/libffi.call/cls_5byte.c	/^} cls_struct_5byte;$/;"	t	typeref:struct:cls_struct_5byte	file:
cls_struct_5byte_fn	libffi/build/testsuite/libffi.call/cls_5_1_byte.c	/^cls_struct_5byte cls_struct_5byte_fn(struct cls_struct_5byte a1,$/;"	f
cls_struct_5byte_fn	libffi/build/testsuite/libffi.call/cls_5byte.c	/^cls_struct_5byte cls_struct_5byte_fn(struct cls_struct_5byte a1,$/;"	f
cls_struct_5byte_gn	libffi/build/testsuite/libffi.call/cls_5_1_byte.c	/^cls_struct_5byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_5byte_gn	libffi/build/testsuite/libffi.call/cls_5byte.c	/^cls_struct_5byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_64byte	libffi/build/testsuite/libffi.call/cls_64byte.c	/^typedef struct cls_struct_64byte {$/;"	s	file:
cls_struct_64byte	libffi/build/testsuite/libffi.call/cls_64byte.c	/^} cls_struct_64byte;$/;"	t	typeref:struct:cls_struct_64byte	file:
cls_struct_64byte_fn	libffi/build/testsuite/libffi.call/cls_64byte.c	/^cls_struct_64byte cls_struct_64byte_fn(struct cls_struct_64byte b0,$/;"	f
cls_struct_64byte_gn	libffi/build/testsuite/libffi.call/cls_64byte.c	/^cls_struct_64byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_6byte	libffi/build/testsuite/libffi.call/cls_6_1_byte.c	/^typedef struct cls_struct_6byte {$/;"	s	file:
cls_struct_6byte	libffi/build/testsuite/libffi.call/cls_6_1_byte.c	/^} cls_struct_6byte;$/;"	t	typeref:struct:cls_struct_6byte	file:
cls_struct_6byte	libffi/build/testsuite/libffi.call/cls_6byte.c	/^typedef struct cls_struct_6byte {$/;"	s	file:
cls_struct_6byte	libffi/build/testsuite/libffi.call/cls_6byte.c	/^} cls_struct_6byte;$/;"	t	typeref:struct:cls_struct_6byte	file:
cls_struct_6byte_fn	libffi/build/testsuite/libffi.call/cls_6_1_byte.c	/^cls_struct_6byte cls_struct_6byte_fn(struct cls_struct_6byte a1,$/;"	f
cls_struct_6byte_fn	libffi/build/testsuite/libffi.call/cls_6byte.c	/^cls_struct_6byte cls_struct_6byte_fn(struct cls_struct_6byte a1,$/;"	f
cls_struct_6byte_gn	libffi/build/testsuite/libffi.call/cls_6_1_byte.c	/^cls_struct_6byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_6byte_gn	libffi/build/testsuite/libffi.call/cls_6byte.c	/^cls_struct_6byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_72byte_fn	libffi/build/testsuite/libffi.call/stret_medium.c	/^struct_72byte cls_struct_72byte_fn($/;"	f
cls_struct_72byte_fn	libffi/build/testsuite/libffi.call/stret_medium2.c	/^struct_72byte cls_struct_72byte_fn($/;"	f
cls_struct_72byte_gn	libffi/build/testsuite/libffi.call/stret_medium.c	/^cls_struct_72byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args, void* userdata __UNUSED__)$/;"	f	file:
cls_struct_72byte_gn	libffi/build/testsuite/libffi.call/stret_medium2.c	/^cls_struct_72byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args, void* userdata __UNUSED__)$/;"	f	file:
cls_struct_7byte	libffi/build/testsuite/libffi.call/cls_7_1_byte.c	/^typedef struct cls_struct_7byte {$/;"	s	file:
cls_struct_7byte	libffi/build/testsuite/libffi.call/cls_7_1_byte.c	/^} cls_struct_7byte;$/;"	t	typeref:struct:cls_struct_7byte	file:
cls_struct_7byte	libffi/build/testsuite/libffi.call/cls_7byte.c	/^typedef struct cls_struct_7byte {$/;"	s	file:
cls_struct_7byte	libffi/build/testsuite/libffi.call/cls_7byte.c	/^} cls_struct_7byte;$/;"	t	typeref:struct:cls_struct_7byte	file:
cls_struct_7byte_fn	libffi/build/testsuite/libffi.call/cls_7_1_byte.c	/^cls_struct_7byte cls_struct_7byte_fn(struct cls_struct_7byte a1,$/;"	f
cls_struct_7byte_fn	libffi/build/testsuite/libffi.call/cls_7byte.c	/^cls_struct_7byte cls_struct_7byte_fn(struct cls_struct_7byte a1,$/;"	f
cls_struct_7byte_gn	libffi/build/testsuite/libffi.call/cls_7_1_byte.c	/^cls_struct_7byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_7byte_gn	libffi/build/testsuite/libffi.call/cls_7byte.c	/^cls_struct_7byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_8byte	libffi/build/testsuite/libffi.call/cls_8byte.c	/^typedef struct cls_struct_8byte {$/;"	s	file:
cls_struct_8byte	libffi/build/testsuite/libffi.call/cls_8byte.c	/^} cls_struct_8byte;$/;"	t	typeref:struct:cls_struct_8byte	file:
cls_struct_8byte_fn	libffi/build/testsuite/libffi.call/cls_8byte.c	/^cls_struct_8byte cls_struct_8byte_fn(struct cls_struct_8byte a1,$/;"	f
cls_struct_8byte_gn	libffi/build/testsuite/libffi.call/cls_8byte.c	/^cls_struct_8byte_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_9byte	libffi/build/testsuite/libffi.call/cls_9byte1.c	/^typedef struct cls_struct_9byte {$/;"	s	file:
cls_struct_9byte	libffi/build/testsuite/libffi.call/cls_9byte1.c	/^} cls_struct_9byte;$/;"	t	typeref:struct:cls_struct_9byte	file:
cls_struct_9byte	libffi/build/testsuite/libffi.call/cls_9byte2.c	/^typedef struct cls_struct_9byte {$/;"	s	file:
cls_struct_9byte	libffi/build/testsuite/libffi.call/cls_9byte2.c	/^} cls_struct_9byte;$/;"	t	typeref:struct:cls_struct_9byte	file:
cls_struct_9byte_fn	libffi/build/testsuite/libffi.call/cls_9byte1.c	/^cls_struct_9byte cls_struct_9byte_fn(struct cls_struct_9byte b1,$/;"	f
cls_struct_9byte_fn	libffi/build/testsuite/libffi.call/cls_9byte2.c	/^cls_struct_9byte cls_struct_9byte_fn(struct cls_struct_9byte b1,$/;"	f
cls_struct_9byte_gn	libffi/build/testsuite/libffi.call/cls_9byte1.c	/^static void cls_struct_9byte_gn(ffi_cif* cif __UNUSED__, void* resp,$/;"	f	file:
cls_struct_9byte_gn	libffi/build/testsuite/libffi.call/cls_9byte2.c	/^static void cls_struct_9byte_gn(ffi_cif* cif __UNUSED__, void* resp,$/;"	f	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_double.c	/^typedef struct cls_struct_align {$/;"	s	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_double.c	/^} cls_struct_align;$/;"	t	typeref:struct:cls_struct_align	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_float.c	/^typedef struct cls_struct_align {$/;"	s	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_float.c	/^} cls_struct_align;$/;"	t	typeref:struct:cls_struct_align	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_longdouble.c	/^typedef struct cls_struct_align {$/;"	s	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_longdouble.c	/^} cls_struct_align;$/;"	t	typeref:struct:cls_struct_align	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_longdouble_split.c	/^typedef struct cls_struct_align {$/;"	s	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_longdouble_split.c	/^} cls_struct_align;$/;"	t	typeref:struct:cls_struct_align	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_longdouble_split2.c	/^typedef struct cls_struct_align {$/;"	s	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_longdouble_split2.c	/^} cls_struct_align;$/;"	t	typeref:struct:cls_struct_align	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_pointer.c	/^typedef struct cls_struct_align {$/;"	s	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_pointer.c	/^} cls_struct_align;$/;"	t	typeref:struct:cls_struct_align	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_sint16.c	/^typedef struct cls_struct_align {$/;"	s	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_sint16.c	/^} cls_struct_align;$/;"	t	typeref:struct:cls_struct_align	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_sint32.c	/^typedef struct cls_struct_align {$/;"	s	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_sint32.c	/^} cls_struct_align;$/;"	t	typeref:struct:cls_struct_align	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_sint64.c	/^typedef struct cls_struct_align {$/;"	s	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_sint64.c	/^} cls_struct_align;$/;"	t	typeref:struct:cls_struct_align	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_uint16.c	/^typedef struct cls_struct_align {$/;"	s	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_uint16.c	/^} cls_struct_align;$/;"	t	typeref:struct:cls_struct_align	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_uint32.c	/^typedef struct cls_struct_align {$/;"	s	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_uint32.c	/^} cls_struct_align;$/;"	t	typeref:struct:cls_struct_align	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_uint64.c	/^typedef struct cls_struct_align {$/;"	s	file:
cls_struct_align	libffi/build/testsuite/libffi.call/cls_align_uint64.c	/^} cls_struct_align;$/;"	t	typeref:struct:cls_struct_align	file:
cls_struct_align_fn	libffi/build/testsuite/libffi.call/cls_align_double.c	/^cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,$/;"	f
cls_struct_align_fn	libffi/build/testsuite/libffi.call/cls_align_float.c	/^cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,$/;"	f
cls_struct_align_fn	libffi/build/testsuite/libffi.call/cls_align_longdouble.c	/^cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,$/;"	f
cls_struct_align_fn	libffi/build/testsuite/libffi.call/cls_align_longdouble_split.c	/^cls_struct_align cls_struct_align_fn($/;"	f
cls_struct_align_fn	libffi/build/testsuite/libffi.call/cls_align_longdouble_split2.c	/^cls_struct_align cls_struct_align_fn($/;"	f
cls_struct_align_fn	libffi/build/testsuite/libffi.call/cls_align_pointer.c	/^cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,$/;"	f
cls_struct_align_fn	libffi/build/testsuite/libffi.call/cls_align_sint16.c	/^cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,$/;"	f
cls_struct_align_fn	libffi/build/testsuite/libffi.call/cls_align_sint32.c	/^cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,$/;"	f
cls_struct_align_fn	libffi/build/testsuite/libffi.call/cls_align_sint64.c	/^cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,$/;"	f
cls_struct_align_fn	libffi/build/testsuite/libffi.call/cls_align_uint16.c	/^cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,$/;"	f
cls_struct_align_fn	libffi/build/testsuite/libffi.call/cls_align_uint32.c	/^cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,$/;"	f
cls_struct_align_fn	libffi/build/testsuite/libffi.call/cls_align_uint64.c	/^cls_struct_align cls_struct_align_fn(struct cls_struct_align a1,$/;"	f
cls_struct_align_fn2	libffi/build/testsuite/libffi.call/cls_align_longdouble_split.c	/^cls_struct_align cls_struct_align_fn2($/;"	f
cls_struct_align_gn	libffi/build/testsuite/libffi.call/cls_align_double.c	/^cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_align_gn	libffi/build/testsuite/libffi.call/cls_align_float.c	/^cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_align_gn	libffi/build/testsuite/libffi.call/cls_align_longdouble.c	/^cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_align_gn	libffi/build/testsuite/libffi.call/cls_align_longdouble_split.c	/^cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args, $/;"	f	file:
cls_struct_align_gn	libffi/build/testsuite/libffi.call/cls_align_longdouble_split2.c	/^cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args, $/;"	f	file:
cls_struct_align_gn	libffi/build/testsuite/libffi.call/cls_align_pointer.c	/^cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_align_gn	libffi/build/testsuite/libffi.call/cls_align_sint16.c	/^cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_align_gn	libffi/build/testsuite/libffi.call/cls_align_sint32.c	/^cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_align_gn	libffi/build/testsuite/libffi.call/cls_align_sint64.c	/^cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_align_gn	libffi/build/testsuite/libffi.call/cls_align_uint16.c	/^cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_align_gn	libffi/build/testsuite/libffi.call/cls_align_uint32.c	/^cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_align_gn	libffi/build/testsuite/libffi.call/cls_align_uint64.c	/^cls_struct_align_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_combined	libffi/build/testsuite/libffi.call/nested_struct.c	/^typedef struct cls_struct_combined {$/;"	s	file:
cls_struct_combined	libffi/build/testsuite/libffi.call/nested_struct.c	/^} cls_struct_combined;$/;"	t	typeref:struct:cls_struct_combined	file:
cls_struct_combined	libffi/build/testsuite/libffi.call/nested_struct1.c	/^typedef struct cls_struct_combined {$/;"	s	file:
cls_struct_combined	libffi/build/testsuite/libffi.call/nested_struct1.c	/^} cls_struct_combined;$/;"	t	typeref:struct:cls_struct_combined	file:
cls_struct_combined	libffi/build/testsuite/libffi.call/testclosure.c	/^typedef struct cls_struct_combined {$/;"	s	file:
cls_struct_combined	libffi/build/testsuite/libffi.call/testclosure.c	/^} cls_struct_combined;$/;"	t	typeref:struct:cls_struct_combined	file:
cls_struct_combined_fn	libffi/build/testsuite/libffi.call/nested_struct.c	/^cls_struct_combined cls_struct_combined_fn(struct cls_struct_16byte1 b0,$/;"	f
cls_struct_combined_fn	libffi/build/testsuite/libffi.call/nested_struct1.c	/^cls_struct_combined cls_struct_combined_fn(struct cls_struct_16byte1 b0,$/;"	f
cls_struct_combined_fn	libffi/build/testsuite/libffi.call/testclosure.c	/^void cls_struct_combined_fn(struct cls_struct_combined arg)$/;"	f
cls_struct_combined_gn	libffi/build/testsuite/libffi.call/nested_struct.c	/^cls_struct_combined_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_combined_gn	libffi/build/testsuite/libffi.call/nested_struct1.c	/^cls_struct_combined_gn(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f	file:
cls_struct_combined_gn	libffi/build/testsuite/libffi.call/testclosure.c	/^cls_struct_combined_gn(ffi_cif* cif __UNUSED__, void* resp __UNUSED__,$/;"	f	file:
cmpLocks	rts/FileLock.c	/^STATIC_INLINE int cmpLocks(StgWord w1, StgWord w2)$/;"	f
cmpSectionIndex	rts/CheckUnload.c	/^static int cmpSectionIndex(const void* indexa, const void *indexb)$/;"	f	file:
cmp_fixup_table_item	rts/sm/CNF.c	/^cmp_fixup_table_item (const void *e1, const void *e2)$/;"	f	file:
cmp_thread	rts/Threads.c	/^cmp_thread(StgPtr tso1, StgPtr tso2)$/;"	f
coalesce_mblocks	rts/sm/BlockAlloc.c	/^coalesce_mblocks (bdescr *p)$/;"	f
code	nofib/real/compress2/inC/prefix_trees.c	/^  int code;$/;"	m	struct:ptree	file:
code	rts/Adjustor.c	/^    StgFunPtr       code;$/;"	m	struct:AdjustorStub	file:
code_file	nofib/real/compress/lzw.c	/^void code_file (struct prefix_tree **tree_p)$/;"	f
code_heap	rts/linker/PEi386.c	/^static HANDLE code_heap     = NULL;$/;"	v	file:
code_pointer	libffi/build/src/powerpc/ffi_darwin.c	/^  void *code_pointer;$/;"	m	struct:aix_fd_struct	file:
code_table	nofib/real/compress2/inC/prefix_trees.c	/^struct ptree *code_table;$/;"	v	typeref:struct:ptree
collectDeadWeakPtrs	rts/sm/MarkWeak.c	/^static void collectDeadWeakPtrs (generation *gen, StgWeak **dead_weak_ptr_list)$/;"	f	file:
collectFreshWeakPtrs	rts/sm/MarkWeak.c	/^void collectFreshWeakPtrs()$/;"	f
collect_gct_blocks	rts/sm/GC.c	/^collect_gct_blocks (void)$/;"	f	file:
collect_pinned_object_blocks	rts/sm/GC.c	/^collect_pinned_object_blocks (void)$/;"	f	file:
commitBlocks	rts/win32/OSMem.c	/^commitBlocks(char* base, W_ size) {$/;"	f	file:
compact	rts/sm/Compact.c	/^compact(StgClosure *static_objects,$/;"	f
compactAllocateBlock	rts/sm/CNF.c	/^compactAllocateBlock(Capability            *cap,$/;"	f
compactAllocateBlockInternal	rts/sm/CNF.c	/^compactAllocateBlockInternal(Capability            *cap,$/;"	f	file:
compactAppendBlock	rts/sm/CNF.c	/^compactAppendBlock (Capability       *cap,$/;"	f	file:
compactContains	rts/sm/CNF.c	/^compactContains (StgCompactNFData *str, StgPtr what)$/;"	f
compactFixupPointers	rts/sm/CNF.c	/^compactFixupPointers(StgCompactNFData *str,$/;"	f
compactFree	rts/sm/CNF.c	/^compactFree(StgCompactNFData *str)$/;"	f
compactGetFirstBlock	rts/sm/CNF.c	/^compactGetFirstBlock(StgCompactNFData *str)$/;"	f	file:
compactMarkKnown	rts/sm/CNF.c	/^compactMarkKnown(StgCompactNFData *str)$/;"	f
compactNew	rts/sm/CNF.c	/^compactNew (Capability *cap, StgWord size)$/;"	f
compactResize	rts/sm/CNF.c	/^compactResize (Capability *cap, StgCompactNFData *str, StgWord new_size)$/;"	f
compareFingerprint	rts/StaticPtrTable.c	/^STATIC_INLINE int compareFingerprint(StgWord a, StgWord b) {$/;"	f
compareStr	rts/Hash.c	/^compareStr(StgWord key1, StgWord key2)$/;"	f
compareWord	rts/Hash.c	/^compareWord(StgWord key1, StgWord key2)$/;"	f
complain	utils/unlit/unlit.c	/^static void complain(char *file, int lin, char *what)$/;"	f	file:
completedTable	rts/win32/AsyncIO.c	/^static CompletedReq     completedTable[MAX_REQUESTS];$/;"	v	file:
completed_hw	rts/win32/AsyncIO.c	/^static int              completed_hw;$/;"	v	file:
completed_req_event	rts/win32/AsyncIO.c	/^static HANDLE           completed_req_event = INVALID_HANDLE_VALUE;$/;"	v	file:
completed_table_sema	rts/win32/AsyncIO.c	/^static HANDLE           completed_table_sema;$/;"	v	file:
complex	nofib/spectral/fft2/fft.c	/^} complex;$/;"	t	typeref:struct:__anon33	file:
compress_hfa_type	libffi/build/src/aarch64/ffi.c	/^compress_hfa_type (void *dest, void *reg, int h)$/;"	f	file:
computeAddend	rts/linker/elf_reloc_aarch64.c	/^computeAddend(Section * section, Elf_Rel * rel,$/;"	f	file:
computeRetainerSet	rts/RetainerProfile.c	/^computeRetainerSet( traverseState *ts )$/;"	f	file:
compute_WaitForSingleObject_timeout	libraries/base/cbits/inputReady.c	/^compute_WaitForSingleObject_timeout(bool infinite, Time remaining)$/;"	f	file:
compute_alpha_s_rho_vectors_boundaries	nofib/spectral/simple/simple.c	/^int compute_alpha_s_rho_vectors_boundaries$/;"	f
compute_alpha_s_rho_vectors_interior	nofib/spectral/simple/simple.c	/^int compute_alpha_s_rho_vectors_interior$/;"	f
compute_bit2idx	libffi/build/src/dlmalloc.c	2365;"	d	file:
compute_bit2idx	libffi/build/src/dlmalloc.c	2374;"	d	file:
compute_bit2idx	libffi/build/src/dlmalloc.c	2377;"	d	file:
compute_boundary_heat	nofib/spectral/simple/simple.c	/^double compute_boundary_heat(double Gamma_k[MAXSIZE][MAXSIZE],$/;"	f
compute_boundary_work	nofib/spectral/simple/simple.c	/^double compute_boundary_work(double new_r[MAXSIZE][MAXSIZE],$/;"	f
compute_energy_border	nofib/spectral/simple/simple.c	/^int compute_energy_border(double epsilon[MAXSIZE][MAXSIZE])$/;"	f
compute_energy_error	nofib/spectral/simple/simple.c	/^int compute_energy_error(double new_u[MAXSIZE][MAXSIZE], double new_w[MAXSIZE][MAXSIZE],$/;"	f
compute_energy_interior	nofib/spectral/simple/simple.c	/^int compute_energy_interior(double rho[MAXSIZE][MAXSIZE],double theta[MAXSIZE][MAXSIZE],$/;"	f
compute_heat_conduction	nofib/spectral/simple/simple.c	/^int compute_heat_conduction(double theta_hat[MAXSIZE][MAXSIZE], double deltat,$/;"	f
compute_initial_alpha_s_vectors	nofib/spectral/simple/simple.c	/^int compute_initial_alpha_s_vectors(double alpha[MAXSIZE][MAXSIZE],double s[MAXSIZE][MAXSIZE],$/;"	f
compute_initial_epsilon	nofib/spectral/simple/simple.c	/^int compute_initial_epsilon()$/;"	f
compute_initial_p	nofib/spectral/simple/simple.c	/^int compute_initial_p()$/;"	f
compute_initial_position_vectors	nofib/spectral/simple/simple.c	/^int compute_initial_position_vectors()$/;"	f
compute_initial_position_vectors_interior	nofib/spectral/simple/simple.c	/^int compute_initial_position_vectors_interior()$/;"	f
compute_initial_state	nofib/spectral/simple/simple.c	/^int compute_initial_state()$/;"	f
compute_initial_theta	nofib/spectral/simple/simple.c	/^int compute_initial_theta()$/;"	f
compute_internal_energy	nofib/spectral/simple/simple.c	/^double compute_internal_energy()$/;"	f
compute_kinetic_energy	nofib/spectral/simple/simple.c	/^double compute_kinetic_energy(double new_u[MAXSIZE][MAXSIZE],$/;"	f
compute_next_state	nofib/spectral/simple/simple.c	/^int compute_next_state()$/;"	f
compute_poll_timeout	libraries/base/cbits/inputReady.c	/^compute_poll_timeout(bool infinite, Time remaining)$/;"	f	file:
compute_position_vectors	nofib/spectral/simple/simple.c	/^int compute_position_vectors$/;"	f
compute_position_vectors_boundaries	nofib/spectral/simple/simple.c	/^int compute_position_vectors_boundaries(double xx[MAXSIZE][MAXSIZE],$/;"	f
compute_position_vectors_interior	nofib/spectral/simple/simple.c	/^int compute_position_vectors_interior$/;"	f
compute_pressure_border	nofib/spectral/simple/simple.c	/^int compute_pressure_border(double p[MAXSIZE][MAXSIZE])$/;"	f
compute_pressure_interior	nofib/spectral/simple/simple.c	/^int compute_pressure_interior(double rho[MAXSIZE][MAXSIZE],double theta[MAXSIZE][MAXSIZE],$/;"	f
compute_temperature_boundaries	nofib/spectral/simple/simple.c	/^int compute_temperature_boundaries(double theta_hat[MAXSIZE][MAXSIZE])$/;"	f
compute_temperature_interior	nofib/spectral/simple/simple.c	/^int compute_temperature_interior$/;"	f
compute_time_step	nofib/spectral/simple/simple.c	/^int compute_time_step(double d[MAXSIZE][MAXSIZE],double new_d[MAXSIZE][MAXSIZE],$/;"	f
compute_tree_index	libffi/build/src/dlmalloc.c	2300;"	d	file:
compute_tree_index	libffi/build/src/dlmalloc.c	2314;"	d	file:
compute_viscosity_boundaries	nofib/spectral/simple/simple.c	/^int compute_viscosity_boundaries$/;"	f
compute_viscosity_interior	nofib/spectral/simple/simple.c	/^int compute_viscosity_interior$/;"	f
compute_windows_select_timeout	libraries/base/cbits/inputReady.c	/^compute_windows_select_timeout(bool infinite, Time remaining,$/;"	f	file:
concurrent_coll_finished	rts/sm/NonMoving.c	/^Condition concurrent_coll_finished;$/;"	v
concurrent_coll_finished_lock	rts/sm/NonMoving.c	/^Mutex concurrent_coll_finished_lock;$/;"	v
concurrent_coll_running	rts/sm/NonMoving.c	/^bool concurrent_coll_running = false;$/;"	v
cond	rts/Pool.c	/^    Condition cond;$/;"	m	struct:Pool_	file:
cond	testsuite/tests/concurrent/should_run/hs_try_putmvar003_c.c	/^    pthread_cond_t cond;$/;"	m	struct:callback_queue	file:
cond_lock_tvar	rts/STM.c	/^static StgBool cond_lock_tvar(Capability *cap STG_UNUSED,$/;"	f	file:
cond_lock_tvar	rts/STM.c	/^static StgBool cond_lock_tvar(Capability *cap,$/;"	f	file:
config_page	libffi/build/src/closures.c	/^  vm_address_t config_page;$/;"	m	struct:ffi_trampoline_table	file:
config_use_read_phase	rts/STM.c	/^static const StgBool config_use_read_phase = false;$/;"	v	file:
config_use_read_phase	rts/STM.c	/^static const StgBool config_use_read_phase = true;$/;"	v	file:
console_handler	rts/win32/ConsoleHandler.c	/^StgInt console_handler = STG_SIG_DFL;$/;"	v
constant_heat_source	nofib/spectral/simple/simple.c	/^double constant_heat_source = 0.0;$/;"	v
contextSwitchAllCapabilities	rts/Capability.c	/^void contextSwitchAllCapabilities(void)$/;"	f
conv	nofib/real/compress2/inC/bin_conv.c	/^conv ()$/;"	f
convchars	libraries/base/cbits/WCsubst.c	/^static const struct _charblock_ convchars[]={$/;"	v	typeref:struct:_charblock_	file:
copied	rts/sm/GC.c	/^static long copied;        \/\/ *words* copied & scavenged during this GC$/;"	v	file:
copy	rts/sm/Evac.c	/^copy(StgClosure **p, const StgInfoTable *info,$/;"	f
copy	utils/lndir/lndir.c	/^int copy = 0;                   \/* -copy *\/$/;"	v
copyArg	rts/RtsFlags.c	/^static char * copyArg(char *arg)$/;"	f	file:
copyArgv	rts/RtsFlags.c	/^static char ** copyArgv(int argc, char *argv[])$/;"	f	file:
copyName	rts/linker/PEi386.c	/^copyName ( uint8_t* name, ObjectCode* oc, uint8_t* dst, int dstSize )$/;"	f	file:
copyPAP	rts/Interpreter.c	/^StgClosure * copyPAP  (Capability *cap, StgPAP *oldpap)$/;"	f
copyPart	rts/sm/Evac.c	/^copyPart(StgClosure **p, StgClosure *src, uint32_t size_to_reserve,$/;"	f	file:
copy_struct_N32	libffi/build/src/mips/ffi.c	/^copy_struct_N32(char *target, unsigned offset, ffi_abi abi, ffi_type *type,$/;"	f	file:
copy_tag	rts/sm/Evac.c	/^copy_tag(StgClosure **p, const StgInfoTable *info,$/;"	f
copy_tag_nolock	rts/sm/Evac.c	/^copy_tag_nolock(StgClosure **p, const StgInfoTable *info,$/;"	f
copy_tag_nolock	rts/sm/Evac.c	39;"	d	file:
copyfile	utils/lndir/lndir.c	/^int copyfile(const char *oldpath, const char *newpath) {$/;"	f
copysign	testsuite/tests/rts/T15894/copysign.c	/^copysign (double x, double y)$/;"	f
copystring	utils/hp2ps/Utilities.c	/^copystring(char *s)$/;"	f
copystring2	utils/hp2ps/Utilities.c	/^copystring2(char *s, char *t)$/;"	f
count	nofib/smp/callback002/cbits.c	/^int count;$/;"	v
countAllocdBlocks	rts/sm/BlockAlloc.c	/^countAllocdBlocks(bdescr *bd)$/;"	f
countAllocdCompactBlocks	rts/sm/CNF.c	/^countAllocdCompactBlocks(bdescr *outer)$/;"	f
countBlocks	rts/sm/BlockAlloc.c	/^countBlocks(bdescr *bd)$/;"	f
countCompactBlocks	rts/sm/CNF.c	/^countCompactBlocks(bdescr *outer)$/;"	f
countFreeList	rts/sm/BlockAlloc.c	/^countFreeList(void)$/;"	f
countNonMovingAllocator	rts/sm/Sanity.c	/^countNonMovingAllocator(struct NonmovingAllocator *alloc)$/;"	f	file:
countNonMovingHeap	rts/sm/Sanity.c	/^countNonMovingHeap(struct NonmovingHeap *heap)$/;"	f	file:
countNonMovingSegments	rts/sm/Sanity.c	/^countNonMovingSegments(struct NonmovingSegment *segs)$/;"	f	file:
countNurseryBlocks	rts/sm/Storage.c	/^countNurseryBlocks (void)$/;"	f
countOccupied	rts/sm/Storage.c	/^W_ countOccupied (bdescr *bd)$/;"	f
countTickss	rts/Profiling.c	/^countTickss(CostCentreStack const *ccs)$/;"	f	file:
countTickss_	rts/Profiling.c	/^countTickss_(CostCentreStack const *ccs, ProfilerTotals *totals)$/;"	f	file:
counter	rts/ProfHeap.c	/^} counter;$/;"	t	typeref:struct:_counter	file:
cp	rts/TraverseHeap.c	/^    StgClosure *cp;$/;"	m	union:__anon49	file:
cpuGroupCache	rts/win32/OSThreads.c	/^static uint8_t* cpuGroupCache = NULL;$/;"	v	file:
cpuGroupCumulativeCache	rts/win32/OSThreads.c	/^static uint32_t* cpuGroupCumulativeCache = NULL;$/;"	v	file:
cpuGroupDistCache	rts/win32/OSThreads.c	/^static uint8_t* cpuGroupDistCache = NULL;$/;"	v	file:
createAdjustor	rts/Adjustor.c	/^createAdjustor (int cconv, $/;"	f
createAdjustor	rts/Adjustor.c	/^createAdjustor(int cconv, StgStablePtr hptr,$/;"	f
createCompletionPort	libraries/process/cbits/runProcess.c	/^createCompletionPort (HANDLE hJob)$/;"	f	file:
createGenThread	rts/RtsAPI.c	/^createGenThread (Capability *cap, W_ stack_size,  StgClosure *closure)$/;"	f
createIOThread	rts/RtsAPI.c	/^createIOThread (Capability *cap, W_ stack_size,  StgClosure *closure)$/;"	f
createJob	libraries/process/cbits/runProcess.c	/^createJob ()$/;"	f	file:
createOCSectionIndices	rts/CheckUnload.c	/^static OCSectionIndices *createOCSectionIndices(int n_sections)$/;"	f	file:
createOSThread	rts/posix/OSThreads.c	/^createOSThread (OSThreadId* pId, char *name STG_UNUSED,$/;"	f
createOSThread	rts/win32/OSThreads.c	/^createOSThread (OSThreadId* pId, char *name STG_UNUSED,$/;"	f
createProcessorGroupMap	rts/win32/OSThreads.c	/^createProcessorGroupMap (void)$/;"	f	file:
createSparkThread	rts/Sparks.c	/^createSparkThread (Capability *cap)$/;"	f
createStrictIOThread	rts/RtsAPI.c	/^createStrictIOThread(Capability *cap, W_ stack_size,  StgClosure *closure)$/;"	f
createThread	rts/Threads.c	/^createThread(Capability *cap, W_ size)$/;"	f
create_code_table	nofib/real/compress/lzw.c	/^struct prefix_tree *create_code_table (int first_code,int n_codes)$/;"	f
create_device_name	utils/fs/fs.c	/^wchar_t* FS(create_device_name) (const wchar_t* filename) {$/;"	f
create_fn_blob	testsuite/tests/ffi/should_run/T4221_c.c	/^fn_blob* create_fn_blob(hs_function_ptr fn, void (*free_fn)(hs_function_ptr)) {$/;"	f
create_mspace	libffi/build/src/dlmalloc.c	/^mspace create_mspace(size_t capacity, int locked) {$/;"	f
create_mspace_with_base	libffi/build/src/dlmalloc.c	/^mspace create_mspace_with_base(void* base, size_t capacity, int locked) {$/;"	f
crunchnl	utils/unlit/unlit.c	/^static int crunchnl = 0; \/* don't print \\n for removed lines                 *\/$/;"	v	file:
ctors	testsuite/tests/rts/linker/T5435_asm.c	/^static void (*ctors[2])(void) __attribute__(($/;"	v	file:
ctors1	testsuite/tests/rts/linker/T5435_asm.c	/^static void ctors1(void)        { printf("ctors1\\n");       fflush(stdout); }$/;"	f	file:
ctors2	testsuite/tests/rts/linker/T5435_asm.c	/^static void ctors2(void)        { printf("ctors2\\n");       fflush(stdout); }$/;"	f	file:
ctrs	rts/ProfHeap.c	/^    counter   * ctrs;$/;"	m	struct:__anon44	file:
cur_bt	rts/Libdw.c	/^    Backtrace *cur_bt;$/;"	m	struct:LibdwSession_	file:
curdir	utils/lndir/lndir.c	/^char *curdir;$/;"	v
current	rts/Arena.c	/^    bdescr *current;$/;"	m	struct:_Arena	file:
currentTaskKey	rts/Task.c	/^ThreadLocalKey currentTaskKey;$/;"	v
currentWorkerCount	rts/Task.c	/^uint32_t currentWorkerCount;$/;"	v
current_char	nofib/real/compress2/inC/prefix_trees.c	/^unsigned char current_char;$/;"	v
current_mark_queue	rts/sm/NonMovingMark.c	/^MarkQueue *current_mark_queue = NULL;$/;"	v
current_size	rts/Pool.c	/^    uint32_t current_size;$/;"	m	struct:Pool_	file:
current_size	rts/linker/M32Alloc.c	/^    size_t current_size;$/;"	m	union:m32_page_t::__anon38	file:
d	libffi/build/src/aarch64/ffi.c	/^  UINT64 d;$/;"	m	union:_d	file:
d	libffi/build/src/aarch64/ffi.c	/^  union _d d[2] __attribute__((aligned(16)));$/;"	m	struct:_v	typeref:union:_v::_d	file:
d	libffi/build/src/powerpc/ffi_darwin.c	/^  double d;$/;"	m	union:__anon6	file:
d	libffi/build/testsuite/libffi.call/cls_18byte.c	/^  double d;$/;"	m	struct:cls_struct_18byte	file:
d	libffi/build/testsuite/libffi.call/cls_19byte.c	/^  double d;$/;"	m	struct:cls_struct_19byte	file:
d	libffi/build/testsuite/libffi.call/cls_24byte.c	/^  float d;$/;"	m	struct:cls_struct_24byte	file:
d	libffi/build/testsuite/libffi.call/cls_4_1byte.c	/^  unsigned char d;$/;"	m	struct:cls_struct_4_1byte	file:
d	libffi/build/testsuite/libffi.call/cls_5_1_byte.c	/^  unsigned char d;$/;"	m	struct:cls_struct_5byte	file:
d	libffi/build/testsuite/libffi.call/cls_64byte.c	/^  double d;$/;"	m	struct:cls_struct_64byte	file:
d	libffi/build/testsuite/libffi.call/cls_6_1_byte.c	/^  unsigned char d;$/;"	m	struct:cls_struct_6byte	file:
d	libffi/build/testsuite/libffi.call/cls_6byte.c	/^  unsigned char d;$/;"	m	struct:cls_struct_6byte	file:
d	libffi/build/testsuite/libffi.call/cls_7_1_byte.c	/^  unsigned char d;$/;"	m	struct:cls_struct_7byte	file:
d	libffi/build/testsuite/libffi.call/cls_7byte.c	/^  unsigned short d;$/;"	m	struct:cls_struct_7byte	file:
d	libffi/build/testsuite/libffi.call/cls_align_longdouble_split.c	/^  long double d;$/;"	m	struct:cls_struct_align	file:
d	libffi/build/testsuite/libffi.call/cls_align_longdouble_split2.c	/^  long double d;$/;"	m	struct:cls_struct_align	file:
d	libffi/build/testsuite/libffi.call/cls_struct_va1.c	/^  unsigned d;$/;"	m	struct:large_tag	file:
d	libffi/build/testsuite/libffi.call/float1.c	/^  double d;$/;"	m	union:__anon9	file:
d	libffi/build/testsuite/libffi.call/float4.c	/^  double d;$/;"	m	union:__anon10	file:
d	libffi/build/testsuite/libffi.call/huge_struct.c	/^	int16_t		d;$/;"	m	struct:BigStruct	file:
d	libffi/build/testsuite/libffi.call/nested_struct.c	/^  cls_struct_16byte1 d;$/;"	m	struct:cls_struct_combined	file:
d	libffi/build/testsuite/libffi.call/nested_struct1.c	/^  cls_struct_16byte1 d;$/;"	m	struct:cls_struct_combined	file:
d	libffi/build/testsuite/libffi.call/nested_struct10.c	/^  unsigned long long d;$/;"	m	struct:C	file:
d	libffi/build/testsuite/libffi.call/nested_struct6.c	/^  long d;$/;"	m	struct:C	file:
d	libffi/build/testsuite/libffi.call/nested_struct8.c	/^  unsigned long long d;$/;"	m	struct:C	file:
d	libffi/build/testsuite/libffi.call/nested_struct9.c	/^  unsigned long d;$/;"	m	struct:C	file:
d	libffi/build/testsuite/libffi.call/stret_large.c	/^	double d;$/;"	m	struct:struct_108byte	file:
d	libffi/build/testsuite/libffi.call/stret_large2.c	/^	double d;$/;"	m	struct:struct_116byte	file:
d	libffi/build/testsuite/libffi.call/stret_medium.c	/^	double d;$/;"	m	struct:struct_72byte	file:
d	libffi/build/testsuite/libffi.call/stret_medium2.c	/^	double d;$/;"	m	struct:struct_72byte	file:
d	libffi/build/testsuite/libffi.call/struct1.c	/^  double d;$/;"	m	struct:__anon11	file:
d	libffi/build/testsuite/libffi.call/struct6.c	/^  double d;$/;"	m	struct:__anon16	file:
d	libffi/build/testsuite/libffi.call/struct7.c	/^  double d;$/;"	m	struct:__anon17	file:
d	libffi/build/testsuite/libffi.call/testclosure.c	/^  float d;$/;"	m	struct:cls_struct_combined	file:
d	libffi/build/testsuite/libffi.call/uninitialized.c	/^  double d;$/;"	m	struct:__anon20	file:
d	libffi/build/testsuite/libffi.call/va_1.c	/^  unsigned d;$/;"	m	struct:large_tag	file:
d	libffi/build/testsuite/libffi.call/va_struct1.c	/^  unsigned d;$/;"	m	struct:large_tag	file:
d	libffi/build/testsuite/libffi.call/va_struct2.c	/^  unsigned d;$/;"	m	struct:large_tag	file:
d	libffi/build/testsuite/libffi.call/va_struct3.c	/^  unsigned d;$/;"	m	struct:large_tag	file:
d	libraries/base/cbits/primFloat.c	/^   double d;$/;"	m	union:stg_ieee754_dbl	file:
d	nofib/spectral/simple/simple.c	/^double d[MAXSIZE][MAXSIZE],new_d[MAXSIZE][MAXSIZE];$/;"	v
d1	libffi/build/testsuite/libffi.call/struct2.c	/^  double d1;$/;"	m	struct:__anon12	file:
d2	libffi/build/testsuite/libffi.call/struct2.c	/^  double d2;$/;"	m	struct:__anon12	file:
darwin64_pass_struct_by_value	libffi/build/src/powerpc/ffi_darwin.c	/^darwin64_pass_struct_by_value (ffi_type *s, char *src, unsigned size,$/;"	f	file:
darwin64_pass_struct_floats	libffi/build/src/powerpc/ffi_darwin.c	/^darwin64_pass_struct_floats (ffi_type *s, char *src, $/;"	f
darwin64_scan_struct_for_floats	libffi/build/src/powerpc/ffi_darwin.c	/^darwin64_scan_struct_for_floats (ffi_type *s, unsigned *nfpr)$/;"	f	file:
darwin64_struct_floats_to_mem	libffi/build/src/powerpc/ffi_darwin.c	/^darwin64_struct_floats_to_mem (ffi_type *s, char *dest, double *fprs, unsigned *nf)$/;"	f
darwin64_struct_ret_by_value_p	libffi/build/src/powerpc/ffi_darwin.c	/^darwin64_struct_ret_by_value_p (ffi_type *s)$/;"	f
darwin64_struct_size_exceeds_gprs_p	libffi/build/src/powerpc/ffi_darwin.c	/^darwin64_struct_size_exceeds_gprs_p (ffi_type *s, char *src, unsigned *nfpr)$/;"	f	file:
darwin_adjust_aggregate_sizes	libffi/build/src/powerpc/ffi_darwin.c	/^darwin_adjust_aggregate_sizes (ffi_type *s)$/;"	f	file:
data	rts/Hash.c	/^    const void *data;$/;"	m	struct:hashlist	file:
data	rts/TraverseHeap.c	/^    stackData data;$/;"	m	struct:stackElement_	file:
datestring	utils/hp2ps/HpFile.c	/^char *datestring;$/;"	v
dbl	testsuite/tests/ffi/should_run/T493_c.c	/^int dbl(int x)$/;"	f
dblit	libffi/build/testsuite/libffi.call/float1.c	/^static double dblit(float f)$/;"	f	file:
dblit	libffi/build/testsuite/libffi.call/float4.c	/^static double dblit(double d)$/;"	f	file:
dcElemSize	libraries/Cabal/cabal-testsuite/PackageTests/Regression/T5309/memoized-tcm/dynamicCharacterOperations.c	/^size_t dcElemSize(size_t alphSize) { return 1; }$/;"	f
dd	libffi/build/testsuite/libffi.call/huge_struct.c	/^	int32_t		dd;$/;"	m	struct:BigStruct	file:
dd	libffi/build/testsuite/libffi.call/nested_struct.c	/^  double dd;$/;"	m	struct:cls_struct_16byte2	file:
dd	libffi/build/testsuite/libffi.call/nested_struct1.c	/^  double dd;$/;"	m	struct:cls_struct_16byte2	file:
deadlock_detect_gc	rts/sm/GC.c	/^bool deadlock_detect_gc;$/;"	v
debug	libffi/build/src/pa/ffi.c	52;"	d	file:
debug	rts/TraverseHeap.c	/^static inline void debug(const char *s, ...)$/;"	f	file:
debug	rts/TraverseHeap.c	129;"	d	file:
debugBelch	rts/RtsMessages.c	/^debugBelch(const char*s, ...)$/;"	f
debugBelch2	libraries/base/cbits/PrelIOUtils.c	/^void debugBelch2(const char*s, char *t)$/;"	f
debugCCS	rts/Profiling.c	/^debugCCS( CostCentreStack *ccs )$/;"	f
debugErrLn	libraries/ghc-prim/cbits/debug.c	/^void debugErrLn(char *s) {$/;"	f
debugLn	libraries/ghc-prim/cbits/debug.c	/^void debugLn(char *s) {$/;"	f
debugMsgFn	rts/RtsMessages.c	/^RtsMsgFunction *debugMsgFn           = rtsDebugMsgFn;$/;"	v
debug_caf_list	rts/sm/Storage.c	/^StgIndStatic  *debug_caf_list      = NULL;$/;"	v
debug_caf_list_snapshot	rts/sm/NonMovingMark.c	/^StgIndStatic *debug_caf_list_snapshot = (StgIndStatic*)END_OF_CAF_LIST;$/;"	v
dec_running	rts/sm/GC.c	/^dec_running (void)$/;"	f	file:
decode	libraries/text/cbits/cbits.c	/^decode(uint32_t *state, uint32_t* codep, uint32_t byte) {$/;"	f	file:
decodeAddend	rts/linker/MachO.c	/^decodeAddend(ObjectCode * oc, Section * section, MachORelocationInfo * ri) {$/;"	f
decodeAddendAarch64	rts/linker/elf_reloc_aarch64.c	/^decodeAddendAarch64(Section * section __attribute__((unused)),$/;"	f
decodeSize	rts/RtsFlags.c	/^decodeSize(const char *flag, uint32_t offset, StgWord64 min, StgWord64 max)$/;"	f	file:
decommitBlocks	rts/win32/OSMem.c	/^static void decommitBlocks(char *addr, W_ nBytes)$/;"	f	file:
decommitMBlocks	rts/sm/MBlock.c	/^static void decommitMBlocks(char *addr, uint32_t n)$/;"	f	file:
decommitMBlocks	rts/sm/MBlock.c	/^static void decommitMBlocks(void *p, uint32_t n)$/;"	f	file:
defaultRtsConfig	rts/RtsFlags.c	/^const RtsConfig defaultRtsConfig  = {$/;"	v
default_alignment	rts/linker/PEi386.c	/^const int default_alignment = 8;$/;"	v
default_mflags	libffi/build/src/dlmalloc.c	/^  flag_t default_mflags;$/;"	m	struct:malloc_params	file:
defaultsHook	ghc/hschooks.c	/^defaultsHook (void)$/;"	f
deleteAllThreads	rts/Schedule.c	/^deleteAllThreads ()$/;"	f	file:
deleteThread	rts/Schedule.c	/^deleteThread (StgTSO *tso)$/;"	f	file:
deleteThread_	rts/Schedule.c	/^deleteThread_(StgTSO *tso)$/;"	f	file:
deliver_event	rts/win32/ConsoleHandler.c	/^static bool deliver_event = true;$/;"	v	file:
deltat	nofib/spectral/simple/simple.c	/^double deltat,new_deltat;$/;"	v
deltat_maximum	nofib/spectral/simple/simple.c	/^double deltat_maximum = 0.01;$/;"	v
depositWorkItem	rts/win32/IOManager.c	/^depositWorkItem( unsigned int reqID,$/;"	f	file:
deriv	testsuite/tests/rts/T4059_c.c	/^double deriv(double f(double), double x, double h) {$/;"	f
derivedConstantAP_STACK_SPLIM	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantAP_STACK_SPLIM[1 + AP_STACK_SPLIM];$/;"	v
derivedConstantBITMAP_BITS_SHIFT	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantBITMAP_BITS_SHIFT[1 + BITMAP_BITS_SHIFT];$/;"	v
derivedConstantBLOCKS_PER_MBLOCK	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantBLOCKS_PER_MBLOCK[1 + BLOCKS_PER_MBLOCK];$/;"	v
derivedConstantBLOCK_SIZE	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantBLOCK_SIZE[1 + BLOCK_SIZE];$/;"	v
derivedConstantCINT_SIZE	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantCINT_SIZE[1 + SIZEOF_INT];$/;"	v
derivedConstantCLONG_LONG_SIZE	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantCLONG_LONG_SIZE[1 + SIZEOF_LONG_LONG];$/;"	v
derivedConstantCLONG_SIZE	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantCLONG_SIZE[1 + SIZEOF_LONG];$/;"	v
derivedConstantCONTROL_GROUP_CONST_291	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantCONTROL_GROUP_CONST_291[1 + 0x123];$/;"	v
derivedConstantDOUBLE_SIZE	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantDOUBLE_SIZE[1 + SIZEOF_DOUBLE];$/;"	v
derivedConstantDYNAMIC_BY_DEFAULT	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantDYNAMIC_BY_DEFAULT[1];$/;"	v
derivedConstantDYNAMIC_BY_DEFAULT	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantDYNAMIC_BY_DEFAULT[2];$/;"	v
derivedConstantILDV_CREATE_MASK0	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantILDV_CREATE_MASK0[1 + (((uint64_t)(size_t)(LDV_CREATE_MASK)) & 0xFFFF)];$/;"	v
derivedConstantILDV_CREATE_MASK1	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantILDV_CREATE_MASK1[1 + ((((uint64_t)(size_t)(LDV_CREATE_MASK)) >> 16) & 0xFFFF)];$/;"	v
derivedConstantILDV_CREATE_MASK2	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantILDV_CREATE_MASK2[1 + ((((uint64_t)(size_t)(LDV_CREATE_MASK)) >> 32) & 0xFFFF)];$/;"	v
derivedConstantILDV_CREATE_MASK3	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantILDV_CREATE_MASK3[1 + ((((uint64_t)(size_t)(LDV_CREATE_MASK)) >> 48) & 0xFFFF)];$/;"	v
derivedConstantILDV_STATE_CREATE0	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantILDV_STATE_CREATE0[1 + (((uint64_t)(size_t)(LDV_STATE_CREATE)) & 0xFFFF)];$/;"	v
derivedConstantILDV_STATE_CREATE1	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantILDV_STATE_CREATE1[1 + ((((uint64_t)(size_t)(LDV_STATE_CREATE)) >> 16) & 0xFFFF)];$/;"	v
derivedConstantILDV_STATE_CREATE2	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantILDV_STATE_CREATE2[1 + ((((uint64_t)(size_t)(LDV_STATE_CREATE)) >> 32) & 0xFFFF)];$/;"	v
derivedConstantILDV_STATE_CREATE3	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantILDV_STATE_CREATE3[1 + ((((uint64_t)(size_t)(LDV_STATE_CREATE)) >> 48) & 0xFFFF)];$/;"	v
derivedConstantILDV_STATE_USE0	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantILDV_STATE_USE0[1 + (((uint64_t)(size_t)(LDV_STATE_USE)) & 0xFFFF)];$/;"	v
derivedConstantILDV_STATE_USE1	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantILDV_STATE_USE1[1 + ((((uint64_t)(size_t)(LDV_STATE_USE)) >> 16) & 0xFFFF)];$/;"	v
derivedConstantILDV_STATE_USE2	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantILDV_STATE_USE2[1 + ((((uint64_t)(size_t)(LDV_STATE_USE)) >> 32) & 0xFFFF)];$/;"	v
derivedConstantILDV_STATE_USE3	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantILDV_STATE_USE3[1 + ((((uint64_t)(size_t)(LDV_STATE_USE)) >> 48) & 0xFFFF)];$/;"	v
derivedConstantLDV_SHIFT	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantLDV_SHIFT[1 + LDV_SHIFT];$/;"	v
derivedConstantMAX_CHARLIKE	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMAX_CHARLIKE[1 + MAX_CHARLIKE];$/;"	v
derivedConstantMAX_Double_REG	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMAX_Double_REG[1 + MAX_DOUBLE_REG];$/;"	v
derivedConstantMAX_Float_REG	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMAX_Float_REG[1 + MAX_FLOAT_REG];$/;"	v
derivedConstantMAX_INTLIKE	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMAX_INTLIKE[1 + MAX_INTLIKE];$/;"	v
derivedConstantMAX_Long_REG	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMAX_Long_REG[1 + MAX_LONG_REG];$/;"	v
derivedConstantMAX_Real_Double_REG	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMAX_Real_Double_REG[1 + MAX_REAL_DOUBLE_REG];$/;"	v
derivedConstantMAX_Real_Float_REG	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMAX_Real_Float_REG[1 + MAX_REAL_FLOAT_REG];$/;"	v
derivedConstantMAX_Real_Long_REG	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMAX_Real_Long_REG[1 + MAX_REAL_LONG_REG];$/;"	v
derivedConstantMAX_Real_Vanilla_REG	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMAX_Real_Vanilla_REG[1 + MAX_REAL_VANILLA_REG];$/;"	v
derivedConstantMAX_Real_XMM_REG	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMAX_Real_XMM_REG[1 + MAX_REAL_XMM_REG];$/;"	v
derivedConstantMAX_SPEC_AP_SIZE	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMAX_SPEC_AP_SIZE[1 + MAX_SPEC_AP_SIZE];$/;"	v
derivedConstantMAX_SPEC_SELECTEE_SIZE	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMAX_SPEC_SELECTEE_SIZE[1 + MAX_SPEC_SELECTEE_SIZE];$/;"	v
derivedConstantMAX_Vanilla_REG	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMAX_Vanilla_REG[1 + MAX_VANILLA_REG];$/;"	v
derivedConstantMAX_XMM_REG	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMAX_XMM_REG[1 + MAX_XMM_REG];$/;"	v
derivedConstantMBLOCK_SIZE	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMBLOCK_SIZE[1 + MBLOCK_SIZE];$/;"	v
derivedConstantMIN_CHARLIKE	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMIN_CHARLIKE[1 + MIN_CHARLIKE];$/;"	v
derivedConstantMIN_INTLIKEMag	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMIN_INTLIKEMag[1 + ((intptr_t)(MIN_INTLIKE) >= 0 ? (MIN_INTLIKE) : -(MIN_INTLIKE))];$/;"	v
derivedConstantMIN_INTLIKESig	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMIN_INTLIKESig[(intptr_t)(MIN_INTLIKE) >= 0 ? 3 : 1];$/;"	v
derivedConstantMIN_PAYLOAD_SIZE	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMIN_PAYLOAD_SIZE[1 + MIN_PAYLOAD_SIZE];$/;"	v
derivedConstantMUT_ARR_PTRS_CARD_BITS	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantMUT_ARR_PTRS_CARD_BITS[1 + MUT_ARR_PTRS_CARD_BITS];$/;"	v
derivedConstantOFFSET_Capability_context_switch	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_Capability_context_switch[1 + offsetof(Capability, context_switch)];$/;"	v
derivedConstantOFFSET_Capability_interrupt	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_Capability_interrupt[1 + offsetof(Capability, interrupt)];$/;"	v
derivedConstantOFFSET_Capability_lock	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_Capability_lock[1 + offsetof(Capability, lock)];$/;"	v
derivedConstantOFFSET_Capability_mut_lists	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_Capability_mut_lists[1 + offsetof(Capability, mut_lists)];$/;"	v
derivedConstantOFFSET_Capability_no	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_Capability_no[1 + offsetof(Capability, no)];$/;"	v
derivedConstantOFFSET_Capability_r	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_Capability_r[1 + offsetof(Capability, r)];$/;"	v
derivedConstantOFFSET_Capability_sparks	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_Capability_sparks[1 + offsetof(Capability, sparks)];$/;"	v
derivedConstantOFFSET_Capability_total_allocated	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_Capability_total_allocated[1 + offsetof(Capability, total_allocated)];$/;"	v
derivedConstantOFFSET_Capability_weak_ptr_list_hd	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_Capability_weak_ptr_list_hd[1 + offsetof(Capability, weak_ptr_list_hd)];$/;"	v
derivedConstantOFFSET_Capability_weak_ptr_list_tl	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_Capability_weak_ptr_list_tl[1 + offsetof(Capability, weak_ptr_list_tl)];$/;"	v
derivedConstantOFFSET_CostCentreStack_ccsID	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_CostCentreStack_ccsID[1 + offsetof(CostCentreStack, ccsID)];$/;"	v
derivedConstantOFFSET_CostCentreStack_mem_alloc	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_CostCentreStack_mem_alloc[1 + offsetof(CostCentreStack, mem_alloc)];$/;"	v
derivedConstantOFFSET_CostCentreStack_prevStack	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_CostCentreStack_prevStack[1 + offsetof(CostCentreStack, prevStack)];$/;"	v
derivedConstantOFFSET_CostCentreStack_scc_count	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_CostCentreStack_scc_count[1 + offsetof(CostCentreStack, scc_count)];$/;"	v
derivedConstantOFFSET_CostCentre_ccID	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_CostCentre_ccID[1 + offsetof(CostCentre, ccID)];$/;"	v
derivedConstantOFFSET_CostCentre_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_CostCentre_link[1 + offsetof(CostCentre, link)];$/;"	v
derivedConstantOFFSET_MessageBlackHole_bh	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_MessageBlackHole_bh[1 + offsetof(MessageBlackHole, bh) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_MessageBlackHole_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_MessageBlackHole_link[1 + offsetof(MessageBlackHole, link) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_MessageBlackHole_tso	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_MessageBlackHole_tso[1 + offsetof(MessageBlackHole, tso) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_RtsFlags_DebugFlags_apply	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_RtsFlags_DebugFlags_apply[1 + offsetof(RTS_FLAGS, DebugFlags.apply)];$/;"	v
derivedConstantOFFSET_RtsFlags_DebugFlags_sanity	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_RtsFlags_DebugFlags_sanity[1 + offsetof(RTS_FLAGS, DebugFlags.sanity)];$/;"	v
derivedConstantOFFSET_RtsFlags_DebugFlags_weak	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_RtsFlags_DebugFlags_weak[1 + offsetof(RTS_FLAGS, DebugFlags.weak)];$/;"	v
derivedConstantOFFSET_RtsFlags_GcFlags_initialStkSize	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_RtsFlags_GcFlags_initialStkSize[1 + offsetof(RTS_FLAGS, GcFlags.initialStkSize)];$/;"	v
derivedConstantOFFSET_RtsFlags_MiscFlags_tickInterval	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_RtsFlags_MiscFlags_tickInterval[1 + offsetof(RTS_FLAGS, MiscFlags.tickInterval)];$/;"	v
derivedConstantOFFSET_RtsFlags_ProfFlags_showCCSOnException	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_RtsFlags_ProfFlags_showCCSOnException[1 + offsetof(RTS_FLAGS, ProfFlags.showCCSOnException)];$/;"	v
derivedConstantOFFSET_StgAP_STACK_fun	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgAP_STACK_fun[1 + offsetof(StgAP_STACK, fun) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgAP_STACK_payload	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgAP_STACK_payload[1 + offsetof(StgAP_STACK, payload) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgAP_STACK_size	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgAP_STACK_size[1 + offsetof(StgAP_STACK, size) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgAP_fun	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgAP_fun[1 + offsetof(StgAP, fun) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgAP_n_args	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgAP_n_args[1 + offsetof(StgAP, n_args) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgAP_payload	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgAP_payload[1 + offsetof(StgAP, payload) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgArrBytes_bytes	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgArrBytes_bytes[1 + offsetof(StgArrBytes, bytes) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgArrBytes_payload	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgArrBytes_payload[1 + offsetof(StgArrBytes, payload) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgAtomicallyFrame_code	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgAtomicallyFrame_code[1 + offsetof(StgAtomicallyFrame, code) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgAtomicallyFrame_result	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgAtomicallyFrame_result[1 + offsetof(StgAtomicallyFrame, result) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgBCO_arity	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgBCO_arity[1 + offsetof(StgBCO, arity) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgBCO_bitmap	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgBCO_bitmap[1 + offsetof(StgBCO, bitmap) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgBCO_instrs	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgBCO_instrs[1 + offsetof(StgBCO, instrs) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgBCO_literals	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgBCO_literals[1 + offsetof(StgBCO, literals) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgBCO_ptrs	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgBCO_ptrs[1 + offsetof(StgBCO, ptrs) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgBCO_size	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgBCO_size[1 + offsetof(StgBCO, size) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgBlockingQueue_bh	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgBlockingQueue_bh[1 + offsetof(StgBlockingQueue, bh) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgBlockingQueue_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgBlockingQueue_link[1 + offsetof(StgBlockingQueue, link) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgBlockingQueue_owner	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgBlockingQueue_owner[1 + offsetof(StgBlockingQueue, owner) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgBlockingQueue_queue	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgBlockingQueue_queue[1 + offsetof(StgBlockingQueue, queue) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCFinalizerList_eptr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCFinalizerList_eptr[1 + offsetof(StgCFinalizerList, eptr) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCFinalizerList_flag	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCFinalizerList_flag[1 + offsetof(StgCFinalizerList, flag) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCFinalizerList_fptr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCFinalizerList_fptr[1 + offsetof(StgCFinalizerList, fptr) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCFinalizerList_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCFinalizerList_link[1 + offsetof(StgCFinalizerList, link) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCFinalizerList_ptr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCFinalizerList_ptr[1 + offsetof(StgCFinalizerList, ptr) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCatchFrame_exceptions_blocked	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCatchFrame_exceptions_blocked[1 + offsetof(StgCatchFrame, exceptions_blocked) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCatchFrame_handler	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCatchFrame_handler[1 + offsetof(StgCatchFrame, handler) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCatchRetryFrame_alt_code	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCatchRetryFrame_alt_code[1 + offsetof(StgCatchRetryFrame, alt_code) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCatchRetryFrame_first_code	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCatchRetryFrame_first_code[1 + offsetof(StgCatchRetryFrame, first_code) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCatchRetryFrame_running_alt_code	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCatchRetryFrame_running_alt_code[1 + offsetof(StgCatchRetryFrame, running_alt_code) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCatchSTMFrame_code	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCatchSTMFrame_code[1 + offsetof(StgCatchSTMFrame, code) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCatchSTMFrame_handler	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCatchSTMFrame_handler[1 + offsetof(StgCatchSTMFrame, handler) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgClosure_payload	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgClosure_payload[1 + offsetof(StgClosure, payload) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCompactNFDataBlock_next	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCompactNFDataBlock_next[1 + offsetof(StgCompactNFDataBlock, next)];$/;"	v
derivedConstantOFFSET_StgCompactNFDataBlock_owner	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCompactNFDataBlock_owner[1 + offsetof(StgCompactNFDataBlock, owner)];$/;"	v
derivedConstantOFFSET_StgCompactNFDataBlock_self	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCompactNFDataBlock_self[1 + offsetof(StgCompactNFDataBlock, self)];$/;"	v
derivedConstantOFFSET_StgCompactNFData_autoBlockW	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCompactNFData_autoBlockW[1 + offsetof(StgCompactNFData, autoBlockW) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCompactNFData_hash	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCompactNFData_hash[1 + offsetof(StgCompactNFData, hash) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCompactNFData_hp	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCompactNFData_hp[1 + offsetof(StgCompactNFData, hp) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCompactNFData_hpLim	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCompactNFData_hpLim[1 + offsetof(StgCompactNFData, hpLim) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCompactNFData_last	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCompactNFData_last[1 + offsetof(StgCompactNFData, last) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCompactNFData_nursery	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCompactNFData_nursery[1 + offsetof(StgCompactNFData, nursery) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCompactNFData_result	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCompactNFData_result[1 + offsetof(StgCompactNFData, result) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgCompactNFData_totalW	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgCompactNFData_totalW[1 + offsetof(StgCompactNFData, totalW) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgEntCounter_allocd	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgEntCounter_allocd[1 + offsetof(StgEntCounter, allocd)];$/;"	v
derivedConstantOFFSET_StgEntCounter_allocs	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgEntCounter_allocs[1 + offsetof(StgEntCounter, allocs)];$/;"	v
derivedConstantOFFSET_StgEntCounter_entry_count	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgEntCounter_entry_count[1 + offsetof(StgEntCounter, entry_count)];$/;"	v
derivedConstantOFFSET_StgEntCounter_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgEntCounter_link[1 + offsetof(StgEntCounter, link)];$/;"	v
derivedConstantOFFSET_StgEntCounter_registeredp	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgEntCounter_registeredp[1 + offsetof(StgEntCounter, registeredp)];$/;"	v
derivedConstantOFFSET_StgFunInfoExtraFwd_arity	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgFunInfoExtraFwd_arity[1 + offsetof(StgFunInfoExtraFwd, arity)];$/;"	v
derivedConstantOFFSET_StgFunInfoExtraFwd_bitmap	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgFunInfoExtraFwd_bitmap[1 + offsetof(StgFunInfoExtraFwd, b.bitmap)];$/;"	v
derivedConstantOFFSET_StgFunInfoExtraFwd_fun_type	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgFunInfoExtraFwd_fun_type[1 + offsetof(StgFunInfoExtraFwd, fun_type)];$/;"	v
derivedConstantOFFSET_StgFunInfoExtraFwd_slow_apply	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgFunInfoExtraFwd_slow_apply[1 + offsetof(StgFunInfoExtraFwd, slow_apply)];$/;"	v
derivedConstantOFFSET_StgFunInfoExtraRev_arity	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgFunInfoExtraRev_arity[1 + offsetof(StgFunInfoExtraRev, arity)];$/;"	v
derivedConstantOFFSET_StgFunInfoExtraRev_bitmap	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgFunInfoExtraRev_bitmap[1 + offsetof(StgFunInfoExtraRev, b.bitmap)];$/;"	v
derivedConstantOFFSET_StgFunInfoExtraRev_bitmap_offset	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgFunInfoExtraRev_bitmap_offset[1 + offsetof(StgFunInfoExtraRev, b.bitmap_offset)];$/;"	v
derivedConstantOFFSET_StgFunInfoExtraRev_fun_type	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgFunInfoExtraRev_fun_type[1 + offsetof(StgFunInfoExtraRev, fun_type)];$/;"	v
derivedConstantOFFSET_StgFunInfoExtraRev_slow_apply_offset	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgFunInfoExtraRev_slow_apply_offset[1 + offsetof(StgFunInfoExtraRev, slow_apply_offset)];$/;"	v
derivedConstantOFFSET_StgHeader_ccs	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgHeader_ccs[1 + offsetof(StgHeader, prof.ccs)];$/;"	v
derivedConstantOFFSET_StgHeader_info	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgHeader_info[1 + offsetof(StgHeader, info)];$/;"	v
derivedConstantOFFSET_StgHeader_ldvw	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgHeader_ldvw[1 + offsetof(StgHeader, prof.hp.ldvw)];$/;"	v
derivedConstantOFFSET_StgInd_indirectee	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgInd_indirectee[1 + offsetof(StgInd, indirectee) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgLargeBitmap_bitmap	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgLargeBitmap_bitmap[1 + offsetof(StgLargeBitmap, bitmap)];$/;"	v
derivedConstantOFFSET_StgLargeBitmap_size	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgLargeBitmap_size[1 + offsetof(StgLargeBitmap, size)];$/;"	v
derivedConstantOFFSET_StgMVarTSOQueue_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgMVarTSOQueue_link[1 + offsetof(StgMVarTSOQueue, link) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgMVarTSOQueue_tso	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgMVarTSOQueue_tso[1 + offsetof(StgMVarTSOQueue, tso) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgMVar_head	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgMVar_head[1 + offsetof(StgMVar, head) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgMVar_tail	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgMVar_tail[1 + offsetof(StgMVar, tail) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgMVar_value	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgMVar_value[1 + offsetof(StgMVar, value) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgMutArrPtrs_ptrs	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgMutArrPtrs_ptrs[1 + offsetof(StgMutArrPtrs, ptrs) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgMutArrPtrs_size	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgMutArrPtrs_size[1 + offsetof(StgMutArrPtrs, size) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgMutVar_var	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgMutVar_var[1 + offsetof(StgMutVar, var) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgPAP_arity	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgPAP_arity[1 + offsetof(StgPAP, arity) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgPAP_fun	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgPAP_fun[1 + offsetof(StgPAP, fun) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgPAP_n_args	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgPAP_n_args[1 + offsetof(StgPAP, n_args) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgPAP_payload	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgPAP_payload[1 + offsetof(StgPAP, payload) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgRegTable_rCCCS	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rCCCS[1 + offsetof(StgRegTable, rCCCS)];$/;"	v
derivedConstantOFFSET_StgRegTable_rCurrentNursery	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rCurrentNursery[1 + offsetof(StgRegTable, rCurrentNursery)];$/;"	v
derivedConstantOFFSET_StgRegTable_rCurrentTSO	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rCurrentTSO[1 + offsetof(StgRegTable, rCurrentTSO)];$/;"	v
derivedConstantOFFSET_StgRegTable_rD1	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rD1[1 + offsetof(StgRegTable, rD1)];$/;"	v
derivedConstantOFFSET_StgRegTable_rD2	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rD2[1 + offsetof(StgRegTable, rD2)];$/;"	v
derivedConstantOFFSET_StgRegTable_rD3	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rD3[1 + offsetof(StgRegTable, rD3)];$/;"	v
derivedConstantOFFSET_StgRegTable_rD4	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rD4[1 + offsetof(StgRegTable, rD4)];$/;"	v
derivedConstantOFFSET_StgRegTable_rD5	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rD5[1 + offsetof(StgRegTable, rD5)];$/;"	v
derivedConstantOFFSET_StgRegTable_rD6	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rD6[1 + offsetof(StgRegTable, rD6)];$/;"	v
derivedConstantOFFSET_StgRegTable_rF1	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rF1[1 + offsetof(StgRegTable, rF1)];$/;"	v
derivedConstantOFFSET_StgRegTable_rF2	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rF2[1 + offsetof(StgRegTable, rF2)];$/;"	v
derivedConstantOFFSET_StgRegTable_rF3	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rF3[1 + offsetof(StgRegTable, rF3)];$/;"	v
derivedConstantOFFSET_StgRegTable_rF4	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rF4[1 + offsetof(StgRegTable, rF4)];$/;"	v
derivedConstantOFFSET_StgRegTable_rF5	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rF5[1 + offsetof(StgRegTable, rF5)];$/;"	v
derivedConstantOFFSET_StgRegTable_rF6	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rF6[1 + offsetof(StgRegTable, rF6)];$/;"	v
derivedConstantOFFSET_StgRegTable_rHp	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rHp[1 + offsetof(StgRegTable, rHp)];$/;"	v
derivedConstantOFFSET_StgRegTable_rHpAlloc	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rHpAlloc[1 + offsetof(StgRegTable, rHpAlloc)];$/;"	v
derivedConstantOFFSET_StgRegTable_rHpLim	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rHpLim[1 + offsetof(StgRegTable, rHpLim)];$/;"	v
derivedConstantOFFSET_StgRegTable_rL1	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rL1[1 + offsetof(StgRegTable, rL1)];$/;"	v
derivedConstantOFFSET_StgRegTable_rNursery	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rNursery[1 + offsetof(StgRegTable, rNursery)];$/;"	v
derivedConstantOFFSET_StgRegTable_rR1	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rR1[1 + offsetof(StgRegTable, rR1)];$/;"	v
derivedConstantOFFSET_StgRegTable_rR10	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rR10[1 + offsetof(StgRegTable, rR10)];$/;"	v
derivedConstantOFFSET_StgRegTable_rR2	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rR2[1 + offsetof(StgRegTable, rR2)];$/;"	v
derivedConstantOFFSET_StgRegTable_rR3	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rR3[1 + offsetof(StgRegTable, rR3)];$/;"	v
derivedConstantOFFSET_StgRegTable_rR4	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rR4[1 + offsetof(StgRegTable, rR4)];$/;"	v
derivedConstantOFFSET_StgRegTable_rR5	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rR5[1 + offsetof(StgRegTable, rR5)];$/;"	v
derivedConstantOFFSET_StgRegTable_rR6	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rR6[1 + offsetof(StgRegTable, rR6)];$/;"	v
derivedConstantOFFSET_StgRegTable_rR7	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rR7[1 + offsetof(StgRegTable, rR7)];$/;"	v
derivedConstantOFFSET_StgRegTable_rR8	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rR8[1 + offsetof(StgRegTable, rR8)];$/;"	v
derivedConstantOFFSET_StgRegTable_rR9	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rR9[1 + offsetof(StgRegTable, rR9)];$/;"	v
derivedConstantOFFSET_StgRegTable_rRet	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rRet[1 + offsetof(StgRegTable, rRet)];$/;"	v
derivedConstantOFFSET_StgRegTable_rSp	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rSp[1 + offsetof(StgRegTable, rSp)];$/;"	v
derivedConstantOFFSET_StgRegTable_rSpLim	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rSpLim[1 + offsetof(StgRegTable, rSpLim)];$/;"	v
derivedConstantOFFSET_StgRegTable_rXMM1	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rXMM1[1 + offsetof(StgRegTable, rXMM1)];$/;"	v
derivedConstantOFFSET_StgRegTable_rXMM2	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rXMM2[1 + offsetof(StgRegTable, rXMM2)];$/;"	v
derivedConstantOFFSET_StgRegTable_rXMM3	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rXMM3[1 + offsetof(StgRegTable, rXMM3)];$/;"	v
derivedConstantOFFSET_StgRegTable_rXMM4	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rXMM4[1 + offsetof(StgRegTable, rXMM4)];$/;"	v
derivedConstantOFFSET_StgRegTable_rXMM5	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rXMM5[1 + offsetof(StgRegTable, rXMM5)];$/;"	v
derivedConstantOFFSET_StgRegTable_rXMM6	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rXMM6[1 + offsetof(StgRegTable, rXMM6)];$/;"	v
derivedConstantOFFSET_StgRegTable_rYMM1	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rYMM1[1 + offsetof(StgRegTable, rYMM1)];$/;"	v
derivedConstantOFFSET_StgRegTable_rYMM2	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rYMM2[1 + offsetof(StgRegTable, rYMM2)];$/;"	v
derivedConstantOFFSET_StgRegTable_rYMM3	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rYMM3[1 + offsetof(StgRegTable, rYMM3)];$/;"	v
derivedConstantOFFSET_StgRegTable_rYMM4	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rYMM4[1 + offsetof(StgRegTable, rYMM4)];$/;"	v
derivedConstantOFFSET_StgRegTable_rYMM5	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rYMM5[1 + offsetof(StgRegTable, rYMM5)];$/;"	v
derivedConstantOFFSET_StgRegTable_rYMM6	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rYMM6[1 + offsetof(StgRegTable, rYMM6)];$/;"	v
derivedConstantOFFSET_StgRegTable_rZMM1	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rZMM1[1 + offsetof(StgRegTable, rZMM1)];$/;"	v
derivedConstantOFFSET_StgRegTable_rZMM2	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rZMM2[1 + offsetof(StgRegTable, rZMM2)];$/;"	v
derivedConstantOFFSET_StgRegTable_rZMM3	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rZMM3[1 + offsetof(StgRegTable, rZMM3)];$/;"	v
derivedConstantOFFSET_StgRegTable_rZMM4	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rZMM4[1 + offsetof(StgRegTable, rZMM4)];$/;"	v
derivedConstantOFFSET_StgRegTable_rZMM5	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rZMM5[1 + offsetof(StgRegTable, rZMM5)];$/;"	v
derivedConstantOFFSET_StgRegTable_rZMM6	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgRegTable_rZMM6[1 + offsetof(StgRegTable, rZMM6)];$/;"	v
derivedConstantOFFSET_StgSmallMutArrPtrs_ptrs	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgSmallMutArrPtrs_ptrs[1 + offsetof(StgSmallMutArrPtrs, ptrs) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgStableName_sn	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgStableName_sn[1 + offsetof(StgStableName, sn) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgStack_dirty	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgStack_dirty[1 + offsetof(StgStack, dirty) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgStack_sp	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgStack_sp[1 + offsetof(StgStack, sp) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgStack_stack	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgStack_stack[1 + offsetof(StgStack, stack) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgStack_stack_size	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgStack_stack_size[1 + offsetof(StgStack, stack_size) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTRecHeader_enclosing_trec	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTRecHeader_enclosing_trec[1 + offsetof(StgTRecHeader, enclosing_trec) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTSO__link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTSO__link[1 + offsetof(StgTSO, _link) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTSO_alloc_limit	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTSO_alloc_limit[1 + offsetof(StgTSO, alloc_limit) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTSO_block_info	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTSO_block_info[1 + offsetof(StgTSO, block_info) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTSO_blocked_exceptions	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTSO_blocked_exceptions[1 + offsetof(StgTSO, blocked_exceptions) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTSO_bq	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTSO_bq[1 + offsetof(StgTSO, bq) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTSO_cap	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTSO_cap[1 + offsetof(StgTSO, cap) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTSO_cccs	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTSO_cccs[1 + offsetof(StgTSO, prof.cccs) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTSO_dirty	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTSO_dirty[1 + offsetof(StgTSO, dirty) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTSO_flags	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTSO_flags[1 + offsetof(StgTSO, flags) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTSO_global_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTSO_global_link[1 + offsetof(StgTSO, global_link) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTSO_id	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTSO_id[1 + offsetof(StgTSO, id) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTSO_saved_errno	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTSO_saved_errno[1 + offsetof(StgTSO, saved_errno) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTSO_stackobj	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTSO_stackobj[1 + offsetof(StgTSO, stackobj) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTSO_trec	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTSO_trec[1 + offsetof(StgTSO, trec) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTSO_what_next	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTSO_what_next[1 + offsetof(StgTSO, what_next) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTSO_why_blocked	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTSO_why_blocked[1 + offsetof(StgTSO, why_blocked) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTVarWatchQueue_closure	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTVarWatchQueue_closure[1 + offsetof(StgTVarWatchQueue, closure) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTVarWatchQueue_next_queue_entry	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTVarWatchQueue_next_queue_entry[1 + offsetof(StgTVarWatchQueue, next_queue_entry) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTVarWatchQueue_prev_queue_entry	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTVarWatchQueue_prev_queue_entry[1 + offsetof(StgTVarWatchQueue, prev_queue_entry) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTVar_current_value	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTVar_current_value[1 + offsetof(StgTVar, current_value) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTVar_first_watch_queue_entry	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTVar_first_watch_queue_entry[1 + offsetof(StgTVar, first_watch_queue_entry) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgTVar_num_updates	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgTVar_num_updates[1 + offsetof(StgTVar, num_updates) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgUpdateFrame_updatee	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgUpdateFrame_updatee[1 + offsetof(StgUpdateFrame, updatee) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgWeak_cfinalizers	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgWeak_cfinalizers[1 + offsetof(StgWeak, cfinalizers) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgWeak_finalizer	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgWeak_finalizer[1 + offsetof(StgWeak, finalizer) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgWeak_key	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgWeak_key[1 + offsetof(StgWeak, key) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgWeak_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgWeak_link[1 + offsetof(StgWeak, link) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_StgWeak_value	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_StgWeak_value[1 + offsetof(StgWeak, value) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantOFFSET_bdescr_blocks	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_bdescr_blocks[1 + offsetof(bdescr, blocks)];$/;"	v
derivedConstantOFFSET_bdescr_flags	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_bdescr_flags[1 + offsetof(bdescr, flags)];$/;"	v
derivedConstantOFFSET_bdescr_free	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_bdescr_free[1 + offsetof(bdescr, free)];$/;"	v
derivedConstantOFFSET_bdescr_gen_no	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_bdescr_gen_no[1 + offsetof(bdescr, gen_no)];$/;"	v
derivedConstantOFFSET_bdescr_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_bdescr_link[1 + offsetof(bdescr, link)];$/;"	v
derivedConstantOFFSET_bdescr_start	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_bdescr_start[1 + offsetof(bdescr, start)];$/;"	v
derivedConstantOFFSET_generation_n_new_large_words	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_generation_n_new_large_words[1 + offsetof(generation, n_new_large_words)];$/;"	v
derivedConstantOFFSET_generation_weak_ptr_list	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_generation_weak_ptr_list[1 + offsetof(generation, weak_ptr_list)];$/;"	v
derivedConstantOFFSET_snEntry_addr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_snEntry_addr[1 + offsetof(snEntry, addr)];$/;"	v
derivedConstantOFFSET_snEntry_sn_obj	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_snEntry_sn_obj[1 + offsetof(snEntry, sn_obj)];$/;"	v
derivedConstantOFFSET_spEntry_addr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_spEntry_addr[1 + offsetof(spEntry, addr)];$/;"	v
derivedConstantOFFSET_stgEagerBlackholeInfoMag	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_stgEagerBlackholeInfoMag[1 + ((intptr_t)(FUN_OFFSET(stgEagerBlackholeInfo)) >= 0 ? (FUN_OFFSET(stgEagerBlackholeInfo)) : -(FUN_OFFSET(stgEagerBlackholeInfo)))];$/;"	v
derivedConstantOFFSET_stgEagerBlackholeInfoSig	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_stgEagerBlackholeInfoSig[(intptr_t)(FUN_OFFSET(stgEagerBlackholeInfo)) >= 0 ? 3 : 1];$/;"	v
derivedConstantOFFSET_stgGCEnter1Mag	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_stgGCEnter1Mag[1 + ((intptr_t)(FUN_OFFSET(stgGCEnter1)) >= 0 ? (FUN_OFFSET(stgGCEnter1)) : -(FUN_OFFSET(stgGCEnter1)))];$/;"	v
derivedConstantOFFSET_stgGCEnter1Sig	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_stgGCEnter1Sig[(intptr_t)(FUN_OFFSET(stgGCEnter1)) >= 0 ? 3 : 1];$/;"	v
derivedConstantOFFSET_stgGCFunMag	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_stgGCFunMag[1 + ((intptr_t)(FUN_OFFSET(stgGCFun)) >= 0 ? (FUN_OFFSET(stgGCFun)) : -(FUN_OFFSET(stgGCFun)))];$/;"	v
derivedConstantOFFSET_stgGCFunSig	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantOFFSET_stgGCFunSig[(intptr_t)(FUN_OFFSET(stgGCFun)) >= 0 ? 3 : 1];$/;"	v
derivedConstantPROF_HDR_SIZE	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantPROF_HDR_SIZE[1 + sizeofW(StgProfHeader)];$/;"	v
derivedConstantREP_Capability_context_switch	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_Capability_context_switch[1 + FIELD_SIZE(Capability, context_switch)];$/;"	v
derivedConstantREP_Capability_interrupt	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_Capability_interrupt[1 + FIELD_SIZE(Capability, interrupt)];$/;"	v
derivedConstantREP_Capability_mut_lists	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_Capability_mut_lists[1 + FIELD_SIZE(Capability, mut_lists)];$/;"	v
derivedConstantREP_Capability_no	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_Capability_no[1 + FIELD_SIZE(Capability, no)];$/;"	v
derivedConstantREP_Capability_sparks	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_Capability_sparks[1 + FIELD_SIZE(Capability, sparks)];$/;"	v
derivedConstantREP_Capability_total_allocated	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_Capability_total_allocated[1 + FIELD_SIZE(Capability, total_allocated)];$/;"	v
derivedConstantREP_Capability_weak_ptr_list_hd	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_Capability_weak_ptr_list_hd[1 + FIELD_SIZE(Capability, weak_ptr_list_hd)];$/;"	v
derivedConstantREP_Capability_weak_ptr_list_tl	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_Capability_weak_ptr_list_tl[1 + FIELD_SIZE(Capability, weak_ptr_list_tl)];$/;"	v
derivedConstantREP_CostCentreStack_ccsID	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_CostCentreStack_ccsID[1 + FIELD_SIZE(CostCentreStack, ccsID)];$/;"	v
derivedConstantREP_CostCentreStack_mem_alloc	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_CostCentreStack_mem_alloc[1 + FIELD_SIZE(CostCentreStack, mem_alloc)];$/;"	v
derivedConstantREP_CostCentreStack_prevStack	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_CostCentreStack_prevStack[1 + FIELD_SIZE(CostCentreStack, prevStack)];$/;"	v
derivedConstantREP_CostCentreStack_scc_count	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_CostCentreStack_scc_count[1 + FIELD_SIZE(CostCentreStack, scc_count)];$/;"	v
derivedConstantREP_CostCentre_ccID	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_CostCentre_ccID[1 + FIELD_SIZE(CostCentre, ccID)];$/;"	v
derivedConstantREP_CostCentre_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_CostCentre_link[1 + FIELD_SIZE(CostCentre, link)];$/;"	v
derivedConstantREP_MessageBlackHole_bh	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_MessageBlackHole_bh[1 + FIELD_SIZE(MessageBlackHole, bh)];$/;"	v
derivedConstantREP_MessageBlackHole_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_MessageBlackHole_link[1 + FIELD_SIZE(MessageBlackHole, link)];$/;"	v
derivedConstantREP_MessageBlackHole_tso	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_MessageBlackHole_tso[1 + FIELD_SIZE(MessageBlackHole, tso)];$/;"	v
derivedConstantREP_RtsFlags_DebugFlags_apply	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_RtsFlags_DebugFlags_apply[1 + FIELD_SIZE(RTS_FLAGS, DebugFlags.apply)];$/;"	v
derivedConstantREP_RtsFlags_DebugFlags_sanity	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_RtsFlags_DebugFlags_sanity[1 + FIELD_SIZE(RTS_FLAGS, DebugFlags.sanity)];$/;"	v
derivedConstantREP_RtsFlags_DebugFlags_weak	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_RtsFlags_DebugFlags_weak[1 + FIELD_SIZE(RTS_FLAGS, DebugFlags.weak)];$/;"	v
derivedConstantREP_RtsFlags_GcFlags_initialStkSize	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_RtsFlags_GcFlags_initialStkSize[1 + FIELD_SIZE(RTS_FLAGS, GcFlags.initialStkSize)];$/;"	v
derivedConstantREP_RtsFlags_MiscFlags_tickInterval	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_RtsFlags_MiscFlags_tickInterval[1 + FIELD_SIZE(RTS_FLAGS, MiscFlags.tickInterval)];$/;"	v
derivedConstantREP_RtsFlags_ProfFlags_showCCSOnException	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_RtsFlags_ProfFlags_showCCSOnException[1 + FIELD_SIZE(RTS_FLAGS, ProfFlags.showCCSOnException)];$/;"	v
derivedConstantREP_StgAP_STACK_size	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgAP_STACK_size[1 + FIELD_SIZE(StgAP_STACK, size)];$/;"	v
derivedConstantREP_StgAP_n_args	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgAP_n_args[1 + FIELD_SIZE(StgAP, n_args)];$/;"	v
derivedConstantREP_StgArrBytes_bytes	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgArrBytes_bytes[1 + FIELD_SIZE(StgArrBytes, bytes)];$/;"	v
derivedConstantREP_StgAtomicallyFrame_code	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgAtomicallyFrame_code[1 + FIELD_SIZE(StgAtomicallyFrame, code)];$/;"	v
derivedConstantREP_StgAtomicallyFrame_result	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgAtomicallyFrame_result[1 + FIELD_SIZE(StgAtomicallyFrame, result)];$/;"	v
derivedConstantREP_StgBCO_arity	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgBCO_arity[1 + FIELD_SIZE(StgBCO, arity)];$/;"	v
derivedConstantREP_StgBCO_instrs	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgBCO_instrs[1 + FIELD_SIZE(StgBCO, instrs)];$/;"	v
derivedConstantREP_StgBCO_literals	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgBCO_literals[1 + FIELD_SIZE(StgBCO, literals)];$/;"	v
derivedConstantREP_StgBCO_ptrs	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgBCO_ptrs[1 + FIELD_SIZE(StgBCO, ptrs)];$/;"	v
derivedConstantREP_StgBCO_size	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgBCO_size[1 + FIELD_SIZE(StgBCO, size)];$/;"	v
derivedConstantREP_StgBlockingQueue_bh	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgBlockingQueue_bh[1 + FIELD_SIZE(StgBlockingQueue, bh)];$/;"	v
derivedConstantREP_StgBlockingQueue_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgBlockingQueue_link[1 + FIELD_SIZE(StgBlockingQueue, link)];$/;"	v
derivedConstantREP_StgBlockingQueue_owner	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgBlockingQueue_owner[1 + FIELD_SIZE(StgBlockingQueue, owner)];$/;"	v
derivedConstantREP_StgBlockingQueue_queue	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgBlockingQueue_queue[1 + FIELD_SIZE(StgBlockingQueue, queue)];$/;"	v
derivedConstantREP_StgCFinalizerList_eptr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCFinalizerList_eptr[1 + FIELD_SIZE(StgCFinalizerList, eptr)];$/;"	v
derivedConstantREP_StgCFinalizerList_flag	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCFinalizerList_flag[1 + FIELD_SIZE(StgCFinalizerList, flag)];$/;"	v
derivedConstantREP_StgCFinalizerList_fptr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCFinalizerList_fptr[1 + FIELD_SIZE(StgCFinalizerList, fptr)];$/;"	v
derivedConstantREP_StgCFinalizerList_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCFinalizerList_link[1 + FIELD_SIZE(StgCFinalizerList, link)];$/;"	v
derivedConstantREP_StgCFinalizerList_ptr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCFinalizerList_ptr[1 + FIELD_SIZE(StgCFinalizerList, ptr)];$/;"	v
derivedConstantREP_StgCatchFrame_exceptions_blocked	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCatchFrame_exceptions_blocked[1 + FIELD_SIZE(StgCatchFrame, exceptions_blocked)];$/;"	v
derivedConstantREP_StgCatchFrame_handler	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCatchFrame_handler[1 + FIELD_SIZE(StgCatchFrame, handler)];$/;"	v
derivedConstantREP_StgCatchRetryFrame_alt_code	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCatchRetryFrame_alt_code[1 + FIELD_SIZE(StgCatchRetryFrame, alt_code)];$/;"	v
derivedConstantREP_StgCatchRetryFrame_first_code	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCatchRetryFrame_first_code[1 + FIELD_SIZE(StgCatchRetryFrame, first_code)];$/;"	v
derivedConstantREP_StgCatchRetryFrame_running_alt_code	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCatchRetryFrame_running_alt_code[1 + FIELD_SIZE(StgCatchRetryFrame, running_alt_code)];$/;"	v
derivedConstantREP_StgCatchSTMFrame_code	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCatchSTMFrame_code[1 + FIELD_SIZE(StgCatchSTMFrame, code)];$/;"	v
derivedConstantREP_StgCatchSTMFrame_handler	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCatchSTMFrame_handler[1 + FIELD_SIZE(StgCatchSTMFrame, handler)];$/;"	v
derivedConstantREP_StgCompactNFDataBlock_next	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCompactNFDataBlock_next[1 + FIELD_SIZE(StgCompactNFDataBlock, next)];$/;"	v
derivedConstantREP_StgCompactNFDataBlock_owner	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCompactNFDataBlock_owner[1 + FIELD_SIZE(StgCompactNFDataBlock, owner)];$/;"	v
derivedConstantREP_StgCompactNFDataBlock_self	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCompactNFDataBlock_self[1 + FIELD_SIZE(StgCompactNFDataBlock, self)];$/;"	v
derivedConstantREP_StgCompactNFData_autoBlockW	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCompactNFData_autoBlockW[1 + FIELD_SIZE(StgCompactNFData, autoBlockW)];$/;"	v
derivedConstantREP_StgCompactNFData_hash	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCompactNFData_hash[1 + FIELD_SIZE(StgCompactNFData, hash)];$/;"	v
derivedConstantREP_StgCompactNFData_hp	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCompactNFData_hp[1 + FIELD_SIZE(StgCompactNFData, hp)];$/;"	v
derivedConstantREP_StgCompactNFData_hpLim	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCompactNFData_hpLim[1 + FIELD_SIZE(StgCompactNFData, hpLim)];$/;"	v
derivedConstantREP_StgCompactNFData_last	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCompactNFData_last[1 + FIELD_SIZE(StgCompactNFData, last)];$/;"	v
derivedConstantREP_StgCompactNFData_nursery	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCompactNFData_nursery[1 + FIELD_SIZE(StgCompactNFData, nursery)];$/;"	v
derivedConstantREP_StgCompactNFData_result	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCompactNFData_result[1 + FIELD_SIZE(StgCompactNFData, result)];$/;"	v
derivedConstantREP_StgCompactNFData_totalW	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgCompactNFData_totalW[1 + FIELD_SIZE(StgCompactNFData, totalW)];$/;"	v
derivedConstantREP_StgEntCounter_allocd	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgEntCounter_allocd[1 + FIELD_SIZE(StgEntCounter, allocd)];$/;"	v
derivedConstantREP_StgEntCounter_allocs	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgEntCounter_allocs[1 + FIELD_SIZE(StgEntCounter, allocs)];$/;"	v
derivedConstantREP_StgEntCounter_entry_count	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgEntCounter_entry_count[1 + FIELD_SIZE(StgEntCounter, entry_count)];$/;"	v
derivedConstantREP_StgEntCounter_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgEntCounter_link[1 + FIELD_SIZE(StgEntCounter, link)];$/;"	v
derivedConstantREP_StgEntCounter_registeredp	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgEntCounter_registeredp[1 + FIELD_SIZE(StgEntCounter, registeredp)];$/;"	v
derivedConstantREP_StgFunInfoExtraFwd_arity	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgFunInfoExtraFwd_arity[1 + FIELD_SIZE(StgFunInfoExtraFwd, arity)];$/;"	v
derivedConstantREP_StgFunInfoExtraFwd_bitmap	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgFunInfoExtraFwd_bitmap[1 + FIELD_SIZE(StgFunInfoExtraFwd, b.bitmap)];$/;"	v
derivedConstantREP_StgFunInfoExtraFwd_fun_type	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgFunInfoExtraFwd_fun_type[1 + FIELD_SIZE(StgFunInfoExtraFwd, fun_type)];$/;"	v
derivedConstantREP_StgFunInfoExtraFwd_slow_apply	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgFunInfoExtraFwd_slow_apply[1 + FIELD_SIZE(StgFunInfoExtraFwd, slow_apply)];$/;"	v
derivedConstantREP_StgFunInfoExtraRev_arity	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgFunInfoExtraRev_arity[1 + FIELD_SIZE(StgFunInfoExtraRev, arity)];$/;"	v
derivedConstantREP_StgFunInfoExtraRev_bitmap	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgFunInfoExtraRev_bitmap[1 + FIELD_SIZE(StgFunInfoExtraRev, b.bitmap)];$/;"	v
derivedConstantREP_StgFunInfoExtraRev_bitmap_offset	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgFunInfoExtraRev_bitmap_offset[1 + FIELD_SIZE(StgFunInfoExtraRev, b.bitmap_offset)];$/;"	v
derivedConstantREP_StgFunInfoExtraRev_fun_type	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgFunInfoExtraRev_fun_type[1 + FIELD_SIZE(StgFunInfoExtraRev, fun_type)];$/;"	v
derivedConstantREP_StgFunInfoExtraRev_slow_apply_offset	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgFunInfoExtraRev_slow_apply_offset[1 + FIELD_SIZE(StgFunInfoExtraRev, slow_apply_offset)];$/;"	v
derivedConstantREP_StgHeader_ccs	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgHeader_ccs[1 + FIELD_SIZE(StgHeader, prof.ccs)];$/;"	v
derivedConstantREP_StgHeader_info	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgHeader_info[1 + FIELD_SIZE(StgHeader, info)];$/;"	v
derivedConstantREP_StgHeader_ldvw	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgHeader_ldvw[1 + FIELD_SIZE(StgHeader, prof.hp.ldvw)];$/;"	v
derivedConstantREP_StgLargeBitmap_size	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgLargeBitmap_size[1 + FIELD_SIZE(StgLargeBitmap, size)];$/;"	v
derivedConstantREP_StgMVarTSOQueue_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgMVarTSOQueue_link[1 + FIELD_SIZE(StgMVarTSOQueue, link)];$/;"	v
derivedConstantREP_StgMVarTSOQueue_tso	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgMVarTSOQueue_tso[1 + FIELD_SIZE(StgMVarTSOQueue, tso)];$/;"	v
derivedConstantREP_StgMVar_head	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgMVar_head[1 + FIELD_SIZE(StgMVar, head)];$/;"	v
derivedConstantREP_StgMVar_tail	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgMVar_tail[1 + FIELD_SIZE(StgMVar, tail)];$/;"	v
derivedConstantREP_StgMVar_value	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgMVar_value[1 + FIELD_SIZE(StgMVar, value)];$/;"	v
derivedConstantREP_StgMutArrPtrs_ptrs	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgMutArrPtrs_ptrs[1 + FIELD_SIZE(StgMutArrPtrs, ptrs)];$/;"	v
derivedConstantREP_StgMutArrPtrs_size	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgMutArrPtrs_size[1 + FIELD_SIZE(StgMutArrPtrs, size)];$/;"	v
derivedConstantREP_StgMutVar_var	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgMutVar_var[1 + FIELD_SIZE(StgMutVar, var)];$/;"	v
derivedConstantREP_StgPAP_arity	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgPAP_arity[1 + FIELD_SIZE(StgPAP, arity)];$/;"	v
derivedConstantREP_StgPAP_n_args	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgPAP_n_args[1 + FIELD_SIZE(StgPAP, n_args)];$/;"	v
derivedConstantREP_StgRegTable_rNursery	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgRegTable_rNursery[1 + FIELD_SIZE(StgRegTable, rNursery)];$/;"	v
derivedConstantREP_StgRegTable_rRet	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgRegTable_rRet[1 + FIELD_SIZE(StgRegTable, rRet)];$/;"	v
derivedConstantREP_StgSmallMutArrPtrs_ptrs	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgSmallMutArrPtrs_ptrs[1 + FIELD_SIZE(StgSmallMutArrPtrs, ptrs)];$/;"	v
derivedConstantREP_StgStableName_sn	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgStableName_sn[1 + FIELD_SIZE(StgStableName, sn)];$/;"	v
derivedConstantREP_StgStack_dirty	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgStack_dirty[1 + FIELD_SIZE(StgStack, dirty)];$/;"	v
derivedConstantREP_StgStack_sp	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgStack_sp[1 + FIELD_SIZE(StgStack, sp)];$/;"	v
derivedConstantREP_StgStack_stack_size	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgStack_stack_size[1 + FIELD_SIZE(StgStack, stack_size)];$/;"	v
derivedConstantREP_StgTRecHeader_enclosing_trec	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTRecHeader_enclosing_trec[1 + FIELD_SIZE(StgTRecHeader, enclosing_trec)];$/;"	v
derivedConstantREP_StgTSO__link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTSO__link[1 + FIELD_SIZE(StgTSO, _link)];$/;"	v
derivedConstantREP_StgTSO_alloc_limit	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTSO_alloc_limit[1 + FIELD_SIZE(StgTSO, alloc_limit)];$/;"	v
derivedConstantREP_StgTSO_block_info	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTSO_block_info[1 + FIELD_SIZE(StgTSO, block_info)];$/;"	v
derivedConstantREP_StgTSO_blocked_exceptions	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTSO_blocked_exceptions[1 + FIELD_SIZE(StgTSO, blocked_exceptions)];$/;"	v
derivedConstantREP_StgTSO_bq	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTSO_bq[1 + FIELD_SIZE(StgTSO, bq)];$/;"	v
derivedConstantREP_StgTSO_cap	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTSO_cap[1 + FIELD_SIZE(StgTSO, cap)];$/;"	v
derivedConstantREP_StgTSO_cccs	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTSO_cccs[1 + FIELD_SIZE(StgTSO, prof.cccs)];$/;"	v
derivedConstantREP_StgTSO_dirty	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTSO_dirty[1 + FIELD_SIZE(StgTSO, dirty)];$/;"	v
derivedConstantREP_StgTSO_flags	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTSO_flags[1 + FIELD_SIZE(StgTSO, flags)];$/;"	v
derivedConstantREP_StgTSO_global_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTSO_global_link[1 + FIELD_SIZE(StgTSO, global_link)];$/;"	v
derivedConstantREP_StgTSO_id	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTSO_id[1 + FIELD_SIZE(StgTSO, id)];$/;"	v
derivedConstantREP_StgTSO_saved_errno	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTSO_saved_errno[1 + FIELD_SIZE(StgTSO, saved_errno)];$/;"	v
derivedConstantREP_StgTSO_stackobj	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTSO_stackobj[1 + FIELD_SIZE(StgTSO, stackobj)];$/;"	v
derivedConstantREP_StgTSO_trec	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTSO_trec[1 + FIELD_SIZE(StgTSO, trec)];$/;"	v
derivedConstantREP_StgTSO_what_next	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTSO_what_next[1 + FIELD_SIZE(StgTSO, what_next)];$/;"	v
derivedConstantREP_StgTSO_why_blocked	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTSO_why_blocked[1 + FIELD_SIZE(StgTSO, why_blocked)];$/;"	v
derivedConstantREP_StgTVarWatchQueue_closure	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTVarWatchQueue_closure[1 + FIELD_SIZE(StgTVarWatchQueue, closure)];$/;"	v
derivedConstantREP_StgTVarWatchQueue_next_queue_entry	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTVarWatchQueue_next_queue_entry[1 + FIELD_SIZE(StgTVarWatchQueue, next_queue_entry)];$/;"	v
derivedConstantREP_StgTVarWatchQueue_prev_queue_entry	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTVarWatchQueue_prev_queue_entry[1 + FIELD_SIZE(StgTVarWatchQueue, prev_queue_entry)];$/;"	v
derivedConstantREP_StgTVar_current_value	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTVar_current_value[1 + FIELD_SIZE(StgTVar, current_value)];$/;"	v
derivedConstantREP_StgTVar_first_watch_queue_entry	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTVar_first_watch_queue_entry[1 + FIELD_SIZE(StgTVar, first_watch_queue_entry)];$/;"	v
derivedConstantREP_StgTVar_num_updates	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgTVar_num_updates[1 + FIELD_SIZE(StgTVar, num_updates)];$/;"	v
derivedConstantREP_StgUpdateFrame_updatee	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgUpdateFrame_updatee[1 + FIELD_SIZE(StgUpdateFrame, updatee)];$/;"	v
derivedConstantREP_StgWeak_cfinalizers	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgWeak_cfinalizers[1 + FIELD_SIZE(StgWeak, cfinalizers)];$/;"	v
derivedConstantREP_StgWeak_finalizer	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgWeak_finalizer[1 + FIELD_SIZE(StgWeak, finalizer)];$/;"	v
derivedConstantREP_StgWeak_key	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgWeak_key[1 + FIELD_SIZE(StgWeak, key)];$/;"	v
derivedConstantREP_StgWeak_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgWeak_link[1 + FIELD_SIZE(StgWeak, link)];$/;"	v
derivedConstantREP_StgWeak_value	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_StgWeak_value[1 + FIELD_SIZE(StgWeak, value)];$/;"	v
derivedConstantREP_bdescr_blocks	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_bdescr_blocks[1 + FIELD_SIZE(bdescr, blocks)];$/;"	v
derivedConstantREP_bdescr_flags	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_bdescr_flags[1 + FIELD_SIZE(bdescr, flags)];$/;"	v
derivedConstantREP_bdescr_free	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_bdescr_free[1 + FIELD_SIZE(bdescr, free)];$/;"	v
derivedConstantREP_bdescr_gen_no	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_bdescr_gen_no[1 + FIELD_SIZE(bdescr, gen_no)];$/;"	v
derivedConstantREP_bdescr_link	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_bdescr_link[1 + FIELD_SIZE(bdescr, link)];$/;"	v
derivedConstantREP_bdescr_start	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_bdescr_start[1 + FIELD_SIZE(bdescr, start)];$/;"	v
derivedConstantREP_generation_n_new_large_words	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_generation_n_new_large_words[1 + FIELD_SIZE(generation, n_new_large_words)];$/;"	v
derivedConstantREP_generation_weak_ptr_list	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_generation_weak_ptr_list[1 + FIELD_SIZE(generation, weak_ptr_list)];$/;"	v
derivedConstantREP_snEntry_addr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_snEntry_addr[1 + FIELD_SIZE(snEntry, addr)];$/;"	v
derivedConstantREP_snEntry_sn_obj	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_snEntry_sn_obj[1 + FIELD_SIZE(snEntry, sn_obj)];$/;"	v
derivedConstantREP_spEntry_addr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantREP_spEntry_addr[1 + FIELD_SIZE(spEntry, addr)];$/;"	v
derivedConstantRESERVED_C_STACK_BYTES	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantRESERVED_C_STACK_BYTES[1 + RESERVED_C_STACK_BYTES];$/;"	v
derivedConstantRESERVED_STACK_WORDS	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantRESERVED_STACK_WORDS[1 + RESERVED_STACK_WORDS];$/;"	v
derivedConstantSIZEOF_CostCentreStack	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_CostCentreStack[1 + TYPE_SIZE(CostCentreStack)];$/;"	v
derivedConstantSIZEOF_MessageBlackHole	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_MessageBlackHole[1 + TYPE_SIZE(MessageBlackHole) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_MessageBlackHole_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_MessageBlackHole_NoHdr[1 + TYPE_SIZE(MessageBlackHole) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgAP	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgAP[1 + TYPE_SIZE(StgAP) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgAP_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgAP_NoHdr[1 + TYPE_SIZE(StgAP) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgAP_NoThunkHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgAP_NoThunkHdr[1 + TYPE_SIZE(StgAP) - TYPE_SIZE(StgThunkHeader)];$/;"	v
derivedConstantSIZEOF_StgAP_STACK	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgAP_STACK[1 + TYPE_SIZE(StgAP_STACK) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgAP_STACK_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgAP_STACK_NoHdr[1 + TYPE_SIZE(StgAP_STACK) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgAP_STACK_NoThunkHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgAP_STACK_NoThunkHdr[1 + TYPE_SIZE(StgAP_STACK) - TYPE_SIZE(StgThunkHeader)];$/;"	v
derivedConstantSIZEOF_StgArrBytes	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgArrBytes[1 + TYPE_SIZE(StgArrBytes) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgArrBytes_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgArrBytes_NoHdr[1 + TYPE_SIZE(StgArrBytes) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgAtomicallyFrame	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgAtomicallyFrame[1 + TYPE_SIZE(StgAtomicallyFrame) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgAtomicallyFrame_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgAtomicallyFrame_NoHdr[1 + TYPE_SIZE(StgAtomicallyFrame) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgBCO	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgBCO[1 + TYPE_SIZE(StgBCO) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgBCO_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgBCO_NoHdr[1 + TYPE_SIZE(StgBCO) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgBlockingQueue	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgBlockingQueue[1 + TYPE_SIZE(StgBlockingQueue) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgBlockingQueue_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgBlockingQueue_NoHdr[1 + TYPE_SIZE(StgBlockingQueue) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgCFinalizerList	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgCFinalizerList[1 + TYPE_SIZE(StgCFinalizerList) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgCFinalizerList_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgCFinalizerList_NoHdr[1 + TYPE_SIZE(StgCFinalizerList) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgCatchFrame	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgCatchFrame[1 + TYPE_SIZE(StgCatchFrame) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgCatchFrame_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgCatchFrame_NoHdr[1 + TYPE_SIZE(StgCatchFrame) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgCatchRetryFrame	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgCatchRetryFrame[1 + TYPE_SIZE(StgCatchRetryFrame) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgCatchRetryFrame_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgCatchRetryFrame_NoHdr[1 + TYPE_SIZE(StgCatchRetryFrame) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgCatchSTMFrame	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgCatchSTMFrame[1 + TYPE_SIZE(StgCatchSTMFrame) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgCatchSTMFrame_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgCatchSTMFrame_NoHdr[1 + TYPE_SIZE(StgCatchSTMFrame) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgCompactNFData	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgCompactNFData[1 + TYPE_SIZE(StgCompactNFData) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgCompactNFDataBlock	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgCompactNFDataBlock[1 + TYPE_SIZE(StgCompactNFDataBlock)];$/;"	v
derivedConstantSIZEOF_StgCompactNFData_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgCompactNFData_NoHdr[1 + TYPE_SIZE(StgCompactNFData) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgFunInfoExtraFwd	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgFunInfoExtraFwd[1 + TYPE_SIZE(StgFunInfoExtraFwd)];$/;"	v
derivedConstantSIZEOF_StgFunInfoExtraRev	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgFunInfoExtraRev[1 + TYPE_SIZE(StgFunInfoExtraRev)];$/;"	v
derivedConstantSIZEOF_StgMVar	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgMVar[1 + TYPE_SIZE(StgMVar) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgMVarTSOQueue	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgMVarTSOQueue[1 + TYPE_SIZE(StgMVarTSOQueue) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgMVarTSOQueue_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgMVarTSOQueue_NoHdr[1 + TYPE_SIZE(StgMVarTSOQueue) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgMVar_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgMVar_NoHdr[1 + TYPE_SIZE(StgMVar) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgMutArrPtrs	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgMutArrPtrs[1 + TYPE_SIZE(StgMutArrPtrs) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgMutArrPtrs_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgMutArrPtrs_NoHdr[1 + TYPE_SIZE(StgMutArrPtrs) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgMutVar	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgMutVar[1 + TYPE_SIZE(StgMutVar) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgMutVar_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgMutVar_NoHdr[1 + TYPE_SIZE(StgMutVar) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgPAP	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgPAP[1 + TYPE_SIZE(StgPAP) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgPAP_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgPAP_NoHdr[1 + TYPE_SIZE(StgPAP) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgSMPThunkHeader	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgSMPThunkHeader[1 + TYPE_SIZE(StgSMPThunkHeader)];$/;"	v
derivedConstantSIZEOF_StgSelector	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgSelector[1 + TYPE_SIZE(StgSelector) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgSelector_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgSelector_NoHdr[1 + TYPE_SIZE(StgSelector) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgSelector_NoThunkHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgSelector_NoThunkHdr[1 + TYPE_SIZE(StgSelector) - TYPE_SIZE(StgThunkHeader)];$/;"	v
derivedConstantSIZEOF_StgSmallMutArrPtrs	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgSmallMutArrPtrs[1 + TYPE_SIZE(StgSmallMutArrPtrs) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgSmallMutArrPtrs_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgSmallMutArrPtrs_NoHdr[1 + TYPE_SIZE(StgSmallMutArrPtrs) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgStableName	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgStableName[1 + TYPE_SIZE(StgStableName) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgStableName_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgStableName_NoHdr[1 + TYPE_SIZE(StgStableName) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgStopFrame	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgStopFrame[1 + TYPE_SIZE(StgStopFrame) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgStopFrame_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgStopFrame_NoHdr[1 + TYPE_SIZE(StgStopFrame) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgTSOProfInfo	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgTSOProfInfo[1 + TYPE_SIZE(StgTSOProfInfo)];$/;"	v
derivedConstantSIZEOF_StgTVar	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgTVar[1 + TYPE_SIZE(StgTVar) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgTVar_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgTVar_NoHdr[1 + TYPE_SIZE(StgTVar) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgUpdateFrame	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgUpdateFrame[1 + TYPE_SIZE(StgUpdateFrame) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgUpdateFrame_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgUpdateFrame_NoHdr[1 + TYPE_SIZE(StgUpdateFrame) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgWeak	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgWeak[1 + TYPE_SIZE(StgWeak) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_StgWeak_NoHdr	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_StgWeak_NoHdr[1 + TYPE_SIZE(StgWeak) - TYPE_SIZE(StgHeader)];$/;"	v
derivedConstantSIZEOF_generation	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_generation[1 + TYPE_SIZE(generation)];$/;"	v
derivedConstantSIZEOF_snEntry	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_snEntry[1 + TYPE_SIZE(snEntry)];$/;"	v
derivedConstantSIZEOF_spEntry	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSIZEOF_spEntry[1 + TYPE_SIZE(spEntry)];$/;"	v
derivedConstantSTD_HDR_SIZE	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantSTD_HDR_SIZE[1 + sizeofW(StgHeader) - sizeofW(StgProfHeader)];$/;"	v
derivedConstantTAG_BITS	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantTAG_BITS[1 + TAG_BITS];$/;"	v
derivedConstantTICKY_BIN_COUNT	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantTICKY_BIN_COUNT[1 + TICKY_BIN_COUNT];$/;"	v
derivedConstantWORDS_BIGENDIAN	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantWORDS_BIGENDIAN[1];$/;"	v
derivedConstantWORDS_BIGENDIAN	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantWORDS_BIGENDIAN[2];$/;"	v
derivedConstantWORD_SIZE	includes/dist-derivedconstants/header/tmp.c	/^char derivedConstantWORD_SIZE[1 + SIZEOF_HSWORD];$/;"	v
desc	rts/eventlog/EventLog.c	/^  char *desc;     \/\/ Description$/;"	m	struct:_EventType	file:
desired_size	rts/Pool.c	/^    uint32_t desired_size;$/;"	m	struct:Pool_	file:
destroyCallbackQueue	testsuite/tests/concurrent/should_run/hs_try_putmvar003_c.c	/^void destroyCallbackQueue(struct callback_queue *q)$/;"	f
destroy_mspace	libffi/build/src/dlmalloc.c	/^size_t destroy_mspace(mspace msp) {$/;"	f
dev_zero_fd	libffi/build/src/dlmalloc.c	/^static int dev_zero_fd = -1; \/* Cached file descriptor for \/dev\/zero. *\/$/;"	v	file:
device	rts/FileLock.c	/^    StgWord64 device;$/;"	m	struct:__anon36	file:
dflag	utils/hp2ps/Main.c	/^static boolish dflag = 0;	\/* sort by standard deviation		*\/$/;"	v	file:
diagadr	nofib/real/fem/inC/fem.c	/^int diagadr[MAXDEGREES];$/;"	v
die	driver/utils/cwrapper.c	/^void die(const char *fmt, ...) {$/;"	f
die	driver/utils/dynwrapper.c	/^void die(char *fmt, ...) {$/;"	f
die	driver/utils/getLocation.c	/^static void die(char *msg) {$/;"	f	file:
digits	libraries/bytestring/cbits/itoa.c	/^static const char* digits = "0123456789abcdef";$/;"	v	file:
dir	libffi/build/src/x86/ffi.c	/^  int dir;		\/* parameter growth direction *\/$/;"	m	struct:abi_params	file:
dir	rts/Hash.c	/^    HashList **dir[HDIRSIZE];   \/* Directory of segments *\/$/;"	m	struct:hashtable	file:
dirent	utils/lndir/lndir.c	67;"	d	file:
dirty_MUT_VAR	rts/sm/Storage.c	/^dirty_MUT_VAR(StgRegTable *reg, StgMutVar *mvar, StgClosure *old)$/;"	f
dirty_MVAR	rts/sm/Storage.c	/^dirty_MVAR(StgRegTable *reg, StgClosure *p, StgClosure *old_val)$/;"	f
dirty_STACK	rts/sm/Storage.c	/^dirty_STACK (Capability *cap, StgStack *stack)$/;"	f
dirty_TSO	rts/sm/Storage.c	/^dirty_TSO (Capability *cap, StgTSO *tso)$/;"	f
dirty_TVAR	rts/sm/Storage.c	/^dirty_TVAR(Capability *cap, StgTVar *p,$/;"	f
disInstr	rts/Disassembler.c	/^disInstr ( StgBCO *bco, int pc )$/;"	f
disable_contiguous	libffi/build/src/dlmalloc.c	2135;"	d	file:
disable_lock	libffi/build/src/dlmalloc.c	2128;"	d	file:
disable_mmap	libffi/build/src/dlmalloc.c	2132;"	d	file:
disassemble	rts/Disassembler.c	/^void disassemble( StgBCO *bco )$/;"	f
discardTasksExcept	rts/Task.c	/^discardTasksExcept (Task *keep)$/;"	f
discover_homogeneous_aggregate	libffi/build/src/powerpc/ffi_linux64.c	/^discover_homogeneous_aggregate (const ffi_type *t, unsigned int *elnum)$/;"	f	file:
displacement	nofib/real/fem/inC/displacement.c	/^displacement() {$/;"	f
dl_mutex	rts/Linker.c	/^static Mutex dl_mutex; \/\/ mutex to protect dlopen\/dlerror critical section$/;"	v	file:
dl_prog_handle	rts/Linker.c	/^static void *dl_prog_handle;$/;"	v	file:
dlcalloc	libffi/build/src/dlmalloc.c	/^void* dlcalloc(size_t n_elements, size_t elem_size) {$/;"	f
dlcalloc	libffi/build/src/dlmalloc.c	658;"	d	file:
dlfree	libffi/build/src/dlmalloc.c	/^void dlfree(void* mem) {$/;"	f
dlfree	libffi/build/src/dlmalloc.c	659;"	d	file:
dlindependent_calloc	libffi/build/src/dlmalloc.c	/^void** dlindependent_calloc(size_t n_elements, size_t elem_size,$/;"	f
dlindependent_calloc	libffi/build/src/dlmalloc.c	672;"	d	file:
dlindependent_comalloc	libffi/build/src/dlmalloc.c	/^void** dlindependent_comalloc(size_t n_elements, size_t sizes[],$/;"	f
dlindependent_comalloc	libffi/build/src/dlmalloc.c	673;"	d	file:
dlmallinfo	libffi/build/src/dlmalloc.c	/^struct mallinfo dlmallinfo(void) {$/;"	f
dlmallinfo	libffi/build/src/dlmalloc.c	665;"	d	file:
dlmalloc	libffi/build/src/dlmalloc.c	/^void* dlmalloc(size_t bytes) {$/;"	f
dlmalloc	libffi/build/src/dlmalloc.c	660;"	d	file:
dlmalloc_footprint	libffi/build/src/dlmalloc.c	/^size_t dlmalloc_footprint(void) {$/;"	f
dlmalloc_footprint	libffi/build/src/dlmalloc.c	670;"	d	file:
dlmalloc_max_footprint	libffi/build/src/dlmalloc.c	/^size_t dlmalloc_max_footprint(void) {$/;"	f
dlmalloc_max_footprint	libffi/build/src/dlmalloc.c	671;"	d	file:
dlmalloc_stats	libffi/build/src/dlmalloc.c	/^void dlmalloc_stats() {$/;"	f
dlmalloc_stats	libffi/build/src/dlmalloc.c	668;"	d	file:
dlmalloc_trim	libffi/build/src/dlmalloc.c	/^int dlmalloc_trim(size_t pad) {$/;"	f
dlmalloc_trim	libffi/build/src/dlmalloc.c	667;"	d	file:
dlmalloc_usable_size	libffi/build/src/dlmalloc.c	/^size_t dlmalloc_usable_size(void* mem) {$/;"	f
dlmalloc_usable_size	libffi/build/src/dlmalloc.c	669;"	d	file:
dlmallopt	libffi/build/src/dlmalloc.c	/^int dlmallopt(int param_number, int value) {$/;"	f
dlmallopt	libffi/build/src/dlmalloc.c	666;"	d	file:
dlmemalign	libffi/build/src/dlmalloc.c	/^void* dlmemalign(size_t alignment, size_t bytes) {$/;"	f
dlmemalign	libffi/build/src/dlmalloc.c	661;"	d	file:
dlmmap	libffi/build/src/closures.c	/^dlmmap (void *start, size_t length, int prot,$/;"	f	file:
dlmmap_locked	libffi/build/src/closures.c	/^dlmmap_locked (void *start, size_t length, int prot, int flags, off_t offset)$/;"	f	file:
dlmunmap	libffi/build/src/closures.c	/^dlmunmap (void *start, size_t length)$/;"	f	file:
dlpvalloc	libffi/build/src/dlmalloc.c	/^void* dlpvalloc(size_t bytes) {$/;"	f
dlpvalloc	libffi/build/src/dlmalloc.c	664;"	d	file:
dlrealloc	libffi/build/src/dlmalloc.c	/^void* dlrealloc(void* oldmem, size_t bytes) {$/;"	f
dlrealloc	libffi/build/src/dlmalloc.c	662;"	d	file:
dlvalloc	libffi/build/src/dlmalloc.c	/^void* dlvalloc(size_t bytes) {$/;"	f
dlvalloc	libffi/build/src/dlmalloc.c	663;"	d	file:
doIdleGCWork	rts/sm/GC.c	/^bool doIdleGCWork(Capability *cap STG_UNUSED, bool all)$/;"	f
do_Elf_Rel_relocations	rts/linker/Elf.c	/^do_Elf_Rel_relocations ( ObjectCode* oc, char* ehdrC,$/;"	f	file:
do_Elf_Rela_relocations	rts/linker/Elf.c	/^do_Elf_Rela_relocations ( ObjectCode* oc, char* ehdrC,$/;"	f	file:
do_check_any_chunk	libffi/build/src/dlmalloc.c	/^static void do_check_any_chunk(mstate m, mchunkptr p) {$/;"	f	file:
do_check_free_chunk	libffi/build/src/dlmalloc.c	/^static void do_check_free_chunk(mstate m, mchunkptr p) {$/;"	f	file:
do_check_inuse_chunk	libffi/build/src/dlmalloc.c	/^static void do_check_inuse_chunk(mstate m, mchunkptr p) {$/;"	f	file:
do_check_malloc_state	libffi/build/src/dlmalloc.c	/^static void do_check_malloc_state(mstate m) {$/;"	f	file:
do_check_malloced_chunk	libffi/build/src/dlmalloc.c	/^static void do_check_malloced_chunk(mstate m, void* mem, size_t s) {$/;"	f	file:
do_check_mmapped_chunk	libffi/build/src/dlmalloc.c	/^static void do_check_mmapped_chunk(mstate m, mchunkptr p) {$/;"	f	file:
do_check_smallbin	libffi/build/src/dlmalloc.c	/^static void do_check_smallbin(mstate m, bindex_t i) {$/;"	f	file:
do_check_top_chunk	libffi/build/src/dlmalloc.c	/^static void do_check_top_chunk(mstate m, mchunkptr p) {$/;"	f	file:
do_check_tree	libffi/build/src/dlmalloc.c	/^static void do_check_tree(mstate m, tchunkptr t) {$/;"	f	file:
do_check_treebin	libffi/build/src/dlmalloc.c	/^static void do_check_treebin(mstate m, bindex_t i) {$/;"	f	file:
do_evacuate	rts/sm/Scav.c	/^static void do_evacuate(StgClosure **p, void *user STG_UNUSED)$/;"	f	file:
do_heap_prof_ticks	rts/Proftimer.c	/^static bool do_heap_prof_ticks = false;  \/\/ enable heap profiling ticks$/;"	v	file:
do_prof_ticks	rts/Proftimer.c	/^static bool do_prof_ticks = false;       \/\/ enable profiling ticks$/;"	v	file:
do_push_closure	rts/sm/NonMovingMark.c	/^do_push_closure (StgClosure **p, void *user)$/;"	f	file:
dodir	utils/lndir/lndir.c	/^dodir (fn, fs, ts, rel)$/;"	f
doingLDVProfiling	rts/ProfHeap.c	/^doingLDVProfiling( void )$/;"	f
doingRetainerProfiling	rts/ProfHeap.c	/^doingRetainerProfiling( void )$/;"	f
doit	libffi/build/testsuite/libffi.call/pyobjc-tc.c	/^int doit(int o, char* s, Point p, Rect r, int last)$/;"	f
done	testsuite/tests/rts/testwsdeque.c	/^StgWord done;$/;"	v
drag_total	rts/ProfHeap.c	/^            ssize_t drag_total;  \/\/ 'used at least once and waiting to die'$/;"	m	struct:_counter::__anon42::__anon43	file:
drag_total	rts/ProfHeap.c	/^    ssize_t    drag_total;$/;"	m	struct:__anon44	file:
dtraceUserMarkerWrapper	rts/Trace.c	/^void dtraceUserMarkerWrapper(Capability *cap, char *msg)$/;"	f
dtraceUserMsgWrapper	rts/Trace.c	/^void dtraceUserMsgWrapper(Capability *cap, char *msg)$/;"	f
dummy	testsuite/tests/ghci/prog014/dummy.c	/^void dummy() {$/;"	f
dummy2	testsuite/tests/ghci/prog014/dummy.c	/^void dummy2() {$/;"	f
dummyVar	libffi/build/testsuite/libffi.call/cls_pointer_stack.c	/^static	long dummyVar;$/;"	v	file:
dummy_fn	libffi/build/testsuite/libffi.call/err_bad_abi.c	/^dummy_fn(ffi_cif* cif __UNUSED__, void* resp __UNUSED__, $/;"	f	file:
dummy_func	libffi/build/testsuite/libffi.call/cls_pointer_stack.c	/^long dummy_func($/;"	f
dump	testsuite/tests/rts/testwsdeque.c	/^void dump(void)$/;"	f
dumpCensus	rts/ProfHeap.c	/^dumpCensus( Census *census )$/;"	f	file:
dumpCostCentresToEventLog	rts/Profiling.c	/^dumpCostCentresToEventLog(void)$/;"	f	file:
dv	libffi/build/src/dlmalloc.c	/^  mchunkptr  dv;$/;"	m	struct:malloc_state	file:
dvsize	libffi/build/src/dlmalloc.c	/^  size_t     dvsize;$/;"	m	struct:malloc_state	file:
dwfl	rts/Libdw.c	/^    Dwfl *dwfl;$/;"	m	struct:LibdwSession_	file:
dynCharSize	libraries/Cabal/cabal-testsuite/PackageTests/Regression/T5309/memoized-tcm/dynamicCharacterOperations.c	/^size_t dynCharSize(size_t alphSize, size_t numElems) { return 1; }$/;"	f
dyn_caf_list	rts/sm/Storage.c	/^StgIndStatic  *dyn_caf_list        = NULL;$/;"	v
e	libffi/build/testsuite/libffi.call/cls_19byte.c	/^  unsigned char e;$/;"	m	struct:cls_struct_19byte	file:
e	libffi/build/testsuite/libffi.call/cls_5_1_byte.c	/^  unsigned char e;$/;"	m	struct:cls_struct_5byte	file:
e	libffi/build/testsuite/libffi.call/cls_64byte.c	/^  double e;$/;"	m	struct:cls_struct_64byte	file:
e	libffi/build/testsuite/libffi.call/cls_6_1_byte.c	/^  unsigned char e;$/;"	m	struct:cls_struct_6byte	file:
e	libffi/build/testsuite/libffi.call/cls_7_1_byte.c	/^  unsigned char e;$/;"	m	struct:cls_struct_7byte	file:
e	libffi/build/testsuite/libffi.call/cls_align_longdouble_split.c	/^  long double e;$/;"	m	struct:cls_struct_align	file:
e	libffi/build/testsuite/libffi.call/cls_align_longdouble_split2.c	/^  long double e;$/;"	m	struct:cls_struct_align	file:
e	libffi/build/testsuite/libffi.call/cls_struct_va1.c	/^  unsigned e;$/;"	m	struct:large_tag	file:
e	libffi/build/testsuite/libffi.call/huge_struct.c	/^	uint32_t	e;$/;"	m	struct:BigStruct	file:
e	libffi/build/testsuite/libffi.call/nested_struct.c	/^  cls_struct_16byte2 e;$/;"	m	struct:cls_struct_combined	file:
e	libffi/build/testsuite/libffi.call/nested_struct1.c	/^  cls_struct_16byte2 e;$/;"	m	struct:cls_struct_combined	file:
e	libffi/build/testsuite/libffi.call/nested_struct10.c	/^  unsigned char e;$/;"	m	struct:C	file:
e	libffi/build/testsuite/libffi.call/nested_struct6.c	/^  unsigned char e;$/;"	m	struct:C	file:
e	libffi/build/testsuite/libffi.call/nested_struct8.c	/^  unsigned char e;$/;"	m	struct:C	file:
e	libffi/build/testsuite/libffi.call/nested_struct9.c	/^  unsigned char e;$/;"	m	struct:C	file:
e	libffi/build/testsuite/libffi.call/stret_large.c	/^	double e;$/;"	m	struct:struct_108byte	file:
e	libffi/build/testsuite/libffi.call/stret_large2.c	/^	double e;$/;"	m	struct:struct_116byte	file:
e	libffi/build/testsuite/libffi.call/stret_medium.c	/^	double e;$/;"	m	struct:struct_72byte	file:
e	libffi/build/testsuite/libffi.call/stret_medium2.c	/^	double e;$/;"	m	struct:struct_72byte	file:
e	libffi/build/testsuite/libffi.call/va_1.c	/^  unsigned e;$/;"	m	struct:large_tag	file:
e	libffi/build/testsuite/libffi.call/va_struct1.c	/^  unsigned e;$/;"	m	struct:large_tag	file:
e	libffi/build/testsuite/libffi.call/va_struct2.c	/^  unsigned e;$/;"	m	struct:large_tag	file:
e	libffi/build/testsuite/libffi.call/va_struct3.c	/^  unsigned e;$/;"	m	struct:large_tag	file:
e_coeffs	nofib/spectral/simple/simple.c	/^double e_coeffs[3][3] = {0.0, 0.1, 0.0,$/;"	v
e_poly	nofib/spectral/simple/simple.c	/^double *e_poly[4][5] = {&e_coeffs[0][0], &e_coeffs[0][0], &e_coeffs[0][0], &e_coeffs[0][0],$/;"	v
ea	nofib/real/fem/inC/fem.c	/^        float ea,ei; }     mat_info[MAXMATERIALS];$/;"	m	struct:__anon29	file:
ebp	libffi/build/src/x86/ffi.c	/^  void *ebp;		\/* 0 *\/$/;"	m	struct:call_frame	file:
ee	libffi/build/testsuite/libffi.call/huge_struct.c	/^	uint64_t	ee;$/;"	m	struct:BigStruct	file:
eflag	utils/hp2ps/Main.c	/^boolish eflag = 0;	\/* scaled EPSF 				*\/$/;"	v
egetc	utils/unlit/unlit.c	/^static int egetc(FILE *istream)$/;"	f	file:
ei	nofib/real/fem/inC/fem.c	/^        float ea,ei; }     mat_info[MAXMATERIALS];$/;"	m	struct:__anon29	file:
elem_info	nofib/real/fem/inC/fem.c	/^        int nl,nr,mat;  }  elem_info[MAXELEMENTS];$/;"	v	typeref:struct:__anon28
elf_shnum	rts/linker/Elf.c	/^static Elf_Word elf_shnum(Elf_Ehdr* ehdr)$/;"	f	file:
elf_shstrndx	rts/linker/Elf.c	/^static Elf_Word elf_shstrndx(Elf_Ehdr* ehdr)$/;"	f	file:
elforce	nofib/real/fem/inC/bar_2d.c	/^float  elforce(element)$/;"	f
elstiff	nofib/real/fem/inC/bar_2d.c	/^void elstiff(element,ke)$/;"	f
empty_handler	rts/posix/Signals.c	/^empty_handler (int sig STG_UNUSED)$/;"	f	file:
emutramp_enabled	libffi/build/src/closures.c	/^static int emutramp_enabled = -1;$/;"	v	file:
emutramp_enabled_check	libffi/build/src/closures.c	/^emutramp_enabled_check (void)$/;"	f	file:
enableTimingStats	compiler/cbits/cutils.c	/^enableTimingStats( void )       \/* called from the driver *\/$/;"	f
enableTimingStats	compiler/parser/cutils.c	/^enableTimingStats( void )       \/* called from the driver *\/$/;"	f
enable_lock	libffi/build/src/dlmalloc.c	2127;"	d	file:
enable_mmap	libffi/build/src/dlmalloc.c	2131;"	d	file:
enabled_capabilities	rts/Capability.c	/^uint32_t enabled_capabilities = 0;$/;"	v
encodeAddend	rts/linker/MachO.c	/^encodeAddend(ObjectCode * oc, Section * section,$/;"	f
encodeAddendAarch64	rts/linker/elf_reloc_aarch64.c	/^encodeAddendAarch64(Section * section, Elf_Rel * rel, int64_t addend) {$/;"	f
encode_one	nofib/real/compress2/inC/prefix_trees.c	/^struct ptree *encode_one (root,r,c,n)$/;"	f
end	nofib/shootout/reverse-complement/revcomp-c.c	/^   char *begin, *end;$/;"	m	struct:work_s	file:
end	rts/CheckUnload.c	/^    W_ end;$/;"	m	struct:__anon34	file:
endEventLogging	rts/eventlog/EventLog.c	/^endEventLogging(void)$/;"	f
endEventLogging	rts/eventlog/EventLog.c	/^void endEventLogging(void) {}$/;"	f
endHeapProfiling	rts/ProfHeap.c	/^endHeapProfiling(void)$/;"	f
endInCall	rts/Task.c	/^endInCall (Task *task)$/;"	f	file:
endProfiling	rts/Profiling.c	/^endProfiling ( void )$/;"	f
endRetainerProfiling	rts/RetainerProfile.c	/^endRetainerProfiling( void )$/;"	f
endTracing	rts/Trace.c	/^void endTracing (void)$/;"	f
end_exit_cpu	rts/Stats.c	/^    end_exit_cpu,   end_exit_elapsed;$/;"	v	file:
end_exit_elapsed	rts/Stats.c	/^    end_exit_cpu,   end_exit_elapsed;$/;"	v	file:
end_init_cpu	rts/Stats.c	/^    end_init_cpu,   end_init_elapsed,$/;"	v	file:
end_init_elapsed	rts/Stats.c	/^    end_init_cpu,   end_init_elapsed,$/;"	v	file:
endfile	utils/hp2ps/HpFile.c	/^int endfile;                                    \/* true at end of file  *\/$/;"	v
endian_adjust	libffi/build/src/ia64/ffi.c	/^endian_adjust (void *addr, size_t len)$/;"	f	file:
endsWithPath	rts/PathUtils.c	/^HsBool endsWithPath(pathchar* base, pathchar* str) {$/;"	f
energy_equation	nofib/spectral/simple/simple.c	/^double energy_equation(double epsilon_kl,double rho_kl,double theta_kl)$/;"	f
enlargeStableNameTable	rts/StableName.c	/^enlargeStableNameTable(void)$/;"	f	file:
enlargeStablePtrTable	rts/StablePtr.c	/^enlargeStablePtrTable(void)$/;"	f	file:
enqueueWorker	rts/Capability.c	/^enqueueWorker (Capability* cap USED_IF_THREADS)$/;"	f	file:
ensureRoomForEvent	rts/eventlog/EventLog.c	/^void ensureRoomForEvent(EventsBuf *eb, EventTypeNum tag)$/;"	f
ensureRoomForVariableEvent	rts/eventlog/EventLog.c	/^int ensureRoomForVariableEvent(EventsBuf *eb, StgWord16 size)$/;"	f
enterFunCCS	rts/Profiling.c	/^void enterFunCCS (StgRegTable *reg, CostCentreStack *ccsfn)$/;"	f
enterFunCurShorter	rts/Profiling.c	/^enterFunCurShorter (CostCentreStack *ccsapp, CostCentreStack *ccsfn, StgWord n)$/;"	f	file:
enterFunEqualStacks	rts/Profiling.c	/^enterFunEqualStacks (CostCentreStack *ccs0,$/;"	f	file:
entry_is_read_only	rts/STM.c	/^static StgBool entry_is_read_only(TRecEntry *e) {$/;"	f	file:
entry_is_update	rts/STM.c	/^static StgBool entry_is_update(TRecEntry *e) {$/;"	f	file:
env	rts/Adjustor.c	/^    void            *env;$/;"	m	struct:AdjustorStub	file:
eos	libffi/build/src/s390/ffi.c	/^  void *eos;$/;"	m	struct:call_frame	file:
epsfwidth	utils/hp2ps/Main.c	/^floatish epsfwidth;$/;"	v
epsilon	nofib/spectral/simple/simple.c	/^double epsilon[MAXSIZE][MAXSIZE],new_epsilon[MAXSIZE][MAXSIZE];$/;"	v
eq_thread	rts/Threads.c	/^eq_thread(StgPtr tso1, StgPtr tso2)$/;"	f
equivalent	utils/lndir/lndir.c	/^int equivalent(lname, rname)$/;"	f
era	rts/ProfHeap.c	/^unsigned int era;$/;"	v
errCode	rts/win32/AsyncIO.c	/^    HsInt          errCode;$/;"	m	struct:CompletedReq	file:
errentry	libraries/base/cbits/Win32Utils.c	/^struct errentry {$/;"	s	file:
errnocode	libraries/base/cbits/Win32Utils.c	/^        int errnocode;  \/* System V error code *\/$/;"	m	struct:errentry	file:
error	nofib/real/compress/lzw.c	/^void error (char *s)$/;"	f
errorBelch	rts/RtsMessages.c	/^errorBelch(const char*s, ...)$/;"	f
errorBelch2	libraries/base/cbits/PrelIOUtils.c	/^void errorBelch2(const char*s, char *t)$/;"	f
errorMsgFn	rts/RtsMessages.c	/^RtsMsgFunction *errorMsgFn           = rtsErrorMsgFn;$/;"	v
errorRtsOptsDisabled	rts/RtsFlags.c	/^static void errorRtsOptsDisabled(const char *s)$/;"	f	file:
errorUsage	rts/RtsFlags.c	/^static void errorUsage (void)$/;"	f	file:
errors	utils/unlit/unlit.c	/^static int errors = 0;   \/* count the number of errors reported              *\/$/;"	v	file:
errtable	libraries/base/cbits/Win32Utils.c	/^static struct errentry errtable[] = {$/;"	v	typeref:struct:errentry	file:
escape	utils/hp2ps/Key.c	/^escape(char *result, const char *name)$/;"	f	file:
escapeString	rts/ProfilerReportJson.c	/^static void escapeString(char const* str, char *out, int len)$/;"	f	file:
etNum	rts/eventlog/EventLog.c	/^  EventTypeNum etNum;  \/\/ Event Type number.$/;"	m	struct:_EventType	file:
evacuate	rts/sm/Evac.c	/^evacuate(StgClosure **p)$/;"	f
evacuate	rts/sm/Evac.c	33;"	d	file:
evacuate	rts/sm/Scav.c	73;"	d	file:
evacuate_BLACKHOLE	rts/sm/Evac.c	/^evacuate_BLACKHOLE(StgClosure **p)$/;"	f
evacuate_BLACKHOLE	rts/sm/Evac.c	34;"	d	file:
evacuate_BLACKHOLE	rts/sm/Scav.c	74;"	d	file:
evacuate_compact	rts/sm/Evac.c	/^evacuate_compact (StgPtr p)$/;"	f
evacuate_hash_entry	rts/sm/Scav.c	/^evacuate_hash_entry(MapHashData *dat, StgWord key, const void *value)$/;"	f	file:
evacuate_large	rts/sm/Evac.c	/^evacuate_large(StgPtr p)$/;"	f
evacuate_static_object	rts/sm/Evac.c	/^evacuate_static_object (StgClosure **link_field, StgClosure *q)$/;"	f
eval_thunk_selector	rts/sm/Evac.c	/^eval_thunk_selector (StgClosure **q, StgSelector *p, bool evac)$/;"	f	file:
eventBuf	rts/eventlog/EventLog.c	/^EventsBuf eventBuf; \/\/ an EventsBuf not associated with any Capability$/;"	v
eventBufMutex	rts/eventlog/EventLog.c	/^Mutex eventBufMutex; \/\/ protected by this mutex$/;"	v
eventLogStatus	rts/eventlog/EventLog.c	/^enum EventLogStatus eventLogStatus(void)$/;"	f
eventLogStatus	rts/eventlog/EventLog.c	/^eventLogStatus(void)$/;"	f
eventTypes	rts/eventlog/EventLog.c	/^EventType eventTypes[NUM_GHC_EVENT_TAGS];$/;"	v
event_buf	rts/win32/ThrIOManager.c	/^StgWord32 event_buf[EVENT_BUFSIZ];$/;"	v
event_buf_mutex	rts/win32/ThrIOManager.c	/^Mutex event_buf_mutex;$/;"	v
event_log_file	rts/eventlog/EventLogWriter.c	/^static FILE *event_log_file = NULL;$/;"	v	file:
event_log_pid	rts/eventlog/EventLogWriter.c	/^static pid_t event_log_pid = -1;$/;"	v	file:
event_log_writer	rts/eventlog/EventLog.c	/^static const EventLogWriter *event_log_writer = NULL;$/;"	v	file:
eventlog_enabled	rts/eventlog/EventLog.c	/^bool eventlog_enabled;$/;"	v
examine_argument	libffi/build/src/x86/ffi64.c	/^examine_argument (ffi_type *type, enum x86_64_reg_class classes[MAX_CLASSES],$/;"	f	file:
execToWritable	rts/sm/Storage.c	/^AdjustorWritable execToWritable(AdjustorExecutable exec)$/;"	f
exec_block	rts/sm/Storage.c	/^bdescr *exec_block;$/;"	v
exec_offset	libffi/build/src/dlmalloc.c	/^  ptrdiff_t    exec_offset;$/;"	m	struct:malloc_segment	file:
execfd	libffi/build/src/closures.c	/^static int execfd = -1;$/;"	v	file:
execsize	libffi/build/src/closures.c	/^static size_t execsize = 0;$/;"	v	file:
executable	rts/linker/M32Alloc.c	/^   bool executable;$/;"	m	struct:m32_allocator_t	file:
executeMessage	rts/Messages.c	/^executeMessage (Capability *cap, Message *m)$/;"	f
exitBySignal	rts/RtsStartup.c	/^exitBySignal(int sig)$/;"	f
exitFn	rts/RtsStartup.c	/^void (*exitFn)(int) = 0;$/;"	v
exitGlobalStore	rts/Globals.c	/^exitGlobalStore(void)$/;"	f
exitHashTable	rts/Hash.c	/^exitHashTable(void)$/;"	f
exitHpc	rts/Hpc.c	/^exitHpc(void) {$/;"	f
exitLinker	rts/Linker.c	/^exitLinker( void ) {$/;"	f
exitLinker_PEi386	rts/linker/PEi386.c	/^void exitLinker_PEi386()$/;"	f
exitScheduler	rts/Schedule.c	/^exitScheduler (bool wait_foreign USED_IF_THREADS)$/;"	f
exitStableNameTable	rts/StableName.c	/^exitStableNameTable(void)$/;"	f
exitStablePtrTable	rts/StablePtr.c	/^exitStablePtrTable(void)$/;"	f
exitStaticPtrTable	rts/StaticPtrTable.c	/^void exitStaticPtrTable() {$/;"	f
exitStorage	rts/sm/Storage.c	/^exitStorage (void)$/;"	f
exitTicker	rts/posix/itimer/Pthread.c	/^exitTicker (bool wait)$/;"	f
exitTicker	rts/posix/itimer/Setitimer.c	/^exitTicker (bool wait STG_UNUSED)$/;"	f
exitTicker	rts/posix/itimer/TimerCreate.c	/^exitTicker (bool wait STG_UNUSED)$/;"	f
exitTicker	rts/win32/Ticker.c	/^exitTicker (bool wait)$/;"	f
exitTimer	rts/Timer.c	/^exitTimer (bool wait)$/;"	f
exitTopHandler	rts/TopHandler.c	/^void exitTopHandler(void) {$/;"	f
exited	rts/posix/itimer/Pthread.c	/^static volatile bool exited = true;$/;"	v	file:
expand	rts/Hash.c	/^expand(HashTable *table, HashFunction f)$/;"	f
expect	rts/Hpc.c	/^static void expect(char c) {$/;"	f	file:
expectString	rts/Hpc.c	/^static char *expectString(void) {$/;"	f	file:
expectWord64	rts/Hpc.c	/^static StgWord64 expectWord64(void) {$/;"	f	file:
exponent	libraries/base/cbits/primFloat.c	/^	unsigned int exponent:11;$/;"	m	struct:stg_ieee754_dbl::__anon23	file:
exponent	libraries/base/cbits/primFloat.c	/^	unsigned int exponent:11;$/;"	m	struct:stg_ieee754_dbl::__anon24	file:
exponent	libraries/base/cbits/primFloat.c	/^	unsigned int exponent:8;$/;"	m	struct:stg_ieee754_flt::__anon21	file:
exponent	libraries/base/cbits/primFloat.c	/^	unsigned int exponent:8;$/;"	m	struct:stg_ieee754_flt::__anon22	file:
extend_basic_type	libffi/build/src/alpha/ffi.c	/^extend_basic_type(void *valp, int type, int argn)$/;"	f	file:
extend_basic_type	libffi/build/src/x86/ffi.c	/^extend_basic_type(void *arg, int type)$/;"	f	file:
extend_hfa_type	libffi/build/src/aarch64/ffi.c	/^extend_hfa_type (void *dest, void *src, int h)$/;"	f	file:
extend_integer_type	libffi/build/src/aarch64/ffi.c	/^extend_integer_type (void *source, int type)$/;"	f	file:
extensions	nofib/real/compress2/inC/prefix_trees.c	/^  struct ptree *extensions;$/;"	m	struct:ptree	typeref:struct:ptree::ptree	file:
externalManyPutMVars	testsuite/tests/concurrent/should_run/hs_try_putmvar002_c.c	/^void externalManyPutMVars(HsStablePtr mvar, HsInt n, HsInt cap)$/;"	f
externalManyPutMVarsFE	testsuite/tests/concurrent/should_run/hs_try_putmvar002_c.c	/^void externalManyPutMVarsFE(HsStablePtr mvar, HsInt n, HsInt cap)$/;"	f
externalPutMVar	testsuite/tests/concurrent/should_run/hs_try_putmvar002_c.c	/^void externalPutMVar(HsStablePtr mvar, HsInt cap)$/;"	f
externalPutMVarFE	testsuite/tests/concurrent/should_run/hs_try_putmvar002_c.c	/^void externalPutMVarFE(HsStablePtr mvar, HsInt cap)$/;"	f
extract_colour	utils/hp2ps/Shade.c	/^extract_colour(floatish shade, intish factor)$/;"	f	file:
extrawords_plus_one	rts/Adjustor.c	/^    StgInt          extrawords_plus_one;$/;"	m	struct:AdjustorStub	file:
f	libffi/build/src/powerpc/ffi_darwin.c	/^  float f;$/;"	m	union:__anon6	file:
f	libffi/build/testsuite/libffi.call/cls_64byte.c	/^  double f;$/;"	m	struct:cls_struct_64byte	file:
f	libffi/build/testsuite/libffi.call/cls_6_1_byte.c	/^  unsigned char f;$/;"	m	struct:cls_struct_6byte	file:
f	libffi/build/testsuite/libffi.call/cls_7_1_byte.c	/^  unsigned char f;$/;"	m	struct:cls_struct_7byte	file:
f	libffi/build/testsuite/libffi.call/cls_align_longdouble_split.c	/^  long double f;$/;"	m	struct:cls_struct_align	file:
f	libffi/build/testsuite/libffi.call/cls_align_longdouble_split2.c	/^  double f;$/;"	m	struct:cls_struct_align	file:
f	libffi/build/testsuite/libffi.call/huge_struct.c	/^	int32_t		f;$/;"	m	struct:BigStruct	file:
f	libffi/build/testsuite/libffi.call/stret_large.c	/^	double f;$/;"	m	struct:struct_108byte	file:
f	libffi/build/testsuite/libffi.call/stret_large2.c	/^	double f;$/;"	m	struct:struct_116byte	file:
f	libffi/build/testsuite/libffi.call/stret_medium.c	/^	double f;$/;"	m	struct:struct_72byte	file:
f	libffi/build/testsuite/libffi.call/stret_medium2.c	/^	double f;$/;"	m	struct:struct_72byte	file:
f	libffi/build/testsuite/libffi.call/struct6.c	/^  float f;$/;"	m	struct:__anon16	file:
f	libffi/build/testsuite/libffi.call/struct9.c	/^  float f;$/;"	m	struct:__anon19	file:
f	libraries/base/cbits/primFloat.c	/^   float f;$/;"	m	union:stg_ieee754_flt	file:
f	testsuite/tests/ffi/should_run/capi_ctype_001_c.c	/^int f(Foo *p) {$/;"	f
f	testsuite/tests/ffi/should_run/ffi018_c.c	/^HsInt64 f(void) {$/;"	f
f	testsuite/tests/ffi/should_run/ffi018_ghci_c.c	/^HsInt64 f(void) {$/;"	f
f	testsuite/tests/ffi/should_run/fptr01_c.c	/^void f( HsInt *i )$/;"	f
f	testsuite/tests/ffi/should_run/fptrfail01_c.c	/^void f( HsInt *i )$/;"	f
f	testsuite/tests/ghci/linking/f.c	/^int f(int x)$/;"	f
f	testsuite/tests/ghci/scripts/ghci056_c.c	/^HsInt f (HsInt x, HsInt y)$/;"	f
f1	libffi/build/testsuite/libffi.call/struct7.c	/^  float f1;$/;"	m	struct:__anon17	file:
f1	libffi/build/testsuite/libffi.call/struct8.c	/^  float f1;$/;"	m	struct:__anon18	file:
f2	libffi/build/testsuite/libffi.call/struct7.c	/^  float f2;$/;"	m	struct:__anon17	file:
f2	libffi/build/testsuite/libffi.call/struct8.c	/^  float f2;$/;"	m	struct:__anon18	file:
f3	libffi/build/testsuite/libffi.call/struct8.c	/^  float f3;$/;"	m	struct:__anon18	file:
f4	libffi/build/testsuite/libffi.call/struct8.c	/^  float f4;$/;"	m	struct:__anon18	file:
f_env	testsuite/tests/ffi/should_run/fptr01_c.c	/^void f_env( HsInt *env, HsInt *i )$/;"	f
fargs	libffi/build/src/x86/ffiw64.c	/^  UINT64 fargs[4];$/;"	m	struct:win64_closure_frame	file:
fatalInternalErrorFn	rts/RtsMessages.c	/^RtsMsgFunction *fatalInternalErrorFn = rtsFatalInternalErrorFn;$/;"	v
fd	libffi/build/src/dlmalloc.c	/^  struct malloc_chunk* fd;         \/* double links -- used only if free. *\/$/;"	m	struct:malloc_chunk	typeref:struct:malloc_chunk::malloc_chunk	file:
fd	libffi/build/src/dlmalloc.c	/^  struct malloc_tree_chunk* fd;$/;"	m	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
fdPollReadState	rts/posix/Select.c	/^static enum FdState fdPollReadState (int fd)$/;"	f	file:
fdPollWriteState	rts/posix/Select.c	/^static enum FdState fdPollWriteState (int fd)$/;"	f	file:
fdReady	libraries/base/cbits/inputReady.c	/^fdReady(int fd, bool write, int64_t msecs, bool isSock)$/;"	f
fd_hash	rts/FileLock.c	/^static HashTable *fd_hash;$/;"	v	file:
ff	libffi/build/testsuite/libffi.call/huge_struct.c	/^	int64_t		ff;$/;"	m	struct:BigStruct	file:
ff	libffi/build/testsuite/libffi.call/nested_struct.c	/^  float ff;$/;"	m	struct:cls_struct_16byte2	file:
ff	libffi/build/testsuite/libffi.call/nested_struct1.c	/^  float ff;$/;"	m	struct:cls_struct_16byte2	file:
ffi_align	libffi/build/src/arm/ffi.c	/^ffi_align (ffi_type *ty, void *p)$/;"	f	file:
ffi_assert	libffi/build/src/debug.c	/^void ffi_assert(char *expr, char *file, int line)$/;"	f
ffi_call	libffi/build/src/aarch64/ffi.c	/^ffi_call (ffi_cif *cif, void (*fn) (void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/alpha/ffi.c	/^ffi_call (ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/arc/ffi.c	/^ffi_call (ffi_cif * cif, void (*fn) (void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/arm/ffi.c	/^ffi_call (ffi_cif *cif, void (*fn) (void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/avr32/ffi.c	/^void ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/bfin/ffi.c	/^void ffi_call(ffi_cif *cif, void(*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/cris/ffi.c	/^ffi_call (ffi_cif * cif, void (*fn) (), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/frv/ffi.c	/^void ffi_call(ffi_cif *cif, $/;"	f
ffi_call	libffi/build/src/ia64/ffi.c	/^ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/m32r/ffi.c	/^void ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/m68k/ffi.c	/^ffi_call (ffi_cif *cif, void (*fn) (), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/m88k/ffi.c	/^ffi_call (ffi_cif *cif, void (*fn) (), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/metag/ffi.c	/^void ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/microblaze/ffi.c	/^void ffi_call(ffi_cif* cif, void (*fn)(void), void* rvalue, void** avalue)$/;"	f
ffi_call	libffi/build/src/mips/ffi.c	/^ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/moxie/ffi.c	/^void ffi_call(ffi_cif *cif, $/;"	f
ffi_call	libffi/build/src/nios2/ffi.c	/^void ffi_call (ffi_cif *cif, void (*fn) (void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/or1k/ffi.c	/^void ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/pa/ffi.c	/^void ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/powerpc/ffi.c	/^ffi_call (ffi_cif *cif, void (*fn) (void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/powerpc/ffi_darwin.c	/^ffi_call (ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/s390/ffi.c	/^ffi_call (ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/sh/ffi.c	/^void ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/sh64/ffi.c	/^void ffi_call(\/*@dependent@*\/ ffi_cif *cif, $/;"	f
ffi_call	libffi/build/src/sparc/ffi.c	/^ffi_call (ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/sparc/ffi64.c	/^ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/tile/ffi.c	/^ffi_call(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/vax/ffi.c	/^ffi_call (ffi_cif *cif, void (*fn) (), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/x86/ffi.c	/^ffi_call (ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/x86/ffi64.c	/^ffi_call (ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/x86/ffiw64.c	/^EFI64(ffi_call)(ffi_cif *cif, void (*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call	libffi/build/src/xtensa/ffi.c	/^void ffi_call(ffi_cif* cif, void(*fn)(void), void *rvalue, void **avalue)$/;"	f
ffi_call_go	libffi/build/src/aarch64/ffi.c	/^ffi_call_go (ffi_cif *cif, void (*fn) (void), void *rvalue,$/;"	f
ffi_call_go	libffi/build/src/alpha/ffi.c	/^ffi_call_go (ffi_cif *cif, void (*fn)(void), void *rvalue,$/;"	f
ffi_call_go	libffi/build/src/arm/ffi.c	/^ffi_call_go (ffi_cif *cif, void (*fn) (void), void *rvalue,$/;"	f
ffi_call_go	libffi/build/src/mips/ffi.c	/^ffi_call_go (ffi_cif *cif, void (*fn)(void), void *rvalue,$/;"	f
ffi_call_go	libffi/build/src/powerpc/ffi.c	/^ffi_call_go (ffi_cif *cif, void (*fn) (void), void *rvalue, void **avalue,$/;"	f
ffi_call_go	libffi/build/src/powerpc/ffi_darwin.c	/^ffi_call_go (ffi_cif *cif, void (*fn) (void), void *rvalue, void **avalue,$/;"	f
ffi_call_go	libffi/build/src/s390/ffi.c	/^ffi_call_go (ffi_cif *cif, void (*fn)(void), void *rvalue,$/;"	f
ffi_call_go	libffi/build/src/sparc/ffi.c	/^ffi_call_go (ffi_cif *cif, void (*fn)(void), void *rvalue,$/;"	f
ffi_call_go	libffi/build/src/sparc/ffi64.c	/^ffi_call_go(ffi_cif *cif, void (*fn)(void), void *rvalue,$/;"	f
ffi_call_go	libffi/build/src/x86/ffi.c	/^ffi_call_go (ffi_cif *cif, void (*fn)(void), void *rvalue,$/;"	f
ffi_call_go	libffi/build/src/x86/ffi64.c	/^ffi_call_go (ffi_cif *cif, void (*fn)(void), void *rvalue,$/;"	f
ffi_call_go	libffi/build/src/x86/ffiw64.c	/^EFI64(ffi_call_go)(ffi_cif *cif, void (*fn)(void), void *rvalue,$/;"	f
ffi_call_int	libffi/build/src/aarch64/ffi.c	/^ffi_call_int (ffi_cif *cif, void (*fn)(void), void *orig_rvalue,$/;"	f	file:
ffi_call_int	libffi/build/src/alpha/ffi.c	/^ffi_call_int (ffi_cif *cif, void (*fn)(void), void *rvalue,$/;"	f	file:
ffi_call_int	libffi/build/src/arm/ffi.c	/^ffi_call_int (ffi_cif * cif, void (*fn) (void), void *rvalue,$/;"	f	file:
ffi_call_int	libffi/build/src/mips/ffi.c	/^void ffi_call_int(ffi_cif *cif, void (*fn)(void), void *rvalue, $/;"	f
ffi_call_int	libffi/build/src/powerpc/ffi.c	/^ffi_call_int (ffi_cif *cif,$/;"	f	file:
ffi_call_int	libffi/build/src/s390/ffi.c	/^ffi_call_int(ffi_cif *cif,$/;"	f	file:
ffi_call_int	libffi/build/src/sparc/ffi.c	/^ffi_call_int (ffi_cif *cif, void (*fn)(void), void *rvalue,$/;"	f	file:
ffi_call_int	libffi/build/src/sparc/ffi64.c	/^ffi_call_int(ffi_cif *cif, void (*fn)(void), void *rvalue,$/;"	f	file:
ffi_call_int	libffi/build/src/x86/ffi.c	/^ffi_call_int (ffi_cif *cif, void (*fn)(void), void *rvalue,$/;"	f	file:
ffi_call_int	libffi/build/src/x86/ffi64.c	/^ffi_call_int (ffi_cif *cif, void (*fn)(void), void *rvalue,$/;"	f	file:
ffi_call_int	libffi/build/src/x86/ffiw64.c	/^ffi_call_int (ffi_cif *cif, void (*fn)(void), void *rvalue,$/;"	f	file:
ffi_check_struct_type	libffi/build/src/s390/ffi.c	/^ffi_check_struct_type (ffi_type *arg)$/;"	f	file:
ffi_clear_cache	libffi/build/src/aarch64/ffi.c	/^ffi_clear_cache (void *start, void *end)$/;"	f	file:
ffi_closure_OBSD_inner	libffi/build/src/m88k/ffi.c	/^ffi_closure_OBSD_inner (ffi_closure *closure, void *resp, unsigned int *regp,$/;"	f
ffi_closure_SYSV	libffi/build/src/or1k/ffi.c	/^void ffi_closure_SYSV(unsigned long r3, unsigned long r4, unsigned long r5, $/;"	f
ffi_closure_SYSV_inner	libffi/build/src/aarch64/ffi.c	/^ffi_closure_SYSV_inner (ffi_cif *cif,$/;"	f
ffi_closure_SYSV_inner	libffi/build/src/avr32/ffi.c	/^unsigned int ffi_closure_SYSV_inner(ffi_closure *closure, void **respp,$/;"	f
ffi_closure_SYSV_inner	libffi/build/src/m68k/ffi.c	/^ffi_closure_SYSV_inner (ffi_closure *closure, void *resp, void *args)$/;"	f
ffi_closure_SYSV_inner	libffi/build/src/metag/ffi.c	/^unsigned int ffi_closure_SYSV_inner (closure, respp, args, vfp_args)$/;"	f
ffi_closure_SYSV_inner	libffi/build/src/xtensa/ffi.c	/^ffi_closure_SYSV_inner(ffi_closure *closure, void **values, void *rvalue)$/;"	f
ffi_closure_alloc	libffi/build/src/closures.c	/^ffi_closure_alloc (size_t size, void **code)$/;"	f
ffi_closure_call_SYSV	libffi/build/src/microblaze/ffi.c	/^void ffi_closure_call_SYSV(void* register_args, void* stack_args,$/;"	f
ffi_closure_eabi	libffi/build/src/frv/ffi.c	/^void ffi_closure_eabi (unsigned arg1, unsigned arg2, unsigned arg3,$/;"	f
ffi_closure_eabi	libffi/build/src/moxie/ffi.c	/^void ffi_closure_eabi (unsigned arg1, unsigned arg2, unsigned arg3,$/;"	f
ffi_closure_elfbsd_inner	libffi/build/src/vax/ffi.c	/^ffi_closure_elfbsd_inner (ffi_closure *closure, void *resp, char *stack)$/;"	f
ffi_closure_free	libffi/build/src/closures.c	/^ffi_closure_free (void *ptr)$/;"	f
ffi_closure_helper	libffi/build/src/nios2/ffi.c	/^ffi_closure_helper (unsigned char *args,$/;"	f	file:
ffi_closure_helper_DARWIN	libffi/build/src/powerpc/ffi_darwin.c	/^ffi_closure_helper_DARWIN (ffi_closure *closure, void *rvalue,$/;"	f
ffi_closure_helper_LINUX64	libffi/build/src/powerpc/ffi_linux64.c	/^ffi_closure_helper_LINUX64 (ffi_cif *cif,$/;"	f
ffi_closure_helper_SYSV	libffi/build/src/powerpc/ffi_sysv.c	/^ffi_closure_helper_SYSV (ffi_cif *cif,$/;"	f
ffi_closure_helper_SYSV	libffi/build/src/s390/ffi.c	/^ffi_closure_helper_SYSV (ffi_cif *cif,$/;"	f
ffi_closure_helper_SYSV	libffi/build/src/sh/ffi.c	/^ffi_closure_helper_SYSV (ffi_closure *closure, void *rvalue, $/;"	f
ffi_closure_helper_SYSV	libffi/build/src/sh64/ffi.c	/^ffi_closure_helper_SYSV (ffi_closure *closure, UINT64 *rvalue, $/;"	f
ffi_closure_helper_common	libffi/build/src/powerpc/ffi_darwin.c	/^ffi_closure_helper_common (ffi_cif* cif,$/;"	f	file:
ffi_closure_inner	libffi/build/src/x86/ffi.c	/^ffi_closure_inner (struct closure_frame *frame, char *stack)$/;"	f
ffi_closure_inner_ARCompact	libffi/build/src/arc/ffi.c	/^ffi_closure_inner_ARCompact (ffi_closure * closure, void *rvalue,$/;"	f
ffi_closure_inner_SYSV	libffi/build/src/arm/ffi.c	/^ffi_closure_inner_SYSV (ffi_cif *cif,$/;"	f
ffi_closure_inner_VFP	libffi/build/src/arm/ffi.c	/^ffi_closure_inner_VFP (ffi_cif *cif,$/;"	f
ffi_closure_inner_pa32	libffi/build/src/pa/ffi.c	/^ffi_status ffi_closure_inner_pa32(ffi_closure *closure, UINT32 *stack)$/;"	f
ffi_closure_mips_inner_N32	libffi/build/src/mips/ffi.c	/^ffi_closure_mips_inner_N32 (ffi_cif *cif, $/;"	f
ffi_closure_mips_inner_O32	libffi/build/src/mips/ffi.c	/^ffi_closure_mips_inner_O32 (ffi_cif *cif,$/;"	f
ffi_closure_osf_inner	libffi/build/src/alpha/ffi.c	/^ffi_closure_osf_inner (ffi_cif *cif,$/;"	f
ffi_closure_sparc_inner_v8	libffi/build/src/sparc/ffi.c	/^ffi_closure_sparc_inner_v8(ffi_cif *cif, $/;"	f
ffi_closure_sparc_inner_v9	libffi/build/src/sparc/ffi64.c	/^ffi_closure_sparc_inner_v9(ffi_cif *cif,$/;"	f
ffi_closure_tile_inner	libffi/build/src/tile/ffi.c	/^ffi_closure_tile_inner(ffi_closure *closure,$/;"	f
ffi_closure_unix64_inner	libffi/build/src/x86/ffi64.c	/^ffi_closure_unix64_inner(ffi_cif *cif,$/;"	f
ffi_closure_unix_inner	libffi/build/src/ia64/ffi.c	/^ffi_closure_unix_inner (ffi_closure *closure, struct ia64_args *stack,$/;"	f
ffi_closure_win64_inner	libffi/build/src/x86/ffiw64.c	/^ffi_closure_win64_inner(ffi_cif *cif,$/;"	f
ffi_dblfl	libffi/build/src/powerpc/ffi_darwin.c	/^} ffi_dblfl;$/;"	t	typeref:union:__anon6	file:
ffi_flush_icache	libffi/build/src/sparc/ffi.c	/^ffi_flush_icache (void *p)$/;"	f	file:
ffi_flush_icache	libffi/build/src/sparc/ffi64.c	/^ffi_flush_icache (void *p)$/;"	f	file:
ffi_get_struct_offsets	libffi/build/src/prep_cif.c	/^ffi_get_struct_offsets (ffi_abi abi, ffi_type *struct_type, size_t *offsets)$/;"	f
ffi_go_closure_helper_DARWIN	libffi/build/src/powerpc/ffi_darwin.c	/^ffi_go_closure_helper_DARWIN (ffi_go_closure *closure, void *rvalue,$/;"	f
ffi_init_trampoline	libffi/build/src/metag/ffi.c	/^void ffi_init_trampoline(unsigned char *__tramp, unsigned int __fun, unsigned int __ctx) {$/;"	f
ffi_java_ptrarray_to_raw	libffi/build/src/java_raw_api.c	/^ffi_java_ptrarray_to_raw (ffi_cif *cif, void **args, ffi_java_raw *raw)$/;"	f
ffi_java_raw_call	libffi/build/src/java_raw_api.c	/^void ffi_java_raw_call (ffi_cif *cif, void (*fn)(void), void *rvalue,$/;"	f
ffi_java_raw_size	libffi/build/src/java_raw_api.c	/^ffi_java_raw_size (ffi_cif *cif)$/;"	f
ffi_java_raw_to_ptrarray	libffi/build/src/java_raw_api.c	/^ffi_java_raw_to_ptrarray (ffi_cif *cif, ffi_java_raw *raw, void **args)$/;"	f
ffi_java_raw_to_rvalue	libffi/build/src/java_raw_api.c	/^ffi_java_raw_to_rvalue (ffi_cif *cif, void *rvalue)$/;"	f	file:
ffi_java_rvalue_to_raw	libffi/build/src/java_raw_api.c	/^ffi_java_rvalue_to_raw (ffi_cif *cif, void *rvalue)$/;"	f	file:
ffi_java_translate_args	libffi/build/src/java_raw_api.c	/^ffi_java_translate_args (ffi_cif *cif, void *rvalue,$/;"	f	file:
ffi_prep_args	libffi/build/src/arc/ffi.c	/^ffi_prep_args (char *stack, extended_cif * ecif)$/;"	f
ffi_prep_args	libffi/build/src/avr32/ffi.c	/^void ffi_prep_args(char *stack, extended_cif *ecif)$/;"	f
ffi_prep_args	libffi/build/src/bfin/ffi.c	/^void ffi_prep_args(unsigned char *stack, extended_cif *ecif)$/;"	f
ffi_prep_args	libffi/build/src/cris/ffi.c	/^ffi_prep_args (char *stack, extended_cif * ecif)$/;"	f
ffi_prep_args	libffi/build/src/frv/ffi.c	/^void *ffi_prep_args(char *stack, extended_cif *ecif)$/;"	f
ffi_prep_args	libffi/build/src/m32r/ffi.c	/^void ffi_prep_args(char *stack, extended_cif *ecif)$/;"	f
ffi_prep_args	libffi/build/src/m68k/ffi.c	/^ffi_prep_args (void *stack, extended_cif *ecif)$/;"	f
ffi_prep_args	libffi/build/src/m88k/ffi.c	/^ffi_prep_args (void *stack, extended_cif *ecif)$/;"	f
ffi_prep_args	libffi/build/src/metag/ffi.c	/^unsigned int ffi_prep_args(char *stack, extended_cif *ecif)$/;"	f
ffi_prep_args	libffi/build/src/microblaze/ffi.c	/^void ffi_prep_args(void* stack, extended_cif* ecif)$/;"	f
ffi_prep_args	libffi/build/src/mips/ffi.c	/^static void ffi_prep_args(char *stack, $/;"	f	file:
ffi_prep_args	libffi/build/src/moxie/ffi.c	/^void *ffi_prep_args(char *stack, extended_cif *ecif)$/;"	f
ffi_prep_args	libffi/build/src/nios2/ffi.c	/^void ffi_prep_args (char *stack, extended_cif *ecif)$/;"	f
ffi_prep_args	libffi/build/src/or1k/ffi.c	/^void* ffi_prep_args(char *stack, extended_cif *ecif)$/;"	f
ffi_prep_args	libffi/build/src/powerpc/ffi_darwin.c	/^ffi_prep_args (extended_cif *ecif, unsigned long *const stack)$/;"	f
ffi_prep_args	libffi/build/src/sh/ffi.c	/^void ffi_prep_args(char *stack, extended_cif *ecif)$/;"	f
ffi_prep_args	libffi/build/src/sh64/ffi.c	/^void ffi_prep_args(char *stack, extended_cif *ecif)$/;"	f
ffi_prep_args	libffi/build/src/vax/ffi.c	/^ffi_prep_args (extended_cif *ecif, void *stack)$/;"	f
ffi_prep_args	libffi/build/src/xtensa/ffi.c	/^void ffi_prep_args(extended_cif *ecif, unsigned char* stack)$/;"	f
ffi_prep_args64	libffi/build/src/powerpc/ffi_linux64.c	/^ffi_prep_args64 (extended_cif *ecif, unsigned long *const stack)$/;"	f
ffi_prep_args_SYSV	libffi/build/src/arm/ffi.c	/^ffi_prep_args_SYSV (ffi_cif *cif, int flags, void *rvalue,$/;"	f	file:
ffi_prep_args_SYSV	libffi/build/src/powerpc/ffi_sysv.c	/^ffi_prep_args_SYSV (extended_cif *ecif, unsigned *const stack)$/;"	f
ffi_prep_args_VFP	libffi/build/src/arm/ffi.c	/^ffi_prep_args_VFP (ffi_cif *cif, int flags, void *rvalue,$/;"	f	file:
ffi_prep_args_pa32	libffi/build/src/pa/ffi.c	/^void ffi_prep_args_pa32(UINT32 *stack, extended_cif *ecif, unsigned bytes)$/;"	f
ffi_prep_args_v8	libffi/build/src/sparc/ffi.c	/^ffi_prep_args_v8(ffi_cif *cif, unsigned long *argp, void *rvalue, void **avalue)$/;"	f
ffi_prep_args_v9	libffi/build/src/sparc/ffi64.c	/^ffi_prep_args_v9(ffi_cif *cif, unsigned long *argp, void *rvalue, void **avalue)$/;"	f
ffi_prep_cif	libffi/build/src/prep_cif.c	/^ffi_status ffi_prep_cif(ffi_cif *cif, ffi_abi abi, unsigned int nargs,$/;"	f
ffi_prep_cif_core	libffi/build/src/cris/ffi.c	/^ffi_prep_cif_core (ffi_cif * cif,$/;"	f
ffi_prep_cif_core	libffi/build/src/prep_cif.c	/^ffi_status FFI_HIDDEN ffi_prep_cif_core(ffi_cif *cif, ffi_abi abi,$/;"	f
ffi_prep_cif_linux64	libffi/build/src/powerpc/ffi_linux64.c	/^ffi_prep_cif_linux64 (ffi_cif *cif)$/;"	f
ffi_prep_cif_linux64_core	libffi/build/src/powerpc/ffi_linux64.c	/^ffi_prep_cif_linux64_core (ffi_cif *cif)$/;"	f	file:
ffi_prep_cif_linux64_var	libffi/build/src/powerpc/ffi_linux64.c	/^ffi_prep_cif_linux64_var (ffi_cif *cif,$/;"	f
ffi_prep_cif_machdep	libffi/build/src/aarch64/ffi.c	/^ffi_prep_cif_machdep (ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/alpha/ffi.c	/^ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/arc/ffi.c	/^ffi_prep_cif_machdep (ffi_cif * cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/arm/ffi.c	/^ffi_prep_cif_machdep (ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/avr32/ffi.c	/^ffi_status ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/bfin/ffi.c	/^ffi_status ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/cris/ffi.c	/^ffi_prep_cif_machdep (ffi_cif * cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/frv/ffi.c	/^ffi_status ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/ia64/ffi.c	/^ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/m32r/ffi.c	/^ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/m68k/ffi.c	/^ffi_prep_cif_machdep (ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/m88k/ffi.c	/^ffi_prep_cif_machdep (ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/metag/ffi.c	/^ffi_status ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/microblaze/ffi.c	/^ffi_status ffi_prep_cif_machdep(ffi_cif* cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/mips/ffi.c	/^ffi_status ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/moxie/ffi.c	/^ffi_status ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/nios2/ffi.c	/^ffi_status ffi_prep_cif_machdep (ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/or1k/ffi.c	/^ffi_status ffi_prep_cif_machdep (ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/pa/ffi.c	/^ffi_status ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/powerpc/ffi.c	/^ffi_prep_cif_machdep (ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/powerpc/ffi_darwin.c	/^ffi_prep_cif_machdep (ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/s390/ffi.c	/^ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/sh/ffi.c	/^ffi_status ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/sh64/ffi.c	/^ffi_status ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/sparc/ffi.c	/^ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/sparc/ffi64.c	/^ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/tile/ffi.c	/^ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/vax/ffi.c	/^ffi_prep_cif_machdep (ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/x86/ffi.c	/^ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/x86/ffi64.c	/^ffi_prep_cif_machdep (ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/x86/ffiw64.c	/^EFI64(ffi_prep_cif_machdep)(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep	libffi/build/src/xtensa/ffi.c	/^ffi_status ffi_prep_cif_machdep(ffi_cif *cif)$/;"	f
ffi_prep_cif_machdep_core	libffi/build/src/sparc/ffi64.c	/^ffi_prep_cif_machdep_core(ffi_cif *cif)$/;"	f	file:
ffi_prep_cif_machdep_var	libffi/build/src/aarch64/ffi.c	/^ffi_status ffi_prep_cif_machdep_var(ffi_cif *cif,$/;"	f
ffi_prep_cif_machdep_var	libffi/build/src/arm/ffi.c	/^ffi_prep_cif_machdep_var (ffi_cif * cif,$/;"	f
ffi_prep_cif_machdep_var	libffi/build/src/or1k/ffi.c	/^ffi_status ffi_prep_cif_machdep_var(ffi_cif *cif,$/;"	f
ffi_prep_cif_machdep_var	libffi/build/src/powerpc/ffi.c	/^ffi_prep_cif_machdep_var (ffi_cif *cif,$/;"	f
ffi_prep_cif_machdep_var	libffi/build/src/sparc/ffi64.c	/^ffi_prep_cif_machdep_var(ffi_cif *cif, unsigned nfixedargs, unsigned ntotalargs)$/;"	f
ffi_prep_cif_sysv	libffi/build/src/powerpc/ffi_sysv.c	/^ffi_prep_cif_sysv (ffi_cif *cif)$/;"	f
ffi_prep_cif_sysv_core	libffi/build/src/powerpc/ffi_sysv.c	/^ffi_prep_cif_sysv_core (ffi_cif *cif)$/;"	f	file:
ffi_prep_cif_var	libffi/build/src/prep_cif.c	/^ffi_status ffi_prep_cif_var(ffi_cif *cif,$/;"	f
ffi_prep_closure	libffi/build/src/prep_cif.c	/^ffi_prep_closure (ffi_closure* closure,$/;"	f
ffi_prep_closure_args_OBSD	libffi/build/src/m88k/ffi.c	/^ffi_prep_closure_args_OBSD (ffi_cif *cif, void **avalue, unsigned int *regp,$/;"	f	file:
ffi_prep_closure_elfbsd	libffi/build/src/vax/ffi.c	/^ffi_prep_closure_elfbsd (ffi_cif *cif, void **avalue, char *stackp)$/;"	f	file:
ffi_prep_closure_inner	libffi/build/src/cris/ffi.c	/^ffi_prep_closure_inner (void **params, ffi_closure* closure)$/;"	f	file:
ffi_prep_closure_loc	libffi/build/src/aarch64/ffi.c	/^ffi_prep_closure_loc (ffi_closure *closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/alpha/ffi.c	/^ffi_prep_closure_loc (ffi_closure* closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/arc/ffi.c	/^ffi_prep_closure_loc (ffi_closure * closure, ffi_cif * cif,$/;"	f
ffi_prep_closure_loc	libffi/build/src/arm/ffi.c	/^ffi_prep_closure_loc (ffi_closure * closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/avr32/ffi.c	/^ffi_status ffi_prep_closure_loc(ffi_closure* closure, ffi_cif* cif,$/;"	f
ffi_prep_closure_loc	libffi/build/src/cris/ffi.c	/^ffi_prep_closure_loc (ffi_closure* closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/frv/ffi.c	/^ffi_prep_closure_loc (ffi_closure* closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/ia64/ffi.c	/^ffi_prep_closure_loc (ffi_closure* closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/m68k/ffi.c	/^ffi_prep_closure_loc (ffi_closure* closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/m88k/ffi.c	/^ffi_prep_closure_loc (ffi_closure* closure, ffi_cif* cif,$/;"	f
ffi_prep_closure_loc	libffi/build/src/metag/ffi.c	/^ffi_prep_closure_loc (ffi_closure *closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/microblaze/ffi.c	/^ffi_status ffi_prep_closure_loc($/;"	f
ffi_prep_closure_loc	libffi/build/src/mips/ffi.c	/^ffi_prep_closure_loc (ffi_closure *closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/moxie/ffi.c	/^ffi_prep_closure_loc (ffi_closure* closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/nios2/ffi.c	/^ffi_prep_closure_loc (ffi_closure* closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/or1k/ffi.c	/^ffi_prep_closure_loc (ffi_closure* closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/pa/ffi.c	/^ffi_prep_closure_loc (ffi_closure* closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/powerpc/ffi.c	/^ffi_prep_closure_loc (ffi_closure *closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/powerpc/ffi_darwin.c	/^ffi_prep_closure_loc (ffi_closure* closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/s390/ffi.c	/^ffi_prep_closure_loc (ffi_closure *closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/sh/ffi.c	/^ffi_prep_closure_loc (ffi_closure* closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/sh64/ffi.c	/^ffi_prep_closure_loc (ffi_closure *closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/sparc/ffi.c	/^ffi_prep_closure_loc (ffi_closure *closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/sparc/ffi64.c	/^ffi_prep_closure_loc (ffi_closure* closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/tile/ffi.c	/^ffi_prep_closure_loc (ffi_closure *closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/vax/ffi.c	/^ffi_prep_closure_loc (ffi_closure *closure, ffi_cif *cif,$/;"	f
ffi_prep_closure_loc	libffi/build/src/x86/ffi.c	/^ffi_prep_closure_loc (ffi_closure* closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/x86/ffi64.c	/^ffi_prep_closure_loc (ffi_closure* closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/x86/ffiw64.c	/^EFI64(ffi_prep_closure_loc)(ffi_closure* closure,$/;"	f
ffi_prep_closure_loc	libffi/build/src/xtensa/ffi.c	/^ffi_prep_closure_loc (ffi_closure* closure,$/;"	f
ffi_prep_closure_loc_linux64	libffi/build/src/powerpc/ffi_linux64.c	/^ffi_prep_closure_loc_linux64 (ffi_closure *closure,$/;"	f
ffi_prep_closure_loc_sysv	libffi/build/src/powerpc/ffi_sysv.c	/^ffi_prep_closure_loc_sysv (ffi_closure *closure,$/;"	f
ffi_prep_go_closure	libffi/build/src/aarch64/ffi.c	/^ffi_prep_go_closure (ffi_go_closure *closure, ffi_cif* cif,$/;"	f
ffi_prep_go_closure	libffi/build/src/alpha/ffi.c	/^ffi_prep_go_closure (ffi_go_closure* closure,$/;"	f
ffi_prep_go_closure	libffi/build/src/arm/ffi.c	/^ffi_prep_go_closure (ffi_go_closure *closure, ffi_cif *cif,$/;"	f
ffi_prep_go_closure	libffi/build/src/mips/ffi.c	/^ffi_prep_go_closure (ffi_go_closure* closure, ffi_cif* cif,$/;"	f
ffi_prep_go_closure	libffi/build/src/powerpc/ffi.c	/^ffi_prep_go_closure (ffi_go_closure *closure,$/;"	f
ffi_prep_go_closure	libffi/build/src/powerpc/ffi_darwin.c	/^ffi_prep_go_closure (ffi_go_closure* closure,$/;"	f
ffi_prep_go_closure	libffi/build/src/s390/ffi.c	/^ffi_prep_go_closure (ffi_go_closure *closure, ffi_cif *cif,$/;"	f
ffi_prep_go_closure	libffi/build/src/sparc/ffi.c	/^ffi_prep_go_closure (ffi_go_closure *closure, ffi_cif *cif,$/;"	f
ffi_prep_go_closure	libffi/build/src/sparc/ffi64.c	/^ffi_prep_go_closure (ffi_go_closure* closure, ffi_cif* cif,$/;"	f
ffi_prep_go_closure	libffi/build/src/x86/ffi.c	/^ffi_prep_go_closure (ffi_go_closure* closure, ffi_cif* cif,$/;"	f
ffi_prep_go_closure	libffi/build/src/x86/ffi64.c	/^ffi_prep_go_closure (ffi_go_closure* closure, ffi_cif* cif,$/;"	f
ffi_prep_go_closure	libffi/build/src/x86/ffiw64.c	/^EFI64(ffi_prep_go_closure)(ffi_go_closure* closure, ffi_cif* cif,$/;"	f
ffi_prep_incoming_args_SYSV	libffi/build/src/arm/ffi.c	/^ffi_prep_incoming_args_SYSV (ffi_cif *cif, void *rvalue,$/;"	f	file:
ffi_prep_incoming_args_SYSV	libffi/build/src/avr32/ffi.c	/^static void ffi_prep_incoming_args_SYSV(char *stack, void **rvalue,$/;"	f	file:
ffi_prep_incoming_args_SYSV	libffi/build/src/m68k/ffi.c	/^ffi_prep_incoming_args_SYSV (char *stack, void **avalue, ffi_cif *cif)$/;"	f	file:
ffi_prep_incoming_args_SYSV	libffi/build/src/metag/ffi.c	/^static void ffi_prep_incoming_args_SYSV(char *stack, void **rvalue,$/;"	f	file:
ffi_prep_incoming_args_VFP	libffi/build/src/arm/ffi.c	/^ffi_prep_incoming_args_VFP (ffi_cif *cif, void *rvalue, char *stack,$/;"	f	file:
ffi_prep_java_raw_closure	libffi/build/src/java_raw_api.c	/^ffi_prep_java_raw_closure (ffi_java_raw_closure* cl,$/;"	f
ffi_prep_java_raw_closure_loc	libffi/build/src/java_raw_api.c	/^ffi_prep_java_raw_closure_loc (ffi_java_raw_closure* cl,$/;"	f
ffi_prep_raw_closure	libffi/build/src/raw_api.c	/^ffi_prep_raw_closure (ffi_raw_closure* cl,$/;"	f
ffi_prep_raw_closure_loc	libffi/build/src/raw_api.c	/^ffi_prep_raw_closure_loc (ffi_raw_closure* cl,$/;"	f
ffi_prep_raw_closure_loc	libffi/build/src/x86/ffi.c	/^ffi_prep_raw_closure_loc (ffi_raw_closure *closure,$/;"	f
ffi_prep_types	libffi/build/src/powerpc/ffi.c	/^ffi_prep_types (ffi_abi abi)$/;"	f
ffi_prep_types_linux64	libffi/build/src/powerpc/ffi_linux64.c	/^ffi_prep_types_linux64 (ffi_abi abi)$/;"	f
ffi_prep_types_sysv	libffi/build/src/powerpc/ffi_sysv.c	/^ffi_prep_types_sysv (ffi_abi abi)$/;"	f
ffi_ptrarray_to_raw	libffi/build/src/raw_api.c	/^ffi_ptrarray_to_raw (ffi_cif *cif, void **args, ffi_raw *raw)$/;"	f
ffi_put_arg	libffi/build/src/arm/ffi.c	/^ffi_put_arg (ffi_type *ty, void *src, void *dst)$/;"	f	file:
ffi_raw_call	libffi/build/src/raw_api.c	/^void ffi_raw_call (ffi_cif *cif, void (*fn)(void), void *rvalue, ffi_raw *raw)$/;"	f
ffi_raw_call	libffi/build/src/x86/ffi.c	/^ffi_raw_call(ffi_cif *cif, void (*fn)(void), void *rvalue, ffi_raw *avalue)$/;"	f
ffi_raw_size	libffi/build/src/raw_api.c	/^ffi_raw_size (ffi_cif *cif)$/;"	f
ffi_raw_to_ptrarray	libffi/build/src/raw_api.c	/^ffi_raw_to_ptrarray (ffi_cif *cif, ffi_raw *raw, void **args)$/;"	f
ffi_size_stack_pa32	libffi/build/src/pa/ffi.c	/^static void ffi_size_stack_pa32(ffi_cif *cif)$/;"	f	file:
ffi_stop_here	libffi/build/src/debug.c	/^void ffi_stop_here(void)$/;"	f
ffi_struct_float_copy	libffi/build/src/sparc/ffi64.c	/^ffi_struct_float_copy (int size_mask, void *vd, void *vi, void *vf)$/;"	f
ffi_struct_float_mask	libffi/build/src/sparc/ffi64.c	/^ffi_struct_float_mask (ffi_type *outer_type, int size_mask)$/;"	f	file:
ffi_struct_float_merge	libffi/build/src/sparc/ffi64.c	/^ffi_struct_float_merge (int size_mask, void *vi, void *vf)$/;"	f	file:
ffi_struct_type	libffi/build/src/pa/ffi.c	/^static inline int ffi_struct_type(ffi_type *t)$/;"	f	file:
ffi_trampoline_lock	libffi/build/src/closures.c	/^static pthread_mutex_t ffi_trampoline_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
ffi_trampoline_table	libffi/build/src/closures.c	/^struct ffi_trampoline_table$/;"	s	file:
ffi_trampoline_table	libffi/build/src/closures.c	/^typedef struct ffi_trampoline_table ffi_trampoline_table;$/;"	t	typeref:struct:ffi_trampoline_table	file:
ffi_trampoline_table_alloc	libffi/build/src/closures.c	/^ffi_trampoline_table_alloc (void)$/;"	f	file:
ffi_trampoline_table_entry	libffi/build/src/closures.c	/^struct ffi_trampoline_table_entry$/;"	s	file:
ffi_trampoline_table_entry	libffi/build/src/closures.c	/^typedef struct ffi_trampoline_table_entry ffi_trampoline_table_entry;$/;"	t	typeref:struct:ffi_trampoline_table_entry	file:
ffi_trampoline_table_free	libffi/build/src/closures.c	/^ffi_trampoline_table_free (ffi_trampoline_table *table)$/;"	f	file:
ffi_trampoline_tables	libffi/build/src/closures.c	/^static ffi_trampoline_table *ffi_trampoline_tables = NULL;$/;"	v	file:
ffi_translate_args	libffi/build/src/raw_api.c	/^ffi_translate_args (ffi_cif *cif, void *rvalue,$/;"	f	file:
ffi_type_longdouble	libffi/build/src/types.c	/^const ffi_type ffi_type_longdouble = { 16, 16, 4, NULL };$/;"	v
ffi_type_test	libffi/build/src/debug.c	/^void ffi_type_test(ffi_type *a, char *file, int line)$/;"	f
ffi_type_void	libffi/build/src/types.c	/^const ffi_type ffi_type_void = {$/;"	v
fft	nofib/spectral/fft2/fft.c	/^void fft(complex * input, complex * output, unsigned int n, int dir)$/;"	f
file	rts/Libdw.c	/^    FILE *file;$/;"	m	struct:PrintData	file:
fileExists	driver/ghci/ghci.c	/^BOOL fileExists(const char *path) {$/;"	f
fileTimeToRtsTime	rts/win32/GetTime.c	/^fileTimeToRtsTime(FILETIME ft)$/;"	f	file:
file_exists	libraries/base/cbits/Win32Utils.c	/^BOOL file_exists(LPCTSTR path)$/;"	f
file_lock_mutex	rts/FileLock.c	/^static Mutex file_lock_mutex;$/;"	v	file:
fillGot	rts/linker/elf_got.c	/^fillGot(ObjectCode * oc) {$/;"	f
filled_page	rts/linker/M32Alloc.c	/^    } filled_page;$/;"	m	union:m32_page_t::__anon38	typeref:struct:m32_page_t::__anon38::__anon39	file:
filter	utils/hp2ps/Main.c	/^static boolish filter;		\/* true when running as a filter	*\/$/;"	v	file:
finalize_value	testsuite/tests/rts/T10904lib.c	/^finalize_value(int * p)$/;"	f
finalizer_chunk	rts/Weak.c	/^static const int32_t finalizer_chunk = 100;$/;"	v	file:
finalizer_list	rts/Weak.c	/^static StgWeak *finalizer_list = NULL;$/;"	v	file:
finalizer_lock	rts/Weak.c	/^static volatile StgWord finalizer_lock = 0;$/;"	v	file:
findAtomicallyFrameHelper	rts/Schedule.c	/^findAtomicallyFrameHelper (Capability *cap, StgTSO *tso)$/;"	f
findCCSMaxLens	rts/ProfilerReport.c	/^findCCSMaxLens(CostCentreStack const *ccs, uint32_t indent, uint32_t *max_label_len,$/;"	f	file:
findFreeBlocks	rts/win32/OSMem.c	/^findFreeBlocks(uint32_t n) {$/;"	f	file:
findLoadedDll	rts/linker/PEi386.c	/^static OpenedDLL* findLoadedDll(HINSTANCE instance)$/;"	f	file:
findMBlockMap	rts/sm/MBlock.c	/^findMBlockMap(const void *p)$/;"	f	file:
findMemoryLeak	rts/sm/Sanity.c	/^findMemoryLeak (void)$/;"	f	file:
findOC	rts/CheckUnload.c	/^static ObjectCode *findOC(OCSectionIndices *s_indices, const void *addr) {$/;"	f	file:
findPtr	rts/Printer.c	/^findPtr(P_ p, int follow)$/;"	f
findPtrBlocks	rts/Printer.c	/^findPtrBlocks (StgPtr p, bdescr *bd, StgPtr arr[], int arr_size, int i)$/;"	f	file:
findRetryFrameHelper	rts/Schedule.c	/^findRetryFrameHelper (Capability *cap, StgTSO *tso)$/;"	f
findSlop	rts/sm/Sanity.c	/^void findSlop(bdescr *bd)$/;"	f
findSpark	rts/Capability.c	/^findSpark (Capability *cap)$/;"	f
findStub	rts/linker/MachO.c	/^findStub(Section * section, void ** addr) {$/;"	f
findStub	rts/linker/elf_plt.c	/^findStub(Section * section,$/;"	f
findSymbol	rts/linker/elf_util.c	/^findSymbol(ObjectCode * oc, unsigned symbolTableIndex,$/;"	f
findSymbolTable	rts/linker/elf_util.c	/^findSymbolTable(ObjectCode * oc, unsigned symbolTableIndex) {$/;"	f
findSystemLibrary	rts/Linker.c	/^pathchar* findSystemLibrary(pathchar* dll_name)$/;"	f
findSystemLibrary_PEi386	rts/linker/PEi386.c	/^pathchar* findSystemLibrary_PEi386( pathchar* dll_name )$/;"	f
find_pointer	rts/sm/CNF.c	/^find_pointer(StgWord *fixup_table, uint32_t count, StgClosure *q)$/;"	f
find_ptrs	rts/TraverseHeap.c	/^find_ptrs( stackPos *info )$/;"	f
find_srt	rts/TraverseHeap.c	/^find_srt( stackPos *info )$/;"	f
finiUserSignals	rts/win32/ConsoleHandler.c	/^finiUserSignals(void)$/;"	f
finish_upd_rem_set_mark	rts/sm/NonMovingMark.c	/^STATIC_INLINE void finish_upd_rem_set_mark(StgClosure *p)$/;"	f
first	libraries/haskeline/cbits/h_wcwidth.c	/^  int first;$/;"	m	struct:interval	file:
firstBlockGetCompact	rts/sm/CNF.c	/^firstBlockGetCompact(StgCompactNFDataBlock *block)$/;"	f	file:
fitsBits	rts/linker/MachO.c	/^fitsBits(size_t bits, int64_t value) {$/;"	f
fixup_block	rts/sm/CNF.c	/^fixup_block(StgCompactNFDataBlock *block, StgWord *fixup_table, uint32_t count)$/;"	f	file:
fixup_early	rts/sm/CNF.c	/^fixup_early(StgCompactNFData *str, StgCompactNFDataBlock *block)$/;"	f	file:
fixup_late	rts/sm/CNF.c	/^fixup_late(StgCompactNFData *str, StgCompactNFDataBlock *block)$/;"	f	file:
fixup_loop	rts/sm/CNF.c	/^fixup_loop(StgCompactNFDataBlock *block, StgClosure **proot)$/;"	f	file:
fixup_mut_arr_ptrs	rts/sm/CNF.c	/^fixup_mut_arr_ptrs (StgWord          *fixup_table,$/;"	f	file:
fixup_one_pointer	rts/sm/CNF.c	/^fixup_one_pointer(StgWord *fixup_table, uint32_t count, StgClosure **p)$/;"	f	file:
flag_a	testsuite/tests/ghci/T13786/T13786a.c	/^static bool flag_a = false;$/;"	v	file:
flag_b	testsuite/tests/ghci/T13786/T13786b.c	/^static bool flag_b = false;$/;"	v	file:
flag_t	libffi/build/src/dlmalloc.c	/^typedef unsigned int flag_t;           \/* The type of various bit flag sets *\/$/;"	t	file:
flags	libffi/build/src/arm/ffi.c	/^  int flags;$/;"	m	struct:call_frame	file:
flags	libffi/build/src/x86/ffi.c	/^  int flags;		\/* 12 *\/$/;"	m	struct:call_frame	file:
flags	libffi/build/src/x86/ffiw64.c	/^  UINT64 flags;		\/* 24 *\/$/;"	m	struct:win64_call_frame	file:
flags	rts/Pool.c	/^    StgWord flags;$/;"	m	struct:PoolEntry_	file:
flattenAndQuoteArgs	driver/utils/cwrapper.c	/^char *flattenAndQuoteArgs(char *ptr, int argc, char *argv[])$/;"	f
fldd	libffi/build/src/pa/ffi.c	47;"	d	file:
fldw	libffi/build/src/pa/ffi.c	43;"	d	file:
flip	rts/TraverseHeap.c	/^StgWord flip = 0;$/;"	v
float_va_fn	libffi/build/testsuite/libffi.call/float_va.c	/^double float_va_fn(unsigned int x, double y,...)$/;"	f
floating	libffi/build/testsuite/libffi.call/float.c	/^static int floating(int a, float b, double c, long double d)$/;"	f	file:
floating_1	libffi/build/testsuite/libffi.call/float3.c	/^static double floating_1(float a, double b, long double c)$/;"	f	file:
floating_2	libffi/build/testsuite/libffi.call/float3.c	/^static double floating_2(long double a, double b, float c)$/;"	f	file:
flushCount	rts/eventlog/EventLog.c	/^static int flushCount;$/;"	v	file:
flushEventLog	rts/eventlog/EventLog.c	/^flushEventLog(void)$/;"	f
flushEventLogFile	rts/eventlog/EventLogWriter.c	/^flushEventLogFile(void)$/;"	f	file:
flushExec	rts/sm/Storage.c	/^void flushExec (W_ len, AdjustorExecutable exec_addr)$/;"	f
flushStdHandles	rts/RtsStartup.c	/^static void flushStdHandles(void)$/;"	f	file:
flushTrace	rts/Trace.c	/^void flushTrace (void)$/;"	f
flush_icache	libffi/build/src/powerpc/ffi_darwin.c	/^flush_icache(char *addr)$/;"	f	file:
flush_icache	libffi/build/src/powerpc/ffi_linux64.c	/^flush_icache (char *wraddr, char *xaddr, int size)$/;"	f	file:
flush_icache	libffi/build/src/powerpc/ffi_sysv.c	/^flush_icache (char *wraddr, char *xaddr, int size)$/;"	f	file:
flush_input_console__	libraries/base/cbits/consUtils.c	/^flush_input_console__(int fd)$/;"	f
flush_range	libffi/build/src/powerpc/ffi_darwin.c	/^flush_range(char * addr1, int size)$/;"	f	file:
flush_stdout	testsuite/tests/ffi/should_run/ffi005_c.c	/^void flush_stdout(void)$/;"	f
flush_stdout	testsuite/tests/rts/T5423_c.c	/^void flush_stdout(void)$/;"	f
fm	libffi/build/src/dlmalloc.c	4356;"	d	file:
fn	libffi/build/src/x86/ffi.c	/^  void (*fn)(void);	\/* 8 *\/$/;"	m	struct:call_frame	file:
fn	libffi/build/src/x86/ffiw64.c	/^  UINT64 fn;		\/* 16 *\/$/;"	m	struct:win64_call_frame	file:
fn	testsuite/tests/ffi/should_run/T4221_c.c	/^  hs_function_ptr fn;$/;"	m	struct:__anon57	file:
fn_blob	testsuite/tests/ffi/should_run/T4221_c.c	/^} fn_blob;$/;"	t	typeref:struct:__anon57	file:
fonttab	utils/hp2ps/Dimensions.c	/^static floatish fonttab[] = {$/;"	v	file:
foo	libffi/build/testsuite/libffi.call/many2.c	/^foo (uint8_t a, uint8_t b, uint8_t c, uint8_t d,$/;"	f
foo	testsuite/tests/cabal/cabal01/c_src/hello.c	/^int foo () {return 9;}$/;"	f
foo	testsuite/tests/driver/recomp004/c1.c	/^void foo(void) {$/;"	f
foo	testsuite/tests/driver/recomp004/c2.c	/^void foo(void) {$/;"	f
foo	testsuite/tests/ffi/should_run/T12614_c.c	/^void foo(int a, int b, int c, int d, int e, int f, int g, int h) {$/;"	f
foo	testsuite/tests/ffi/should_run/T17471_c.c	/^int foo() {$/;"	f
foo	testsuite/tests/ffi/should_run/ffi_parsing_001_c.c	/^int foo(void) {$/;"	f
foo	testsuite/tests/ghci/linking/dyn/A.c	/^EXPORT int foo()$/;"	f
foo	testsuite/tests/ghci/linking/dyn/big-obj-c.c	/^int foo()$/;"	f
foo	testsuite/tests/rts/T12031/bar.c	/^int foo = 0;$/;"	v
foo	testsuite/tests/rts/T12771/foo.c	/^int foo ()$/;"	f
foo	testsuite/tests/rts/T12771/foo_dll.c	/^int foo()$/;"	f
foo	testsuite/tests/rts/T13082/foo.c	/^int foo ()$/;"	f
foo	testsuite/tests/rts/T13082/foo_dll.c	/^int foo()$/;"	f
foo	testsuite/tests/rts/T14611/foo.c	/^int foo ()$/;"	f
foo	testsuite/tests/rts/T14611/foo_dll.c	/^int foo()$/;"	f
foo	testsuite/tests/rts/linker/libfoo_T2615.c	/^void foo() {}$/;"	f
foo	testsuite/tests/rts/linker/linker_error2.c	/^int foo(void)$/;"	f
foo	testsuite/tests/rts/linker/section_alignment.c	/^int foo = 42;       \/* goes to __data, but __data gets page aligned as$/;"	v
footprint	libffi/build/src/dlmalloc.c	/^  size_t     footprint;$/;"	m	struct:malloc_state	file:
fopen	libraries/base/cbits/fs.c	/^FILE *FS(fopen) (const char* filename, const char* mode)$/;"	f
fopen	rts/fs.c	/^FILE *FS(fopen) (const char* filename, const char* mode)$/;"	f
fopen	utils/fs/fs.c	/^FILE *FS(fopen) (const char* filename, const char* mode)$/;"	f
fopen	utils/lndir/fs.c	/^FILE *FS(fopen) (const char* filename, const char* mode)$/;"	f
fopen	utils/unlit/fs.c	/^FILE *FS(fopen) (const char* filename, const char* mode)$/;"	f
force	utils/lndir/lndir.c	/^int force=0;$/;"	v
forces	nofib/real/fem/inC/internalforce.c	/^forces() {$/;"	f
fordblks	libffi/build/src/dlmalloc.c	/^  MALLINFO_FIELD_TYPE fordblks; \/* total free space *\/$/;"	m	struct:mallinfo	file:
foreignExportStablePtr	rts/Linker.c	/^StgStablePtr foreignExportStablePtr (StgPtr p)$/;"	f
forkChdirFailed	libraries/process/cbits/runProcess.c	44;"	d	file:
forkExecFailed	libraries/process/cbits/runProcess.c	45;"	d	file:
forkGetpwuidFailed	libraries/process/cbits/runProcess.c	47;"	d	file:
forkInitgroupsFailed	libraries/process/cbits/runProcess.c	48;"	d	file:
forkOS_createThread	rts/posix/OSThreads.c	/^forkOS_createThread ( HsStablePtr entry )$/;"	f
forkOS_createThread	rts/posix/OSThreads.c	/^forkOS_createThread ( HsStablePtr entry STG_UNUSED )$/;"	f
forkOS_createThread	rts/win32/OSThreads.c	/^forkOS_createThread ( HsStablePtr entry )$/;"	f
forkOS_createThread	rts/win32/OSThreads.c	/^forkOS_createThread ( HsStablePtr entry STG_UNUSED )$/;"	f
forkOS_createThreadWrapper	rts/posix/OSThreads.c	/^forkOS_createThreadWrapper ( void * entry )$/;"	f	file:
forkOS_createThreadWrapper	rts/win32/OSThreads.c	/^forkOS_createThreadWrapper ( void * entry )$/;"	f	file:
forkProcess	rts/Schedule.c	/^forkProcess(HsStablePtr *entry$/;"	f
forkSetgidFailed	libraries/process/cbits/runProcess.c	37;"	d	file:
forkSetuidFailed	libraries/process/cbits/runProcess.c	38;"	d	file:
format_time	libraries/time/test/unix/Test/Format/FormatStuff.c	/^size_t format_time ($/;"	f
four_parts	nofib/imaginary/paraffins/paraffins.c	/^  struct four_parts$/;"	s	file:
fp	libffi/build/src/arm/ffi.c	/^  void *fp;$/;"	m	struct:call_frame	file:
fp	nofib/real/fem/inC/fem.c	/^FILE *fp;$/;"	v
fp_regs	libffi/build/src/ia64/ffi.c	/^  fpreg fp_regs[8];	\/* Contents of 8 fp arg registers.  *\/$/;"	m	struct:ia64_args	file:
fpr_args	libffi/build/src/s390/ffi.c	/^  unsigned long long fpr_args[4];$/;"	m	struct:call_frame	file:
fpreg	libffi/build/src/ia64/ffi.c	/^} fpreg;$/;"	t	typeref:struct:__anon2	file:
fpreset	rts/RtsStartup.c	/^void fpreset(void) {$/;"	f
fprintCCS	rts/Profiling.c	/^fprintCCS( FILE *f, CostCentreStack *ccs )$/;"	f
fprintCCS_stderr	rts/Profiling.c	/^fprintCCS_stderr (CostCentreStack *ccs, StgClosure *exception, StgTSO *tso)$/;"	f
fprintCallStack	rts/Profiling.c	/^static bool fprintCallStack (CostCentreStack *ccs)$/;"	f	file:
fprintHeader	rts/ProfilerReport.c	/^fprintHeader( FILE *prof_file, uint32_t max_label_len, uint32_t max_module_len,$/;"	f	file:
fprint_ccs	rts/ProfHeap.c	/^fprint_ccs(FILE *fp, CostCentreStack *ccs, uint32_t max_length)$/;"	f	file:
fps_count	libraries/bytestring/cbits/fpstring.c	/^unsigned long fps_count(unsigned char *p, unsigned long len, unsigned char w) {$/;"	f
fps_intersperse	libraries/bytestring/cbits/fpstring.c	/^void fps_intersperse(unsigned char *q,$/;"	f
fps_maximum	libraries/bytestring/cbits/fpstring.c	/^unsigned char fps_maximum(unsigned char *p, unsigned long len) {$/;"	f
fps_memcpy_offsets	libraries/bytestring/cbits/fpstring.c	/^void * fps_memcpy_offsets(void       *dst, unsigned long dst_off,$/;"	f
fps_minimum	libraries/bytestring/cbits/fpstring.c	/^unsigned char fps_minimum(unsigned char *p, unsigned long  len) {$/;"	f
fps_reverse	libraries/bytestring/cbits/fpstring.c	/^void fps_reverse(unsigned char *q, unsigned char *p, unsigned long n) {$/;"	f
frame_size	rts/Adjustor.c	/^    StgInt          frame_size;$/;"	m	struct:AdjustorStub	file:
free	nofib/imaginary/paraffins/paraffins.c	/^static char *free, *limit;$/;"	v	file:
free	rts/Arena.c	/^    StgWord *free;              \/\/ ptr to next free byte in current block$/;"	m	struct:_Arena	file:
freeAllMBlocks	rts/sm/MBlock.c	/^freeAllMBlocks(void)$/;"	f
freeArgv	rts/RtsFlags.c	/^static void freeArgv(int argc, char *argv[])$/;"	f	file:
freeCapabilities	rts/Capability.c	/^freeCapabilities (void)$/;"	f
freeCapability	rts/Capability.c	/^freeCapability (Capability *cap)$/;"	f	file:
freeChain	rts/sm/BlockAlloc.c	/^freeChain(bdescr *bd)$/;"	f
freeChain_lock	rts/sm/BlockAlloc.c	/^freeChain_lock(bdescr *bd)$/;"	f
freeChain_lock_max	rts/sm/NonMovingSweep.c	/^static void freeChain_lock_max(bdescr *bd, int max_dur)$/;"	f	file:
freeChain_sync	rts/sm/GCUtils.c	/^freeChain_sync(bdescr *bd)$/;"	f
freeDCElem	libraries/Cabal/cabal-testsuite/PackageTests/Regression/T5309/memoized-tcm/dynamicCharacterOperations.c	/^void freeDCElem( const dcElement_t *p ) { free( p->element ); }$/;"	f
freeDynChar	libraries/Cabal/cabal-testsuite/PackageTests/Regression/T5309/memoized-tcm/dynamicCharacterOperations.c	/^void freeDynChar( dynChar_t *p ) { free( p->dynChar ); }$/;"	f
freeEra	rts/ProfHeap.c	/^freeEra(Census *census)$/;"	f
freeEventLogging	rts/eventlog/EventLog.c	/^freeEventLogging(void)$/;"	f
freeExec	rts/sm/Storage.c	/^void freeExec (AdjustorExecutable addr)$/;"	f
freeExec	rts/sm/Storage.c	/^void freeExec (void *addr)$/;"	f
freeExec	rts/sm/Storage.c	/^void freeExec(AdjustorExecutable exec)$/;"	f
freeFileLocking	rts/FileLock.c	/^freeFileLocking(void)$/;"	f
freeFullProgArgv	rts/RtsFlags.c	/^freeFullProgArgv (void)$/;"	f
freeGcThreads	rts/sm/GC.c	/^freeGcThreads (void)$/;"	f
freeGot	rts/linker/MachO.c	/^freeGot(ObjectCode * oc) {$/;"	f
freeGot	rts/linker/elf_got.c	/^freeGot(ObjectCode * oc) {$/;"	f
freeGroup	rts/sm/BlockAlloc.c	/^freeGroup(bdescr *p)$/;"	f
freeGroup_lock	rts/sm/BlockAlloc.c	/^freeGroup_lock(bdescr *p)$/;"	f
freeGroup_sync	rts/sm/GCUtils.c	/^freeGroup_sync(bdescr *bd)$/;"	f
freeHashList	rts/Hash.c	/^freeHashList (HashTable *table, HashList *hl)$/;"	f	file:
freeHashTable	rts/Hash.c	/^freeHashTable(HashTable *table, void (*freeDataFun)(void *) )$/;"	f
freeHaskellFunctionPtr	rts/Adjustor.c	/^freeHaskellFunctionPtr(void* ptr)$/;"	f
freeHeapProfiling	rts/ProfHeap.c	/^void freeHeapProfiling (void)$/;"	f
freeHpcModuleInfo	rts/Hpc.c	/^freeHpcModuleInfo (HpcModuleInfo *mod)$/;"	f	file:
freeList	rts/Hash.c	/^    HashList *freeList;         \/* free list of HashLists *\/$/;"	m	struct:hashtable	file:
freeLock	rts/FileLock.c	/^freeLock(void *lock)$/;"	f	file:
freeMBlocks	rts/sm/MBlock.c	/^freeMBlocks(void *addr, uint32_t n)$/;"	f
freeMarkQueue	rts/sm/NonMovingMark.c	/^void freeMarkQueue (MarkQueue *queue)$/;"	f
freeMyTask	rts/Task.c	/^void freeMyTask (void)$/;"	f
freeOCSectionIndices	rts/CheckUnload.c	/^static void freeOCSectionIndices(OCSectionIndices *section_indices)$/;"	f	file:
freeObjectCode	rts/Linker.c	/^void freeObjectCode (ObjectCode *oc)$/;"	f
freeOcStablePtrs	rts/Linker.c	/^static void freeOcStablePtrs (ObjectCode *oc)$/;"	f	file:
freeOldSPTs	rts/StablePtr.c	/^freeOldSPTs(void)$/;"	f	file:
freePreloadObjectFile	rts/Linker.c	/^freePreloadObjectFile (ObjectCode *oc)$/;"	f	file:
freePreloadObjectFile_PEi386	rts/linker/PEi386.c	/^void freePreloadObjectFile_PEi386(ObjectCode *oc)$/;"	f
freeProddableBlocks	rts/Linker.c	/^void freeProddableBlocks (ObjectCode *oc)$/;"	f
freeProfiling	rts/Profiling.c	/^freeProfiling (void)$/;"	f
freeProgArgv	rts/RtsFlags.c	/^freeProgArgv(void)$/;"	f	file:
freeProgEnvv	rts/posix/GetEnv.c	/^void freeProgEnvv(int envc STG_UNUSED, char *envv[] STG_UNUSED) {$/;"	f
freeProgEnvv	rts/win32/GetEnv.c	/^void freeProgEnvv(int envc, char *envv[]) {$/;"	f
freeRtsArgs	rts/RtsFlags.c	/^void freeRtsArgs(void)$/;"	f
freeRtsArgv	rts/RtsFlags.c	/^freeRtsArgv(void)$/;"	f	file:
freeScheduler	rts/Schedule.c	/^freeScheduler( void )$/;"	f
freeSegments	rts/Linker.c	/^void freeSegments (ObjectCode *oc)$/;"	f
freeSignalHandlers	rts/posix/Signals.c	/^freeSignalHandlers(void) {$/;"	f
freeSignalHandlers	rts/win32/ConsoleHandler.c	/^freeSignalHandlers(void) {$/;"	f
freeSnEntry	rts/StableName.c	/^freeSnEntry(snEntry *sn)$/;"	f
freeSpEntry	rts/StablePtr.c	/^freeSpEntry(spEntry *sp)$/;"	f
freeSparkPool	rts/Sparks.c	/^freeSparkPool (SparkPool *pool)$/;"	f
freeSptEntry	rts/StaticPtrTable.c	/^static void freeSptEntry(void* entry) {$/;"	f	file:
freeStablePtr	rts/StablePtr.c	/^freeStablePtr(StgStablePtr sp)$/;"	f
freeStablePtrUnsafe	rts/StablePtr.c	/^freeStablePtrUnsafe(StgStablePtr sp)$/;"	f
freeStorage	rts/sm/Storage.c	/^freeStorage (bool free_heap)$/;"	f
freeStubs	rts/linker/MachO.c	/^freeStubs(Section * section) {$/;"	f
freeStubs	rts/linker/elf_plt.c	/^freeStubs(Section * section) {$/;"	f
freeTask	rts/Task.c	/^freeTask (Task *task)$/;"	f	file:
freeTaskManager	rts/Task.c	/^freeTaskManager (void)$/;"	f
freeThreadLabelTable	rts/ThreadLabels.c	/^freeThreadLabelTable(void)$/;"	f
freeThreadLocalKey	rts/posix/OSThreads.c	/^freeThreadLocalKey (ThreadLocalKey *key)$/;"	f
freeThreadLocalKey	rts/win32/OSThreads.c	/^freeThreadLocalKey (ThreadLocalKey *key)$/;"	f
freeThreadingResources	rts/posix/OSThreads.c	/^void freeThreadingResources (void) { \/* nothing *\/ }$/;"	f
freeThreadingResources	rts/win32/OSThreads.c	/^void freeThreadingResources (void) { \/* nothing *\/ }$/;"	f
freeThreadingResources	rts/win32/OSThreads.c	/^void freeThreadingResources (void)$/;"	f
freeTracing	rts/Trace.c	/^void freeTracing (void)$/;"	f
freeWSDeque	rts/WSDeque.c	/^freeWSDeque (WSDeque *q)$/;"	f
freeWin32ProgArgv	rts/RtsFlags.c	/^freeWin32ProgArgv (void)$/;"	f
free_RTSSummaryStats	rts/Stats.c	/^static void free_RTSSummaryStats(RTSSummaryStats * sum)$/;"	f	file:
free_available	rts/Pool.c	/^static void free_available(Pool *pool, uint32_t size) {$/;"	f	file:
free_blocks	rts/win32/OSMem.c	/^static block_rec* free_blocks = NULL;$/;"	v	file:
free_count	libffi/build/src/closures.c	/^  uint16_t free_count;$/;"	m	struct:ffi_trampoline_table	file:
free_fn	rts/Pool.c	/^    free_thing_fn free_fn;$/;"	m	struct:Pool_	file:
free_fn	testsuite/tests/ffi/should_run/T4221_c.c	/^  void (*free_fn)(hs_function_ptr);$/;"	m	struct:__anon57	file:
free_fn_blob	testsuite/tests/ffi/should_run/T4221_c.c	/^void free_fn_blob(fn_blob* dead_blob) {$/;"	f
free_list	libffi/build/src/closures.c	/^  ffi_trampoline_table_entry *free_list;$/;"	m	struct:ffi_trampoline_table	file:
free_list	rts/sm/BlockAlloc.c	/^static bdescr *free_list[MAX_NUMA_NODES][NUM_FREE_LISTS];$/;"	v	file:
free_list	rts/sm/MBlock.c	/^typedef struct free_list {$/;"	s	file:
free_list	rts/sm/MBlock.c	/^} free_list;$/;"	t	typeref:struct:free_list	file:
free_list_head	rts/sm/MBlock.c	/^static free_list *free_list_head;$/;"	v	file:
free_list_insert	rts/sm/BlockAlloc.c	/^free_list_insert (uint32_t node, bdescr *bd)$/;"	f
free_list_pool	libffi/build/src/closures.c	/^  ffi_trampoline_table_entry *free_list_pool;$/;"	m	struct:ffi_trampoline_table	file:
free_mblock_list	rts/sm/BlockAlloc.c	/^static bdescr *free_mblock_list[MAX_NUMA_NODES];$/;"	v	file:
free_mega_group	rts/sm/BlockAlloc.c	/^free_mega_group (bdescr *mg)$/;"	f	file:
free_nonmoving_allocator	rts/sm/NonMoving.c	/^static void free_nonmoving_allocator(struct NonmovingAllocator *alloc)$/;"	f	file:
free_page	rts/linker/M32Alloc.c	/^    } free_page;$/;"	m	union:m32_page_t::__anon38	typeref:struct:m32_page_t::__anon38::__anon40	file:
free_stg_trec_chunk	rts/STM.c	/^static void free_stg_trec_chunk(Capability *cap,$/;"	f	file:
free_stg_trec_header	rts/STM.c	/^static void free_stg_trec_header(Capability *cap,$/;"	f	file:
free_stg_tvar_watch_queue	rts/STM.c	/^static void free_stg_tvar_watch_queue(Capability *cap,$/;"	f	file:
freeptrfun_t	testsuite/tests/rts/linker/unload_multiple_objs/linker_unload_multiple_objs.c	/^typedef void freeptrfun_t(HsStablePtr);$/;"	t	file:
fsmblks	libffi/build/src/dlmalloc.c	/^  MALLINFO_FIELD_TYPE fsmblks;  \/* always 0 *\/$/;"	m	struct:mallinfo	file:
fstd	libffi/build/src/pa/ffi.c	49;"	d	file:
fstw	libffi/build/src/pa/ffi.c	45;"	d	file:
ftToPosix	utils/fs/fs.c	/^static __time64_t ftToPosix(FILETIME ft)$/;"	f	file:
full_prog_argc	rts/RtsFlags.c	/^int     full_prog_argc = 0;    \/* an "int" so as to match normal "argc" *\/$/;"	v
full_prog_argv	rts/RtsFlags.c	/^char  **full_prog_argv = NULL;$/;"	v
fun	libffi/build/src/x86/ffi.c	/^  void (*fun)(ffi_cif*,void*,void**,void*);	\/* 32 *\/$/;"	m	struct:closure_frame	file:
fun_t	testsuite/tests/rts/linker/runner.c	/^typedef long (*fun_t)(void);$/;"	t	file:
func	libffi/build/src/closures.c	/^  int (*func)(const char *);$/;"	m	struct:__anon1	file:
fwopen	libraries/base/cbits/fs.c	/^FILE *FS(fwopen) (const wchar_t* filename, const wchar_t* mode)$/;"	f
fwopen	rts/fs.c	/^FILE *FS(fwopen) (const wchar_t* filename, const wchar_t* mode)$/;"	f
fwopen	utils/fs/fs.c	/^FILE *FS(fwopen) (const wchar_t* filename, const wchar_t* mode)$/;"	f
fwopen	utils/lndir/fs.c	/^FILE *FS(fwopen) (const wchar_t* filename, const wchar_t* mode)$/;"	f
fwopen	utils/unlit/fs.c	/^FILE *FS(fwopen) (const wchar_t* filename, const wchar_t* mode)$/;"	f
g	libffi/build/testsuite/libffi.call/cls_64byte.c	/^  double g;$/;"	m	struct:cls_struct_64byte	file:
g	libffi/build/testsuite/libffi.call/cls_7_1_byte.c	/^  unsigned char g;$/;"	m	struct:cls_struct_7byte	file:
g	libffi/build/testsuite/libffi.call/cls_align_longdouble_split.c	/^  long double g;$/;"	m	struct:cls_struct_align	file:
g	libffi/build/testsuite/libffi.call/cls_align_longdouble_split2.c	/^  long double g;$/;"	m	struct:cls_struct_align	file:
g	libffi/build/testsuite/libffi.call/huge_struct.c	/^	uint64_t	g;$/;"	m	struct:BigStruct	file:
g	libffi/build/testsuite/libffi.call/stret_large.c	/^	double g;$/;"	m	struct:struct_108byte	file:
g	libffi/build/testsuite/libffi.call/stret_large2.c	/^	double g;$/;"	m	struct:struct_116byte	file:
g	libffi/build/testsuite/libffi.call/stret_medium.c	/^	double g;$/;"	m	struct:struct_72byte	file:
g	libffi/build/testsuite/libffi.call/stret_medium2.c	/^	double g;$/;"	m	struct:struct_72byte	file:
g	nofib/gc/fulsom/raster/raster.c	/^  int r,g,b;$/;"	m	struct:pixm	file:
g	nofib/real/fulsom/raster/raster.c	/^  int r,g,b;$/;"	m	struct:pixm	file:
g	testsuite/tests/ffi/should_run/fptr01_c.c	/^void g( HsInt *i )$/;"	f
g0	rts/sm/Storage.c	/^generation *g0          = NULL; \/* generation 0, for convenience *\/$/;"	v
g0_pcnt_kept	rts/sm/GC.c	/^static W_ g0_pcnt_kept = 30; \/\/ percentage of g0 live at last minor GC$/;"	v	file:
g_one	rts/xxhash.c	/^    static const int g_one = 1;$/;"	v	file:
g_retainerTraverseState	rts/RetainerProfile.c	/^traverseState g_retainerTraverseState;$/;"	v
g_traversalDebugLevel	rts/TraverseHeap.c	/^unsigned int g_traversalDebugLevel = 0;$/;"	v
gap_size	rts/ThreadPaused.c	/^struct stack_gap { StgWord gap_size; struct stack_gap *next_gap; };$/;"	m	struct:stack_gap	file:
gcCAFs	rts/sm/GC.c	/^void gcCAFs(void)$/;"	f
gcStableNameTable	rts/StableName.c	/^gcStableNameTable( void )$/;"	f
gcThreadLiveBlocks	rts/sm/Storage.c	/^W_ gcThreadLiveBlocks (uint32_t i, uint32_t g)$/;"	f
gcThreadLiveWords	rts/sm/Storage.c	/^W_ gcThreadLiveWords (uint32_t i, uint32_t g)$/;"	f
gcWorkerThread	rts/sm/GC.c	/^gcWorkerThread (Capability *cap)$/;"	f
gc_alloc_block_sync	rts/sm/GCUtils.c	/^SpinLock gc_alloc_block_sync;$/;"	v
gc_running_threads	rts/sm/GC.c	/^static volatile StgWord gc_running_threads;$/;"	v	file:
gc_threads	rts/sm/GC.c	/^gc_thread **gc_threads = NULL;$/;"	v
genBlocks	rts/sm/Sanity.c	/^genBlocks (generation *gen)$/;"	f	file:
genLiveBlocks	rts/sm/Storage.c	/^W_ genLiveBlocks (generation *gen)$/;"	f
genLiveWords	rts/sm/Storage.c	/^W_ genLiveWords (generation *gen)$/;"	f
genSym	compiler/cbits/genSym.c	/^HsInt genSym(void) {$/;"	f
gen_fem_model_data	nofib/real/fem/inC/read_data.c	/^gen_fem_model_data()$/;"	f
gen_map_mblocks	rts/posix/OSMem.c	/^gen_map_mblocks (W_ size)$/;"	f	file:
generateDump	rts/win32/veh_excn.c	/^void generateDump (EXCEPTION_POINTERS* pExceptionPointers)$/;"	f
generateStack	rts/win32/veh_excn.c	/^void generateStack (EXCEPTION_POINTERS* pExceptionPointers)$/;"	f
generations	rts/sm/Storage.c	/^generation *generations = NULL; \/* all the generations *\/$/;"	v
genericRaise	rts/RtsUtils.c	/^int genericRaise(int sig) {$/;"	f
genericWndProc	libraries/Win32/cbits/WndProc.c	/^LRESULT CALLBACK genericWndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f
generic_handler	rts/posix/Signals.c	/^generic_handler(int sig USED_IF_THREADS,$/;"	f	file:
generic_handler	rts/win32/ConsoleHandler.c	/^static BOOL WINAPI generic_handler(DWORD dwCtrlType)$/;"	f	file:
getAlignedMemory	rts/linker/PEi386.c	/^static uint8_t* getAlignedMemory($/;"	f	file:
getAlignedValue	rts/linker/PEi386.c	/^static size_t getAlignedValue($/;"	f	file:
getAllocatedMBlock	rts/sm/MBlock.c	/^static void *getAllocatedMBlock(free_list **start_iter, W_ startingAt)$/;"	f	file:
getAllocations	rts/Stats.c	/^uint64_t getAllocations( void )$/;"	f
getBacktraceFrameCb	rts/Libdw.c	/^static int getBacktraceFrameCb(Dwfl_Frame *frame, void *arg) {$/;"	f	file:
getCommittedMBlocks	rts/sm/MBlock.c	/^static void *getCommittedMBlocks(uint32_t n)$/;"	f	file:
getCostAndMedian	libraries/Cabal/cabal-testsuite/PackageTests/Regression/T5309/memoized-tcm/costMatrixWrapper.c	/^int getCostAndMedian(dcElement_t *elem1, dcElement_t *elem2, dcElement_t *retElem, costMatrix_p tcm) {$/;"	f
getDbl	testsuite/tests/ffi/should_run/T493_c.c	/^intfun_p getDbl(void)$/;"	f
getDelayTarget	rts/posix/Select.c	/^LowResTime getDelayTarget (HsInt us)$/;"	f
getErrorMessage	libraries/Win32/cbits/errors.c	/^LPTSTR getErrorMessage(DWORD err)$/;"	f
getExecutable	driver/utils/getLocation.c	/^char *getExecutable(void) {$/;"	f
getExecutablePath	driver/utils/getLocation.c	/^char *getExecutablePath(void) {$/;"	f
getFPUStateX86	testsuite/tests/rts/T7289/fp.c	/^getFPUStateX86 (void)$/;"	f	file:
getFinalDialog	libraries/Win32/cbits/diatemp.c	/^LPDLGTEMPLATE getFinalDialog(DIA_TEMPLATE* dt)$/;"	f
getFirstMBlock	rts/sm/MBlock.c	/^void * getFirstMBlock(void **state STG_UNUSED)$/;"	f
getFreshMBlocks	rts/sm/MBlock.c	/^static void *getFreshMBlocks(uint32_t n)$/;"	f	file:
getFullProgArgv	rts/RtsFlags.c	/^getFullProgArgv(int *argc, char **argv[])$/;"	f
getHeaderInfo	rts/linker/PEi386.c	/^COFF_HEADER_INFO* getHeaderInfo ( ObjectCode* oc )$/;"	f
getHeapProfBreakdown	rts/eventlog/EventLog.c	/^static HeapProfBreakdown getHeapProfBreakdown(void)$/;"	f	file:
getIOManagerEvent	rts/win32/ThrIOManager.c	/^getIOManagerEvent (void)$/;"	f
getLowResTimeOfDay	rts/posix/Select.c	/^static LowResTime getLowResTimeOfDay(void)$/;"	f	file:
getMBlock	rts/sm/MBlock.c	/^getMBlock(void)$/;"	f
getMBlockOnNode	rts/sm/MBlock.c	/^getMBlockOnNode(uint32_t node)$/;"	f
getMBlocks	rts/sm/MBlock.c	/^getMBlocks(uint32_t n)$/;"	f
getMBlocksOnNode	rts/sm/MBlock.c	/^getMBlocksOnNode(uint32_t node, uint32_t n)$/;"	f
getModuleFileName	driver/utils/dynwrapper.c	/^LPTSTR getModuleFileName(void) {$/;"	f
getMonotonicNSec	rts/posix/GetTime.c	/^StgWord64 getMonotonicNSec(void)$/;"	f
getMonotonicNSec	rts/win32/GetTime.c	/^getMonotonicNSec()$/;"	f
getNewNursery	rts/sm/Storage.c	/^getNewNursery (Capability *cap)$/;"	f
getNextMBlock	rts/sm/MBlock.c	/^void * getNextMBlock(void **state STG_UNUSED, void *mblock)$/;"	f
getNextMBlock	rts/sm/MBlock.c	/^void * getNextMBlock(void **state STG_UNUSED, void *p)$/;"	f
getNumberOfProcessors	rts/posix/OSThreads.c	/^getNumberOfProcessors (void)$/;"	f
getNumberOfProcessors	rts/posix/OSThreads.c	/^uint32_t getNumberOfProcessors (void)$/;"	f
getNumberOfProcessors	rts/win32/OSThreads.c	/^getNumberOfProcessors (void)$/;"	f
getNumberOfProcessors	rts/win32/OSThreads.c	/^uint32_t getNumberOfProcessors (void)$/;"	f
getNumberOfProcessorsGroups	rts/win32/OSThreads.c	/^getNumberOfProcessorsGroups (void)$/;"	f	file:
getObjectLoadStatus	rts/Linker.c	/^OStatus getObjectLoadStatus (pathchar *path)$/;"	f
getObjectLoadStatus_	rts/Linker.c	/^static OStatus getObjectLoadStatus_ (pathchar *path)$/;"	f	file:
getObjectType	rts/linker/PEi386.c	/^COFF_OBJ_TYPE getObjectType ( char* image, pathchar* fileName )$/;"	f
getOrSetKey	rts/Globals.c	/^static StgStablePtr getOrSetKey(StoreKey key, StgStablePtr ptr)$/;"	f	file:
getPageFaults	rts/posix/GetTime.c	/^getPageFaults(void)$/;"	f
getPageFaults	rts/win32/GetTime.c	/^getPageFaults(void)$/;"	f
getPageSize	rts/posix/OSMem.c	/^size_t getPageSize (void)$/;"	f
getPageSize	rts/win32/OSMem.c	/^size_t getPageSize (void)$/;"	f
getPhysicalMemorySize	rts/posix/OSMem.c	/^StgWord64 getPhysicalMemorySize (void)$/;"	f
getPhysicalMemorySize	rts/win32/OSMem.c	/^StgWord64 getPhysicalMemorySize (void)$/;"	f
getProcessCPUTime	rts/posix/GetTime.c	/^Time getProcessCPUTime(void)$/;"	f
getProcessCPUTime	rts/win32/GetTime.c	/^getProcessCPUTime(void)$/;"	f
getProcessElapsedTime	rts/posix/GetTime.c	/^Time getProcessElapsedTime(void)$/;"	f
getProcessElapsedTime	rts/win32/GetTime.c	/^getProcessElapsedTime(void)$/;"	f
getProcessExitCode	libraries/process/cbits/runProcess.c	/^getProcessExitCode (ProcHandle handle, int *pExitCode)$/;"	f
getProcessTimes	rts/posix/GetTime.c	/^void getProcessTimes(Time *user, Time *elapsed)$/;"	f
getProcessTimes	rts/win32/GetTime.c	/^getProcessTimes(Time *user, Time *elapsed)$/;"	f
getProcessorsCumulativeSum	rts/win32/OSThreads.c	/^getProcessorsCumulativeSum(void)$/;"	f	file:
getProcessorsDistribution	rts/win32/OSThreads.c	/^getProcessorsDistribution (void)$/;"	f	file:
getProgArgv	rts/RtsFlags.c	/^getProgArgv(int *argc, char **argv[])$/;"	f
getProgEnvv	rts/posix/GetEnv.c	/^void getProgEnvv(int *out_envc, char **out_envv[]) {$/;"	f
getProgEnvv	rts/win32/GetEnv.c	/^void getProgEnvv(int *out_envc, char **out_envv[]) {$/;"	f
getRTSStats	rts/Stats.c	/^void getRTSStats( RTSStats *s )$/;"	f
getRTSStatsEnabled	rts/Stats.c	/^int getRTSStatsEnabled( void )$/;"	f
getRetainerFrom	rts/RetainerProfile.c	/^getRetainerFrom( StgClosure *c )$/;"	f
getReusableMBlocks	rts/sm/MBlock.c	/^static void *getReusableMBlocks(uint32_t n)$/;"	f	file:
getSSEStateX86	testsuite/tests/rts/T7289/fp.c	/^getSSEStateX86 (void)$/;"	f	file:
getSectionAlignment	rts/linker/PEi386.c	/^static uint32_t getSectionAlignment($/;"	f	file:
getSectionKind_ELF	rts/linker/Elf.c	/^static SectionKind getSectionKind_ELF( Elf_Shdr *hdr, int *is_bss )$/;"	f	file:
getSectionKind_MachO	rts/linker/MachO.c	/^getSectionKind_MachO(MachOSection *section)$/;"	f
getStablePtr	rts/StablePtr.c	/^getStablePtr(StgPtr p)$/;"	f
getSymNumberOfAuxSymbols	rts/linker/PEi386.c	/^uint8_t getSymNumberOfAuxSymbols ( COFF_HEADER_INFO *info, COFF_symbol* sym )$/;"	f
getSymSectionNumber	rts/linker/PEi386.c	/^int32_t getSymSectionNumber ( COFF_HEADER_INFO *info, COFF_symbol* sym )$/;"	f
getSymShortName	rts/linker/PEi386.c	/^uint8_t* getSymShortName ( COFF_HEADER_INFO *info, COFF_symbol* sym )$/;"	f
getSymStorageClass	rts/linker/PEi386.c	/^uint8_t getSymStorageClass ( COFF_HEADER_INFO *info, COFF_symbol* sym )$/;"	f
getSymType	rts/linker/PEi386.c	/^uint16_t getSymType ( COFF_HEADER_INFO *info, COFF_symbol* sym )$/;"	f
getSymValue	rts/linker/PEi386.c	/^uint32_t getSymValue ( COFF_HEADER_INFO *info, COFF_symbol* sym )$/;"	f
getSymbolSize	rts/linker/PEi386.c	/^size_t getSymbolSize ( COFF_HEADER_INFO *info )$/;"	f
getTask	rts/Task.c	/^Task* getTask (void)$/;"	f
getTempFileNameErrorNo	libraries/base/cbits/Win32Utils.c	/^bool getTempFileNameErrorNo (wchar_t* pathName, wchar_t* prefix,$/;"	f
getThreadLocalVar	rts/posix/OSThreads.c	/^getThreadLocalVar (ThreadLocalKey *key)$/;"	f
getThreadLocalVar	rts/win32/OSThreads.c	/^getThreadLocalVar (ThreadLocalKey *key)$/;"	f
getToken	rts/STM.c	/^static void getToken(Capability *cap STG_UNUSED) {$/;"	f	file:
getToken	rts/STM.c	/^static void getToken(Capability *cap) {$/;"	f	file:
getTokenBatch	rts/STM.c	/^static void getTokenBatch(Capability *cap) {$/;"	f	file:
getTopHandlerThread	rts/TopHandler.c	/^StgTSO *getTopHandlerThread(void) {$/;"	f
getTraverseStackMaxSize	rts/TraverseHeap.c	/^getTraverseStackMaxSize(traverseState *ts)$/;"	f
getUTF8Args	rts/RtsFlags.c	/^char** getUTF8Args(int* argc)$/;"	f
getUnixEpochTime	rts/posix/GetTime.c	/^void getUnixEpochTime(StgWord64 *sec, StgWord32 *nsec)$/;"	f
getUnixEpochTime	rts/win32/GetTime.c	/^getUnixEpochTime(StgWord64 *sec, StgWord32 *nsec)$/;"	f
get_console_echo__	libraries/base/cbits/consUtils.c	/^get_console_echo__(int fd)$/;"	f
get_current_timezone_seconds	libraries/time/lib/cbits/HsTime.c	/^long int get_current_timezone_seconds (time_t t,int* pdst,char const* * pname)$/;"	f
get_deltat_conduct	nofib/spectral/simple/simple.c	/^double get_deltat_conduct(double theta_hat[MAXSIZE][MAXSIZE],double new_theta[MAXSIZE][MAXSIZE],$/;"	f
get_entry_for	rts/STM.c	/^static TRecEntry *get_entry_for(StgTRecHeader *trec, StgTVar *tvar, StgTRecHeader **in) {$/;"	f	file:
get_environ	rts/posix/GetEnv.c	/^static char** get_environ(void) { return *(_NSGetEnviron()); }$/;"	f	file:
get_environ	rts/posix/GetEnv.c	/^static char** get_environ(void) { return environ; }$/;"	f	file:
get_foot	libffi/build/src/dlmalloc.c	1748;"	d	file:
get_mstate_for	libffi/build/src/dlmalloc.c	2491;"	d	file:
get_n_capabilities	rts/eventlog/EventLog.c	/^get_n_capabilities(void)$/;"	f	file:
get_name_string	rts/linker/PEi386.c	/^get_name_string (uint8_t* name, ObjectCode* oc)$/;"	f
get_new_entry	rts/STM.c	/^static TRecEntry *get_new_entry(Capability *cap,$/;"	f	file:
get_segment_flags	libffi/build/src/dlmalloc.c	1960;"	d	file:
get_segment_flags	libffi/build/src/dlmalloc.c	1975;"	d	file:
get_shndx_table	rts/linker/Elf.c	/^get_shndx_table(Elf_Ehdr* ehdr)$/;"	f	file:
get_sym_name	rts/linker/PEi386.c	/^get_sym_name ( uint8_t* name, ObjectCode* oc )$/;"	f
get_threaded_info	rts/sm/Compact.c	/^get_threaded_info( P_ p )$/;"	f
get_unique_file_info	libraries/base/cbits/Win32Utils.c	/^int get_unique_file_info(int fd, HsWord64 *dev, HsWord64 *ino)$/;"	f
getnuvw	nofib/real/fem/inC/displacement.c	/^getnuvw(uvw,node,nuvw)$/;"	f
getrule	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ *getrule($/;"	f	file:
getterDef	utils/hsc2hs/cbits/utils.c	/^typedef HANDLE(*getterDef)(DWORD);$/;"	t	file:
getword	nofib/gc/fulsom/raster/raster.c	/^int getword()$/;"	f
getword	nofib/real/fulsom/raster/raster.c	/^int getword()$/;"	f
gflag	utils/hp2ps/Main.c	/^boolish gflag = 0;	\/* output suitable for previewer	*\/$/;"	v
gg	libffi/build/testsuite/libffi.call/huge_struct.c	/^	float		gg;$/;"	m	struct:BigStruct	file:
ghciInsertSymbolTable	rts/Linker.c	/^int ghciInsertSymbolTable($/;"	f
ghciLookupSymbolInfo	rts/Linker.c	/^HsBool ghciLookupSymbolInfo(StrHashTable *table,$/;"	f
ghciRemoveSymbolTable	rts/Linker.c	/^static void ghciRemoveSymbolTable(StrHashTable *table, const SymbolName* key,$/;"	f	file:
ghci_enquire	rts/Linker.c	/^void ghci_enquire(SymbolAddr* addr)$/;"	f
giveCapabilityToTask	rts/Capability.c	/^giveCapabilityToTask (Capability *cap USED_IF_DEBUG, Task *task)$/;"	f	file:
globalStoreLock	rts/Globals.c	/^Mutex globalStoreLock;$/;"	v
globalWorkToDo	rts/Capability.c	/^globalWorkToDo (void)$/;"	f
gm	libffi/build/src/dlmalloc.c	2118;"	d	file:
gotdate	utils/hp2ps/HpFile.c	/^static boolish gotdate = 0;                     \/* "DATE" read          *\/$/;"	v	file:
gotjob	utils/hp2ps/HpFile.c	/^static boolish gotjob = 0;                      \/* "JOB" read           *\/$/;"	v	file:
gotsampleunit	utils/hp2ps/HpFile.c	/^static boolish gotsampleunit = 0;               \/* "SAMPLE_UNIT" read   *\/$/;"	v	file:
gotvalueunit	utils/hp2ps/HpFile.c	/^static boolish gotvalueunit = 0;                \/* "VALUE_UNIT" read    *\/$/;"	v	file:
gp	rts/Adjustor.c	/^    StgWord64 gp;$/;"	m	struct:_IA64FunDesc	file:
gp_regs	libffi/build/src/ia64/ffi.c	/^  UINT64 gp_regs[8];	\/* Contents of 8 gp arg registers.  *\/$/;"	m	struct:ia64_args	file:
gpr	libffi/build/src/x86/ffi64.c	/^  UINT64 gpr[MAX_GPR_REGS];$/;"	m	struct:register_args	file:
gpr_args	libffi/build/src/s390/ffi.c	/^  unsigned long gpr_args[5];$/;"	m	struct:call_frame	file:
gpr_save	libffi/build/src/s390/ffi.c	/^  unsigned long gpr_save[9];$/;"	m	struct:call_frame	file:
grab_local_todo_block	rts/sm/GCUtils.c	/^grab_local_todo_block (gen_workspace *ws)$/;"	f
granularity	libffi/build/src/dlmalloc.c	/^  size_t granularity;$/;"	m	struct:malloc_params	file:
granularity_align	libffi/build/src/dlmalloc.c	2147;"	d	file:
graphheight	utils/hp2ps/Dimensions.c	/^floatish graphheight;$/;"	v
graphwidth	utils/hp2ps/Dimensions.c	/^floatish graphwidth;$/;"	v
graphx0	utils/hp2ps/Dimensions.c	/^floatish graphx0 = GRAPH_X0;$/;"	v
graphy0	utils/hp2ps/Dimensions.c	/^floatish graphy0 = GRAPH_Y0;$/;"	v
h	libffi/build/testsuite/libffi.call/cls_64byte.c	/^  double h;$/;"	m	struct:cls_struct_64byte	file:
h	libffi/build/testsuite/libffi.call/huge_struct.c	/^	int64_t		h;$/;"	m	struct:BigStruct	file:
h	libffi/build/testsuite/libffi.call/pyobjc-tc.c	/^	float h;$/;"	m	struct:Size	file:
h	libffi/build/testsuite/libffi.call/stret_large.c	/^	double h;$/;"	m	struct:struct_108byte	file:
h	libffi/build/testsuite/libffi.call/stret_large2.c	/^	double h;$/;"	m	struct:struct_116byte	file:
h	libffi/build/testsuite/libffi.call/stret_medium.c	/^	double h;$/;"	m	struct:struct_72byte	file:
h	libffi/build/testsuite/libffi.call/stret_medium2.c	/^	double h;$/;"	m	struct:struct_72byte	file:
h	testsuite/tests/ffi/should_run/fptr01_c.c	/^void h( HsInt *i )$/;"	f
hConsoleEvent	rts/win32/ConsoleHandler.c	/^static HANDLE hConsoleEvent = INVALID_HANDLE_VALUE;$/;"	v	file:
hExitEvent	rts/win32/IOManager.c	/^    HANDLE           hExitEvent;$/;"	m	struct:IOManagerState	file:
halloc	nofib/imaginary/paraffins/paraffins.c	/^halloc(n)$/;"	f
handle	rts/Linker.c	/^      void *handle;$/;"	m	struct:_OpenedSO	file:
handleProfTick	rts/Proftimer.c	/^handleProfTick(void)$/;"	f
handle_tick	rts/Timer.c	/^handle_tick(int unused STG_UNUSED)$/;"	f	file:
hasRoomForEvent	rts/eventlog/EventLog.c	/^StgBool hasRoomForEvent(EventsBuf *eb, EventTypeNum eNum)$/;"	f
hasRoomForVariableEvent	rts/eventlog/EventLog.c	/^StgBool hasRoomForVariableEvent(EventsBuf *eb, uint32_t payload_bytes)$/;"	f
has_room_for	rts/sm/CNF.c	/^has_room_for  (bdescr *bd, StgWord sizeW)$/;"	f
has_segment_link	libffi/build/src/dlmalloc.c	/^static int has_segment_link(mstate m, msegmentptr ss) {$/;"	f	file:
hash	rts/ProfHeap.c	/^    HashTable * hash;$/;"	m	struct:__anon44	file:
hash	rts/RetainerSet.c	25;"	d	file:
hashFingerprint	rts/StaticPtrTable.c	/^STATIC_INLINE int hashFingerprint(const HashTable *table, StgWord key) {$/;"	f
hashLock	rts/FileLock.c	/^STATIC_INLINE int hashLock(const HashTable *table, StgWord w)$/;"	f
hashStr	rts/Hash.c	/^hashStr(const HashTable *table, StgWord w)$/;"	f
hashTable	rts/RetainerSet.c	/^static RetainerSet *hashTable[HASH_TABLE_SIZE];$/;"	v	file:
hashWord	rts/Hash.c	/^hashWord(const HashTable *table, StgWord key)$/;"	f
hashlist	rts/Hash.c	/^typedef struct hashlist {$/;"	s	file:
hashtable	rts/Hash.c	/^struct hashtable {$/;"	s	file:
hashtable	utils/hp2ps/HpFile.c	/^static struct entry* hashtable[ N_HASH ];$/;"	v	typeref:struct:entry	file:
haskeline_FillConsoleAttribute	libraries/haskeline/cbits/win_console.c	/^BOOL haskeline_FillConsoleAttribute(HANDLE h, WORD a, DWORD l, COORD *p, LPDWORD n) {$/;"	f
haskeline_FillConsoleCharacter	libraries/haskeline/cbits/win_console.c	/^BOOL haskeline_FillConsoleCharacter(HANDLE h, TCHAR c, DWORD l, COORD *p, LPDWORD n) {$/;"	f
haskeline_SetPosition	libraries/haskeline/cbits/win_console.c	/^BOOL haskeline_SetPosition(HANDLE h, COORD* c) {$/;"	f
haskeline_bisearch	libraries/haskeline/cbits/h_wcwidth.c	/^static int haskeline_bisearch(wchar_t ucs, const struct interval *table, int max) {$/;"	f	file:
haskeline_iconv	libraries/haskeline/cbits/h_iconv.c	/^size_t haskeline_iconv(iconv_t cd, char **inbuf, size_t *inbytesleft,$/;"	f
haskeline_iconv_close	libraries/haskeline/cbits/h_iconv.c	/^void haskeline_iconv_close(iconv_t cd) {$/;"	f
haskeline_iconv_open	libraries/haskeline/cbits/h_iconv.c	/^iconv_t haskeline_iconv_open(const char *tocode, const char *fromcode) {$/;"	f
haskeline_mk_wcswidth	libraries/haskeline/cbits/h_wcwidth.c	/^int haskeline_mk_wcswidth(const wchar_t *pwcs, size_t n)$/;"	f
haskeline_mk_wcswidth_cjk	libraries/haskeline/cbits/h_wcwidth.c	/^int haskeline_mk_wcswidth_cjk(const wchar_t *pwcs, size_t n)$/;"	f
haskeline_mk_wcwidth	libraries/haskeline/cbits/h_wcwidth.c	/^int haskeline_mk_wcwidth(wchar_t ucs)$/;"	f
haskeline_mk_wcwidth_cjk	libraries/haskeline/cbits/h_wcwidth.c	/^int haskeline_mk_wcwidth_cjk(wchar_t ucs)$/;"	f
hblkhd	libffi/build/src/dlmalloc.c	/^  MALLINFO_FIELD_TYPE hblkhd;   \/* space in mmapped regions *\/$/;"	m	struct:mallinfo	file:
hblks	libffi/build/src/dlmalloc.c	/^  MALLINFO_FIELD_TYPE hblks;    \/* always 0 *\/$/;"	m	struct:mallinfo	file:
hdata	libraries/haskeline/examples/export/main.c	/^void *hdata;$/;"	v
head	libffi/build/src/dlmalloc.c	/^  size_t                    head;$/;"	m	struct:malloc_tree_chunk	file:
head	libffi/build/src/dlmalloc.c	/^  size_t               head;       \/* Size and inuse bits. *\/$/;"	m	struct:malloc_chunk	file:
head_bytearray	testsuite/tests/ffi/should_run/T16650a_c.c	/^uint8_t head_bytearray (uint8_t *arr) {$/;"	f
head_bytearray	testsuite/tests/ffi/should_run/UnliftedNewtypesByteArrayOffset_c.c	/^uint8_t head_bytearray (uint8_t *arr) {$/;"	f
heapCensus	rts/ProfHeap.c	/^void heapCensus (Time t)$/;"	f
heapCensusChain	rts/ProfHeap.c	/^heapCensusChain( Census *census, bdescr *bd )$/;"	f	file:
heapCensusCompactList	rts/ProfHeap.c	/^heapCensusCompactList(Census *census, bdescr *bd)$/;"	f	file:
heapCheckFail	rts/RtsUtils.c	/^heapCheckFail( void )$/;"	f
heapOverflow	rts/sm/GC.c	/^static void heapOverflow(void)$/;"	f	file:
heapProfObject	rts/ProfHeap.c	/^static void heapProfObject(Census *census, StgClosure *p, size_t size,$/;"	f	file:
heap_base	rts/win32/OSMem.c	/^static void* heap_base = NULL;$/;"	v	file:
heap_overflow	rts/Schedule.c	/^bool heap_overflow = false;$/;"	v
heap_view_closurePtrs	rts/Heap.c	/^StgMutArrPtrs *heap_view_closurePtrs(Capability *cap, StgClosure *closure) {$/;"	f
heap_view_closureSize	rts/Heap.c	/^StgWord heap_view_closureSize(StgClosure *closure) {$/;"	f
heap_view_closure_ptrs_in_large_bitmap	rts/Heap.c	/^heap_view_closure_ptrs_in_large_bitmap(StgClosure *ptrs[], StgWord *nptrs$/;"	f	file:
heap_view_closure_ptrs_in_pap_payload	rts/Heap.c	/^void heap_view_closure_ptrs_in_pap_payload(StgClosure *ptrs[], StgWord *nptrs$/;"	f
heat_flow	nofib/spectral/simple/simple.c	/^double heat_flow(double gamma[MAXSIZE][MAXSIZE],double new_theta[MAXSIZE][MAXSIZE],$/;"	f
hello	testsuite/tests/ffi/should_fail/UnsafeReenterC.c	/^void hello(void (*f)()) {$/;"	f
hello_a	testsuite/tests/ghci/T13786/T13786a.c	/^void hello_a() {$/;"	f
hello_b	testsuite/tests/ghci/T13786/T13786b.c	/^void hello_b() {$/;"	f
hfa_element_type	libffi/build/src/ia64/ffi.c	/^hfa_element_type (ffi_type *type, int nested)$/;"	f	file:
hfa_type_load	libffi/build/src/ia64/ffi.c	/^hfa_type_load (fpreg *fpaddr, int type, void *addr)$/;"	f	file:
hfa_type_size	libffi/build/src/ia64/ffi.c	/^hfa_type_size (int type)$/;"	f	file:
hfa_type_store	libffi/build/src/ia64/ffi.c	/^hfa_type_store (int type, void *addr, fpreg *fpaddr)$/;"	f	file:
hh	libffi/build/testsuite/libffi.call/huge_struct.c	/^	double		hh;$/;"	m	struct:BigStruct	file:
hi	testsuite/tests/quasiquotation/T14028C.c	/^void hi() {$/;"	f
homosapiens	nofib/shootout/fasta/fasta-c.c	/^amino homosapiens[] = {$/;"	v
hp_file	rts/ProfHeap.c	/^FILE *hp_file;$/;"	v
hp_filename	rts/ProfHeap.c	/^static char *hp_filename; \/* heap profile (hp2ps style) log file *\/$/;"	v	file:
hpc_inited	rts/Hpc.c	/^static int hpc_inited = 0;              \/\/ Have you started this component?$/;"	v	file:
hpc_pid	rts/Hpc.c	/^static pid_t hpc_pid = 0;               \/\/ pid of this process at hpc-boot time.$/;"	v	file:
hpfile	utils/hp2ps/Main.c	/^char *hpfile;$/;"	v
hpfp	utils/hp2ps/Main.c	/^FILE* hpfp;$/;"	v
hptr	rts/Adjustor.c	/^    StgStablePtr    hptr;$/;"	m	struct:AdjustorStub	file:
hs_and64	libraries/ghc-prim/cbits/longlong.c	/^HsWord64 hs_and64      (HsWord64 a, HsWord64 b) {return a & b;}$/;"	f
hs_atomic_add16	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_add16(StgWord x, StgWord val)$/;"	f
hs_atomic_add32	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_add32(StgWord x, StgWord val)$/;"	f
hs_atomic_add64	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_add64(StgWord x, StgWord64 val)$/;"	f
hs_atomic_add8	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_add8(StgWord x, StgWord val)$/;"	f
hs_atomic_and16	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_and16(StgWord x, StgWord val)$/;"	f
hs_atomic_and32	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_and32(StgWord x, StgWord val)$/;"	f
hs_atomic_and64	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_and64(StgWord x, StgWord64 val)$/;"	f
hs_atomic_and8	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_and8(StgWord x, StgWord val)$/;"	f
hs_atomic_nand16	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_nand16(StgWord x, StgWord val)$/;"	f
hs_atomic_nand32	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_nand32(StgWord x, StgWord val)$/;"	f
hs_atomic_nand64	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_nand64(StgWord x, StgWord64 val)$/;"	f
hs_atomic_nand8	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_nand8(StgWord x, StgWord val)$/;"	f
hs_atomic_or16	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_or16(StgWord x, StgWord val)$/;"	f
hs_atomic_or32	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_or32(StgWord x, StgWord val)$/;"	f
hs_atomic_or64	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_or64(StgWord x, StgWord64 val)$/;"	f
hs_atomic_or8	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_or8(StgWord x, StgWord val)$/;"	f
hs_atomic_sub16	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_sub16(StgWord x, StgWord val)$/;"	f
hs_atomic_sub32	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_sub32(StgWord x, StgWord val)$/;"	f
hs_atomic_sub64	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_sub64(StgWord x, StgWord64 val)$/;"	f
hs_atomic_sub8	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_sub8(StgWord x, StgWord val)$/;"	f
hs_atomic_xor16	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_xor16(StgWord x, StgWord val)$/;"	f
hs_atomic_xor32	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_xor32(StgWord x, StgWord val)$/;"	f
hs_atomic_xor64	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_xor64(StgWord x, StgWord64 val)$/;"	f
hs_atomic_xor8	libraries/ghc-prim/cbits/atomic.c	/^hs_atomic_xor8(StgWord x, StgWord val)$/;"	f
hs_atomicread16	libraries/ghc-prim/cbits/atomic.c	/^hs_atomicread16(StgWord x)$/;"	f
hs_atomicread32	libraries/ghc-prim/cbits/atomic.c	/^hs_atomicread32(StgWord x)$/;"	f
hs_atomicread64	libraries/ghc-prim/cbits/atomic.c	/^hs_atomicread64(StgWord x)$/;"	f
hs_atomicread8	libraries/ghc-prim/cbits/atomic.c	/^hs_atomicread8(StgWord x)$/;"	f
hs_atomicwrite16	libraries/ghc-prim/cbits/atomic.c	/^hs_atomicwrite16(StgWord x, StgWord val)$/;"	f
hs_atomicwrite32	libraries/ghc-prim/cbits/atomic.c	/^hs_atomicwrite32(StgWord x, StgWord val)$/;"	f
hs_atomicwrite64	libraries/ghc-prim/cbits/atomic.c	/^hs_atomicwrite64(StgWord x, StgWord64 val)$/;"	f
hs_atomicwrite8	libraries/ghc-prim/cbits/atomic.c	/^hs_atomicwrite8(StgWord x, StgWord val)$/;"	f
hs_bitrev16	libraries/ghc-prim/cbits/bitrev.c	/^hs_bitrev16(StgWord16 x)$/;"	f
hs_bitrev32	libraries/ghc-prim/cbits/bitrev.c	/^hs_bitrev32(StgWord32 x)$/;"	f
hs_bitrev64	libraries/ghc-prim/cbits/bitrev.c	/^hs_bitrev64(StgWord64 x)$/;"	f
hs_bitrev8	libraries/ghc-prim/cbits/bitrev.c	/^hs_bitrev8(StgWord x)$/;"	f
hs_bswap16	libraries/ghc-prim/cbits/bswap.c	/^hs_bswap16(StgWord16 x)$/;"	f
hs_bswap32	libraries/ghc-prim/cbits/bswap.c	/^hs_bswap32(StgWord32 x)$/;"	f
hs_bswap64	libraries/ghc-prim/cbits/bswap.c	/^hs_bswap64(StgWord64 x)$/;"	f
hs_clz16	libraries/ghc-prim/cbits/clz.c	/^hs_clz16(StgWord x)$/;"	f
hs_clz32	libraries/ghc-prim/cbits/clz.c	/^hs_clz32(StgWord x)$/;"	f
hs_clz64	libraries/ghc-prim/cbits/clz.c	/^hs_clz64(StgWord64 x)$/;"	f
hs_clz8	libraries/ghc-prim/cbits/clz.c	/^hs_clz8(StgWord x)$/;"	f
hs_cmpxchg16	libraries/ghc-prim/cbits/atomic.c	/^hs_cmpxchg16(StgWord x, StgWord old, StgWord new)$/;"	f
hs_cmpxchg32	libraries/ghc-prim/cbits/atomic.c	/^hs_cmpxchg32(StgWord x, StgWord old, StgWord new)$/;"	f
hs_cmpxchg64	libraries/ghc-prim/cbits/atomic.c	/^hs_cmpxchg64(StgWord x, StgWord64 old, StgWord64 new)$/;"	f
hs_cmpxchg8	libraries/ghc-prim/cbits/atomic.c	/^hs_cmpxchg8(StgWord x, StgWord old, StgWord new)$/;"	f
hs_ctz16	libraries/ghc-prim/cbits/ctz.c	/^hs_ctz16(StgWord x)$/;"	f
hs_ctz32	libraries/ghc-prim/cbits/ctz.c	/^hs_ctz32(StgWord x)$/;"	f
hs_ctz64	libraries/ghc-prim/cbits/ctz.c	/^hs_ctz64(StgWord64 x)$/;"	f
hs_ctz8	libraries/ghc-prim/cbits/ctz.c	/^hs_ctz8(StgWord x)$/;"	f
hs_eqInt64	libraries/ghc-prim/cbits/longlong.c	/^HsInt hs_eqInt64 (HsInt64 a, HsInt64 b) {return a == b;}$/;"	f
hs_eqWord64	libraries/ghc-prim/cbits/longlong.c	/^HsInt hs_eqWord64 (HsWord64 a, HsWord64 b) {return a == b;}$/;"	f
hs_exit	rts/RtsStartup.c	/^hs_exit(void)$/;"	f
hs_exit_	rts/RtsStartup.c	/^hs_exit_(bool wait_foreign)$/;"	f	file:
hs_exit_nowait	rts/RtsStartup.c	/^hs_exit_nowait(void)$/;"	f
hs_free_fun_ptr	rts/HsFFI.c	/^hs_free_fun_ptr(HsFunPtr fp)$/;"	f
hs_free_stable_ptr	rts/HsFFI.c	/^hs_free_stable_ptr(HsStablePtr sp)$/;"	f
hs_free_stable_ptr_unsafe	rts/HsFFI.c	/^hs_free_stable_ptr_unsafe(HsStablePtr sp)$/;"	f
hs_function_ptr	testsuite/tests/ffi/should_run/T4221_c.c	/^typedef double (*hs_function_ptr)(double);$/;"	t	file:
hs_geInt64	libraries/ghc-prim/cbits/longlong.c	/^HsInt hs_geInt64 (HsInt64 a, HsInt64 b) {return a >= b;}$/;"	f
hs_geWord64	libraries/ghc-prim/cbits/longlong.c	/^HsInt hs_geWord64 (HsWord64 a, HsWord64 b) {return a >= b;}$/;"	f
hs_gtInt64	libraries/ghc-prim/cbits/longlong.c	/^HsInt hs_gtInt64 (HsInt64 a, HsInt64 b) {return a >  b;}$/;"	f
hs_gtWord64	libraries/ghc-prim/cbits/longlong.c	/^HsInt hs_gtWord64 (HsWord64 a, HsWord64 b) {return a >  b;}$/;"	f
hs_hpc_module	rts/Hpc.c	/^hs_hpc_module(char *modName,$/;"	f
hs_hpc_rootModule	rts/Hpc.c	/^HpcModuleInfo *hs_hpc_rootModule(void) {$/;"	f
hs_iconv	libraries/base/cbits/iconv.c	/^size_t hs_iconv(iconv_t cd,$/;"	f
hs_iconv_close	libraries/base/cbits/iconv.c	/^int hs_iconv_close(iconv_t cd) {$/;"	f
hs_iconv_open	libraries/base/cbits/iconv.c	/^iconv_t hs_iconv_open(const char* tocode,$/;"	f
hs_init	rts/RtsStartup.c	/^hs_init(int *argc, char **argv[])$/;"	f
hs_init_count	rts/RtsStartup.c	/^static int hs_init_count = 0;$/;"	v	file:
hs_init_ghc	rts/RtsStartup.c	/^hs_init_ghc(int *argc, char **argv[], RtsConfig rts_config)$/;"	f
hs_init_with_rtsopts	rts/RtsStartup.c	/^hs_init_with_rtsopts(int *argc, char **argv[])$/;"	f
hs_int64ToInt	libraries/ghc-prim/cbits/longlong.c	/^HsInt    hs_int64ToInt    (HsInt64  i) {return (HsInt)    i;}$/;"	f
hs_int64ToWord64	libraries/ghc-prim/cbits/longlong.c	/^HsWord64 hs_int64ToWord64 (HsInt64  i) {return (HsWord64) i;}$/;"	f
hs_intToInt64	libraries/ghc-prim/cbits/longlong.c	/^HsInt64  hs_intToInt64    (HsInt    i) {return (HsInt64)  i;}$/;"	f
hs_leInt64	libraries/ghc-prim/cbits/longlong.c	/^HsInt hs_leInt64 (HsInt64 a, HsInt64 b) {return a <= b;}$/;"	f
hs_leWord64	libraries/ghc-prim/cbits/longlong.c	/^HsInt hs_leWord64 (HsWord64 a, HsWord64 b) {return a <= b;}$/;"	f
hs_lock_stable_ptr_table	rts/HsFFI.c	/^void hs_lock_stable_ptr_table (void)$/;"	f
hs_lock_stable_tables	rts/HsFFI.c	/^void hs_lock_stable_tables (void)$/;"	f
hs_ltInt64	libraries/ghc-prim/cbits/longlong.c	/^HsInt hs_ltInt64 (HsInt64 a, HsInt64 b) {return a <  b;}$/;"	f
hs_ltWord64	libraries/ghc-prim/cbits/longlong.c	/^HsInt hs_ltWord64 (HsWord64 a, HsWord64 b) {return a <  b;}$/;"	f
hs_main	rts/RtsMain.c	/^int hs_main ( int argc, char *argv[],       \/\/ program args$/;"	f
hs_main_t	driver/utils/dynwrapper.c	/^typedef int (*hs_main_t)(int , char **, StgClosure *, RtsConfig);$/;"	t	file:
hs_minusInt64	libraries/ghc-prim/cbits/longlong.c	/^HsInt64 hs_minusInt64  (HsInt64 a, HsInt64 b)   {return a - b;}$/;"	f
hs_neInt64	libraries/ghc-prim/cbits/longlong.c	/^HsInt hs_neInt64 (HsInt64 a, HsInt64 b) {return a != b;}$/;"	f
hs_neWord64	libraries/ghc-prim/cbits/longlong.c	/^HsInt hs_neWord64 (HsWord64 a, HsWord64 b) {return a != b;}$/;"	f
hs_negateInt64	libraries/ghc-prim/cbits/longlong.c	/^HsInt64 hs_negateInt64 (HsInt64 a)              {return -a;}$/;"	f
hs_not64	libraries/ghc-prim/cbits/longlong.c	/^HsWord64 hs_not64      (HsWord64 a)             {return ~a;}$/;"	f
hs_or64	libraries/ghc-prim/cbits/longlong.c	/^HsWord64 hs_or64       (HsWord64 a, HsWord64 b) {return a | b;}$/;"	f
hs_pdep16	libraries/ghc-prim/cbits/pdep.c	/^hs_pdep16(StgWord src, StgWord mask)$/;"	f
hs_pdep32	libraries/ghc-prim/cbits/pdep.c	/^hs_pdep32(StgWord src, StgWord mask)$/;"	f
hs_pdep64	libraries/ghc-prim/cbits/pdep.c	/^hs_pdep64(StgWord64 src, StgWord64 mask)$/;"	f
hs_pdep8	libraries/ghc-prim/cbits/pdep.c	/^hs_pdep8(StgWord src, StgWord mask)$/;"	f
hs_perform_gc	rts/HsFFI.c	/^hs_perform_gc(void)$/;"	f
hs_pext16	libraries/ghc-prim/cbits/pext.c	/^hs_pext16(StgWord src, StgWord mask)$/;"	f
hs_pext32	libraries/ghc-prim/cbits/pext.c	/^hs_pext32(StgWord src, StgWord mask)$/;"	f
hs_pext64	libraries/ghc-prim/cbits/pext.c	/^hs_pext64(StgWord64 src, StgWord64 mask)$/;"	f
hs_pext8	libraries/ghc-prim/cbits/pext.c	/^hs_pext8(StgWord src, StgWord mask)$/;"	f
hs_plusInt64	libraries/ghc-prim/cbits/longlong.c	/^HsInt64 hs_plusInt64   (HsInt64 a, HsInt64 b)   {return a + b;}$/;"	f
hs_popcnt	libraries/ghc-prim/cbits/popcnt.c	/^hs_popcnt(StgWord x)$/;"	f
hs_popcnt16	libraries/ghc-prim/cbits/popcnt.c	/^hs_popcnt16(StgWord x)$/;"	f
hs_popcnt32	libraries/ghc-prim/cbits/popcnt.c	/^hs_popcnt32(StgWord x)$/;"	f
hs_popcnt64	libraries/ghc-prim/cbits/popcnt.c	/^hs_popcnt64(StgWord64 x)$/;"	f
hs_popcnt8	libraries/ghc-prim/cbits/popcnt.c	/^hs_popcnt8(StgWord x)$/;"	f
hs_quotInt64	libraries/ghc-prim/cbits/longlong.c	/^HsInt64 hs_quotInt64   (HsInt64 a, HsInt64 b)   {return a \/ b;}$/;"	f
hs_quotWord64	libraries/ghc-prim/cbits/longlong.c	/^HsWord64 hs_quotWord64 (HsWord64 a, HsWord64 b) {return a \/ b;}$/;"	f
hs_remInt64	libraries/ghc-prim/cbits/longlong.c	/^HsInt64 hs_remInt64    (HsInt64 a, HsInt64 b)   {return a % b;}$/;"	f
hs_remWord64	libraries/ghc-prim/cbits/longlong.c	/^HsWord64 hs_remWord64  (HsWord64 a, HsWord64 b) {return a % b;}$/;"	f
hs_set_argv	rts/HsFFI.c	/^hs_set_argv(int argc, char *argv[])$/;"	f
hs_spt_insert	rts/StaticPtrTable.c	/^void hs_spt_insert(StgWord64 key[2], void *spe_closure) {$/;"	f
hs_spt_insert_stableptr	rts/StaticPtrTable.c	/^void hs_spt_insert_stableptr(StgWord64 key[2], StgStablePtr *entry) {$/;"	f
hs_spt_key_count	rts/StaticPtrTable.c	/^int hs_spt_key_count() {$/;"	f
hs_spt_keys	rts/StaticPtrTable.c	/^int hs_spt_keys(StgPtr keys[], int szKeys) {$/;"	f
hs_spt_lookup	rts/StaticPtrTable.c	/^StgPtr hs_spt_lookup(StgWord64 key[2]) {$/;"	f
hs_spt_remove	rts/StaticPtrTable.c	/^void hs_spt_remove(StgWord64 key[2]) {$/;"	f
hs_thread_done	rts/HsFFI.c	/^hs_thread_done(void)$/;"	f
hs_timesInt64	libraries/ghc-prim/cbits/longlong.c	/^HsInt64 hs_timesInt64  (HsInt64 a, HsInt64 b)   {return a * b;}$/;"	f
hs_try_putmvar	rts/RtsAPI.c	/^void hs_try_putmvar (\/* in *\/ int capability,$/;"	f
hs_uncheckedIShiftL64	libraries/ghc-prim/cbits/longlong.c	/^HsInt64  hs_uncheckedIShiftL64  (HsInt64 a,  HsInt b)    {return a << b;}$/;"	f
hs_uncheckedIShiftRA64	libraries/ghc-prim/cbits/longlong.c	/^HsInt64  hs_uncheckedIShiftRA64 (HsInt64 a,  HsInt b)    {return a >> b;}$/;"	f
hs_uncheckedIShiftRL64	libraries/ghc-prim/cbits/longlong.c	/^HsInt64  hs_uncheckedIShiftRL64 (HsInt64 a,  HsInt b)$/;"	f
hs_uncheckedShiftL64	libraries/ghc-prim/cbits/longlong.c	/^HsWord64 hs_uncheckedShiftL64   (HsWord64 a, HsInt b)    {return a << b;}$/;"	f
hs_uncheckedShiftRL64	libraries/ghc-prim/cbits/longlong.c	/^HsWord64 hs_uncheckedShiftRL64  (HsWord64 a, HsInt b)    {return a >> b;}$/;"	f
hs_unlock_stable_ptr_table	rts/HsFFI.c	/^void hs_unlock_stable_ptr_table (void)$/;"	f
hs_unlock_stable_tables	rts/HsFFI.c	/^void hs_unlock_stable_tables (void)$/;"	f
hs_word2float32	libraries/ghc-prim/cbits/word2float.c	/^hs_word2float32(StgWord x)$/;"	f
hs_word2float64	libraries/ghc-prim/cbits/word2float.c	/^hs_word2float64(StgWord x)$/;"	f
hs_word64ToInt64	libraries/ghc-prim/cbits/longlong.c	/^HsInt64  hs_word64ToInt64 (HsWord64 w) {return (HsInt64)  w;}$/;"	f
hs_word64ToWord	libraries/ghc-prim/cbits/longlong.c	/^HsWord   hs_word64ToWord  (HsWord64 w) {return (HsWord)   w;}$/;"	f
hs_wordToWord64	libraries/ghc-prim/cbits/longlong.c	/^HsWord64 hs_wordToWord64  (HsWord   w) {return (HsWord64) w;}$/;"	f
hs_xor64	libraries/ghc-prim/cbits/longlong.c	/^HsWord64 hs_xor64      (HsWord64 a, HsWord64 b) {return a ^ b;}$/;"	f
hsprimitive_memset_Word	testsuite/tests/simplCore/T9646/cbits/primitive-memops.c	/^void hsprimitive_memset_Word (HsWord *p, ptrdiff_t off, size_t n, HsWord x)$/;"	f
hw_alloc_blocks	rts/sm/BlockAlloc.c	/^W_ hw_alloc_blocks;  \/\/ high-water allocated blocks$/;"	v
i	libffi/build/testsuite/libffi.call/huge_struct.c	/^	float		i;$/;"	m	struct:BigStruct	file:
i	libffi/build/testsuite/libffi.call/stret_large.c	/^	double i;$/;"	m	struct:struct_108byte	file:
i	libffi/build/testsuite/libffi.call/stret_large2.c	/^	double i;$/;"	m	struct:struct_116byte	file:
i	libffi/build/testsuite/libffi.call/stret_medium.c	/^	double i;$/;"	m	struct:struct_72byte	file:
i	libffi/build/testsuite/libffi.call/stret_medium2.c	/^	long long i;$/;"	m	struct:struct_72byte	file:
i	libffi/build/testsuite/libffi.call/struct9.c	/^  int i;$/;"	m	struct:__anon19	file:
i	nofib/spectral/fft2/fft.c	/^  double i;$/;"	m	struct:__anon33	file:
i	testsuite/tests/ffi/should_run/capi_value_c.c	/^const int i = 23;$/;"	v
i	testsuite/tests/rts/atomicinc.c	/^StgWord i;$/;"	v
i	testsuite/tests/rts/atomicxchg.c	/^StgWord i;$/;"	v
i128	libffi/build/src/x86/ffi64.c	/^  UINT128 i128;$/;"	m	union:big_int_union	file:
i32	libffi/build/src/x86/ffi64.c	/^  UINT32 i32;$/;"	m	union:big_int_union	file:
i64	libffi/build/src/x86/ffi64.c	/^  UINT64 i64;$/;"	m	union:big_int_union	file:
ia64_args	libffi/build/src/ia64/ffi.c	/^struct ia64_args$/;"	s	file:
ialloc	libffi/build/src/dlmalloc.c	/^static void** ialloc(mstate m,$/;"	f	file:
id	nofib/shootout/reverse-complement/revcomp-c.c	/^   pthread_t id;$/;"	m	struct:work_s	file:
ident	utils/hp2ps/Reorder.c	/^    char* ident;$/;"	m	struct:order	file:
ident	utils/hp2ps/Shade.c	/^	char* ident;$/;"	m	struct:shade	file:
identity	rts/ProfHeap.c	/^    const void *identity;$/;"	m	struct:_counter	file:
identtable	utils/hp2ps/HpFile.c	/^struct entry** identtable;$/;"	v	typeref:struct:entry
idle_ticks_to_gc	rts/Timer.c	/^static int idle_ticks_to_gc = 0;$/;"	v	file:
ids	testsuite/tests/rts/testwsdeque.c	/^OSThreadId ids[THREADS];$/;"	v
idx2bit	libffi/build/src/dlmalloc.c	2351;"	d	file:
ieee	libraries/base/cbits/primFloat.c	/^   } ieee;$/;"	m	union:stg_ieee754_dbl	typeref:struct:stg_ieee754_dbl::__anon23	file:
ieee	libraries/base/cbits/primFloat.c	/^   } ieee;$/;"	m	union:stg_ieee754_flt	typeref:struct:stg_ieee754_flt::__anon21	file:
ieee_nan	libraries/base/cbits/primFloat.c	/^   } ieee_nan;$/;"	m	union:stg_ieee754_dbl	typeref:struct:stg_ieee754_dbl::__anon24	file:
ieee_nan	libraries/base/cbits/primFloat.c	/^   } ieee_nan;$/;"	m	union:stg_ieee754_flt	typeref:struct:stg_ieee754_flt::__anon22	file:
iflag	utils/hp2ps/Main.c	/^static int     iflag = 0;	\/* sort by identifier (3-way flag)      *\/$/;"	v	file:
ignoreCC	rts/Profiling.c	/^ignoreCC (CostCentre const *cc)$/;"	f
ignoreCCS	rts/Profiling.c	/^ignoreCCS (CostCentreStack const *ccs)$/;"	f
ignore_links	utils/lndir/lndir.c	/^int ignore_links = 0;           \/* -ignorelinks *\/$/;"	v
ignore_shebang	utils/unlit/unlit.c	/^static int ignore_shebang = 1; \/* Leave out shebang (#!) lines *\/$/;"	v	file:
ii	libffi/build/testsuite/libffi.call/huge_struct.c	/^	long double	ii;$/;"	m	struct:BigStruct	file:
ii	libffi/build/testsuite/libffi.call/nested_struct.c	/^  int ii;$/;"	m	struct:cls_struct_16byte2	file:
ii	libffi/build/testsuite/libffi.call/nested_struct1.c	/^  int ii;$/;"	m	struct:cls_struct_16byte2	file:
inc_running	rts/sm/GC.c	/^inc_running (void)$/;"	f	file:
index	libffi/build/src/dlmalloc.c	/^  bindex_t                  index;$/;"	m	struct:malloc_tree_chunk	file:
indices	rts/CheckUnload.c	/^    OCSectionIndex *indices;$/;"	m	struct:__anon35	file:
indirects	rts/linker/PEi386.c	/^static IndirectAddr* indirects = NULL;$/;"	v	file:
info	nofib/gc/fulsom/raster/raster.c	/^  int info;$/;"	m	struct:pix	file:
info	nofib/real/fulsom/raster/raster.c	/^  int info;$/;"	m	struct:pix	file:
info	rts/TraverseHeap.c	/^    stackPos info;$/;"	m	struct:stackElement_	file:
info_hdr_type	rts/Printer.c	/^info_hdr_type(const StgClosure *closure, char *res){$/;"	f
info_type	rts/Printer.c	/^info_type(const StgClosure *closure){$/;"	f
info_type_by_ip	rts/Printer.c	/^info_type_by_ip(const StgInfoTable *ip){$/;"	f
info_update_frame	rts/Printer.c	/^const char *info_update_frame(const StgClosure *closure)$/;"	f
inheritCosts	rts/Profiling.c	/^inheritCosts(CostCentreStack *ccs)$/;"	f	file:
initArray1	testsuite/tests/rts/linker/T5435_asm.c	/^static void initArray1(void)    { printf("initArray1\\n");   fflush(stdout); }$/;"	f	file:
initArray2	testsuite/tests/rts/linker/T5435_asm.c	/^static void initArray2(void)    { printf("initArray2\\n");   fflush(stdout); }$/;"	f	file:
initBlockAllocator	rts/sm/BlockAlloc.c	/^void initBlockAllocator(void)$/;"	f
initCapabilities	rts/Capability.c	/^void initCapabilities (void)$/;"	f
initCapability	rts/Capability.c	/^initCapability (Capability *cap, uint32_t i)$/;"	f	file:
initCondition	rts/posix/OSThreads.c	/^initCondition( Condition* pCond )$/;"	f
initCondition	rts/win32/OSThreads.c	/^initCondition( Condition* pCond )$/;"	f
initDefaultHandlers	rts/posix/Signals.c	/^initDefaultHandlers(void)$/;"	f
initDefaultHandlers	rts/win32/ConsoleHandler.c	/^void initDefaultHandlers(void)$/;"	f
initEra	rts/ProfHeap.c	/^initEra(Census *census)$/;"	f
initEventLogFileWriter	rts/eventlog/EventLogWriter.c	/^initEventLogFileWriter(void)$/;"	f	file:
initEventLogWriter	rts/eventlog/EventLog.c	/^initEventLogWriter(void)$/;"	f	file:
initEventLogging	rts/eventlog/EventLog.c	/^initEventLogging()$/;"	f
initEventsBuf	rts/eventlog/EventLog.c	/^void initEventsBuf(EventsBuf* eb, StgWord64 size, EventCapNo capno)$/;"	f
initFileLocking	rts/FileLock.c	/^initFileLocking(void)$/;"	f
initGCStatistics	ghc/hschooks.c	/^initGCStatistics(void)$/;"	f
initGcThreads	rts/sm/GC.c	/^initGcThreads (uint32_t from USED_IF_THREADS, uint32_t to USED_IF_THREADS)$/;"	f
initGenSym	compiler/cbits/genSym.c	/^void initGenSym(HsInt NewGenSymCounter, HsInt NewGenSymInc) {$/;"	f
initGeneration	rts/sm/Storage.c	/^initGeneration (generation *gen, int g)$/;"	f
initGenerationStats	rts/Stats.c	/^initGenerationStats()$/;"	f
initGlobalStore	rts/Globals.c	/^initGlobalStore(void)$/;"	f
initGroup	rts/sm/BlockAlloc.c	/^initGroup(bdescr *head)$/;"	f
initHeapProfiling	rts/ProfHeap.c	/^initHeapProfiling(void)$/;"	f
initHeapSizeMB	rts/linker/PEi386.c	/^const int initHeapSizeMB    = 15;$/;"	v
initLDVCtr	rts/ProfHeap.c	/^initLDVCtr( counter *ctr )$/;"	f
initLinker	rts/Linker.c	/^void initLinker (void)$/;"	f
initLinker_	rts/Linker.c	/^initLinker_ (int retain_cafs)$/;"	f
initLinker_PEi386	rts/linker/PEi386.c	/^void initLinker_PEi386()$/;"	f
initMBlock	rts/sm/BlockAlloc.c	/^initMBlock(void *mblock, uint32_t node)$/;"	f	file:
initMBlocks	rts/sm/MBlock.c	/^initMBlocks(void)$/;"	f
initMarkQueue	rts/sm/NonMovingMark.c	/^void initMarkQueue (MarkQueue *queue)$/;"	f
initMutex	rts/posix/OSThreads.c	/^initMutex(Mutex* pMut)$/;"	f
initMutex	rts/win32/OSThreads.c	/^initMutex (Mutex* pMut)$/;"	f
initProfTimer	rts/Proftimer.c	/^initProfTimer( void )$/;"	f
initProfiling	rts/Profiling.c	/^void initProfiling (void)$/;"	f
initProfilingLogFile	rts/Profiling.c	/^initProfilingLogFile(void)$/;"	f	file:
initRetainerProfiling	rts/RetainerProfile.c	/^initRetainerProfiling( void )$/;"	f
initRtsFlagsDefaults	rts/RtsFlags.c	/^void initRtsFlagsDefaults(void)$/;"	f
initScheduler	rts/Schedule.c	/^initScheduler(void)$/;"	f
initSegment	rts/Linker.c	/^initSegment (Segment *s, void *start, size_t size, SegmentProt prot, int n_sections)$/;"	f
initSnEntryFreeList	rts/StableName.c	/^initSnEntryFreeList(snEntry *table, uint32_t n, snEntry *free)$/;"	f
initSpEntryFreeList	rts/StablePtr.c	/^initSpEntryFreeList(spEntry *table, uint32_t n, spEntry *free)$/;"	f
initStableNameTable	rts/StableName.c	/^initStableNameTable(void)$/;"	f
initStablePtrTable	rts/StablePtr.c	/^initStablePtrTable(void)$/;"	f
initStats0	rts/Stats.c	/^initStats0(void)$/;"	f
initStats1	rts/Stats.c	/^initStats1 (void)$/;"	f
initStatsFile	rts/RtsFlags.c	/^static void initStatsFile (FILE *f)$/;"	f	file:
initStorage	rts/sm/Storage.c	/^initStorage (void)$/;"	f
initTaskManager	rts/Task.c	/^initTaskManager (void)$/;"	f
initThreadLabelTable	rts/ThreadLabels.c	/^initThreadLabelTable(void)$/;"	f
initTicker	rts/posix/itimer/Pthread.c	/^initTicker (Time interval, TickProc handle_tick)$/;"	f
initTicker	rts/posix/itimer/Setitimer.c	/^initTicker (Time interval, TickProc handle_tick)$/;"	f
initTicker	rts/posix/itimer/TimerCreate.c	/^initTicker (Time interval, TickProc handle_tick)$/;"	f
initTicker	rts/win32/Ticker.c	/^initTicker (Time interval, TickProc handle_tick)$/;"	f
initTimeProfiling	rts/Profiling.c	/^initTimeProfiling(void)$/;"	f
initTimer	rts/Timer.c	/^initTimer(void)$/;"	f
initTopHandler	rts/TopHandler.c	/^void initTopHandler(void) {$/;"	f
initTracing	rts/Trace.c	/^void initTracing (void)$/;"	f
initUserSignals	rts/posix/Signals.c	/^initUserSignals(void)$/;"	f
initUserSignals	rts/win32/ConsoleHandler.c	/^initUserSignals(void)$/;"	f
initWeakForGC	rts/sm/MarkWeak.c	/^initWeakForGC(void)$/;"	f
initWinSock	libraries/base/tests/IO/T12010/cbits/initWinSock.c	/^initWinSock ()$/;"	f
init_RTSSummaryStats	rts/Stats.c	/^static void init_RTSSummaryStats(RTSSummaryStats* sum)$/;"	f	file:
init_array	testsuite/tests/rts/linker/T5435_asm.c	/^static void (*const init_array[2])(void) __attribute__(($/;"	v	file:
init_bins	libffi/build/src/dlmalloc.c	/^static void init_bins(mstate m) {$/;"	f	file:
init_event_types	rts/eventlog/EventLog.c	/^init_event_types(void)$/;"	f	file:
init_eventlog	testsuite/tests/rts/InitEventLogging_c.c	/^void init_eventlog(void) {$/;"	f
init_gc_thread	rts/sm/GC.c	/^init_gc_thread (gc_thread *t)$/;"	f	file:
init_heap	nofib/imaginary/paraffins/paraffins.c	/^init_heap()$/;"	f
init_mark_queue_	rts/sm/NonMovingMark.c	/^static void init_mark_queue_ (MarkQueue *queue)$/;"	f	file:
init_mparams	libffi/build/src/dlmalloc.c	/^static int init_mparams(void) {$/;"	f	file:
init_open	rts/Hpc.c	/^static int init_open(FILE *file) {$/;"	f	file:
init_ptrs	rts/TraverseHeap.c	/^init_ptrs( stackPos *info, uint32_t ptrs, StgPtr payload )$/;"	f
init_srt_fun	rts/TraverseHeap.c	/^init_srt_fun( stackPos *info, const StgFunInfoTable *infoTable )$/;"	f
init_srt_thunk	rts/TraverseHeap.c	/^init_srt_thunk( stackPos *info, const StgThunkInfoTable *infoTable )$/;"	f
init_top	libffi/build/src/dlmalloc.c	/^static void init_top(mstate m, mchunkptr p, size_t psize) {$/;"	f	file:
init_upd_rem_set	rts/sm/NonMovingMark.c	/^void init_upd_rem_set (UpdRemSet *rset)$/;"	f
init_user_mstate	libffi/build/src/dlmalloc.c	/^static mstate init_user_mstate(char* tbase, size_t tsize) {$/;"	f	file:
init_value	testsuite/tests/rts/T10904lib.c	/^init_value(int * p)$/;"	f
initial_order	nofib/real/compress2/inC/prefix_trees.c	/^  int initial_order [256] = {$/;"	v
initialise_table	nofib/real/compress2/inC/prefix_trees.c	/^void initialise_table ()$/;"	f
initializeAllRetainerSet	rts/RetainerSet.c	/^initializeAllRetainerSet(void)$/;"	f
initializeTimer	rts/posix/GetTime.c	/^void initializeTimer()$/;"	f
initializeTimer	rts/win32/GetTime.c	/^void initializeTimer()$/;"	f
initializeTraverseStack	rts/TraverseHeap.c	/^initializeTraverseStack( traverseState *ts )$/;"	f
initialize_aggregate	libffi/build/src/prep_cif.c	/^static ffi_status initialize_aggregate(ffi_type *arg, size_t *offsets)$/;"	f	file:
initialize_aggregate_packed_struct	libffi/build/src/cris/ffi.c	/^initialize_aggregate_packed_struct (ffi_type * arg)$/;"	f	file:
initialize_timer	libraries/base/cbits/DarwinUtils.c	/^void initialize_timer()$/;"	f
initializer	testsuite/tests/rts/linker/T5435_gcc.c	/^static void initializer(void)$/;"	f	file:
inode	rts/FileLock.c	/^    StgWord64 inode;$/;"	m	struct:__anon36	file:
input_file	nofib/real/compress/lzw.c	/^FILE *input_file,*output_file;$/;"	v
insample	utils/hp2ps/HpFile.c	/^static boolish insample = 0;                    \/* true when in sample  *\/$/;"	v	file:
insertCCInSortedList	rts/ProfilerReport.c	/^insertCCInSortedList( CostCentre *new_cc )$/;"	f	file:
insertCompactHash	rts/sm/CNF.c	/^insertCompactHash (Capability *cap,$/;"	f
insertFree	rts/win32/OSMem.c	/^insertFree(char* alloc_base, W_ alloc_size) {$/;"	f	file:
insertHashTable	rts/Hash.c	/^insertHashTable(HashTable *table, StgWord key, const void *data)$/;"	f
insertHashTable_	rts/Hash.c	/^insertHashTable_(HashTable *table, StgWord key,$/;"	f
insertHashTable_inlined	rts/Hash.c	/^insertHashTable_inlined(HashTable *table, StgWord key,$/;"	f
insertIndexTableInSortedList	rts/Profiling.c	/^insertIndexTableInSortedList(IndexTable* tbl, IndexTable* sortedList)$/;"	f	file:
insertStrHashTable	rts/Hash.c	/^insertStrHashTable(StrHashTable *table, const char * key, const void *data)$/;"	f
insertSymbol	rts/Linker.c	/^HsInt insertSymbol(pathchar* obj_name, SymbolName* key, SymbolAddr* data)$/;"	f
insert_chunk	libffi/build/src/dlmalloc.c	3181;"	d	file:
insert_large_chunk	libffi/build/src/dlmalloc.c	3040;"	d	file:
insert_small_chunk	libffi/build/src/dlmalloc.c	2969;"	d	file:
instSizeAarch64	rts/linker/elf_plt_aarch64.c	/^const size_t instSizeAarch64 = 4;$/;"	v
inst_t	rts/linker/elf_reloc_aarch64.c	/^typedef uint32_t inst_t;$/;"	t	file:
install_vtalrm_handler	rts/posix/Signals.c	/^install_vtalrm_handler(int sig, TickProc handle_tick)$/;"	f
integer_gmp_gcd_word	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_gcd_word(const mp_limb_t x, const mp_limb_t y)$/;"	f
integer_gmp_gcdext	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_gcdext(mp_limb_t s0[], mp_limb_t g0[],$/;"	f
integer_gmp_invert	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_invert(mp_limb_t rp[], \/\/ result$/;"	f
integer_gmp_invert_word	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_invert_word(const mp_limb_t x0, const mp_limb_t m0)$/;"	f
integer_gmp_mpn_export	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_mpn_export(const mp_limb_t s[], const mp_size_t sn,$/;"	f
integer_gmp_mpn_export1	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_mpn_export1(const mp_limb_t s,$/;"	f
integer_gmp_mpn_gcd	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_mpn_gcd(mp_limb_t r[],$/;"	f
integer_gmp_mpn_gcd_1	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_mpn_gcd_1(const mp_limb_t x[], const mp_size_t xn,$/;"	f
integer_gmp_mpn_get_d	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_mpn_get_d (const mp_limb_t sp[], const mp_size_t sn,$/;"	f
integer_gmp_mpn_import	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_mpn_import(mp_limb_t * restrict r, const uint8_t * restrict srcptr,$/;"	f
integer_gmp_mpn_import1	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_mpn_import1(const uint8_t *srcptr, const HsWord srcofs,$/;"	f
integer_gmp_mpn_lshift	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_mpn_lshift (mp_limb_t rp[], const mp_limb_t sp[],$/;"	f
integer_gmp_mpn_rshift	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_mpn_rshift (mp_limb_t rp[], const mp_limb_t sp[], mp_size_t sn,$/;"	f
integer_gmp_mpn_rshift_2c	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_mpn_rshift_2c (mp_limb_t rp[], const mp_limb_t sp[],$/;"	f
integer_gmp_mpn_sizeinbase	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_mpn_sizeinbase(const mp_limb_t s[], const mp_size_t sn,$/;"	f
integer_gmp_mpn_sizeinbase1	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_mpn_sizeinbase1(const mp_limb_t s, const HsInt base)$/;"	f
integer_gmp_mpn_tdiv_q	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_mpn_tdiv_q (mp_limb_t q[],$/;"	f
integer_gmp_mpn_tdiv_r	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_mpn_tdiv_r (mp_limb_t r[],$/;"	f
integer_gmp_next_prime	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_next_prime(mp_limb_t rp[], const mp_limb_t sp[],$/;"	f
integer_gmp_next_prime1	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_next_prime1(const mp_limb_t limb)$/;"	f
integer_gmp_powm	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_powm(mp_limb_t rp[], \/\/ result$/;"	f
integer_gmp_powm1	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_powm1(const mp_limb_t bp[], const mp_size_t bn, \/\/ base$/;"	f
integer_gmp_powm_sec	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_powm_sec(mp_limb_t rp[], \/\/ result$/;"	f
integer_gmp_powm_word	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_powm_word(const mp_limb_t b0, \/\/ base$/;"	f
integer_gmp_rscan_nzbyte	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_rscan_nzbyte(const uint8_t *srcptr,$/;"	f
integer_gmp_scan_nzbyte	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_scan_nzbyte(const uint8_t *srcptr,$/;"	f
integer_gmp_test_prime	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_test_prime(const mp_limb_t s[], const mp_size_t sn, const HsInt rep)$/;"	f
integer_gmp_test_prime1	libraries/integer-gmp/cbits/wrappers.c	/^integer_gmp_test_prime1(const mp_limb_t limb, const HsInt rep)$/;"	f
inter_gc_ticks_to_gc	rts/Timer.c	/^static int inter_gc_ticks_to_gc = 0;$/;"	v	file:
internal_dlopen	rts/Linker.c	/^internal_dlopen(const char *dll_name)$/;"	f	file:
internal_dlsym	rts/Linker.c	/^internal_dlsym(const char *symbol) {$/;"	f	file:
internal_free	libffi/build/src/dlmalloc.c	3194;"	d	file:
internal_free	libffi/build/src/dlmalloc.c	3199;"	d	file:
internal_free	libffi/build/src/dlmalloc.c	3203;"	d	file:
internal_mallinfo	libffi/build/src/dlmalloc.c	/^static struct mallinfo internal_mallinfo(mstate m) {$/;"	f	file:
internal_malloc	libffi/build/src/dlmalloc.c	3193;"	d	file:
internal_malloc	libffi/build/src/dlmalloc.c	3197;"	d	file:
internal_malloc	libffi/build/src/dlmalloc.c	3202;"	d	file:
internal_malloc_stats	libffi/build/src/dlmalloc.c	/^static void internal_malloc_stats(mstate m) {$/;"	f	file:
internal_memalign	libffi/build/src/dlmalloc.c	/^static void* internal_memalign(mstate m, size_t alignment, size_t bytes) {$/;"	f	file:
internal_realloc	libffi/build/src/dlmalloc.c	/^static void* internal_realloc(mstate m, void* oldmem, size_t bytes) {$/;"	f	file:
interp_shutdown	rts/Interpreter.c	/^void interp_shutdown ( void )$/;"	f
interp_startup	rts/Interpreter.c	/^void interp_startup ( void )$/;"	f
interpretBCO	rts/Interpreter.c	/^interpretBCO (Capability* cap)$/;"	f
interruptAllCapabilities	rts/Capability.c	/^void interruptAllCapabilities(void)$/;"	f
interruptOSThread	rts/posix/OSThreads.c	/^interruptOSThread (OSThreadId id)$/;"	f
interruptOSThread	rts/win32/OSThreads.c	/^interruptOSThread (OSThreadId id)$/;"	f
interruptStgRts	rts/Schedule.c	/^interruptStgRts(void)$/;"	f
interruptWorkerTask	rts/Task.c	/^interruptWorkerTask (Task *task)$/;"	f
interval	libraries/haskeline/cbits/h_wcwidth.c	/^struct interval {$/;"	s	file:
intfun_p	testsuite/tests/ffi/should_run/T493_c.c	/^typedef int (*intfun_p)(int);$/;"	t	file:
intptr_example	testsuite/tests/ffi/should_compile/T11983.c	/^void intptr_example(intptr_t i)   {}$/;"	f
ioMan	rts/win32/IOManager.c	/^static IOManagerState* ioMan;$/;"	v	file:
ioManagerDie	rts/posix/Signals.c	/^ioManagerDie (void)$/;"	f
ioManagerDie	rts/win32/ThrIOManager.c	/^ioManagerDie (void)$/;"	f
ioManagerStart	rts/posix/Signals.c	/^ioManagerStart (void)$/;"	f
ioManagerStart	rts/win32/ThrIOManager.c	/^ioManagerStart (void)$/;"	f
ioManagerStartCap	rts/posix/Signals.c	/^ioManagerStartCap (Capability **cap)$/;"	f
ioManagerWakeup	rts/posix/Signals.c	/^ioManagerWakeup (void)$/;"	f
ioManagerWakeup	rts/win32/ThrIOManager.c	/^ioManagerWakeup (void)$/;"	f
io_manager_event	rts/win32/ThrIOManager.c	/^static HANDLE io_manager_event = INVALID_HANDLE_VALUE;$/;"	v	file:
io_manager_wakeup_fd	rts/posix/Signals.c	/^static volatile int io_manager_wakeup_fd = -1;$/;"	v	file:
ip	rts/Adjustor.c	/^    StgWord64 ip;$/;"	m	struct:_IA64FunDesc	file:
isAddSub	rts/linker/elf_reloc_aarch64.c	/^bool isAddSub(addr_t p) {$/;"	f
isAdrp	rts/linker/elf_reloc_aarch64.c	/^bool isAdrp(addr_t p) {$/;"	f
isAligned	testsuite/tests/rts/linker/section_alignment.c	/^long isAligned()$/;"	f
isAlive	rts/sm/GCAux.c	/^isAlive(StgClosure *p)$/;"	f
isAlreadyLoaded	rts/Linker.c	/^isAlreadyLoaded( pathchar *path )$/;"	f
isBranch	rts/linker/elf_reloc_aarch64.c	/^bool isBranch(addr_t p) {$/;"	f
isBranchLink	rts/linker/elf_reloc_aarch64.c	/^bool isBranchLink(addr_t p) {$/;"	f
isDoubleDenormalized	libraries/base/cbits/primFloat.c	/^HsInt isDoubleDenormalized(HsDouble d) { return 0; }$/;"	f
isDoubleDenormalized	libraries/base/cbits/primFloat.c	/^isDoubleDenormalized(HsDouble d)$/;"	f
isDoubleFinite	libraries/base/cbits/primFloat.c	/^HsInt isDoubleFinite(HsDouble d) { return 1;}$/;"	f
isDoubleFinite	libraries/base/cbits/primFloat.c	/^isDoubleFinite(HsDouble d)$/;"	f
isDoubleInfinite	libraries/base/cbits/primFloat.c	/^HsInt isDoubleInfinite(HsDouble d) { return 0; }$/;"	f
isDoubleInfinite	libraries/base/cbits/primFloat.c	/^isDoubleInfinite(HsDouble d)$/;"	f
isDoubleNaN	libraries/base/cbits/primFloat.c	/^HsInt isDoubleNaN(HsDouble d) { return 0; }$/;"	f
isDoubleNaN	libraries/base/cbits/primFloat.c	/^isDoubleNaN(HsDouble d)$/;"	f
isDoubleNegativeZero	libraries/base/cbits/primFloat.c	/^HsInt isDoubleNegativeZero(HsDouble d) { return 0; }$/;"	f
isDoubleNegativeZero	libraries/base/cbits/primFloat.c	/^isDoubleNegativeZero(HsDouble d)$/;"	f
isEmptyWorkStack	rts/TraverseHeap.c	/^isEmptyWorkStack( traverseState *ts )$/;"	f
isFloatDenormalized	libraries/base/cbits/primFloat.c	/^HsInt isFloatDenormalized(HsFloat f) { return 0; }$/;"	f
isFloatDenormalized	libraries/base/cbits/primFloat.c	/^isFloatDenormalized(HsFloat f)$/;"	f
isFloatFinite	libraries/base/cbits/primFloat.c	/^HsInt isFloatFinite(HsFloat f) { return 1; }$/;"	f
isFloatFinite	libraries/base/cbits/primFloat.c	/^isFloatFinite(HsFloat f)$/;"	f
isFloatInfinite	libraries/base/cbits/primFloat.c	/^HsInt isFloatInfinite(HsFloat f) { return 0; }$/;"	f
isFloatInfinite	libraries/base/cbits/primFloat.c	/^isFloatInfinite(HsFloat f)$/;"	f
isFloatNaN	libraries/base/cbits/primFloat.c	/^HsInt isFloatNaN(HsFloat f) { return 0; }$/;"	f
isFloatNaN	libraries/base/cbits/primFloat.c	/^isFloatNaN(HsFloat f)$/;"	f
isFloatNegativeZero	libraries/base/cbits/primFloat.c	/^HsInt isFloatNegativeZero(HsFloat f) { return 0; }$/;"	f
isFloatNegativeZero	libraries/base/cbits/primFloat.c	/^isFloatNegativeZero(HsFloat f)$/;"	f
isGUIApp	rts/RtsMessages.c	/^isGUIApp(void)$/;"	f	file:
isGotLoad	rts/linker/MachO.c	/^isGotLoad(struct relocation_info * ri) {$/;"	f
isInIndexTable	rts/Profiling.c	/^isInIndexTable(IndexTable *it, CostCentre *cc)$/;"	f	file:
isLineTerm	utils/unlit/unlit.c	76;"	d	file:
isLoadStore	rts/linker/MachO.c	/^isLoadStore(uint32_t *p) {$/;"	f
isLoadStore	rts/linker/elf_reloc_aarch64.c	/^bool isLoadStore(addr_t p) {$/;"	f
isMinTTY	driver/utils/isMinTTY.c	/^bool isMinTTY() {$/;"	f
isReal	rts/Printer.c	/^static bool isReal( flagword flags STG_UNUSED, const char *name )$/;"	f	file:
isRetainer	rts/RetainerProfile.c	/^isRetainer( const StgClosure *c )$/;"	f
isSymbolImport	rts/RtsSymbolInfo.c	/^bool isSymbolImport(ObjectCode *owner, const void *label)$/;"	f
isSymbolWeak	rts/RtsSymbolInfo.c	/^bool isSymbolWeak(ObjectCode *owner, const void *label)$/;"	f
isThreadBound	rts/Threads.c	/^isThreadBound(StgTSO* tso USED_IF_THREADS)$/;"	f
isVectorOp	rts/linker/MachO.c	/^isVectorOp(uint32_t *p) {$/;"	f
isVectorOp	rts/linker/elf_reloc_aarch64.c	/^bool isVectorOp(addr_t p) {$/;"	f
isWhitespace	utils/unlit/unlit.c	75;"	d	file:
is_aligned	libffi/build/src/dlmalloc.c	1276;"	d	file:
is_alive	rts/sm/NonMovingSweep.c	/^static bool is_alive(StgClosure *p)$/;"	f	file:
is_closure_clean	rts/sm/NonMovingSweep.c	/^static bool is_closure_clean(StgClosure *p)$/;"	f	file:
is_console__	libraries/base/cbits/consUtils.c	/^int is_console__(int fd) {$/;"	f
is_doubleton_homogenous	testsuite/tests/ffi/should_run/T16650b_c.c	/^uint8_t is_doubleton_homogenous (void **arr) {$/;"	f
is_doubleton_homogenous	testsuite/tests/ffi/should_run/T16650c_c.c	/^uint8_t is_doubleton_homogenous (void **arr) {$/;"	f
is_doubleton_homogenous	testsuite/tests/ffi/should_run/T16650d_c.c	/^uint8_t is_doubleton_homogenous (void **arr) {$/;"	f
is_emutramp_enabled	libffi/build/src/closures.c	404;"	d	file:
is_emutramp_enabled	libffi/build/src/closures.c	418;"	d	file:
is_extern_segment	libffi/build/src/dlmalloc.c	1984;"	d	file:
is_global	libffi/build/src/dlmalloc.c	2119;"	d	file:
is_granularity_aligned	libffi/build/src/dlmalloc.c	2152;"	d	file:
is_hfa0	libffi/build/src/aarch64/ffi.c	/^is_hfa0 (const ffi_type *ty)$/;"	f	file:
is_hfa0	libffi/build/src/arm/ffi.c	/^is_hfa0 (const ffi_type *ty)$/;"	f	file:
is_hfa1	libffi/build/src/aarch64/ffi.c	/^is_hfa1 (const ffi_type *ty, int candidate)$/;"	f	file:
is_hfa1	libffi/build/src/arm/ffi.c	/^is_hfa1 (const ffi_type *ty, int candidate)$/;"	f	file:
is_initialized	libffi/build/src/dlmalloc.c	2120;"	d	file:
is_mmapped	libffi/build/src/dlmalloc.c	1759;"	d	file:
is_mmapped_segment	libffi/build/src/dlmalloc.c	1983;"	d	file:
is_page_aligned	libffi/build/src/dlmalloc.c	2150;"	d	file:
is_selinux_enabled	libffi/build/src/closures.c	364;"	d	file:
is_selinux_enabled	libffi/build/src/closures.c	369;"	d	file:
is_selinux_enabled	libffi/build/src/closures.c	413;"	d	file:
is_small	libffi/build/src/dlmalloc.c	2289;"	d	file:
is_vfp_type	libffi/build/src/aarch64/ffi.c	/^is_vfp_type (const ffi_type *ty)$/;"	f	file:
issued_reqs	rts/win32/AsyncIO.c	/^static int              issued_reqs;$/;"	v	file:
it_BCO_entries	rts/Interpreter.c	/^int it_BCO_entries;$/;"	v
it_insns	rts/Interpreter.c	/^int it_insns;$/;"	v
it_lastopc	rts/Interpreter.c	/^int it_lastopc;$/;"	v
it_ofreq	rts/Interpreter.c	/^int it_ofreq[27];$/;"	v
it_oofreq	rts/Interpreter.c	/^int it_oofreq[27][27];$/;"	v
it_retto_BCO	rts/Interpreter.c	/^int it_retto_BCO;$/;"	v
it_retto_UPDATE	rts/Interpreter.c	/^int it_retto_UPDATE;$/;"	v
it_retto_other	rts/Interpreter.c	/^int it_retto_other;$/;"	v
it_slides	rts/Interpreter.c	/^int it_slides;$/;"	v
it_total_entries	rts/Interpreter.c	/^int it_total_entries;$/;"	v
it_total_unknown_entries	rts/Interpreter.c	/^int it_total_unknown_entries;$/;"	v
it_unknown_entries	rts/Interpreter.c	/^int it_unknown_entries[N_CLOSURE_TYPES];$/;"	v
itimer_interval	rts/posix/itimer/Pthread.c	/^static Time itimer_interval = DEFAULT_TICK_INTERVAL;$/;"	v	file:
itimer_interval	rts/posix/itimer/Setitimer.c	/^static Time itimer_interval = DEFAULT_TICK_INTERVAL;$/;"	v	file:
itimer_interval	rts/posix/itimer/TimerCreate.c	/^static Time itimer_interval = DEFAULT_TICK_INTERVAL;$/;"	v	file:
itimer_thread_func	rts/posix/itimer/Pthread.c	/^static void *itimer_thread_func(void *_handle_tick)$/;"	f	file:
iub	nofib/shootout/fasta/fasta-c.c	/^amino iub[] = {$/;"	v
j	libffi/build/testsuite/libffi.call/huge_struct.c	/^	double		j;$/;"	m	struct:BigStruct	file:
j	libffi/build/testsuite/libffi.call/stret_large.c	/^	double j;$/;"	m	struct:struct_108byte	file:
j	libffi/build/testsuite/libffi.call/stret_large2.c	/^	double j;$/;"	m	struct:struct_116byte	file:
jj	libffi/build/testsuite/libffi.call/huge_struct.c	/^	char*		jj;$/;"	m	struct:BigStruct	file:
jobstring	utils/hp2ps/HpFile.c	/^char *jobstring;$/;"	v
k	libffi/build/testsuite/libffi.call/huge_struct.c	/^	long double	k;$/;"	m	struct:BigStruct	file:
k	libffi/build/testsuite/libffi.call/stret_large.c	/^	double k;$/;"	m	struct:struct_108byte	file:
k	libffi/build/testsuite/libffi.call/stret_large2.c	/^	double k;$/;"	m	struct:struct_116byte	file:
kcount	rts/Hash.c	/^    int kcount;             \/* Number of keys *\/$/;"	m	struct:hashtable	file:
keepCAFs	rts/sm/Storage.c	/^bool           keepCAFs;$/;"	v
keepCAFsForGHCi	compiler/ghci/keepCAFsForGHCi.c	/^static void keepCAFsForGHCi(void)$/;"	f	file:
keepcost	libffi/build/src/dlmalloc.c	/^  MALLINFO_FIELD_TYPE keepcost; \/* releasable (via malloc_trim) space *\/$/;"	m	struct:mallinfo	file:
kernelThreadId	rts/posix/OSThreads.c	/^KernelThreadId kernelThreadId (void)$/;"	f
kernelThreadId	rts/win32/OSThreads.c	/^KernelThreadId kernelThreadId (void)$/;"	f
key	rts/Hash.c	/^    StgWord key;$/;"	m	struct:hashlist	file:
keyCountHashTable	rts/Hash.c	/^int keyCountHashTable (HashTable *table)$/;"	f
keysHashTable	rts/Hash.c	/^int keysHashTable(HashTable *table, StgWord keys[], int szKeys) {$/;"	f
kind	nofib/imaginary/paraffins/paraffins.c	/^      KIND_PARAFFIN   kind;$/;"	m	struct:paraffin	file:
kind	nofib/imaginary/paraffins/paraffins.c	/^      KIND_RADICAL   kind;$/;"	m	struct:radical	file:
kind_paraffin	nofib/imaginary/paraffins/paraffins.c	/^enum kind_paraffin { BCP, CCP };$/;"	g	file:
kind_radical	nofib/imaginary/paraffins/paraffins.c	/^enum kind_radical { H, C };$/;"	g	file:
kinetic	nofib/spectral/simple/simple.c	/^double kinetic(int i,int j,$/;"	f
kk	libffi/build/testsuite/libffi.call/huge_struct.c	/^	uint8_t		kk;$/;"	m	struct:BigStruct	file:
l	libffi/build/testsuite/libffi.call/huge_struct.c	/^	char*		l;$/;"	m	struct:BigStruct	file:
l	libffi/build/testsuite/libffi.call/stret_large.c	/^	double l;$/;"	m	struct:struct_108byte	file:
l	libffi/build/testsuite/libffi.call/stret_large2.c	/^	double l;$/;"	m	struct:struct_116byte	file:
labelThread	rts/ThreadLabels.c	/^labelThread(Capability *cap   STG_UNUSED,$/;"	f
large_alloc_lim	rts/sm/Storage.c	/^W_ large_alloc_lim;    \/* GC if n_large_blocks in any nursery$/;"	v
large_tag	libffi/build/testsuite/libffi.call/cls_struct_va1.c	/^struct large_tag$/;"	s	file:
large_tag	libffi/build/testsuite/libffi.call/va_1.c	/^struct large_tag$/;"	s	file:
large_tag	libffi/build/testsuite/libffi.call/va_struct1.c	/^struct large_tag$/;"	s	file:
large_tag	libffi/build/testsuite/libffi.call/va_struct2.c	/^struct large_tag$/;"	s	file:
large_tag	libffi/build/testsuite/libffi.call/va_struct3.c	/^struct large_tag$/;"	s	file:
last	libraries/haskeline/cbits/h_wcwidth.c	/^  int last;$/;"	m	struct:interval	file:
last_b	testsuite/tests/rts/testwsdeque.c	/^StgWord last_b[THREADS][BUF];$/;"	v
last_free_capability	rts/Capability.c	/^static Capability *last_free_capability[MAX_NUMA_NODES];$/;"	v	file:
last_t	testsuite/tests/rts/testwsdeque.c	/^StgWord last_t[THREADS][BUF];$/;"	v
last_v	testsuite/tests/rts/testwsdeque.c	/^StgWord last_v[THREADS][BUF];$/;"	v
lastsample	utils/hp2ps/HpFile.c	/^static floatish lastsample;                     \/* the last sample time *\/$/;"	v	file:
layout_vfp_args	libffi/build/src/arm/ffi.c	/^layout_vfp_args (ffi_cif * cif)$/;"	f	file:
ldblit	libffi/build/testsuite/libffi.call/float2.c	/^static long double ldblit(float f)$/;"	f	file:
ldf_fill	libffi/build/src/ia64/ffi.c	85;"	d	file:
lds	libffi/build/src/alpha/ffi.c	/^static inline UINT64 lds(void *ptr)$/;"	f	file:
ldv	rts/ProfHeap.c	/^        } ldv;$/;"	m	union:_counter::__anon42	typeref:struct:_counter::__anon42::__anon43	file:
least_addr	libffi/build/src/dlmalloc.c	/^  char*      least_addr;$/;"	m	struct:malloc_state	file:
least_bit	libffi/build/src/dlmalloc.c	2392;"	d	file:
leavecpp	utils/unlit/unlit.c	/^static int leavecpp = 1; \/* leave preprocessor lines *\/$/;"	v	file:
left	nofib/real/compress2/inC/prefix_trees.c	/^  struct ptree *left;$/;"	m	struct:ptree	typeref:struct:ptree::ptree	file:
left_bits	libffi/build/src/dlmalloc.c	2395;"	d	file:
leftmost_child	libffi/build/src/dlmalloc.c	1881;"	d	file:
leftshift_for_tree_index	libffi/build/src/dlmalloc.c	2338;"	d	file:
len	rts/win32/AsyncIO.c	/^    HsInt          len;$/;"	m	struct:CompletedReq	file:
length	libraries/base/cbits/WCsubst.c	/^	int length;$/;"	m	struct:_charblock_	file:
libdwForEachFrameOutwards	rts/Libdw.c	/^int libdwForEachFrameOutwards(Backtrace *bt,$/;"	f
libdwFree	rts/Libdw.c	/^void libdwFree(LibdwSession *session) {$/;"	f
libdwGetBacktrace	rts/Libdw.c	/^Backtrace *libdwGetBacktrace(LibdwSession *session STG_UNUSED) {$/;"	f
libdwGetBacktrace	rts/Libdw.c	/^Backtrace *libdwGetBacktrace(LibdwSession *session) {$/;"	f
libdwInit	rts/Libdw.c	/^LibdwSession *libdwInit() {$/;"	f
libdwLookupLocation	rts/Libdw.c	/^int libdwLookupLocation(LibdwSession *session STG_UNUSED,$/;"	f
libdwLookupLocation	rts/Libdw.c	/^int libdwLookupLocation(LibdwSession *session, Location *frame,$/;"	f
libdwPoolClear	rts/LibdwPool.c	/^void libdwPoolClear(void) { }$/;"	f
libdwPoolClear	rts/LibdwPool.c	/^void libdwPoolClear(void) {$/;"	f
libdwPoolInit	rts/LibdwPool.c	/^void libdwPoolInit(void) {$/;"	f
libdwPoolRelease	rts/LibdwPool.c	/^void libdwPoolRelease(LibdwSession *sess STG_UNUSED) { }$/;"	f
libdwPoolRelease	rts/LibdwPool.c	/^void libdwPoolRelease(LibdwSession *sess) {$/;"	f
libdwPoolTake	rts/LibdwPool.c	/^LibdwSession *libdwPoolTake(void) { return NULL; }$/;"	f
libdwPoolTake	rts/LibdwPool.c	/^LibdwSession *libdwPoolTake(void) {$/;"	f
libdwPrintBacktrace	rts/Libdw.c	/^void libdwPrintBacktrace(LibdwSession *session, FILE *file, Backtrace *bt) {$/;"	f
lim	rts/Arena.c	/^    StgWord *lim;               \/\/ limit (== last free byte + 1)$/;"	m	struct:_Arena	file:
limit	nofib/imaginary/paraffins/paraffins.c	/^static char *free, *limit;$/;"	v	file:
line	utils/unlit/unlit.c	/^typedef enum { START, BLANK, TEXT, DEFN, BEGIN, END, \/*PSEUDO,*\/ ENDFILE, HASH, SHEBANG } line;$/;"	t	typeref:enum:__anon61	file:
line_integral	nofib/spectral/simple/simple.c	/^double line_integral (double p[MAXSIZE][MAXSIZE], double z[MAXSIZE][MAXSIZE],$/;"	f
linenum	utils/hp2ps/HpFile.c	/^int linenum;                                    \/* current line number  *\/$/;"	v
linker_init_done	rts/Linker.c	/^static int linker_init_done = 0 ;$/;"	v	file:
linker_mutex	rts/Linker.c	/^Mutex linker_mutex;$/;"	v
linker_unloaded_mutex	rts/Linker.c	/^Mutex linker_unloaded_mutex;$/;"	v
linux_retry_mmap	rts/posix/OSMem.c	/^linux_retry_mmap(int operation, W_ size, void *ret, void *addr, int prot, int flags)$/;"	f	file:
ll	libffi/build/testsuite/libffi.call/huge_struct.c	/^	int8_t		ll;$/;"	m	struct:BigStruct	file:
loadArchive	rts/linker/LoadArchive.c	/^HsInt loadArchive (pathchar *path)$/;"	f
loadArchive_	rts/linker/LoadArchive.c	/^static HsInt loadArchive_ (pathchar *path)$/;"	f	file:
loadDll	driver/utils/dynwrapper.c	/^HINSTANCE loadDll(LPTSTR dll) {$/;"	f
loadFatArchive	rts/linker/LoadArchive.c	/^static StgBool loadFatArchive(char tmp[static 20], FILE* f, pathchar* path)$/;"	f	file:
loadObj	rts/Linker.c	/^HsInt loadObj (pathchar *path)$/;"	f
loadObj_	rts/Linker.c	/^static HsInt loadObj_ (pathchar *path)$/;"	f	file:
loadOc	rts/Linker.c	/^HsInt loadOc (ObjectCode* oc)$/;"	f
loadSymbol	rts/Linker.c	/^SymbolAddr* loadSymbol(SymbolName *lbl, RtsSymbolInfo *pinfo) {$/;"	f
load_and_resolve_all_objects	testsuite/tests/rts/linker/unload_multiple_objs/linker_unload_multiple_objs.c	/^void load_and_resolve_all_objects() {$/;"	f
load_info	nofib/real/fem/inC/fem.c	/^        float  px,py,m; }   load_info[MAXNODELOAD];$/;"	v	typeref:struct:__anon30
load_vec	nofib/real/fem/inC/fem.c	/^float  load_vec[MAXDEGREES];$/;"	v
loading_obj	rts/Linker.c	/^static ObjectCode *loading_obj = NULL;$/;"	v	file:
localeEncoding	libraries/base/cbits/PrelIOUtils.c	/^const char* localeEncoding(void)$/;"	f
locate_object	rts/sm/NonMoving.c	/^void locate_object(P_ obj)$/;"	f
lock	testsuite/tests/concurrent/should_run/hs_try_putmvar003_c.c	/^    pthread_mutex_t lock;$/;"	m	struct:callback_queue	file:
lockCAF	rts/sm/Storage.c	/^lockCAF (StgRegTable *reg, StgIndStatic *caf)$/;"	f
lockFile	rts/FileLock.c	/^lockFile(int fd, StgWord64 dev, StgWord64 ino, int for_writing)$/;"	f
lock_stm	rts/STM.c	/^static void lock_stm(StgTRecHeader *trec STG_UNUSED) {$/;"	f	file:
lock_stm	rts/STM.c	/^static void lock_stm(StgTRecHeader *trec) {$/;"	f	file:
lock_tvar	rts/STM.c	/^static StgClosure *lock_tvar(Capability *cap STG_UNUSED,$/;"	f	file:
lock_tvar	rts/STM.c	/^static StgClosure *lock_tvar(Capability *cap,$/;"	f	file:
log2_ceil	rts/sm/NonMoving.c	/^static inline unsigned long log2_ceil(unsigned long x)$/;"	f	file:
log2_floor	rts/sm/NonMoving.c	/^static inline unsigned long log2_floor(unsigned long x)$/;"	f	file:
logCCS	rts/ProfilerReport.c	/^logCCS(FILE *prof_file, CostCentreStack const *ccs, ProfilerTotals totals,$/;"	f	file:
logCostCentreStack	rts/ProfilerReportJson.c	/^logCostCentreStack(FILE *prof_file, CostCentreStack const *ccs)$/;"	f	file:
logCostCentres	rts/ProfilerReportJson.c	/^logCostCentres(FILE *prof_file)$/;"	f	file:
log_2	rts/sm/BlockAlloc.c	/^log_2(W_ n)$/;"	f
log_2_ceil	rts/sm/BlockAlloc.c	/^log_2_ceil(W_ n)$/;"	f
lookup	nofib/shootout/fasta/fasta-c.c	/^char lookup[RMAX];$/;"	v
lookupGHCName	rts/Printer.c	/^const char *lookupGHCName( void *addr )$/;"	f
lookupGNUArchiveIndex	rts/linker/LoadArchive.c	/^lookupGNUArchiveIndex(int gnuFileIndexSize, char **fileName_,$/;"	f	file:
lookupHashTable	rts/Hash.c	/^lookupHashTable(const HashTable *table, StgWord key)$/;"	f
lookupHashTable_	rts/Hash.c	/^lookupHashTable_(const HashTable *table, StgWord key,$/;"	f
lookupHashTable_inlined	rts/Hash.c	/^lookupHashTable_inlined(const HashTable *table, StgWord key,$/;"	f
lookupStableName	rts/StableName.c	/^lookupStableName (StgPtr p)$/;"	f
lookupStrHashTable	rts/Hash.c	/^lookupStrHashTable(const StrHashTable* table, const char* key)$/;"	f
lookupSymbol	rts/Linker.c	/^SymbolAddr* lookupSymbol( SymbolName* lbl )$/;"	f
lookupSymbolInDLLs	rts/linker/PEi386.c	/^lookupSymbolInDLLs ( const SymbolName* lbl )$/;"	f
lookupSymbol_	rts/Linker.c	/^SymbolAddr* lookupSymbol_ (SymbolName* lbl)$/;"	f
lookupSymbol_PEi386	rts/linker/PEi386.c	/^SymbolAddr *lookupSymbol_PEi386(SymbolName *lbl)$/;"	f
lookupThreadLabel	rts/ThreadLabels.c	/^lookupThreadLabel(StgWord key)$/;"	f
lowdist	libraries/base/cbits/WCsubst.c	/^	int lowdist; $/;"	m	struct:_convrule_	file:
lower_del	nofib/spectral/simple/simple.c	/^double lower_del(double f[MAXSIZE][MAXSIZE],int zone_x,int zone_y)$/;"	f
lpcwstrToUTF8	rts/RtsFlags.c	/^char* lpcwstrToUTF8(const wchar_t* utf16_str)$/;"	f
lr	libffi/build/src/arm/ffi.c	/^  void *lr;$/;"	m	struct:call_frame	file:
m	libffi/build/testsuite/libffi.call/huge_struct.c	/^	uint8_t		m;$/;"	m	struct:BigStruct	file:
m	libffi/build/testsuite/libffi.call/stret_large.c	/^	double m;$/;"	m	struct:struct_108byte	file:
m	libffi/build/testsuite/libffi.call/stret_large2.c	/^	double m;$/;"	m	struct:struct_116byte	file:
m	nofib/real/fem/inC/fem.c	/^        float  px,py,m; }   load_info[MAXNODELOAD];$/;"	m	struct:__anon30	file:
m	rts/TopHandler.c	/^static Mutex m; \/\/ Protects the operations on topHandlerPtr,$/;"	v	file:
m32_alloc	rts/linker/M32Alloc.c	/^m32_alloc(m32_allocator *alloc STG_UNUSED,$/;"	f
m32_alloc	rts/linker/M32Alloc.c	/^m32_alloc(struct m32_allocator_t *alloc, size_t size, size_t alignment)$/;"	f
m32_alloc_page	rts/linker/M32Alloc.c	/^m32_alloc_page(void)$/;"	f	file:
m32_allocator_flush	rts/linker/M32Alloc.c	/^m32_allocator_flush(m32_allocator *alloc STG_UNUSED)$/;"	f
m32_allocator_flush	rts/linker/M32Alloc.c	/^m32_allocator_flush(m32_allocator *alloc) {$/;"	f
m32_allocator_free	rts/linker/M32Alloc.c	/^void m32_allocator_free(m32_allocator *alloc STG_UNUSED)$/;"	f
m32_allocator_free	rts/linker/M32Alloc.c	/^void m32_allocator_free(m32_allocator *alloc)$/;"	f
m32_allocator_new	rts/linker/M32Alloc.c	/^m32_allocator_new(bool executable STG_UNUSED)$/;"	f
m32_allocator_new	rts/linker/M32Alloc.c	/^m32_allocator_new(bool executable)$/;"	f
m32_allocator_push_filled_list	rts/linker/M32Alloc.c	/^m32_allocator_push_filled_list(struct m32_page_t **head, struct m32_page_t *page)$/;"	f	file:
m32_allocator_t	rts/linker/M32Alloc.c	/^struct m32_allocator_t {$/;"	s	file:
m32_allocator_unmap_list	rts/linker/M32Alloc.c	/^m32_allocator_unmap_list(struct m32_page_t *head)$/;"	f	file:
m32_filled_page_get_next	rts/linker/M32Alloc.c	/^m32_filled_page_get_next(struct m32_page_t *page)$/;"	f	file:
m32_filled_page_set_next	rts/linker/M32Alloc.c	/^m32_filled_page_set_next(struct m32_page_t *page, struct m32_page_t *next)$/;"	f	file:
m32_free_page_pool	rts/linker/M32Alloc.c	/^struct m32_page_t *m32_free_page_pool = NULL;$/;"	v	typeref:struct:m32_page_t
m32_free_page_pool_size	rts/linker/M32Alloc.c	/^unsigned int m32_free_page_pool_size = 0;$/;"	v
m32_is_large_object	rts/linker/M32Alloc.c	/^m32_is_large_object(size_t size, size_t alignment)$/;"	f	file:
m32_page_t	rts/linker/M32Alloc.c	/^struct m32_page_t {$/;"	s	file:
m32_release_page	rts/linker/M32Alloc.c	/^m32_release_page(struct m32_page_t *page)$/;"	f	file:
m_shades	utils/hp2ps/Shade.c	/^static floatish m_shades[ N_MONO_SHADES ] = {$/;"	v	file:
machoGetMisalignment	rts/linker/MachO.c	/^machoGetMisalignment( FILE * f )$/;"	f
magic	libffi/build/src/dlmalloc.c	/^  size_t     magic;$/;"	m	struct:malloc_state	file:
magic	libffi/build/src/dlmalloc.c	/^  size_t magic;$/;"	m	struct:malloc_params	file:
magic_init_mutex	libffi/build/src/dlmalloc.c	/^static MLOCK_T magic_init_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
magic_init_mutex	libffi/build/src/dlmalloc.c	/^static MLOCK_T magic_init_mutex;$/;"	v	file:
main	driver/gcc/gcc.c	/^int main(int argc, char** argv) {$/;"	f
main	driver/ghc/ghc.c	/^int main(int argc, char** argv) {$/;"	f
main	driver/ghci/ghci.c	/^int main(int argc, char** argv) {$/;"	f
main	driver/haddock/haddock.c	/^int main(int argc, char** argv) {$/;"	f
main	driver/utils/dynwrapper.c	/^int main(int argc, char *argv[]) {$/;"	f
main	ghc/hschooks.c	/^int main (int argc, char *argv[])$/;"	f
main	libffi/build/testsuite/libffi.call/closure_fn0.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/closure_fn1.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/closure_fn2.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/closure_fn3.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/closure_fn4.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/closure_fn5.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/closure_fn6.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/closure_loc_fn0.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/closure_simple.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_12byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_16byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_18byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_19byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_1_1byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_20byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_20byte1.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_24byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_2byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_3_1byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_3byte1.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_3byte2.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_4_1byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_4byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_5_1_byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_5byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_64byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_6_1_byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_6byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_7_1_byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_7byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_8byte.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_9byte1.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_9byte2.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_align_double.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_align_float.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_align_longdouble.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_align_longdouble_split.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_align_longdouble_split2.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_align_pointer.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_align_sint16.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_align_sint32.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_align_sint64.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_align_uint16.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_align_uint32.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_align_uint64.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_dbls_struct.c	/^int main(int argc __UNUSED__, char** argv __UNUSED__)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_double.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_double_va.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_float.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_longdouble.c	/^int main(void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_longdouble_va.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_multi_schar.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_multi_sshort.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_multi_sshortchar.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_multi_uchar.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_multi_ushort.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_multi_ushortchar.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_pointer.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_pointer_stack.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_schar.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_sint.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_sshort.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_struct_va1.c	/^main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_uchar.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_uchar_va.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_uint.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_uint_va.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_ulong_va.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_ulonglong.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_ushort.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/cls_ushort_va.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/err_bad_abi.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/err_bad_typedef.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/float.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/float1.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/float2.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/float3.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/float4.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/float_va.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/huge_struct.c	/^main(int argc __UNUSED__, const char** argv __UNUSED__)$/;"	f
main	libffi/build/testsuite/libffi.call/many.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/many2.c	/^main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/negint.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/nested_struct.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/nested_struct1.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/nested_struct10.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/nested_struct11.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/nested_struct2.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/nested_struct3.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/nested_struct4.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/nested_struct5.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/nested_struct6.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/nested_struct7.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/nested_struct8.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/nested_struct9.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/problem1.c	/^int main(void)$/;"	f
main	libffi/build/testsuite/libffi.call/promotion.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/pyobjc-tc.c	/^int main(void)$/;"	f
main	libffi/build/testsuite/libffi.call/return_dbl.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/return_dbl1.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/return_dbl2.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/return_fl.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/return_fl1.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/return_fl2.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/return_fl3.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/return_ldl.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/return_ll.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/return_ll1.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/return_sc.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/return_sl.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/return_uc.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/return_ul.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/stret_large.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/stret_large2.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/stret_medium.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/stret_medium2.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/strlen.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/strlen2.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/strlen3.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/strlen4.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/struct1.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/struct2.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/struct3.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/struct4.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/struct5.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/struct6.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/struct7.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/struct8.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/struct9.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/testclosure.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/uninitialized.c	/^int main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/va_1.c	/^main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/va_struct1.c	/^main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/va_struct2.c	/^main (void)$/;"	f
main	libffi/build/testsuite/libffi.call/va_struct3.c	/^main (void)$/;"	f
main	libraries/Cabal/cabal-testsuite/PackageTests/CMain/foo.c	/^int main(int argc, char **argv) {$/;"	f
main	libraries/Cabal/cabal-testsuite/PackageTests/COnlyMain/foo.c	/^int main(int argc, char **argv) {$/;"	f
main	libraries/Cabal/cabal-testsuite/PackageTests/Exec/T4049/UseLib.c	/^int main()$/;"	f
main	libraries/Cabal/cabal-testsuite/PackageTests/ForeignLibs/UseLib.c	/^int main()$/;"	f
main	libraries/haskeline/examples/export/main.c	/^int main(int argc, char *argv[]) {$/;"	f
main	libraries/libiserv/cbits/iservmain.c	/^int main (int argc, char *argv[])$/;"	f
main	libraries/process/tests/T9775/main.c	/^int main(int argc, char *argv[]) {$/;"	f
main	libraries/process/tests/T9775/ok.c	/^int main() {$/;"	f
main	libraries/process/tests/exitminus1.c	/^int main() { return -1; }$/;"	f
main	libraries/process/tests/process007_fd.c	/^int main(int argc, char **argv) {$/;"	f
main	nofib/gc/fulsom/raster/raster.c	/^main (argc,argv)$/;"	f
main	nofib/imaginary/paraffins/paraffins.c	/^main(argc, argv)$/;"	f
main	nofib/imaginary/primes/csieve.c	/^int main ()$/;"	f
main	nofib/real/compress/lzw.c	/^int main (void)$/;"	f
main	nofib/real/compress2/inC/bin_conv.c	/^main ()$/;"	f
main	nofib/real/compress2/inC/io_copy.c	/^main ()$/;"	f
main	nofib/real/compress2/inC/prefix_trees.c	/^main ()$/;"	f
main	nofib/real/fem/inC/fem.c	/^main() {$/;"	f
main	nofib/real/fulsom/raster/raster.c	/^main (argc,argv)$/;"	f
main	nofib/real/hidden/etc/nbpip.c	/^main(argc,argv)$/;"	f
main	nofib/shootout/fasta/fasta-c.c	/^int main(int argc, char **argv) {$/;"	f
main	nofib/shootout/reverse-complement/revcomp-c.c	/^int main() {$/;"	f
main	nofib/spectral/simple/simple.c	/^main(int argc, char *argv[])$/;"	f
main	testsuite/tests/cabal/cabal01/hello.c	/^int main () {return 9;}$/;"	f
main	testsuite/tests/concurrent/should_run/conc059_c.c	/^int main(int argc, char *argv[])$/;"	f
main	testsuite/tests/dynlibs/T3807-load.c	/^int main(void) {$/;"	f
main	testsuite/tests/dynlibs/T4464C.c	/^int main(void) {$/;"	f
main	testsuite/tests/ffi/should_run/T5402_main.c	/^int main (int argc, char *argv[])$/;"	f
main	testsuite/tests/ffi/should_run/T5594_c.c	/^int main(int argc, char *argv[])$/;"	f
main	testsuite/tests/ffi/should_run/ffi002_c.c	/^int main(int argc, char *argv[])$/;"	f
main	testsuite/tests/rts/T3236.c	/^int main (int argc, char *argv[])$/;"	f
main	testsuite/tests/rts/T6006_c.c	/^int main(int argc, char** argv) {$/;"	f
main	testsuite/tests/rts/T7037_main.c	/^int main(int argc, char *argv[]) {$/;"	f
main	testsuite/tests/rts/T8124_c.c	/^int main (int argc, char *argv[])$/;"	f
main	testsuite/tests/rts/atomicinc.c	/^int main(int argc, char *argv[])$/;"	f
main	testsuite/tests/rts/atomicxchg.c	/^int main(int argc, char *argv[])$/;"	f
main	testsuite/tests/rts/exec_signals_child.c	/^int main()$/;"	f
main	testsuite/tests/rts/exec_signals_prepare.c	/^int main(int argc, char **argv)$/;"	f
main	testsuite/tests/rts/linker/linker_error.c	/^int main (int argc, char *argv[])$/;"	f
main	testsuite/tests/rts/linker/linker_unload.c	/^int main (int argc, char *argv[])$/;"	f
main	testsuite/tests/rts/linker/runner.c	/^int main(int argc, char *argv[])$/;"	f
main	testsuite/tests/rts/linker/unload_multiple_objs/linker_unload_multiple_objs.c	/^int main (int argc, char *argv[])$/;"	f
main	testsuite/tests/rts/testblockalloc.c	/^int main (int argc, char *argv[])$/;"	f
main	testsuite/tests/rts/testheapalloced.c	/^int main (int argc, char *argv[])$/;"	f
main	testsuite/tests/rts/testmblockalloc.c	/^int main (int argc, char *argv[])$/;"	f
main	testsuite/tests/rts/testwsdeque.c	/^int main(int argc, char*argv[])$/;"	f
main	utils/hp2ps/Main.c	/^int main(int argc, char *argv[])$/;"	f
main	utils/iserv/cbits/iservmain.c	/^int main (int argc, char *argv[])$/;"	f
main	utils/lndir/lndir.c	/^main (ac, av)$/;"	f
main	utils/touchy/touchy.c	/^main(int argc, char** argv)$/;"	f
main	utils/unlit/unlit.c	/^int main(int argc,char **argv)$/;"	f
major_gc	rts/sm/GC.c	/^bool major_gc;$/;"	v
makeGot	rts/linker/MachO.c	/^makeGot(ObjectCode * oc) {$/;"	f
makeGot	rts/linker/elf_got.c	/^makeGot(ObjectCode * oc) {$/;"	f
makePackedCharCopy	libraries/Cabal/cabal-testsuite/PackageTests/Regression/T5309/memoized-tcm/dynamicCharacterOperations.c	/^packedChar *makePackedCharCopy( packedChar *inChar, size_t alphSize, size_t numElems) {$/;"	f
makeStub	rts/linker/MachO.c	/^makeStub(Section * section, void ** addr) {$/;"	f
makeStub	rts/linker/elf_plt.c	/^makeStub(Section * section,$/;"	f
makeStubAarch64	rts/linker/elf_plt_aarch64.c	/^makeStubAarch64(Stub * s) {$/;"	f
makeStubArm	rts/linker/elf_plt_arm.c	/^makeStubArm(Stub * s) {$/;"	f
makeStubArmArm	rts/linker/elf_plt_arm.c	/^makeStubArmArm(Stub * s) {$/;"	f
makeStubArmThm	rts/linker/elf_plt_arm.c	/^makeStubArmThm(Stub * s) {$/;"	f
makeSymbolExtra	rts/linker/SymbolExtras.c	/^SymbolExtra* makeSymbolExtra( ObjectCode const* oc,$/;"	f
makeSymbolExtra_PEi386	rts/linker/PEi386.c	/^makeSymbolExtra_PEi386( ObjectCode* oc, uint64_t index, size_t s, char* symbol )$/;"	f	file:
make_ab_boundaries	nofib/spectral/simple/simple.c	/^int make_ab_boundaries(double a[MAXSIZE][MAXSIZE],double b[MAXSIZE][MAXSIZE],$/;"	f
make_ab_interior	nofib/spectral/simple/simple.c	/^int make_ab_interior(double theta[MAXSIZE][MAXSIZE],double sigma[MAXSIZE][MAXSIZE],$/;"	f
make_area_density_volume	nofib/spectral/simple/simple.c	/^int make_area_density_volume$/;"	f
make_cc_boundaries	nofib/spectral/simple/simple.c	/^int make_cc_boundaries(double cc[MAXSIZE][MAXSIZE])$/;"	f
make_cc_interior	nofib/spectral/simple/simple.c	/^int make_cc_interior$/;"	f
make_energy	nofib/spectral/simple/simple.c	/^int make_energy(double rho[MAXSIZE][MAXSIZE],double theta[MAXSIZE][MAXSIZE],$/;"	f
make_gamma_boundaries	nofib/spectral/simple/simple.c	/^int make_gamma_boundaries(double gamma[MAXSIZE][MAXSIZE])$/;"	f
make_gamma_interior	nofib/spectral/simple/simple.c	/^int make_gamma_interior(double new_r[MAXSIZE][MAXSIZE],double new_z[MAXSIZE][MAXSIZE],$/;"	f
make_pressure	nofib/spectral/simple/simple.c	/^int make_pressure(double rho[MAXSIZE][MAXSIZE],double theta[MAXSIZE][MAXSIZE],$/;"	f
make_sigma	nofib/spectral/simple/simple.c	/^int make_sigma(double deltat, double new_rho[MAXSIZE][MAXSIZE],$/;"	f
make_temperature	nofib/spectral/simple/simple.c	/^int make_temperature(double p[MAXSIZE][MAXSIZE], double epsilon[MAXSIZE][MAXSIZE], $/;"	f
make_theta_boundaries	nofib/spectral/simple/simple.c	/^int make_theta_boundaries(double theta[MAXSIZE][MAXSIZE])$/;"	f
make_theta_interior	nofib/spectral/simple/simple.c	/^int make_theta_interior(double a[MAXSIZE][MAXSIZE],double b[MAXSIZE][MAXSIZE],$/;"	f
make_velocity	nofib/spectral/simple/simple.c	/^int make_velocity (double new_u[MAXSIZE][MAXSIZE], double new_w[MAXSIZE][MAXSIZE],$/;"	f
make_viscosity	nofib/spectral/simple/simple.c	/^int make_viscosity(double p[MAXSIZE][MAXSIZE],double new_q[MAXSIZE][MAXSIZE],$/;"	f
mallinfo	libffi/build/src/dlmalloc.c	/^struct mallinfo {$/;"	s	file:
malloc_chunk	libffi/build/src/dlmalloc.c	/^struct malloc_chunk {$/;"	s	file:
malloc_corruption_error_count	libffi/build/src/dlmalloc.c	/^int malloc_corruption_error_count;$/;"	v
malloc_getpagesize	libffi/build/src/dlmalloc.c	1217;"	d	file:
malloc_getpagesize	libffi/build/src/dlmalloc.c	1221;"	d	file:
malloc_getpagesize	libffi/build/src/dlmalloc.c	1224;"	d	file:
malloc_getpagesize	libffi/build/src/dlmalloc.c	1230;"	d	file:
malloc_getpagesize	libffi/build/src/dlmalloc.c	1234;"	d	file:
malloc_getpagesize	libffi/build/src/dlmalloc.c	1236;"	d	file:
malloc_getpagesize	libffi/build/src/dlmalloc.c	1240;"	d	file:
malloc_getpagesize	libffi/build/src/dlmalloc.c	1243;"	d	file:
malloc_getpagesize	libffi/build/src/dlmalloc.c	1245;"	d	file:
malloc_params	libffi/build/src/dlmalloc.c	/^struct malloc_params {$/;"	s	file:
malloc_segment	libffi/build/src/dlmalloc.c	/^struct malloc_segment {$/;"	s	file:
malloc_state	libffi/build/src/dlmalloc.c	/^struct malloc_state {$/;"	s	file:
malloc_tree_chunk	libffi/build/src/dlmalloc.c	/^struct malloc_tree_chunk {$/;"	s	file:
manLock	rts/win32/IOManager.c	/^    CritSection      manLock;$/;"	m	struct:IOManagerState	file:
mantissa	libraries/base/cbits/primFloat.c	/^	unsigned int mantissa:22;$/;"	m	struct:stg_ieee754_flt::__anon22	file:
mantissa	libraries/base/cbits/primFloat.c	/^	unsigned int mantissa:23;$/;"	m	struct:stg_ieee754_flt::__anon21	file:
mantissa0	libraries/base/cbits/primFloat.c	/^	unsigned int mantissa0:19;$/;"	m	struct:stg_ieee754_dbl::__anon24	file:
mantissa0	libraries/base/cbits/primFloat.c	/^	unsigned int mantissa0:20;$/;"	m	struct:stg_ieee754_dbl::__anon23	file:
mantissa1	libraries/base/cbits/primFloat.c	/^	unsigned int mantissa1:32;$/;"	m	struct:stg_ieee754_dbl::__anon23	file:
mantissa1	libraries/base/cbits/primFloat.c	/^	unsigned int mantissa1:32;$/;"	m	struct:stg_ieee754_dbl::__anon24	file:
many	libffi/build/testsuite/libffi.call/many.c	/^static float ABI_ATTR many(float f1, float f2, float f3, float f4, float f5, float f6, float f7, float f8, float f9, float f10, float f11, float f12, float f13)$/;"	f	file:
many_floats	testsuite/tests/ffi/should_run/T12134_c.c	/^void many_floats(float f1, float f2, float f3, float f4, float f5,$/;"	f
mapEntryToMBlock	rts/sm/MBlock.c	/^void * mapEntryToMBlock(uint32_t i)$/;"	f
mapHashTable	rts/Hash.c	/^mapHashTable(HashTable *table, void *data, MapHashFn fn)$/;"	f
mapObjectFileSection	rts/linker/Elf.c	/^mapObjectFileSection (int fd, Elf_Word offset, Elf_Word size,$/;"	f	file:
maperrno	libraries/base/cbits/Win32Utils.c	/^void maperrno(void)$/;"	f
maperrno_func	libraries/base/cbits/Win32Utils.c	/^int maperrno_func(DWORD dwErrorCode)$/;"	f
markBlocks	rts/sm/BlockAlloc.c	/^markBlocks (bdescr *bd)$/;"	f
markCAFs	rts/sm/GCAux.c	/^markCAFs (evac_fn evac, void *user)$/;"	f
markCapabilities	rts/Capability.c	/^markCapabilities (evac_fn evac, void *user)$/;"	f
markCapability	rts/Capability.c	/^markCapability (evac_fn evac, void *user, Capability *cap,$/;"	f
markCompactBlocks	rts/sm/Sanity.c	/^markCompactBlocks(bdescr *bd)$/;"	f	file:
markHeapAlloced	rts/sm/MBlock.c	/^markHeapAlloced(void *p)$/;"	f	file:
markHeapUnalloced	rts/sm/MBlock.c	/^markHeapUnalloced(void *p)$/;"	f	file:
markImport	rts/RtsSymbolInfo.c	/^static void markImport(SymbolInfo* info)$/;"	f	file:
markNonMovingSegments	rts/sm/Sanity.c	/^markNonMovingSegments(struct NonmovingSegment *seg)$/;"	f	file:
markQueueAddRoot	rts/sm/NonMovingMark.c	/^void markQueueAddRoot (MarkQueue* q, StgClosure** root)$/;"	f
markQueueLength	rts/sm/NonMovingMark.c	/^markQueueLength (MarkQueue *q)$/;"	f	file:
markQueuePop	rts/sm/NonMovingMark.c	/^static MarkQueueEnt markQueuePop (MarkQueue *q)$/;"	f	file:
markQueuePop_	rts/sm/NonMovingMark.c	/^static MarkQueueEnt markQueuePop_ (MarkQueue *q)$/;"	f	file:
markQueuePush	rts/sm/NonMovingMark.c	/^void markQueuePush (MarkQueue *q, const MarkQueueEnt *ent)$/;"	f
markQueuePushArray	rts/sm/NonMovingMark.c	/^void markQueuePushArray (MarkQueue *q,$/;"	f
markQueuePushClosure	rts/sm/NonMovingMark.c	/^void markQueuePushClosure (MarkQueue *q,$/;"	f
markQueuePushClosureGC	rts/sm/NonMovingMark.c	/^markQueuePushClosureGC (MarkQueue *q, StgClosure *p)$/;"	f
markQueuePushClosure_	rts/sm/NonMovingMark.c	/^void markQueuePushClosure_ (MarkQueue *q, StgClosure *p)$/;"	f
markQueuePushFunSrt	rts/sm/NonMovingMark.c	/^void markQueuePushFunSrt (MarkQueue *q, const StgInfoTable *info)$/;"	f
markQueuePushThunkSrt	rts/sm/NonMovingMark.c	/^void markQueuePushThunkSrt (MarkQueue *q, const StgInfoTable *info)$/;"	f
markScheduler	rts/Schedule.c	/^void markScheduler (evac_fn evac USED_IF_NOT_THREADS,$/;"	f
markStablePtrTable	rts/StablePtr.c	/^markStablePtrTable(evac_fn evac, void *user)$/;"	f
markWeak	rts/RtsSymbolInfo.c	/^static void markWeak(SymbolInfo* info)$/;"	f	file:
markWeakPtrList	rts/sm/MarkWeak.c	/^markWeakPtrList ( void )$/;"	f
mark_PAP_payload	rts/sm/NonMovingMark.c	/^void mark_PAP_payload (MarkQueue *queue,$/;"	f	file:
mark_arg_block	rts/sm/NonMovingMark.c	/^mark_arg_block (MarkQueue *queue, const StgFunInfoTable *fun_info, StgClosure **args)$/;"	f	file:
mark_closure	rts/sm/NonMovingMark.c	/^mark_closure (MarkQueue *queue, const StgClosure *p0, StgClosure **origin)$/;"	f	file:
mark_inuse_foot	libffi/build/src/dlmalloc.c	2469;"	d	file:
mark_inuse_foot	libffi/build/src/dlmalloc.c	2488;"	d	file:
mark_large_bitmap	rts/sm/NonMovingMark.c	/^mark_large_bitmap (MarkQueue *queue,$/;"	f	file:
mark_root	rts/sm/GC.c	/^mark_root(void *user USED_IF_THREADS, StgClosure **root)$/;"	f	file:
mark_small_bitmap	rts/sm/NonMovingMark.c	/^mark_small_bitmap (MarkQueue *queue, StgClosure **p, StgWord size, StgWord bitmap)$/;"	f	file:
mark_smallmap	libffi/build/src/dlmalloc.c	2354;"	d	file:
mark_sp	rts/sm/GC.c	/^StgPtr mark_sp;            \/\/ pointer to the next unallocated mark stack entry$/;"	v
mark_stack	rts/sm/NonMovingMark.c	/^mark_stack (MarkQueue *queue, StgStack *stack)$/;"	f	file:
mark_stack_	rts/sm/NonMovingMark.c	/^mark_stack_ (MarkQueue *queue, StgPtr sp, StgPtr spBottom)$/;"	f	file:
mark_stack_bd	rts/sm/GC.c	/^bdescr *mark_stack_bd;     \/\/ current block in the mark stack$/;"	v
mark_stack_top_bd	rts/sm/GC.c	/^bdescr *mark_stack_top_bd; \/\/ topmost block in the mark stack$/;"	v
mark_thread	rts/sm/NonMoving.c	/^OSThreadId mark_thread;$/;"	v
mark_trec_header	rts/sm/NonMovingMark.c	/^mark_trec_header (MarkQueue *queue, StgTRecHeader *trec)$/;"	f	file:
mark_treemap	libffi/build/src/dlmalloc.c	2358;"	d	file:
mark_tso	rts/sm/NonMovingMark.c	/^mark_tso (MarkQueue *queue, StgTSO *tso)$/;"	f	file:
marker	rts/eventlog/EventLog.c	/^  StgInt8 *marker;$/;"	m	struct:_EventsBuf	file:
markmap	utils/hp2ps/HpFile.c	/^floatish *markmap;              \/* sample marks         *\/$/;"	v
mask1	rts/Hash.c	/^    int mask1;              \/* Mask for doing the mod of h_1 (smaller table) *\/$/;"	m	struct:hashtable	file:
mask2	rts/Hash.c	/^    int mask2;              \/* Mask for doing the mod of h_2 (larger table) *\/$/;"	m	struct:hashtable	file:
mass	nofib/spectral/simple/simple.c	/^double mass(int i, int j)$/;"	f
mat	nofib/real/fem/inC/fem.c	/^        int nl,nr,mat;  }  elem_info[MAXELEMENTS];$/;"	m	struct:__anon28	file:
mat_info	nofib/real/fem/inC/fem.c	/^        float ea,ei; }     mat_info[MAXMATERIALS];$/;"	v	typeref:struct:__anon29
matrixDestroy	libraries/Cabal/cabal-testsuite/PackageTests/Regression/T5309/memoized-tcm/costMatrixWrapper.c	/^void matrixDestroy(costMatrix_p untyped_ptr) {$/;"	f
matrixInit	libraries/Cabal/cabal-testsuite/PackageTests/Regression/T5309/memoized-tcm/costMatrixWrapper.c	/^costMatrix_p matrixInit(size_t alphSize, int *tcm) {$/;"	f
max	nofib/imaginary/paraffins/paraffins.c	85;"	d	file:
max	rts/Hash.c	/^    int max;                \/* Max bucket of smaller table *\/$/;"	m	struct:hashtable	file:
max_backtrace_depth	rts/Libdw.c	/^const int max_backtrace_depth = 5000;$/;"	v
max_commits	rts/STM.c	/^static volatile StgInt64 max_commits = 0;$/;"	v	file:
max_depth	rts/Libdw.c	/^    int max_depth;$/;"	m	struct:LibdwSession_	file:
max_era	rts/ProfHeap.c	/^static uint32_t max_era;$/;"	v	file:
max_fd	libraries/process/cbits/runProcess.c	/^static long max_fd = 0;$/;"	v	file:
max_footprint	libffi/build/src/dlmalloc.c	/^  size_t     max_footprint;$/;"	m	struct:malloc_state	file:
max_size	rts/Pool.c	/^    uint32_t max_size;$/;"	m	struct:Pool_	file:
maybePerformBlockedException	rts/RaiseAsync.c	/^maybePerformBlockedException (Capability *cap, StgTSO *tso)$/;"	f
maybe_fixup_internal_pointers	rts/sm/CNF.c	/^maybe_fixup_internal_pointers (StgCompactNFDataBlock *block,$/;"	f	file:
mblock_address_space	rts/sm/MBlock.c	/^struct mblock_address_range mblock_address_space = { 0, 0, {} };$/;"	v	typeref:struct:mblock_address_range
mblock_cache	rts/sm/MBlock.c	/^MbcCacheLine mblock_cache[MBC_ENTRIES];$/;"	v
mblock_high_watermark	rts/sm/MBlock.c	/^static W_ mblock_high_watermark;$/;"	v	file:
mblock_map	rts/sm/MBlock.c	/^StgWord8 mblock_map[MBLOCK_MAP_SIZE]; \/\/ initially all zeros$/;"	v
mblock_map_count	rts/sm/MBlock.c	/^uint32_t mblock_map_count = 0;$/;"	v
mblock_maps	rts/sm/MBlock.c	/^MBlockMap **mblock_maps = NULL;$/;"	v
mblocks_allocated	rts/sm/MBlock.c	/^W_ mblocks_allocated = 0;$/;"	v
mchunk	libffi/build/src/dlmalloc.c	/^typedef struct malloc_chunk  mchunk;$/;"	t	typeref:struct:malloc_chunk	file:
mchunkptr	libffi/build/src/dlmalloc.c	/^typedef struct malloc_chunk* mchunkptr;$/;"	t	typeref:struct:malloc_chunk	file:
mem2chunk	libffi/build/src/dlmalloc.c	1694;"	d	file:
memInventory	rts/sm/Sanity.c	/^memInventory (bool show)$/;"	f
memory_read	rts/Libdw.c	/^static bool memory_read(Dwfl *dwfl STG_UNUSED, Dwarf_Addr addr,$/;"	f	file:
merge_classes	libffi/build/src/x86/ffi64.c	/^merge_classes (enum x86_64_reg_class class1, enum x86_64_reg_class class2)$/;"	f	file:
merge_read_into	rts/STM.c	/^static void merge_read_into(Capability *cap,$/;"	f	file:
merge_update_into	rts/STM.c	/^static void merge_update_into(Capability *cap,$/;"	f	file:
messageBlackHole	rts/Messages.c	/^uint32_t messageBlackHole(Capability *cap, MessageBlackHole *msg)$/;"	f
mflag	utils/hp2ps/Main.c	/^static int     mflag = 0;	\/* max no. of bands displayed (default 20) *\/$/;"	v	file:
mflags	libffi/build/src/dlmalloc.c	/^  flag_t     mflags;$/;"	m	struct:malloc_state	file:
migrateThread	rts/Threads.c	/^migrateThread (Capability *from, StgTSO *tso, Capability *to)$/;"	f
minn	nofib/spectral/simple/simple.c	/^double minn(double a,double b)$/;"	f
minsize_for_tree_index	libffi/build/src/dlmalloc.c	2343;"	d	file:
mkAnonPipe	libraries/process/cbits/runProcess.c	/^mkAnonPipe (HANDLE* pHandleIn, BOOL isInheritableIn,$/;"	f	file:
mkCallbackQueue	testsuite/tests/concurrent/should_run/hs_try_putmvar003_c.c	/^struct callback_queue* mkCallbackQueue(int use_foreign_export, int n_requests)$/;"	f
mkCostCentre	rts/Profiling.c	/^CostCentre *mkCostCentre (char *label, char *module, char *srcloc)$/;"	f
mkDiaTemplate	libraries/Win32/cbits/diatemp.c	/^mkDiaTemplate$/;"	f
mkOc	rts/Linker.c	/^mkOc( pathchar *path, char *image, int imageSize,$/;"	f
mkPath	rts/PathUtils.c	/^pathchar* mkPath(char* path)$/;"	f
mkRtsInfoPair	rts/RtsUtils.c	/^static void mkRtsInfoPair(const char *key, const char *val) {$/;"	f	file:
mkStoreAccessor	rts/Globals.c	95;"	d	file:
mkString	driver/utils/cwrapper.c	/^char *mkString(const char *fmt, ...) {$/;"	f
mkb	utils/hp2ps/Axes.c	/^typedef enum {MEGABYTE, KILOBYTE, BYTE} mkb; $/;"	t	typeref:enum:__anon59	file:
mm	libffi/build/testsuite/libffi.call/huge_struct.c	/^	uint16_t	mm;$/;"	m	struct:BigStruct	file:
mmap	libffi/build/src/closures.c	444;"	d	file:
mmap	libffi/build/src/closures.c	449;"	d	file:
mmapForLinker	rts/Linker.c	/^mmapForLinker (size_t bytes, uint32_t flags, int fd, int offset)$/;"	f
mmapForLinkerMarkExecutable	rts/Linker.c	/^void mmapForLinkerMarkExecutable(void *start, size_t len)$/;"	f
mmap_32bit_base	rts/Linker.c	/^static void *mmap_32bit_base = (void *)MMAP_32BIT_BASE_DEFAULT;$/;"	v	file:
mmap_alloc	libffi/build/src/dlmalloc.c	/^static void* mmap_alloc(mstate m, size_t nb) {$/;"	f	file:
mmap_exec_offset	libffi/build/src/dlmalloc.c	1948;"	d	file:
mmap_resize	libffi/build/src/dlmalloc.c	/^static mchunkptr mmap_resize(mstate m, mchunkptr oldp, size_t nb) {$/;"	f	file:
mmap_threshold	libffi/build/src/dlmalloc.c	/^  size_t mmap_threshold;$/;"	m	struct:malloc_params	file:
modInitFunc1	testsuite/tests/rts/linker/T5435_asm.c	/^static void modInitFunc1(void)  { printf("modInitFunc1\\n"); fflush(stdout); }$/;"	f	file:
modInitFunc2	testsuite/tests/rts/linker/T5435_asm.c	/^static void modInitFunc2(void)  { printf("modInitFunc2\\n"); fflush(stdout); }$/;"	f	file:
mod_init_func	testsuite/tests/rts/linker/T5435_asm.c	/^static void (*mod_init_func[2])(void) __attribute__(($/;"	v	file:
moduleHash	rts/Hpc.c	/^static StrHashTable * moduleHash = NULL;   \/\/ module name -> HpcModuleInfo$/;"	v	file:
modules	rts/Hpc.c	/^HpcModuleInfo *modules = 0;$/;"	v
moreCapEventBufs	rts/eventlog/EventLog.c	/^moreCapEventBufs (uint32_t from, uint32_t to)$/;"	f
moreCapabilities	rts/Capability.c	/^moreCapabilities (uint32_t from USED_IF_THREADS, uint32_t to USED_IF_THREADS)$/;"	f
more_handlers	rts/posix/Signals.c	/^more_handlers(int sig)$/;"	f	file:
morecore_mutex	libffi/build/src/dlmalloc.c	/^static MLOCK_T morecore_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
morecore_mutex	libffi/build/src/dlmalloc.c	/^static MLOCK_T morecore_mutex;$/;"	v	file:
move	rts/sm/Compact.c	/^move(P_ to, P_ from, W_ size)$/;"	f
move_STACK	rts/sm/Storage.c	/^move_STACK (StgStack *src, StgStack *dest)$/;"	f
mp_bitcnt_t	libraries/integer-gmp/cbits/wrappers.c	/^typedef unsigned long int mp_bitcnt_t;$/;"	t	file:
mp_limb_zero_p	libraries/integer-gmp/cbits/wrappers.c	/^mp_limb_zero_p(const mp_limb_t sp[], mp_size_t sn)$/;"	f	file:
mp_size_abs	libraries/integer-gmp/cbits/wrappers.c	/^mp_size_abs(const mp_size_t x)$/;"	f	file:
mp_size_min	libraries/integer-gmp/cbits/wrappers.c	/^mp_size_min(const mp_size_t x, const mp_size_t y)$/;"	f	file:
mp_size_minabs	libraries/integer-gmp/cbits/wrappers.c	/^mp_size_minabs(const mp_size_t x, const mp_size_t y)$/;"	f	file:
mparams	libffi/build/src/dlmalloc.c	/^static struct malloc_params mparams;$/;"	v	typeref:struct:malloc_params	file:
mpc_misses	rts/sm/MBlock.c	/^W_ mpc_misses = 0;$/;"	v
mperror	utils/lndir/lndir.c	/^mperror (s)$/;"	f
msegment	libffi/build/src/dlmalloc.c	/^typedef struct malloc_segment  msegment;$/;"	t	typeref:struct:malloc_segment	file:
msegmentptr	libffi/build/src/dlmalloc.c	/^typedef struct malloc_segment* msegmentptr;$/;"	t	typeref:struct:malloc_segment	file:
msg	utils/lndir/lndir.c	/^msg ($/;"	f
mspace	libffi/build/src/dlmalloc.c	/^typedef void* mspace;$/;"	t	file:
mspace_calloc	libffi/build/src/dlmalloc.c	/^void* mspace_calloc(mspace msp, size_t n_elements, size_t elem_size) {$/;"	f
mspace_footprint	libffi/build/src/dlmalloc.c	/^size_t mspace_footprint(mspace msp) {$/;"	f
mspace_free	libffi/build/src/dlmalloc.c	/^void mspace_free(mspace msp, void* mem) {$/;"	f
mspace_independent_calloc	libffi/build/src/dlmalloc.c	/^void** mspace_independent_calloc(mspace msp, size_t n_elements,$/;"	f
mspace_independent_comalloc	libffi/build/src/dlmalloc.c	/^void** mspace_independent_comalloc(mspace msp, size_t n_elements,$/;"	f
mspace_mallinfo	libffi/build/src/dlmalloc.c	/^struct mallinfo mspace_mallinfo(mspace msp) {$/;"	f
mspace_malloc	libffi/build/src/dlmalloc.c	/^void* mspace_malloc(mspace msp, size_t bytes) {$/;"	f
mspace_malloc_stats	libffi/build/src/dlmalloc.c	/^void mspace_malloc_stats(mspace msp) {$/;"	f
mspace_mallopt	libffi/build/src/dlmalloc.c	/^int mspace_mallopt(int param_number, int value) {$/;"	f
mspace_max_footprint	libffi/build/src/dlmalloc.c	/^size_t mspace_max_footprint(mspace msp) {$/;"	f
mspace_memalign	libffi/build/src/dlmalloc.c	/^void* mspace_memalign(mspace msp, size_t alignment, size_t bytes) {$/;"	f
mspace_realloc	libffi/build/src/dlmalloc.c	/^void* mspace_realloc(mspace msp, void* oldmem, size_t bytes) {$/;"	f
mspace_trim	libffi/build/src/dlmalloc.c	/^int mspace_trim(mspace msp, size_t pad) {$/;"	f
mstate	libffi/build/src/dlmalloc.c	/^typedef struct malloc_state*    mstate;$/;"	t	typeref:struct:malloc_state	file:
mult	testsuite/tests/rts/T13617.c	/^int mult(int a[], int b[], int N)$/;"	f
multipageflag	utils/hp2ps/Main.c	/^boolish multipageflag = 0;  \/* true when the output should be 2 pages - key and profile *\/ $/;"	v
munmap	libffi/build/src/closures.c	445;"	d	file:
munmap	libffi/build/src/closures.c	450;"	d	file:
munmapForLinker	rts/linker/M32Alloc.c	/^munmapForLinker (void * addr, size_t size)$/;"	f	file:
mut_user_time	rts/Stats.c	/^mut_user_time( void )$/;"	f
mut_user_time_during_RP	rts/Stats.c	/^mut_user_time_during_RP( void )$/;"	f	file:
mut_user_time_until	rts/Stats.c	/^mut_user_time_until( Time t )$/;"	f
mutex	libffi/build/src/dlmalloc.c	/^  MLOCK_T    mutex;     \/* locate lock among fields that rarely change *\/$/;"	m	struct:malloc_state	file:
mutex	rts/Pool.c	/^    Mutex mutex;$/;"	m	struct:Pool_	file:
mutex	rts/posix/itimer/Pthread.c	/^static Mutex mutex;$/;"	v	file:
mutlist_MUTARRS	rts/sm/GC.c	/^    mutlist_MUTARRS,$/;"	v
mutlist_MUTVARS	rts/sm/GC.c	/^uint32_t mutlist_MUTVARS,$/;"	v
mutlist_MVARS	rts/sm/GC.c	/^    mutlist_MVARS,$/;"	v
mutlist_OTHERS	rts/sm/GC.c	/^    mutlist_OTHERS;$/;"	v
mutlist_TREC_CHUNK	rts/sm/GC.c	/^    mutlist_TREC_CHUNK,$/;"	v
mutlist_TREC_HEADER	rts/sm/GC.c	/^    mutlist_TREC_HEADER,$/;"	v
mutlist_TVAR	rts/sm/GC.c	/^    mutlist_TVAR,$/;"	v
mutlist_TVAR_WATCH_QUEUE	rts/sm/GC.c	/^    mutlist_TVAR_WATCH_QUEUE,$/;"	v
mvar	testsuite/tests/concurrent/should_run/hs_try_putmvar001_c.c	/^    HsStablePtr mvar;$/;"	m	struct:callback	file:
mvar	testsuite/tests/concurrent/should_run/hs_try_putmvar003_c.c	/^    HsStablePtr mvar;$/;"	m	struct:callback	file:
myForeignLibExit	libraries/Cabal/cabal-testsuite/PackageTests/Exec/T4049/csrc/MyForeignLibWrapper.c	/^void myForeignLibExit(void){$/;"	f
myForeignLibExit	libraries/Cabal/cabal-testsuite/PackageTests/ForeignLibs/csrc/MyForeignLibWrapper.c	/^void myForeignLibExit(void){$/;"	f
myForeignLibInit	libraries/Cabal/cabal-testsuite/PackageTests/Exec/T4049/csrc/MyForeignLibWrapper.c	/^HsBool myForeignLibInit(void){$/;"	f
myForeignLibInit	libraries/Cabal/cabal-testsuite/PackageTests/ForeignLibs/csrc/MyForeignLibWrapper.c	/^HsBool myForeignLibInit(void){$/;"	f
myStealWSDeque	testsuite/tests/rts/testwsdeque.c	/^myStealWSDeque (WSDeque *q, uint32_t n)$/;"	f
myStealWSDeque_	testsuite/tests/rts/testwsdeque.c	/^myStealWSDeque_ (WSDeque *q, uint32_t n)$/;"	f
my_f	libffi/build/testsuite/libffi.call/strlen2.c	/^static size_t ABI_ATTR my_f(char *s, float a)$/;"	f	file:
my_f	libffi/build/testsuite/libffi.call/strlen3.c	/^static size_t ABI_ATTR my_f(float a, char *s)$/;"	f	file:
my_f	libffi/build/testsuite/libffi.call/strlen4.c	/^static size_t ABI_ATTR my_f(float a, char *s, int i)$/;"	f	file:
my_ffi_struct	libffi/build/testsuite/libffi.call/problem1.c	/^typedef struct my_ffi_struct {$/;"	s	file:
my_ffi_struct	libffi/build/testsuite/libffi.call/problem1.c	/^} my_ffi_struct;$/;"	t	typeref:struct:my_ffi_struct	file:
my_mmap	rts/posix/OSMem.c	/^my_mmap (void *addr, W_ size, int operation)$/;"	f	file:
my_mmap_or_barf	rts/posix/OSMem.c	/^my_mmap_or_barf (void *addr, W_ size, int operation)$/;"	f	file:
my_strlen	libffi/build/testsuite/libffi.call/strlen.c	/^static size_t ABI_ATTR my_strlen(char *s)$/;"	f	file:
my_task	rts/Task.c	/^Task *my_task;$/;"	v
my_task	rts/Task.c	/^__thread Task *my_task;$/;"	v
mymkdir	utils/lndir/lndir.c	97;"	d	file:
mymkdir	utils/lndir/lndir.c	99;"	d	file:
myputc	utils/unlit/unlit.c	/^static void myputc(char c, FILE *ostream)$/;"	f	file:
n	libffi/build/testsuite/libffi.call/huge_struct.c	/^	int8_t		n;$/;"	m	struct:BigStruct	file:
n	libffi/build/testsuite/libffi.call/stret_large.c	/^	int n;$/;"	m	struct:struct_108byte	file:
n	libffi/build/testsuite/libffi.call/stret_large2.c	/^	double n;$/;"	m	struct:struct_116byte	file:
n	testsuite/tests/ffi/should_run/T8083_c.c	/^int n = 1;$/;"	v
nHandlers	rts/posix/Signals.c	/^static StgInt nHandlers = 0;    \/* Size of handlers array *\/$/;"	v	file:
n_alloc_blocks	rts/sm/BlockAlloc.c	/^W_ n_alloc_blocks;   \/\/ currently allocated blocks$/;"	v
n_alloc_blocks_by_node	rts/sm/BlockAlloc.c	/^W_ n_alloc_blocks_by_node[MAX_NUMA_NODES];$/;"	v
n_capabilities	rts/Capability.c	/^uint32_t n_capabilities = 0;$/;"	v
n_censuses	rts/ProfHeap.c	/^static uint32_t n_censuses = 0;$/;"	v	file:
n_finalizers	rts/Weak.c	/^static uint32_t n_finalizers = 0;$/;"	v	file:
n_gc_threads	rts/sm/GC.c	/^uint32_t n_gc_threads;$/;"	v
n_haskell_handlers	rts/posix/Signals.c	/^static uint32_t n_haskell_handlers = 0;$/;"	v	file:
n_nonmoving_compact_blocks	rts/sm/NonMovingMark.c	/^memcount n_nonmoving_compact_blocks = 0;$/;"	v
n_nonmoving_large_blocks	rts/sm/NonMovingMark.c	/^memcount n_nonmoving_large_blocks = 0;$/;"	v
n_nonmoving_marked_compact_blocks	rts/sm/NonMovingMark.c	/^memcount n_nonmoving_marked_compact_blocks = 0;$/;"	v
n_nonmoving_marked_large_blocks	rts/sm/NonMovingMark.c	/^memcount n_nonmoving_marked_large_blocks = 0;$/;"	v
n_numa_nodes	rts/Capability.c	/^uint32_t n_numa_nodes;$/;"	v
n_nurseries	rts/sm/Storage.c	/^uint32_t n_nurseries;$/;"	v
n_old_SPTs	rts/StablePtr.c	/^static uint32_t n_old_SPTs = 0;$/;"	v	file:
n_requests	testsuite/tests/concurrent/should_run/hs_try_putmvar003_c.c	/^    int n_requests;$/;"	m	struct:callback_queue	file:
n_sections	rts/CheckUnload.c	/^    int n_sections;$/;"	m	struct:__anon35	file:
nc	nofib/imaginary/paraffins/paraffins.c	/^      int nc[3];$/;"	m	struct:three_parts	file:
nc	nofib/imaginary/paraffins/paraffins.c	/^      int nc[4];$/;"	m	struct:four_parts	file:
ndgrs	nofib/real/fem/inC/fem.c	/^int ndgrs;$/;"	v
needGotSlot	rts/linker/MachO.c	/^needGotSlot(MachONList * symbol) {$/;"	f
needGotSlot	rts/linker/elf_got.c	/^needGotSlot(Elf_Sym * symbol) {$/;"	f
needStubForRel	rts/linker/elf_plt.c	15;"	d	file:
needStubForRelAarch64	rts/linker/elf_plt_aarch64.c	/^bool needStubForRelAarch64(Elf_Rel * rel) {$/;"	f
needStubForRelArm	rts/linker/elf_plt_arm.c	/^bool needStubForRelArm(Elf_Rel * rel) {$/;"	f
needStubForRela	rts/linker/elf_plt.c	16;"	d	file:
needStubForRelaAarch64	rts/linker/elf_plt_aarch64.c	/^bool needStubForRelaAarch64(Elf_Rela * rela) {$/;"	f
needStubForRelaArm	rts/linker/elf_plt_arm.c	/^bool needStubForRelaArm(Elf_Rela * rela) {$/;"	f
needs_upd_rem_set_mark	rts/sm/NonMovingMark.c	/^STATIC_INLINE bool needs_upd_rem_set_mark(StgClosure *p)$/;"	f
negative	libraries/base/cbits/primFloat.c	/^	unsigned int negative:1;$/;"	m	struct:stg_ieee754_dbl::__anon23	file:
negative	libraries/base/cbits/primFloat.c	/^	unsigned int negative:1;$/;"	m	struct:stg_ieee754_dbl::__anon24	file:
negative	libraries/base/cbits/primFloat.c	/^	unsigned int negative:1;$/;"	m	struct:stg_ieee754_flt::__anon21	file:
negative	libraries/base/cbits/primFloat.c	/^	unsigned int negative:1;$/;"	m	struct:stg_ieee754_flt::__anon22	file:
negative_framesize	rts/Adjustor.c	/^    StgInt          negative_framesize;$/;"	m	struct:AdjustorStub	file:
nelem	nofib/real/fem/inC/fem.c	/^int nnode, nelem, nmats, nplds;$/;"	v
newArena	rts/Arena.c	/^newArena( void )$/;"	f
newBoundTask	rts/Task.c	/^newBoundTask (void)$/;"	f
newCAF	rts/sm/Storage.c	/^newCAF(StgRegTable *reg, StgIndStatic *caf)$/;"	f
newEmptyPAP	rts/Interpreter.c	/^StgClosure * newEmptyPAP (Capability *cap,$/;"	f
newGCdCAF	rts/sm/Storage.c	/^StgInd* newGCdCAF (StgRegTable *reg, StgIndStatic *caf)$/;"	f
newHash	rts/sm/Scav.c	/^    HashTable *newHash;$/;"	m	struct:__anon47	file:
newInCall	rts/Task.c	/^newInCall (Task *task)$/;"	f	file:
newRetainedCAF	rts/sm/Storage.c	/^StgInd* newRetainedCAF (StgRegTable *reg, StgIndStatic *caf)$/;"	f
newReturningTask	rts/Capability.c	/^newReturningTask (Capability *cap, Task *task)$/;"	f
newSemaphore	rts/win32/WorkQueue.c	/^newSemaphore(int initCount, int max)$/;"	f	file:
newSpark	rts/Sparks.c	/^newSpark (StgRegTable *reg STG_UNUSED, StgClosure *p STG_UNUSED)$/;"	f
newSpark	rts/Sparks.c	/^newSpark (StgRegTable *reg, StgClosure *p)$/;"	f
newStackBlock	rts/TraverseHeap.c	/^newStackBlock( traverseState *ts, bdescr *bd )$/;"	f
newTask	rts/Task.c	/^newTask (bool worker)$/;"	f	file:
newThreadLocalKey	rts/posix/OSThreads.c	/^newThreadLocalKey (ThreadLocalKey *key)$/;"	f
newThreadLocalKey	rts/win32/OSThreads.c	/^newThreadLocalKey (ThreadLocalKey *key)$/;"	f
newWSDeque	rts/WSDeque.c	/^newWSDeque (uint32_t size)$/;"	f
new_alpha	nofib/spectral/simple/simple.c	/^double new_alpha[MAXSIZE][MAXSIZE], new_s[MAXSIZE][MAXSIZE];$/;"	v
new_c	nofib/spectral/simple/simple.c	/^double c,new_c;$/;"	v
new_d	nofib/spectral/simple/simple.c	/^double d[MAXSIZE][MAXSIZE],new_d[MAXSIZE][MAXSIZE];$/;"	v
new_deltat	nofib/spectral/simple/simple.c	/^double deltat,new_deltat;$/;"	v
new_epsilon	nofib/spectral/simple/simple.c	/^double epsilon[MAXSIZE][MAXSIZE],new_epsilon[MAXSIZE][MAXSIZE];$/;"	v
new_gc_thread	rts/sm/GC.c	/^new_gc_thread (uint32_t n, gc_thread *t)$/;"	f	file:
new_p	nofib/spectral/simple/simple.c	/^double new_p[MAXSIZE][MAXSIZE], new_q[MAXSIZE][MAXSIZE];$/;"	v
new_q	nofib/spectral/simple/simple.c	/^double new_p[MAXSIZE][MAXSIZE], new_q[MAXSIZE][MAXSIZE];$/;"	v
new_rho	nofib/spectral/simple/simple.c	/^double rho[MAXSIZE][MAXSIZE],new_rho[MAXSIZE][MAXSIZE];$/;"	v
new_s	nofib/spectral/simple/simple.c	/^double new_alpha[MAXSIZE][MAXSIZE], new_s[MAXSIZE][MAXSIZE];$/;"	v
new_stg_trec_chunk	rts/STM.c	/^static StgTRecChunk *new_stg_trec_chunk(Capability *cap) {$/;"	f	file:
new_stg_trec_header	rts/STM.c	/^static StgTRecHeader *new_stg_trec_header(Capability *cap,$/;"	f	file:
new_stg_tvar_watch_queue	rts/STM.c	/^static StgTVarWatchQueue *new_stg_tvar_watch_queue(Capability *cap,$/;"	f	file:
new_theta	nofib/spectral/simple/simple.c	/^double new_theta[MAXSIZE][MAXSIZE];$/;"	v
new_vx	nofib/spectral/simple/simple.c	/^double new_vx[MAXSIZE][MAXSIZE], new_vy[MAXSIZE][MAXSIZE];$/;"	v
new_vy	nofib/spectral/simple/simple.c	/^double new_vx[MAXSIZE][MAXSIZE], new_vy[MAXSIZE][MAXSIZE];$/;"	v
new_xx	nofib/spectral/simple/simple.c	/^double new_xx[MAXSIZE][MAXSIZE], new_xy[MAXSIZE][MAXSIZE];$/;"	v
new_xy	nofib/spectral/simple/simple.c	/^double new_xx[MAXSIZE][MAXSIZE], new_xy[MAXSIZE][MAXSIZE];$/;"	v
newton_raphson	nofib/spectral/simple/simple.c	/^double newton_raphson$/;"	f
next	libffi/build/src/closures.c	/^  ffi_trampoline_table *next;$/;"	m	struct:ffi_trampoline_table	file:
next	libffi/build/src/closures.c	/^  ffi_trampoline_table_entry *next;$/;"	m	struct:ffi_trampoline_table_entry	file:
next	libffi/build/src/dlmalloc.c	/^  struct malloc_segment* next;   \/* ptr to next segment *\/$/;"	m	struct:malloc_segment	typeref:struct:malloc_segment::malloc_segment	file:
next	nofib/imaginary/paraffins/paraffins.c	/^      struct four_parts *next;$/;"	m	struct:four_parts	typeref:struct:four_parts::four_parts	file:
next	nofib/imaginary/paraffins/paraffins.c	/^      struct paraffin *next;$/;"	m	struct:paraffin	typeref:struct:paraffin::paraffin	file:
next	nofib/imaginary/paraffins/paraffins.c	/^      struct radical *next;$/;"	m	struct:radical	typeref:struct:radical::radical	file:
next	nofib/imaginary/paraffins/paraffins.c	/^      struct three_parts *next;$/;"	m	struct:three_parts	typeref:struct:three_parts::three_parts	file:
next	nofib/shootout/reverse-complement/revcomp-c.c	/^   work_t *next;$/;"	m	struct:work_s	file:
next	rts/Hash.c	/^    struct hashlist *next;  \/* Next cell in bucket chain (same hash value) *\/$/;"	m	struct:hashlist	typeref:struct:hashlist::hashlist	file:
next	rts/Hash.c	/^  struct chunklist *next;$/;"	m	struct:chunklist	typeref:struct:chunklist::chunklist	file:
next	rts/Linker.c	/^      struct _OpenedSO* next;$/;"	m	struct:_OpenedSO	typeref:struct:_OpenedSO::_OpenedSO	file:
next	rts/Pool.c	/^    struct PoolEntry_ *next;$/;"	m	struct:PoolEntry_	typeref:struct:PoolEntry_::PoolEntry_	file:
next	rts/ProfHeap.c	/^    struct _counter *next;$/;"	m	struct:_counter	typeref:struct:_counter::_counter	file:
next	rts/TraverseHeap.c	/^    nextPos next;$/;"	m	struct:__anon52	file:
next	rts/linker/M32Alloc.c	/^      struct m32_page_t *next;$/;"	m	struct:m32_page_t::__anon38::__anon40	typeref:struct:m32_page_t::__anon38::__anon40::m32_page_t	file:
next	rts/linker/M32Alloc.c	/^      uint32_t next; \/\/ this is a m32_page_t*, truncated to 32-bits. This is safe$/;"	m	struct:m32_page_t::__anon38::__anon39	file:
next	rts/sm/MBlock.c	/^    struct free_list *next;$/;"	m	struct:free_list	typeref:struct:free_list::free_list	file:
next	rts/win32/OSMem.c	/^    struct alloc_rec_* next;$/;"	m	struct:alloc_rec_	typeref:struct:alloc_rec_::alloc_rec_	file:
next	rts/win32/OSMem.c	/^    struct block_rec_* next;$/;"	m	struct:block_rec_	typeref:struct:block_rec_::block_rec_	file:
next	testsuite/tests/concurrent/should_run/hs_try_putmvar003_c.c	/^    struct callback *next;$/;"	m	struct:callback	typeref:struct:callback::callback	file:
nextEra	rts/ProfHeap.c	/^nextEra( void )$/;"	f	file:
nextId	rts/RetainerSet.c	/^static int nextId;              \/\/ id of next retainer set$/;"	v	file:
nextPos	rts/TraverseHeap.c	/^} nextPos;$/;"	t	typeref:union:__anon49	file:
nextPosType	rts/TraverseHeap.c	/^} nextPosType;$/;"	t	typeref:enum:__anon48	file:
next_chunk	libffi/build/src/dlmalloc.c	1741;"	d	file:
next_code	nofib/real/compress2/inC/prefix_trees.c	/^int next_code = 256;$/;"	v
next_element	nofib/real/compress/lzw.c	/^int next_element;$/;"	v
next_element_p	nofib/real/compress/lzw.c	/^struct prefix_tree *next_element_p;$/;"	v	typeref:struct:prefix_tree
next_event	rts/win32/ThrIOManager.c	/^uint32_t next_event;$/;"	v
next_gap	rts/ThreadPaused.c	/^struct stack_gap { StgWord gap_size; struct stack_gap *next_gap; };$/;"	m	struct:stack_gap	typeref:struct:stack_gap::stack_gap	file:
next_nursery	rts/sm/Storage.c	/^volatile StgWord next_nursery[MAX_NUMA_NODES];$/;"	v
next_pending_handler	rts/posix/Signals.c	/^siginfo_t *next_pending_handler = pending_handler_buf;$/;"	v
next_pinuse	libffi/build/src/dlmalloc.c	1745;"	d	file:
next_request	rts/posix/OSMem.c	/^static void *next_request = 0;$/;"	v	file:
next_thread	rts/Libdw.c	/^static pid_t next_thread(Dwfl *dwfl, void *arg, void **thread_argp) {$/;"	f	file:
next_thread_id	rts/Threads.c	/^static StgThreadID next_thread_id = 1;$/;"	v	file:
ngrn	libffi/build/src/aarch64/ffi.c	/^  unsigned ngrn;                \/* Next general-purpose register number. *\/$/;"	m	struct:arg_state	file:
nidents	utils/hp2ps/Main.c	/^intish nidents;$/;"	v
niterations	nofib/spectral/simple/simple.c	/^int niterations, problem_size;$/;"	v
nl	nofib/real/fem/inC/fem.c	/^        int nl,nr,mat;  }  elem_info[MAXELEMENTS];$/;"	m	struct:__anon28	file:
nmarks	utils/hp2ps/Main.c	/^intish nmarks;$/;"	v
nmats	nofib/real/fem/inC/fem.c	/^int nnode, nelem, nmats, nplds;$/;"	v
nn	libffi/build/testsuite/libffi.call/huge_struct.c	/^	int16_t		nn;$/;"	m	struct:BigStruct	file:
nnode	nofib/real/fem/inC/fem.c	/^int nnode, nelem, nmats, nplds;$/;"	v
noParms	libraries/Win32/cbits/diatemp.c	/^LPWORD noParms (LPDLGITEMTEMPLATE item, LPWORD ptr)$/;"	f	file:
no_line_pragma	utils/unlit/unlit.c	/^static int no_line_pragma = 0; \/* Leave out initial line pragma *\/$/;"	v	file:
nocldstop	rts/posix/Signals.c	/^HsInt nocldstop = 0;$/;"	v
nodeWithLeastBlocks	rts/sm/BlockAlloc.c	/^uint32_t nodeWithLeastBlocks (void)$/;"	f
node_info	nofib/real/fem/inC/fem.c	/^        int   u,v,theta; } node_info[MAXNODES];$/;"	v	typeref:struct:__anon27
noisy	utils/unlit/unlit.c	/^static int noisy  = 1;   \/* 0 => keep quiet about errors, 1 => report errors *\/$/;"	v	file:
nonmovingAddCapabilities	rts/sm/NonMoving.c	/^void nonmovingAddCapabilities(uint32_t new_n_caps)$/;"	f
nonmovingAddUpdRemSetBlocks	rts/sm/NonMovingMark.c	/^void nonmovingAddUpdRemSetBlocks(MarkQueue *rset)$/;"	f
nonmovingAllocSegment	rts/sm/NonMoving.c	/^static struct NonmovingSegment *nonmovingAllocSegment(uint32_t node)$/;"	f	file:
nonmovingAllocate	rts/sm/NonMoving.c	/^void *nonmovingAllocate(Capability *cap, StgWord sz)$/;"	f
nonmovingAllocatorCensus	rts/sm/NonMovingCensus.c	/^nonmovingAllocatorCensus(struct NonmovingAllocator *alloc)$/;"	f
nonmovingAllocatorCensusWithWords	rts/sm/NonMovingCensus.c	/^nonmovingAllocatorCensusWithWords(struct NonmovingAllocator *alloc)$/;"	f
nonmovingAllocatorCensus_	rts/sm/NonMovingCensus.c	/^nonmovingAllocatorCensus_(struct NonmovingAllocator *alloc, bool collect_live_words)$/;"	f	file:
nonmovingBeginFlush	rts/sm/NonMovingMark.c	/^void nonmovingBeginFlush(Task *task)$/;"	f
nonmovingBlockCountFromSize	rts/sm/NonMoving.c	/^unsigned int nonmovingBlockCountFromSize(uint8_t log_block_size)$/;"	f
nonmovingBumpEpoch	rts/sm/NonMoving.c	/^static void nonmovingBumpEpoch(void) {$/;"	f	file:
nonmovingClearBitmap	rts/sm/NonMoving.c	/^void nonmovingClearBitmap(struct NonmovingSegment *seg)$/;"	f
nonmovingCollect	rts/sm/NonMoving.c	/^void nonmovingCollect(StgWeak **dead_weaks, StgTSO **resurrected_threads)$/;"	f
nonmovingConcurrentMark	rts/sm/NonMoving.c	/^static void* nonmovingConcurrentMark(void *data)$/;"	f	file:
nonmovingExit	rts/sm/NonMoving.c	/^void nonmovingExit(void)$/;"	f
nonmovingFinishFlush	rts/sm/NonMovingMark.c	/^void nonmovingFinishFlush(Task *task)$/;"	f
nonmovingFlushCapUpdRemSetBlocks	rts/sm/NonMovingMark.c	/^void nonmovingFlushCapUpdRemSetBlocks(Capability *cap)$/;"	f
nonmovingGcCafs	rts/sm/NonMovingSweep.c	/^void nonmovingGcCafs()$/;"	f
nonmovingHeap	rts/sm/NonMoving.c	/^struct NonmovingHeap nonmovingHeap;$/;"	v	typeref:struct:NonmovingHeap
nonmovingInit	rts/sm/NonMoving.c	/^void nonmovingInit(void)$/;"	f
nonmovingInitSegment	rts/sm/NonMoving.c	/^static void nonmovingInitSegment(struct NonmovingSegment *seg, uint8_t log_block_size)$/;"	f	file:
nonmovingIsAlive	rts/sm/NonMovingMark.c	/^bool nonmovingIsAlive (StgClosure *p)$/;"	f
nonmovingIsNowAlive	rts/sm/NonMovingMark.c	/^static bool nonmovingIsNowAlive (StgClosure *p)$/;"	f	file:
nonmovingMark	rts/sm/NonMovingMark.c	/^nonmovingMark (MarkQueue *queue)$/;"	f
nonmovingMarkDeadWeak	rts/sm/NonMovingMark.c	/^void nonmovingMarkDeadWeak (struct MarkQueue_ *queue, StgWeak *w)$/;"	f
nonmovingMarkDeadWeaks	rts/sm/NonMovingMark.c	/^void nonmovingMarkDeadWeaks (struct MarkQueue_ *queue, StgWeak **dead_weaks)$/;"	f
nonmovingMarkEpoch	rts/sm/NonMoving.c	/^uint8_t nonmovingMarkEpoch = 1;$/;"	v
nonmovingMarkInitUpdRemSet	rts/sm/NonMovingMark.c	/^void nonmovingMarkInitUpdRemSet() {$/;"	f
nonmovingMarkLiveWeak	rts/sm/NonMovingMark.c	/^void nonmovingMarkLiveWeak (struct MarkQueue_ *queue, StgWeak *w)$/;"	f
nonmovingMarkThreadsWeaks	rts/sm/NonMoving.c	/^static void nonmovingMarkThreadsWeaks(MarkQueue *mark_queue)$/;"	f	file:
nonmovingMarkWeakPtrList	rts/sm/NonMoving.c	/^static void nonmovingMarkWeakPtrList(MarkQueue *mark_queue, StgWeak *dead_weak_ptr_list)$/;"	f	file:
nonmovingMark_	rts/sm/NonMoving.c	/^static void nonmovingMark_(MarkQueue *mark_queue, StgWeak **dead_weaks, StgTSO **resurrected_threads)$/;"	f	file:
nonmovingPopFreeSegment	rts/sm/NonMoving.c	/^static struct NonmovingSegment *nonmovingPopFreeSegment(void)$/;"	f	file:
nonmovingPrepareMark	rts/sm/NonMoving.c	/^static void nonmovingPrepareMark(void)$/;"	f	file:
nonmovingPrintAllocator	rts/sm/NonMoving.c	/^void nonmovingPrintAllocator(struct NonmovingAllocator *alloc)$/;"	f
nonmovingPrintAllocatorCensus	rts/sm/NonMovingCensus.c	/^void nonmovingPrintAllocatorCensus()$/;"	f
nonmovingPrintSegment	rts/sm/NonMoving.c	/^void nonmovingPrintSegment(struct NonmovingSegment *seg)$/;"	f
nonmovingPrintSweepList	rts/sm/NonMoving.c	/^void nonmovingPrintSweepList()$/;"	f
nonmovingPushFreeSegment	rts/sm/NonMoving.c	/^void nonmovingPushFreeSegment(struct NonmovingSegment *seg)$/;"	f
nonmovingResurrectThreads	rts/sm/NonMovingMark.c	/^void nonmovingResurrectThreads (struct MarkQueue_ *queue, StgTSO **resurrected_threads)$/;"	f
nonmovingScavengeOne	rts/sm/NonMovingScav.c	/^nonmovingScavengeOne (StgClosure *q)$/;"	f
nonmovingStop	rts/sm/NonMoving.c	/^void nonmovingStop(void)$/;"	f
nonmovingSweep	rts/sm/NonMovingSweep.c	/^GNUC_ATTR_HOT void nonmovingSweep(void)$/;"	f
nonmovingSweepCompactObjects	rts/sm/NonMovingSweep.c	/^void nonmovingSweepCompactObjects()$/;"	f
nonmovingSweepLargeObjects	rts/sm/NonMovingSweep.c	/^void nonmovingSweepLargeObjects()$/;"	f
nonmovingSweepMutLists	rts/sm/NonMovingSweep.c	/^void nonmovingSweepMutLists()$/;"	f
nonmovingSweepSegment	rts/sm/NonMovingSweep.c	/^nonmovingSweepSegment(struct NonmovingSegment *seg)$/;"	f	file:
nonmovingSweepStableNameTable	rts/sm/NonMovingSweep.c	/^void nonmovingSweepStableNameTable()$/;"	f
nonmovingTidyThreads	rts/sm/NonMovingMark.c	/^void nonmovingTidyThreads ()$/;"	f
nonmovingTidyWeaks	rts/sm/NonMovingMark.c	/^bool nonmovingTidyWeaks (struct MarkQueue_ *queue)$/;"	f
nonmovingTraceAllocatorCensus	rts/sm/NonMovingCensus.c	/^void nonmovingTraceAllocatorCensus()$/;"	f
nonmovingWaitForFlush	rts/sm/NonMovingMark.c	/^bool nonmovingWaitForFlush()$/;"	f
nonmoving_collection_mutex	rts/sm/NonMoving.c	/^Mutex nonmoving_collection_mutex;$/;"	v
nonmoving_compact_objects	rts/sm/NonMovingMark.c	/^bdescr *nonmoving_compact_objects = NULL;$/;"	v
nonmoving_eval_thunk_selector	rts/sm/NonMovingShortcut.c	/^nonmoving_eval_thunk_selector(MarkQueue *queue, StgSelector *p, StgClosure **origin)$/;"	f
nonmoving_eval_thunk_selector_	rts/sm/NonMovingShortcut.c	/^nonmoving_eval_thunk_selector_($/;"	f	file:
nonmoving_large_objects	rts/sm/NonMovingMark.c	/^bdescr *nonmoving_large_objects = NULL;$/;"	v
nonmoving_large_objects_mutex	rts/sm/NonMovingMark.c	/^static Mutex nonmoving_large_objects_mutex;$/;"	v	file:
nonmoving_live_words	rts/sm/NonMoving.c	/^memcount nonmoving_live_words = 0;$/;"	v
nonmoving_marked_compact_objects	rts/sm/NonMovingMark.c	/^bdescr *nonmoving_marked_compact_objects = NULL;$/;"	v
nonmoving_marked_large_objects	rts/sm/NonMovingMark.c	/^bdescr *nonmoving_marked_large_objects = NULL;$/;"	v
nonmoving_old_threads	rts/sm/NonMovingMark.c	/^StgTSO *nonmoving_old_threads = END_TSO_QUEUE;$/;"	v
nonmoving_old_weak_ptr_list	rts/sm/NonMovingMark.c	/^StgWeak *nonmoving_old_weak_ptr_list = NULL;$/;"	v
nonmoving_threads	rts/sm/NonMovingMark.c	/^StgTSO *nonmoving_threads = END_TSO_QUEUE;$/;"	v
nonmoving_weak_ptr_list	rts/sm/NonMovingMark.c	/^StgWeak *nonmoving_weak_ptr_list = NULL;$/;"	v
nonmoving_write_barrier_enabled	rts/sm/NonMovingMark.c	/^StgWord nonmoving_write_barrier_enabled = false;$/;"	v
normaliseRtsOpts	rts/RtsFlags.c	/^static void normaliseRtsOpts (void)$/;"	f	file:
not_used	rts/ProfHeap.c	/^            ssize_t not_used; \/\/ 'never used' closures$/;"	m	struct:_counter::__anon42::__anon43	file:
not_used	rts/ProfHeap.c	/^    ssize_t    not_used;$/;"	m	struct:__anon44	file:
nplds	nofib/real/fem/inC/fem.c	/^int nnode, nelem, nmats, nplds;$/;"	v
nr	nofib/real/fem/inC/fem.c	/^        int nl,nr,mat;  }  elem_info[MAXELEMENTS];$/;"	m	struct:__anon28	file:
nregs	libffi/build/src/x86/ffi.c	/^  int nregs;		\/* number of register parameters *\/$/;"	m	struct:abi_params	file:
nsaa	libffi/build/src/aarch64/ffi.c	/^  size_t nsaa;                  \/* Next stack offset. *\/$/;"	m	struct:arg_state	file:
nsamples	utils/hp2ps/Main.c	/^intish nsamples;$/;"	v
nsrn	libffi/build/src/aarch64/ffi.c	/^  unsigned nsrn;                \/* Next vector register number. *\/$/;"	m	struct:arg_state	file:
nullrule	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ nullrule={0,NUMCAT_CN,0,0,0,0};$/;"	v	typeref:struct:_convrule_	file:
numDigits	rts/ProfilerReport.c	/^numDigits(StgInt i) {$/;"	f	file:
numObjectVisited	rts/RetainerProfile.c	/^static uint32_t numObjectVisited;    \/\/ total number of objects visited$/;"	v	file:
numWorkers	rts/win32/IOManager.c	/^    int              numWorkers;$/;"	m	struct:IOManagerState	file:
num_paraffins	nofib/imaginary/paraffins/paraffins.c	/^int      num_paraffins[MAX_SIZE_PARAFFIN];$/;"	v
numa_map	rts/Capability.c	/^uint32_t numa_map[MAX_NUMA_NODES];$/;"	v
numberOfStubsForSection	rts/linker/elf_plt.c	/^numberOfStubsForSection( ObjectCode *oc, unsigned sectionIndex) {$/;"	f
numberstring	utils/hp2ps/HpFile.c	/^static char numberstring[ NUMBER_LENGTH + 1 ];$/;"	v	file:
nurseries	rts/sm/Storage.c	/^nursery *nurseries = NULL;$/;"	v
o	libffi/build/testsuite/libffi.call/huge_struct.c	/^	uint16_t	o;$/;"	m	struct:BigStruct	file:
o	libffi/build/testsuite/libffi.call/pyobjc-tc.c	/^	Point o;$/;"	m	struct:Rect	file:
o	libffi/build/testsuite/libffi.call/stret_large2.c	/^	int o;$/;"	m	struct:struct_116byte	file:
obj_hash	rts/FileLock.c	/^static HashTable *obj_hash;$/;"	v	file:
objects	rts/Linker.c	/^ObjectCode *objects = NULL;     \/* initially empty *\/$/;"	v
objs	testsuite/tests/rts/linker/unload_multiple_objs/linker_unload_multiple_objs.c	/^static char *objs[NUM_OBJS] = {"A.o", "B.o", "C.o", "D.o"};$/;"	v	file:
oc	rts/CheckUnload.c	/^    ObjectCode *oc;$/;"	m	struct:__anon34	file:
ocAllocateExtras	rts/linker/SymbolExtras.c	/^int ocAllocateExtras(ObjectCode* oc, int count, int first, int bssSize)$/;"	f
ocAllocateExtras_ELF	rts/linker/Elf.c	/^int ocAllocateExtras_ELF( ObjectCode *oc )$/;"	f
ocAllocateExtras_MachO	rts/linker/MachO.c	/^ocAllocateExtras_MachO(ObjectCode* oc)$/;"	f
ocAllocateExtras_PEi386	rts/linker/PEi386.c	/^ocAllocateExtras_PEi386 ( ObjectCode* oc )$/;"	f
ocBuildSegments_MachO	rts/linker/MachO.c	/^ocBuildSegments_MachO(ObjectCode *oc)$/;"	f
ocDeinit_ELF	rts/linker/Elf.c	/^ocDeinit_ELF(ObjectCode * oc)$/;"	f
ocDeinit_MachO	rts/linker/MachO.c	/^ocDeinit_MachO(ObjectCode * oc) {$/;"	f
ocFlushInstructionCache	rts/linker/CacheFlush.c	/^ocFlushInstructionCache( ObjectCode *oc )$/;"	f
ocFlushInstructionCache	rts/linker/CacheFlush.c	/^void ocFlushInstructionCache( ObjectCode *oc STG_UNUSED ) {}$/;"	f
ocFlushInstructionCacheFrom	rts/linker/CacheFlush.c	/^ocFlushInstructionCacheFrom(void* begin, size_t length)$/;"	f	file:
ocGetNames_ELF	rts/linker/Elf.c	/^ocGetNames_ELF ( ObjectCode* oc )$/;"	f
ocGetNames_MachO	rts/linker/MachO.c	/^ocGetNames_MachO(ObjectCode* oc)$/;"	f
ocGetNames_PEi386	rts/linker/PEi386.c	/^ocGetNames_PEi386 ( ObjectCode* oc )$/;"	f
ocInit_ELF	rts/linker/Elf.c	/^ocInit_ELF(ObjectCode * oc)$/;"	f
ocInit_MachO	rts/linker/MachO.c	/^ocInit_MachO(ObjectCode * oc)$/;"	f
ocMprotect_Elf	rts/linker/Elf.c	/^ocMprotect_Elf( ObjectCode *oc )$/;"	f	file:
ocMprotect_MachO	rts/linker/MachO.c	/^ocMprotect_MachO( ObjectCode *oc )$/;"	f	file:
ocProtectExtras	rts/linker/PEi386.c	/^void ocProtectExtras(ObjectCode* oc STG_UNUSED) { }$/;"	f
ocProtectExtras	rts/linker/SymbolExtras.c	/^void ocProtectExtras(ObjectCode* oc)$/;"	f
ocResolve_ELF	rts/linker/Elf.c	/^ocResolve_ELF ( ObjectCode* oc )$/;"	f
ocResolve_MachO	rts/linker/MachO.c	/^ocResolve_MachO(ObjectCode* oc)$/;"	f
ocResolve_PEi386	rts/linker/PEi386.c	/^ocResolve_PEi386 ( ObjectCode* oc )$/;"	f
ocRunInit_ELF	rts/linker/Elf.c	/^int ocRunInit_ELF( ObjectCode *oc )$/;"	f
ocRunInit_MachO	rts/linker/MachO.c	/^ocRunInit_MachO ( ObjectCode *oc )$/;"	f
ocRunInit_PEi386	rts/linker/PEi386.c	/^ocRunInit_PEi386 ( ObjectCode *oc )$/;"	f
ocTryLoad	rts/Linker.c	/^int ocTryLoad (ObjectCode* oc) {$/;"	f
ocVerifyImage_ELF	rts/linker/Elf.c	/^ocVerifyImage_ELF ( ObjectCode* oc )$/;"	f
ocVerifyImage_MachO	rts/linker/MachO.c	/^ocVerifyImage_MachO(ObjectCode * oc)$/;"	f
ocVerifyImage_PEi386	rts/linker/PEi386.c	/^ocVerifyImage_PEi386 ( ObjectCode* oc )$/;"	f
ofilename	utils/unlit/unlit.c	/^static char *ofilename = NULL;$/;"	v	file:
ok_address	libffi/build/src/dlmalloc.c	2431;"	d	file:
ok_address	libffi/build/src/dlmalloc.c	2440;"	d	file:
ok_cinuse	libffi/build/src/dlmalloc.c	2435;"	d	file:
ok_cinuse	libffi/build/src/dlmalloc.c	2442;"	d	file:
ok_magic	libffi/build/src/dlmalloc.c	2448;"	d	file:
ok_magic	libffi/build/src/dlmalloc.c	2450;"	d	file:
ok_next	libffi/build/src/dlmalloc.c	2433;"	d	file:
ok_next	libffi/build/src/dlmalloc.c	2441;"	d	file:
ok_pinuse	libffi/build/src/dlmalloc.c	2437;"	d	file:
ok_pinuse	libffi/build/src/dlmalloc.c	2443;"	d	file:
oldTopFilter	rts/win32/veh_excn.c	/^LPTOP_LEVEL_EXCEPTION_FILTER oldTopFilter = NULL;$/;"	v
old_SPTs	rts/StablePtr.c	/^static spEntry *old_SPTs[MAX_N_OLD_SPTS];$/;"	v	file:
oldest_gen	rts/sm/Storage.c	/^generation *oldest_gen  = NULL; \/* oldest generation, for convenience *\/$/;"	v
onIOComplete	rts/win32/AsyncIO.c	/^onIOComplete(unsigned int reqID,$/;"	f	file:
oo	libffi/build/testsuite/libffi.call/huge_struct.c	/^	uint32_t	oo;$/;"	m	struct:BigStruct	file:
openStatsFile	rts/RtsFlags.c	/^openStatsFile (char *filename,           \/\/ filename, or NULL$/;"	f	file:
open_temp_exec_file	libffi/build/src/closures.c	/^open_temp_exec_file (void)$/;"	f	file:
open_temp_exec_file_dir	libffi/build/src/closures.c	/^open_temp_exec_file_dir (const char *dir)$/;"	f	file:
open_temp_exec_file_env	libffi/build/src/closures.c	/^open_temp_exec_file_env (const char *envvar)$/;"	f	file:
open_temp_exec_file_mnt	libffi/build/src/closures.c	/^open_temp_exec_file_mnt (const char *mounts)$/;"	f	file:
open_temp_exec_file_mutex	libffi/build/src/closures.c	/^static pthread_mutex_t open_temp_exec_file_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
open_temp_exec_file_name	libffi/build/src/closures.c	/^open_temp_exec_file_name (char *name, int flags)$/;"	f	file:
open_temp_exec_file_opts	libffi/build/src/closures.c	/^} open_temp_exec_file_opts[] = {$/;"	v	typeref:struct:__anon1	file:
open_temp_exec_file_opts_idx	libffi/build/src/closures.c	/^static int open_temp_exec_file_opts_idx = 0;$/;"	v	file:
open_temp_exec_file_opts_next	libffi/build/src/closures.c	/^open_temp_exec_file_opts_next (void)$/;"	f	file:
openedSOs	rts/Linker.c	/^static OpenedSO* openedSOs = NULL;$/;"	v	file:
opened_dlls	rts/linker/PEi386.c	/^static OpenedDLL* opened_dlls = NULL;$/;"	v	file:
ordblks	libffi/build/src/dlmalloc.c	/^  MALLINFO_FIELD_TYPE ordblks;  \/* number of free chunks *\/$/;"	m	struct:mallinfo	file:
order	utils/hp2ps/Reorder.c	/^    int order;$/;"	m	struct:order	file:
order	utils/hp2ps/Reorder.c	/^static struct order {$/;"	s	file:
ordermap	utils/hp2ps/Reorder.c	/^} *ordermap = 0;$/;"	v	typeref:struct:order	file:
ordermapindex	utils/hp2ps/Reorder.c	/^static int ordermapindex = 0;$/;"	v	file:
ordermapmax	utils/hp2ps/Reorder.c	/^static int ordermapmax = 0;$/;"	v	file:
os2direct_mmap	libffi/build/src/dlmalloc.c	1342;"	d	file:
os2mmap	libffi/build/src/dlmalloc.c	/^static void* os2mmap(size_t size) {$/;"	f	file:
os2munmap	libffi/build/src/dlmalloc.c	/^static int os2munmap(void* ptr, size_t size) {$/;"	f	file:
osBindMBlocksToNode	rts/posix/OSMem.c	/^void osBindMBlocksToNode($/;"	f
osBindMBlocksToNode	rts/win32/OSMem.c	/^void osBindMBlocksToNode($/;"	f
osBuiltWithNumaSupport	rts/posix/OSMem.c	/^bool osBuiltWithNumaSupport(void)$/;"	f
osBuiltWithNumaSupport	rts/win32/OSMem.c	/^bool osBuiltWithNumaSupport(void)$/;"	f
osCommitMemory	rts/posix/OSMem.c	/^void osCommitMemory(void *at, W_ size)$/;"	f
osCommitMemory	rts/win32/OSMem.c	/^void osCommitMemory (void *at, W_ size)$/;"	f
osDecommitMemory	rts/posix/OSMem.c	/^void osDecommitMemory(void *at, W_ size)$/;"	f
osDecommitMemory	rts/win32/OSMem.c	/^void osDecommitMemory (void *at, W_ size)$/;"	f
osFreeAllMBlocks	rts/posix/OSMem.c	/^void osFreeAllMBlocks(void)$/;"	f
osFreeAllMBlocks	rts/win32/OSMem.c	/^osFreeAllMBlocks(void)$/;"	f
osFreeMBlocks	rts/posix/OSMem.c	/^void osFreeMBlocks(void *addr, uint32_t n)$/;"	f
osFreeMBlocks	rts/win32/OSMem.c	/^void osFreeMBlocks(void *addr, uint32_t n)$/;"	f
osGetMBlocks	rts/posix/OSMem.c	/^osGetMBlocks(uint32_t n)$/;"	f
osGetMBlocks	rts/win32/OSMem.c	/^osGetMBlocks(uint32_t n) {$/;"	f
osMemInit	rts/posix/OSMem.c	/^void osMemInit(void)$/;"	f
osMemInit	rts/win32/OSMem.c	/^osMemInit(void)$/;"	f
osNumaAvailable	rts/posix/OSMem.c	/^bool osNumaAvailable(void)$/;"	f
osNumaAvailable	rts/win32/OSMem.c	/^bool osNumaAvailable(void)$/;"	f
osNumaMask	rts/posix/OSMem.c	/^uint64_t osNumaMask(void)$/;"	f
osNumaMask	rts/win32/OSMem.c	/^uint64_t osNumaMask(void)$/;"	f
osNumaNodes	rts/posix/OSMem.c	/^uint32_t osNumaNodes(void)$/;"	f
osNumaNodes	rts/win32/OSMem.c	/^uint32_t osNumaNodes(void)$/;"	f
osReleaseFreeMemory	rts/posix/OSMem.c	/^void osReleaseFreeMemory(void) {$/;"	f
osReleaseFreeMemory	rts/win32/OSMem.c	/^void osReleaseFreeMemory(void)$/;"	f
osReleaseHeapMemory	rts/posix/OSMem.c	/^void osReleaseHeapMemory(void)$/;"	f
osReleaseHeapMemory	rts/win32/OSMem.c	/^void osReleaseHeapMemory (void)$/;"	f
osReserveHeapMemory	rts/posix/OSMem.c	/^void *osReserveHeapMemory(void *startAddressPtr, W_ *len)$/;"	f
osReserveHeapMemory	rts/win32/OSMem.c	/^void *osReserveHeapMemory (void *startAddress, W_ *len)$/;"	f
osThreadId	rts/posix/OSThreads.c	/^osThreadId(void)$/;"	f
osThreadId	rts/win32/OSThreads.c	/^osThreadId()$/;"	f
osThreadIsAlive	rts/posix/OSThreads.c	/^osThreadIsAlive(OSThreadId id STG_UNUSED)$/;"	f
osThreadIsAlive	rts/win32/OSThreads.c	/^osThreadIsAlive(OSThreadId id)$/;"	f
osTryReserveHeapMemory	rts/posix/OSMem.c	/^osTryReserveHeapMemory (W_ len, void *hint)$/;"	f	file:
oscode	libraries/base/cbits/Win32Utils.c	/^        unsigned long oscode;           \/* OS return value *\/$/;"	m	struct:errentry	file:
other_args	libffi/build/src/ia64/ffi.c	/^  UINT64 other_args[];	\/* Arguments passed on stack, variable size.  *\/$/;"	m	struct:ia64_args	file:
out	testsuite/tests/ffi/should_run/ffi023_c.c	/^HsInt out (HsInt x)$/;"	f
output	nofib/real/compress2/inC/prefix_trees.c	/^void output (ch)$/;"	f
outputAllRetainerSet	rts/RetainerSet.c	/^outputAllRetainerSet(FILE *prof_file)$/;"	f
outputFileName	rts/eventlog/EventLogWriter.c	/^static char *outputFileName(void)$/;"	f	file:
output_buffer	nofib/real/compress2/inC/prefix_trees.c	/^int output_buffer = -1;$/;"	v
output_codes	nofib/real/compress2/inC/prefix_trees.c	/^void output_codes (hi, lo)$/;"	f
output_file	nofib/real/compress/lzw.c	/^FILE *input_file,*output_file;$/;"	v
overhead_for	libffi/build/src/dlmalloc.c	1763;"	d	file:
p	libffi/build/testsuite/libffi.call/huge_struct.c	/^	int16_t		p;$/;"	m	struct:BigStruct	file:
p	nofib/shootout/fasta/fasta-c.c	/^   float p;$/;"	m	struct:__anon32	file:
p	nofib/spectral/simple/simple.c	/^double p[MAXSIZE][MAXSIZE], q[MAXSIZE][MAXSIZE];$/;"	v
p_coeffs	nofib/spectral/simple/simple.c	/^double p_coeffs[3][3] = {0.0, 0.0, 0.0,$/;"	v
p_poly	nofib/spectral/simple/simple.c	/^double *p_poly[4][5] = {&p_coeffs[0][0], &p_coeffs[0][0], &p_coeffs[0][0], &p_coeffs[0][0],$/;"	v
pad_request	libffi/build/src/dlmalloc.c	1703;"	d	file:
page_align	libffi/build/src/dlmalloc.c	2143;"	d	file:
page_size	libffi/build/src/dlmalloc.c	/^  size_t page_size;$/;"	m	struct:malloc_params	file:
pages	rts/linker/M32Alloc.c	/^   struct m32_page_t *pages[M32_MAX_PAGES];$/;"	m	struct:m32_allocator_t	typeref:struct:m32_allocator_t::m32_page_t	file:
pairs	nofib/shootout/reverse-complement/revcomp-c.c	/^char *pairs = "ATCGGCTAUAMKRYWWSSYRKMVBHDDHBVNN\\n\\n";$/;"	v
paraffin	nofib/imaginary/paraffins/paraffins.c	/^  struct paraffin$/;"	s	file:
paraffins	nofib/imaginary/paraffins/paraffins.c	/^PARAFFIN *paraffins;$/;"	v
paraffins_array	nofib/imaginary/paraffins/paraffins.c	/^TUPLE    *paraffins_array[MAX_SIZE_PARAFFIN];$/;"	v
paraffins_counts	nofib/imaginary/paraffins/paraffins.c	/^int      paraffins_counts[MAX_SIZE_RADICAL];$/;"	v
paraffins_generator	nofib/imaginary/paraffins/paraffins.c	/^paraffins_generator (n)$/;"	f
paraffins_until	nofib/imaginary/paraffins/paraffins.c	/^paraffins_until (n)$/;"	f
parent	libffi/build/src/dlmalloc.c	/^  struct malloc_tree_chunk* parent;$/;"	m	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
park_tso	rts/STM.c	/^static void park_tso(StgTSO *tso) {$/;"	f	file:
pass_struct_on_stack	libffi/build/src/avr32/ffi.c	/^unsigned int pass_struct_on_stack(ffi_type *type)$/;"	f
pathName	utils/hp2ps/Main.c	/^static char *pathName;$/;"	v	file:
pathdir	rts/PathUtils.c	/^pathchar* pathdir(pathchar *path)$/;"	f
pathdup	rts/PathUtils.c	/^pathchar* pathdup(pathchar *path)$/;"	f
payload	rts/TraverseHeap.c	/^        StgPtr payload;$/;"	m	struct:__anon49::__anon50	file:
pb	nofib/spectral/simple/simple.c	/^double pb[]  = {0.0 ,1.0, 0.0, 0.0, 1.0};$/;"	v
pbb	nofib/spectral/simple/simple.c	/^double pbb[] = {0.0 ,0.0, 6.0, 0.0, 0.0};$/;"	v
pe_alignments	rts/linker/PEi386.c	/^const Alignments pe_alignments[] = {$/;"	v
pe_alignments_cnt	rts/linker/PEi386.c	/^const int pe_alignments_cnt = sizeof (pe_alignments) \/ sizeof (Alignments);$/;"	v
peakWorkerCount	rts/Task.c	/^uint32_t peakWorkerCount;$/;"	v
peak_mblocks_allocated	rts/sm/MBlock.c	/^W_ peak_mblocks_allocated = 0;$/;"	v
pending	testsuite/tests/concurrent/should_run/hs_try_putmvar003_c.c	/^    struct callback *pending;$/;"	m	struct:callback_queue	typeref:struct:callback_queue::callback	file:
pending_handler_buf	rts/posix/Signals.c	/^siginfo_t pending_handler_buf[N_PENDING_HANDLERS];$/;"	v
pending_sync	rts/Capability.c	/^PendingSync * volatile pending_sync = 0;$/;"	v
performGC	rts/Schedule.c	/^performGC(void)$/;"	f
performGC_	rts/Schedule.c	/^performGC_(bool force_major)$/;"	f	file:
performHeapProfile	rts/Proftimer.c	/^bool performHeapProfile;$/;"	v
performMajorGC	rts/Schedule.c	/^performMajorGC(void)$/;"	f
performTryPutMVar	rts/Threads.c	/^bool performTryPutMVar(Capability *cap, StgMVar *mvar, StgClosure *value)$/;"	f
pflag	utils/hp2ps/Main.c	/^static boolish pflag = 0;	\/* read auxiliary file			*\/$/;"	v	file:
pi	nofib/spectral/simple/simple.c	/^double pi = 3.1415926535898;$/;"	v
pim	utils/hp2ps/Main.c	/^typedef enum {POINTS, INCHES, MILLIMETRES} pim;$/;"	t	typeref:enum:__anon60	file:
pinuse	libffi/build/src/dlmalloc.c	1730;"	d	file:
pix	nofib/gc/fulsom/raster/raster.c	/^struct pix {$/;"	s	file:
pix	nofib/real/fulsom/raster/raster.c	/^struct pix {$/;"	s	file:
pixm	nofib/gc/fulsom/raster/raster.c	/^struct pixm {$/;"	s	file:
pixm	nofib/real/fulsom/raster/raster.c	/^struct pixm {$/;"	s	file:
pixun	nofib/gc/fulsom/raster/raster.c	/^    } pixun;$/;"	m	struct:pix	typeref:union:pix::__anon26	file:
pixun	nofib/real/fulsom/raster/raster.c	/^    } pixun;$/;"	m	struct:pix	typeref:union:pix::__anon31	file:
place_vfp_arg	libffi/build/src/arm/ffi.c	/^place_vfp_arg (ffi_cif *cif, int h)$/;"	f	file:
polynomial	nofib/spectral/simple/simple.c	/^inline double polynomial$/;"	f
pool	rts/LibdwPool.c	/^static Pool *pool = NULL;$/;"	v	file:
poolFlush	rts/Pool.c	/^void poolFlush(Pool *pool) {$/;"	f
poolFree	rts/Pool.c	/^int poolFree(Pool *pool) {$/;"	f
poolGetDesiredSize	rts/Pool.c	/^uint32_t poolGetDesiredSize(Pool *pool) {$/;"	f
poolGetMaxSize	rts/Pool.c	/^uint32_t poolGetMaxSize(Pool *pool) {$/;"	f
poolInit	rts/Pool.c	/^Pool *poolInit(uint32_t max_size, uint32_t desired_size,$/;"	f
poolRelease	rts/Pool.c	/^void poolRelease(Pool *pool, void *thing) {$/;"	f
poolSetDesiredSize	rts/Pool.c	/^void poolSetDesiredSize(Pool *pool, uint32_t size) {$/;"	f
poolSetMaxSize	rts/Pool.c	/^void poolSetMaxSize(Pool *pool, uint32_t size) {$/;"	f
poolTake	rts/Pool.c	/^void *poolTake(Pool *pool) {$/;"	f
poolTryTake	rts/Pool.c	/^void *poolTryTake(Pool *pool) {$/;"	f
poolTryTake_	rts/Pool.c	/^static PoolEntry *poolTryTake_(Pool *pool) {$/;"	f	file:
pool_size	rts/LibdwPool.c	/^static uint32_t pool_size = 10; \/\/ TODO$/;"	v	file:
popReturningTask	rts/Capability.c	/^popReturningTask (Capability *cap)$/;"	f
popStackElement	rts/TraverseHeap.c	/^popStackElement(traverseState *ts) {$/;"	f	file:
popWSDeque	rts/WSDeque.c	/^popWSDeque (WSDeque *q)$/;"	f
pop_active_segment	rts/sm/NonMoving.c	/^static struct NonmovingSegment *pop_active_segment(struct NonmovingAllocator *alloca)$/;"	f	file:
popcount_tab	libraries/ghc-prim/cbits/popcnt.c	/^static const unsigned char popcount_tab[] =$/;"	v	file:
pos	rts/TraverseHeap.c	/^        StgHalfWord pos;$/;"	m	struct:__anon49::__anon50	file:
pos	rts/eventlog/EventLog.c	/^  StgInt8 *pos;$/;"	m	struct:_EventsBuf	file:
posTypeFresh	rts/TraverseHeap.c	/^    posTypeFresh$/;"	e	enum:__anon48	file:
posTypePtrs	rts/TraverseHeap.c	/^    posTypePtrs,$/;"	e	enum:__anon48	file:
posTypeSRT	rts/TraverseHeap.c	/^    posTypeSRT,$/;"	e	enum:__anon48	file:
posTypeStep	rts/TraverseHeap.c	/^    posTypeStep,$/;"	e	enum:__anon48	file:
possible	libraries/base/cbits/WCsubst.c	/^	int possible;$/;"	m	struct:_convrule_	file:
postBlockMarker	rts/eventlog/EventLog.c	/^void postBlockMarker (EventsBuf *eb)$/;"	f
postBuf	rts/eventlog/EventLog.c	/^static inline void postBuf(EventsBuf *eb, StgWord8 *buf, uint32_t size)$/;"	f	file:
postCapEvent	rts/eventlog/EventLog.c	/^postCapEvent (EventTypeNum  tag,$/;"	f
postCapMsg	rts/eventlog/EventLog.c	/^void postCapMsg(Capability *cap, char *msg, va_list ap)$/;"	f
postCapNo	rts/eventlog/EventLog.c	/^static inline void postCapNo(EventsBuf *eb, EventCapNo no)$/;"	f	file:
postCapsetEvent	rts/eventlog/EventLog.c	/^void postCapsetEvent (EventTypeNum tag,$/;"	f
postCapsetID	rts/eventlog/EventLog.c	/^static inline void postCapsetID(EventsBuf *eb, EventCapsetID id)$/;"	f	file:
postCapsetStrEvent	rts/eventlog/EventLog.c	/^void postCapsetStrEvent (EventTypeNum tag,$/;"	f
postCapsetType	rts/eventlog/EventLog.c	/^static inline void postCapsetType(EventsBuf *eb, EventCapsetType type)$/;"	f	file:
postCapsetVecEvent	rts/eventlog/EventLog.c	/^void postCapsetVecEvent (EventTypeNum tag,$/;"	f
postConcMarkEnd	rts/eventlog/EventLog.c	/^void postConcMarkEnd(StgWord32 marked_obj_count)$/;"	f
postConcUpdRemSetFlush	rts/eventlog/EventLog.c	/^void postConcUpdRemSetFlush(Capability *cap)$/;"	f
postEvent	rts/eventlog/EventLog.c	/^postEvent (Capability *cap, EventTypeNum tag)$/;"	f
postEventAtTimestamp	rts/eventlog/EventLog.c	/^postEventAtTimestamp (Capability *cap, EventTimestamp ts, EventTypeNum tag)$/;"	f
postEventGcStats	rts/eventlog/EventLog.c	/^void postEventGcStats  (Capability    *cap,$/;"	f
postEventHeader	rts/eventlog/EventLog.c	/^static inline void postEventHeader(EventsBuf *eb, EventTypeNum type)$/;"	f	file:
postEventHeapInfo	rts/eventlog/EventLog.c	/^void postEventHeapInfo (EventCapsetID heap_capset,$/;"	f
postEventNoCap	rts/eventlog/EventLog.c	/^postEventNoCap (EventTypeNum tag)$/;"	f
postEventType	rts/eventlog/EventLog.c	/^void postEventType(EventsBuf *eb, EventType *et)$/;"	f
postEventTypeNum	rts/eventlog/EventLog.c	/^static inline void postEventTypeNum(EventsBuf *eb, EventTypeNum etNum)$/;"	f	file:
postHeaderEvents	rts/eventlog/EventLog.c	/^postHeaderEvents(void)$/;"	f	file:
postHeapBioProfSampleBegin	rts/eventlog/EventLog.c	/^void postHeapBioProfSampleBegin(StgInt era, StgWord64 time)$/;"	f
postHeapEvent	rts/eventlog/EventLog.c	/^void postHeapEvent (Capability    *cap,$/;"	f
postHeapProfBegin	rts/eventlog/EventLog.c	/^void postHeapProfBegin(StgWord8 profile_id)$/;"	f
postHeapProfCostCentre	rts/eventlog/EventLog.c	/^void postHeapProfCostCentre(StgWord32 ccID,$/;"	f
postHeapProfSampleBegin	rts/eventlog/EventLog.c	/^void postHeapProfSampleBegin(StgInt era)$/;"	f
postHeapProfSampleCostCentre	rts/eventlog/EventLog.c	/^void postHeapProfSampleCostCentre(StgWord8 profile_id,$/;"	f
postHeapProfSampleEnd	rts/eventlog/EventLog.c	/^void postHeapProfSampleEnd(StgInt era)$/;"	f
postHeapProfSampleString	rts/eventlog/EventLog.c	/^void postHeapProfSampleString(StgWord8 profile_id,$/;"	f
postInt32	rts/eventlog/EventLog.c	/^static inline void postInt32(EventsBuf *eb, StgInt32 i)$/;"	f	file:
postInt8	rts/eventlog/EventLog.c	/^static inline void postInt8(EventsBuf *eb, StgInt8 i)$/;"	f	file:
postKernelThreadId	rts/eventlog/EventLog.c	/^static inline void postKernelThreadId(EventsBuf *eb, EventKernelThreadId tid)$/;"	f	file:
postLogMsg	rts/eventlog/EventLog.c	/^void postLogMsg(EventsBuf *eb, EventTypeNum type, char *msg, va_list ap)$/;"	f
postMsg	rts/eventlog/EventLog.c	/^void postMsg(char *msg, va_list ap)$/;"	f
postNonmovingHeapCensus	rts/eventlog/EventLog.c	/^void postNonmovingHeapCensus(int log_blk_size,$/;"	f
postOSProcessId	rts/eventlog/EventLog.c	/^static inline void postOSProcessId(EventsBuf *eb, pid_t pid)$/;"	f	file:
postPayloadSize	rts/eventlog/EventLog.c	/^static inline void postPayloadSize(EventsBuf *eb, EventPayloadSize size)$/;"	f	file:
postProfBegin	rts/eventlog/EventLog.c	/^void postProfBegin(void)$/;"	f
postProfSampleCostCentre	rts/eventlog/EventLog.c	/^void postProfSampleCostCentre(Capability *cap,$/;"	f
postSchedEvent	rts/eventlog/EventLog.c	/^postSchedEvent (Capability *cap,$/;"	f
postSparkCountersEvent	rts/eventlog/EventLog.c	/^postSparkCountersEvent (Capability *cap,$/;"	f
postSparkEvent	rts/eventlog/EventLog.c	/^postSparkEvent (Capability *cap,$/;"	f
postString	rts/eventlog/EventLog.c	/^static inline void postString(EventsBuf *eb, const char *buf)$/;"	f	file:
postTaskCreateEvent	rts/eventlog/EventLog.c	/^void postTaskCreateEvent (EventTaskId taskId,$/;"	f
postTaskDeleteEvent	rts/eventlog/EventLog.c	/^void postTaskDeleteEvent (EventTaskId taskId)$/;"	f
postTaskId	rts/eventlog/EventLog.c	/^static inline void postTaskId(EventsBuf *eb, EventTaskId tUniq)$/;"	f	file:
postTaskMigrateEvent	rts/eventlog/EventLog.c	/^void postTaskMigrateEvent (EventTaskId taskId,$/;"	f
postThreadID	rts/eventlog/EventLog.c	/^static inline void postThreadID(EventsBuf *eb, EventThreadID id)$/;"	f	file:
postThreadLabel	rts/eventlog/EventLog.c	/^void postThreadLabel(Capability    *cap,$/;"	f
postTimestamp	rts/eventlog/EventLog.c	/^static inline void postTimestamp(EventsBuf *eb)$/;"	f	file:
postUserBinaryEvent	rts/eventlog/EventLog.c	/^void postUserBinaryEvent(Capability   *cap,$/;"	f
postUserEvent	rts/eventlog/EventLog.c	/^void postUserEvent(Capability *cap, EventTypeNum type, char *msg)$/;"	f
postWallClockTime	rts/eventlog/EventLog.c	/^void postWallClockTime (EventCapsetID capset)$/;"	f
postWord16	rts/eventlog/EventLog.c	/^static inline void postWord16(EventsBuf *eb, StgWord16 i)$/;"	f	file:
postWord32	rts/eventlog/EventLog.c	/^static inline void postWord32(EventsBuf *eb, StgWord32 i)$/;"	f	file:
postWord64	rts/eventlog/EventLog.c	/^static inline void postWord64(EventsBuf *eb, StgWord64 i)$/;"	f	file:
postWord8	rts/eventlog/EventLog.c	/^static inline void postWord8(EventsBuf *eb, StgWord8 i)$/;"	f	file:
post_mmap_madvise	rts/posix/OSMem.c	/^post_mmap_madvise(int operation, W_ size, void *ret)$/;"	f	file:
power	nofib/spectral/simple/simple.c	/^inline double power(double i, int j)$/;"	f
power2	testsuite/tests/rts/linker/T11223/power.c	/^int power2(int x)$/;"	f
power2	testsuite/tests/rts/linker/T11223/power_slow.c	/^int power2(int x)$/;"	f
power3	testsuite/tests/rts/linker/T11223/power_slow.c	/^int power3(int x)$/;"	f
pp	libffi/build/testsuite/libffi.call/huge_struct.c	/^	int32_t		pp;$/;"	m	struct:BigStruct	file:
pre_assemble	nofib/real/fem/inC/pre_assemble.c	/^pre_assemble() {$/;"	f
prefix	nofib/real/compress2/inC/prefix_trees.c	/^  unsigned char prefix;$/;"	m	struct:ptree	file:
prefix_str	utils/unlit/unlit.c	/^static char* prefix_str = NULL; \/* Prefix output with a string *\/$/;"	v	file:
prefix_table	nofib/real/compress/lzw.c	/^struct prefix_tree *prefix_table;$/;"	v	typeref:struct:prefix_tree
prefix_tree	nofib/real/compress/lzw.c	/^struct prefix_tree {$/;"	s	file:
preloadObjectFile	rts/Linker.c	/^preloadObjectFile (pathchar *path)$/;"	f	file:
prepare_collected_gen	rts/sm/GC.c	/^prepare_collected_gen (generation *gen)$/;"	f	file:
prepare_uncollected_gen	rts/sm/GC.c	/^prepare_uncollected_gen (generation *gen)$/;"	f	file:
prepend_alloc	libffi/build/src/dlmalloc.c	/^static void* prepend_alloc(mstate m, char* newbase, char* oldbase,$/;"	f	file:
presult	testsuite/tests/concurrent/should_run/hs_try_putmvar001_c.c	/^    int *presult;$/;"	m	struct:callback	file:
presult	testsuite/tests/concurrent/should_run/hs_try_putmvar003_c.c	/^    int *presult;$/;"	m	struct:callback	file:
prev	libffi/build/src/closures.c	/^  ffi_trampoline_table *prev;$/;"	m	struct:ffi_trampoline_table	file:
prev	rts/sm/MBlock.c	/^    struct free_list *prev;$/;"	m	struct:free_list	typeref:struct:free_list::free_list	file:
prev_chunk	libffi/build/src/dlmalloc.c	1742;"	d	file:
prev_foot	libffi/build/src/dlmalloc.c	/^  size_t                    prev_foot;$/;"	m	struct:malloc_tree_chunk	file:
prev_foot	libffi/build/src/dlmalloc.c	/^  size_t               prev_foot;  \/* Size of previous chunk (if free).  *\/$/;"	m	struct:malloc_chunk	file:
prev_static_flag	rts/sm/GC.c	/^uint32_t prev_static_flag = STATIC_FLAG_A;$/;"	v
prim	rts/ProfHeap.c	/^            ssize_t prim;     \/\/ 'inherently used' closures$/;"	m	struct:_counter::__anon42::__anon43	file:
prim	rts/ProfHeap.c	/^    ssize_t    prim;$/;"	m	struct:__anon44	file:
primes	nofib/imaginary/primes/csieve.c	/^void primes()$/;"	f
printAllTasks	rts/Task.c	/^printAllTasks(void)$/;"	f
printAllThreads	rts/Threads.c	/^printAllThreads(void)$/;"	f
printAndClearEventBuf	rts/eventlog/EventLog.c	/^void printAndClearEventBuf (EventsBuf *ebuf)$/;"	f
printClosure	rts/Printer.c	/^printClosure( const StgClosure *obj )$/;"	f
printEscapedString	rts/ProfHeap.c	/^printEscapedString(const char* string)$/;"	f	file:
printFrame	rts/Libdw.c	/^static int printFrame(StgPtr pc, void *cbdata)$/;"	f	file:
printLargeAndPinnedObjects	rts/Printer.c	/^void printLargeAndPinnedObjects()$/;"	f
printLargeBitmap	rts/Printer.c	/^printLargeBitmap( StgPtr spBottom, StgPtr payload, StgLargeBitmap* large_bitmap,$/;"	f	file:
printMarkQueue	rts/sm/NonMovingMark.c	/^void printMarkQueue (MarkQueue *q)$/;"	f
printMarkQueueEntry	rts/sm/NonMovingMark.c	/^void printMarkQueueEntry (MarkQueueEnt *ent)$/;"	f
printMutableList	rts/Printer.c	/^printMutableList(bdescr *bd)$/;"	f
printName	rts/linker/PEi386.c	/^printName ( uint8_t* name, ObjectCode* oc )$/;"	f	file:
printObj	rts/Printer.c	/^void printObj( StgClosure *obj )$/;"	f
printPtr	rts/Printer.c	/^void printPtr( StgPtr p )$/;"	f
printRegisteredCounterInfo	rts/Ticky.c	/^printRegisteredCounterInfo (FILE *tf)$/;"	f	file:
printRetainer	rts/RetainerSet.c	/^printRetainer(FILE *f, retainer ccs)$/;"	f	file:
printRetainerSetShort	rts/RetainerSet.c	/^printRetainerSetShort(FILE *f, RetainerSet *rs, W_ total_size, uint32_t max_length)$/;"	f
printRtsInfo	rts/RtsUtils.c	/^void printRtsInfo(const RtsConfig rts_config) {$/;"	f
printSample	rts/ProfHeap.c	/^printSample(bool beginSample, StgDouble sampleValue)$/;"	f	file:
printSmallBitmap	rts/Printer.c	/^printSmallBitmap( StgPtr spBottom, StgPtr payload, StgWord bitmap,$/;"	f	file:
printStack	rts/Printer.c	/^static void printStack( StgStack *stack )$/;"	f	file:
printStackChunk	rts/Printer.c	/^printStackChunk( StgPtr sp, StgPtr spBottom )$/;"	f
printStaticObjects	rts/Printer.c	/^void printStaticObjects( StgClosure *p )$/;"	f
printStdObjHdr	rts/Printer.c	/^printStdObjHdr( const StgClosure *obj, char* tag )$/;"	f
printStdObjPayload	rts/Printer.c	/^printStdObjPayload( const StgClosure *obj )$/;"	f	file:
printTSO	rts/Printer.c	/^void printTSO( StgTSO *tso )$/;"	f
printThreadBlockage	rts/Threads.c	/^printThreadBlockage(StgTSO *tso)$/;"	f
printThreadQueue	rts/Threads.c	/^printThreadQueue(StgTSO *t)$/;"	f
printThreadStatus	rts/Threads.c	/^printThreadStatus(StgTSO *t)$/;"	f
printThunkObject	rts/Printer.c	/^printThunkObject( StgThunk *obj, char* tag )$/;"	f	file:
printThunkPayload	rts/Printer.c	/^printThunkPayload( StgThunk *obj )$/;"	f	file:
printWeakLists	rts/Printer.c	/^void printWeakLists()$/;"	f
print_2d_matrix	nofib/spectral/simple/simple.c	/^int print_2d_matrix(double matrix[MAXSIZE][MAXSIZE], int node_or_zone)$/;"	f
print_block_list	rts/sm/NonMoving.c	/^void print_block_list(bdescr* bd)$/;"	f
print_next_state	nofib/spectral/simple/simple.c	/^int print_next_state()$/;"	f
print_paraffin_counts	nofib/imaginary/paraffins/paraffins.c	/^print_paraffin_counts(n)$/;"	f
print_selector_chain	rts/sm/NonMovingShortcut.c	/^print_selector_chain(StgClosure *p)$/;"	f	file:
print_simple_state	nofib/spectral/simple/simple.c	/^int print_simple_state()$/;"	f
print_table	nofib/real/compress2/inC/prefix_trees.c	/^print_table (root)$/;"	f
print_thread_list	rts/sm/NonMoving.c	/^void print_thread_list(StgTSO* tso)$/;"	f
printx	testsuite/tests/rts/T7040_c.c	/^void printx() {$/;"	f
printx	testsuite/tests/rts/T7040_ghci_c.c	/^void printx() {$/;"	f
problem_size	nofib/spectral/simple/simple.c	/^int niterations, problem_size;$/;"	v
procRtsOpts	rts/RtsFlags.c	/^static void procRtsOpts (int rts_argc0,$/;"	f	file:
process	nofib/shootout/reverse-complement/revcomp-c.c	/^void *process(void *ww) {$/;"	f
processChainForDead	rts/LdvProfile.c	/^processChainForDead( bdescr *bd )$/;"	f	file:
processHeapClosureForDead	rts/LdvProfile.c	/^processHeapClosureForDead( const StgClosure *c )$/;"	f
processHeapForDead	rts/LdvProfile.c	/^processHeapForDead( bdescr *bd )$/;"	f	file:
prodCapability	rts/Capability.c	/^prodCapability (Capability *cap, Task *task)$/;"	f
prof_arena	rts/Profiling.c	/^Arena *prof_arena;$/;"	v
prof_arena	rts/Profiling.c	/^static Arena *prof_arena;$/;"	v	file:
prof_file	rts/Profiling.c	/^FILE *prof_file;$/;"	v
prof_filename	rts/Profiling.c	/^static char *prof_filename; \/* prof report file name = <program>.prof *\/$/;"	v	file:
prog_argc	rts/RtsFlags.c	/^int     prog_argc = 0;    \/* an "int" so as to match normal "argc" *\/$/;"	v
prog_argv	rts/RtsFlags.c	/^char  **prog_argv = NULL;$/;"	v
prog_name	rts/RtsFlags.c	/^char   *prog_name = NULL; \/* 'basename' of prog_argv[0] *\/$/;"	v
programname	utils/hp2ps/Main.c	/^char *programname;$/;"	v
promoteInRunQueue	rts/Schedule.c	/^promoteInRunQueue (Capability *cap, StgTSO *tso)$/;"	f
promotion	libffi/build/testsuite/libffi.call/promotion.c	/^static int promotion(signed char sc, signed short ss,$/;"	f	file:
protected_list	rts/linker/M32Alloc.c	/^   struct m32_page_t *protected_list;$/;"	m	struct:m32_allocator_t	typeref:struct:m32_allocator_t::m32_page_t	file:
pruneCCSTree	rts/Profiling.c	/^pruneCCSTree (CostCentreStack *ccs)$/;"	f	file:
pruneSparkQueue	rts/Sparks.c	/^pruneSparkQueue (Capability *cap)$/;"	f
psfile	utils/hp2ps/Main.c	/^static char *psfile;$/;"	v	file:
psfp	utils/hp2ps/Main.c	/^FILE* psfp;$/;"	v
pt_char	nofib/real/compress/lzw.c	/^    char                    pt_char;$/;"	m	struct:prefix_tree	file:
pt_int	nofib/real/compress/lzw.c	/^    int                     pt_int;$/;"	m	struct:prefix_tree	file:
pt_left	nofib/real/compress/lzw.c	/^    struct prefix_tree *    pt_left;$/;"	m	struct:prefix_tree	typeref:struct:prefix_tree::prefix_tree	file:
pt_right	nofib/real/compress/lzw.c	/^    struct prefix_tree *    pt_right;$/;"	m	struct:prefix_tree	typeref:struct:prefix_tree::prefix_tree	file:
pt_tree	nofib/real/compress/lzw.c	/^    struct prefix_tree *    pt_tree;$/;"	m	struct:prefix_tree	typeref:struct:prefix_tree::prefix_tree	file:
ptree	nofib/real/compress2/inC/prefix_trees.c	/^struct ptree {$/;"	s	file:
ptrs	rts/TraverseHeap.c	/^        StgHalfWord ptrs;$/;"	m	struct:__anon49::__anon50	file:
ptrs	rts/TraverseHeap.c	/^    } ptrs;$/;"	m	union:__anon49	typeref:struct:__anon49::__anon50	file:
purgeObj	rts/Linker.c	/^HsInt purgeObj (pathchar *path)$/;"	f
push	rts/sm/NonMovingMark.c	/^push (MarkQueue *q, const MarkQueueEnt *ent)$/;"	f
pushClosure	rts/RtsAPI.c	/^INLINE_HEADER void pushClosure   (StgTSO *tso, StgWord c) {$/;"	f
pushCostCentre	rts/Profiling.c	/^pushCostCentre (CostCentreStack *ccs, CostCentre *cc)$/;"	f
pushStackElement	rts/TraverseHeap.c	/^pushStackElement(traverseState *ts, const stackElement se)$/;"	f	file:
pushWSDeque	rts/WSDeque.c	/^pushWSDeque (WSDeque* q, void * elem)$/;"	f
push_array	rts/sm/NonMovingMark.c	/^void push_array (MarkQueue *q,$/;"	f	file:
push_closure	rts/sm/NonMovingMark.c	/^void push_closure (MarkQueue *q,$/;"	f	file:
push_fun_srt	rts/sm/NonMovingMark.c	/^void push_fun_srt (MarkQueue *q, const StgInfoTable *info)$/;"	f	file:
push_scanned_block	rts/sm/GCUtils.c	/^push_scanned_block (bdescr *bd, gen_workspace *ws)$/;"	f
push_thunk_srt	rts/sm/NonMovingMark.c	/^void push_thunk_srt (MarkQueue *q, const StgInfoTable *info)$/;"	f	file:
px	nofib/real/fem/inC/fem.c	/^        float  px,py,m; }   load_info[MAXNODELOAD];$/;"	m	struct:__anon30	file:
py	nofib/real/fem/inC/fem.c	/^        float  px,py,m; }   load_info[MAXNODELOAD];$/;"	m	struct:__anon30	file:
py	utils/hp2ps/Curves.c	/^static floatish *py;		\/* previous y values *\/$/;"	v	file:
q	libffi/build/testsuite/libffi.call/huge_struct.c	/^	uint32_t	q;$/;"	m	struct:BigStruct	file:
q	nofib/spectral/simple/simple.c	/^double p[MAXSIZE][MAXSIZE], q[MAXSIZE][MAXSIZE];$/;"	v
q	testsuite/tests/rts/testwsdeque.c	/^WSDeque *q;$/;"	v
qb	nofib/spectral/simple/simple.c	/^double *qb = pb;$/;"	v
qpc_frequency	rts/win32/GetTime.c	/^static LARGE_INTEGER qpc_frequency = {.QuadPart = 0};$/;"	v	file:
qq	libffi/build/testsuite/libffi.call/huge_struct.c	/^	uint64_t	qq;$/;"	m	struct:BigStruct	file:
queueSize	rts/win32/IOManager.c	/^    int              queueSize;$/;"	m	struct:IOManagerState	file:
queue_error	rts/win32/WorkQueue.c	/^queue_error( char* loc,$/;"	f	file:
queue_error_rc	rts/win32/WorkQueue.c	/^queue_error_rc( char* loc,$/;"	f	file:
queue_lock	rts/win32/AsyncIO.c	/^static CRITICAL_SECTION queue_lock;$/;"	v	file:
quiet_nan	libraries/base/cbits/primFloat.c	/^	unsigned int quiet_nan:1;$/;"	m	struct:stg_ieee754_dbl::__anon24	file:
quiet_nan	libraries/base/cbits/primFloat.c	/^	unsigned int quiet_nan:1;$/;"	m	struct:stg_ieee754_flt::__anon22	file:
quit	utils/lndir/lndir.c	/^quit ($/;"	f
quiterr	utils/lndir/lndir.c	/^quiterr (code, s)$/;"	f
r	libffi/build/testsuite/libffi.call/huge_struct.c	/^	int32_t		r;$/;"	m	struct:BigStruct	file:
r	nofib/gc/fulsom/raster/raster.c	/^  int r,g,b;$/;"	m	struct:pixm	file:
r	nofib/real/fulsom/raster/raster.c	/^  int r,g,b;$/;"	m	struct:pixm	file:
r	nofib/spectral/fft2/fft.c	/^  double r;$/;"	m	struct:__anon33	file:
r10	libffi/build/src/x86/ffi64.c	/^  UINT64 r10;	\/* static chain *\/$/;"	m	struct:register_args	file:
radical	nofib/imaginary/paraffins/paraffins.c	/^  struct radical$/;"	s	file:
radical_generator	nofib/imaginary/paraffins/paraffins.c	/^radical_generator (n)$/;"	f
radicals	nofib/imaginary/paraffins/paraffins.c	/^      RADICAL         *radicals[MAX_NUM_RADICALS];$/;"	m	struct:paraffin	file:
radicals	nofib/imaginary/paraffins/paraffins.c	/^RADICAL  *radicals[MAX_SIZE_RADICAL];$/;"	v
rads_of_size_n_with_no_copying	nofib/imaginary/paraffins/paraffins.c	/^rads_of_size_n_with_no_copying (m)$/;"	f
raiseAsync	rts/RaiseAsync.c	/^raiseAsync(Capability *cap, StgTSO *tso, StgClosure *exception,$/;"	f
raiseExceptionHelper	rts/Schedule.c	/^raiseExceptionHelper (StgRegTable *reg, StgTSO *tso, StgClosure *exception)$/;"	f
rand_fasta	nofib/shootout/fasta/fasta-c.c	/^void rand_fasta(amino *s, size_t outlen) {$/;"	f
rax	libffi/build/src/x86/ffi64.c	/^  UINT64 rax;	\/* ssecount *\/$/;"	m	struct:register_args	file:
rbp	libffi/build/src/x86/ffiw64.c	/^  UINT64 rbp;		\/* 0 *\/$/;"	m	struct:win64_call_frame	file:
rcurdir	utils/lndir/lndir.c	/^char *rcurdir;$/;"	v
re_invalid	rts/Linker.c	/^static regex_t re_invalid;$/;"	v	file:
re_realso	rts/Linker.c	/^static regex_t re_realso;$/;"	v	file:
read4Bytes	rts/linker/LoadArchive.c	/^static uint32_t read4Bytes(const char buf[static 4])$/;"	f	file:
readBss	testsuite/tests/ghci/linking/T15729.c	/^int readBss(int i) {$/;"	f
readIOManagerEvent	rts/win32/ThrIOManager.c	/^readIOManagerEvent (void)$/;"	f
readThinArchiveMember	rts/linker/LoadArchive.c	/^static StgBool readThinArchiveMember(int n, int memberSize, pathchar* path,$/;"	f	file:
readTix	rts/Hpc.c	/^readTix(void) {$/;"	f	file:
read_control_data	nofib/real/fem/inC/read_data.c	/^read_control_data() {$/;"	f
read_current_value	rts/STM.c	/^static StgClosure *read_current_value(StgTRecHeader *trec STG_UNUSED, StgTVar *tvar) {$/;"	f	file:
read_debug_flags	rts/RtsFlags.c	/^static void read_debug_flags(const char* arg)$/;"	f	file:
read_element_data	nofib/real/fem/inC/read_data.c	/^read_element_data() {$/;"	f
read_heap_profiling_flag	rts/RtsFlags.c	/^static bool read_heap_profiling_flag(const char *arg)$/;"	f	file:
read_load_data	nofib/real/fem/inC/read_data.c	/^read_load_data() {$/;"	f
read_material_data	nofib/real/fem/inC/read_data.c	/^read_material_data() {$/;"	f
read_node_data	nofib/real/fem/inC/read_data.c	/^read_node_data() {$/;"	f
read_trace_flags	rts/RtsFlags.c	/^static void read_trace_flags(const char *arg)$/;"	f	file:
readers	rts/FileLock.c	/^    int   readers; \/\/ >0 : readers,  <0 : writers$/;"	m	struct:__anon36	file:
readline	utils/unlit/unlit.c	/^static line readline(FILE *istream, FILE *ostream) {$/;"	f	file:
recent_activity	rts/Schedule.c	/^volatile StgWord recent_activity = ACTIVITY_YES;$/;"	v
recordAllocatedBlocks	rts/sm/BlockAlloc.c	/^void recordAllocatedBlocks(uint32_t node, uint32_t n)$/;"	f
recordFreedBlocks	rts/sm/BlockAlloc.c	/^void recordFreedBlocks(uint32_t node, uint32_t n)$/;"	f
recoverSuspendedTask	rts/Schedule.c	/^recoverSuspendedTask (Capability *cap, Task *task)$/;"	f
reflect_boundary	nofib/spectral/simple/simple.c	/^int reflect_boundary(double r[MAXSIZE][MAXSIZE], double z[MAXSIZE][MAXSIZE],$/;"	f
refreshProfilingCCSs	rts/Profiling.c	/^void refreshProfilingCCSs (void)$/;"	f
regional_mass	nofib/spectral/simple/simple.c	/^double regional_mass (int nodex, int nodey)$/;"	f
registerCC	rts/Profiling.c	/^registerCC(CostCentre *cc)$/;"	f	file:
registerCCS	rts/Profiling.c	/^static void registerCCS(CostCentreStack *ccs)$/;"	f	file:
registerCcList	rts/Profiling.c	/^void registerCcList(CostCentre **cc_list)$/;"	f
registerCcsList	rts/Profiling.c	/^void registerCcsList(CostCentreStack **cc_list)$/;"	f
register_args	libffi/build/src/x86/ffi64.c	/^struct register_args$/;"	s	file:
regs	libffi/build/src/x86/ffi.c	/^  int regs[3];$/;"	m	struct:abi_params	file:
regs	libffi/build/src/x86/ffi.c	/^  unsigned regs[3];				\/* 16-24 *\/$/;"	m	struct:closure_frame	file:
regs	libffi/build/src/x86/ffi.c	/^  unsigned regs[3];	\/* 20-28 *\/$/;"	m	struct:call_frame	file:
releaseAllCapabilities	rts/Schedule.c	/^void releaseAllCapabilities(uint32_t n, Capability *keep_cap, Task *task)$/;"	f
releaseAndWakeupCapability	rts/Capability.c	/^releaseAndWakeupCapability (Capability* cap USED_IF_THREADS)$/;"	f
releaseCapability	rts/Capability.c	/^releaseCapability (Capability* cap USED_IF_THREADS)$/;"	f
releaseCapability_	rts/Capability.c	/^releaseCapability_ (Capability* cap,$/;"	f
releaseFreeMemory	rts/sm/MBlock.c	/^void releaseFreeMemory(void)$/;"	f
releaseGCThreads	rts/sm/GC.c	/^releaseGCThreads (Capability *cap USED_IF_THREADS, bool idle_cap[])$/;"	f
releaseOcInfo	rts/linker/PEi386.c	/^static void releaseOcInfo(ObjectCode* oc) {$/;"	f	file:
releaseThreadNode	rts/posix/OSThreads.c	/^void releaseThreadNode (void) { \/* nothing *\/ }$/;"	f
releaseThreadNode	rts/posix/OSThreads.c	/^void releaseThreadNode (void)$/;"	f
releaseThreadNode	rts/win32/OSThreads.c	/^void releaseThreadNode (void)$/;"	f
release_unused_segments	libffi/build/src/dlmalloc.c	/^static size_t release_unused_segments(mstate m) {$/;"	f	file:
relocateObjectCode	rts/linker/elf_reloc.c	/^relocateObjectCode(ObjectCode * oc) {$/;"	f
relocateObjectCodeAarch64	rts/linker/elf_reloc_aarch64.c	/^relocateObjectCodeAarch64(ObjectCode * oc) {$/;"	f
relocateSection	rts/linker/MachO.c	/^relocateSection(ObjectCode* oc, int curSection)$/;"	f	file:
relocateSectionAarch64	rts/linker/MachO.c	/^relocateSectionAarch64(ObjectCode * oc, Section * section)$/;"	f	file:
rememberOldStableNameAddresses	rts/StableName.c	/^rememberOldStableNameAddresses(void)$/;"	f
removeFromMVarBlockedQueue	rts/RaiseAsync.c	/^removeFromMVarBlockedQueue (StgTSO *tso)$/;"	f	file:
removeFromQueues	rts/RaiseAsync.c	/^removeFromQueues(Capability *cap, StgTSO *tso)$/;"	f	file:
removeFromRunQueue	rts/Schedule.c	/^removeFromRunQueue (Capability *cap, StgTSO *tso)$/;"	f	file:
removeHashTable	rts/Hash.c	/^removeHashTable(HashTable *table, StgWord key, const void *data)$/;"	f
removeHashTable_	rts/Hash.c	/^removeHashTable_(HashTable *table, StgWord key, const void *data,$/;"	f
removeHashTable_inlined	rts/Hash.c	/^removeHashTable_inlined(HashTable *table, StgWord key, const void *data,$/;"	f
removeIndirections	rts/StableName.c	/^removeIndirections (StgClosure* p)$/;"	f	file:
removeLibrarySearchPath	rts/Linker.c	/^HsBool removeLibrarySearchPath(HsPtr dll_path_index)$/;"	f
removeLibrarySearchPath_PEi386	rts/linker/PEi386.c	/^bool removeLibrarySearchPath_PEi386(HsPtr dll_path_index)$/;"	f
removeOcSymbols	rts/Linker.c	/^static void removeOcSymbols (ObjectCode *oc)$/;"	f	file:
removeStrHashTable	rts/Hash.c	/^removeStrHashTable(StrHashTable *table, const char * key, const void *data)$/;"	f
removeThreadFromDeQueue	rts/Threads.c	/^removeThreadFromDeQueue (Capability *cap,$/;"	f
removeThreadFromQueue	rts/Threads.c	/^removeThreadFromQueue (Capability *cap, StgTSO **queue, StgTSO *tso)$/;"	f
removeThreadLabel	rts/ThreadLabels.c	/^removeThreadLabel(StgWord key)$/;"	f
remove_watch_queue_entries_for_trec	rts/STM.c	/^static void remove_watch_queue_entries_for_trec(Capability *cap,$/;"	f	file:
repeat	libffi/build/src/closures.c	/^  int repeat;$/;"	m	struct:__anon1	file:
replace_dv	libffi/build/src/dlmalloc.c	3026;"	d	file:
reportCCS	rts/ProfilerReport.c	/^reportCCS(FILE *prof_file, CostCentreStack const *ccs, ProfilerTotals totals)$/;"	f	file:
reportCCSProfiling	rts/Profiling.c	/^reportCCSProfiling( void )$/;"	f
reportHeapOverflow	rts/RtsUtils.c	/^reportHeapOverflow(void)$/;"	f
reportPerCCCosts	rts/ProfilerReport.c	/^reportPerCCCosts( FILE *prof_file, ProfilerTotals totals )$/;"	f	file:
reportStackOverflow	rts/RtsUtils.c	/^reportStackOverflow(StgTSO* tso)$/;"	f
reportUnmarkedBlocks	rts/sm/BlockAlloc.c	/^reportUnmarkedBlocks (void)$/;"	f
report_machine_readable	rts/Stats.c	/^static void report_machine_readable (const RTSSummaryStats * sum)$/;"	f	file:
report_one_line	rts/Stats.c	/^static void report_one_line(const RTSSummaryStats * sum)$/;"	f	file:
report_summary	rts/Stats.c	/^static void report_summary(const RTSSummaryStats* sum)$/;"	f	file:
reqID	rts/win32/AsyncIO.c	/^    unsigned int   reqID;$/;"	m	struct:CompletedReq	file:
request2size	libffi/build/src/dlmalloc.c	1707;"	d	file:
requestID	rts/win32/IOManager.c	/^    unsigned int     requestID;$/;"	m	struct:IOManagerState	file:
requestSync	rts/Schedule.c	/^static bool requestSync ($/;"	f	file:
resetAbandonRequestWait	rts/win32/AsyncIO.c	/^resetAbandonRequestWait( void )$/;"	f
resetChildProcessStats	rts/Stats.c	/^void resetChildProcessStats()$/;"	f
resetDefaultHandlers	rts/posix/Signals.c	/^resetDefaultHandlers(void)$/;"	f
resetDefaultHandlers	rts/win32/ConsoleHandler.c	/^void resetDefaultHandlers(void)$/;"	f
resetEventsBuf	rts/eventlog/EventLog.c	/^void resetEventsBuf(EventsBuf* eb)$/;"	f
resetMutableObjects	rts/TraverseHeap.c	/^resetMutableObjects(void)$/;"	f	file:
resetNurseries	rts/sm/Storage.c	/^resetNurseries (void)$/;"	f
resetStaticObjectForProfiling	rts/TraverseHeap.c	/^resetStaticObjectForProfiling( StgClosure *static_objects )$/;"	f
resetTerminalSettings	rts/posix/TTY.c	/^resetTerminalSettings (void)$/;"	f
resetTracing	rts/Trace.c	/^void resetTracing (void)$/;"	f
reset_on_error	libffi/build/src/dlmalloc.c	/^static void reset_on_error(mstate m) {$/;"	f	file:
reset_upd_rem_set	rts/sm/NonMovingMark.c	/^void reset_upd_rem_set (UpdRemSet *rset)$/;"	f
resid	rts/ProfHeap.c	/^        ssize_t resid;$/;"	m	union:_counter::__anon42	file:
resizeGenerations	rts/sm/GC.c	/^resizeGenerations (void)$/;"	f
resizeNurseries	rts/sm/Storage.c	/^resizeNurseries (W_ blocks)$/;"	f
resizeNurseriesEach	rts/sm/Storage.c	/^resizeNurseriesEach (W_ blocks)$/;"	f	file:
resizeNurseriesFixed	rts/sm/Storage.c	/^resizeNurseriesFixed (void)$/;"	f
resize_nursery	rts/sm/GC.c	/^resize_nursery (void)$/;"	f	file:
resolveImports	rts/linker/MachO.c	/^resolveImports($/;"	f	file:
resolveObjs	rts/Linker.c	/^HsInt resolveObjs (void)$/;"	f
resolveObjs_	rts/Linker.c	/^static HsInt resolveObjs_ (void)$/;"	f	file:
resolveSymbolAddr	rts/Linker.c	/^resolveSymbolAddr (pathchar* buffer, int size,$/;"	f
resolveSymbolAddr_PEi386	rts/linker/PEi386.c	/^resolveSymbolAddr_PEi386 (pathchar* buffer, int size,$/;"	f
restartEventLogging	rts/eventlog/EventLog.c	/^restartEventLogging(void)$/;"	f
result	libffi/build/src/arm/ffi.c	/^  char result[8*4];$/;"	m	struct:closure_frame	file:
resumeThread	rts/Schedule.c	/^resumeThread (void *task_)$/;"	f
resurrectThreads	rts/Schedule.c	/^resurrectThreads (StgTSO *threads)$/;"	f
resurrectUnreachableThreads	rts/sm/MarkWeak.c	/^static bool resurrectUnreachableThreads (generation *gen, StgTSO **resurrected_threads)$/;"	f	file:
retaddr	libffi/build/src/x86/ffi.c	/^  void *retaddr;	\/* 4 *\/$/;"	m	struct:call_frame	file:
retaddr	libffi/build/src/x86/ffiw64.c	/^  UINT64 retaddr;	\/* 8 *\/$/;"	m	struct:win64_call_frame	file:
retaddr	libffi/build/src/x86/ffiw64.c	/^  UINT64 retaddr;$/;"	m	struct:win64_closure_frame	file:
retainRoot	rts/RetainerProfile.c	/^retainRoot(void *user, StgClosure **tl)$/;"	f	file:
retainVisitClosure	rts/RetainerProfile.c	/^retainVisitClosure( StgClosure *c, const StgClosure *cp, const stackData data, const bool first_visit, stackData *out_data )$/;"	f	file:
retainerGeneration	rts/RetainerProfile.c	/^static uint32_t retainerGeneration;  \/\/ generation$/;"	v	file:
retainerProfile	rts/RetainerProfile.c	/^retainerProfile(void)$/;"	f
retainerStackBlocks	rts/RetainerProfile.c	/^retainerStackBlocks(void)$/;"	f
rettemp	libffi/build/src/x86/ffi.c	/^  unsigned rettemp[4];				\/* 0 *\/$/;"	m	struct:closure_frame	file:
returnMemoryToOS	rts/sm/BlockAlloc.c	/^void returnMemoryToOS(uint32_t n \/* megablocks *\/)$/;"	f
returnToOldStack	rts/TraverseHeap.c	/^returnToOldStack( traverseState *ts, bdescr *bd )$/;"	f
return_dbl	libffi/build/testsuite/libffi.call/return_dbl.c	/^static double return_dbl(double dbl)$/;"	f	file:
return_dbl	libffi/build/testsuite/libffi.call/return_dbl1.c	/^static double return_dbl(double dbl1, float fl2, unsigned int in3, double dbl4)$/;"	f	file:
return_dbl	libffi/build/testsuite/libffi.call/return_dbl2.c	/^static double return_dbl(double dbl1, double dbl2, unsigned int in3, double dbl4)$/;"	f	file:
return_fl	libffi/build/testsuite/libffi.call/return_fl.c	/^static float return_fl(float fl)$/;"	f	file:
return_fl	libffi/build/testsuite/libffi.call/return_fl1.c	/^static float return_fl(float fl1, float fl2)$/;"	f	file:
return_fl	libffi/build/testsuite/libffi.call/return_fl2.c	/^static float return_fl(float fl1, float fl2, float fl3, float fl4)$/;"	f	file:
return_fl	libffi/build/testsuite/libffi.call/return_fl3.c	/^static float return_fl(float fl1, float fl2, unsigned int in3, float fl4)$/;"	f	file:
return_ldl	libffi/build/testsuite/libffi.call/return_ldl.c	/^static long double return_ldl(long double ldl)$/;"	f	file:
return_ll	libffi/build/testsuite/libffi.call/return_ll.c	/^static long long return_ll(long long ll)$/;"	f	file:
return_ll	libffi/build/testsuite/libffi.call/return_ll1.c	/^static long long return_ll(int ll0, long long ll1, int ll2)$/;"	f	file:
return_sc	libffi/build/testsuite/libffi.call/return_sc.c	/^static signed char return_sc(signed char sc)$/;"	f	file:
return_sl	libffi/build/testsuite/libffi.call/return_sl.c	/^static long return_sl(long l1, long l2)$/;"	f	file:
return_type	libffi/build/src/sh/ffi.c	/^return_type (ffi_type *arg)$/;"	f	file:
return_type	libffi/build/src/sh64/ffi.c	/^return_type (ffi_type *arg)$/;"	f	file:
return_uc	libffi/build/testsuite/libffi.call/return_uc.c	/^static unsigned char return_uc(unsigned char uc)$/;"	f	file:
return_ul	libffi/build/testsuite/libffi.call/return_ul.c	/^static unsigned long return_ul(unsigned long ul1, unsigned long ul2)$/;"	f	file:
revertCAFs	rts/sm/GCAux.c	/^revertCAFs( void )$/;"	f
revert_ownership	rts/STM.c	/^static void revert_ownership(Capability *cap STG_UNUSED,$/;"	f	file:
revertible_caf_list	rts/sm/Storage.c	/^StgIndStatic  *revertible_caf_list = NULL;$/;"	v
revised_temperature	nofib/spectral/simple/simple.c	/^double revised_temperature(double f(double,double,double), double epsilon_kl, double rho_kl, $/;"	f
rgb	nofib/gc/fulsom/raster/raster.c	/^    struct pixm rgb;$/;"	m	union:pix::__anon26	typeref:struct:pix::__anon26::pixm	file:
rgb	nofib/real/fulsom/raster/raster.c	/^    struct pixm rgb;$/;"	m	union:pix::__anon31	typeref:struct:pix::__anon31::pixm	file:
rho	nofib/spectral/simple/simple.c	/^double rho[MAXSIZE][MAXSIZE],new_rho[MAXSIZE][MAXSIZE];$/;"	v
rho_table	nofib/spectral/simple/simple.c	/^double rho_table[] = {0.0 ,0.0, 1.0, 100.0};$/;"	v
right	nofib/real/compress2/inC/prefix_trees.c	/^  struct ptree *right;$/;"	m	struct:ptree	typeref:struct:ptree::ptree	file:
rintDouble	libraries/base/cbits/primFloat.c	/^rintDouble(HsDouble d)$/;"	f
rintFloat	libraries/base/cbits/primFloat.c	/^rintFloat(HsFloat f)$/;"	f
risalnum	libraries/Cabal/Cabal/tests/cbits/rpmvercmp.c	25;"	d	file:
risalpha	libraries/Cabal/Cabal/tests/cbits/rpmvercmp.c	27;"	d	file:
risdigit	libraries/Cabal/Cabal/tests/cbits/rpmvercmp.c	26;"	d	file:
rmpvercmp_impl	libraries/Cabal/Cabal/tests/cbits/rpmvercmp.c	/^int rmpvercmp_impl(const char *a, const char *b, char *str1, char *str2) {$/;"	f
rnd	nofib/shootout/fasta/fasta-c.c	/^inline unsigned int rnd(void) {$/;"	f
roundUp2	rts/WSDeque.c	/^roundUp2(StgWord val)$/;"	f	file:
rpmvercmp	libraries/Cabal/Cabal/tests/cbits/rpmvercmp.c	/^int rpmvercmp(const char * a, const char * b)$/;"	f
rr	libffi/build/testsuite/libffi.call/huge_struct.c	/^	int64_t		rr;$/;"	m	struct:BigStruct	file:
rs_MANY	rts/RetainerSet.c	/^RetainerSet rs_MANY = {$/;"	v
rstreq	libraries/Cabal/Cabal/tests/cbits/rpmvercmp.c	24;"	d	file:
rtime	rts/ProfHeap.c	/^    StgWord64   rtime;   \/\/ The eventlog time the census was made. This is used$/;"	m	struct:__anon44	file:
rtsBadAlignmentBarf	rts/RtsMessages.c	/^rtsBadAlignmentBarf()$/;"	f
rtsConfig	rts/RtsFlags.c	/^RtsConfig rtsConfig;$/;"	v
rtsDebugMsgFn	rts/RtsMessages.c	/^rtsDebugMsgFn(const char *s, va_list ap)$/;"	f
rtsErrorMsgFn	rts/RtsMessages.c	/^rtsErrorMsgFn(const char *s, va_list ap)$/;"	f
rtsSupportsBoundThreads	rts/Threads.c	/^rtsSupportsBoundThreads(void)$/;"	f
rtsSyms	rts/RtsSymbols.c	/^RtsSymbolVal rtsSyms[] = {$/;"	v
rtsSysErrorMsgFn	rts/RtsMessages.c	/^rtsSysErrorMsgFn(const char *s, va_list ap)$/;"	f
rtsTimerSignal	rts/posix/itimer/Pthread.c	/^rtsTimerSignal(void)$/;"	f
rtsTimerSignal	rts/posix/itimer/Setitimer.c	/^rtsTimerSignal(void)$/;"	f
rtsTimerSignal	rts/posix/itimer/TimerCreate.c	/^rtsTimerSignal(void)$/;"	f
rts_ConsoleHandlerDone	rts/win32/ConsoleHandler.c	/^rts_ConsoleHandlerDone (int ev USED_IF_NOT_THREADS)$/;"	f
rts_InstallConsoleEvent	rts/win32/ConsoleHandler.c	/^rts_InstallConsoleEvent(int action, StgStablePtr *handler)$/;"	f
rts_apply	rts/RtsAPI.c	/^rts_apply (Capability *cap, HaskellObj f, HaskellObj arg)$/;"	f
rts_argc	rts/RtsFlags.c	/^int     rts_argc = 0;  \/* ditto *\/$/;"	v
rts_argv	rts/RtsFlags.c	/^char  **rts_argv = NULL;$/;"	v
rts_argv_size	rts/RtsFlags.c	/^int     rts_argv_size = 0;$/;"	v
rts_breakpoint_io_action	rts/Interpreter.c	/^HsStablePtr rts_breakpoint_io_action; \/\/ points to the IO action which is executed on a breakpoint$/;"	v
rts_checkSchedStatus	rts/RtsAPI.c	/^rts_checkSchedStatus (char* site, Capability *cap)$/;"	f
rts_disableThreadAllocationLimit	rts/Threads.c	/^void rts_disableThreadAllocationLimit(StgPtr tso)$/;"	f
rts_done	rts/RtsAPI.c	/^void rts_done (void)$/;"	f
rts_enableThreadAllocationLimit	rts/Threads.c	/^void rts_enableThreadAllocationLimit(StgPtr tso)$/;"	f
rts_eval	rts/RtsAPI.c	/^void rts_eval (\/* inout *\/ Capability **cap,$/;"	f
rts_evalIO	rts/RtsAPI.c	/^void rts_evalIO (\/* inout *\/ Capability **cap,$/;"	f
rts_evalLazyIO	rts/RtsAPI.c	/^void rts_evalLazyIO (\/* inout *\/ Capability **cap,$/;"	f
rts_evalLazyIO_	rts/RtsAPI.c	/^void rts_evalLazyIO_ (\/* inout *\/ Capability **cap,$/;"	f
rts_evalStableIO	rts/RtsAPI.c	/^void rts_evalStableIO (\/* inout *\/ Capability **cap,$/;"	f
rts_evalStableIOMain	rts/RtsAPI.c	/^void rts_evalStableIOMain(\/* inout *\/ Capability **cap,$/;"	f
rts_eval_	rts/RtsAPI.c	/^void rts_eval_ (\/* inout *\/ Capability **cap,$/;"	f
rts_getBool	rts/RtsAPI.c	/^rts_getBool (HaskellObj p)$/;"	f
rts_getChar	rts/RtsAPI.c	/^rts_getChar (HaskellObj p)$/;"	f
rts_getDouble	rts/RtsAPI.c	/^rts_getDouble (HaskellObj p)$/;"	f
rts_getFloat	rts/RtsAPI.c	/^rts_getFloat (HaskellObj p)$/;"	f
rts_getFunPtr	rts/RtsAPI.c	/^rts_getFunPtr (HaskellObj p)$/;"	f
rts_getInt	rts/RtsAPI.c	/^rts_getInt (HaskellObj p)$/;"	f
rts_getInt16	rts/RtsAPI.c	/^rts_getInt16 (HaskellObj p)$/;"	f
rts_getInt32	rts/RtsAPI.c	/^rts_getInt32 (HaskellObj p)$/;"	f
rts_getInt64	rts/RtsAPI.c	/^rts_getInt64 (HaskellObj p)$/;"	f
rts_getInt8	rts/RtsAPI.c	/^rts_getInt8 (HaskellObj p)$/;"	f
rts_getPtr	rts/RtsAPI.c	/^rts_getPtr (HaskellObj p)$/;"	f
rts_getSchedStatus	rts/RtsAPI.c	/^rts_getSchedStatus (Capability *cap)$/;"	f
rts_getStablePtr	rts/RtsAPI.c	/^rts_getStablePtr (HaskellObj p)$/;"	f
rts_getThreadId	rts/Threads.c	/^rts_getThreadId(StgPtr tso)$/;"	f
rts_getWord	rts/RtsAPI.c	/^rts_getWord (HaskellObj p)$/;"	f
rts_getWord16	rts/RtsAPI.c	/^rts_getWord16 (HaskellObj p)$/;"	f
rts_getWord32	rts/RtsAPI.c	/^rts_getWord32 (HaskellObj p)$/;"	f
rts_getWord64	rts/RtsAPI.c	/^rts_getWord64 (HaskellObj p)$/;"	f
rts_getWord8	rts/RtsAPI.c	/^rts_getWord8 (HaskellObj p)$/;"	f
rts_isDynamic	rts/RtsUtils.c	/^int rts_isDynamic(void)$/;"	f
rts_isProfiled	rts/RtsUtils.c	/^int rts_isProfiled(void)$/;"	f
rts_lock	rts/RtsAPI.c	/^rts_lock (void)$/;"	f
rts_mkBool	rts/RtsAPI.c	/^rts_mkBool (Capability *cap STG_UNUSED, HsBool b)$/;"	f
rts_mkChar	rts/RtsAPI.c	/^rts_mkChar (Capability *cap, HsChar c)$/;"	f
rts_mkDouble	rts/RtsAPI.c	/^rts_mkDouble (Capability *cap, HsDouble d)$/;"	f
rts_mkFloat	rts/RtsAPI.c	/^rts_mkFloat (Capability *cap, HsFloat f)$/;"	f
rts_mkFunPtr	rts/RtsAPI.c	/^rts_mkFunPtr (Capability *cap, HsFunPtr a)$/;"	f
rts_mkInt	rts/RtsAPI.c	/^rts_mkInt (Capability *cap, HsInt i)$/;"	f
rts_mkInt16	rts/RtsAPI.c	/^rts_mkInt16 (Capability *cap, HsInt16 i)$/;"	f
rts_mkInt32	rts/RtsAPI.c	/^rts_mkInt32 (Capability *cap, HsInt32 i)$/;"	f
rts_mkInt64	rts/RtsAPI.c	/^rts_mkInt64 (Capability *cap, HsInt64 i)$/;"	f
rts_mkInt8	rts/RtsAPI.c	/^rts_mkInt8 (Capability *cap, HsInt8 i)$/;"	f
rts_mkPtr	rts/RtsAPI.c	/^rts_mkPtr (Capability *cap, HsPtr a)$/;"	f
rts_mkStablePtr	rts/RtsAPI.c	/^rts_mkStablePtr (Capability *cap, HsStablePtr s)$/;"	f
rts_mkString	rts/RtsAPI.c	/^rts_mkString (Capability *cap, char *s)$/;"	f
rts_mkWord	rts/RtsAPI.c	/^rts_mkWord (Capability *cap, HsWord i)$/;"	f
rts_mkWord16	rts/RtsAPI.c	/^rts_mkWord16 (Capability *cap, HsWord16 w)$/;"	f
rts_mkWord32	rts/RtsAPI.c	/^rts_mkWord32 (Capability *cap, HsWord32 w)$/;"	f
rts_mkWord64	rts/RtsAPI.c	/^rts_mkWord64 (Capability *cap, HsWord64 w)$/;"	f
rts_mkWord8	rts/RtsAPI.c	/^rts_mkWord8 (Capability *cap, HsWord8 w)$/;"	f
rts_pinThreadToNumaNode	rts/Task.c	/^void rts_pinThreadToNumaNode ($/;"	f
rts_setInCallCapability	rts/Task.c	/^void rts_setInCallCapability ($/;"	f
rts_setMainThread	rts/TopHandler.c	/^void rts_setMainThread(StgWeak *weak) {$/;"	f
rts_shutdown	rts/RtsStartup.c	/^static bool rts_shutdown = false;$/;"	v	file:
rts_stop_next_breakpoint	rts/Interpreter.c	/^int rts_stop_next_breakpoint = 0;$/;"	v
rts_stop_on_exception	rts/Interpreter.c	/^int rts_stop_on_exception = 0;$/;"	v
rts_unlock	rts/RtsAPI.c	/^rts_unlock (Capability *cap)$/;"	f
rts_unsafeGetMyCapability	rts/Capability.c	/^Capability * rts_unsafeGetMyCapability (void)$/;"	f
rts_waitConsoleHandlerCompletion	rts/win32/ConsoleHandler.c	/^rts_waitConsoleHandlerCompletion()$/;"	f
rule	libraries/base/cbits/WCsubst.c	/^	const struct _convrule_ *rule;$/;"	m	struct:_charblock_	typeref:struct:_charblock_::_convrule_	file:
rule0	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule0={GENCAT_CC, NUMCAT_CC, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule1	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule1={GENCAT_ZS, NUMCAT_ZS, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule10	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule10={GENCAT_SK, NUMCAT_SK, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule100	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule100={GENCAT_LL, NUMCAT_LL, 1, -37, 0, -37};$/;"	v	typeref:struct:_convrule_	file:
rule101	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule101={GENCAT_LL, NUMCAT_LL, 1, -31, 0, -31};$/;"	v	typeref:struct:_convrule_	file:
rule102	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule102={GENCAT_LL, NUMCAT_LL, 1, -64, 0, -64};$/;"	v	typeref:struct:_convrule_	file:
rule103	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule103={GENCAT_LL, NUMCAT_LL, 1, -63, 0, -63};$/;"	v	typeref:struct:_convrule_	file:
rule104	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule104={GENCAT_LU, NUMCAT_LU, 1, 0, 8, 0};$/;"	v	typeref:struct:_convrule_	file:
rule105	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule105={GENCAT_LL, NUMCAT_LL, 1, -62, 0, -62};$/;"	v	typeref:struct:_convrule_	file:
rule106	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule106={GENCAT_LL, NUMCAT_LL, 1, -57, 0, -57};$/;"	v	typeref:struct:_convrule_	file:
rule107	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule107={GENCAT_LU, NUMCAT_LU, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule108	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule108={GENCAT_LL, NUMCAT_LL, 1, -47, 0, -47};$/;"	v	typeref:struct:_convrule_	file:
rule109	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule109={GENCAT_LL, NUMCAT_LL, 1, -54, 0, -54};$/;"	v	typeref:struct:_convrule_	file:
rule11	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule11={GENCAT_PC, NUMCAT_PC, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule110	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule110={GENCAT_LL, NUMCAT_LL, 1, -8, 0, -8};$/;"	v	typeref:struct:_convrule_	file:
rule111	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule111={GENCAT_LL, NUMCAT_LL, 1, -86, 0, -86};$/;"	v	typeref:struct:_convrule_	file:
rule112	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule112={GENCAT_LL, NUMCAT_LL, 1, -80, 0, -80};$/;"	v	typeref:struct:_convrule_	file:
rule113	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule113={GENCAT_LL, NUMCAT_LL, 1, 7, 0, 7};$/;"	v	typeref:struct:_convrule_	file:
rule114	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule114={GENCAT_LL, NUMCAT_LL, 1, -116, 0, -116};$/;"	v	typeref:struct:_convrule_	file:
rule115	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule115={GENCAT_LU, NUMCAT_LU, 1, 0, -60, 0};$/;"	v	typeref:struct:_convrule_	file:
rule116	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule116={GENCAT_LL, NUMCAT_LL, 1, -96, 0, -96};$/;"	v	typeref:struct:_convrule_	file:
rule117	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule117={GENCAT_LU, NUMCAT_LU, 1, 0, -7, 0};$/;"	v	typeref:struct:_convrule_	file:
rule118	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule118={GENCAT_LU, NUMCAT_LU, 1, 0, 80, 0};$/;"	v	typeref:struct:_convrule_	file:
rule119	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule119={GENCAT_ME, NUMCAT_ME, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule12	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule12={GENCAT_LL, NUMCAT_LL, 1, -32, 0, -32};$/;"	v	typeref:struct:_convrule_	file:
rule120	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule120={GENCAT_LU, NUMCAT_LU, 1, 0, 15, 0};$/;"	v	typeref:struct:_convrule_	file:
rule121	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule121={GENCAT_LL, NUMCAT_LL, 1, -15, 0, -15};$/;"	v	typeref:struct:_convrule_	file:
rule122	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule122={GENCAT_LU, NUMCAT_LU, 1, 0, 48, 0};$/;"	v	typeref:struct:_convrule_	file:
rule123	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule123={GENCAT_LL, NUMCAT_LL, 1, -48, 0, -48};$/;"	v	typeref:struct:_convrule_	file:
rule124	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule124={GENCAT_MC, NUMCAT_MC, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule125	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule125={GENCAT_LU, NUMCAT_LU, 1, 0, 7264, 0};$/;"	v	typeref:struct:_convrule_	file:
rule126	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule126={GENCAT_LL, NUMCAT_LL, 1, 3008, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule127	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule127={GENCAT_LU, NUMCAT_LU, 1, 0, 38864, 0};$/;"	v	typeref:struct:_convrule_	file:
rule128	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule128={GENCAT_NL, NUMCAT_NL, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule129	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule129={GENCAT_LL, NUMCAT_LL, 1, -6254, 0, -6254};$/;"	v	typeref:struct:_convrule_	file:
rule13	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule13={GENCAT_SO, NUMCAT_SO, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule130	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule130={GENCAT_LL, NUMCAT_LL, 1, -6253, 0, -6253};$/;"	v	typeref:struct:_convrule_	file:
rule131	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule131={GENCAT_LL, NUMCAT_LL, 1, -6244, 0, -6244};$/;"	v	typeref:struct:_convrule_	file:
rule132	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule132={GENCAT_LL, NUMCAT_LL, 1, -6242, 0, -6242};$/;"	v	typeref:struct:_convrule_	file:
rule133	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule133={GENCAT_LL, NUMCAT_LL, 1, -6243, 0, -6243};$/;"	v	typeref:struct:_convrule_	file:
rule134	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule134={GENCAT_LL, NUMCAT_LL, 1, -6236, 0, -6236};$/;"	v	typeref:struct:_convrule_	file:
rule135	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule135={GENCAT_LL, NUMCAT_LL, 1, -6181, 0, -6181};$/;"	v	typeref:struct:_convrule_	file:
rule136	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule136={GENCAT_LL, NUMCAT_LL, 1, 35266, 0, 35266};$/;"	v	typeref:struct:_convrule_	file:
rule137	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule137={GENCAT_LU, NUMCAT_LU, 1, 0, -3008, 0};$/;"	v	typeref:struct:_convrule_	file:
rule138	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule138={GENCAT_LL, NUMCAT_LL, 1, 35332, 0, 35332};$/;"	v	typeref:struct:_convrule_	file:
rule139	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule139={GENCAT_LL, NUMCAT_LL, 1, 3814, 0, 3814};$/;"	v	typeref:struct:_convrule_	file:
rule14	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule14={GENCAT_LO, NUMCAT_LO, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule140	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule140={GENCAT_LL, NUMCAT_LL, 1, 35384, 0, 35384};$/;"	v	typeref:struct:_convrule_	file:
rule141	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule141={GENCAT_LL, NUMCAT_LL, 1, -59, 0, -59};$/;"	v	typeref:struct:_convrule_	file:
rule142	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule142={GENCAT_LU, NUMCAT_LU, 1, 0, -7615, 0};$/;"	v	typeref:struct:_convrule_	file:
rule143	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule143={GENCAT_LL, NUMCAT_LL, 1, 8, 0, 8};$/;"	v	typeref:struct:_convrule_	file:
rule144	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule144={GENCAT_LU, NUMCAT_LU, 1, 0, -8, 0};$/;"	v	typeref:struct:_convrule_	file:
rule145	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule145={GENCAT_LL, NUMCAT_LL, 1, 74, 0, 74};$/;"	v	typeref:struct:_convrule_	file:
rule146	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule146={GENCAT_LL, NUMCAT_LL, 1, 86, 0, 86};$/;"	v	typeref:struct:_convrule_	file:
rule147	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule147={GENCAT_LL, NUMCAT_LL, 1, 100, 0, 100};$/;"	v	typeref:struct:_convrule_	file:
rule148	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule148={GENCAT_LL, NUMCAT_LL, 1, 128, 0, 128};$/;"	v	typeref:struct:_convrule_	file:
rule149	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule149={GENCAT_LL, NUMCAT_LL, 1, 112, 0, 112};$/;"	v	typeref:struct:_convrule_	file:
rule15	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule15={GENCAT_PI, NUMCAT_PI, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule150	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule150={GENCAT_LL, NUMCAT_LL, 1, 126, 0, 126};$/;"	v	typeref:struct:_convrule_	file:
rule151	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule151={GENCAT_LT, NUMCAT_LT, 1, 0, -8, 0};$/;"	v	typeref:struct:_convrule_	file:
rule152	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule152={GENCAT_LL, NUMCAT_LL, 1, 9, 0, 9};$/;"	v	typeref:struct:_convrule_	file:
rule153	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule153={GENCAT_LU, NUMCAT_LU, 1, 0, -74, 0};$/;"	v	typeref:struct:_convrule_	file:
rule154	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule154={GENCAT_LT, NUMCAT_LT, 1, 0, -9, 0};$/;"	v	typeref:struct:_convrule_	file:
rule155	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule155={GENCAT_LL, NUMCAT_LL, 1, -7205, 0, -7205};$/;"	v	typeref:struct:_convrule_	file:
rule156	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule156={GENCAT_LU, NUMCAT_LU, 1, 0, -86, 0};$/;"	v	typeref:struct:_convrule_	file:
rule157	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule157={GENCAT_LU, NUMCAT_LU, 1, 0, -100, 0};$/;"	v	typeref:struct:_convrule_	file:
rule158	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule158={GENCAT_LU, NUMCAT_LU, 1, 0, -112, 0};$/;"	v	typeref:struct:_convrule_	file:
rule159	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule159={GENCAT_LU, NUMCAT_LU, 1, 0, -128, 0};$/;"	v	typeref:struct:_convrule_	file:
rule16	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule16={GENCAT_CF, NUMCAT_CF, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule160	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule160={GENCAT_LU, NUMCAT_LU, 1, 0, -126, 0};$/;"	v	typeref:struct:_convrule_	file:
rule161	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule161={GENCAT_ZL, NUMCAT_ZL, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule162	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule162={GENCAT_ZP, NUMCAT_ZP, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule163	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule163={GENCAT_LU, NUMCAT_LU, 1, 0, -7517, 0};$/;"	v	typeref:struct:_convrule_	file:
rule164	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule164={GENCAT_LU, NUMCAT_LU, 1, 0, -8383, 0};$/;"	v	typeref:struct:_convrule_	file:
rule165	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule165={GENCAT_LU, NUMCAT_LU, 1, 0, -8262, 0};$/;"	v	typeref:struct:_convrule_	file:
rule166	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule166={GENCAT_LU, NUMCAT_LU, 1, 0, 28, 0};$/;"	v	typeref:struct:_convrule_	file:
rule167	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule167={GENCAT_LL, NUMCAT_LL, 1, -28, 0, -28};$/;"	v	typeref:struct:_convrule_	file:
rule168	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule168={GENCAT_NL, NUMCAT_NL, 1, 0, 16, 0};$/;"	v	typeref:struct:_convrule_	file:
rule169	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule169={GENCAT_NL, NUMCAT_NL, 1, -16, 0, -16};$/;"	v	typeref:struct:_convrule_	file:
rule17	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule17={GENCAT_NO, NUMCAT_NO, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule170	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule170={GENCAT_SO, NUMCAT_SO, 1, 0, 26, 0};$/;"	v	typeref:struct:_convrule_	file:
rule171	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule171={GENCAT_SO, NUMCAT_SO, 1, -26, 0, -26};$/;"	v	typeref:struct:_convrule_	file:
rule172	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule172={GENCAT_LU, NUMCAT_LU, 1, 0, -10743, 0};$/;"	v	typeref:struct:_convrule_	file:
rule173	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule173={GENCAT_LU, NUMCAT_LU, 1, 0, -3814, 0};$/;"	v	typeref:struct:_convrule_	file:
rule174	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule174={GENCAT_LU, NUMCAT_LU, 1, 0, -10727, 0};$/;"	v	typeref:struct:_convrule_	file:
rule175	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule175={GENCAT_LL, NUMCAT_LL, 1, -10795, 0, -10795};$/;"	v	typeref:struct:_convrule_	file:
rule176	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule176={GENCAT_LL, NUMCAT_LL, 1, -10792, 0, -10792};$/;"	v	typeref:struct:_convrule_	file:
rule177	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule177={GENCAT_LU, NUMCAT_LU, 1, 0, -10780, 0};$/;"	v	typeref:struct:_convrule_	file:
rule178	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule178={GENCAT_LU, NUMCAT_LU, 1, 0, -10749, 0};$/;"	v	typeref:struct:_convrule_	file:
rule179	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule179={GENCAT_LU, NUMCAT_LU, 1, 0, -10783, 0};$/;"	v	typeref:struct:_convrule_	file:
rule18	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule18={GENCAT_LL, NUMCAT_LL, 1, 743, 0, 743};$/;"	v	typeref:struct:_convrule_	file:
rule180	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule180={GENCAT_LU, NUMCAT_LU, 1, 0, -10782, 0};$/;"	v	typeref:struct:_convrule_	file:
rule181	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule181={GENCAT_LU, NUMCAT_LU, 1, 0, -10815, 0};$/;"	v	typeref:struct:_convrule_	file:
rule182	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule182={GENCAT_LL, NUMCAT_LL, 1, -7264, 0, -7264};$/;"	v	typeref:struct:_convrule_	file:
rule183	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule183={GENCAT_LU, NUMCAT_LU, 1, 0, -35332, 0};$/;"	v	typeref:struct:_convrule_	file:
rule184	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule184={GENCAT_LU, NUMCAT_LU, 1, 0, -42280, 0};$/;"	v	typeref:struct:_convrule_	file:
rule185	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule185={GENCAT_LL, NUMCAT_LL, 1, 48, 0, 48};$/;"	v	typeref:struct:_convrule_	file:
rule186	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule186={GENCAT_LU, NUMCAT_LU, 1, 0, -42308, 0};$/;"	v	typeref:struct:_convrule_	file:
rule187	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule187={GENCAT_LU, NUMCAT_LU, 1, 0, -42319, 0};$/;"	v	typeref:struct:_convrule_	file:
rule188	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule188={GENCAT_LU, NUMCAT_LU, 1, 0, -42315, 0};$/;"	v	typeref:struct:_convrule_	file:
rule189	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule189={GENCAT_LU, NUMCAT_LU, 1, 0, -42305, 0};$/;"	v	typeref:struct:_convrule_	file:
rule19	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule19={GENCAT_PF, NUMCAT_PF, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule190	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule190={GENCAT_LU, NUMCAT_LU, 1, 0, -42258, 0};$/;"	v	typeref:struct:_convrule_	file:
rule191	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule191={GENCAT_LU, NUMCAT_LU, 1, 0, -42282, 0};$/;"	v	typeref:struct:_convrule_	file:
rule192	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule192={GENCAT_LU, NUMCAT_LU, 1, 0, -42261, 0};$/;"	v	typeref:struct:_convrule_	file:
rule193	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule193={GENCAT_LU, NUMCAT_LU, 1, 0, 928, 0};$/;"	v	typeref:struct:_convrule_	file:
rule194	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule194={GENCAT_LU, NUMCAT_LU, 1, 0, -48, 0};$/;"	v	typeref:struct:_convrule_	file:
rule195	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule195={GENCAT_LU, NUMCAT_LU, 1, 0, -42307, 0};$/;"	v	typeref:struct:_convrule_	file:
rule196	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule196={GENCAT_LU, NUMCAT_LU, 1, 0, -35384, 0};$/;"	v	typeref:struct:_convrule_	file:
rule197	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule197={GENCAT_LL, NUMCAT_LL, 1, -928, 0, -928};$/;"	v	typeref:struct:_convrule_	file:
rule198	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule198={GENCAT_LL, NUMCAT_LL, 1, -38864, 0, -38864};$/;"	v	typeref:struct:_convrule_	file:
rule199	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule199={GENCAT_CS, NUMCAT_CS, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule2	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule2={GENCAT_PO, NUMCAT_PO, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule20	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule20={GENCAT_LL, NUMCAT_LL, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule200	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule200={GENCAT_CO, NUMCAT_CO, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule201	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule201={GENCAT_LU, NUMCAT_LU, 1, 0, 40, 0};$/;"	v	typeref:struct:_convrule_	file:
rule202	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule202={GENCAT_LL, NUMCAT_LL, 1, -40, 0, -40};$/;"	v	typeref:struct:_convrule_	file:
rule203	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule203={GENCAT_LU, NUMCAT_LU, 1, 0, 34, 0};$/;"	v	typeref:struct:_convrule_	file:
rule204	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule204={GENCAT_LL, NUMCAT_LL, 1, -34, 0, -34};$/;"	v	typeref:struct:_convrule_	file:
rule21	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule21={GENCAT_LL, NUMCAT_LL, 1, 121, 0, 121};$/;"	v	typeref:struct:_convrule_	file:
rule22	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule22={GENCAT_LU, NUMCAT_LU, 1, 0, 1, 0};$/;"	v	typeref:struct:_convrule_	file:
rule23	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule23={GENCAT_LL, NUMCAT_LL, 1, -1, 0, -1};$/;"	v	typeref:struct:_convrule_	file:
rule24	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule24={GENCAT_LU, NUMCAT_LU, 1, 0, -199, 0};$/;"	v	typeref:struct:_convrule_	file:
rule25	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule25={GENCAT_LL, NUMCAT_LL, 1, -232, 0, -232};$/;"	v	typeref:struct:_convrule_	file:
rule26	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule26={GENCAT_LU, NUMCAT_LU, 1, 0, -121, 0};$/;"	v	typeref:struct:_convrule_	file:
rule27	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule27={GENCAT_LL, NUMCAT_LL, 1, -300, 0, -300};$/;"	v	typeref:struct:_convrule_	file:
rule28	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule28={GENCAT_LL, NUMCAT_LL, 1, 195, 0, 195};$/;"	v	typeref:struct:_convrule_	file:
rule29	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule29={GENCAT_LU, NUMCAT_LU, 1, 0, 210, 0};$/;"	v	typeref:struct:_convrule_	file:
rule3	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule3={GENCAT_SC, NUMCAT_SC, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule30	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule30={GENCAT_LU, NUMCAT_LU, 1, 0, 206, 0};$/;"	v	typeref:struct:_convrule_	file:
rule31	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule31={GENCAT_LU, NUMCAT_LU, 1, 0, 205, 0};$/;"	v	typeref:struct:_convrule_	file:
rule32	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule32={GENCAT_LU, NUMCAT_LU, 1, 0, 79, 0};$/;"	v	typeref:struct:_convrule_	file:
rule33	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule33={GENCAT_LU, NUMCAT_LU, 1, 0, 202, 0};$/;"	v	typeref:struct:_convrule_	file:
rule34	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule34={GENCAT_LU, NUMCAT_LU, 1, 0, 203, 0};$/;"	v	typeref:struct:_convrule_	file:
rule35	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule35={GENCAT_LU, NUMCAT_LU, 1, 0, 207, 0};$/;"	v	typeref:struct:_convrule_	file:
rule36	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule36={GENCAT_LL, NUMCAT_LL, 1, 97, 0, 97};$/;"	v	typeref:struct:_convrule_	file:
rule37	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule37={GENCAT_LU, NUMCAT_LU, 1, 0, 211, 0};$/;"	v	typeref:struct:_convrule_	file:
rule38	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule38={GENCAT_LU, NUMCAT_LU, 1, 0, 209, 0};$/;"	v	typeref:struct:_convrule_	file:
rule39	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule39={GENCAT_LL, NUMCAT_LL, 1, 163, 0, 163};$/;"	v	typeref:struct:_convrule_	file:
rule4	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule4={GENCAT_PS, NUMCAT_PS, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule40	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule40={GENCAT_LU, NUMCAT_LU, 1, 0, 213, 0};$/;"	v	typeref:struct:_convrule_	file:
rule41	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule41={GENCAT_LL, NUMCAT_LL, 1, 130, 0, 130};$/;"	v	typeref:struct:_convrule_	file:
rule42	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule42={GENCAT_LU, NUMCAT_LU, 1, 0, 214, 0};$/;"	v	typeref:struct:_convrule_	file:
rule43	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule43={GENCAT_LU, NUMCAT_LU, 1, 0, 218, 0};$/;"	v	typeref:struct:_convrule_	file:
rule44	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule44={GENCAT_LU, NUMCAT_LU, 1, 0, 217, 0};$/;"	v	typeref:struct:_convrule_	file:
rule45	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule45={GENCAT_LU, NUMCAT_LU, 1, 0, 219, 0};$/;"	v	typeref:struct:_convrule_	file:
rule46	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule46={GENCAT_LL, NUMCAT_LL, 1, 56, 0, 56};$/;"	v	typeref:struct:_convrule_	file:
rule47	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule47={GENCAT_LU, NUMCAT_LU, 1, 0, 2, 1};$/;"	v	typeref:struct:_convrule_	file:
rule48	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule48={GENCAT_LT, NUMCAT_LT, 1, -1, 1, 0};$/;"	v	typeref:struct:_convrule_	file:
rule49	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule49={GENCAT_LL, NUMCAT_LL, 1, -2, 0, -1};$/;"	v	typeref:struct:_convrule_	file:
rule5	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule5={GENCAT_PE, NUMCAT_PE, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule50	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule50={GENCAT_LL, NUMCAT_LL, 1, -79, 0, -79};$/;"	v	typeref:struct:_convrule_	file:
rule51	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule51={GENCAT_LU, NUMCAT_LU, 1, 0, -97, 0};$/;"	v	typeref:struct:_convrule_	file:
rule52	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule52={GENCAT_LU, NUMCAT_LU, 1, 0, -56, 0};$/;"	v	typeref:struct:_convrule_	file:
rule53	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule53={GENCAT_LU, NUMCAT_LU, 1, 0, -130, 0};$/;"	v	typeref:struct:_convrule_	file:
rule54	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule54={GENCAT_LU, NUMCAT_LU, 1, 0, 10795, 0};$/;"	v	typeref:struct:_convrule_	file:
rule55	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule55={GENCAT_LU, NUMCAT_LU, 1, 0, -163, 0};$/;"	v	typeref:struct:_convrule_	file:
rule56	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule56={GENCAT_LU, NUMCAT_LU, 1, 0, 10792, 0};$/;"	v	typeref:struct:_convrule_	file:
rule57	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule57={GENCAT_LL, NUMCAT_LL, 1, 10815, 0, 10815};$/;"	v	typeref:struct:_convrule_	file:
rule58	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule58={GENCAT_LU, NUMCAT_LU, 1, 0, -195, 0};$/;"	v	typeref:struct:_convrule_	file:
rule59	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule59={GENCAT_LU, NUMCAT_LU, 1, 0, 69, 0};$/;"	v	typeref:struct:_convrule_	file:
rule6	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule6={GENCAT_SM, NUMCAT_SM, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule60	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule60={GENCAT_LU, NUMCAT_LU, 1, 0, 71, 0};$/;"	v	typeref:struct:_convrule_	file:
rule61	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule61={GENCAT_LL, NUMCAT_LL, 1, 10783, 0, 10783};$/;"	v	typeref:struct:_convrule_	file:
rule62	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule62={GENCAT_LL, NUMCAT_LL, 1, 10780, 0, 10780};$/;"	v	typeref:struct:_convrule_	file:
rule63	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule63={GENCAT_LL, NUMCAT_LL, 1, 10782, 0, 10782};$/;"	v	typeref:struct:_convrule_	file:
rule64	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule64={GENCAT_LL, NUMCAT_LL, 1, -210, 0, -210};$/;"	v	typeref:struct:_convrule_	file:
rule65	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule65={GENCAT_LL, NUMCAT_LL, 1, -206, 0, -206};$/;"	v	typeref:struct:_convrule_	file:
rule66	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule66={GENCAT_LL, NUMCAT_LL, 1, -205, 0, -205};$/;"	v	typeref:struct:_convrule_	file:
rule67	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule67={GENCAT_LL, NUMCAT_LL, 1, -202, 0, -202};$/;"	v	typeref:struct:_convrule_	file:
rule68	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule68={GENCAT_LL, NUMCAT_LL, 1, -203, 0, -203};$/;"	v	typeref:struct:_convrule_	file:
rule69	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule69={GENCAT_LL, NUMCAT_LL, 1, 42319, 0, 42319};$/;"	v	typeref:struct:_convrule_	file:
rule7	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule7={GENCAT_PD, NUMCAT_PD, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule70	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule70={GENCAT_LL, NUMCAT_LL, 1, 42315, 0, 42315};$/;"	v	typeref:struct:_convrule_	file:
rule71	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule71={GENCAT_LL, NUMCAT_LL, 1, -207, 0, -207};$/;"	v	typeref:struct:_convrule_	file:
rule72	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule72={GENCAT_LL, NUMCAT_LL, 1, 42280, 0, 42280};$/;"	v	typeref:struct:_convrule_	file:
rule73	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule73={GENCAT_LL, NUMCAT_LL, 1, 42308, 0, 42308};$/;"	v	typeref:struct:_convrule_	file:
rule74	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule74={GENCAT_LL, NUMCAT_LL, 1, -209, 0, -209};$/;"	v	typeref:struct:_convrule_	file:
rule75	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule75={GENCAT_LL, NUMCAT_LL, 1, -211, 0, -211};$/;"	v	typeref:struct:_convrule_	file:
rule76	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule76={GENCAT_LL, NUMCAT_LL, 1, 10743, 0, 10743};$/;"	v	typeref:struct:_convrule_	file:
rule77	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule77={GENCAT_LL, NUMCAT_LL, 1, 42305, 0, 42305};$/;"	v	typeref:struct:_convrule_	file:
rule78	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule78={GENCAT_LL, NUMCAT_LL, 1, 10749, 0, 10749};$/;"	v	typeref:struct:_convrule_	file:
rule79	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule79={GENCAT_LL, NUMCAT_LL, 1, -213, 0, -213};$/;"	v	typeref:struct:_convrule_	file:
rule8	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule8={GENCAT_ND, NUMCAT_ND, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule80	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule80={GENCAT_LL, NUMCAT_LL, 1, -214, 0, -214};$/;"	v	typeref:struct:_convrule_	file:
rule81	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule81={GENCAT_LL, NUMCAT_LL, 1, 10727, 0, 10727};$/;"	v	typeref:struct:_convrule_	file:
rule82	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule82={GENCAT_LL, NUMCAT_LL, 1, -218, 0, -218};$/;"	v	typeref:struct:_convrule_	file:
rule83	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule83={GENCAT_LL, NUMCAT_LL, 1, 42307, 0, 42307};$/;"	v	typeref:struct:_convrule_	file:
rule84	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule84={GENCAT_LL, NUMCAT_LL, 1, 42282, 0, 42282};$/;"	v	typeref:struct:_convrule_	file:
rule85	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule85={GENCAT_LL, NUMCAT_LL, 1, -69, 0, -69};$/;"	v	typeref:struct:_convrule_	file:
rule86	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule86={GENCAT_LL, NUMCAT_LL, 1, -217, 0, -217};$/;"	v	typeref:struct:_convrule_	file:
rule87	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule87={GENCAT_LL, NUMCAT_LL, 1, -71, 0, -71};$/;"	v	typeref:struct:_convrule_	file:
rule88	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule88={GENCAT_LL, NUMCAT_LL, 1, -219, 0, -219};$/;"	v	typeref:struct:_convrule_	file:
rule89	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule89={GENCAT_LL, NUMCAT_LL, 1, 42261, 0, 42261};$/;"	v	typeref:struct:_convrule_	file:
rule9	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule9={GENCAT_LU, NUMCAT_LU, 1, 0, 32, 0};$/;"	v	typeref:struct:_convrule_	file:
rule90	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule90={GENCAT_LL, NUMCAT_LL, 1, 42258, 0, 42258};$/;"	v	typeref:struct:_convrule_	file:
rule91	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule91={GENCAT_LM, NUMCAT_LM, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule92	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule92={GENCAT_MN, NUMCAT_MN, 0, 0, 0, 0};$/;"	v	typeref:struct:_convrule_	file:
rule93	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule93={GENCAT_MN, NUMCAT_MN, 1, 84, 0, 84};$/;"	v	typeref:struct:_convrule_	file:
rule94	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule94={GENCAT_LU, NUMCAT_LU, 1, 0, 116, 0};$/;"	v	typeref:struct:_convrule_	file:
rule95	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule95={GENCAT_LU, NUMCAT_LU, 1, 0, 38, 0};$/;"	v	typeref:struct:_convrule_	file:
rule96	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule96={GENCAT_LU, NUMCAT_LU, 1, 0, 37, 0};$/;"	v	typeref:struct:_convrule_	file:
rule97	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule97={GENCAT_LU, NUMCAT_LU, 1, 0, 64, 0};$/;"	v	typeref:struct:_convrule_	file:
rule98	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule98={GENCAT_LU, NUMCAT_LU, 1, 0, 63, 0};$/;"	v	typeref:struct:_convrule_	file:
rule99	libraries/base/cbits/WCsubst.c	/^static const struct _convrule_ rule99={GENCAT_LL, NUMCAT_LL, 1, -38, 0, -38};$/;"	v	typeref:struct:_convrule_	file:
run	driver/utils/cwrapper.c	/^__attribute__((noreturn)) int run (char *exePath,$/;"	f
runAllCFinalizers	rts/Weak.c	/^runAllCFinalizers(StgWeak *list)$/;"	f
runCFinalizers	rts/Weak.c	/^runCFinalizers(StgCFinalizerList *list)$/;"	f
runInteractiveProcess	libraries/process/cbits/runProcess.c	/^runInteractiveProcess (char *const args[],$/;"	f
runInteractiveProcess	libraries/process/cbits/runProcess.c	/^runInteractiveProcess (wchar_t *cmd, wchar_t *workingDirectory,$/;"	f
runSomeFinalizers	rts/Weak.c	/^bool runSomeFinalizers(bool all)$/;"	f
rvalue	libffi/build/src/arm/ffi.c	/^  void *rvalue;$/;"	m	struct:call_frame	file:
rvalue	libffi/build/src/x86/ffi.c	/^  void *rvalue;		\/* 16 *\/$/;"	m	struct:call_frame	file:
rvalue	libffi/build/src/x86/ffiw64.c	/^  UINT64 rvalue;	\/* 32 *\/$/;"	m	struct:win64_call_frame	file:
rvalue	libffi/build/src/x86/ffiw64.c	/^  UINT64 rvalue[2];$/;"	m	struct:win64_closure_frame	file:
s	libffi/build/src/aarch64/ffi.c	/^  UINT32 s[2];$/;"	m	union:_d	file:
s	libffi/build/testsuite/libffi.call/huge_struct.c	/^	uint64_t	s;$/;"	m	struct:BigStruct	file:
s	libffi/build/testsuite/libffi.call/pyobjc-tc.c	/^	Size  s;$/;"	m	struct:Rect	file:
s	nofib/spectral/simple/simple.c	/^double alpha[MAXSIZE][MAXSIZE], s[MAXSIZE][MAXSIZE];$/;"	v
same_or_left_bits	libffi/build/src/dlmalloc.c	2398;"	d	file:
samplemap	utils/hp2ps/HpFile.c	/^floatish *samplemap;            \/* sample intervals     *\/$/;"	v
sampleunitstring	utils/hp2ps/HpFile.c	/^char *sampleunitstring;$/;"	v
savedSignals	rts/posix/Signals.c	/^static sigset_t savedSignals;$/;"	v	file:
saved_gct	rts/sm/Scav.c	/^    gc_thread *saved_gct;$/;"	m	struct:__anon47	file:
saved_termios	rts/posix/TTY.c	/^static void *saved_termios[3] = {NULL,NULL,NULL};$/;"	v	file:
sbinptr	libffi/build/src/dlmalloc.c	/^typedef struct malloc_chunk* sbinptr;  \/* The type of bins of chunks *\/$/;"	t	typeref:struct:malloc_chunk	file:
scaling_factor	libraries/base/cbits/DarwinUtils.c	/^static double scaling_factor = 0.0;$/;"	v	file:
scavengeLiveWeak	rts/sm/MarkWeak.c	/^scavengeLiveWeak(StgWeak *w)$/;"	f
scavengeNonmovingSegment	rts/sm/NonMovingScav.c	/^scavengeNonmovingSegment (struct NonmovingSegment *seg)$/;"	f
scavengeTSO	rts/sm/Scav.c	/^scavengeTSO (StgTSO *tso)$/;"	f
scavengeTSO	rts/sm/Scav.c	79;"	d	file:
scavenge_AP	rts/sm/Scav.c	/^scavenge_AP (StgAP *ap)$/;"	f
scavenge_AP	rts/sm/Scav.c	86;"	d	file:
scavenge_PAP	rts/sm/Scav.c	/^scavenge_PAP (StgPAP *pap)$/;"	f
scavenge_PAP	rts/sm/Scav.c	85;"	d	file:
scavenge_PAP_payload	rts/sm/Scav.c	/^scavenge_PAP_payload (StgClosure *fun, StgClosure **payload, StgWord size)$/;"	f
scavenge_arg_block	rts/sm/Scav.c	/^scavenge_arg_block (const StgFunInfoTable *fun_info, StgClosure **args)$/;"	f
scavenge_block	rts/sm/Scav.c	/^scavenge_block (bdescr *bd)$/;"	f	file:
scavenge_block	rts/sm/Scav.c	76;"	d	file:
scavenge_capability_mut_lists	rts/sm/Scav.c	/^scavenge_capability_mut_lists (Capability *cap)$/;"	f
scavenge_capability_mut_lists	rts/sm/Scav.c	78;"	d	file:
scavenge_compact	rts/sm/Scav.c	/^scavenge_compact(StgCompactNFData *str)$/;"	f
scavenge_compact	rts/sm/Scav.c	87;"	d	file:
scavenge_find_work	rts/sm/Scav.c	/^scavenge_find_work (void)$/;"	f	file:
scavenge_fun_srt	rts/sm/Scav.c	/^scavenge_fun_srt(const StgInfoTable *info)$/;"	f
scavenge_fun_srt	rts/sm/Scav.c	81;"	d	file:
scavenge_fun_srt	rts/sm/Scav.c	82;"	d	file:
scavenge_large	rts/sm/Scav.c	/^scavenge_large (gen_workspace *ws)$/;"	f	file:
scavenge_large_bitmap	rts/sm/Scav.c	/^scavenge_large_bitmap( StgPtr p, StgLargeBitmap *large_bitmap, StgWord size )$/;"	f	file:
scavenge_loop	rts/sm/Scav.c	/^scavenge_loop(void)$/;"	f
scavenge_loop	rts/sm/Scav.c	75;"	d	file:
scavenge_mark_stack	rts/sm/Scav.c	/^scavenge_mark_stack(void)$/;"	f	file:
scavenge_mut_arr_ptrs	rts/sm/Scav.c	/^StgPtr scavenge_mut_arr_ptrs (StgMutArrPtrs *a)$/;"	f
scavenge_mut_arr_ptrs	rts/sm/Scav.c	84;"	d	file:
scavenge_mut_arr_ptrs_marked	rts/sm/Scav.c	/^static StgPtr scavenge_mut_arr_ptrs_marked (StgMutArrPtrs *a)$/;"	f	file:
scavenge_mutable_list	rts/sm/Scav.c	/^scavenge_mutable_list(bdescr *bd, generation *gen)$/;"	f	file:
scavenge_mutable_list	rts/sm/Scav.c	77;"	d	file:
scavenge_one	rts/sm/Scav.c	/^scavenge_one(StgPtr p)$/;"	f	file:
scavenge_small_bitmap	rts/sm/Scav.c	/^scavenge_small_bitmap (StgPtr p, StgWord size, StgWord bitmap)$/;"	f
scavenge_stack	rts/sm/Scav.c	/^scavenge_stack(StgPtr p, StgPtr stack_end)$/;"	f
scavenge_stack	rts/sm/Scav.c	80;"	d	file:
scavenge_static	rts/sm/Scav.c	/^scavenge_static(void)$/;"	f	file:
scavenge_thunk_srt	rts/sm/Scav.c	/^scavenge_thunk_srt(const StgInfoTable *info)$/;"	f
scavenge_thunk_srt	rts/sm/Scav.c	83;"	d	file:
scavenge_until_all_done	rts/sm/GC.c	/^scavenge_until_all_done (void)$/;"	f	file:
sched_mutex	rts/Schedule.c	/^Mutex sched_mutex;$/;"	v
sched_state	rts/Schedule.c	/^volatile StgWord sched_state = SCHED_RUNNING;$/;"	v
schedule	rts/Schedule.c	/^schedule (Capability *initialCapability, Task *task)$/;"	f	file:
scheduleActivateSpark	rts/Schedule.c	/^scheduleActivateSpark(Capability *cap)$/;"	f	file:
scheduleCallback	testsuite/tests/concurrent/should_run/hs_try_putmvar001_c.c	/^void scheduleCallback(HsStablePtr mvar, HsInt cap, int *presult)$/;"	f
scheduleCallback	testsuite/tests/concurrent/should_run/hs_try_putmvar003_c.c	/^void scheduleCallback(struct callback_queue *q,$/;"	f
scheduleCheckBlockedThreads	rts/Schedule.c	/^scheduleCheckBlockedThreads(Capability *cap USED_IF_NOT_THREADS)$/;"	f	file:
scheduleDetectDeadlock	rts/Schedule.c	/^scheduleDetectDeadlock (Capability **pcap, Task *task)$/;"	f	file:
scheduleDoGC	rts/Schedule.c	/^scheduleDoGC (Capability **pcap, Task *task USED_IF_THREADS,$/;"	f	file:
scheduleFinalizers	rts/Weak.c	/^scheduleFinalizers(Capability *cap, StgWeak *list)$/;"	f
scheduleFindWork	rts/Schedule.c	/^scheduleFindWork (Capability **pcap)$/;"	f	file:
scheduleHandleHeapOverflow	rts/Schedule.c	/^scheduleHandleHeapOverflow( Capability *cap, StgTSO *t )$/;"	f	file:
scheduleHandleThreadBlocked	rts/Schedule.c	/^scheduleHandleThreadBlocked( StgTSO *t$/;"	f	file:
scheduleHandleThreadFinished	rts/Schedule.c	/^scheduleHandleThreadFinished (Capability *cap, Task *task, StgTSO *t)$/;"	f	file:
scheduleHandleYield	rts/Schedule.c	/^scheduleHandleYield( Capability *cap, StgTSO *t, uint32_t prev_what_next )$/;"	f	file:
scheduleNeedHeapProfile	rts/Schedule.c	/^scheduleNeedHeapProfile( bool ready_to_gc )$/;"	f	file:
schedulePostRunThread	rts/Schedule.c	/^schedulePostRunThread (Capability *cap, StgTSO *t)$/;"	f	file:
schedulePreLoop	rts/Schedule.c	/^schedulePreLoop(void)$/;"	f	file:
scheduleProcessInbox	rts/Schedule.c	/^scheduleProcessInbox (Capability **pcap USED_IF_THREADS)$/;"	f	file:
schedulePushWork	rts/Schedule.c	/^schedulePushWork(Capability *cap USED_IF_THREADS,$/;"	f	file:
scheduleStartSignalHandlers	rts/Schedule.c	/^scheduleStartSignalHandlers(Capability *cap STG_UNUSED)$/;"	f	file:
scheduleStartSignalHandlers	rts/Schedule.c	/^scheduleStartSignalHandlers(Capability *cap)$/;"	f	file:
scheduleThread	rts/Schedule.c	/^scheduleThread(Capability *cap, StgTSO *tso)$/;"	f
scheduleThreadOn	rts/Schedule.c	/^scheduleThreadOn(Capability *cap, StgWord cpu USED_IF_THREADS, StgTSO *tso)$/;"	f
scheduleWaitThread	rts/Schedule.c	/^scheduleWaitThread (StgTSO* tso, \/*[out]*\/HaskellObj* ret, Capability **pcap)$/;"	f
scheduleWorker	rts/Schedule.c	/^void scheduleWorker (Capability *cap, Task *task)$/;"	f
scheduleYield	rts/Schedule.c	/^scheduleYield (Capability **pcap, Task *task)$/;"	f	file:
scratch	testsuite/tests/rts/testwsdeque.c	/^StgWord scratch[SCRATCH_SIZE];$/;"	v
searchCostCentres	rts/CheckUnload.c	/^static void searchCostCentres (HashTable *addrs, CostCentreStack *ccs,$/;"	f	file:
searchHeapBlocks	rts/CheckUnload.c	/^static void searchHeapBlocks (HashTable *addrs, bdescr *bd,$/;"	f	file:
searchStackChunk	rts/CheckUnload.c	/^static void searchStackChunk (HashTable *addrs, StgPtr sp, StgPtr stack_end,$/;"	f	file:
searched	rts/Printer.c	/^int searched = 0;$/;"	v
seg	libffi/build/src/dlmalloc.c	/^  msegment   seg;$/;"	m	struct:malloc_state	file:
segment_holding	libffi/build/src/dlmalloc.c	/^static msegmentptr segment_holding(mstate m, char* addr) {$/;"	f	file:
segment_holding_code	libffi/build/src/closures.c	/^segment_holding_code (mstate m, char* addr)$/;"	f	file:
segment_holds	libffi/build/src/dlmalloc.c	2156;"	d	file:
selinux_enabled	libffi/build/src/closures.c	/^static int selinux_enabled = -1;$/;"	v	file:
selinux_enabled_check	libffi/build/src/closures.c	/^selinux_enabled_check (void)$/;"	f	file:
sendIOManagerEvent	rts/win32/ThrIOManager.c	/^sendIOManagerEvent (HsWord32 event)$/;"	f
sendMessage	rts/Messages.c	/^void sendMessage(Capability *from_cap, Capability *to_cap, Message *msg)$/;"	f
session	rts/Libdw.c	/^    LibdwSession *session;$/;"	m	struct:PrintData	file:
setClassAtom	libraries/Win32/cbits/diatemp.c	/^setClassAtom(LPDLGITEMTEMPLATE item, WORD classatom)$/;"	f
setClassName	libraries/Win32/cbits/diatemp.c	/^setClassName(LPDLGITEMTEMPLATE item, LPCWSTR classname)$/;"	f
setErrNoFromWin32Error	utils/fs/fs.c	/^int setErrNoFromWin32Error () {$/;"	f	file:
setExecutable	rts/posix/OSMem.c	/^void setExecutable (void *p, W_ len, bool exec)$/;"	f
setExecutable	rts/win32/OSMem.c	/^void setExecutable (void *p, W_ len, bool exec)$/;"	f
setFullProgArgv	rts/RtsFlags.c	/^setFullProgArgv(int argc, char *argv[])$/;"	f
setHeapAlloced	rts/sm/MBlock.c	/^setHeapAlloced(void *p, StgWord8 i)$/;"	f	file:
setHeapSize	compiler/cbits/cutils.c	/^setHeapSize( HsInt size )$/;"	f
setHeapSize	compiler/parser/cutils.c	/^setHeapSize( HsInt size )$/;"	f
setIOManagerControlFd	rts/Capability.c	/^setIOManagerControlFd(uint32_t cap_no USED_IF_THREADS, int fd USED_IF_THREADS) {$/;"	f
setIOManagerWakeupFd	rts/posix/Signals.c	/^setIOManagerWakeupFd (int fd)$/;"	f
setImportSymbol	rts/RtsSymbolInfo.c	/^void setImportSymbol(ObjectCode *owner, const void *label)$/;"	f
setKeepCAFs	rts/sm/Storage.c	/^setKeepCAFs (void)$/;"	f
setNumCapabilities	rts/Schedule.c	/^setNumCapabilities (uint32_t new_n_capabilities USED_IF_THREADS)$/;"	f
setOcInitialStatus	rts/Linker.c	/^static void setOcInitialStatus(ObjectCode* oc) {$/;"	f	file:
setPath	driver/utils/dynwrapper.c	/^void setPath(void) {$/;"	f
setProgArgv	rts/RtsFlags.c	/^setProgArgv(int argc, char *argv[])$/;"	f
setProgName	rts/RtsFlags.c	/^setProgName(char *argv[])$/;"	f
setResourceID	libraries/Win32/cbits/diatemp.c	/^setResourceID(LPWORD ptr, WORD id)$/;"	f
setSymbolInfo	rts/RtsSymbolInfo.c	/^void setSymbolInfo(ObjectCode *owner, const void *label, symbolUpdater updater)$/;"	f
setTSOLink	rts/sm/Storage.c	/^setTSOLink (Capability *cap, StgTSO *tso, StgTSO *target)$/;"	f
setTSOPrev	rts/sm/Storage.c	/^setTSOPrev (Capability *cap, StgTSO *tso, StgTSO *target)$/;"	f
setThreadAffinity	rts/posix/OSThreads.c	/^setThreadAffinity (uint32_t n STG_UNUSED,$/;"	f
setThreadAffinity	rts/posix/OSThreads.c	/^setThreadAffinity (uint32_t n, uint32_t m GNUC3_ATTRIBUTE(__unused__))$/;"	f
setThreadAffinity	rts/posix/OSThreads.c	/^setThreadAffinity (uint32_t n, uint32_t m)$/;"	f
setThreadAffinity	rts/posix/OSThreads.c	/^setThreadAffinity(uint32_t n, uint32_t m)$/;"	f
setThreadAffinity	rts/win32/OSThreads.c	/^setThreadAffinity (uint32_t n, uint32_t m) \/\/ cap N of M$/;"	f
setThreadLocalVar	rts/posix/OSThreads.c	/^setThreadLocalVar (ThreadLocalKey *key, void *value)$/;"	f
setThreadLocalVar	rts/win32/OSThreads.c	/^setThreadLocalVar (ThreadLocalKey *key, void *value)$/;"	f
setThreadNode	rts/posix/OSThreads.c	/^void setThreadNode (uint32_t node STG_UNUSED) { \/* nothing *\/ }$/;"	f
setThreadNode	rts/posix/OSThreads.c	/^void setThreadNode (uint32_t node)$/;"	f
setThreadNode	rts/win32/OSThreads.c	/^void setThreadNode (uint32_t node)$/;"	f
setTimerManagerControlFd	rts/posix/Signals.c	/^void setTimerManagerControlFd(int fd) {$/;"	f
setTravDataToZero	rts/TraverseHeap.c	50;"	d	file:
setWeakSymbol	rts/RtsSymbolInfo.c	/^void setWeakSymbol(ObjectCode *owner, const void *label)$/;"	f
set_console_buffering__	libraries/base/cbits/consUtils.c	/^set_console_buffering__(int fd, int cooked)$/;"	f
set_console_echo__	libraries/base/cbits/consUtils.c	/^set_console_echo__(int fd, int on)$/;"	f
set_foot	libffi/build/src/dlmalloc.c	1749;"	d	file:
set_free_with_pinuse	libffi/build/src/dlmalloc.c	1756;"	d	file:
set_initial_registers	rts/Libdw.c	/^static bool set_initial_registers(Dwfl_Thread *thread,$/;"	f	file:
set_inuse	libffi/build/src/dlmalloc.c	2472;"	d	file:
set_inuse	libffi/build/src/dlmalloc.c	2495;"	d	file:
set_inuse_and_pinuse	libffi/build/src/dlmalloc.c	2477;"	d	file:
set_inuse_and_pinuse	libffi/build/src/dlmalloc.c	2500;"	d	file:
set_lock	libffi/build/src/dlmalloc.c	2137;"	d	file:
set_segment_flags	libffi/build/src/dlmalloc.c	1961;"	d	file:
set_segment_flags	libffi/build/src/dlmalloc.c	1976;"	d	file:
set_sigtstp_action	rts/posix/Signals.c	/^set_sigtstp_action (bool handle)$/;"	f	file:
set_size_and_pinuse_of_free_chunk	libffi/build/src/dlmalloc.c	1752;"	d	file:
set_size_and_pinuse_of_inuse_chunk	libffi/build/src/dlmalloc.c	2482;"	d	file:
set_size_and_pinuse_of_inuse_chunk	libffi/build/src/dlmalloc.c	2505;"	d	file:
setterDef	utils/hsc2hs/cbits/utils.c	/^typedef void(*setterDef)(DWORD, HANDLE);$/;"	t	file:
setupRtsFlags	rts/RtsFlags.c	/^void setupRtsFlags (int *argc, char *argv[], RtsConfig rts_config)$/;"	f
setup_tail	rts/sm/BlockAlloc.c	/^setup_tail (bdescr *bd)$/;"	f
sflag	utils/hp2ps/Main.c	/^boolish sflag = 0;	\/* use a small title box		*\/$/;"	v
sflags	libffi/build/src/dlmalloc.c	/^  flag_t       sflags;           \/* mmap and extern flag *\/$/;"	m	struct:malloc_segment	file:
shade	utils/hp2ps/Shade.c	/^	floatish shade;$/;"	m	struct:shade	file:
shade	utils/hp2ps/Shade.c	/^static struct shade {$/;"	s	file:
shademap	utils/hp2ps/Shade.c	/^} *shademap;$/;"	v	typeref:struct:shade	file:
shademapindex	utils/hp2ps/Shade.c	/^static int shademapindex = 0;$/;"	v	file:
shademapmax	utils/hp2ps/Shade.c	/^static int shademapmax = 0;$/;"	v	file:
shake	rts/STM.c	/^static int shake(void) {$/;"	f	file:
shake_ctr	rts/STM.c	/^static int shake_ctr = 0;$/;"	v	file:
shake_lim	rts/STM.c	/^static int shake_lim = 1;$/;"	v	file:
shouldCompact	rts/sm/CNF.c	/^StgWord shouldCompact (StgCompactNFData *str, StgClosure *p)$/;"	f
shouldYieldCapability	rts/Schedule.c	/^shouldYieldCapability (Capability *cap, Task *task, bool didGcLast)$/;"	f
should_trim	libffi/build/src/dlmalloc.c	2182;"	d	file:
should_trim	libffi/build/src/dlmalloc.c	2184;"	d	file:
showControlBits	testsuite/tests/rts/T7289/fp.c	/^extern void showControlBits (void)$/;"	f
showStgWord64	rts/RtsUtils.c	/^showStgWord64(StgWord64 x, char *s, bool with_commas)$/;"	f
shutdownAsyncIO	rts/win32/AsyncIO.c	/^shutdownAsyncIO(bool wait_threads)$/;"	f
shutdownCapabilities	rts/Capability.c	/^shutdownCapabilities(Task *task, bool safe)$/;"	f
shutdownCapability	rts/Capability.c	/^shutdownCapability (Capability *cap USED_IF_THREADS,$/;"	f	file:
shutdownHandler	libraries/base/tests/IO/T12010/cbits/initWinSock.c	/^shutdownHandler(void)$/;"	f	file:
shutdownHaskell	rts/RtsStartup.c	/^shutdownHaskell(void)$/;"	f
shutdownHaskellAndExit	rts/RtsStartup.c	/^shutdownHaskellAndExit(int n, int fastExit)$/;"	f
shutdownHaskellAndExit	utils/coverity/model.c	/^void shutdownHaskellAndExit(int exitCode, int fastExit)$/;"	f
shutdownHaskellAndSignal	rts/RtsStartup.c	/^shutdownHaskellAndSignal(int sig, int fastExit)$/;"	f
shutdownHaskellAndSignal	utils/coverity/model.c	/^void shutdownHaskellAndSignal(int sig, int fastExit)$/;"	f
shutdownThread	rts/posix/OSThreads.c	/^shutdownThread(void)$/;"	f
shutdownThread	rts/win32/OSThreads.c	/^shutdownThread()$/;"	f
shutdownThread	utils/coverity/model.c	/^void shutdownThread(void)$/;"	f
shutdown_gc_threads	rts/sm/GC.c	/^shutdown_gc_threads (uint32_t me USED_IF_THREADS,$/;"	f	file:
shutdown_handler	rts/posix/Signals.c	/^shutdown_handler(int sig STG_UNUSED)$/;"	f	file:
shutdown_handler	rts/win32/ConsoleHandler.c	/^static BOOL WINAPI shutdown_handler(DWORD dwCtrlType)$/;"	f	file:
si	libffi/build/testsuite/libffi.call/struct3.c	/^  int si;$/;"	m	struct:__anon13	file:
sieve_array	nofib/imaginary/primes/csieve.c	/^int sieve_array[MAX_SIEVE];$/;"	v
sig_mutex	rts/posix/Signals.c	/^static Mutex sig_mutex; \/\/ protects signal_handlers, nHandlers$/;"	v	file:
signExtend	rts/linker/MachO.c	/^signExtend(uint64_t val, uint8_t bits) {$/;"	f
signalCondition	rts/posix/OSThreads.c	/^signalCondition ( Condition* pCond )$/;"	f
signalCondition	rts/win32/OSThreads.c	/^signalCondition ( Condition* pCond )$/;"	f
signal_handlers	rts/posix/Signals.c	/^StgInt *signal_handlers = NULL; \/* Dynamically grown array of signal handlers *\/$/;"	v
sigtstp_handler	rts/posix/Signals.c	/^sigtstp_handler (int sig STG_UNUSED)$/;"	f	file:
silent	utils/lndir/lndir.c	/^int silent = 0;                 \/* -silent *\/$/;"	v
simple_type	libffi/build/src/sh/ffi.c	/^simple_type (ffi_type *arg)$/;"	f	file:
singleton	rts/RetainerSet.c	/^singleton(retainer r)$/;"	f
sinyy	testsuite/tests/safeHaskell/safeLanguage/SafeLang08_A.c	/^double sinyy (double d) {$/;"	f
size	libffi/build/src/dlmalloc.c	/^  size_t       size;             \/* allocated size *\/$/;"	m	struct:malloc_segment	file:
size	rts/eventlog/EventLog.c	/^  StgWord64 size;$/;"	m	struct:_EventsBuf	file:
size	rts/eventlog/EventLog.c	/^  uint32_t   size;     \/\/ size of the payload in bytes$/;"	m	struct:_EventType	file:
size	rts/linker/M32Alloc.c	/^      uint32_t size;$/;"	m	struct:m32_page_t::__anon38::__anon39	file:
size	rts/sm/MBlock.c	/^    W_ size;$/;"	m	struct:free_list	file:
size	rts/win32/OSMem.c	/^    W_ size;           \/\/ size in bytes$/;"	m	struct:block_rec_	file:
size	rts/win32/OSMem.c	/^    W_ size;       \/\/ Size in bytes$/;"	m	struct:alloc_rec_	file:
sizeofRetainerSet	rts/RetainerSet.c	/^sizeofRetainerSet( int elems )$/;"	f
sleepResolution	rts/win32/IOManager.c	/^    UINT             sleepResolution;$/;"	m	struct:IOManagerState	file:
sleeping_queue	rts/Schedule.c	/^StgTSO *sleeping_queue = NULL;    \/\/ perhaps replace with a hash table?$/;"	v
sm_mutex	rts/sm/Storage.c	/^Mutex sm_mutex;$/;"	v
small_index	libffi/build/src/dlmalloc.c	2290;"	d	file:
small_index2size	libffi/build/src/dlmalloc.c	2291;"	d	file:
small_tag	libffi/build/testsuite/libffi.call/cls_struct_va1.c	/^struct small_tag$/;"	s	file:
small_tag	libffi/build/testsuite/libffi.call/va_1.c	/^struct small_tag$/;"	s	file:
small_tag	libffi/build/testsuite/libffi.call/va_struct1.c	/^struct small_tag$/;"	s	file:
small_tag	libffi/build/testsuite/libffi.call/va_struct2.c	/^struct small_tag$/;"	s	file:
small_tag	libffi/build/testsuite/libffi.call/va_struct3.c	/^struct small_tag$/;"	s	file:
smallbin_at	libffi/build/src/dlmalloc.c	2295;"	d	file:
smallbins	libffi/build/src/dlmalloc.c	/^  mchunkptr  smallbins[(NSMALLBINS+1)*2];$/;"	m	struct:malloc_state	file:
smallmap	libffi/build/src/dlmalloc.c	/^  binmap_t   smallmap;$/;"	m	struct:malloc_state	file:
smallmap_is_marked	libffi/build/src/dlmalloc.c	2356;"	d	file:
smblks	libffi/build/src/dlmalloc.c	/^  MALLINFO_FIELD_TYPE smblks;   \/* always 0 *\/$/;"	m	struct:mallinfo	file:
smp_locked	rts/STM.c	/^static volatile StgTRecHeader *smp_locked = NULL;$/;"	v	file:
sopen	utils/fs/fs.c	/^int FS(sopen) (const char* filename, int oflag, int shflag, int pmode)$/;"	f
sortCCSTree	rts/Profiling.c	/^sortCCSTree(CostCentreStack *ccs)$/;"	f	file:
sorted_cc_list	rts/ProfilerReport.c	/^static CostCentre *sorted_cc_list;$/;"	v	file:
spacechars	libraries/base/cbits/WCsubst.c	/^static const struct _charblock_ spacechars[]={$/;"	v	typeref:struct:_charblock_	file:
specific_heat	nofib/spectral/simple/simple.c	/^double specific_heat = 0.1;$/;"	v
spew_failing_pointer	rts/sm/CNF.c	/^spew_failing_pointer(StgWord *fixup_table, uint32_t count, StgWord address)$/;"	f	file:
split	rts/Hash.c	/^    int split;              \/* Next bucket to split when expanding *\/$/;"	m	struct:hashtable	file:
splitRtsFlags	rts/RtsFlags.c	/^static void splitRtsFlags(const char *s)$/;"	f	file:
split_block_high	rts/sm/BlockAlloc.c	/^split_block_high (bdescr *bd, W_ n)$/;"	f	file:
split_block_low	rts/sm/BlockAlloc.c	/^split_block_low (bdescr *bd, W_ n)$/;"	f	file:
split_free_block	rts/sm/BlockAlloc.c	/^split_free_block (bdescr *bd, uint32_t node, W_ n, uint32_t ln \/* log_2_ceil(n) *\/)$/;"	f	file:
spt	rts/StaticPtrTable.c	/^static HashTable * spt = NULL;$/;"	v	file:
spt_lock	rts/StaticPtrTable.c	/^static Mutex spt_lock;$/;"	v	file:
srt	rts/TraverseHeap.c	/^        StgClosure *srt;$/;"	m	struct:__anon49::__anon51	file:
srt	rts/TraverseHeap.c	/^    } srt;$/;"	m	union:__anon49	typeref:struct:__anon49::__anon51	file:
ss	libffi/build/testsuite/libffi.call/huge_struct.c	/^	float		ss;$/;"	m	struct:BigStruct	file:
sse	libffi/build/src/x86/ffi64.c	/^  union big_int_union sse[MAX_SSE_REGS];$/;"	m	struct:register_args	typeref:union:register_args::big_int_union	file:
stableNameLock	rts/StableName.c	/^stableNameLock(void)$/;"	f
stableNameUnlock	rts/StableName.c	/^stableNameUnlock(void)$/;"	f
stablePtrLock	rts/StablePtr.c	/^stablePtrLock(void)$/;"	f
stablePtrUnlock	rts/StablePtr.c	/^stablePtrUnlock(void)$/;"	f
stable_name_free	rts/StableName.c	/^static snEntry *stable_name_free = NULL;$/;"	v	file:
stable_name_mutex	rts/StableName.c	/^Mutex stable_name_mutex;$/;"	v
stable_name_table	rts/StableName.c	/^snEntry *stable_name_table = NULL;$/;"	v
stable_ptr_free	rts/StablePtr.c	/^static spEntry *stable_ptr_free = NULL;$/;"	v	file:
stable_ptr_mutex	rts/StablePtr.c	/^Mutex stable_ptr_mutex;$/;"	v
stable_ptr_table	rts/StablePtr.c	/^spEntry *stable_ptr_table = NULL;$/;"	v
stableptrfun_t	testsuite/tests/rts/linker/unload_multiple_objs/linker_unload_multiple_objs.c	/^typedef HsStablePtr stableptrfun_t(void);$/;"	t	file:
stackElement	rts/TraverseHeap.c	/^} stackElement;$/;"	t	typeref:struct:stackElement_	file:
stackElement_	rts/TraverseHeap.c	/^typedef struct stackElement_ {$/;"	s	file:
stackPos	rts/TraverseHeap.c	/^} stackPos;$/;"	t	typeref:struct:__anon52	file:
stackSqueeze	rts/ThreadPaused.c	/^stackSqueeze(Capability *cap, StgTSO *tso, StgPtr bottom)$/;"	f	file:
stack_gap	rts/ThreadPaused.c	/^struct stack_gap { StgWord gap_size; struct stack_gap *next_gap; };$/;"	s	file:
start	libraries/base/cbits/WCsubst.c	/^	int start;$/;"	m	struct:_charblock_	file:
start	rts/CheckUnload.c	/^    W_ start;$/;"	m	struct:__anon34	file:
startEventLogging	rts/eventlog/EventLog.c	/^bool startEventLogging(const EventLogWriter *writer STG_UNUSED) {$/;"	f
startEventLogging	rts/eventlog/EventLog.c	/^startEventLogging(const EventLogWriter *ev_writer)$/;"	f
startEventLogging_	rts/eventlog/EventLog.c	/^startEventLogging_(void)$/;"	f	file:
startHeapProfTimer	rts/Proftimer.c	/^startHeapProfTimer( void )$/;"	f
startProfTimer	rts/Proftimer.c	/^startProfTimer( void )$/;"	f
startSignalHandlers	rts/posix/Signals.c	/^startSignalHandlers(Capability *cap)$/;"	f
startSignalHandlers	rts/win32/ConsoleHandler.c	/^void startSignalHandlers(Capability *cap)$/;"	f
startTicker	rts/posix/itimer/Pthread.c	/^startTicker(void)$/;"	f
startTicker	rts/posix/itimer/Setitimer.c	/^startTicker(void)$/;"	f
startTicker	rts/posix/itimer/TimerCreate.c	/^startTicker(void)$/;"	f
startTicker	rts/win32/Ticker.c	/^startTicker(void)$/;"	f
startTimer	rts/Timer.c	/^startTimer(void)$/;"	f
startWorkerTask	rts/Task.c	/^startWorkerTask (Capability *cap)$/;"	f
startWorkerTasks	rts/Schedule.c	/^startWorkerTasks (uint32_t from USED_IF_THREADS, uint32_t to USED_IF_THREADS)$/;"	f	file:
start_cond	rts/posix/itimer/Pthread.c	/^static Condition start_cond;$/;"	v	file:
start_exit_cpu	rts/Stats.c	/^    start_exit_cpu, start_exit_elapsed,$/;"	v	file:
start_exit_elapsed	rts/Stats.c	/^    start_exit_cpu, start_exit_elapsed,$/;"	v	file:
start_exit_gc_cpu	rts/Stats.c	/^    start_exit_gc_elapsed, start_exit_gc_cpu,$/;"	v	file:
start_exit_gc_elapsed	rts/Stats.c	/^    start_exit_gc_elapsed, start_exit_gc_cpu,$/;"	v	file:
start_gc_threads	rts/sm/GC.c	/^start_gc_threads (void)$/;"	f	file:
start_init_cpu	rts/Stats.c	/^    start_init_cpu, start_init_elapsed,$/;"	v	file:
start_init_elapsed	rts/Stats.c	/^    start_init_cpu, start_init_elapsed,$/;"	v	file:
startupAsyncIO	rts/win32/AsyncIO.c	/^startupAsyncIO()$/;"	f
startupHaskell	rts/RtsStartup.c	/^startupHaskell(int argc, char *argv[], void (*init_root)(void) STG_UNUSED)$/;"	f
startupHpc	rts/Hpc.c	/^startupHpc(void)$/;"	f
stash_mut_list	rts/sm/GC.c	/^stash_mut_list (Capability *cap, uint32_t gen_no)$/;"	f	file:
statDescribeGens	rts/Stats.c	/^statDescribeGens(void)$/;"	f
stat_endExit	rts/Stats.c	/^stat_endExit(void)$/;"	f
stat_endGC	rts/Stats.c	/^stat_endGC (Capability *cap, gc_thread *gct, W_ live, W_ copied, W_ slop,$/;"	f
stat_endHeapCensus	rts/Stats.c	/^stat_endHeapCensus(void)$/;"	f
stat_endInit	rts/Stats.c	/^stat_endInit(void)$/;"	f
stat_endRP	rts/Stats.c	/^stat_endRP($/;"	f
stat_exit	rts/Stats.c	/^stat_exit (void)$/;"	f
stat_getElapsedTime	rts/Stats.c	/^Time stat_getElapsedTime(void)$/;"	f
stat_startExit	rts/Stats.c	/^stat_startExit(void)$/;"	f
stat_startGC	rts/Stats.c	/^stat_startGC (Capability *cap, gc_thread *gct)$/;"	f
stat_startGCSync	rts/Stats.c	/^stat_startGCSync (gc_thread *gct)$/;"	f
stat_startHeapCensus	rts/Stats.c	/^stat_startHeapCensus(void)$/;"	f
stat_startInit	rts/Stats.c	/^stat_startInit(void)$/;"	f
stat_startRP	rts/Stats.c	/^stat_startRP(void)$/;"	f
static_chain	libffi/build/src/x86/ffi.c	/^  int static_chain;	\/* the static chain register used by gcc *\/$/;"	m	struct:abi_params	file:
static_flag	rts/sm/GC.c	/^uint32_t static_flag = STATIC_FLAG_B;$/;"	v
staticfoo	testsuite/tests/ffi/should_run/ffi_parsing_001_c.c	/^int staticfoo(void) {$/;"	f
stats	rts/Stats.c	/^static RTSStats stats;$/;"	v	file:
statsClose	rts/Stats.c	/^statsClose( void )$/;"	f	file:
statsFlush	rts/Stats.c	/^statsFlush( void )$/;"	f	file:
statsPrintf	rts/Stats.c	/^statsPrintf( char *s, ... )$/;"	f
stats_fprintf	rts/RtsFlags.c	/^stats_fprintf(FILE *f, char *s, ...)$/;"	f	file:
stats_fprintf_escape	rts/RtsFlags.c	/^static void stats_fprintf_escape (FILE *f, char*s)$/;"	f	file:
stealWSDeque	rts/WSDeque.c	/^stealWSDeque (WSDeque *q)$/;"	f
stealWSDeque_	rts/WSDeque.c	/^stealWSDeque_ (WSDeque *q)$/;"	f
steal_todo_block	rts/sm/GCUtils.c	/^steal_todo_block (uint32_t g)$/;"	f
step	rts/TraverseHeap.c	/^    StgWord step;$/;"	m	union:__anon49	file:
stf_spill	libffi/build/src/ia64/ffi.c	79;"	d	file:
stgAllocStable	rts/Adjustor.c	/^stgAllocStable(size_t size_in_bytes, StgStablePtr *stable)$/;"	f	file:
stgCallocBytes	rts/RtsUtils.c	/^stgCallocBytes (size_t count, size_t size, char *msg)$/;"	f
stgCallocBytes	utils/coverity/model.c	/^void* stgCallocBytes(int n, int m, char *msg)$/;"	f
stgFree	rts/RtsUtils.c	/^stgFree(void* p)$/;"	f
stgFree	utils/coverity/model.c	/^void stgFree(void* p)$/;"	f
stgMallocBytes	rts/RtsUtils.c	/^stgMallocBytes (size_t n, char *msg)$/;"	f
stgMallocBytes	utils/coverity/model.c	/^void* stgMallocBytes(int n, char *msg)$/;"	f
stgReallocBytes	rts/RtsUtils.c	/^stgReallocBytes (void *p, size_t n, char *msg)$/;"	f
stgReallocBytes	utils/coverity/model.c	/^void* stgReallocBytes(void *p, int n, char *msg)$/;"	f
stgStrndup	rts/RtsUtils.c	/^char *stgStrndup(const char *s, size_t n)$/;"	f
stg_exit	rts/RtsStartup.c	/^stg_exit(int n)$/;"	f
stg_exit	utils/coverity/model.c	/^void stg_exit(int n)$/;"	f
stg_ieee754_dbl	libraries/base/cbits/primFloat.c	/^union stg_ieee754_dbl$/;"	u	file:
stg_ieee754_flt	libraries/base/cbits/primFloat.c	/^union stg_ieee754_flt$/;"	u	file:
stg_pending_buf	rts/win32/ConsoleHandler.c	/^DWORD stg_pending_buf[N_PENDING_EVENTS]; \/* their associated event numbers. *\/$/;"	v
stg_pending_events	rts/win32/ConsoleHandler.c	/^StgInt stg_pending_events = 0;           \/* number of undelivered events *\/$/;"	v
stg_sig_install	rts/posix/Signals.c	/^stg_sig_install(StgInt sig STG_UNUSED,$/;"	f
stg_sig_install	rts/posix/Signals.c	/^stg_sig_install(int sig, int spi, void *mask)$/;"	f
stg_upd_frame_info	testsuite/tests/rts/linker/linker_error3.c	/^int stg_upd_frame_info(void)$/;"	f
stiff_vbm	nofib/real/fem/inC/fem.c	/^float  stiff_vbm[MAXVOLUMESTIFF];$/;"	v
stmAbortTransaction	rts/STM.c	/^void stmAbortTransaction(Capability *cap,$/;"	f
stmCommitNestedTransaction	rts/STM.c	/^StgBool stmCommitNestedTransaction(Capability *cap, StgTRecHeader *trec) {$/;"	f
stmCommitTransaction	rts/STM.c	/^StgBool stmCommitTransaction(Capability *cap, StgTRecHeader *trec) {$/;"	f
stmCondemnTransaction	rts/STM.c	/^void stmCondemnTransaction(Capability *cap,$/;"	f
stmFreeAbortedTRec	rts/STM.c	/^void stmFreeAbortedTRec(Capability *cap,$/;"	f
stmPreGCHook	rts/STM.c	/^void stmPreGCHook (Capability *cap) {$/;"	f
stmReWait	rts/STM.c	/^StgBool stmReWait(Capability *cap, StgTSO *tso) {$/;"	f
stmReadTVar	rts/STM.c	/^StgClosure *stmReadTVar(Capability *cap,$/;"	f
stmStartTransaction	rts/STM.c	/^StgTRecHeader *stmStartTransaction(Capability *cap,$/;"	f
stmValidateNestOfTransactions	rts/STM.c	/^StgBool stmValidateNestOfTransactions(Capability *cap, StgTRecHeader *trec) {$/;"	f
stmWait	rts/STM.c	/^StgBool stmWait(Capability *cap, StgTSO *tso, StgTRecHeader *trec) {$/;"	f
stmWaitUnlock	rts/STM.c	/^stmWaitUnlock(Capability *cap, StgTRecHeader *trec) {$/;"	f
stmWriteTVar	rts/STM.c	/^void stmWriteTVar(Capability *cap,$/;"	f
stopAllCapabilities	rts/Schedule.c	/^void stopAllCapabilities (Capability **pCap, Task *task)$/;"	f
stopAllCapabilitiesWith	rts/Schedule.c	/^void stopAllCapabilitiesWith (Capability **pCap, Task *task, SyncType sync_type)$/;"	f
stopEventLogFileWriter	rts/eventlog/EventLogWriter.c	/^stopEventLogFileWriter(void)$/;"	f	file:
stopEventLogWriter	rts/eventlog/EventLog.c	/^stopEventLogWriter(void)$/;"	f	file:
stopHeapProfTimer	rts/Proftimer.c	/^stopHeapProfTimer( void )$/;"	f
stopProfTimer	rts/Proftimer.c	/^stopProfTimer( void )$/;"	f
stopTicker	rts/posix/itimer/Pthread.c	/^stopTicker(void)$/;"	f
stopTicker	rts/posix/itimer/Setitimer.c	/^stopTicker(void)$/;"	f
stopTicker	rts/posix/itimer/TimerCreate.c	/^stopTicker(void)$/;"	f
stopTicker	rts/win32/Ticker.c	/^stopTicker(void)$/;"	f
stopTimer	rts/Timer.c	/^stopTimer(void)$/;"	f
stopped	rts/posix/itimer/Pthread.c	/^static volatile bool stopped = false;$/;"	v	file:
storageAddCapabilities	rts/sm/Storage.c	/^void storageAddCapabilities (uint32_t from, uint32_t to)$/;"	f
store	rts/Globals.c	/^static StgStablePtr store[MaxStoreKey];$/;"	v	file:
strMatchesSelector	rts/ProfHeap.c	/^strMatchesSelector( const char* str, const char* sel )$/;"	f
str_repeat	nofib/shootout/fasta/fasta-c.c	/^void str_repeat(char *s, int outlen) {$/;"	f
str_write	nofib/shootout/fasta/fasta-c.c	/^static inline void str_write(char *s) {$/;"	f	file:
strequal	rts/RtsFlags.c	/^STATIC_INLINE bool strequal(const char *a, const char * b)$/;"	f
strhashtable	rts/Hash.c	/^struct strhashtable { struct hashtable table; };$/;"	s	file:
strlen_utf8	rts/ProfilerReport.c	/^strlen_utf8 (char *s)$/;"	f	file:
struct1	libffi/build/testsuite/libffi.call/struct1.c	/^static test_structure_1 ABI_ATTR struct1(test_structure_1 ts)$/;"	f	file:
struct1	libffi/build/testsuite/libffi.call/uninitialized.c	/^static test_structure_1 struct1(test_structure_1 ts)$/;"	f	file:
struct2	libffi/build/testsuite/libffi.call/struct2.c	/^static test_structure_2 ABI_ATTR struct2(test_structure_2 ts)$/;"	f	file:
struct3	libffi/build/testsuite/libffi.call/struct3.c	/^static test_structure_3 ABI_ATTR struct3(test_structure_3 ts)$/;"	f	file:
struct4	libffi/build/testsuite/libffi.call/struct4.c	/^static test_structure_4 ABI_ATTR struct4(test_structure_4 ts)$/;"	f	file:
struct5	libffi/build/testsuite/libffi.call/struct5.c	/^static test_structure_5 ABI_ATTR struct5(test_structure_5 ts1, test_structure_5 ts2)$/;"	f	file:
struct6	libffi/build/testsuite/libffi.call/struct6.c	/^static test_structure_6 ABI_ATTR struct6 (test_structure_6 ts)$/;"	f	file:
struct7	libffi/build/testsuite/libffi.call/struct7.c	/^static test_structure_7 ABI_ATTR struct7 (test_structure_7 ts)$/;"	f	file:
struct8	libffi/build/testsuite/libffi.call/struct8.c	/^static test_structure_8 ABI_ATTR struct8 (test_structure_8 ts)$/;"	f	file:
struct9	libffi/build/testsuite/libffi.call/struct9.c	/^static test_structure_9 ABI_ATTR struct9 (test_structure_9 ts)$/;"	f	file:
struct_108byte	libffi/build/testsuite/libffi.call/stret_large.c	/^typedef struct struct_108byte {$/;"	s	file:
struct_108byte	libffi/build/testsuite/libffi.call/stret_large.c	/^} struct_108byte;$/;"	t	typeref:struct:struct_108byte	file:
struct_116byte	libffi/build/testsuite/libffi.call/stret_large2.c	/^typedef struct struct_116byte {$/;"	s	file:
struct_116byte	libffi/build/testsuite/libffi.call/stret_large2.c	/^} struct_116byte;$/;"	t	typeref:struct:struct_116byte	file:
struct_72byte	libffi/build/testsuite/libffi.call/stret_medium.c	/^typedef struct struct_72byte {$/;"	s	file:
struct_72byte	libffi/build/testsuite/libffi.call/stret_medium.c	/^} struct_72byte;$/;"	t	typeref:struct:struct_72byte	file:
struct_72byte	libffi/build/testsuite/libffi.call/stret_medium2.c	/^typedef struct struct_72byte {$/;"	s	file:
struct_72byte	libffi/build/testsuite/libffi.call/stret_medium2.c	/^} struct_72byte;$/;"	t	typeref:struct:struct_72byte	file:
sts	libffi/build/src/alpha/ffi.c	/^static inline void sts(void *ptr, UINT64 val)$/;"	f	file:
stub	libffi/build/testsuite/libffi.call/problem1.c	/^void stub(ffi_cif* cif __UNUSED__, void* resp, void** args,$/;"	f
stubSizeAarch64	rts/linker/elf_plt_aarch64.c	/^const size_t stubSizeAarch64 = 5 * 4;$/;"	v
stubSizeArm	rts/linker/elf_plt_arm.c	/^const size_t stubSizeArm = 12;$/;"	v
sub_radicals	nofib/imaginary/paraffins/paraffins.c	/^      struct radical *sub_radicals[NUM_SUB_RADICALS];$/;"	m	struct:radical	typeref:struct:radical::radical	file:
sub_segment_exec_offset	libffi/build/src/dlmalloc.c	1956;"	d	file:
suspendComputation	rts/RaiseAsync.c	/^suspendComputation (Capability *cap, StgTSO *tso, StgUpdateFrame *stop_here)$/;"	f
suspendTask	rts/Schedule.c	/^suspendTask (Capability *cap, Task *task)$/;"	f
suspendThread	rts/Schedule.c	/^suspendThread (StgRegTable *reg, bool interruptible)$/;"	f
sweep	rts/sm/Sweep.c	/^sweep(generation *gen)$/;"	f
swopen	libraries/base/cbits/fs.c	/^int FS(swopen) (const wchar_t* filename, int oflag, int shflag, int pmode)$/;"	f
swopen	rts/fs.c	/^int FS(swopen) (const wchar_t* filename, int oflag, int shflag, int pmode)$/;"	f
swopen	utils/fs/fs.c	/^int FS(swopen) (const wchar_t* filename, int oflag, int shflag, int pmode)$/;"	f
swopen	utils/lndir/fs.c	/^int FS(swopen) (const wchar_t* filename, int oflag, int shflag, int pmode)$/;"	f
swopen	utils/unlit/fs.c	/^int FS(swopen) (const wchar_t* filename, int oflag, int shflag, int pmode)$/;"	f
symhash	rts/Linker.c	/^StrHashTable *symhash;$/;"	v
sync_finished_cond	rts/Schedule.c	/^static Condition sync_finished_cond;$/;"	v	file:
sync_finished_mutex	rts/Schedule.c	/^static Mutex sync_finished_mutex;$/;"	v	file:
sysErrorBelch	rts/RtsMessages.c	/^sysErrorBelch(const char*s, ...)$/;"	f
sysErrorMsgFn	rts/RtsMessages.c	/^RtsMsgFunction *sysErrorMsgFn        = rtsSysErrorMsgFn;$/;"	v
sys_alloc	libffi/build/src/dlmalloc.c	/^static void* sys_alloc(mstate m, size_t nb) {$/;"	f	file:
sys_trim	libffi/build/src/dlmalloc.c	/^static int sys_trim(mstate m, size_t pad) {$/;"	f	file:
t	libffi/build/testsuite/libffi.call/huge_struct.c	/^	int64_t		t;$/;"	m	struct:BigStruct	file:
t	utils/hsc2hs/test/asm/tmp.c	/^char * t = "Hello World\\" 12345";$/;"	v
table	rts/Hash.c	/^struct strhashtable { struct hashtable table; };$/;"	m	struct:strhashtable	typeref:struct:strhashtable::hashtable	file:
table_search	nofib/spectral/simple/simple.c	/^inline int table_search(int table_size, double table[], double value)$/;"	f
tail_of	rts/sm/BlockAlloc.c	/^tail_of (bdescr *bd)$/;"	f
taken	rts/Pool.c	/^    PoolEntry *taken;$/;"	m	struct:Pool_	file:
taskCount	rts/Task.c	/^uint32_t taskCount;$/;"	v
tasksInitialized	rts/Task.c	/^static int tasksInitialized = 0;$/;"	v	file:
tbinptr	libffi/build/src/dlmalloc.c	/^typedef struct malloc_tree_chunk* tbinptr; \/* The type of bins of trees *\/$/;"	t	typeref:struct:malloc_tree_chunk	file:
tbl	nofib/shootout/reverse-complement/revcomp-c.c	/^char tbl[128];$/;"	v
tchunk	libffi/build/src/dlmalloc.c	/^typedef struct malloc_tree_chunk  tchunk;$/;"	t	typeref:struct:malloc_tree_chunk	file:
tchunkptr	libffi/build/src/dlmalloc.c	/^typedef struct malloc_tree_chunk* tchunkptr;$/;"	t	typeref:struct:malloc_tree_chunk	file:
terminateJob	libraries/process/cbits/runProcess.c	/^terminateJob (ProcHandle handle)$/;"	f
terminateProcess	libraries/process/cbits/runProcess.c	/^terminateProcess (ProcHandle handle)$/;"	f
test	testsuite/tests/driver/T12674/-T12674c.c	/^void test(int arg$/;"	f
test	testsuite/tests/ffi/should_run/T1288_c.c	/^void __attribute__((stdcall)) test(int arg)$/;"	f
test	testsuite/tests/ffi/should_run/T1288_ghci_c.c	/^void __attribute__((stdcall)) test(int arg)$/;"	f
test	testsuite/tests/ffi/should_run/T2276_c.c	/^void __attribute__((stdcall)) test(int arg)$/;"	f
test	testsuite/tests/ffi/should_run/T2276_ghci_c.c	/^void __attribute__((stdcall)) test(int arg)$/;"	f
test_aligned_alloc	testsuite/tests/rts/testblockalloc.c	/^static void test_aligned_alloc(void)$/;"	f	file:
test_exit	testsuite/tests/dynlibs/T3807-export.c	/^test_exit (void)$/;"	f
test_flush	testsuite/tests/rts/InitEventLogging_c.c	/^void test_flush(void) {$/;"	f
test_fn	libffi/build/testsuite/libffi.call/cls_struct_va1.c	/^test_fn (ffi_cif* cif __UNUSED__, void* resp,$/;"	f	file:
test_fn	libffi/build/testsuite/libffi.call/va_1.c	/^test_fn (int n, ...)$/;"	f	file:
test_fn	libffi/build/testsuite/libffi.call/va_struct1.c	/^test_fn (int n, ...)$/;"	f	file:
test_fn	libffi/build/testsuite/libffi.call/va_struct2.c	/^test_fn (int n, ...)$/;"	f	file:
test_fn	libffi/build/testsuite/libffi.call/va_struct3.c	/^test_fn (int n, ...)$/;"	f	file:
test_func	libffi/build/testsuite/libffi.call/cls_multi_uchar.c	/^void test_func(ffi_cif *cif __UNUSED__, void *rval __UNUSED__, void **avals,$/;"	f
test_func_fn	libffi/build/testsuite/libffi.call/cls_multi_schar.c	/^signed char test_func_fn(signed char a1, signed char a2)$/;"	f
test_func_fn	libffi/build/testsuite/libffi.call/cls_multi_sshort.c	/^signed short test_func_fn(signed short a1, signed short a2)$/;"	f
test_func_fn	libffi/build/testsuite/libffi.call/cls_multi_sshortchar.c	/^signed short test_func_fn(signed char a1, signed short a2,$/;"	f
test_func_fn	libffi/build/testsuite/libffi.call/cls_multi_uchar.c	/^unsigned char test_func_fn(unsigned char a1, unsigned char a2,$/;"	f
test_func_fn	libffi/build/testsuite/libffi.call/cls_multi_ushort.c	/^unsigned short test_func_fn(unsigned short a1, unsigned short a2)$/;"	f
test_func_fn	libffi/build/testsuite/libffi.call/cls_multi_ushortchar.c	/^unsigned short test_func_fn(unsigned char a1, unsigned short a2,$/;"	f
test_func_gn	libffi/build/testsuite/libffi.call/cls_multi_schar.c	/^static void test_func_gn(ffi_cif *cif __UNUSED__, void *rval, void **avals,$/;"	f	file:
test_func_gn	libffi/build/testsuite/libffi.call/cls_multi_sshort.c	/^static void test_func_gn(ffi_cif *cif __UNUSED__, void *rval, void **avals,$/;"	f	file:
test_func_gn	libffi/build/testsuite/libffi.call/cls_multi_sshortchar.c	/^static void test_func_gn(ffi_cif *cif __UNUSED__, void *rval, void **avals,$/;"	f	file:
test_func_gn	libffi/build/testsuite/libffi.call/cls_multi_uchar.c	/^static void test_func_gn(ffi_cif *cif __UNUSED__, void *rval, void **avals,$/;"	f	file:
test_func_gn	libffi/build/testsuite/libffi.call/cls_multi_ushort.c	/^static void test_func_gn(ffi_cif *cif __UNUSED__, void *rval, void **avals,$/;"	f	file:
test_func_gn	libffi/build/testsuite/libffi.call/cls_multi_ushortchar.c	/^static void test_func_gn(ffi_cif *cif __UNUSED__, void *rval, void **avals,$/;"	f	file:
test_init	testsuite/tests/dynlibs/T3807-export.c	/^test_init (void)$/;"	f
test_init	testsuite/tests/rts/InitEventLogging_c.c	/^void test_init(void) {$/;"	f
test_large_fn	libffi/build/testsuite/libffi.call/huge_struct.c	/^test_large_fn($/;"	f
test_no_dangling_references_to_unloaded_objects	testsuite/tests/rts/linker/unload_multiple_objs/linker_unload_multiple_objs.c	/^void test_no_dangling_references_to_unloaded_objects()$/;"	f
test_random_alloc	testsuite/tests/rts/testblockalloc.c	/^static void test_random_alloc(void)$/;"	f	file:
test_sequential_alloc	testsuite/tests/rts/testblockalloc.c	/^static void test_sequential_alloc(void)$/;"	f	file:
test_still_has_references_to_unloaded_objects	testsuite/tests/rts/linker/unload_multiple_objs/linker_unload_multiple_objs.c	/^void test_still_has_references_to_unloaded_objects()$/;"	f
test_stop	testsuite/tests/rts/InitEventLogging_c.c	/^void test_stop(void) {$/;"	f
test_structure_1	libffi/build/testsuite/libffi.call/struct1.c	/^} test_structure_1;$/;"	t	typeref:struct:__anon11	file:
test_structure_1	libffi/build/testsuite/libffi.call/uninitialized.c	/^} test_structure_1;$/;"	t	typeref:struct:__anon20	file:
test_structure_2	libffi/build/testsuite/libffi.call/struct2.c	/^} test_structure_2;$/;"	t	typeref:struct:__anon12	file:
test_structure_3	libffi/build/testsuite/libffi.call/struct3.c	/^} test_structure_3;$/;"	t	typeref:struct:__anon13	file:
test_structure_4	libffi/build/testsuite/libffi.call/struct4.c	/^} test_structure_4;$/;"	t	typeref:struct:__anon14	file:
test_structure_5	libffi/build/testsuite/libffi.call/struct5.c	/^} test_structure_5;$/;"	t	typeref:struct:__anon15	file:
test_structure_6	libffi/build/testsuite/libffi.call/struct6.c	/^} test_structure_6;$/;"	t	typeref:struct:__anon16	file:
test_structure_7	libffi/build/testsuite/libffi.call/struct7.c	/^} test_structure_7;$/;"	t	typeref:struct:__anon17	file:
test_structure_8	libffi/build/testsuite/libffi.call/struct8.c	/^} test_structure_8;$/;"	t	typeref:struct:__anon18	file:
test_structure_9	libffi/build/testsuite/libffi.call/struct9.c	/^} test_structure_9;$/;"	t	typeref:struct:__anon19	file:
test_type	libffi/build/testsuite/libffi.call/cls_multi_schar.c	/^typedef signed char (*test_type)(signed char, signed char);$/;"	t	file:
test_type	libffi/build/testsuite/libffi.call/cls_multi_sshort.c	/^typedef signed short (*test_type)(signed short, signed short);$/;"	t	file:
test_type	libffi/build/testsuite/libffi.call/cls_multi_sshortchar.c	/^typedef signed short (*test_type)(signed char, signed short,$/;"	t	file:
test_type	libffi/build/testsuite/libffi.call/cls_multi_uchar.c	/^typedef unsigned char (*test_type)(unsigned char, unsigned char,$/;"	t	file:
test_type	libffi/build/testsuite/libffi.call/cls_multi_ushort.c	/^typedef unsigned short (*test_type)(unsigned short, unsigned short);$/;"	t	file:
test_type	libffi/build/testsuite/libffi.call/cls_multi_ushortchar.c	/^typedef unsigned short (*test_type)(unsigned char, unsigned short,$/;"	t	file:
test_write	testsuite/tests/rts/InitEventLogging_c.c	/^bool test_write(void *eventlog, size_t eventlog_size) {$/;"	f
testfun	testsuite/tests/rts/linker/linker_error.c	/^typedef int testfun(int);$/;"	t	file:
testfun	testsuite/tests/rts/linker/linker_unload.c	/^typedef int testfun(int);$/;"	t	file:
tflag	utils/hp2ps/Main.c	/^static boolish tflag = 0;	\/* ignored threshold specified          *\/$/;"	v	file:
thefloatish	utils/hp2ps/HpFile.c	/^floatish thefloatish;$/;"	v
theident	utils/hp2ps/HpFile.c	/^char *theident;$/;"	v
theinteger	utils/hp2ps/HpFile.c	/^int theinteger;$/;"	v
thestring	utils/hp2ps/HpFile.c	/^static char *thestring;$/;"	v	file:
theta	nofib/real/fem/inC/fem.c	/^        int   u,v,theta; } node_info[MAXNODES];$/;"	m	struct:__anon27	file:
theta	nofib/spectral/simple/simple.c	/^double theta[MAXSIZE][MAXSIZE],theta_hat[MAXSIZE][MAXSIZE];$/;"	v
theta_hat	nofib/spectral/simple/simple.c	/^double theta[MAXSIZE][MAXSIZE],theta_hat[MAXSIZE][MAXSIZE];$/;"	v
theta_table	nofib/spectral/simple/simple.c	/^double theta_table[] = {0.0 ,0.0, 3.0, 300.0, 3000.0};$/;"	v
thetok	utils/hp2ps/HpFile.c	/^token thetok;                                   \/* last token           *\/$/;"	v
thief	testsuite/tests/rts/testwsdeque.c	/^void OSThreadProcAttr thief(void *info)$/;"	f
thing	rts/Pool.c	/^    void *thing;$/;"	m	struct:PoolEntry_	file:
thread	rts/posix/itimer/Pthread.c	/^static OSThreadId thread;$/;"	v	file:
thread	rts/sm/Compact.c	/^thread (StgClosure **p)$/;"	f
thread	testsuite/tests/rts/T8124_c.c	/^void *thread(void *param)$/;"	f
threadLabels	rts/ThreadLabels.c	/^static HashTable * threadLabels = NULL;$/;"	v	file:
threadLabels_mutex	rts/ThreadLabels.c	/^static Mutex threadLabels_mutex;$/;"	v	file:
threadPaused	rts/ThreadPaused.c	/^threadPaused(Capability *cap, StgTSO *tso)$/;"	f
threadStableNameTable	rts/StableName.c	/^threadStableNameTable( evac_fn evac, void *user )$/;"	f
threadStablePtrTable	rts/StablePtr.c	/^threadStablePtrTable( evac_fn evac, void *user )$/;"	f
threadStackOverflow	rts/Threads.c	/^threadStackOverflow (Capability *cap, StgTSO *tso)$/;"	f
threadStackUnderflow	rts/Threads.c	/^threadStackUnderflow (Capability *cap, StgTSO *tso)$/;"	f
thread_	rts/sm/Compact.c	/^STATIC_INLINE void thread_ (void *p) { thread((StgClosure **)p); }$/;"	f
thread_AP	rts/sm/Compact.c	/^thread_AP (StgAP *ap)$/;"	f
thread_AP_STACK	rts/sm/Compact.c	/^thread_AP_STACK (StgAP_STACK *ap)$/;"	f
thread_PAP	rts/sm/Compact.c	/^thread_PAP (StgPAP *pap)$/;"	f
thread_PAP_payload	rts/sm/Compact.c	/^thread_PAP_payload (StgClosure *fun, StgClosure **payload, W_ size)$/;"	f
thread_TSO	rts/sm/Compact.c	/^thread_TSO (StgTSO *tso)$/;"	f	file:
thread_arg_block	rts/sm/Compact.c	/^thread_arg_block (StgFunInfoTable *fun_info, StgClosure **args)$/;"	f
thread_cbs	rts/Libdw.c	/^static const Dwfl_Thread_Callbacks thread_cbs = {$/;"	v	file:
thread_cbs	rts/Libdw.c	/^static const Dwfl_Thread_Callbacks thread_cbs;$/;"	v	file:
thread_large_bitmap	rts/sm/Compact.c	/^thread_large_bitmap( P_ p, StgLargeBitmap *large_bitmap, W_ size )$/;"	f
thread_obj	rts/sm/Compact.c	/^thread_obj (const StgInfoTable *info, P_ p)$/;"	f	file:
thread_root	rts/sm/Compact.c	/^thread_root (void *user STG_UNUSED, StgClosure **p)$/;"	f	file:
thread_small_bitmap	rts/sm/Compact.c	/^thread_small_bitmap (P_ p, W_ size, W_ bitmap)$/;"	f
thread_stack	rts/sm/Compact.c	/^thread_stack(P_ p, P_ stack_end)$/;"	f	file:
thread_static	rts/sm/Compact.c	/^thread_static( StgClosure* p )$/;"	f	file:
thread_stop_reasons	rts/Trace.c	/^static char *thread_stop_reasons[] = {$/;"	v	file:
threadfunc	testsuite/tests/concurrent/should_run/hs_try_putmvar003_c.c	/^typedef void* threadfunc(void *);$/;"	t	file:
three_parts	nofib/imaginary/paraffins/paraffins.c	/^  struct three_parts$/;"	s	file:
throwTo	rts/RaiseAsync.c	/^throwTo (Capability *cap,       \/\/ the Capability we hold$/;"	f
throwToMsg	rts/RaiseAsync.c	/^throwToMsg (Capability *cap, MessageThrowTo *msg)$/;"	f
throwToSelf	rts/RaiseAsync.c	/^throwToSelf (Capability *cap, StgTSO *tso, StgClosure *exception)$/;"	f
throwToSendMsg	rts/RaiseAsync.c	/^throwToSendMsg (Capability *cap STG_UNUSED,$/;"	f	file:
throwToSingleThreaded	rts/RaiseAsync.c	/^throwToSingleThreaded (Capability *cap, StgTSO *tso, StgClosure *exception)$/;"	f
throwToSingleThreaded_	rts/RaiseAsync.c	/^throwToSingleThreaded_ (Capability *cap, StgTSO *tso, StgClosure *exception,$/;"	f
throwToSingleThreaded__	rts/RaiseAsync.c	/^throwToSingleThreaded__ (Capability *cap, StgTSO *tso, StgClosure *exception,$/;"	f	file:
tick_callback	rts/win32/Ticker.c	/^static VOID CALLBACK tick_callback($/;"	f	file:
tick_interval	rts/win32/Ticker.c	/^static Time tick_interval = 0;$/;"	v	file:
tick_proc	rts/win32/Ticker.c	/^static TickProc tick_proc = NULL;$/;"	v	file:
ticks_to_ctxt_switch	rts/Timer.c	/^static int ticks_to_ctxt_switch = 0;$/;"	v	file:
ticks_to_heap_profile	rts/Proftimer.c	/^static int ticks_to_heap_profile;$/;"	v	file:
ticky_entry_ctrs	rts/Ticky.c	/^StgEntCounter *ticky_entry_ctrs = NULL; \/* root of list of them *\/$/;"	v
tidyThreadList	rts/sm/MarkWeak.c	/^static void tidyThreadList (generation *gen)$/;"	f	file:
tidyWeakList	rts/sm/MarkWeak.c	/^static bool tidyWeakList(generation *gen)$/;"	f	file:
time	rts/ProfHeap.c	/^    double      time;    \/\/ the time in MUT time when the census is made$/;"	m	struct:__anon44	file:
time_iconv	libraries/text/benchmarks/cbits/time_iconv.c	/^int time_iconv(char *srcbuf, size_t srcbufsize)$/;"	f
time_ns	rts/eventlog/EventLog.c	/^static inline StgWord64 time_ns(void)$/;"	f	file:
time_str	rts/RtsUtils.c	/^time_str(void)$/;"	f
timer	rts/posix/itimer/TimerCreate.c	/^static timer_t timer;$/;"	v	file:
timer	rts/win32/Ticker.c	/^static HANDLE timer       = NULL;$/;"	v	file:
timer_disabled	rts/Timer.c	/^static StgWord timer_disabled;$/;"	v	file:
timer_manager_control_wr_fd	rts/posix/Signals.c	/^static int timer_manager_control_wr_fd = -1;$/;"	v	file:
timer_queue	rts/win32/Ticker.c	/^static HANDLE timer_queue = NULL;$/;"	v	file:
timer_scaling_factor_denom	rts/posix/GetTime.c	/^static uint64_t timer_scaling_factor_denom = 0;$/;"	v	file:
timer_scaling_factor_numer	rts/posix/GetTime.c	/^static uint64_t timer_scaling_factor_numer = 0;$/;"	v	file:
timesAnyObjectVisited	rts/RetainerProfile.c	/^static uint32_t timesAnyObjectVisited;  \/\/ number of times any objects are$/;"	v	file:
titledist	libraries/base/cbits/WCsubst.c	/^	int titledist;$/;"	m	struct:_convrule_	file:
titleheight	utils/hp2ps/Dimensions.c	/^floatish titleheight; $/;"	v
titletextspace	utils/hp2ps/Dimensions.c	/^floatish titletextspace = TITLE_TEXT_SPACE;$/;"	v
titlewidth	utils/hp2ps/Dimensions.c	/^floatish titlewidth     = (BORDER_WIDTH  - (2 * BORDER_SPACE)); $/;"	v
tixFile	rts/Hpc.c	/^static FILE *tixFile;                   \/\/ file being read\/written$/;"	v	file:
tixFilename	rts/Hpc.c	/^static char *tixFilename = NULL;$/;"	v	file:
tix_ch	rts/Hpc.c	/^static int tix_ch;                      \/\/ current char$/;"	v	file:
tmalloc_large	libffi/build/src/dlmalloc.c	/^static void* tmalloc_large(mstate m, size_t nb) {$/;"	f	file:
tmalloc_small	libffi/build/src/dlmalloc.c	/^static void* tmalloc_small(mstate m, size_t nb) {$/;"	f	file:
toPathchar	testsuite/tests/rts/linker/unload_multiple_objs/linker_unload_multiple_objs.c	/^pathchar* toPathchar(char* path)$/;"	f
to_point	nofib/real/fem/inC/fem.c	/^        int   to_point;$/;"	m	struct:__anon30	file:
toc	libffi/build/src/powerpc/ffi_darwin.c	/^  void *toc;$/;"	m	struct:aix_fd_struct	file:
toc	rts/Adjustor.c	/^                    *toc;$/;"	m	struct:AdjustorStub	typeref:struct:AdjustorStub::AdjustorStub	file:
todo_block_full	rts/sm/GCUtils.c	/^todo_block_full (uint32_t size, gen_workspace *ws)$/;"	f
token_locked	rts/STM.c	/^static volatile StgWord token_locked = false;$/;"	v	file:
top	libffi/build/src/dlmalloc.c	/^  mchunkptr  top;$/;"	m	struct:malloc_state	file:
topHandlerPtr	rts/TopHandler.c	/^static StgStablePtr topHandlerPtr;$/;"	v	file:
top_ct	rts/Ticky.c	/^StgEntCounter top_ct$/;"	v
topsize	libffi/build/src/dlmalloc.c	/^  size_t     topsize;$/;"	m	struct:malloc_state	file:
totalArgumentSize	rts/Adjustor.c	/^static int totalArgumentSize(char *typeString)$/;"	f	file:
total_ticks	rts/Proftimer.c	/^uint32_t total_ticks = 0;$/;"	v
traceBegin	rts/Trace.c	/^void traceBegin (const char *str, ...)$/;"	f
traceCapEvent_	rts/Trace.c	/^void traceCapEvent_ (Capability   *cap,$/;"	f
traceCap_	rts/Trace.c	/^void traceCap_(Capability *cap, char *msg, ...)$/;"	f
traceCap_stderr	rts/Trace.c	/^static void traceCap_stderr(Capability *cap, char *msg, ...)$/;"	f	file:
traceCapsetEvent_	rts/Trace.c	/^void traceCapsetEvent_ (EventTypeNum tag,$/;"	f
traceConcMarkBegin	rts/Trace.c	/^void traceConcMarkBegin()$/;"	f
traceConcMarkEnd	rts/Trace.c	/^void traceConcMarkEnd(StgWord32 marked_obj_count)$/;"	f
traceConcSweepBegin	rts/Trace.c	/^void traceConcSweepBegin()$/;"	f
traceConcSweepEnd	rts/Trace.c	/^void traceConcSweepEnd()$/;"	f
traceConcSyncBegin	rts/Trace.c	/^void traceConcSyncBegin()$/;"	f
traceConcSyncEnd	rts/Trace.c	/^void traceConcSyncEnd()$/;"	f
traceConcUpdRemSetFlush	rts/Trace.c	/^void traceConcUpdRemSetFlush(Capability *cap)$/;"	f
traceEnd	rts/Trace.c	/^void traceEnd (void)$/;"	f
traceEventGcStats_	rts/Trace.c	/^void traceEventGcStats_  (Capability *cap,$/;"	f
traceEventHeapInfo_	rts/Trace.c	/^void traceEventHeapInfo_ (CapsetID    heap_capset,$/;"	f
traceGcEventAtT_	rts/Trace.c	/^void traceGcEventAtT_ (Capability *cap, StgWord64 ts, EventTypeNum tag)$/;"	f
traceGcEvent_	rts/Trace.c	/^void traceGcEvent_ (Capability *cap, EventTypeNum tag)$/;"	f
traceGcEvent_stderr	rts/Trace.c	/^static void traceGcEvent_stderr (Capability *cap, EventTypeNum tag)$/;"	f	file:
traceHeapBioProfSampleBegin	rts/Trace.c	/^void traceHeapBioProfSampleBegin(StgInt era, StgWord64 time)$/;"	f
traceHeapEvent_	rts/Trace.c	/^void traceHeapEvent_ (Capability   *cap,$/;"	f
traceHeapProfBegin	rts/Trace.c	/^void traceHeapProfBegin(StgWord8 profile_id)$/;"	f
traceHeapProfCostCentre	rts/Trace.c	/^void traceHeapProfCostCentre(StgWord32 ccID,$/;"	f
traceHeapProfSampleBegin	rts/Trace.c	/^void traceHeapProfSampleBegin(StgInt era)$/;"	f
traceHeapProfSampleCostCentre	rts/Trace.c	/^void traceHeapProfSampleCostCentre(StgWord8 profile_id,$/;"	f
traceHeapProfSampleEnd	rts/Trace.c	/^void traceHeapProfSampleEnd(StgInt era)$/;"	f
traceHeapProfSampleString	rts/Trace.c	/^void traceHeapProfSampleString(StgWord8 profile_id,$/;"	f
traceNonmovingHeapCensus	rts/Trace.c	/^void traceNonmovingHeapCensus(uint32_t log_blk_size,$/;"	f
traceOSProcessInfo_	rts/Trace.c	/^void traceOSProcessInfo_(void) {$/;"	f
tracePreface	rts/Trace.c	/^static void tracePreface (void)$/;"	f	file:
traceProfBegin	rts/Trace.c	/^void traceProfBegin(void)$/;"	f
traceProfSampleCostCentre	rts/Trace.c	/^void traceProfSampleCostCentre(Capability *cap,$/;"	f
traceSchedEvent_	rts/Trace.c	/^void traceSchedEvent_ (Capability *cap, EventTypeNum tag,$/;"	f
traceSchedEvent_stderr	rts/Trace.c	/^static void traceSchedEvent_stderr (Capability *cap, EventTypeNum tag,$/;"	f	file:
traceSparkCounters_	rts/Trace.c	/^void traceSparkCounters_ (Capability *cap,$/;"	f
traceSparkEvent_	rts/Trace.c	/^void traceSparkEvent_ (Capability *cap, EventTypeNum tag, StgWord info1)$/;"	f
traceSparkEvent_stderr	rts/Trace.c	/^static void traceSparkEvent_stderr (Capability *cap, EventTypeNum tag,$/;"	f	file:
traceTaskCreate_	rts/Trace.c	/^void traceTaskCreate_ (Task       *task,$/;"	f
traceTaskDelete_	rts/Trace.c	/^void traceTaskDelete_ (Task *task)$/;"	f
traceTaskMigrate_	rts/Trace.c	/^void traceTaskMigrate_ (Task       *task,$/;"	f
traceThreadLabel_	rts/Trace.c	/^void traceThreadLabel_(Capability *cap,$/;"	f
traceThreadStatus_	rts/Trace.c	/^void traceThreadStatus_ (StgTSO *tso USED_IF_DEBUG)$/;"	f
traceUserBinaryMsg	rts/Trace.c	/^void traceUserBinaryMsg(Capability *cap, uint8_t *msg, size_t size)$/;"	f
traceUserMarker	rts/Trace.c	/^void traceUserMarker(Capability *cap, char *markername)$/;"	f
traceUserMsg	rts/Trace.c	/^void traceUserMsg(Capability *cap, char *msg)$/;"	f
traceWallClockTime_	rts/Trace.c	/^void traceWallClockTime_(void) {$/;"	f
trace_	rts/Trace.c	/^void trace_(char *msg, ...)$/;"	f
trace_utx	rts/Trace.c	/^static Mutex trace_utx;$/;"	v	file:
tracingAddCapapilities	rts/Trace.c	/^void tracingAddCapapilities (uint32_t from, uint32_t to)$/;"	f
trampoline	libffi/build/src/closures.c	/^  void *(*trampoline) ();$/;"	m	struct:ffi_trampoline_table_entry	file:
trampoline_page	libffi/build/src/closures.c	/^  vm_address_t trampoline_page;$/;"	m	struct:ffi_trampoline_table	file:
transformedEllipse	libraries/Win32/cbits/ellipse.c	/^int transformedEllipse($/;"	f
translate_float	libffi/build/src/powerpc/ffi_sysv.c	/^translate_float (int abi, int type)$/;"	f	file:
translate_mode	utils/fs/fs.c	/^int FS(translate_mode) (const wchar_t* mode)$/;"	f
traverseLargeBitmap	rts/TraverseHeap.c	/^traverseLargeBitmap (traverseState *ts, StgPtr p, StgLargeBitmap *large_bitmap,$/;"	f	file:
traverseMaybeInitClosureData	rts/TraverseHeap.c	/^traverseMaybeInitClosureData(StgClosure *c)$/;"	f
traversePAP	rts/TraverseHeap.c	/^traversePAP (traverseState *ts,$/;"	f
traversePop	rts/TraverseHeap.c	/^traversePop(traverseState *ts, StgClosure **c, StgClosure **cp, stackData *data)$/;"	f
traversePushChildren	rts/TraverseHeap.c	/^traversePushChildren(traverseState *ts, StgClosure *c, stackData data, StgClosure **first_child)$/;"	f
traversePushClosure	rts/TraverseHeap.c	/^traversePushClosure(traverseState *ts, StgClosure *c, StgClosure *cp, stackData data) {$/;"	f
traversePushStack	rts/TraverseHeap.c	/^traversePushStack(traverseState *ts, StgClosure *cp, stackData data,$/;"	f	file:
traverseSmallBitmap	rts/TraverseHeap.c	/^traverseSmallBitmap (traverseState *ts, StgPtr p, uint32_t size, StgWord bitmap,$/;"	f
traverseSparkQueue	rts/Sparks.c	/^traverseSparkQueue (evac_fn evac, void *user, Capability *cap)$/;"	f
traverseWeakPtrList	rts/sm/MarkWeak.c	/^traverseWeakPtrList(StgWeak **dead_weak_ptr_list, StgTSO **resurrected_threads)$/;"	f
traverseWorkStack	rts/TraverseHeap.c	/^traverseWorkStack(traverseState *ts, visitClosure_cb visit_cb)$/;"	f
traverseWorkStackBlocks	rts/TraverseHeap.c	/^traverseWorkStackBlocks(traverseState *ts)$/;"	f
traverse_and_check	libffi/build/src/dlmalloc.c	/^static size_t traverse_and_check(mstate m) {$/;"	f	file:
treebin_at	libffi/build/src/dlmalloc.c	2296;"	d	file:
treebins	libffi/build/src/dlmalloc.c	/^  tbinptr    treebins[NTREEBINS];$/;"	m	struct:malloc_state	file:
treemap	libffi/build/src/dlmalloc.c	/^  binmap_t   treemap;$/;"	m	struct:malloc_state	file:
treemap_is_marked	libffi/build/src/dlmalloc.c	2360;"	d	file:
trim_check	libffi/build/src/dlmalloc.c	/^  size_t     trim_check;$/;"	m	struct:malloc_state	file:
trim_threshold	libffi/build/src/dlmalloc.c	/^  size_t trim_threshold;$/;"	m	struct:malloc_params	file:
truncExponent	rts/StgPrimFloat.c	/^truncExponent(I_ e)$/;"	f
tryGrabCapability	rts/Capability.c	/^tryGrabCapability (Capability *cap, Task *task)$/;"	f
tryWakeupThread	rts/Threads.c	/^tryWakeupThread (Capability *cap, StgTSO *tso)$/;"	f
tt	libffi/build/testsuite/libffi.call/huge_struct.c	/^	double		tt;$/;"	m	struct:BigStruct	file:
tuple	nofib/imaginary/paraffins/paraffins.c	/^  struct tuple$/;"	s	file:
tvar_is_locked	rts/STM.c	/^static StgBool tvar_is_locked(StgTVar *s, StgTRecHeader *h) {$/;"	f	file:
type	rts/TraverseHeap.c	/^    nextPosType type;$/;"	m	struct:__anon52	file:
u	libffi/build/testsuite/libffi.call/huge_struct.c	/^	float		u;$/;"	m	struct:BigStruct	file:
u	nofib/real/fem/inC/fem.c	/^        int   u,v,theta; } node_info[MAXNODES];$/;"	m	struct:__anon27	file:
u32	rts/xxhash.c	/^typedef union { U32 u32; U64 u64; } __attribute__((packed)) unalign64;$/;"	m	union:__anon56	file:
u32	rts/xxhash.c	/^typedef union { U32 u32; } __attribute__((packed)) unalign;$/;"	m	union:__anon53	file:
u64	rts/xxhash.c	/^typedef union { U32 u32; U64 u64; } __attribute__((packed)) unalign64;$/;"	m	union:__anon56	file:
u8	libffi/build/testsuite/libffi.call/many2.c	/^typedef unsigned char u8;$/;"	t	file:
uc	libffi/build/testsuite/libffi.call/struct1.c	/^  unsigned char uc;$/;"	m	struct:__anon11	file:
uc	libffi/build/testsuite/libffi.call/uninitialized.c	/^  unsigned char uc;$/;"	m	struct:__anon20	file:
ui	libffi/build/testsuite/libffi.call/struct1.c	/^  unsigned int ui;$/;"	m	struct:__anon11	file:
ui	libffi/build/testsuite/libffi.call/uninitialized.c	/^  unsigned int ui;$/;"	m	struct:__anon20	file:
ui1	libffi/build/testsuite/libffi.call/struct4.c	/^  unsigned ui1;$/;"	m	struct:__anon14	file:
ui2	libffi/build/testsuite/libffi.call/struct4.c	/^  unsigned ui2;$/;"	m	struct:__anon14	file:
ui3	libffi/build/testsuite/libffi.call/struct4.c	/^  unsigned ui3;$/;"	m	struct:__anon14	file:
uintptr_example	testsuite/tests/ffi/should_compile/T11983.c	/^void uintptr_example(uintptr_t u) {}$/;"	f
unalign	rts/xxhash.c	/^typedef union { U32 u32; } __attribute__((packed)) unalign;$/;"	t	typeref:union:__anon53	file:
unalign64	rts/xxhash.c	/^typedef union { U32 u32; U64 u64; } __attribute__((packed)) unalign64;$/;"	t	typeref:union:__anon56	file:
unblockUserSignals	rts/posix/Signals.c	/^unblockUserSignals(void)$/;"	f
unblockUserSignals	rts/win32/ConsoleHandler.c	/^unblockUserSignals(void)$/;"	f
unchain_thunk_selectors	rts/sm/Evac.c	/^unchain_thunk_selectors(StgSelector *p, StgClosure *val)$/;"	f	file:
unipred	libraries/base/cbits/WCsubst.c	/^unipred(u_iswcntrl,GENCAT_CC)$/;"	f
unipred	libraries/base/cbits/WCsubst.c	5054;"	d	file:
unipred_s	libraries/base/cbits/WCsubst.c	5060;"	d	file:
unlink_chunk	libffi/build/src/dlmalloc.c	3185;"	d	file:
unlink_first_small_chunk	libffi/build/src/dlmalloc.c	3008;"	d	file:
unlink_large_chunk	libffi/build/src/dlmalloc.c	3108;"	d	file:
unlink_small_chunk	libffi/build/src/dlmalloc.c	2988;"	d	file:
unlit	utils/unlit/unlit.c	/^static void unlit(char *file, FILE *istream, FILE *ostream)$/;"	f	file:
unloadObj	rts/Linker.c	/^HsInt unloadObj (pathchar *path)$/;"	f
unloadObj_	rts/Linker.c	/^static HsInt unloadObj_ (pathchar *path, bool just_purge)$/;"	f	file:
unloaded_objects	rts/Linker.c	/^ObjectCode *unloaded_objects = NULL; \/* initially empty *\/$/;"	v
unlockFile	rts/FileLock.c	/^unlockFile(int fd)$/;"	f
unlock_stm	rts/STM.c	/^static void unlock_stm(StgTRecHeader *trec STG_UNUSED) {$/;"	f	file:
unlock_tvar	rts/STM.c	/^static void *unlock_tvar(Capability *cap,$/;"	f	file:
unlock_tvar	rts/STM.c	/^static void unlock_tvar(Capability *cap,$/;"	f	file:
unmarkImport	rts/RtsSymbolInfo.c	/^static void unmarkImport(SymbolInfo* info)$/;"	f	file:
unpark_tso	rts/STM.c	/^static void unpark_tso(Capability *cap, StgTSO *tso) {$/;"	f	file:
unpark_waiters_on	rts/STM.c	/^static void unpark_waiters_on(Capability *cap, StgTVar *s) {$/;"	f	file:
unprotected_list	rts/linker/M32Alloc.c	/^   struct m32_page_t *unprotected_list;$/;"	m	struct:m32_allocator_t	typeref:struct:m32_allocator_t::m32_page_t	file:
unthread	rts/sm/Compact.c	/^unthread( P_ p, W_ free )$/;"	f
unused	utils/hsc2hs/test/asm/tmp.c	/^struct S { int unused; };$/;"	m	struct:S	file:
uordblks	libffi/build/src/dlmalloc.c	/^  MALLINFO_FIELD_TYPE uordblks; \/* total allocated space *\/$/;"	m	struct:mallinfo	file:
upd_rem_set_block_list	rts/sm/NonMovingMark.c	/^bdescr *upd_rem_set_block_list = NULL;$/;"	v
upd_rem_set_flush_count	rts/sm/NonMovingMark.c	/^static volatile StgWord upd_rem_set_flush_count = 0;$/;"	v	file:
upd_rem_set_flushed_cond	rts/sm/NonMovingMark.c	/^static Condition upd_rem_set_flushed_cond;$/;"	v	file:
upd_rem_set_lock	rts/sm/NonMovingMark.c	/^static Mutex upd_rem_set_lock;$/;"	v	file:
updateAdjacentFrames	rts/ThreadPaused.c	/^updateAdjacentFrames (Capability *cap, StgTSO *tso, StgUpdateFrame *upd,$/;"	f	file:
updateNurseriesStats	rts/sm/Storage.c	/^updateNurseriesStats (void)$/;"	f
updateRemembSetPushClosure	rts/sm/NonMovingMark.c	/^inline void updateRemembSetPushClosure(Capability *cap, StgClosure *p)$/;"	f
updateRemembSetPushClosure_	rts/sm/NonMovingMark.c	/^void updateRemembSetPushClosure_(StgRegTable *reg, struct StgClosure_ *p)$/;"	f
updateRemembSetPushStack	rts/sm/NonMovingMark.c	/^void updateRemembSetPushStack(Capability *cap, StgStack *stack)$/;"	f
updateRemembSetPushTSO	rts/sm/NonMovingMark.c	/^void updateRemembSetPushTSO(Capability *cap, StgTSO *tso)$/;"	f
updateRemembSetPushThunk	rts/sm/NonMovingMark.c	/^inline void updateRemembSetPushThunk(Capability *cap, StgThunk *thunk)$/;"	f
updateRemembSetPushThunkEager	rts/sm/NonMovingMark.c	/^void updateRemembSetPushThunkEager(Capability *cap,$/;"	f
updateRemembSetPushThunk_	rts/sm/NonMovingMark.c	/^void updateRemembSetPushThunk_(StgRegTable *reg, StgThunk *p)$/;"	f
updateStableNameTable	rts/StableName.c	/^updateStableNameTable(bool full)$/;"	f
updateThreadLabel	rts/ThreadLabels.c	/^updateThreadLabel(StgWord key, void *data)$/;"	f	file:
updateThunk	rts/Threads.c	/^updateThunk (Capability *cap, StgTSO *tso, StgClosure *thunk, StgClosure *val)$/;"	f
update_MVAR	rts/sm/Storage.c	/^update_MVAR(StgRegTable *reg, StgClosure *p, StgClosure *old_val)$/;"	f
update_bkwd_compact	rts/sm/Compact.c	/^update_bkwd_compact( generation *gen )$/;"	f	file:
update_fwd	rts/sm/Compact.c	/^update_fwd( bdescr *blocks )$/;"	f	file:
update_fwd_compact	rts/sm/Compact.c	/^update_fwd_compact( bdescr *blocks )$/;"	f	file:
update_fwd_large	rts/sm/Compact.c	/^update_fwd_large( bdescr *bd )$/;"	f	file:
update_selector_chain	rts/sm/NonMovingShortcut.c	/^update_selector_chain($/;"	f	file:
updist	libraries/base/cbits/WCsubst.c	/^	int updist;$/;"	m	struct:_convrule_	file:
upper_del	nofib/spectral/simple/simple.c	/^double upper_del(double f[MAXSIZE][MAXSIZE],int zone_x,int zone_y)$/;"	f
usage_text	rts/RtsFlags.c	/^usage_text[] = {$/;"	v	file:
use_foreign_export	testsuite/tests/concurrent/should_run/hs_try_putmvar003_c.c	/^    int use_foreign_export;$/;"	m	struct:callback_queue	file:
use_lock	libffi/build/src/dlmalloc.c	2126;"	d	file:
use_mmap	libffi/build/src/dlmalloc.c	2130;"	d	file:
use_noncontiguous	libffi/build/src/dlmalloc.c	2134;"	d	file:
used	rts/ProfHeap.c	/^            ssize_t used;     \/\/ 'used at least once' closures$/;"	m	struct:_counter::__anon42::__anon43	file:
used	rts/ProfHeap.c	/^    ssize_t    used;$/;"	m	struct:__anon44	file:
userSignals	rts/posix/Signals.c	/^static sigset_t userSignals;$/;"	v	file:
user_data	libffi/build/src/x86/ffi.c	/^  void *user_data;				\/* 36 *\/$/;"	m	struct:closure_frame	file:
usmblks	libffi/build/src/dlmalloc.c	/^  MALLINFO_FIELD_TYPE usmblks;  \/* maximum total allocated space *\/$/;"	m	struct:mallinfo	file:
utf8d	libraries/text/cbits/cbits.c	/^static const uint8_t utf8d[] = {$/;"	v	file:
uu	libffi/build/testsuite/libffi.call/huge_struct.c	/^	long double	uu;$/;"	m	struct:BigStruct	file:
v	libffi/build/src/aarch64/ffi.c	/^  struct _v v[N_V_ARG_REG];$/;"	m	struct:call_context	typeref:struct:call_context::_v	file:
v	libffi/build/testsuite/libffi.call/huge_struct.c	/^	double		v;$/;"	m	struct:BigStruct	file:
v	nofib/gc/fulsom/raster/raster.c	/^    int v;$/;"	m	union:pix::__anon26	file:
v	nofib/real/fem/inC/fem.c	/^        int   u,v,theta; } node_info[MAXNODES];$/;"	m	struct:__anon27	file:
v	nofib/real/fulsom/raster/raster.c	/^    int v;$/;"	m	union:pix::__anon31	file:
va_list	utils/coverity/model.c	/^typedef struct {} va_list;$/;"	t	typeref:struct:__anon58	file:
validate_and_acquire_ownership	rts/STM.c	/^static StgBool validate_and_acquire_ownership (Capability *cap,$/;"	f	file:
value_type	libffi/build/testsuite/libffi.call/float1.c	/^} value_type;$/;"	t	typeref:union:__anon9	file:
value_type	libffi/build/testsuite/libffi.call/float4.c	/^} value_type;$/;"	t	typeref:union:__anon10	file:
valueunitstring	utils/hp2ps/HpFile.c	/^char *valueunitstring;$/;"	v
var	testsuite/tests/ffi/should_run/ffi015_cbits.c	/^int var = 42;$/;"	v
vbarf	rts/RtsMessages.c	/^vbarf(const char*s, va_list ap)$/;"	f
vbarf	utils/coverity/model.c	/^void vbarf(const char *s, va_list ap)$/;"	f
vblldecomp	nofib/real/fem/inC/vblldecomp.c	/^vblldecomp(n,diag,vbm)$/;"	f
vbllsolution	nofib/real/fem/inC/vblldecomp.c	/^vbllsolution(n,diag,mvb,b)$/;"	f
vdebugBelch	rts/RtsMessages.c	/^vdebugBelch(const char*s, va_list ap)$/;"	f
verifyCOFFHeader	rts/linker/PEi386.c	/^verifyCOFFHeader ( uint16_t machine, IMAGE_FILE_HEADER *hdr,$/;"	f	file:
verifyCompact	rts/sm/CNF.c	/^void verifyCompact (StgCompactNFData *str USED_IF_DEBUG)$/;"	f
verifyGot	rts/linker/elf_got.c	/^verifyGot(ObjectCode * oc) {$/;"	f
verify_consistency_block	rts/sm/CNF.c	/^verify_consistency_block (StgCompactNFData *str, StgCompactNFDataBlock *block)$/;"	f	file:
verify_consistency_loop	rts/sm/CNF.c	/^verify_consistency_loop (StgCompactNFData *str)$/;"	f	file:
verify_mut_arr_ptrs	rts/sm/CNF.c	/^verify_mut_arr_ptrs (StgCompactNFData *str,$/;"	f	file:
verrorBelch	rts/RtsMessages.c	/^verrorBelch(const char*s, va_list ap)$/;"	f
vfp_space	libffi/build/src/arm/ffi.c	/^  char vfp_space[8*8] __attribute__((aligned(8)));$/;"	m	struct:closure_frame	file:
vfp_type_p	libffi/build/src/arm/ffi.c	/^vfp_type_p (const ffi_type *ty)$/;"	f	file:
void_total	rts/ProfHeap.c	/^            ssize_t void_total;  \/\/ 'destroyed without being used' closures$/;"	m	struct:_counter::__anon42::__anon43	file:
void_total	rts/ProfHeap.c	/^    ssize_t    void_total;$/;"	m	struct:__anon44	file:
vsysErrorBelch	rts/RtsMessages.c	/^vsysErrorBelch(const char*s, va_list ap)$/;"	f
vtraceCap_stderr	rts/Trace.c	/^static void vtraceCap_stderr(Capability *cap, char *msg, va_list ap)$/;"	f	file:
vtrace_stderr	rts/Trace.c	/^static void vtrace_stderr(char *msg, va_list ap)$/;"	f	file:
vv	libffi/build/testsuite/libffi.call/huge_struct.c	/^	char*		vv;$/;"	m	struct:BigStruct	file:
vx	nofib/spectral/simple/simple.c	/^double vx[MAXSIZE][MAXSIZE], vy[MAXSIZE][MAXSIZE];$/;"	v
vy	nofib/spectral/simple/simple.c	/^double vx[MAXSIZE][MAXSIZE], vy[MAXSIZE][MAXSIZE];$/;"	v
w	libffi/build/testsuite/libffi.call/huge_struct.c	/^	long double	w;$/;"	m	struct:BigStruct	file:
w	libffi/build/testsuite/libffi.call/pyobjc-tc.c	/^	float w;$/;"	m	struct:Size	file:
waitCondition	rts/posix/OSThreads.c	/^waitCondition ( Condition* pCond, Mutex* pMut )$/;"	f
waitCondition	rts/win32/OSThreads.c	/^waitCondition ( Condition* pCond, Mutex* pMut )$/;"	f
waitForCapability	rts/Capability.c	/^void waitForCapability (Capability **pCap, Task *task)$/;"	f
waitForGcThreads	rts/sm/GC.c	/^waitForGcThreads (Capability *cap USED_IF_THREADS, bool idle_cap[])$/;"	f
waitForGcThreads_spin	rts/sm/GC.c	/^volatile StgWord64 waitForGcThreads_spin = 0;$/;"	v
waitForGcThreads_yield	rts/sm/GC.c	/^volatile StgWord64 waitForGcThreads_yield = 0;$/;"	v
waitForJobCompletion	libraries/process/cbits/runProcess.c	/^waitForJobCompletion ( HANDLE hJob, HANDLE ioPort, DWORD timeout, int *pExitCode, setterDef set, getterDef get )$/;"	f
waitForProcess	libraries/process/cbits/runProcess.c	/^int waitForProcess (ProcHandle handle, int *pret)$/;"	f
waitForProcess	libraries/process/cbits/runProcess.c	/^waitForProcess (ProcHandle handle, int *pret)$/;"	f
waitForProcess	utils/hsc2hs/cbits/utils.c	/^waitForProcess (ProcHandle handle, int *pret)$/;"	f	file:
waitForReturnCapability	rts/Capability.c	/^static Capability * waitForReturnCapability (Task *task)$/;"	f	file:
waitForWorkerCapability	rts/Capability.c	/^static Capability * waitForWorkerCapability (Task *task)$/;"	f	file:
wait_handles	rts/win32/AsyncIO.c	/^static HANDLE           wait_handles[2];$/;"	v	file:
wakeBlockingQueue	rts/Threads.c	/^wakeBlockingQueue(Capability *cap, StgBlockingQueue *bq)$/;"	f	file:
wakeUpRts	rts/Schedule.c	/^void wakeUpRts(void)$/;"	f
wakeUpSleepingThreads	rts/posix/Select.c	/^static bool wakeUpSleepingThreads (LowResTime now)$/;"	f	file:
wakeup_gc_threads	rts/sm/GC.c	/^wakeup_gc_threads (uint32_t me USED_IF_THREADS,$/;"	f	file:
warnMissingKBLibraryPaths	rts/Linker.c	/^void warnMissingKBLibraryPaths( void )$/;"	f
weak_stage	rts/sm/MarkWeak.c	/^static WeakStage weak_stage;$/;"	v	file:
weak_test	testsuite/tests/ghci/linking/T3333.c	/^int weak_test(int x) {return x + 1;}$/;"	f
what_next_strs	rts/Printer.c	/^const char *what_next_strs[] = {$/;"	v
whitehole_executeMessage_spin	rts/Stats.c	/^volatile StgWord64 whitehole_executeMessage_spin = 0;$/;"	v
whitehole_gc_spin	rts/sm/GC.c	/^volatile StgWord64 whitehole_gc_spin = 0;$/;"	v
whitehole_lockClosure_spin	rts/Stats.c	/^volatile StgWord64 whitehole_lockClosure_spin = 0;$/;"	v
whitehole_lockClosure_yield	rts/Stats.c	/^volatile StgWord64 whitehole_lockClosure_yield = 0;$/;"	v
whitehole_threadPaused_spin	rts/Stats.c	/^volatile StgWord64 whitehole_threadPaused_spin = 0;$/;"	v
win32AllocStack	rts/StgCRun.c	/^STG_NO_OPTIMIZE StgWord8 *win32AllocStack(void)$/;"	f
win32_acquire_lock	libffi/build/src/dlmalloc.c	/^static int win32_acquire_lock (MLOCK_T *sl) {$/;"	f	file:
win32_full_utf8_argc	rts/RtsFlags.c	/^int       win32_full_utf8_argc = 0;$/;"	v
win32_full_utf8_argv	rts/RtsFlags.c	/^static char** win32_full_utf8_argv;$/;"	v	file:
win32_release_lock	libffi/build/src/dlmalloc.c	/^static void win32_release_lock (MLOCK_T *sl) {$/;"	f	file:
win32_utf8_argv	rts/RtsFlags.c	/^char**    win32_utf8_argv = NULL;$/;"	v
win32direct_mmap	libffi/build/src/dlmalloc.c	/^static void* win32direct_mmap(size_t size) {$/;"	f	file:
win32mmap	libffi/build/src/dlmalloc.c	/^static void* win32mmap(size_t size) {$/;"	f	file:
win32munmap	libffi/build/src/dlmalloc.c	/^static int win32munmap(void* ptr, size_t size) {$/;"	f	file:
win64_call_frame	libffi/build/src/x86/ffiw64.c	/^struct win64_call_frame$/;"	s	file:
win64_closure_frame	libffi/build/src/x86/ffiw64.c	/^struct win64_closure_frame$/;"	s	file:
winsock_inited	libraries/base/tests/IO/T12010/cbits/initWinSock.c	/^static int winsock_inited = 0;$/;"	v	file:
with_copysign	testsuite/tests/rts/T15894/copysign.c	/^with_copysign (double x)$/;"	f
wordread	libraries/binary/benchmarks/CBenchmark.c	/^unsigned int wordread(unsigned long *a, int bytes) {$/;"	f
wordwrite	libraries/binary/benchmarks/CBenchmark.c	/^void wordwrite(unsigned long *a, int bytes) {$/;"	f
work	testsuite/tests/rts/testwsdeque.c	/^void work(void *p, uint32_t n)$/;"	f
workQueue	rts/win32/IOManager.c	/^    WorkQueue*       workQueue;$/;"	m	struct:IOManagerState	file:
work_done	nofib/spectral/simple/simple.c	/^double work_done(int i1,int j1, int i2, int j2, double new_r[MAXSIZE][MAXSIZE],$/;"	f
work_s	nofib/shootout/reverse-complement/revcomp-c.c	/^struct work_s {$/;"	s	file:
work_stealing	rts/sm/GC.c	/^bool work_stealing;$/;"	v
work_t	nofib/shootout/reverse-complement/revcomp-c.c	/^typedef struct work_s work_t;$/;"	t	typeref:struct:work_s	file:
workerCount	rts/Task.c	/^uint32_t workerCount;$/;"	v
workerStart	rts/Task.c	/^workerStart(Task *task)$/;"	f	file:
workerTaskStop	rts/Task.c	/^workerTaskStop (Task *task)$/;"	f
workerWaitingForRequests	rts/win32/AwaitEvent.c	/^static uint32_t workerWaitingForRequests = 0;$/;"	v	file:
workersIdle	rts/win32/IOManager.c	/^    int              workersIdle;$/;"	m	struct:IOManagerState	file:
wptr	rts/Adjustor.c	/^    StgFunPtr       wptr;$/;"	m	struct:AdjustorStub	file:
writeCCSReport	rts/ProfilerReport.c	/^writeCCSReport( FILE *prof_file, CostCentreStack const *stack,$/;"	f
writeCCSReportJson	rts/ProfilerReportJson.c	/^writeCCSReportJson(FILE *prof_file,$/;"	f
writeEventLog	rts/eventlog/EventLog.c	/^writeEventLog(void *eventlog, size_t eventlog_size)$/;"	f	file:
writeEventLogFile	rts/eventlog/EventLogWriter.c	/^writeEventLogFile(void *eventlog, size_t eventlog_size)$/;"	f	file:
writeTix	rts/Hpc.c	/^writeTix(FILE *f) {$/;"	f	file:
writeerror	utils/unlit/unlit.c	/^static void writeerror(void)$/;"	f	file:
writer	testsuite/tests/rts/InitEventLogging_c.c	/^const EventLogWriter writer = {$/;"	v
ws	rts/Hpc.c	/^static void ws(void) {$/;"	f	file:
ww	libffi/build/testsuite/libffi.call/huge_struct.c	/^	uint8_t		ww;$/;"	m	struct:BigStruct	file:
x	libffi/build/src/aarch64/ffi.c	/^  UINT64 x[N_X_ARG_REG];$/;"	m	struct:call_context	file:
x	libffi/build/src/ia64/ffi.c	/^  UINT64 x[2] __attribute__((aligned(16)));$/;"	m	struct:__anon2	file:
x	libffi/build/testsuite/libffi.call/cls_dbls_struct.c	/^	double x;$/;"	m	struct:Dbls	file:
x	libffi/build/testsuite/libffi.call/huge_struct.c	/^	char*		x;$/;"	m	struct:BigStruct	file:
x	libffi/build/testsuite/libffi.call/nested_struct10.c	/^  struct A x;$/;"	m	struct:B	typeref:struct:B::A	file:
x	libffi/build/testsuite/libffi.call/nested_struct2.c	/^  struct A x;$/;"	m	struct:B	typeref:struct:B::A	file:
x	libffi/build/testsuite/libffi.call/nested_struct3.c	/^  struct A x;$/;"	m	struct:B	typeref:struct:B::A	file:
x	libffi/build/testsuite/libffi.call/nested_struct4.c	/^  struct A x;$/;"	m	struct:B	typeref:struct:B::A	file:
x	libffi/build/testsuite/libffi.call/nested_struct5.c	/^  struct A x;$/;"	m	struct:B	typeref:struct:B::A	file:
x	libffi/build/testsuite/libffi.call/nested_struct6.c	/^  struct A x;$/;"	m	struct:B	typeref:struct:B::A	file:
x	libffi/build/testsuite/libffi.call/nested_struct7.c	/^  struct A x;$/;"	m	struct:B	typeref:struct:B::A	file:
x	libffi/build/testsuite/libffi.call/nested_struct8.c	/^  struct A x;$/;"	m	struct:B	typeref:struct:B::A	file:
x	libffi/build/testsuite/libffi.call/nested_struct9.c	/^  struct A x;$/;"	m	struct:B	typeref:struct:B::A	file:
x	libffi/build/testsuite/libffi.call/pyobjc-tc.c	/^	float x;$/;"	m	struct:Point	file:
x	nofib/real/fem/inC/fem.c	/^        float  x,y;$/;"	m	struct:__anon27	file:
x	testsuite/tests/rts/T7040_c.c	/^int x = 0;$/;"	v
x	testsuite/tests/rts/T7040_ghci_c.c	/^int x = 0;$/;"	v
x	utils/hp2ps/Curves.c	/^static floatish *x;		\/* x and y values  *\/$/;"	v	file:
x	utils/hsc2hs/test/asm/tmp.c	/^unsigned long long x = (unsigned long long)((struct S *)X);$/;"	v
x86_64_reg_class	libffi/build/src/x86/ffi64.c	/^enum x86_64_reg_class$/;"	g	file:
x86_init_fpu	rts/RtsStartup.c	/^x86_init_fpu ( void )$/;"	f	file:
x___hsc2hs_sign___	utils/hsc2hs/test/asm/tmp.c	/^unsigned long long x___hsc2hs_sign___ = ((struct S *)X) < 0;$/;"	v
xmalloc	utils/hp2ps/Utilities.c	/^xmalloc(size_t n)$/;"	f
xpage	utils/hp2ps/Curves.c	/^xpage(floatish x)$/;"	f
xrange	utils/hp2ps/Main.c	/^floatish xrange = 0.0;$/;"	v
xrealloc	utils/hp2ps/Utilities.c	/^xrealloc(void *p, size_t n)$/;"	f
xx	libffi/build/testsuite/libffi.call/huge_struct.c	/^	int8_t		xx;$/;"	m	struct:BigStruct	file:
xx	nofib/spectral/simple/simple.c	/^double xx[MAXSIZE][MAXSIZE], xy[MAXSIZE][MAXSIZE];$/;"	v
xy	nofib/spectral/simple/simple.c	/^double xx[MAXSIZE][MAXSIZE], xy[MAXSIZE][MAXSIZE];$/;"	v
y	libffi/build/testsuite/libffi.call/cls_dbls_struct.c	/^	double y;$/;"	m	struct:Dbls	file:
y	libffi/build/testsuite/libffi.call/huge_struct.c	/^	uint8_t		y;$/;"	m	struct:BigStruct	file:
y	libffi/build/testsuite/libffi.call/nested_struct10.c	/^  unsigned char y;$/;"	m	struct:B	file:
y	libffi/build/testsuite/libffi.call/nested_struct2.c	/^  unsigned char y;$/;"	m	struct:B	file:
y	libffi/build/testsuite/libffi.call/nested_struct3.c	/^  unsigned char y;$/;"	m	struct:B	file:
y	libffi/build/testsuite/libffi.call/nested_struct4.c	/^  unsigned char y;$/;"	m	struct:B	file:
y	libffi/build/testsuite/libffi.call/nested_struct5.c	/^  unsigned char y;$/;"	m	struct:B	file:
y	libffi/build/testsuite/libffi.call/nested_struct6.c	/^  unsigned char y;$/;"	m	struct:B	file:
y	libffi/build/testsuite/libffi.call/nested_struct7.c	/^  unsigned char y;$/;"	m	struct:B	file:
y	libffi/build/testsuite/libffi.call/nested_struct8.c	/^  unsigned char y;$/;"	m	struct:B	file:
y	libffi/build/testsuite/libffi.call/nested_struct9.c	/^  unsigned char y;$/;"	m	struct:B	file:
y	libffi/build/testsuite/libffi.call/pyobjc-tc.c	/^	float y;$/;"	m	struct:Point	file:
y	nofib/real/fem/inC/fem.c	/^        float  x,y;$/;"	m	struct:__anon27	file:
y	utils/hp2ps/Curves.c	/^static floatish *y;$/;"	v	file:
y	utils/hsc2hs/test/asm/tmp.c	/^unsigned long long y = (unsigned long long)((struct S *)Y);$/;"	v
y___hsc2hs_sign___	utils/hsc2hs/test/asm/tmp.c	/^unsigned long long y___hsc2hs_sign___ = ((struct S *)Y) < 0;$/;"	v
yflag	utils/hp2ps/Main.c	/^boolish yflag = 0; 	\/* ignore marks				*\/$/;"	v
yieldCapability	rts/Capability.c	/^yieldCapability (Capability** pCap, Task *task, bool gcAllowed)$/;"	f
yieldThread	rts/posix/OSThreads.c	/^yieldThread(void)$/;"	f
yieldThread	rts/win32/OSThreads.c	/^yieldThread()$/;"	f
ypage	utils/hp2ps/Curves.c	/^ypage(floatish y)$/;"	f
yrange	utils/hp2ps/Main.c	/^floatish yrange = 0.0;$/;"	v
z	libffi/build/testsuite/libffi.call/huge_struct.c	/^	int8_t		z;$/;"	m	struct:BigStruct	file:
z	libffi/build/testsuite/libffi.call/nested_struct10.c	/^  unsigned int z;$/;"	m	struct:B	file:
z	utils/hsc2hs/test/asm/tmp.c	/^unsigned long long z = (unsigned long long)Y;$/;"	v
z___hsc2hs_sign___	utils/hsc2hs/test/asm/tmp.c	/^unsigned long long z___hsc2hs_sign___ = Y < 0;$/;"	v
zapTrailingAtSign	rts/linker/PEi386.c	/^zapTrailingAtSign ( SymbolName* sym )$/;"	f	file:
zonal_energy	nofib/spectral/simple/simple.c	/^double zonal_energy(double rho_value, double theta_value)$/;"	f
zonal_pressure	nofib/spectral/simple/simple.c	/^double zonal_pressure(double rho_value, double theta_value)$/;"	f
zone_area_vol	nofib/spectral/simple/simple.c	/^int zone_area_vol(double *zone_area, double *zone_volume, double r[MAXSIZE][MAXSIZE],$/;"	f
