!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AARGLIST	structs.h	847;"	d
ABBREV	vim.h	694;"	d
ABBR_OFF	keymap.h	43;"	d
ABS	gui_at_fs.c	1003;"	d	file:
ABS	gui_at_fs.c	1005;"	d	file:
ACCESS_MASK	os_win32.c	/^typedef int ACCESS_MASK;$/;"	t	file:
ACTION_EXPAND	vim.h	868;"	d
ACTION_GOTO	vim.h	865;"	d
ACTION_SHOW	vim.h	864;"	d
ACTION_SHOW_ALL	vim.h	867;"	d
ACTION_SPLIT	vim.h	866;"	d
ADDR_ARGUMENTS	ex_cmds.h	/^    ADDR_ARGUMENTS,	 \/\/ argument number$/;"	e	enum:__anon142
ADDR_BUFFERS	ex_cmds.h	/^    ADDR_BUFFERS,	 \/\/ buffer number$/;"	e	enum:__anon142
ADDR_LINES	ex_cmds.h	/^    ADDR_LINES,		 \/\/ buffer line numbers$/;"	e	enum:__anon142
ADDR_LOADED_BUFFERS	ex_cmds.h	/^    ADDR_LOADED_BUFFERS, \/\/ buffer number of loaded buffer$/;"	e	enum:__anon142
ADDR_NONE	ex_cmds.h	/^    ADDR_NONE		 \/\/ no range used$/;"	e	enum:__anon142
ADDR_OTHER	ex_cmds.h	/^    ADDR_OTHER,		 \/\/ something else, use line number for '$', '%', etc.$/;"	e	enum:__anon142
ADDR_QUICKFIX	ex_cmds.h	/^    ADDR_QUICKFIX,	 \/\/ quickfix list entry number$/;"	e	enum:__anon142
ADDR_QUICKFIX_VALID	ex_cmds.h	/^    ADDR_QUICKFIX_VALID, \/\/ quickfix list valid entry number$/;"	e	enum:__anon142
ADDR_TABS	ex_cmds.h	/^    ADDR_TABS,		 \/\/ tab page number$/;"	e	enum:__anon142
ADDR_TABS_RELATIVE	ex_cmds.h	/^    ADDR_TABS_RELATIVE,	 \/\/ Tab page that only relative$/;"	e	enum:__anon142
ADDR_UNSIGNED	ex_cmds.h	/^    ADDR_UNSIGNED,	 \/\/ positive count or zero, defaults to 1$/;"	e	enum:__anon142
ADDR_WINDOWS	ex_cmds.h	/^    ADDR_WINDOWS,	 \/\/ window number$/;"	e	enum:__anon142
ADDSTATE_HERE_OFFSET	regexp_nfa.c	4281;"	d	file:
ADD_CHECKED_OBJECT	if_py_both.h	6814;"	d
ADD_ICON	gui_gtk.c	433;"	d	file:
ADD_ICON	gui_gtk.c	449;"	d	file:
ADD_NL	regexp_bt.c	166;"	d	file:
ADD_OBJECT	if_py_both.h	6810;"	d
ADD_STATE_IF_MATCH	regexp_nfa.c	5624;"	d	file:
ADD_STATE_IF_MATCH	regexp_nfa.c	6958;"	d	file:
ADVANCE_REGINPUT	regexp_bt.c	2450;"	d	file:
AFT_CAPLONG	spellfile.c	1793;"	d	file:
AFT_CHAR	spellfile.c	1791;"	d	file:
AFT_LONG	spellfile.c	1792;"	d	file:
AFT_NUM	spellfile.c	1794;"	d	file:
AH_KEY_LEN	spellfile.c	1810;"	d	file:
AKEYLEN	dict.c	583;"	d	file:
ALIGN_LONG	structs.h	428;"	d
ALIGN_MASK	structs.h	431;"	d
ALIGN_SIZE	structs.h	429;"	d
ALIST	structs.h	843;"	d
ALLOC_CLEAR_MULT	vim.h	1579;"	d
ALLOC_CLEAR_ONE	vim.h	1578;"	d
ALLOC_MULT	vim.h	1577;"	d
ALLOC_ONE	vim.h	1576;"	d
ALL_BUILTIN_TCAPS	feature.h	458;"	d
ALL_WHITE_DIFF	diff.c	39;"	d	file:
ALPHA	regexp_bt.c	192;"	d	file:
ALT	os_win32.c	843;"	d	file:
ALT_GR	os_win32.c	844;"	d	file:
ALWAYS_USE_GUI	feature.h	662;"	d
AL_ADD	arglist.c	17;"	d	file:
AL_DEL	arglist.c	18;"	d	file:
AL_SET	arglist.c	16;"	d	file:
ANCHOR_BUF_SIZE	os_amiga.c	1447;"	d	file:
ANCHOR_BUF_SIZE	os_amiga.c	1449;"	d	file:
ANCHOR_SIZE	os_amiga.c	1450;"	d	file:
ANY	regexp_bt.c	168;"	d	file:
ANYBUT	regexp_bt.c	170;"	d	file:
ANYOF	regexp_bt.c	169;"	d	file:
APC_SAVE_FOR_UNDO	vim.h	2655;"	d
APC_SUBSTITUTE	vim.h	2656;"	d
APIENTRY	gui_w32.c	238;"	d	file:
APPENDBIN	vim.h	1546;"	d
APPENDBIN	vim.h	1550;"	d
APP_ADD_DIR	scriptfile.c	/^static int APP_ADD_DIR;$/;"	v	file:
APP_BOTH	scriptfile.c	/^static int APP_BOTH;$/;"	v	file:
APP_LOAD	scriptfile.c	/^static int APP_LOAD;$/;"	v	file:
ARABIC_CHAR	macros.h	213;"	d
ARGCOUNT	structs.h	849;"	d
ARGLIST	structs.h	845;"	d
ARGTYPE_EDIT	main.c	3835;"	d	file:
ARGTYPE_EDIT_WAIT	main.c	3836;"	d	file:
ARGTYPE_OTHER	main.c	3834;"	d	file:
ARGTYPE_SEND	main.c	3837;"	d	file:
ARG_BACKGROUND	gui_gtk_x11.c	293;"	d	file:
ARG_COMPAT_LONG	gui_gtk_x11.c	304;"	d	file:
ARG_FONT	gui_gtk_x11.c	289;"	d	file:
ARG_FOREGROUND	gui_gtk_x11.c	294;"	d	file:
ARG_FOR_GTK	gui_gtk_x11.c	303;"	d	file:
ARG_GEOMETRY	gui_gtk_x11.c	290;"	d	file:
ARG_HAS_VALUE	gui_gtk_x11.c	301;"	d	file:
ARG_ICONIC	gui_gtk_x11.c	295;"	d	file:
ARG_INDEX_MASK	gui_gtk_x11.c	300;"	d	file:
ARG_KEEP	gui_gtk_x11.c	305;"	d	file:
ARG_MENUFONT	gui_gtk_x11.c	299;"	d	file:
ARG_NEEDS_GUI	gui_gtk_x11.c	302;"	d	file:
ARG_NETBEANS	gui_gtk_x11.c	297;"	d	file:
ARG_NOREVERSE	gui_gtk_x11.c	292;"	d	file:
ARG_REVERSE	gui_gtk_x11.c	291;"	d	file:
ARG_ROLE	gui_gtk_x11.c	296;"	d	file:
ARG_XRM	gui_gtk_x11.c	298;"	d	file:
ARRAY_LENGTH	blowfish.c	26;"	d	file:
ARRAY_LENGTH	gui_photon.c	37;"	d	file:
ARRAY_SIZE	arabic.c	166;"	d	file:
ASCII_ISALNUM	macros.h	104;"	d
ASCII_ISALNUM	macros.h	111;"	d
ASCII_ISALPHA	macros.h	103;"	d
ASCII_ISALPHA	macros.h	110;"	d
ASCII_ISLOWER	macros.h	105;"	d
ASCII_ISLOWER	macros.h	108;"	d
ASCII_ISUPPER	macros.h	106;"	d
ASCII_ISUPPER	macros.h	109;"	d
ASKMORE	vim.h	692;"	d
ASSERT	nbdebug.h	17;"	d
ASSERT	nbdebug.h	60;"	d
ASSERT	os_win32.h	160;"	d
ASSERT	os_win32.h	163;"	d
ASSERT	os_win32.h	180;"	d
ASSERT_EQUAL	vim.h	/^    ASSERT_EQUAL,$/;"	e	enum:__anon280
ASSERT_MATCH	vim.h	/^    ASSERT_MATCH,$/;"	e	enum:__anon280
ASSERT_NOTEQUAL	vim.h	/^    ASSERT_NOTEQUAL,$/;"	e	enum:__anon280
ASSERT_NOTMATCH	vim.h	/^    ASSERT_NOTMATCH,$/;"	e	enum:__anon280
ASSERT_NULL_OR_POINTER	os_win32.h	194;"	d
ASSERT_OTHER	vim.h	/^    ASSERT_OTHER$/;"	e	enum:__anon280
ASSERT_POINTER	os_win32.h	191;"	d
ATC_FROM_TERM	term.c	3945;"	d	file:
ATTR_COMBINE	highlight.c	31;"	d	file:
ATTR_OFF	highlight.c	89;"	d	file:
AT_MAX	gui_at_sb.c	218;"	d	file:
AT_MIN	gui_at_sb.c	217;"	d	file:
AUGROUP_ALL	autocmd.c	217;"	d	file:
AUGROUP_DEFAULT	autocmd.c	215;"	d	file:
AUGROUP_ERROR	autocmd.c	216;"	d	file:
AUGROUP_NAME	autocmd.c	242;"	d	file:
AUTOLOAD_CHAR	vim.h	2497;"	d
AUTOMATIC_ENGINE	regexp.h	38;"	d
A_acute	regexp_nfa.c	703;"	d	file:
A_circumflex	regexp_nfa.c	700;"	d	file:
A_diaeresis	regexp_nfa.c	701;"	d	file:
A_grave	regexp_nfa.c	702;"	d	file:
A_is_iso	arabic.c	/^A_is_iso(int c)$/;"	f	file:
A_is_ok	arabic.c	/^A_is_ok(int c)$/;"	f	file:
A_is_valid	arabic.c	/^A_is_valid(int c)$/;"	f	file:
A_ring	regexp_nfa.c	705;"	d	file:
A_virguilla	regexp_nfa.c	704;"	d	file:
AbortProc	os_mswin.c	/^AbortProc(HDC hdcPrn UNUSED, int iCode UNUSED)$/;"	f	file:
Add	if_cscope.h	/^typedef enum { Add, Find, Help, Kill, Reset, Show } csid_e;$/;"	e	enum:__anon148
AddRef	if_ole.h	/^	ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )($/;"	m	struct:IVimVtbl
AllocBotShadowGC	gui_at_sb.c	/^AllocBotShadowGC(Widget w)$/;"	f	file:
AllocTopShadowGC	gui_at_sb.c	/^AllocTopShadowGC(Widget w)$/;"	f	file:
AlwaysFalse	if_py_both.h	/^AlwaysFalse(PyObject *self UNUSED)$/;"	f
AlwaysNone	if_py_both.h	/^AlwaysNone(PyObject *self UNUSED)$/;"	f
AlwaysTrue	if_py_both.h	/^AlwaysTrue(PyObject *self UNUSED)$/;"	f
AppendCharToRedobuff	getchar.c	/^AppendCharToRedobuff(int c)$/;"	f
AppendNumberToRedobuff	getchar.c	/^AppendNumberToRedobuff(long n)$/;"	f
AppendPropCarefully	if_xcmdsrv.c	/^AppendPropCarefully($/;"	f	file:
AppendToRedobuff	getchar.c	/^AppendToRedobuff(char_u *s)$/;"	f
AppendToRedobuffLit	getchar.c	/^AppendToRedobuffLit($/;"	f
ArglistW	os_win32.c	/^static LPWSTR	*ArglistW = NULL;$/;"	v	file:
ArpBase	os_amiga.c	/^struct ArpBase		*ArpBase = NULL;$/;"	v	typeref:struct:ArpBase
AutoCmd	autocmd.c	/^typedef struct AutoCmd$/;"	s	file:
AutoCmd	autocmd.c	/^} AutoCmd;$/;"	t	typeref:struct:AutoCmd	file:
AutoPat	autocmd.c	/^typedef struct AutoPat$/;"	s	file:
AutoPat	autocmd.c	/^} AutoPat;$/;"	t	typeref:struct:AutoPat	file:
AutoPatCmd	structs.h	/^typedef struct AutoPatCmd_S AutoPatCmd;$/;"	t	typeref:struct:AutoPatCmd_S
AutoPatCmd_S	autocmd.c	/^struct AutoPatCmd_S$/;"	s	file:
B0_DIRTY	memline.c	184;"	d	file:
B0_FF_MASK	memline.c	201;"	d	file:
B0_FNAME_SIZE_CRYPT	memline.c	135;"	d	file:
B0_FNAME_SIZE_NOCRYPT	memline.c	134;"	d	file:
B0_FNAME_SIZE_ORG	memline.c	133;"	d	file:
B0_HAS_FENC	memline.c	209;"	d	file:
B0_HNAME_SIZE	memline.c	137;"	d	file:
B0_MAGIC_CHAR	memline.c	146;"	d	file:
B0_MAGIC_INT	memline.c	144;"	d	file:
B0_MAGIC_LONG	memline.c	143;"	d	file:
B0_MAGIC_SHORT	memline.c	145;"	d	file:
B0_SAME_DIR	memline.c	205;"	d	file:
B0_UNAME_SIZE	memline.c	136;"	d	file:
BACK	regexp_bt.c	143;"	d	file:
BACKGROUND	gui_x11_pm.h	88;"	d
BACKPOS_INITIAL	regexp_bt.c	389;"	d	file:
BACKREF	regexp_bt.c	206;"	d	file:
BACKSLASH_IN_FILENAME	os_dos.h	132;"	d
BACKSPACE_CHAR	edit.c	16;"	d	file:
BACKSPACE_LINE	edit.c	19;"	d	file:
BACKSPACE_WORD	edit.c	17;"	d	file:
BACKSPACE_WORD_NOT_SPACE	edit.c	18;"	d	file:
BACKTRACKING_ENGINE	regexp.h	39;"	d
BACKWARD	vim.h	707;"	d
BACKWARD_FILE	vim.h	709;"	d
BAD_DROP	vim.h	2442;"	d
BAD_KEEP	vim.h	2441;"	d
BAD_REPLACE	vim.h	2440;"	d
BALLOON_MIN_HEIGHT	popupmenu.c	1128;"	d	file:
BALLOON_MIN_WIDTH	popupmenu.c	1127;"	d	file:
BARTYPE_HISTORY	vim.h	1113;"	d
BARTYPE_MARK	vim.h	1115;"	d
BARTYPE_REGISTER	vim.h	1114;"	d
BARTYPE_VERSION	vim.h	1112;"	d
BASENAMELEN	os_amiga.h	51;"	d
BASENAMELEN	os_unix.h	160;"	d
BASENAMELEN	os_win32.h	111;"	d
BC	term.c	/^char *UP, *BC, PC;$/;"	v
BC	termlib.c	/^char	*UP = 0, *BC = 0;     \/\/ Pointers to UP and BC strings from database$/;"	v
BCO_ALWAYS	vim.h	1073;"	d
BCO_ENTER	vim.h	1072;"	d
BCO_NOHELP	vim.h	1074;"	d
BEHIND	regexp_bt.c	152;"	d	file:
BELL	ascii.h	104;"	d
BELL	ascii.h	25;"	d
BEOS_DR8	os_beos.h	20;"	d
BEOS_PR_OR_BETTER	os_beos.h	21;"	d
BEVAL_NETBEANS	globals.h	1336;"	d
BEVAL_TEXT_LEN	gui_w32.c	3927;"	d	file:
BEVAL__H	beval.h	11;"	d
BFA_DEL	vim.h	2456;"	d
BFA_IGNORE_ABORT	vim.h	2459;"	d
BFA_KEEP_UNDO	vim.h	2458;"	d
BFA_WIPE	vim.h	2457;"	d
BF_BLOCK	blowfish.c	28;"	d	file:
BF_BLOCK_MASK	blowfish.c	29;"	d	file:
BF_CFB_UPDATE	blowfish.c	578;"	d	file:
BF_CHECK_RO	vim.h	721;"	d
BF_DUMMY	vim.h	732;"	d
BF_MAX_CFB_LEN	blowfish.c	30;"	d	file:
BF_NEVERLOADED	vim.h	724;"	d
BF_NEW	vim.h	729;"	d
BF_NEW_W	vim.h	730;"	d
BF_NOTEDITED	vim.h	726;"	d
BF_NO_SEA	vim.h	735;"	d
BF_PRESERVED	vim.h	733;"	d
BF_RANBYTE	blowfish.c	584;"	d	file:
BF_READERR	vim.h	731;"	d
BF_RECOVERED	vim.h	720;"	d
BF_SYN_SET	vim.h	734;"	d
BF_WRITE_MASK	vim.h	738;"	d
BHPOS	regexp_bt.c	162;"	d	file:
BH_DIRTY	structs.h	510;"	d
BH_LOCKED	structs.h	511;"	d
BINARY_FILE_IO	os_mac.h	95;"	d
BINARY_FILE_IO	os_mint.h	13;"	d
BINARY_FILE_IO	os_unix.h	38;"	d
BINARY_FILE_IO	os_vms_conf.h	8;"	d
BINARY_FILE_IO	os_win32.h	21;"	d
BKC_AUTO	option.h	397;"	d
BKC_BREAKHARDLINK	option.h	400;"	d
BKC_BREAKSYMLINK	option.h	399;"	d
BKC_NO	option.h	398;"	d
BKC_YES	option.h	396;"	d
BLINK_NONE	gui_gtk_x11.c	840;"	d	file:
BLINK_NONE	gui_photon.c	/^    BLINK_NONE,$/;"	e	enum:__anon44	file:
BLINK_NONE	gui_w32.c	547;"	d	file:
BLINK_NONE	gui_x11.c	3023;"	d	file:
BLINK_OFF	gui_gtk_x11.c	841;"	d	file:
BLINK_OFF	gui_photon.c	/^    BLINK_OFF,$/;"	e	enum:__anon44	file:
BLINK_OFF	gui_w32.c	548;"	d	file:
BLINK_OFF	gui_x11.c	3024;"	d	file:
BLINK_ON	gui_gtk_x11.c	842;"	d	file:
BLINK_ON	gui_photon.c	/^    BLINK_ON$/;"	e	enum:__anon44	file:
BLINK_ON	gui_w32.c	549;"	d	file:
BLINK_ON	gui_x11.c	3025;"	d	file:
BLN_CURBUF	vim.h	942;"	d
BLN_DUMMY	vim.h	944;"	d
BLN_DUMMY_OK	vim.h	947;"	d
BLN_LISTED	vim.h	943;"	d
BLN_NEW	vim.h	945;"	d
BLN_NOOPT	vim.h	946;"	d
BLN_REUSE	vim.h	948;"	d
BLOCK0_ID0	memline.c	62;"	d	file:
BLOCK0_ID1	memline.c	63;"	d	file:
BLOCK0_ID1_C0	memline.c	64;"	d	file:
BLOCK0_ID1_C1	memline.c	65;"	d	file:
BLOCK0_ID1_C2	memline.c	66;"	d	file:
BLOCK_SCOPE	vim9compile.c	/^    BLOCK_SCOPE$/;"	e	enum:__anon129	file:
BLOCK_SIGNALS	os_unix.c	187;"	d	file:
BLOCK_SIGNALS	os_unix.c	191;"	d	file:
BLUE	term.c	2949;"	d	file:
BL_FIX	vim.h	1063;"	d
BL_SOL	vim.h	1062;"	d
BL_WHITE	vim.h	1061;"	d
BMenu	gui_haiku.h	/^typedef struct BMenu BMenu;$/;"	t	typeref:struct:BMenu
BMenuItem	gui_haiku.h	/^typedef struct BMenuItem BMenuItem;$/;"	t	typeref:struct:BMenuItem
BOL	regexp_bt.c	139;"	d	file:
BOOL	gui_w32.c	/^typedef int BOOL;$/;"	t	file:
BOOL	os_mswin.c	/^typedef int BOOL;$/;"	t	file:
BOOL	os_win32.c	/^typedef int BOOL;$/;"	t	file:
BOOL	terminal.c	/^typedef int BOOL;$/;"	t	file:
BOTTOM_SHADOW	gui_x11_pm.h	90;"	d
BOW	regexp_bt.c	157;"	d	file:
BO_ALL	option.h	407;"	d
BO_BS	option.h	408;"	d
BO_COMPL	option.h	410;"	d
BO_COPY	option.h	411;"	d
BO_CRSR	option.h	409;"	d
BO_CTRLG	option.h	412;"	d
BO_ERROR	option.h	413;"	d
BO_ESC	option.h	414;"	d
BO_EX	option.h	415;"	d
BO_HANGUL	option.h	416;"	d
BO_IM	option.h	417;"	d
BO_LANG	option.h	418;"	d
BO_MATCH	option.h	420;"	d
BO_MESS	option.h	419;"	d
BO_OPER	option.h	421;"	d
BO_REG	option.h	422;"	d
BO_SH	option.h	423;"	d
BO_SPELL	option.h	424;"	d
BO_WILD	option.h	425;"	d
BPictureButton	gui_haiku.h	/^typedef struct BPictureButton BPictureButton;$/;"	t	typeref:struct:BPictureButton
BRACE_AT_END	cindent.c	2048;"	d	file:
BRACE_AT_START	cindent.c	2047;"	d	file:
BRACE_COMPLEX	regexp_bt.c	215;"	d	file:
BRACE_IN_COL0	cindent.c	2046;"	d	file:
BRACE_LIMITS	regexp_bt.c	159;"	d	file:
BRACE_SIMPLE	regexp_bt.c	155;"	d	file:
BRANCH	regexp_bt.c	141;"	d	file:
BREAKCHECK_SKIP	misc1.c	2198;"	d	file:
BREAKCHECK_SKIP	os_mac.h	89;"	d
BREAKCHECK_SKIP	os_win32.h	66;"	d
BREAKP	debugger.c	518;"	d	file:
BROKEN_LOCALE	os_vms_conf.h	177;"	d
BROKEN_LOCALE	os_vms_conf.h	186;"	d
BROKEN_TOUPPER	os_win32.h	79;"	d
BROWSE_DIR	vim.h	2220;"	d
BROWSE_FILTER_ALL_FILES	vim.h	2209;"	d
BROWSE_FILTER_ALL_FILES	vim.h	2215;"	d
BROWSE_FILTER_DEFAULT	vim.h	2210;"	d
BROWSE_FILTER_DEFAULT	vim.h	2216;"	d
BROWSE_FILTER_MACROS	vim.h	2207;"	d
BROWSE_FILTER_MACROS	vim.h	2213;"	d
BROWSE_SAVE	vim.h	2219;"	d
BS	ascii.h	105;"	d
BS	ascii.h	26;"	d
BS_EOL	option.h	348;"	d
BS_INDENT	option.h	347;"	d
BS_START	option.h	349;"	d
BT_EXTRA_KEYS	term.c	75;"	d	file:
BT_REGEXP_DEBUG_LOG	regexp.c	19;"	d	file:
BT_REGEXP_DEBUG_LOG_NAME	regexp.c	20;"	d	file:
BT_REGEXP_DUMP	regexp.c	16;"	d	file:
BT_REGEXP_LOG	regexp.c	18;"	d	file:
BUF2SIZE	os_amiga.c	317;"	d	file:
BUFEMPTY	macros.h	53;"	d
BUFFER_REF	if_mzsch.c	213;"	d	file:
BUFFER_REF	if_mzsch.c	216;"	d	file:
BUFFER_SIZE	if_python.c	1121;"	d	file:
BUFFER_SIZE	if_python3.c	1059;"	d	file:
BUFLEN	os_unix.c	4795;"	d	file:
BUFLEN	os_win32.c	4039;"	d	file:
BUFPATHLEN	gui_w32.c	3633;"	d	file:
BUFSIZE	dosinst.h	52;"	d
BUF_DIFF_FILTER	vim.h	823;"	d
BUF_HAS_LL_ENTRY	structs.h	2556;"	d
BUF_HAS_QF_ENTRY	structs.h	2555;"	d
BUF_PYTHON_REF	if_python.c	786;"	d	file:
BUF_PYTHON_REF	if_python3.c	788;"	d	file:
BUTTON_MASK	gui_xmebw.c	482;"	d	file:
BVAL_EMPTY	viminfo.c	/^    BVAL_EMPTY$/;"	e	enum:__anon136	file:
BVAL_NR	viminfo.c	/^    BVAL_NR,$/;"	e	enum:__anon136	file:
BVAL_STRING	viminfo.c	/^    BVAL_STRING,$/;"	e	enum:__anon136	file:
BV_AI	option.h	/^    BV_AI = 0$/;"	e	enum:__anon171
BV_AR	option.h	/^    , BV_AR$/;"	e	enum:__anon171
BV_BEXPR	option.h	/^    , BV_BEXPR$/;"	e	enum:__anon171
BV_BH	option.h	/^    , BV_BH$/;"	e	enum:__anon171
BV_BIN	option.h	/^    , BV_BIN$/;"	e	enum:__anon171
BV_BKC	option.h	/^    , BV_BKC$/;"	e	enum:__anon171
BV_BL	option.h	/^    , BV_BL$/;"	e	enum:__anon171
BV_BOMB	option.h	/^    , BV_BOMB$/;"	e	enum:__anon171
BV_BT	option.h	/^    , BV_BT$/;"	e	enum:__anon171
BV_CFU	option.h	/^    , BV_CFU$/;"	e	enum:__anon171
BV_CI	option.h	/^    , BV_CI$/;"	e	enum:__anon171
BV_CIN	option.h	/^    , BV_CIN$/;"	e	enum:__anon171
BV_CINK	option.h	/^    , BV_CINK$/;"	e	enum:__anon171
BV_CINO	option.h	/^    , BV_CINO$/;"	e	enum:__anon171
BV_CINW	option.h	/^    , BV_CINW$/;"	e	enum:__anon171
BV_CM	option.h	/^    , BV_CM$/;"	e	enum:__anon171
BV_CMS	option.h	/^    , BV_CMS$/;"	e	enum:__anon171
BV_COM	option.h	/^    , BV_COM$/;"	e	enum:__anon171
BV_COUNT	option.h	/^    , BV_COUNT	    \/\/ must be the last one$/;"	e	enum:__anon171
BV_CPT	option.h	/^    , BV_CPT$/;"	e	enum:__anon171
BV_CSL	option.h	/^    , BV_CSL$/;"	e	enum:__anon171
BV_DEF	option.h	/^    , BV_DEF$/;"	e	enum:__anon171
BV_DICT	option.h	/^    , BV_DICT$/;"	e	enum:__anon171
BV_EFM	option.h	/^    , BV_EFM$/;"	e	enum:__anon171
BV_EOL	option.h	/^    , BV_EOL$/;"	e	enum:__anon171
BV_EP	option.h	/^    , BV_EP$/;"	e	enum:__anon171
BV_ET	option.h	/^    , BV_ET$/;"	e	enum:__anon171
BV_FENC	option.h	/^    , BV_FENC$/;"	e	enum:__anon171
BV_FEX	option.h	/^    , BV_FEX$/;"	e	enum:__anon171
BV_FF	option.h	/^    , BV_FF$/;"	e	enum:__anon171
BV_FIXEOL	option.h	/^    , BV_FIXEOL$/;"	e	enum:__anon171
BV_FLP	option.h	/^    , BV_FLP$/;"	e	enum:__anon171
BV_FO	option.h	/^    , BV_FO$/;"	e	enum:__anon171
BV_FP	option.h	/^    , BV_FP$/;"	e	enum:__anon171
BV_FT	option.h	/^    , BV_FT$/;"	e	enum:__anon171
BV_GP	option.h	/^    , BV_GP$/;"	e	enum:__anon171
BV_IMI	option.h	/^    , BV_IMI$/;"	e	enum:__anon171
BV_IMS	option.h	/^    , BV_IMS$/;"	e	enum:__anon171
BV_INC	option.h	/^    , BV_INC$/;"	e	enum:__anon171
BV_INDE	option.h	/^    , BV_INDE$/;"	e	enum:__anon171
BV_INDK	option.h	/^    , BV_INDK$/;"	e	enum:__anon171
BV_INEX	option.h	/^    , BV_INEX$/;"	e	enum:__anon171
BV_INF	option.h	/^    , BV_INF$/;"	e	enum:__anon171
BV_ISK	option.h	/^    , BV_ISK$/;"	e	enum:__anon171
BV_KEY	option.h	/^    , BV_KEY$/;"	e	enum:__anon171
BV_KMAP	option.h	/^    , BV_KMAP$/;"	e	enum:__anon171
BV_KP	option.h	/^    , BV_KP$/;"	e	enum:__anon171
BV_LISP	option.h	/^    , BV_LISP$/;"	e	enum:__anon171
BV_LW	option.h	/^    , BV_LW$/;"	e	enum:__anon171
BV_MA	option.h	/^    , BV_MA$/;"	e	enum:__anon171
BV_MENC	option.h	/^    , BV_MENC$/;"	e	enum:__anon171
BV_ML	option.h	/^    , BV_ML$/;"	e	enum:__anon171
BV_MOD	option.h	/^    , BV_MOD$/;"	e	enum:__anon171
BV_MP	option.h	/^    , BV_MP$/;"	e	enum:__anon171
BV_MPS	option.h	/^    , BV_MPS$/;"	e	enum:__anon171
BV_NF	option.h	/^    , BV_NF$/;"	e	enum:__anon171
BV_OFU	option.h	/^    , BV_OFU$/;"	e	enum:__anon171
BV_PATH	option.h	/^    , BV_PATH$/;"	e	enum:__anon171
BV_PI	option.h	/^    , BV_PI$/;"	e	enum:__anon171
BV_QE	option.h	/^    , BV_QE$/;"	e	enum:__anon171
BV_RO	option.h	/^    , BV_RO$/;"	e	enum:__anon171
BV_SI	option.h	/^    , BV_SI$/;"	e	enum:__anon171
BV_SMC	option.h	/^    , BV_SMC$/;"	e	enum:__anon171
BV_SN	option.h	/^    , BV_SN$/;"	e	enum:__anon171
BV_SPC	option.h	/^    , BV_SPC$/;"	e	enum:__anon171
BV_SPF	option.h	/^    , BV_SPF$/;"	e	enum:__anon171
BV_SPL	option.h	/^    , BV_SPL$/;"	e	enum:__anon171
BV_STS	option.h	/^    , BV_STS$/;"	e	enum:__anon171
BV_SUA	option.h	/^    , BV_SUA$/;"	e	enum:__anon171
BV_SW	option.h	/^    , BV_SW$/;"	e	enum:__anon171
BV_SWF	option.h	/^    , BV_SWF$/;"	e	enum:__anon171
BV_SYN	option.h	/^    , BV_SYN$/;"	e	enum:__anon171
BV_TAGS	option.h	/^    , BV_TAGS$/;"	e	enum:__anon171
BV_TC	option.h	/^    , BV_TC$/;"	e	enum:__anon171
BV_TFU	option.h	/^    , BV_TFU$/;"	e	enum:__anon171
BV_TS	option.h	/^    , BV_TS$/;"	e	enum:__anon171
BV_TSR	option.h	/^    , BV_TSR$/;"	e	enum:__anon171
BV_TW	option.h	/^    , BV_TW$/;"	e	enum:__anon171
BV_TWSL	option.h	/^    , BV_TWSL$/;"	e	enum:__anon171
BV_TX	option.h	/^    , BV_TX$/;"	e	enum:__anon171
BV_UDF	option.h	/^    , BV_UDF$/;"	e	enum:__anon171
BV_UL	option.h	/^    , BV_UL$/;"	e	enum:__anon171
BV_VSTS	option.h	/^    , BV_VSTS$/;"	e	enum:__anon171
BV_VTS	option.h	/^    , BV_VTS$/;"	e	enum:__anon171
BV_WM	option.h	/^    , BV_WM$/;"	e	enum:__anon171
BYTE	gui_w32.c	/^typedef int BYTE;$/;"	t	file:
BYTE_STRING_VALUE	if_mzsch.h	30;"	d
BYTE_STRING_VALUE	if_mzsch.h	44;"	d
BY_FLAGS	spellfile.c	257;"	d	file:
BY_FLAGS2	spellfile.c	259;"	d	file:
BY_HANDLE_FILE_INFORMATION	os_win32.c	/^typedef int BY_HANDLE_FILE_INFORMATION;$/;"	t	file:
BY_INDEX	spellfile.c	256;"	d	file:
BY_NOFLAGS	spellfile.c	254;"	d	file:
BY_SPECIAL	spellfile.c	261;"	d	file:
B_IMODE_IM	structs.h	2524;"	d
B_IMODE_LAST	structs.h	2525;"	d
B_IMODE_LMAP	structs.h	2523;"	d
B_IMODE_NONE	structs.h	2522;"	d
B_IMODE_USE_INSERT	structs.h	2521;"	d
B_SPELL	structs.h	2199;"	d
B_SPELL	structs.h	2201;"	d
BalloonEval	beval.h	/^} BalloonEval;$/;"	t	typeref:struct:BalloonEvalStruct
BalloonEval	proto.h	264;"	d
BalloonEvalStruct	beval.h	/^typedef struct BalloonEvalStruct$/;"	s
BeState	beval.h	/^} BeState;$/;"	t	typeref:enum:__anon140
BevalTimerId	gui_w32.c	/^static UINT_PTR	    BevalTimerId = 0;$/;"	v	file:
BevalTimerProc	gui_w32.c	/^BevalTimerProc($/;"	f	file:
Blue	gui_mac.c	177;"	d	file:
BorderHighlight	gui_xmebw.c	/^BorderHighlight(Widget w)$/;"	f	file:
BorderUnhighlight	gui_xmebw.c	/^BorderUnhighlight(Widget w)$/;"	f	file:
BufMapAsMapping	if_py_both.h	/^static PyMappingMethods BufMapAsMapping = {$/;"	v
BufMapItem	if_py_both.h	/^BufMapItem(PyObject *self UNUSED, PyObject *keyObject)$/;"	f
BufMapIter	if_py_both.h	/^BufMapIter(PyObject *self UNUSED)$/;"	f
BufMapIterClear	if_py_both.h	/^BufMapIterClear(PyObject **buffer)$/;"	f
BufMapIterDestruct	if_py_both.h	/^BufMapIterDestruct(PyObject *buffer)$/;"	f
BufMapIterNext	if_py_both.h	/^BufMapIterNext(PyObject **buffer)$/;"	f
BufMapIterTraverse	if_py_both.h	/^BufMapIterTraverse(PyObject *buffer, visitproc visit, void *arg)$/;"	f
BufMapLength	if_py_both.h	/^BufMapLength(PyObject *self UNUSED)$/;"	f
BufMapObject	if_py_both.h	/^} BufMapObject;$/;"	t	typeref:struct:__anon167
BufMapType	if_py_both.h	/^static PyTypeObject BufMapType;$/;"	v
Buffer	os_win32.c	/^    PCHAR_INFO			Buffer;$/;"	m	struct:ConsoleBufferStruct	file:
BufferAppend	if_py_both.h	/^BufferAppend(BufferObject *self, PyObject *args)$/;"	f
BufferAsMapping	if_py_both.h	/^static PyMappingMethods BufferAsMapping;$/;"	v
BufferAsMapping	if_python3.c	/^static PyMappingMethods BufferAsMapping = {$/;"	v	file:
BufferAsSeq	if_py_both.h	/^static PySequenceMethods BufferAsSeq;$/;"	v
BufferAsSeq	if_python.c	/^static PySequenceMethods BufferAsSeq = {$/;"	v	file:
BufferAsSeq	if_python3.c	/^static PySequenceMethods BufferAsSeq = {$/;"	v	file:
BufferAsSubscript	if_python3.c	/^BufferAsSubscript(PyObject *self, PyObject* idx, PyObject* val)$/;"	f	file:
BufferAssItem	if_python.c	/^BufferAssItem(PyObject *self, PyInt n, PyObject *val)$/;"	f	file:
BufferAssSlice	if_python.c	/^BufferAssSlice(PyObject *self, PyInt lo, PyInt hi, PyObject *val)$/;"	f	file:
BufferAttr	if_py_both.h	/^BufferAttr(BufferObject *self, char *name)$/;"	f
BufferAttrValid	if_py_both.h	/^BufferAttrValid(BufferObject *self, char *name)$/;"	f
BufferAttrs	if_py_both.h	/^static char *BufferAttrs[] = {$/;"	v
BufferDestructor	if_py_both.h	/^BufferDestructor(BufferObject *self)$/;"	f
BufferDir	if_py_both.h	/^BufferDir(PyObject *self)$/;"	f
BufferGetattr	if_python.c	/^BufferGetattr(PyObject *self, char *name)$/;"	f	file:
BufferGetattro	if_python3.c	/^BufferGetattro(PyObject *self, PyObject *nameobj)$/;"	f	file:
BufferItem	if_py_both.h	/^BufferItem(BufferObject *self, PyInt n)$/;"	f
BufferLength	if_py_both.h	/^BufferLength(BufferObject *self)$/;"	f
BufferMark	if_py_both.h	/^BufferMark(BufferObject *self, PyObject *pmarkObject)$/;"	f
BufferMethods	if_py_both.h	/^static struct PyMethodDef BufferMethods[] = {$/;"	v	typeref:struct:PyMethodDef
BufferNew	if_py_both.h	/^BufferNew(buf_T *buf)$/;"	f
BufferObject	if_py_both.h	/^} BufferObject;$/;"	t	typeref:struct:__anon165
BufferRange	if_py_both.h	/^BufferRange(BufferObject *self, PyObject *args)$/;"	f
BufferRepr	if_py_both.h	/^BufferRepr(BufferObject *self)$/;"	f
BufferSetattr	if_py_both.h	/^BufferSetattr(BufferObject *self, char *name, PyObject *valObject)$/;"	f
BufferSetattro	if_python3.c	/^BufferSetattro(PyObject *self, PyObject *nameobj, PyObject *val)$/;"	f	file:
BufferSize	os_win32.c	/^    COORD			BufferSize;$/;"	m	struct:ConsoleBufferStruct	file:
BufferSlice	if_py_both.h	/^BufferSlice(BufferObject *self, PyInt lo, PyInt hi)$/;"	f
BufferSubscript	if_python3.c	/^BufferSubscript(PyObject *self, PyObject* idx)$/;"	f	file:
BufferType	if_py_both.h	/^static PyTypeObject BufferType;$/;"	v
BufferType_Check	if_python.c	1212;"	d	file:
BufferType_Check	if_python3.c	1174;"	d	file:
C2PascalString	gui_mac.c	/^C2PascalString(char_u *CString, Str255 *PascalString)$/;"	f
C2Pascal_save	gui_mac.c	/^C2Pascal_save(char_u *Cstring)$/;"	f
C2Pascal_save_and_remove_backslash	gui_mac.c	/^C2Pascal_save_and_remove_backslash(char_u *Cstring)$/;"	f
CALLBACK	gui_w32.c	239;"	d	file:
CALLBACK	os_mswin.c	/^typedef int CALLBACK;$/;"	t	file:
CAR	ascii.h	110;"	d
CAR	ascii.h	31;"	d
CARDINAL	gui_x11.c	1219;"	d	file:
CARDINAL	gui_x11.c	1222;"	d	file:
CARDINAL	gui_x11.c	1224;"	d	file:
CASEMBC	regexp_bt.c	525;"	d	file:
CASE_INSENSITIVE_FILENAME	os_amiga.h	13;"	d
CASE_INSENSITIVE_FILENAME	os_dos.h	130;"	d
CASE_INSENSITIVE_FILENAME	os_mac.h	87;"	d
CASE_INSENSITIVE_FILENAME	os_unix.h	40;"	d
CASE_INSENSITIVE_FILENAME	os_vms_conf.h	5;"	d
CA_COMMAND_BUSY	structs.h	3508;"	d
CA_NO_ADJ_OP_END	structs.h	3509;"	d
CCGD_ALLBUF	vim.h	1200;"	d
CCGD_AW	vim.h	1197;"	d
CCGD_EXCMD	vim.h	1201;"	d
CCGD_FORCEIT	vim.h	1199;"	d
CCGD_MULTWIN	vim.h	1198;"	d
CCM_SETUNICODEFORMAT	gui_w32.c	2523;"	d	file:
CDSCOPE_GLOBAL	structs.h	/^    CDSCOPE_GLOBAL,	\/\/ :cd$/;"	e	enum:__anon255
CDSCOPE_TABPAGE	structs.h	/^    CDSCOPE_TABPAGE,	\/\/ :tcd$/;"	e	enum:__anon255
CDSCOPE_WINDOW	structs.h	/^    CDSCOPE_WINDOW	\/\/ :lcd$/;"	e	enum:__anon255
CENT	highlight.c	115;"	d	file:
CENT	highlight.c	117;"	d	file:
CFStringRef	os_mac_conv.c	/^typedef int CFStringRef;$/;"	t	file:
CF_UPPER	spellfile.c	297;"	d	file:
CF_WORD	spellfile.c	296;"	d	file:
CHANGEDTICK	structs.h	2416;"	d
CHAR_CELLS	screen.c	422;"	d	file:
CHAR_CLASS	ui.c	1763;"	d	file:
CHECK	memline.c	12;"	d	file:
CHECK_CMDWIN	window.c	129;"	d	file:
CHECK_DOUBLE_CLICK	vim.h	1895;"	d
CHECK_INODE	os_unix.h	416;"	d
CHECK_PATH	vim.h	862;"	d
CHECK_REG_ERROR	dosinst.c	27;"	d	file:
CH_ERR_FD	structs.h	1914;"	d
CH_HAS_GUI	channel.c	19;"	d	file:
CH_IN_FD	structs.h	1916;"	d
CH_JSON_MAX_ARGS	channel.c	2349;"	d	file:
CH_OUT_FD	structs.h	1912;"	d
CH_PART_FD	structs.h	1903;"	d
CH_SOCK_FD	structs.h	1909;"	d
CI_WHAT_ALL	insexpand.c	2507;"	d	file:
CI_WHAT_INSERTED	insexpand.c	2506;"	d	file:
CI_WHAT_ITEMS	insexpand.c	2504;"	d	file:
CI_WHAT_MODE	insexpand.c	2502;"	d	file:
CI_WHAT_PUM_VISIBLE	insexpand.c	2503;"	d	file:
CI_WHAT_SELECTED	insexpand.c	2505;"	d	file:
CLASS_AF	regexp_nfa.c	546;"	d	file:
CLASS_ALNUM	regexp.c	162;"	d	file:
CLASS_ALPHA	regexp.c	164;"	d	file:
CLASS_AZ	regexp_nfa.c	548;"	d	file:
CLASS_BACKSPACE	regexp.c	190;"	d	file:
CLASS_BLANK	regexp.c	166;"	d	file:
CLASS_CNTRL	regexp.c	168;"	d	file:
CLASS_DIGIT	regexp.c	170;"	d	file:
CLASS_ESCAPE	regexp.c	192;"	d	file:
CLASS_FNAME	regexp.c	198;"	d	file:
CLASS_GRAPH	regexp.c	172;"	d	file:
CLASS_IDENT	regexp.c	194;"	d	file:
CLASS_KEYWORD	regexp.c	196;"	d	file:
CLASS_LOWER	regexp.c	174;"	d	file:
CLASS_NONE	regexp.c	200;"	d	file:
CLASS_PRINT	regexp.c	176;"	d	file:
CLASS_PUNCT	regexp.c	178;"	d	file:
CLASS_RETURN	regexp.c	188;"	d	file:
CLASS_SPACE	regexp.c	180;"	d	file:
CLASS_TAB	regexp.c	186;"	d	file:
CLASS_UPPER	regexp.c	182;"	d	file:
CLASS_XDIGIT	regexp.c	184;"	d	file:
CLASS_af	regexp_nfa.c	545;"	d	file:
CLASS_az	regexp_nfa.c	547;"	d	file:
CLASS_not	regexp_nfa.c	544;"	d	file:
CLASS_o7	regexp_nfa.c	549;"	d	file:
CLASS_o9	regexp_nfa.c	550;"	d	file:
CLASS_underscore	regexp_nfa.c	551;"	d	file:
CLEAN_RUNTIMEPATH	os_amiga.h	47;"	d
CLEAN_RUNTIMEPATH	os_dos.h	128;"	d
CLEAN_RUNTIMEPATH	os_haiku.h	29;"	d
CLEAN_RUNTIMEPATH	os_haiku.h	32;"	d
CLEAN_RUNTIMEPATH	os_haiku.h	36;"	d
CLEAN_RUNTIMEPATH	os_mac.h	214;"	d
CLEAN_RUNTIMEPATH	os_unix.h	371;"	d
CLEAN_RUNTIMEPATH	os_unix.h	376;"	d
CLEAN_RUNTIMEPATH	os_unix.h	379;"	d
CLEAN_RUNTIMEPATH	os_unix.h	383;"	d
CLEAR	vim.h	587;"	d
CLEAR_POS	macros.h	35;"	d
CLIP_CLEAR	ui.c	1018;"	d	file:
CLIP_SET	ui.c	1019;"	d	file:
CLIP_TOGGLE	ui.c	1020;"	d	file:
CLIP_TYPE_TEXT	os_qnx.c	37;"	d	file:
CLIP_TYPE_VIM	os_qnx.c	36;"	d	file:
CLIP_UNNAMED	globals.h	642;"	d
CLIP_UNNAMED_PLUS	globals.h	643;"	d
CLIP_ZINDEX	vim.h	2658;"	d
CLSID	iid_ole.c	/^typedef IID CLSID;$/;"	t	file:
CLSID_DEFINED	iid_ole.c	41;"	d	file:
CLSID_Vim	if_ole.h	/^EXTERN_C const CLSID CLSID_Vim;$/;"	v
CLSID_Vim	iid_ole.c	/^const CLSID CLSID_Vim = {0x0F0BFAE1,0x4C90,0x11d1,{0x82,0xD7,0x00,0x04,0xAC,0x36,0x85,0x19}};$/;"	v
CLUSTER_ADD	syntax.c	121;"	d	file:
CLUSTER_REPLACE	syntax.c	120;"	d	file:
CLUSTER_SUBTRACT	syntax.c	122;"	d	file:
CMDBUFFSIZE	os_mac.h	220;"	d
CMDBUFFSIZE	os_unix.h	407;"	d
CMDBUFFSIZE	os_win32.h	104;"	d
CMDBUFFSIZE	vim.h	1509;"	d
CMDLINE	vim.h	679;"	d
CMD_BACKTRACE	debugger.c	63;"	d	file:
CMD_CONT	debugger.c	57;"	d	file:
CMD_DOWN	debugger.c	66;"	d	file:
CMD_FINISH	debugger.c	60;"	d	file:
CMD_FRAME	debugger.c	64;"	d	file:
CMD_INTERRUPT	debugger.c	62;"	d	file:
CMD_NEXT	debugger.c	58;"	d	file:
CMD_QUIT	debugger.c	61;"	d	file:
CMD_STEP	debugger.c	59;"	d	file:
CMD_UP	debugger.c	65;"	d	file:
CMP_INTERNAL	option.h	455;"	d
CMP_KEEPASCII	option.h	456;"	d
CNT	spellsuggest.c	4006;"	d	file:
COBJMACROS	os_win32.h	92;"	d
COCU_ALL	option.h	233;"	d
CODEC_ERROR_HANDLER	if_python3.c	76;"	d	file:
CODEC_ERROR_HANDLER	if_python3.c	78;"	d	file:
COLORREF	gui_w32.c	/^typedef int COLORREF;$/;"	t	file:
COLORREF	os_mswin.c	/^typedef int COLORREF;$/;"	t	file:
COLORREF	os_win32.c	/^typedef int COLORREF;$/;"	t	file:
COLOR_INVALID	structs.h	120;"	d
COL_RULER	screen.c	4584;"	d	file:
COMPOSITIONFORM	gui_w32.c	/^} COMPOSITIONFORM, *PCOMPOSITIONFORM, NEAR *NPCOMPOSITIONFORM, FAR *LPCOMPOSITIONFORM;$/;"	t	typeref:struct:tagCOMPOSITIONFORM	file:
COMP_CHECKCASE	spell.h	184;"	d
COMP_CHECKDUP	spell.h	182;"	d
COMP_CHECKREP	spell.h	183;"	d
COMP_CHECKTRIPLE	spell.h	185;"	d
COM_ALL	option.h	298;"	d
COM_AUTO_END	option.h	293;"	d
COM_BLANK	option.h	289;"	d
COM_END	option.h	292;"	d
COM_FIRST	option.h	294;"	d
COM_LEFT	option.h	295;"	d
COM_MAX_LEN	option.h	299;"	d
COM_MIDDLE	option.h	291;"	d
COM_NEST	option.h	288;"	d
COM_NOBACK	option.h	297;"	d
COM_RIGHT	option.h	296;"	d
COM_START	option.h	290;"	d
CONDIT_AFF	spellfile.c	2013;"	d	file:
CONDIT_CFIX	spellfile.c	2011;"	d	file:
CONDIT_COMB	spellfile.c	2010;"	d	file:
CONDIT_SUF	spellfile.c	2012;"	d	file:
CONFIRM	vim.h	697;"	d
CONPTY_1903_BUILD	os_win32.c	7224;"	d	file:
CONPTY_1909_BUILD	os_win32.c	7229;"	d	file:
CONPTY_FIRST_SUPPORT_BUILD	os_win32.c	7218;"	d	file:
CONPTY_INSIDER_BUILD	os_win32.c	7235;"	d	file:
CONPTY_STABLE_BUILD	os_win32.c	7240;"	d	file:
CONSOLE_CURSOR_INFO	os_mswin.c	/^typedef int CONSOLE_CURSOR_INFO;$/;"	t	file:
CONSOLE_CURSOR_INFO	os_win32.c	/^typedef int CONSOLE_CURSOR_INFO;$/;"	t	file:
CONST	gui_w32.c	240;"	d	file:
CONST84	if_tcl.c	111;"	d	file:
CONT_ADDING	globals.h	167;"	d
CONT_INTRPT	globals.h	168;"	d
CONT_LOCAL	globals.h	175;"	d
CONT_N_ADDS	globals.h	170;"	d
CONT_SOL	globals.h	173;"	d
CONT_S_IPOS	globals.h	171;"	d
CONV	gui_gtk.c	2127;"	d	file:
CONV	gui_gtk.c	2484;"	d	file:
CONVERT_FROM_UTF8	gui.h	559;"	d
CONVERT_FROM_UTF8	gui.h	572;"	d
CONVERT_FROM_UTF8_FREE	gui.h	564;"	d
CONVERT_FROM_UTF8_FREE	gui.h	573;"	d
CONVERT_TO_UTF8	gui.h	549;"	d
CONVERT_TO_UTF8	gui.h	570;"	d
CONVERT_TO_UTF8_FREE	gui.h	554;"	d
CONVERT_TO_UTF8_FREE	gui.h	571;"	d
CONV_9_TO_UTF8	structs.h	1156;"	d
CONV_CODEPAGE	structs.h	1161;"	d
CONV_ICONV	structs.h	1159;"	d
CONV_LATIN1_MAC	structs.h	1165;"	d
CONV_MAC_LATIN1	structs.h	1164;"	d
CONV_MAC_UTF8	structs.h	1166;"	d
CONV_NONE	structs.h	1154;"	d
CONV_RESTLEN	structs.h	4075;"	d
CONV_TO_LATIN1	structs.h	1157;"	d
CONV_TO_LATIN9	structs.h	1158;"	d
CONV_TO_UTF8	structs.h	1155;"	d
CONV_UTF8_MAC	structs.h	1167;"	d
COORD	os_mswin.c	/^typedef int COORD;$/;"	t	file:
COORD	os_win32.c	/^typedef int COORD;$/;"	t	file:
COORD	terminal.c	/^typedef int COORD;$/;"	t	file:
COPYDATA_ENCODING	os_mswin.c	1929;"	d	file:
COPYDATA_ERROR_RESULT	os_mswin.c	1928;"	d	file:
COPYDATA_EXPR	os_mswin.c	1926;"	d	file:
COPYDATA_KEYS	os_mswin.c	1924;"	d	file:
COPYDATA_REPLY	os_mswin.c	1925;"	d	file:
COPYDATA_RESULT	os_mswin.c	1927;"	d	file:
COPYID_INC	vim.h	2528;"	d
COPYID_MASK	vim.h	2529;"	d
COPY_OPT_SCTX	option.c	5603;"	d	file:
COPY_OPT_SCTX	option.c	5622;"	d	file:
CPO_ALL	option.h	216;"	d
CPO_ALTREAD	option.h	152;"	d
CPO_ALTWRITE	option.h	153;"	d
CPO_BACKSL	option.h	209;"	d
CPO_BACKSPACE	option.h	188;"	d
CPO_BAR	option.h	154;"	d
CPO_BSLASH	option.h	155;"	d
CPO_BUFOPT	option.h	184;"	d
CPO_BUFOPTGLOB	option.h	185;"	d
CPO_CHDIR	option.h	210;"	d
CPO_CONCAT	option.h	157;"	d
CPO_CW	option.h	189;"	d
CPO_DIGRAPH	option.h	159;"	d
CPO_DOLLAR	option.h	195;"	d
CPO_DOTTAG	option.h	158;"	d
CPO_EMPTYREGION	option.h	161;"	d
CPO_ENDOFSENT	option.h	169;"	d
CPO_ESC	option.h	191;"	d
CPO_EXECBUF	option.h	160;"	d
CPO_FILTER	option.h	196;"	d
CPO_FNAMEAPP	option.h	180;"	d
CPO_FNAMER	option.h	162;"	d
CPO_FNAMEW	option.h	163;"	d
CPO_FWRITE	option.h	190;"	d
CPO_GOTO1	option.h	164;"	d
CPO_HASH	option.h	204;"	d
CPO_INDENT	option.h	167;"	d
CPO_INSEND	option.h	165;"	d
CPO_INTMOD	option.h	166;"	d
CPO_JOINCOL	option.h	181;"	d
CPO_JOINSP	option.h	168;"	d
CPO_KEEPRO	option.h	194;"	d
CPO_KEYCODE	option.h	170;"	d
CPO_KOFFSET	option.h	171;"	d
CPO_LINEOFF	option.h	177;"	d
CPO_LISP	option.h	179;"	d
CPO_LISTWM	option.h	173;"	d
CPO_LITERAL	option.h	172;"	d
CPO_MATCH	option.h	197;"	d
CPO_MATCHBSL	option.h	175;"	d
CPO_MINUS	option.h	200;"	d
CPO_NUMCOL	option.h	176;"	d
CPO_OVERNEW	option.h	178;"	d
CPO_PARA	option.h	205;"	d
CPO_PLUS	option.h	199;"	d
CPO_PRESERVE	option.h	207;"	d
CPO_REDO	option.h	182;"	d
CPO_REGAPPEND	option.h	202;"	d
CPO_REMMARK	option.h	183;"	d
CPO_REPLCNT	option.h	192;"	d
CPO_SCOLON	option.h	211;"	d
CPO_SEARCH	option.h	156;"	d
CPO_SHOWMATCH	option.h	174;"	d
CPO_SPECI	option.h	201;"	d
CPO_STAR	option.h	198;"	d
CPO_SUBPERCENT	option.h	208;"	d
CPO_TAGPAT	option.h	186;"	d
CPO_TSIZE	option.h	206;"	d
CPO_UNDO	option.h	187;"	d
CPO_VI	option.h	215;"	d
CPO_VIM	option.h	214;"	d
CPO_YANK	option.h	193;"	d
CPT_ABBR	insexpand.c	90;"	d	file:
CPT_COUNT	insexpand.c	94;"	d	file:
CPT_INFO	insexpand.c	93;"	d	file:
CPT_KIND	insexpand.c	92;"	d	file:
CPT_MENU	insexpand.c	91;"	d	file:
CP_CONT_S_IPOS	insexpand.c	118;"	d	file:
CP_EQUAL	insexpand.c	119;"	d	file:
CP_FREE_FNAME	insexpand.c	117;"	d	file:
CP_ICASE	insexpand.c	120;"	d	file:
CP_ORIGINAL_TEXT	insexpand.c	116;"	d	file:
CP_UTF8	mbyte.c	438;"	d	file:
CRC32	crypt_zip.c	58;"	d	file:
CREATE_DUMMY_FILE	memline.c	4552;"	d	file:
CRYPT_BUF_SIZE	undo.c	85;"	d	file:
CRYPT_MAGIC_LEN	crypt.c	133;"	d	file:
CRYPT_M_BF	structs.h	2247;"	d
CRYPT_M_BF2	structs.h	2248;"	d
CRYPT_M_COUNT	structs.h	2249;"	d
CRYPT_M_ZIP	structs.h	2246;"	d
CSCOPE_DBFILE	if_cscope.h	24;"	d
CSCOPE_FAILURE	if_cscope.h	22;"	d
CSCOPE_PROMPT	if_cscope.h	25;"	d
CSCOPE_SUCCESS	if_cscope.h	21;"	d
CSF_ACTIVE	structs.h	892;"	d
CSF_CAUGHT	structs.h	900;"	d
CSF_ELSE	structs.h	893;"	d
CSF_FINALLY	structs.h	898;"	d
CSF_FOR	structs.h	895;"	d
CSF_SILENT	structs.h	901;"	d
CSF_THROWN	structs.h	899;"	d
CSF_TRUE	structs.h	891;"	d
CSF_TRY	structs.h	897;"	d
CSF_WHILE	structs.h	894;"	d
CSI	ascii.h	168;"	d
CSIDL_COMMON_DESKTOPDIRECTORY	dosinst.h	185;"	d
CSIDL_COMMON_PROGRAMS	dosinst.h	182;"	d
CSI_STR	ascii.h	169;"	d
CSL_HAD_CONT	structs.h	923;"	d
CSL_HAD_ENDLOOP	structs.h	922;"	d
CSL_HAD_FINA	structs.h	924;"	d
CSL_HAD_LOOP	structs.h	921;"	d
CSQF_CMDS	option.h	492;"	d
CSQF_FLAGS	option.h	493;"	d
CSREAD_BUFSIZE	if_cscope.c	651;"	d	file:
CSTACK_LEN	structs.h	869;"	d
CSTP_BREAK	structs.h	913;"	d
CSTP_CONTINUE	structs.h	914;"	d
CSTP_ERROR	structs.h	910;"	d
CSTP_FINISH	structs.h	916;"	d
CSTP_INTERRUPT	structs.h	911;"	d
CSTP_NONE	structs.h	909;"	d
CSTP_RETURN	structs.h	915;"	d
CSTP_THROW	structs.h	912;"	d
CS_B5	hardcopy.c	1128;"	d	file:
CS_CNS_PLANE_1	hardcopy.c	1125;"	d	file:
CS_CNS_PLANE_1_2	hardcopy.c	1127;"	d	file:
CS_CNS_PLANE_2	hardcopy.c	1126;"	d	file:
CS_CP932	hardcopy.c	1067;"	d	file:
CS_DLHKL	hardcopy.c	1135;"	d	file:
CS_DLHKS	hardcopy.c	1136;"	d	file:
CS_ETEN	hardcopy.c	1129;"	d	file:
CS_GBK	hardcopy.c	1100;"	d	file:
CS_GBK2K	hardcopy.c	1097;"	d	file:
CS_GBT_12345_90	hardcopy.c	1096;"	d	file:
CS_GBT_90_MAC	hardcopy.c	1099;"	d	file:
CS_GB_2312_80	hardcopy.c	1095;"	d	file:
CS_HK_GCCS	hardcopy.c	1130;"	d	file:
CS_HK_SCS	hardcopy.c	1131;"	d	file:
CS_HK_SCS_ETEN	hardcopy.c	1132;"	d	file:
CS_JIS_C_1978	hardcopy.c	1062;"	d	file:
CS_JIS_X_1983	hardcopy.c	1063;"	d	file:
CS_JIS_X_1990	hardcopy.c	1064;"	d	file:
CS_KANJITALK6	hardcopy.c	1068;"	d	file:
CS_KANJITALK7	hardcopy.c	1069;"	d	file:
CS_KR_ISO10646	hardcopy.c	1174;"	d	file:
CS_KR_MAC	hardcopy.c	1172;"	d	file:
CS_KR_X_1992	hardcopy.c	1171;"	d	file:
CS_KR_X_1992_MS	hardcopy.c	1173;"	d	file:
CS_MSWINDOWS	hardcopy.c	1066;"	d	file:
CS_MTHKL	hardcopy.c	1133;"	d	file:
CS_MTHKS	hardcopy.c	1134;"	d	file:
CS_NEC	hardcopy.c	1065;"	d	file:
CS_SC_ISO10646	hardcopy.c	1101;"	d	file:
CS_SC_MAC	hardcopy.c	1098;"	d	file:
CS_TC_ISO10646	hardcopy.c	1137;"	d	file:
CTERMCOLOR	gui.h	226;"	d
CTERMCOLOR	structs.h	118;"	d
CTERM_ATTR_ENTRY	highlight.c	2034;"	d	file:
CTRL	os_win32.c	842;"	d	file:
CTRL_F_STR	ascii.h	119;"	d
CTRL_F_STR	ascii.h	43;"	d
CTRL_H_STR	ascii.h	120;"	d
CTRL_H_STR	ascii.h	44;"	d
CTRL_V_STR	ascii.h	121;"	d
CTRL_V_STR	ascii.h	45;"	d
CTRL_X_CMDLINE	insexpand.c	34;"	d	file:
CTRL_X_DICTIONARY	insexpand.c	32;"	d	file:
CTRL_X_EVAL	insexpand.c	39;"	d	file:
CTRL_X_FILES	insexpand.c	27;"	d	file:
CTRL_X_FINISHED	insexpand.c	31;"	d	file:
CTRL_X_FUNCTION	insexpand.c	35;"	d	file:
CTRL_X_LOCAL_MSG	insexpand.c	38;"	d	file:
CTRL_X_MSG	insexpand.c	41;"	d	file:
CTRL_X_NORMAL	insexpand.c	23;"	d	file:
CTRL_X_NOT_DEFINED_YET	insexpand.c	24;"	d	file:
CTRL_X_OMNI	insexpand.c	36;"	d	file:
CTRL_X_PATH_DEFINES	insexpand.c	30;"	d	file:
CTRL_X_PATH_PATTERNS	insexpand.c	29;"	d	file:
CTRL_X_SCROLL	insexpand.c	25;"	d	file:
CTRL_X_SPELL	insexpand.c	37;"	d	file:
CTRL_X_TAGS	insexpand.c	28;"	d	file:
CTRL_X_THESAURUS	insexpand.c	33;"	d	file:
CTRL_X_WANT_IDENT	insexpand.c	21;"	d	file:
CTRL_X_WHOLE_LINE	insexpand.c	26;"	d	file:
CT_CELL_MASK	charset.c	33;"	d	file:
CT_FNAME_CHAR	charset.c	36;"	d	file:
CT_ID_CHAR	charset.c	35;"	d	file:
CT_PRINT_CHAR	charset.c	34;"	d	file:
CULOPT_LINE	option.h	352;"	d
CULOPT_NBR	option.h	354;"	d
CULOPT_SCRLINE	option.h	353;"	d
CURRENT_TAB_NR	ex_docmd.c	1603;"	d	file:
CURRENT_WIN_NR	ex_docmd.c	1601;"	d	file:
CURSOR	regexp_bt.c	224;"	d	file:
CURSOR_BAR_RIGHT	macros.h	221;"	d
CURSOR_MOVED	vim.h	1881;"	d
CURSOR_SHAPE	feature.h	1090;"	d
CURSOR_SHAPE	feature.h	1153;"	d
CUR_STATE	syntax.c	280;"	d	file:
CV	proto.h	345;"	d
CW_ERROR	channel.c	/^    CW_ERROR$/;"	e	enum:__anon5	file:
CW_GetText	gui_mac.c	/^struct CW_GetText \/\/ for handling class 'KAHL', event 'GTTX', keyDirectObject typeChar$/;"	s	file:
CW_GetText	gui_mac.c	/^typedef struct CW_GetText CW_GetText;$/;"	t	typeref:struct:CW_GetText	file:
CW_NOT_READY	channel.c	/^    CW_NOT_READY,$/;"	e	enum:__anon5	file:
CW_READY	channel.c	/^    CW_READY,$/;"	e	enum:__anon5	file:
C_cedilla	regexp_nfa.c	706;"	d	file:
CancelData	gui_gtk.c	98;"	d	file:
CancelRedo	getchar.c	/^CancelRedo(void)$/;"	f
CenterWindow	gui_w32.c	/^CenterWindow($/;"	f	file:
CharOrd	ascii.h	19;"	d
CharOrd	ascii.h	95;"	d
CharOrdLow	ascii.h	20;"	d
CharOrdLow	ascii.h	93;"	d
CharOrdUp	ascii.h	21;"	d
CharOrdUp	ascii.h	94;"	d
CharOrd__	ascii.h	92;"	d
Check	gui_at_sb.c	648;"	d	file:
Check	gui_at_sb.c	680;"	d	file:
Check	if_py_both.h	/^    checkfun	Check;$/;"	m	struct:__anon159
CheckBuffer	if_py_both.h	/^CheckBuffer(BufferObject *self)$/;"	f
CheckTabPage	if_py_both.h	/^CheckTabPage(TabPageObject *self)$/;"	f
CheckWindow	if_py_both.h	/^CheckWindow(WindowObject *self)$/;"	f
Chk_Abort	os_amiga.c	/^Chk_Abort(void)$/;"	f
Chk_Abort	os_amiga.c	1416;"	d	file:
ClassInitialize	gui_at_sb.c	/^ClassInitialize(void)$/;"	f	file:
CleanUpMessaging	os_mswin.c	/^CleanUpMessaging(void)$/;"	f	file:
ClearConsoleBuffer	os_win32.c	/^ClearConsoleBuffer(WORD wAttribute)$/;"	f	file:
Clipboard_T	vim.h	/^typedef int Clipboard_T;	\/\/ This is required for the prototypes.$/;"	t
Clipboard_T	vim.h	/^} Clipboard_T;$/;"	t	typeref:struct:__anon279
ColorTable	os_win32.c	/^    COLORREF ColorTable[16];$/;"	m	struct:_DYN_CONSOLE_SCREEN_BUFFER_INFOEX	file:
Columns	globals.h	/^EXTERN long	Columns INIT(= 80);	\/\/ nr of columns in the screen$/;"	v
CompareEvents	gui_at_sb.c	/^CompareEvents(XEvent *oldEvent, XEvent *newEvent)$/;"	f	file:
ConsoleBuffer	os_win32.c	/^} ConsoleBuffer;$/;"	t	typeref:struct:ConsoleBufferStruct	file:
ConsoleBufferStruct	os_win32.c	/^typedef struct ConsoleBufferStruct$/;"	s	file:
ConvertFromPyMapping	if_py_both.h	/^ConvertFromPyMapping(PyObject *obj, typval_T *tv)$/;"	f
ConvertFromPyObject	if_py_both.h	/^ConvertFromPyObject(PyObject *obj, typval_T *tv)$/;"	f
ConvertFromPySequence	if_py_both.h	/^ConvertFromPySequence(PyObject *obj, typval_T *tv)$/;"	f
ConvertToPyObject	if_py_both.h	/^ConvertToPyObject(typval_T *tv)$/;"	f
CreateGC	gui_at_sb.c	/^CreateGC(Widget w)$/;"	f	file:
CtrlChar	ascii.h	159;"	d
CtrlCharTable	os_unix.c	/^char CtrlCharTable[]=$/;"	v
CtrlTable	os_unix.c	/^char CtrlTable[] =$/;"	v
Ctrl_A	ascii.h	124;"	d
Ctrl_A	ascii.h	48;"	d
Ctrl_AT	ascii.h	123;"	d
Ctrl_AT	ascii.h	47;"	d
Ctrl_B	ascii.h	125;"	d
Ctrl_B	ascii.h	49;"	d
Ctrl_BSL	ascii.h	152;"	d
Ctrl_BSL	ascii.h	75;"	d
Ctrl_C	ascii.h	126;"	d
Ctrl_C	ascii.h	50;"	d
Ctrl_D	ascii.h	127;"	d
Ctrl_D	ascii.h	51;"	d
Ctrl_E	ascii.h	128;"	d
Ctrl_E	ascii.h	52;"	d
Ctrl_F	ascii.h	129;"	d
Ctrl_F	ascii.h	53;"	d
Ctrl_G	ascii.h	130;"	d
Ctrl_G	ascii.h	54;"	d
Ctrl_H	ascii.h	131;"	d
Ctrl_H	ascii.h	55;"	d
Ctrl_HAT	ascii.h	153;"	d
Ctrl_HAT	ascii.h	77;"	d
Ctrl_I	ascii.h	132;"	d
Ctrl_I	ascii.h	56;"	d
Ctrl_J	ascii.h	133;"	d
Ctrl_J	ascii.h	57;"	d
Ctrl_K	ascii.h	134;"	d
Ctrl_K	ascii.h	58;"	d
Ctrl_L	ascii.h	135;"	d
Ctrl_L	ascii.h	59;"	d
Ctrl_M	ascii.h	136;"	d
Ctrl_M	ascii.h	60;"	d
Ctrl_N	ascii.h	137;"	d
Ctrl_N	ascii.h	61;"	d
Ctrl_O	ascii.h	138;"	d
Ctrl_O	ascii.h	62;"	d
Ctrl_P	ascii.h	139;"	d
Ctrl_P	ascii.h	63;"	d
Ctrl_Q	ascii.h	140;"	d
Ctrl_Q	ascii.h	64;"	d
Ctrl_R	ascii.h	141;"	d
Ctrl_R	ascii.h	65;"	d
Ctrl_RSB	ascii.h	151;"	d
Ctrl_RSB	ascii.h	76;"	d
Ctrl_S	ascii.h	142;"	d
Ctrl_S	ascii.h	66;"	d
Ctrl_T	ascii.h	143;"	d
Ctrl_T	ascii.h	67;"	d
Ctrl_U	ascii.h	144;"	d
Ctrl_U	ascii.h	68;"	d
Ctrl_V	ascii.h	145;"	d
Ctrl_V	ascii.h	69;"	d
Ctrl_W	ascii.h	146;"	d
Ctrl_W	ascii.h	70;"	d
Ctrl_X	ascii.h	147;"	d
Ctrl_X	ascii.h	71;"	d
Ctrl_Y	ascii.h	148;"	d
Ctrl_Y	ascii.h	72;"	d
Ctrl_Z	ascii.h	149;"	d
Ctrl_Z	ascii.h	73;"	d
Ctrl__	ascii.h	154;"	d
Ctrl__	ascii.h	78;"	d
Ctrl_chr	ascii.h	156;"	d
Ctrl_chr	ascii.h	40;"	d
CurrentAttrs	if_py_both.h	/^static char *CurrentAttrs[] = {$/;"	v
CurrentDir	if_py_both.h	/^CurrentDir(PyObject *self)$/;"	f
CurrentGetattr	if_py_both.h	/^CurrentGetattr(PyObject *self UNUSED, char *name)$/;"	f
CurrentGetattro	if_python3.c	/^CurrentGetattro(PyObject *self, PyObject *nameobj)$/;"	f	file:
CurrentMethods	if_py_both.h	/^static struct PyMethodDef CurrentMethods[] = {$/;"	v	typeref:struct:PyMethodDef
CurrentObject	if_py_both.h	/^} CurrentObject;$/;"	t	typeref:struct:__anon168
CurrentSetattr	if_py_both.h	/^CurrentSetattr(PyObject *self UNUSED, char *name, PyObject *valObject)$/;"	f
CurrentSetattro	if_python3.c	/^CurrentSetattro(PyObject *self, PyObject *nameobj, PyObject *value)$/;"	f	file:
CurrentType	if_py_both.h	/^static PyTypeObject CurrentType;$/;"	v
DATA_BL	memline.c	/^typedef struct data_block	DATA_BL;    \/\/ contents of a data block$/;"	t	typeref:struct:data_block	file:
DATA_ID	memline.c	60;"	d	file:
DBCS_2BYTE	globals.h	929;"	d
DBCS_CHS	globals.h	925;"	d
DBCS_CHSU	globals.h	926;"	d
DBCS_CHT	globals.h	927;"	d
DBCS_CHTU	globals.h	928;"	d
DBCS_DEBUG	globals.h	930;"	d
DBCS_JPN	globals.h	921;"	d
DBCS_JPNU	globals.h	922;"	d
DBCS_KOR	globals.h	923;"	d
DBCS_KORU	globals.h	924;"	d
DBG_EXPR	debugger.c	528;"	d	file:
DBG_FILE	debugger.c	527;"	d	file:
DBG_FUNC	debugger.c	526;"	d	file:
DBL_EPSILON	macros.h	300;"	d
DB_COUNT	structs.h	2861;"	d
DB_INDEX_MASK	memline.c	128;"	d	file:
DB_MARKED	memline.c	127;"	d	file:
DCS	ascii.h	170;"	d
DEBUG	regexp.c	9;"	d	file:
DEBUG	vim.h	2411;"	d
DEBUGGY	debugger.c	519;"	d	file:
DECRYPT_BYTE_ZIP	crypt_zip.c	63;"	d	file:
DEFAULT_FONT	gui_gtk_x11.c	160;"	d	file:
DEFAULT_PYTHON_VER	optiondefs.h	299;"	d
DEFAULT_PYTHON_VER	optiondefs.h	301;"	d
DEFAULT_PYTHON_VER	optiondefs.h	303;"	d
DEFAULT_PYTHON_VER	optiondefs.h	305;"	d
DEFAULT_TERM	term.c	1399;"	d	file:
DEFAULT_TERM	term.c	1403;"	d	file:
DEFAULT_TERM	term.c	1407;"	d	file:
DEFAULT_TERM	term.c	1411;"	d	file:
DEFAULT_TERM	term.c	1415;"	d	file:
DEFAULT_TERM	term.c	1419;"	d	file:
DEFAULT_TERM	term.c	1420;"	d	file:
DEFAULT_TERM	term.c	1424;"	d	file:
DEFAULT_TERM	term.c	1425;"	d	file:
DEFAULT_TERM	term.c	1429;"	d	file:
DEFINE_VIM9_GLOBALS	vim9compile.c	23;"	d	file:
DEL	ascii.h	114;"	d
DEL	ascii.h	35;"	d
DELETE_WINDOW_IDX	gui_x11.c	89;"	d	file:
DELETION_REGISTER	structs.h	3965;"	d
DEL_STR	ascii.h	115;"	d
DEL_STR	ascii.h	36;"	d
DESC	os_unix.h	/^typedef struct dsc$descriptor   DESC;$/;"	t	typeref:struct:dsc$descriptor
DESTRUCTOR_FINISH	if_python.c	783;"	d	file:
DESTRUCTOR_FINISH	if_python3.c	785;"	d	file:
DETACH_MSG_RAW	channel.c	3188;"	d	file:
DFLT_BDIR	os_amiga.h	211;"	d
DFLT_BDIR	os_dos.h	115;"	d
DFLT_BDIR	os_mac.h	197;"	d
DFLT_BDIR	os_unix.h	343;"	d
DFLT_BDIR	os_unix.h	345;"	d
DFLT_DIR	os_amiga.h	215;"	d
DFLT_DIR	os_dos.h	123;"	d
DFLT_DIR	os_mac.h	201;"	d
DFLT_DIR	os_unix.h	351;"	d
DFLT_DIR	os_unix.h	353;"	d
DFLT_EFM	option.h	69;"	d
DFLT_EFM	option.h	72;"	d
DFLT_EFM	option.h	75;"	d
DFLT_EFM	option.h	78;"	d
DFLT_EFM	option.h	81;"	d
DFLT_EFM	option.h	83;"	d
DFLT_ERRORFILE	os_amiga.h	40;"	d
DFLT_ERRORFILE	os_dos.h	126;"	d
DFLT_ERRORFILE	os_mac.h	208;"	d
DFLT_ERRORFILE	os_unix.h	365;"	d
DFLT_FF	option.h	103;"	d
DFLT_FF	option.h	98;"	d
DFLT_FFS_VI	option.h	100;"	d
DFLT_FFS_VI	option.h	106;"	d
DFLT_FFS_VI	option.h	109;"	d
DFLT_FFS_VIM	option.h	104;"	d
DFLT_FFS_VIM	option.h	99;"	d
DFLT_FONT	gui_x11.c	61;"	d	file:
DFLT_FO_VI	option.h	147;"	d
DFLT_FO_VIM	option.h	148;"	d
DFLT_GREPFORMAT	option.h	90;"	d
DFLT_HELPFILE	os_amiga.h	129;"	d
DFLT_HELPFILE	os_dos.h	88;"	d
DFLT_HELPFILE	os_mac.h	164;"	d
DFLT_HELPFILE	os_unix.h	223;"	d
DFLT_MAXMEM	os_amiga.h	223;"	d
DFLT_MAXMEM	os_mac.h	223;"	d
DFLT_MAXMEM	os_unix.h	420;"	d
DFLT_MAXMEM	os_unix.h	427;"	d
DFLT_MAXMEM	os_win32.h	117;"	d
DFLT_MAXMEMTOT	os_amiga.h	226;"	d
DFLT_MAXMEMTOT	os_mac.h	227;"	d
DFLT_MAXMEMTOT	os_unix.h	423;"	d
DFLT_MAXMEMTOT	os_unix.h	430;"	d
DFLT_MAXMEMTOT	os_win32.h	121;"	d
DFLT_MENU_BG_COLOR	gui_x11.c	70;"	d	file:
DFLT_MENU_BG_COLOR	gui_x11.c	78;"	d	file:
DFLT_MENU_FG_COLOR	gui_x11.c	71;"	d	file:
DFLT_MENU_FG_COLOR	gui_x11.c	79;"	d	file:
DFLT_MENU_FONT	gui_x11.c	63;"	d	file:
DFLT_MENU_FONT	gui_x11.c	65;"	d	file:
DFLT_RUNTIMEPATH	os_amiga.h	44;"	d
DFLT_RUNTIMEPATH	os_dos.h	127;"	d
DFLT_RUNTIMEPATH	os_haiku.h	28;"	d
DFLT_RUNTIMEPATH	os_haiku.h	31;"	d
DFLT_RUNTIMEPATH	os_haiku.h	35;"	d
DFLT_RUNTIMEPATH	os_mac.h	211;"	d
DFLT_RUNTIMEPATH	os_unix.h	370;"	d
DFLT_RUNTIMEPATH	os_unix.h	375;"	d
DFLT_RUNTIMEPATH	os_unix.h	378;"	d
DFLT_RUNTIMEPATH	os_unix.h	382;"	d
DFLT_SCROLL_BG_COLOR	gui_x11.c	72;"	d	file:
DFLT_SCROLL_BG_COLOR	gui_x11.c	80;"	d	file:
DFLT_SCROLL_FG_COLOR	gui_x11.c	73;"	d	file:
DFLT_SCROLL_FG_COLOR	gui_x11.c	81;"	d	file:
DFLT_TEXTAUTO	option.h	101;"	d
DFLT_TEXTAUTO	option.h	107;"	d
DFLT_TEXTAUTO	option.h	110;"	d
DFLT_TOOLTIP_BG_COLOR	gui_x11.c	74;"	d	file:
DFLT_TOOLTIP_BG_COLOR	gui_x11.c	82;"	d	file:
DFLT_TOOLTIP_FG_COLOR	gui_x11.c	75;"	d	file:
DFLT_TOOLTIP_FG_COLOR	gui_x11.c	83;"	d	file:
DFLT_TOOLTIP_FONT	gui_x11.c	67;"	d	file:
DFLT_VDIR	os_amiga.h	219;"	d
DFLT_VDIR	os_dos.h	119;"	d
DFLT_VDIR	os_mac.h	205;"	d
DFLT_VDIR	os_unix.h	359;"	d
DFLT_VDIR	os_unix.h	361;"	d
DI2HIKEY	macros.h	316;"	d
DIALOG_MSG_SIZE	vim.h	1516;"	d
DICTITEM16_KEY_LEN	structs.h	1463;"	d
DICT_EXACT	insexpand.c	1151;"	d	file:
DICT_FIRST	insexpand.c	1150;"	d	file:
DICT_FLAG_HAS_DEFAULT	if_py_both.h	1687;"	d
DICT_FLAG_NONE_DEFAULT	if_py_both.h	1689;"	d
DICT_FLAG_POP	if_py_both.h	1688;"	d
DICT_FLAG_RETURN_BOOL	if_py_both.h	1690;"	d
DICT_FLAG_RETURN_PAIR	if_py_both.h	1691;"	d
DICT_MAXNEST	vim.h	2020;"	d
DID_FOLD	drawscreen.c	1412;"	d	file:
DID_LINE	drawscreen.c	1411;"	d	file:
DID_NONE	drawscreen.c	1410;"	d	file:
DIFF_CLOSE_OFF	diff.c	38;"	d	file:
DIFF_FILLER	diff.c	28;"	d	file:
DIFF_HIDDEN_OFF	diff.c	36;"	d	file:
DIFF_HORIZONTAL	diff.c	34;"	d	file:
DIFF_IBLANK	diff.c	29;"	d	file:
DIFF_ICASE	diff.c	30;"	d	file:
DIFF_INSERT	spellsuggest.c	188;"	d	file:
DIFF_INTERNAL	diff.c	37;"	d	file:
DIFF_IWHITE	diff.c	31;"	d	file:
DIFF_IWHITEALL	diff.c	32;"	d	file:
DIFF_IWHITEEOL	diff.c	33;"	d	file:
DIFF_NONE	spellsuggest.c	186;"	d	file:
DIFF_VERTICAL	diff.c	35;"	d	file:
DIFF_YES	spellsuggest.c	187;"	d	file:
DIGIT	regexp_bt.c	182;"	d	file:
DIP_AFTER	vim.h	2522;"	d
DIP_ALL	vim.h	2515;"	d
DIP_DIR	vim.h	2516;"	d
DIP_ERR	vim.h	2517;"	d
DIP_NOAFTER	vim.h	2521;"	d
DIP_NORTP	vim.h	2520;"	d
DIP_OPT	vim.h	2519;"	d
DIP_START	vim.h	2518;"	d
DI_FLAGS_ALLOC	structs.h	1477;"	d
DI_FLAGS_FIX	structs.h	1475;"	d
DI_FLAGS_LOCK	structs.h	1476;"	d
DI_FLAGS_RELOAD	structs.h	1478;"	d
DI_FLAGS_RO	structs.h	1473;"	d
DI_FLAGS_RO_SBX	structs.h	1474;"	d
DLG_ALLOC_SIZE	gui_w32.c	4075;"	d	file:
DLG_BUTTON_SEP	vim.h	1217;"	d
DLG_FONT_NAME	gui_w32.c	218;"	d	file:
DLG_FONT_POINT_SIZE	gui_w32.c	219;"	d	file:
DLG_HOTKEY_CHAR	vim.h	1218;"	d
DLG_ICON_HEIGHT	gui_w32.c	216;"	d	file:
DLG_ICON_WIDTH	gui_w32.c	215;"	d	file:
DLG_MIN_MAX_HEIGHT	gui_w32.c	221;"	d	file:
DLG_MIN_MAX_WIDTH	gui_w32.c	220;"	d	file:
DLG_MIN_WIDTH	gui_w32.c	217;"	d	file:
DLG_NONBUTTON_CONTROL	gui_w32.c	223;"	d	file:
DLG_OLD_STYLE_PADDING_X	gui_w32.c	211;"	d	file:
DLG_OLD_STYLE_PADDING_Y	gui_w32.c	212;"	d	file:
DLG_PADDING_X	gui_w32.c	209;"	d	file:
DLG_PADDING_Y	gui_w32.c	210;"	d	file:
DLG_VERT_PADDING_X	gui_w32.c	213;"	d	file:
DLG_VERT_PADDING_Y	gui_w32.c	214;"	d	file:
DLLGETVERSIONPROC	gui_w32.c	/^typedef HRESULT (WINAPI* DLLGETVERSIONPROC)(DLLVERSIONINFO *);$/;"	t	file:
DLLVERSIONINFO	gui_w32.c	/^} DLLVERSIONINFO;$/;"	t	typeref:struct:_DllVersionInfo	file:
DOBUF_CURRENT	vim.h	1006;"	d
DOBUF_DEL	vim.h	1001;"	d
DOBUF_FIRST	vim.h	1007;"	d
DOBUF_GOTO	vim.h	998;"	d
DOBUF_LAST	vim.h	1008;"	d
DOBUF_MOD	vim.h	1009;"	d
DOBUF_SPLIT	vim.h	999;"	d
DOBUF_UNLOAD	vim.h	1000;"	d
DOBUF_WIPE	vim.h	1002;"	d
DOBUF_WIPE_REUSE	vim.h	1003;"	d
DOCMD_EXCRESET	vim.h	1057;"	d
DOCMD_KEEPLINE	vim.h	1058;"	d
DOCMD_KEYTYPED	vim.h	1056;"	d
DOCMD_NOWAIT	vim.h	1054;"	d
DOCMD_REPEAT	vim.h	1055;"	d
DOCMD_VERBOSE	vim.h	1053;"	d
DONE_ACTION	fold.c	89;"	d	file:
DONE_FOLD	fold.c	90;"	d	file:
DONE_NOTHING	fold.c	88;"	d	file:
DOPY_FUNC	if_py_both.h	24;"	d
DOSINST	dosinst.c	19;"	d	file:
DOSO_GVIMRC	vim.h	2447;"	d
DOSO_NONE	vim.h	2445;"	d
DOSO_VIMRC	vim.h	2446;"	d
DOS_LIBRARY	os_amiga.c	253;"	d	file:
DOS_MOUSE	feature.h	968;"	d
DOUBLE2UINT16	gui_beval.c	849;"	d	file:
DOUBLE2UINT16	gui_beval.c	858;"	d	file:
DOUBLE_CLICK	os_mswin.c	71;"	d	file:
DOUBLE_CLICK	os_win32.c	81;"	d	file:
DO_AUTOCHDIR	macros.h	247;"	d
DO_AUTOCHDIR	macros.h	249;"	d
DO_DECLARE_EXCMD	ex_docmd.c	380;"	d	file:
DO_INIT	vim.h	1767;"	d
DO_NOT_FREE_CNT	vim.h	2543;"	d
DRAGQVAL	gui_w32.c	3634;"	d	file:
DRAWER_INSET	gui_mac.c	6319;"	d	file:
DRAWER_SIZE	gui_mac.c	6318;"	d	file:
DRAW_BOLD	gui.h	146;"	d
DRAW_CURSOR	gui.h	152;"	d
DRAW_END	gui_photon.c	832;"	d	file:
DRAW_ITALIC	gui.h	150;"	d
DRAW_START	gui_photon.c	831;"	d	file:
DRAW_STRIKE	gui.h	153;"	d
DRAW_TRANSP	gui.h	145;"	d
DRAW_UNDERC	gui.h	148;"	d
DRAW_UNDERL	gui.h	147;"	d
DT_CSCOPE	vim.h	1134;"	d
DT_FIRST	vim.h	1129;"	d
DT_FREE	vim.h	1136;"	d
DT_HELP	vim.h	1132;"	d
DT_JUMP	vim.h	1133;"	d
DT_LAST	vim.h	1130;"	d
DT_LTAG	vim.h	1135;"	d
DT_NEXT	vim.h	1127;"	d
DT_POP	vim.h	1126;"	d
DT_PREV	vim.h	1128;"	d
DT_SELECT	vim.h	1131;"	d
DT_TAG	vim.h	1125;"	d
DUMPFLAG_ALLCAP	spell.c	3783;"	d	file:
DUMPFLAG_COUNT	spell.c	3780;"	d	file:
DUMPFLAG_ICASE	spell.c	3781;"	d	file:
DUMPFLAG_KEEPCASE	spell.c	3779;"	d	file:
DUMPFLAG_ONECAP	spell.c	3782;"	d	file:
DUM_LEN	getchar.c	3345;"	d	file:
DWORD	gui_w32.c	/^typedef int DWORD;$/;"	t	file:
DWORD	os_mswin.c	/^typedef int DWORD;$/;"	t	file:
DWORD	os_win32.c	/^typedef int DWORD;$/;"	t	file:
DWORD	terminal.c	/^typedef int DWORD;$/;"	t	file:
DWORD	vim.h	/^typedef int DWORD;$/;"	t
DWORD	winclip.c	/^typedef int DWORD;$/;"	t	file:
DWORD_PTR	terminal.c	/^typedef int *DWORD_PTR;$/;"	t	file:
DWriteContext	gui_dwrite.h	/^typedef struct DWriteContext DWriteContext;$/;"	t	typeref:struct:DWriteContext
DWriteRenderingParams	gui_dwrite.h	/^typedef struct DWriteRenderingParams {$/;"	s
DWriteRenderingParams	gui_dwrite.h	/^} DWriteRenderingParams;$/;"	t	typeref:struct:DWriteRenderingParams
DYNAMIC_ICONV	os_vms_conf.h	178;"	d
DYNAMIC_ICONV	os_vms_conf.h	187;"	d
DYNAMIC_ICONV_DLL	mbyte.c	4688;"	d	file:
DYNAMIC_ICONV_DLL_ALT1	mbyte.c	4689;"	d	file:
DYNAMIC_ICONV_DLL_ALT2	mbyte.c	4690;"	d	file:
DYNAMIC_ICONV_DLL_ALT3	mbyte.c	4691;"	d	file:
DYNAMIC_MSVCRT_DLL	mbyte.c	4694;"	d	file:
DYNAMIC_TCL_DLL	if_tcl.c	153;"	d	file:
DYNAMIC_TCL_VER	if_tcl.c	156;"	d	file:
DYN_CONSOLE_SCREEN_BUFFER_INFOEX	os_win32.c	/^} DYN_CONSOLE_SCREEN_BUFFER_INFOEX, *PDYN_CONSOLE_SCREEN_BUFFER_INFOEX;$/;"	t	typeref:struct:_DYN_CONSOLE_SCREEN_BUFFER_INFOEX	file:
DYN_STARTUPINFOEXW	terminal.c	/^} DYN_STARTUPINFOEXW, *PDYN_STARTUPINFOEXW;$/;"	t	typeref:struct:_DYN_STARTUPINFOEXW	file:
DY_LASTLINE	option.h	518;"	d
DY_TRUNCATE	option.h	519;"	d
DY_UHEX	option.h	520;"	d
DeleteAnyLingerer	if_xcmdsrv.c	/^DeleteAnyLingerer($/;"	f	file:
DeleteBrush	gui_w32.c	3821;"	d	file:
Destroy	gui_at_sb.c	/^Destroy(Widget w)$/;"	f	file:
Destroy	gui_xmebw.c	/^Destroy(Widget w)$/;"	f	file:
DialogAcceptCB	gui_motif.c	/^DialogAcceptCB($/;"	f	file:
DialogCancelCB	gui_motif.c	/^DialogCancelCB($/;"	f	file:
DialogHotkeyFilterProc	gui_mac.c	/^DialogHotkeyFilterProc ($/;"	f	file:
DialogInfo	gui_gtk.c	/^} DialogInfo;$/;"	t	typeref:struct:_DialogInfo	file:
DictionaryAsMapping	if_py_both.h	/^static PyMappingMethods DictionaryAsMapping = {$/;"	v
DictionaryAsSeq	if_py_both.h	/^static PySequenceMethods DictionaryAsSeq = {$/;"	v
DictionaryAssItem	if_py_both.h	/^DictionaryAssItem($/;"	f
DictionaryAttrs	if_py_both.h	/^static char *DictionaryAttrs[] = {$/;"	v
DictionaryConstructor	if_py_both.h	/^DictionaryConstructor(PyTypeObject *subtype, PyObject *args, PyObject *kwargs)$/;"	f
DictionaryContains	if_py_both.h	/^DictionaryContains(DictionaryObject *self, PyObject *keyObject)$/;"	f
DictionaryDestructor	if_py_both.h	/^DictionaryDestructor(DictionaryObject *self)$/;"	f
DictionaryDir	if_py_both.h	/^DictionaryDir(PyObject *self)$/;"	f
DictionaryGet	if_py_both.h	/^DictionaryGet(DictionaryObject *self, PyObject *args)$/;"	f
DictionaryGetattr	if_python.c	/^DictionaryGetattr(PyObject *self, char *name)$/;"	f	file:
DictionaryGetattro	if_python3.c	/^DictionaryGetattro(PyObject *self, PyObject *nameobj)$/;"	f	file:
DictionaryHasKey	if_py_both.h	/^DictionaryHasKey(DictionaryObject *self, PyObject *keyObject)$/;"	f
DictionaryItem	if_py_both.h	/^DictionaryItem(DictionaryObject *self, PyObject *keyObject)$/;"	f
DictionaryIter	if_py_both.h	/^DictionaryIter(DictionaryObject *self)$/;"	f
DictionaryIterNext	if_py_both.h	/^DictionaryIterNext(dictiterinfo_T **dii)$/;"	f
DictionaryLength	if_py_both.h	/^DictionaryLength(DictionaryObject *self)$/;"	f
DictionaryListItems	if_py_both.h	/^DictionaryListItems(DictionaryObject *self)$/;"	f
DictionaryListKeys	if_py_both.h	/^DictionaryListKeys(DictionaryObject *self)$/;"	f
DictionaryListObjects	if_py_both.h	/^DictionaryListObjects(DictionaryObject *self, hi_to_py hiconvert)$/;"	f
DictionaryListValues	if_py_both.h	/^DictionaryListValues(DictionaryObject *self)$/;"	f
DictionaryMethods	if_py_both.h	/^static struct PyMethodDef DictionaryMethods[] = {$/;"	v	typeref:struct:PyMethodDef
DictionaryNew	if_py_both.h	/^DictionaryNew(PyTypeObject *subtype, dict_T *dict)$/;"	f
DictionaryObject	if_py_both.h	/^} DictionaryObject;$/;"	t	typeref:struct:__anon154
DictionaryPop	if_py_both.h	/^DictionaryPop(DictionaryObject *self, PyObject *args)$/;"	f
DictionaryPopItem	if_py_both.h	/^DictionaryPopItem(DictionaryObject *self)$/;"	f
DictionarySetattr	if_py_both.h	/^DictionarySetattr(DictionaryObject *self, char *name, PyObject *valObject)$/;"	f
DictionarySetattro	if_python3.c	/^DictionarySetattro(PyObject *self, PyObject *nameobj, PyObject *val)$/;"	f	file:
DictionaryType	if_py_both.h	/^static PyTypeObject DictionaryType;$/;"	v
DictionaryUpdate	if_py_both.h	/^DictionaryUpdate(DictionaryObject *self, PyObject *args, PyObject *kwargs)$/;"	f
Display	proto.h	24;"	d
DllMain	os_w32dll.c	/^BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)$/;"	f
DoPyCommand	if_python.c	/^DoPyCommand(const char *cmd, rangeinitializer init_range, runner run, void *arg)$/;"	f	file:
DoPyCommand	if_python3.c	/^DoPyCommand(const char *cmd, rangeinitializer init_range, runner run, void *arg)$/;"	f	file:
DoRegisterName	if_xcmdsrv.c	/^DoRegisterName(Display *dpy, char_u *name)$/;"	f	file:
DumpPutS	os_mswin.c	/^DumpPutS(const char *psz UNUSED)$/;"	f
EBCDIC_CHAR_ADD	ascii.h	98;"	d
EBCDIC_CHAR_ADD_	ascii.h	97;"	d
ECMD_ADDBUF	vim.h	1045;"	d
ECMD_FORCEIT	vim.h	1044;"	d
ECMD_HIDE	vim.h	1040;"	d
ECMD_LAST	vim.h	1049;"	d
ECMD_LASTL	vim.h	1048;"	d
ECMD_OLDBUF	vim.h	1043;"	d
ECMD_ONE	vim.h	1050;"	d
ECMD_SET_HELP	vim.h	1041;"	d
ECONNREFUSED	channel.c	27;"	d	file:
ECONNREFUSED	channel.c	28;"	d	file:
EDIT_FILE	main.c	28;"	d	file:
EDIT_NONE	main.c	27;"	d	file:
EDIT_QF	main.c	31;"	d	file:
EDIT_STDIN	main.c	29;"	d	file:
EDIT_TAG	main.c	30;"	d	file:
EILSEQ	structs.h	1086;"	d
EILSEQ	vim.h	2276;"	d
EINPROGRESS	channel.c	31;"	d	file:
EINPROGRESS	channel.c	32;"	d	file:
EINTR	channel.c	34;"	d	file:
EINTR	channel.c	36;"	d	file:
ELAPSED_FUNC	vim.h	2624;"	d
ELAPSED_FUNC	vim.h	2630;"	d
ELAPSED_INIT	vim.h	2623;"	d
ELAPSED_INIT	vim.h	2629;"	d
ELAPSED_TICKCOUNT	vim.h	2628;"	d
ELAPSED_TIMEVAL	vim.h	2622;"	d
EMIT	regexp_nfa.c	273;"	d	file:
EMIT2	regexp_nfa.c	1170;"	d	file:
EMIT2	regexp_nfa.c	693;"	d	file:
EMITMBC	regexp_nfa.c	1171;"	d	file:
EMITMBC	regexp_nfa.c	694;"	d	file:
EMPTY_IF_NULL	macros.h	115;"	d
EMSG2_RET_FAIL	regexp.c	68;"	d	file:
EMSG2_RET_NULL	regexp.c	66;"	d	file:
EMSG3_RET_NULL	regexp.c	67;"	d	file:
EMSG_ONE_RET_NULL	regexp.c	69;"	d	file:
EMSG_RET_FAIL	regexp.c	65;"	d	file:
EMSG_RET_NULL	regexp.c	63;"	d	file:
ENABLE_LOG	regexp_nfa.c	26;"	d	file:
ENABLE_LOG	regexp_nfa.c	7417;"	d	file:
ENABLE_NLS	gui_gtk.c	67;"	d	file:
ENABLE_NLS	gui_gtk_x11.c	51;"	d	file:
ENABLE_VIRTUAL_TERMINAL_PROCESSING	os_win32.c	227;"	d	file:
ENCODING	gui_xmdlg.c	/^    ENCODING,$/;"	e	enum:ListSpecifier	file:
ENC_2BYTE	vim.h	2266;"	d
ENC_2WORD	vim.h	2268;"	d
ENC_4BYTE	vim.h	2267;"	d
ENC_8BIT	vim.h	2259;"	d
ENC_DBCS	vim.h	2260;"	d
ENC_DFLT	option.h	119;"	d
ENC_ENDIAN_B	vim.h	2263;"	d
ENC_ENDIAN_L	vim.h	2264;"	d
ENC_LATIN1	vim.h	2270;"	d
ENC_LATIN9	vim.h	2271;"	d
ENC_MACROMAN	vim.h	2272;"	d
ENC_OPT	if_py_both.h	23;"	d
ENC_UCSBOM	option.h	116;"	d
ENC_UNICODE	vim.h	2261;"	d
END	regexp_bt.c	138;"	d	file:
END_PAGE_DATA	gui_at_sb.h	143;"	d
ENUMLOGFONT	gui_w32.c	/^typedef int ENUMLOGFONT;$/;"	t	file:
ENUMLOGFONTW	os_mswin.c	/^typedef int ENUMLOGFONTW;$/;"	t	file:
EOL	regexp_bt.c	140;"	d	file:
EOL_DEFAULT	os_mac.h	96;"	d
EOL_DOS	option.h	124;"	d
EOL_MAC	option.h	125;"	d
EOL_UNIX	option.h	123;"	d
EOL_UNKNOWN	option.h	122;"	d
EOW	regexp_bt.c	158;"	d	file:
EQN	os_vms.c	85;"	d	file:
EQUAL_POS	macros.h	34;"	d
EQUIVAL_CLASS_C	regexp.c	/^static char *EQUIVAL_CLASS_C[16] = {$/;"	v	file:
ERROR_IF_ANY_POPUP_WINDOW	macros.h	348;"	d
ERROR_IF_ANY_POPUP_WINDOW	macros.h	351;"	d
ERROR_IF_POPUP_WINDOW	macros.h	347;"	d
ERROR_IF_POPUP_WINDOW	macros.h	350;"	d
ERROR_IF_TERM_POPUP_WINDOW	macros.h	354;"	d
ERROR_IF_TERM_POPUP_WINDOW	macros.h	356;"	d
ESC	ascii.h	111;"	d
ESC	ascii.h	32;"	d
ESCAPE_CHARS	ex_docmd.c	4200;"	d	file:
ESC_STR	ascii.h	112;"	d
ESC_STR	ascii.h	33;"	d
ESC_STR_nc	ascii.h	113;"	d
ESC_STR_nc	ascii.h	34;"	d
ESTACK_CHECK_DECLARATION	macros.h	361;"	d
ESTACK_CHECK_DECLARATION	macros.h	366;"	d
ESTACK_CHECK_NOW	macros.h	363;"	d
ESTACK_CHECK_NOW	macros.h	368;"	d
ESTACK_CHECK_SETUP	macros.h	362;"	d
ESTACK_CHECK_SETUP	macros.h	367;"	d
ETYPE_ARGS	structs.h	/^    ETYPE_ARGS,             \/\/ command line argument$/;"	e	enum:__anon224
ETYPE_AUCMD	structs.h	/^    ETYPE_AUCMD,            \/\/ autocomand, use es_info.aucmd$/;"	e	enum:__anon224
ETYPE_ENV	structs.h	/^    ETYPE_ENV,              \/\/ environment variable$/;"	e	enum:__anon224
ETYPE_EXCEPT	structs.h	/^    ETYPE_EXCEPT,           \/\/ exception, use es_info.exception$/;"	e	enum:__anon224
ETYPE_INTERNAL	structs.h	/^    ETYPE_INTERNAL,         \/\/ internal operation$/;"	e	enum:__anon224
ETYPE_MODELINE	structs.h	/^    ETYPE_MODELINE,         \/\/ modeline, use es_info.sctx$/;"	e	enum:__anon224
ETYPE_SCRIPT	structs.h	/^    ETYPE_SCRIPT,           \/\/ sourcing script, use es_info.sctx$/;"	e	enum:__anon224
ETYPE_SPELL	structs.h	/^    ETYPE_SPELL,            \/\/ loading spell file$/;"	e	enum:__anon224
ETYPE_TOP	structs.h	/^    ETYPE_TOP,		    \/\/ toplevel$/;"	e	enum:__anon224
ETYPE_UFUNC	structs.h	/^    ETYPE_UFUNC,            \/\/ user function, use es_info.ufunc$/;"	e	enum:__anon224
ET_ERROR	structs.h	/^    ET_ERROR,		\/\/ error exception$/;"	e	enum:__anon194
ET_INTERRUPT	structs.h	/^    ET_INTERRUPT,	\/\/ interrupt exception triggered by Ctrl-C$/;"	e	enum:__anon194
ET_USER	structs.h	/^    ET_USER,		\/\/ exception caused by ":throw" command$/;"	e	enum:__anon194
EVALCMD_BUSY	evalvars.c	3246;"	d	file:
EVAL_OFFSET_X	beval.h	84;"	d
EVAL_OFFSET_Y	beval.h	85;"	d
EVENT_BUFADD	vim.h	/^    EVENT_BUFADD = 0,		\/\/ after adding a buffer to the buffer list$/;"	e	enum:auto_event
EVENT_BUFDELETE	vim.h	/^    EVENT_BUFDELETE,		\/\/ deleting a buffer from the buffer list$/;"	e	enum:auto_event
EVENT_BUFENTER	vim.h	/^    EVENT_BUFENTER,		\/\/ after entering a buffer$/;"	e	enum:auto_event
EVENT_BUFFER_SIZE	gui_photon.c	40;"	d	file:
EVENT_BUFFILEPOST	vim.h	/^    EVENT_BUFFILEPOST,		\/\/ after renaming a buffer$/;"	e	enum:auto_event
EVENT_BUFFILEPRE	vim.h	/^    EVENT_BUFFILEPRE,		\/\/ before renaming a buffer$/;"	e	enum:auto_event
EVENT_BUFHIDDEN	vim.h	/^    EVENT_BUFHIDDEN,		\/\/ just after buffer becomes hidden$/;"	e	enum:auto_event
EVENT_BUFLEAVE	vim.h	/^    EVENT_BUFLEAVE,		\/\/ before leaving a buffer$/;"	e	enum:auto_event
EVENT_BUFNEW	vim.h	/^    EVENT_BUFNEW,		\/\/ after creating any buffer$/;"	e	enum:auto_event
EVENT_BUFNEWFILE	vim.h	/^    EVENT_BUFNEWFILE,		\/\/ when creating a buffer for a new file$/;"	e	enum:auto_event
EVENT_BUFREADCMD	vim.h	/^    EVENT_BUFREADCMD,		\/\/ read buffer using command$/;"	e	enum:auto_event
EVENT_BUFREADPOST	vim.h	/^    EVENT_BUFREADPOST,		\/\/ after reading a buffer$/;"	e	enum:auto_event
EVENT_BUFREADPRE	vim.h	/^    EVENT_BUFREADPRE,		\/\/ before reading a buffer$/;"	e	enum:auto_event
EVENT_BUFUNLOAD	vim.h	/^    EVENT_BUFUNLOAD,		\/\/ just before unloading a buffer$/;"	e	enum:auto_event
EVENT_BUFWINENTER	vim.h	/^    EVENT_BUFWINENTER,		\/\/ after showing a buffer in a window$/;"	e	enum:auto_event
EVENT_BUFWINLEAVE	vim.h	/^    EVENT_BUFWINLEAVE,		\/\/ just after buffer removed from window$/;"	e	enum:auto_event
EVENT_BUFWIPEOUT	vim.h	/^    EVENT_BUFWIPEOUT,		\/\/ just before really deleting a buffer$/;"	e	enum:auto_event
EVENT_BUFWRITECMD	vim.h	/^    EVENT_BUFWRITECMD,		\/\/ write buffer using command$/;"	e	enum:auto_event
EVENT_BUFWRITEPOST	vim.h	/^    EVENT_BUFWRITEPOST,		\/\/ after writing a buffer$/;"	e	enum:auto_event
EVENT_BUFWRITEPRE	vim.h	/^    EVENT_BUFWRITEPRE,		\/\/ before writing a buffer$/;"	e	enum:auto_event
EVENT_CMDLINECHANGED	vim.h	/^    EVENT_CMDLINECHANGED,	\/\/ command line was modified$/;"	e	enum:auto_event
EVENT_CMDLINEENTER	vim.h	/^    EVENT_CMDLINEENTER,		\/\/ after entering the command line$/;"	e	enum:auto_event
EVENT_CMDLINELEAVE	vim.h	/^    EVENT_CMDLINELEAVE,		\/\/ before leaving the command line$/;"	e	enum:auto_event
EVENT_CMDUNDEFINED	vim.h	/^    EVENT_CMDUNDEFINED,		\/\/ command undefined$/;"	e	enum:auto_event
EVENT_CMDWINENTER	vim.h	/^    EVENT_CMDWINENTER,		\/\/ after entering the cmdline window$/;"	e	enum:auto_event
EVENT_CMDWINLEAVE	vim.h	/^    EVENT_CMDWINLEAVE,		\/\/ before leaving the cmdline window$/;"	e	enum:auto_event
EVENT_COLORSCHEME	vim.h	/^    EVENT_COLORSCHEME,		\/\/ after loading a colorscheme$/;"	e	enum:auto_event
EVENT_COLORSCHEMEPRE	vim.h	/^    EVENT_COLORSCHEMEPRE,	\/\/ before loading a colorscheme$/;"	e	enum:auto_event
EVENT_COMPLETECHANGED	vim.h	/^    EVENT_COMPLETECHANGED,	\/\/ after completion popup menu changed$/;"	e	enum:auto_event
EVENT_COMPLETEDONE	vim.h	/^    EVENT_COMPLETEDONE,		\/\/ after finishing insert complete$/;"	e	enum:auto_event
EVENT_COMPLETEDONEPRE	vim.h	/^    EVENT_COMPLETEDONEPRE,	\/\/ idem, before clearing info$/;"	e	enum:auto_event
EVENT_CURSORHOLD	vim.h	/^    EVENT_CURSORHOLD,		\/\/ cursor in same position for a while$/;"	e	enum:auto_event
EVENT_CURSORHOLDI	vim.h	/^    EVENT_CURSORHOLDI,		\/\/ idem, in Insert mode$/;"	e	enum:auto_event
EVENT_CURSORMOVED	vim.h	/^    EVENT_CURSORMOVED,		\/\/ cursor was moved$/;"	e	enum:auto_event
EVENT_CURSORMOVEDI	vim.h	/^    EVENT_CURSORMOVEDI,		\/\/ cursor was moved in Insert mode$/;"	e	enum:auto_event
EVENT_DIFFUPDATED	vim.h	/^    EVENT_DIFFUPDATED,		\/\/ after diffs were updated$/;"	e	enum:auto_event
EVENT_DIRCHANGED	vim.h	/^    EVENT_DIRCHANGED,		\/\/ after user changed directory$/;"	e	enum:auto_event
EVENT_ENCODINGCHANGED	vim.h	/^    EVENT_ENCODINGCHANGED,	\/\/ after changing the 'encoding' option$/;"	e	enum:auto_event
EVENT_EXITPRE	vim.h	/^    EVENT_EXITPRE,		\/\/ before exiting$/;"	e	enum:auto_event
EVENT_FILEAPPENDCMD	vim.h	/^    EVENT_FILEAPPENDCMD,	\/\/ append to a file using command$/;"	e	enum:auto_event
EVENT_FILEAPPENDPOST	vim.h	/^    EVENT_FILEAPPENDPOST,	\/\/ after appending to a file$/;"	e	enum:auto_event
EVENT_FILEAPPENDPRE	vim.h	/^    EVENT_FILEAPPENDPRE,	\/\/ before appending to a file$/;"	e	enum:auto_event
EVENT_FILECHANGEDRO	vim.h	/^    EVENT_FILECHANGEDRO,	\/\/ before first change to read-only file$/;"	e	enum:auto_event
EVENT_FILECHANGEDSHELL	vim.h	/^    EVENT_FILECHANGEDSHELL,	\/\/ after shell command that changed file$/;"	e	enum:auto_event
EVENT_FILECHANGEDSHELLPOST	vim.h	/^    EVENT_FILECHANGEDSHELLPOST,	\/\/ after (not) reloading changed file$/;"	e	enum:auto_event
EVENT_FILEREADCMD	vim.h	/^    EVENT_FILEREADCMD,		\/\/ read from a file using command$/;"	e	enum:auto_event
EVENT_FILEREADPOST	vim.h	/^    EVENT_FILEREADPOST,		\/\/ after reading a file$/;"	e	enum:auto_event
EVENT_FILEREADPRE	vim.h	/^    EVENT_FILEREADPRE,		\/\/ before reading a file$/;"	e	enum:auto_event
EVENT_FILETYPE	vim.h	/^    EVENT_FILETYPE,		\/\/ new file type detected (user defined)$/;"	e	enum:auto_event
EVENT_FILEWRITECMD	vim.h	/^    EVENT_FILEWRITECMD,		\/\/ write to a file using command$/;"	e	enum:auto_event
EVENT_FILEWRITEPOST	vim.h	/^    EVENT_FILEWRITEPOST,	\/\/ after writing a file$/;"	e	enum:auto_event
EVENT_FILEWRITEPRE	vim.h	/^    EVENT_FILEWRITEPRE,		\/\/ before writing a file$/;"	e	enum:auto_event
EVENT_FILTERREADPOST	vim.h	/^    EVENT_FILTERREADPOST,	\/\/ after reading from a filter$/;"	e	enum:auto_event
EVENT_FILTERREADPRE	vim.h	/^    EVENT_FILTERREADPRE,	\/\/ before reading from a filter$/;"	e	enum:auto_event
EVENT_FILTERWRITEPOST	vim.h	/^    EVENT_FILTERWRITEPOST,	\/\/ after writing to a filter$/;"	e	enum:auto_event
EVENT_FILTERWRITEPRE	vim.h	/^    EVENT_FILTERWRITEPRE,	\/\/ before writing to a filter$/;"	e	enum:auto_event
EVENT_FOCUSGAINED	vim.h	/^    EVENT_FOCUSGAINED,		\/\/ got the focus$/;"	e	enum:auto_event
EVENT_FOCUSLOST	vim.h	/^    EVENT_FOCUSLOST,		\/\/ lost the focus to another app$/;"	e	enum:auto_event
EVENT_FUNCUNDEFINED	vim.h	/^    EVENT_FUNCUNDEFINED,	\/\/ if calling a function which doesn't exist$/;"	e	enum:auto_event
EVENT_GUIENTER	vim.h	/^    EVENT_GUIENTER,		\/\/ after starting the GUI$/;"	e	enum:auto_event
EVENT_GUIFAILED	vim.h	/^    EVENT_GUIFAILED,		\/\/ after starting the GUI failed$/;"	e	enum:auto_event
EVENT_INSERTCHANGE	vim.h	/^    EVENT_INSERTCHANGE,		\/\/ when changing Insert\/Replace mode$/;"	e	enum:auto_event
EVENT_INSERTCHARPRE	vim.h	/^    EVENT_INSERTCHARPRE,	\/\/ before inserting a char$/;"	e	enum:auto_event
EVENT_INSERTENTER	vim.h	/^    EVENT_INSERTENTER,		\/\/ when entering Insert mode$/;"	e	enum:auto_event
EVENT_INSERTLEAVE	vim.h	/^    EVENT_INSERTLEAVE,		\/\/ when leaving Insert mode$/;"	e	enum:auto_event
EVENT_MENUPOPUP	vim.h	/^    EVENT_MENUPOPUP,		\/\/ just before popup menu is displayed$/;"	e	enum:auto_event
EVENT_OPTIONSET	vim.h	/^    EVENT_OPTIONSET,		\/\/ option was set$/;"	e	enum:auto_event
EVENT_QUICKFIXCMDPOST	vim.h	/^    EVENT_QUICKFIXCMDPOST,	\/\/ after :make, :grep etc.$/;"	e	enum:auto_event
EVENT_QUICKFIXCMDPRE	vim.h	/^    EVENT_QUICKFIXCMDPRE,	\/\/ before :make, :grep etc.$/;"	e	enum:auto_event
EVENT_QUITPRE	vim.h	/^    EVENT_QUITPRE,		\/\/ before :quit$/;"	e	enum:auto_event
EVENT_REMOTEREPLY	vim.h	/^    EVENT_REMOTEREPLY,		\/\/ upon string reception from a remote vim$/;"	e	enum:auto_event
EVENT_SAFESTATE	vim.h	/^    EVENT_SAFESTATE,		\/\/ going to wait for a character$/;"	e	enum:auto_event
EVENT_SAFESTATEAGAIN	vim.h	/^    EVENT_SAFESTATEAGAIN,	\/\/ still waiting for a character$/;"	e	enum:auto_event
EVENT_SESSIONLOADPOST	vim.h	/^    EVENT_SESSIONLOADPOST,	\/\/ after loading a session file$/;"	e	enum:auto_event
EVENT_SHELLCMDPOST	vim.h	/^    EVENT_SHELLCMDPOST,		\/\/ after ":!cmd"$/;"	e	enum:auto_event
EVENT_SHELLFILTERPOST	vim.h	/^    EVENT_SHELLFILTERPOST,	\/\/ after ":1,2!cmd", ":w !cmd", ":r !cmd".$/;"	e	enum:auto_event
EVENT_SOURCECMD	vim.h	/^    EVENT_SOURCECMD,		\/\/ sourcing a Vim script using command$/;"	e	enum:auto_event
EVENT_SOURCEPOST	vim.h	/^    EVENT_SOURCEPOST,		\/\/ after sourcing a Vim script$/;"	e	enum:auto_event
EVENT_SOURCEPRE	vim.h	/^    EVENT_SOURCEPRE,		\/\/ before sourcing a Vim script$/;"	e	enum:auto_event
EVENT_SPELLFILEMISSING	vim.h	/^    EVENT_SPELLFILEMISSING,	\/\/ spell file missing$/;"	e	enum:auto_event
EVENT_STDINREADPOST	vim.h	/^    EVENT_STDINREADPOST,	\/\/ after reading from stdin$/;"	e	enum:auto_event
EVENT_STDINREADPRE	vim.h	/^    EVENT_STDINREADPRE,		\/\/ before reading from stdin$/;"	e	enum:auto_event
EVENT_SWAPEXISTS	vim.h	/^    EVENT_SWAPEXISTS,		\/\/ found existing swap file$/;"	e	enum:auto_event
EVENT_SYNTAX	vim.h	/^    EVENT_SYNTAX,		\/\/ syntax selected$/;"	e	enum:auto_event
EVENT_TABCLOSED	vim.h	/^    EVENT_TABCLOSED,		\/\/ after closing a tab page$/;"	e	enum:auto_event
EVENT_TABENTER	vim.h	/^    EVENT_TABENTER,		\/\/ after entering a tab page$/;"	e	enum:auto_event
EVENT_TABLEAVE	vim.h	/^    EVENT_TABLEAVE,		\/\/ before leaving a tab page$/;"	e	enum:auto_event
EVENT_TABNEW	vim.h	/^    EVENT_TABNEW,		\/\/ when entering a new tab page$/;"	e	enum:auto_event
EVENT_TERMCHANGED	vim.h	/^    EVENT_TERMCHANGED,		\/\/ after changing 'term'$/;"	e	enum:auto_event
EVENT_TERMINALOPEN	vim.h	/^    EVENT_TERMINALOPEN,		\/\/ after a terminal buffer was created$/;"	e	enum:auto_event
EVENT_TERMINALWINOPEN	vim.h	/^    EVENT_TERMINALWINOPEN,	\/\/ after a terminal buffer was created and entering its window$/;"	e	enum:auto_event
EVENT_TERMRESPONSE	vim.h	/^    EVENT_TERMRESPONSE,		\/\/ after setting "v:termresponse"$/;"	e	enum:auto_event
EVENT_TEXTCHANGED	vim.h	/^    EVENT_TEXTCHANGED,		\/\/ text was modified not in Insert mode$/;"	e	enum:auto_event
EVENT_TEXTCHANGEDI	vim.h	/^    EVENT_TEXTCHANGEDI,         \/\/ text was modified in Insert mode$/;"	e	enum:auto_event
EVENT_TEXTCHANGEDP	vim.h	/^    EVENT_TEXTCHANGEDP,         \/\/ TextChangedI with popup menu visible$/;"	e	enum:auto_event
EVENT_TEXTYANKPOST	vim.h	/^    EVENT_TEXTYANKPOST,		\/\/ after some text was yanked$/;"	e	enum:auto_event
EVENT_USER	vim.h	/^    EVENT_USER,			\/\/ user defined autocommand$/;"	e	enum:auto_event
EVENT_VIMENTER	vim.h	/^    EVENT_VIMENTER,		\/\/ after starting Vim$/;"	e	enum:auto_event
EVENT_VIMLEAVE	vim.h	/^    EVENT_VIMLEAVE,		\/\/ before exiting Vim$/;"	e	enum:auto_event
EVENT_VIMLEAVEPRE	vim.h	/^    EVENT_VIMLEAVEPRE,		\/\/ before exiting Vim and writing .viminfo$/;"	e	enum:auto_event
EVENT_VIMRESIZED	vim.h	/^    EVENT_VIMRESIZED,		\/\/ after Vim window was resized$/;"	e	enum:auto_event
EVENT_WINENTER	vim.h	/^    EVENT_WINENTER,		\/\/ after entering a window$/;"	e	enum:auto_event
EVENT_WINLEAVE	vim.h	/^    EVENT_WINLEAVE,		\/\/ before leaving a window$/;"	e	enum:auto_event
EVENT_WINNEW	vim.h	/^    EVENT_WINNEW,		\/\/ when entering a new window$/;"	e	enum:auto_event
EVIM_FILE	os_amiga.h	176;"	d
EVIM_FILE	os_dos.h	32;"	d
EVIM_FILE	os_mac.h	136;"	d
EVIM_FILE	os_unix.h	307;"	d
EWOULDBLOCK	channel.c	29;"	d	file:
EWOULDBLOCK	channel.c	30;"	d	file:
EW_ADDSLASH	vim.h	829;"	d
EW_ALLLINKS	vim.h	840;"	d
EW_DIR	vim.h	826;"	d
EW_DODOT	vim.h	843;"	d
EW_EMPTYOK	vim.h	844;"	d
EW_EXEC	vim.h	832;"	d
EW_FILE	vim.h	827;"	d
EW_ICASE	vim.h	834;"	d
EW_KEEPALL	vim.h	830;"	d
EW_KEEPDOLLAR	vim.h	837;"	d
EW_NOERROR	vim.h	835;"	d
EW_NOTENV	vim.h	845;"	d
EW_NOTFOUND	vim.h	828;"	d
EW_NOTWILD	vim.h	836;"	d
EW_PATH	vim.h	833;"	d
EW_SHELLCMD	vim.h	841;"	d
EW_SILENT	vim.h	831;"	d
EXACTLY	regexp_bt.c	144;"	d	file:
EXCMD	ex_cmds.h	1816;"	d
EXCMD	ex_cmds.h	93;"	d
EXEC_FAILED	os_unix.c	4506;"	d	file:
EXFLAG_LIST	ex_cmds.h	1876;"	d
EXFLAG_NR	ex_cmds.h	1877;"	d
EXFLAG_PRINT	ex_cmds.h	1878;"	d
EXMODE_NORMAL	vim.h	797;"	d
EXMODE_VIM	vim.h	798;"	d
EXPAND_ARGLIST	vim.h	793;"	d
EXPAND_AUGROUP	vim.h	759;"	d
EXPAND_BEHAVE	vim.h	781;"	d
EXPAND_BOOL_SETTINGS	vim.h	750;"	d
EXPAND_BUFFERS	vim.h	754;"	d
EXPAND_COLORS	vim.h	773;"	d
EXPAND_COMMANDS	vim.h	746;"	d
EXPAND_COMPILER	vim.h	774;"	d
EXPAND_CSCOPE	vim.h	778;"	d
EXPAND_DIFF_BUFFERS	vim.h	794;"	d
EXPAND_DIRECTORIES	vim.h	748;"	d
EXPAND_ENV_VARS	vim.h	771;"	d
EXPAND_EVENTS	vim.h	755;"	d
EXPAND_EXPRESSION	vim.h	765;"	d
EXPAND_FILENAMES	structs.h	3863;"	d
EXPAND_FILES	vim.h	747;"	d
EXPAND_FILES_IN_PATH	vim.h	783;"	d
EXPAND_FILETYPE	vim.h	782;"	d
EXPAND_FUNCTIONS	vim.h	763;"	d
EXPAND_HELP	vim.h	753;"	d
EXPAND_HIGHLIGHT	vim.h	758;"	d
EXPAND_HISTORY	vim.h	786;"	d
EXPAND_LANGUAGE	vim.h	772;"	d
EXPAND_LOCALES	vim.h	785;"	d
EXPAND_MAPCLEAR	vim.h	792;"	d
EXPAND_MAPPINGS	vim.h	761;"	d
EXPAND_MENUNAMES	vim.h	766;"	d
EXPAND_MENUS	vim.h	756;"	d
EXPAND_MESSAGES	vim.h	791;"	d
EXPAND_NOTHING	vim.h	745;"	d
EXPAND_OK	vim.h	744;"	d
EXPAND_OLD_SETTING	vim.h	752;"	d
EXPAND_OWNSYNTAX	vim.h	784;"	d
EXPAND_PACKADD	vim.h	790;"	d
EXPAND_PROFILE	vim.h	780;"	d
EXPAND_SETTINGS	vim.h	749;"	d
EXPAND_SHELLCMD	vim.h	777;"	d
EXPAND_SIGN	vim.h	779;"	d
EXPAND_SYNTAX	vim.h	757;"	d
EXPAND_SYNTIME	vim.h	788;"	d
EXPAND_TAGS	vim.h	751;"	d
EXPAND_TAGS_LISTFILES	vim.h	762;"	d
EXPAND_UNSUCCESSFUL	vim.h	743;"	d
EXPAND_USER	vim.h	787;"	d
EXPAND_USER_ADDR_TYPE	vim.h	789;"	d
EXPAND_USER_CMD_FLAGS	vim.h	768;"	d
EXPAND_USER_COMMANDS	vim.h	767;"	d
EXPAND_USER_COMPLETE	vim.h	770;"	d
EXPAND_USER_DEFINED	vim.h	775;"	d
EXPAND_USER_FUNC	vim.h	764;"	d
EXPAND_USER_LIST	vim.h	776;"	d
EXPAND_USER_NARGS	vim.h	769;"	d
EXPAND_USER_VARS	vim.h	760;"	d
EXPL_ALLOC_INC	os_vms.c	83;"	d	file:
EXPR_ADD	structs.h	/^    EXPR_ADD,		\/\/ +$/;"	e	enum:__anon251
EXPR_DIV	structs.h	/^    EXPR_DIV,		\/\/ \/$/;"	e	enum:__anon251
EXPR_EQUAL	structs.h	/^    EXPR_EQUAL,		\/\/ ==$/;"	e	enum:__anon251
EXPR_GEQUAL	structs.h	/^    EXPR_GEQUAL,	\/\/ >=$/;"	e	enum:__anon251
EXPR_GREATER	structs.h	/^    EXPR_GREATER,	\/\/ >$/;"	e	enum:__anon251
EXPR_IS	structs.h	/^    EXPR_IS,		\/\/ is$/;"	e	enum:__anon251
EXPR_ISNOT	structs.h	/^    EXPR_ISNOT,		\/\/ isnot$/;"	e	enum:__anon251
EXPR_MATCH	structs.h	/^    EXPR_MATCH,		\/\/ =~$/;"	e	enum:__anon251
EXPR_MULT	structs.h	/^    EXPR_MULT,		\/\/ *$/;"	e	enum:__anon251
EXPR_NEQUAL	structs.h	/^    EXPR_NEQUAL,	\/\/ !=$/;"	e	enum:__anon251
EXPR_NOMATCH	structs.h	/^    EXPR_NOMATCH,	\/\/ !~$/;"	e	enum:__anon251
EXPR_REM	structs.h	/^    EXPR_REM,		\/\/ %$/;"	e	enum:__anon251
EXPR_SEQUAL	structs.h	/^    EXPR_SEQUAL,	\/\/ <=$/;"	e	enum:__anon251
EXPR_SMALLER	structs.h	/^    EXPR_SMALLER,	\/\/ <$/;"	e	enum:__anon251
EXPR_SUB	structs.h	/^    EXPR_SUB,		\/\/ -$/;"	e	enum:__anon251
EXPR_UNKNOWN	structs.h	/^    EXPR_UNKNOWN = 0,$/;"	e	enum:__anon251
EXP_CASE	syntax.c	/^    EXP_CASE,	    \/\/ expand ":syn case" arguments$/;"	e	enum:__anon116	file:
EXP_CSCOPE_FIND	if_cscope.c	/^    EXP_CSCOPE_FIND,	\/\/ expand ":cscope find" arguments$/;"	e	enum:__anon49	file:
EXP_CSCOPE_KILL	if_cscope.c	/^    EXP_CSCOPE_KILL	\/\/ expand ":cscope kill" arguments$/;"	e	enum:__anon49	file:
EXP_CSCOPE_SUBCMD	if_cscope.c	/^    EXP_CSCOPE_SUBCMD,	\/\/ expand ":cscope" sub-commands$/;"	e	enum:__anon49	file:
EXP_DEFINE	sign.c	/^    EXP_DEFINE,		\/\/ expand :sign define {name} args$/;"	e	enum:__anon109	file:
EXP_LIST	sign.c	/^    EXP_LIST,		\/\/ expand :sign place args$/;"	e	enum:__anon109	file:
EXP_PLACE	sign.c	/^    EXP_PLACE,		\/\/ expand :sign place {id} args$/;"	e	enum:__anon109	file:
EXP_SCSCOPE_SUBCMD	if_cscope.c	/^    EXP_SCSCOPE_SUBCMD,	\/\/ expand ":scscope" sub-commands$/;"	e	enum:__anon49	file:
EXP_SIGN_GROUPS	sign.c	/^    EXP_SIGN_GROUPS	\/\/ expand with name of placed sign groups$/;"	e	enum:__anon109	file:
EXP_SIGN_NAMES	sign.c	/^    EXP_SIGN_NAMES,	\/\/ expand with name of placed signs$/;"	e	enum:__anon109	file:
EXP_SPELL	syntax.c	/^    EXP_SPELL,	    \/\/ expand ":syn spell" arguments$/;"	e	enum:__anon116	file:
EXP_SUBCMD	sign.c	/^    EXP_SUBCMD,		\/\/ expand :sign sub-commands$/;"	e	enum:__anon109	file:
EXP_SUBCMD	syntax.c	/^    EXP_SUBCMD,	    \/\/ expand ":syn" sub-commands$/;"	e	enum:__anon116	file:
EXP_SYNC	syntax.c	/^    EXP_SYNC	    \/\/ expand ":syn sync" arguments$/;"	e	enum:__anon116	file:
EXP_UNPLACE	sign.c	/^    EXP_UNPLACE,	\/\/ expand :sign unplace"$/;"	e	enum:__anon109	file:
EXRC_FILE	os_amiga.h	199;"	d
EXRC_FILE	os_dos.h	78;"	d
EXRC_FILE	os_mac.h	160;"	d
EXRC_FILE	os_unix.h	324;"	d
EXTENDED_STARTUPINFO_PRESENT	terminal.c	74;"	d	file:
EXTERN	if_ruby.c	111;"	d	file:
EXTERN	if_tcl.c	70;"	d	file:
EXTERN	main.c	10;"	d	file:
EXTERN	vim.h	1754;"	d
EXTERNCMD	vim.h	695;"	d
EXTRASIZE	misc2.c	3893;"	d	file:
EXTRA_MARKS	structs.h	131;"	d
EX_ARGOPT	ex_cmds.h	48;"	d
EX_BANG	ex_cmds.h	31;"	d
EX_BUFNAME	ex_cmds.h	46;"	d
EX_BUFUNL	ex_cmds.h	47;"	d
EX_CMDARG	ex_cmds.h	45;"	d
EX_CMDWIN	ex_cmds.h	50;"	d
EX_COUNT	ex_cmds.h	41;"	d
EX_CTRLV	ex_cmds.h	44;"	d
EX_DFLALL	ex_cmds.h	35;"	d
EX_EXTRA	ex_cmds.h	32;"	d
EX_FILE1	ex_cmds.h	57;"	d
EX_FILES	ex_cmds.h	56;"	d
EX_FLAGS	ex_cmds.h	54;"	d
EX_MODIFY	ex_cmds.h	53;"	d
EX_NEEDARG	ex_cmds.h	38;"	d
EX_NOSPC	ex_cmds.h	34;"	d
EX_NOTRLCOM	ex_cmds.h	42;"	d
EX_RANGE	ex_cmds.h	30;"	d
EX_REGSTR	ex_cmds.h	40;"	d
EX_RESTRICT	ex_cmds.h	55;"	d
EX_SBOXOK	ex_cmds.h	49;"	d
EX_TRLBAR	ex_cmds.h	39;"	d
EX_WHOLEFOLD	ex_cmds.h	36;"	d
EX_WORD1	ex_cmds.h	58;"	d
EX_XFILE	ex_cmds.h	33;"	d
EX_ZEROR	ex_cmds.h	43;"	d
E_acute	regexp_nfa.c	707;"	d	file:
E_circumflex	regexp_nfa.c	708;"	d	file:
E_diaeresis	regexp_nfa.c	709;"	d	file:
E_grave	regexp_nfa.c	710;"	d	file:
EndCond	if_xcmdsrv.c	/^typedef int (*EndCond)(void *);$/;"	t	file:
EndScroll	gui_at_sb.c	/^EndScroll($/;"	f	file:
EnhancedBP_H	gui_xmebwp.h	21;"	d
EnhancedB_H	gui_xmebw.h	21;"	d
Enter	gui_xmebw.c	/^Enter(Widget wid,$/;"	f	file:
Error	if_py_both.h	/^static OutputObject Error =$/;"	v
Eval	if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Eval )($/;"	m	struct:IVimVtbl
EventData	gui_at_sb.c	/^struct EventData$/;"	s	file:
EventModifiers2VimModifiers	gui_mac.c	/^EventModifiers2VimModifiers(EventModifiers macModifiers)$/;"	f	file:
EventModifiers2VimMouseModifiers	gui_mac.c	/^EventModifiers2VimMouseModifiers(EventModifiers macModifiers)$/;"	f
ExpandBufnames	buffer.c	/^ExpandBufnames($/;"	f
ExpandCleanup	cmdexpand.c	/^ExpandCleanup(expand_T *xp)$/;"	f
ExpandEscape	cmdexpand.c	/^ExpandEscape($/;"	f	file:
ExpandFromContext	cmdexpand.c	/^ExpandFromContext($/;"	f	file:
ExpandGeneric	cmdexpand.c	/^ExpandGeneric($/;"	f	file:
ExpandInit	cmdexpand.c	/^ExpandInit(expand_T *xp)$/;"	f
ExpandMappings	map.c	/^ExpandMappings($/;"	f
ExpandOldSetting	option.c	/^ExpandOldSetting(int *num_file, char_u ***file)$/;"	f
ExpandOne	cmdexpand.c	/^ExpandOne($/;"	f
ExpandPackAddDir	scriptfile.c	/^ExpandPackAddDir($/;"	f
ExpandRTDir	scriptfile.c	/^ExpandRTDir($/;"	f
ExpandSettings	option.c	/^ExpandSettings($/;"	f
ExpandUserDefined	cmdexpand.c	/^ExpandUserDefined($/;"	f	file:
ExpandUserList	cmdexpand.c	/^ExpandUserList($/;"	f	file:
ExtEdProtocolVersion	netbeans.c	/^static char *ExtEdProtocolVersion = "2.5";$/;"	v	file:
ExtractPosition	gui_at_sb.c	/^ExtractPosition($/;"	f	file:
F0	sha256.c	91;"	d	file:
F1	blowfish.c	328;"	d	file:
F1	sha256.c	92;"	d	file:
F2	blowfish.c	335;"	d	file:
FAIL	dosinst.h	55;"	d
FAIL	vim.h	716;"	d
FAIL_POPUP	structs.h	/^    FAIL_POPUP		\/\/ return NULL if mouse on popup window$/;"	e	enum:__anon257
FALSE	dosinst.h	59;"	d
FALSE	os_amiga.c	24;"	d	file:
FALSE	os_amiga.c	78;"	d	file:
FALSE	os_amiga.c	79;"	d	file:
FALSE	vim.h	1435;"	d
FAR	gui_w32.c	241;"	d	file:
FARPROC	if_python.c	131;"	d	file:
FARPROC	if_python3.c	116;"	d	file:
FCERR_DELETED	vim.h	2554;"	d
FCERR_DICT	vim.h	2551;"	d
FCERR_NONE	vim.h	2552;"	d
FCERR_NOTMETHOD	vim.h	2555;"	d
FCERR_OTHER	vim.h	2553;"	d
FCERR_SCRIPT	vim.h	2550;"	d
FCERR_TOOFEW	vim.h	2549;"	d
FCERR_TOOMANY	vim.h	2548;"	d
FCERR_UNKNOWN	vim.h	2547;"	d
FC_ABORT	userfunc.c	18;"	d	file:
FC_CLOSURE	userfunc.c	21;"	d	file:
FC_DEAD	userfunc.c	25;"	d	file:
FC_DELETED	userfunc.c	22;"	d	file:
FC_DICT	userfunc.c	20;"	d	file:
FC_EXPORT	userfunc.c	26;"	d	file:
FC_RANGE	userfunc.c	19;"	d	file:
FC_REMOVED	userfunc.c	23;"	d	file:
FC_SANDBOX	userfunc.c	24;"	d	file:
FDO_ALL	option.h	551;"	d
FDO_BLOCK	option.h	552;"	d
FDO_HOR	option.h	553;"	d
FDO_INSERT	option.h	559;"	d
FDO_JUMP	option.h	561;"	d
FDO_MARK	option.h	554;"	d
FDO_PERCENT	option.h	555;"	d
FDO_QUICKFIX	option.h	556;"	d
FDO_SEARCH	option.h	557;"	d
FDO_TAG	option.h	558;"	d
FDO_UNDO	option.h	560;"	d
FD_CLOSED	fold.c	40;"	d	file:
FD_LEVEL	fold.c	41;"	d	file:
FD_OPEN	fold.c	39;"	d	file:
FEARG_1	evalfunc.c	283;"	d	file:
FEARG_2	evalfunc.c	284;"	d	file:
FEARG_3	evalfunc.c	285;"	d	file:
FEARG_4	evalfunc.c	286;"	d	file:
FEARG_LAST	evalfunc.c	287;"	d	file:
FEAT_ARABIC	feature.h	248;"	d
FEAT_ARP	feature.h	1103;"	d
FEAT_AUTOCHDIR	feature.h	1245;"	d
FEAT_AUTOSERVERNAME	feature.h	1051;"	d
FEAT_BEVAL	feature.h	1218;"	d
FEAT_BEVAL_GUI	feature.h	1197;"	d
FEAT_BEVAL_TERM	feature.h	1214;"	d
FEAT_BEVAL_TIP	feature.h	1205;"	d
FEAT_BEVAL_TIP	vim.h	188;"	d
FEAT_BIG	feature.h	68;"	d
FEAT_BIG	feature.h	79;"	d
FEAT_BROWSE	feature.h	651;"	d
FEAT_BROWSE_CMD	feature.h	647;"	d
FEAT_BYTEOFF	feature.h	382;"	d
FEAT_CINDENT	feature.h	476;"	d
FEAT_CLIENTSERVER	feature.h	1041;"	d
FEAT_CLIENTSERVER	vim.h	194;"	d
FEAT_CLIPBOARD	feature.h	1001;"	d
FEAT_CLIPBOARD	feature.h	1006;"	d
FEAT_CLIPBOARD	feature.h	1015;"	d
FEAT_CLIPBOARD	os_win32.h	60;"	d
FEAT_CLIPBOARD	vim.h	157;"	d
FEAT_CMDL_INFO	feature.h	184;"	d
FEAT_CMDL_INFO	feature.h	377;"	d
FEAT_CMDWIN	feature.h	137;"	d
FEAT_COMPL_FUNC	feature.h	338;"	d
FEAT_CONCEAL	feature.h	425;"	d
FEAT_CON_DIALOG	feature.h	678;"	d
FEAT_CON_DIALOG	feature.h	681;"	d
FEAT_CON_DIALOG	feature.h	697;"	d
FEAT_CRYPT	feature.h	487;"	d
FEAT_CSCOPE	feature.h	281;"	d
FEAT_CW_EDITOR	feature.h	710;"	d
FEAT_DIFF	feature.h	359;"	d
FEAT_DIGRAPHS	feature.h	155;"	d
FEAT_DND	feature.h	1023;"	d
FEAT_EMACS_TAGS	feature.h	261;"	d
FEAT_EVAL	feature.h	290;"	d
FEAT_FILTERPIPE	feature.h	1261;"	d
FEAT_FIND_ID	feature.h	221;"	d
FEAT_FLOAT	feature.h	292;"	d
FEAT_FOLDING	feature.h	144;"	d
FEAT_GETTEXT	feature.h	508;"	d
FEAT_GETTEXT	vim.h	514;"	d
FEAT_GUI	vim.h	112;"	d
FEAT_GUI_ATHENA	vim.h	182;"	d
FEAT_GUI_DARKTHEME	feature.h	626;"	d
FEAT_GUI_DIALOG	feature.h	679;"	d
FEAT_GUI_DIALOG	feature.h	688;"	d
FEAT_GUI_ENABLED	vim.h	110;"	d
FEAT_GUI_GTK	vim.h	185;"	d
FEAT_GUI_MAC	vim.h	100;"	d
FEAT_GUI_MOTIF	vim.h	179;"	d
FEAT_GUI_TABLINE	feature.h	639;"	d
FEAT_GUI_TEXTDIALOG	feature.h	695;"	d
FEAT_GUI_X11	feature.h	1223;"	d
FEAT_GUI_X11	vim.h	173;"	d
FEAT_HUGE	feature.h	65;"	d
FEAT_JOB_CHANNEL	feature.h	1142;"	d
FEAT_JUMPLIST	feature.h	133;"	d
FEAT_KEYMAP	feature.h	173;"	d
FEAT_LANGMAP	feature.h	165;"	d
FEAT_LIBCALL	feature.h	566;"	d
FEAT_LINEBREAK	feature.h	192;"	d
FEAT_LISP	feature.h	472;"	d
FEAT_MBYTE_IME	feature.h	520;"	d
FEAT_MBYTE_IME	vim.h	505;"	d
FEAT_MENU	feature.h	1229;"	d
FEAT_MENU	feature.h	573;"	d
FEAT_MENU	feature.h	619;"	d
FEAT_MOUSESHAPE	feature.h	1079;"	d
FEAT_MOUSE_DEC	feature.h	961;"	d
FEAT_MOUSE_GPM	feature.h	982;"	d
FEAT_MOUSE_NET	feature.h	958;"	d
FEAT_MOUSE_PTERM	feature.h	971;"	d
FEAT_MOUSE_URXVT	feature.h	964;"	d
FEAT_MOUSE_XTERM	feature.h	956;"	d
FEAT_MOUSE_XTERM	feature.h	991;"	d
FEAT_MULTI_LANG	feature.h	504;"	d
FEAT_NETBEANS_INTG	feature.h	1135;"	d
FEAT_NORMAL	feature.h	70;"	d
FEAT_NORMAL	feature.h	82;"	d
FEAT_PATH_EXTRA	feature.h	229;"	d
FEAT_PERSISTENT_UNDO	feature.h	1253;"	d
FEAT_POSTSCRIPT	feature.h	351;"	d
FEAT_PRINTER	feature.h	347;"	d
FEAT_PROFILE	feature.h	307;"	d
FEAT_PROP_POPUP	feature.h	1164;"	d
FEAT_QUICKFIX	feature.h	206;"	d
FEAT_RELTIME	feature.h	317;"	d
FEAT_RENDER_OPTIONS	vim.h	119;"	d
FEAT_RESTORE_ORIG_SCREEN	os_win32.c	2438;"	d	file:
FEAT_RIGHTLEFT	feature.h	238;"	d
FEAT_RIGHTLEFT	feature.h	252;"	d
FEAT_SEARCHPATH	feature.h	213;"	d
FEAT_SEARCH_EXTRA	feature.h	199;"	d
FEAT_SESSION	feature.h	495;"	d
FEAT_SHORTCUT	os_win32.h	48;"	d
FEAT_SIGNS	feature.h	1178;"	d
FEAT_SIGN_ICONS	feature.h	1183;"	d
FEAT_SMALL	feature.h	85;"	d
FEAT_SMARTINDENT	feature.h	480;"	d
FEAT_SOUND	feature.h	590;"	d
FEAT_SOUND_CANBERRA	feature.h	593;"	d
FEAT_SOURCE_FFS	os_mac.h	83;"	d
FEAT_SOURCE_FF_MAC	os_mac.h	84;"	d
FEAT_SPELL	feature.h	434;"	d
FEAT_STL_OPT	feature.h	375;"	d
FEAT_SYN_HL	feature.h	1157;"	d
FEAT_SYN_HL	feature.h	417;"	d
FEAT_SYSMOUSE	feature.h	986;"	d
FEAT_TAG_BINS	feature.h	274;"	d
FEAT_TEAROFF	feature.h	575;"	d
FEAT_TERMGUICOLORS	feature.h	705;"	d
FEAT_TERMINAL	feature.h	1150;"	d
FEAT_TERMRESPONSE	feature.h	1064;"	d
FEAT_TERM_POPUP_MENU	feature.h	583;"	d
FEAT_TEXTOBJ	feature.h	331;"	d
FEAT_TIMERS	feature.h	324;"	d
FEAT_TINY	feature.h	88;"	d
FEAT_TITLE	feature.h	371;"	d
FEAT_TOOLBAR	feature.h	614;"	d
FEAT_VARTABS	feature.h	717;"	d
FEAT_VIMINFO	feature.h	407;"	d
FEAT_VTP	feature.h	1268;"	d
FEAT_WAK	option.h	1042;"	d
FEAT_WILDIGN	feature.h	390;"	d
FEAT_WILDMENU	feature.h	397;"	d
FEAT_WRITEBACKUP	feature.h	737;"	d
FEAT_X11	vim.h	163;"	d
FEAT_X11	vim.h	170;"	d
FEAT_XCLIPBOARD	feature.h	1013;"	d
FEAT_XCLIPBOARD	vim.h	176;"	d
FEAT_XFONTSET	feature.h	1200;"	d
FEAT_XFONTSET	feature.h	551;"	d
FEAT_XIM	vim.h	191;"	d
FF	ascii.h	109;"	d
FF	ascii.h	30;"	d
FF	vim.h	2396;"	d
FF_DOS	option.h	93;"	d
FF_MAC	option.h	94;"	d
FF_MAX_STAR_STAR_EXPAND	findfile.c	147;"	d	file:
FF_UNIX	option.h	95;"	d
FGETS_SIZE	fileio.c	3590;"	d	file:
FILEINFO_ENC_FAIL	vim.h	2473;"	d
FILEINFO_INFO_FAIL	vim.h	2475;"	d
FILEINFO_OK	vim.h	2472;"	d
FILEINFO_READ_FAIL	vim.h	2474;"	d
FILETYPE_FILE	os_amiga.h	132;"	d
FILETYPE_FILE	os_dos.h	92;"	d
FILETYPE_FILE	os_mac.h	168;"	d
FILETYPE_FILE	os_unix.h	226;"	d
FILE_ATTRIBUTE_REPARSE_POINT	os_win32.h	128;"	d
FILL_X	gui.h	107;"	d
FILL_X	gui.h	113;"	d
FILL_Y	gui.h	108;"	d
FILL_Y	gui.h	117;"	d
FINDFILE_BOTH	vim.h	850;"	d
FINDFILE_DIR	vim.h	849;"	d
FINDFILE_FILE	vim.h	848;"	d
FINDREPLACE	gui_w32.c	/^typedef int FINDREPLACE;$/;"	t	file:
FIND_ANY	vim.h	860;"	d
FIND_COMPOUND	spell.c	129;"	d	file:
FIND_DEFINE	vim.h	861;"	d
FIND_EVAL	vim.h	916;"	d
FIND_FOLDWORD	spell.c	126;"	d	file:
FIND_IDENT	vim.h	914;"	d
FIND_KEEPCOMPOUND	spell.c	130;"	d	file:
FIND_KEEPWORD	spell.c	127;"	d	file:
FIND_NAMESPACE_LIM	cindent.c	745;"	d	file:
FIND_NOERROR	vim.h	917;"	d
FIND_POPUP	structs.h	/^    FIND_POPUP,		\/\/ also find popup windows$/;"	e	enum:__anon257
FIND_PREFIX	spell.c	128;"	d	file:
FIND_REPLACE_DIALOG	feature.h	1033;"	d
FIND_STRING	vim.h	915;"	d
FIO_ALL	structs.h	4071;"	d
FIO_CODEPAGE	structs.h	4060;"	d
FIO_ENCRYPTED	structs.h	4068;"	d
FIO_ENDIAN_L	structs.h	4067;"	d
FIO_GET_CP	structs.h	4062;"	d
FIO_LATIN1	structs.h	4054;"	d
FIO_MACROMAN	structs.h	4065;"	d
FIO_NOCONVERT	structs.h	4069;"	d
FIO_PUT_CP	structs.h	4061;"	d
FIO_UCS2	structs.h	4056;"	d
FIO_UCS4	structs.h	4057;"	d
FIO_UCSBOM	structs.h	4070;"	d
FIO_UTF16	structs.h	4058;"	d
FIO_UTF8	structs.h	4055;"	d
FIRST_NL	regexp_bt.c	167;"	d	file:
FIXVAR_CNT	structs.h	1562;"	d
FIX_FOR_BOGUSCOLS	drawline.c	430;"	d	file:
FLEN_FIXED	vim.h	2558;"	d
FLUSH_INPUT	vim.h	/^    FLUSH_INPUT		\/\/ flush typebuf and inchar() input$/;"	e	enum:__anon282
FLUSH_MINIMAL	vim.h	/^    FLUSH_MINIMAL,$/;"	e	enum:__anon282
FLUSH_TYPEAHEAD	vim.h	/^    FLUSH_TYPEAHEAD,	\/\/ flush current typebuf contents$/;"	e	enum:__anon282
FL_ADJUST_CURSOR	if_tcl.c	493;"	d	file:
FL_UPDATE_CURBUF	if_tcl.c	492;"	d	file:
FL_UPDATE_SCREEN	if_tcl.c	491;"	d	file:
FMT8BIT	gui_at_fs.c	52;"	d	file:
FMT_PATTERNS	quickfix.c	117;"	d	file:
FM_BACKWARD	vim.h	992;"	d
FM_BLOCKSTOP	vim.h	994;"	d
FM_FORWARD	vim.h	993;"	d
FM_SKIPCOMM	vim.h	995;"	d
FNAME	regexp_bt.c	176;"	d	file:
FNAME_EXP	vim.h	921;"	d
FNAME_HYP	vim.h	922;"	d
FNAME_ILLEGAL	os_amiga.h	75;"	d
FNAME_ILLEGAL	os_vms_conf.h	7;"	d
FNAME_ILLEGAL	os_win32.h	81;"	d
FNAME_INCL	vim.h	923;"	d
FNAME_MESS	vim.h	920;"	d
FNAME_REL	vim.h	924;"	d
FNAME_UNESC	vim.h	926;"	d
FNE_CHECK_START	vim.h	2562;"	d
FNE_INCL_BR	vim.h	2561;"	d
FOLD_TEXT_LEN	vim.h	1522;"	d
FONTLEN	gui.c	884;"	d	file:
FONTSET_ALWAYS	gui.h	90;"	d
FONT_STYLE_BUFFER_SIZE	gui_mac.c	1411;"	d	file:
FORCE_BIN	ex_cmds.h	1872;"	d
FORCE_NOBIN	ex_cmds.h	1873;"	d
FOREGROUND	gui_x11_pm.h	89;"	d
FORWARD	vim.h	706;"	d
FORWARD_FILE	vim.h	708;"	d
FOR_ALL_BUFFERS	globals.h	719;"	d
FOR_ALL_FRAMES	globals.h	666;"	d
FOR_ALL_QFL_ITEMS	quickfix.c	202;"	d	file:
FOR_ALL_SIGNS_IN_BUF	globals.h	722;"	d
FOR_ALL_TABPAGES	globals.h	668;"	d
FOR_ALL_TAB_WINDOWS	globals.h	676;"	d
FOR_ALL_WINDOWS	globals.h	665;"	d
FOR_ALL_WINDOWS_IN_TAB	globals.h	669;"	d
FOR_MSW	xpm_w32.c	20;"	d	file:
FOR_SCOPE	vim9compile.c	/^    FOR_SCOPE,$/;"	e	enum:__anon129	file:
FO_ALL	option.h	149;"	d
FO_AUTO	option.h	143;"	d
FO_INS_BLANK	option.h	137;"	d
FO_INS_LONG	option.h	136;"	d
FO_INS_VI	option.h	135;"	d
FO_MBYTE_BREAK	option.h	138;"	d
FO_MBYTE_JOIN	option.h	139;"	d
FO_MBYTE_JOIN2	option.h	140;"	d
FO_ONE_LETTER	option.h	141;"	d
FO_OPEN_COMS	option.h	131;"	d
FO_PERIOD_ABBR	option.h	145;"	d
FO_Q_COMS	option.h	132;"	d
FO_Q_NUMBER	option.h	133;"	d
FO_Q_SECOND	option.h	134;"	d
FO_REMOVE_COMS	option.h	144;"	d
FO_RET_COMS	option.h	130;"	d
FO_WHITE_PAR	option.h	142;"	d
FO_WRAP	option.h	128;"	d
FO_WRAP_COMS	option.h	129;"	d
FPC_DIFF	vim.h	1034;"	d
FPC_DIFFX	vim.h	1036;"	d
FPC_NOTX	vim.h	1035;"	d
FPC_SAME	vim.h	1033;"	d
FPC_SAMEX	vim.h	1037;"	d
FRACTION_MULT	window.c	6030;"	d	file:
FRD_FINDNEXT	gui.h	522;"	d
FRD_MATCH_CASE	gui.h	530;"	d
FRD_REPLACE	gui.h	524;"	d
FRD_REPLACEALL	gui.h	525;"	d
FRD_R_FINDNEXT	gui.h	523;"	d
FRD_TYPE_MASK	gui.h	527;"	d
FRD_UNDO	gui.h	526;"	d
FRD_WHOLE_WORD	gui.h	529;"	d
FROM_LEFT_1ST_BUTTON_PRESSED	os_mswin.c	49;"	d	file:
FROM_LEFT_1ST_BUTTON_PRESSED	os_win32.c	59;"	d	file:
FROM_LEFT_2ND_BUTTON_PRESSED	os_mswin.c	55;"	d	file:
FROM_LEFT_2ND_BUTTON_PRESSED	os_win32.c	65;"	d	file:
FROM_LEFT_3RD_BUTTON_PRESSED	os_mswin.c	58;"	d	file:
FROM_LEFT_3RD_BUTTON_PRESSED	os_win32.c	68;"	d	file:
FROM_LEFT_4TH_BUTTON_PRESSED	os_mswin.c	61;"	d	file:
FROM_LEFT_4TH_BUTTON_PRESSED	os_win32.c	71;"	d	file:
FR_COL	structs.h	2986;"	d
FR_LEAF	structs.h	2984;"	d
FR_ROW	structs.h	2985;"	d
FTOFF_FILE	os_amiga.h	141;"	d
FTOFF_FILE	os_dos.h	101;"	d
FTOFF_FILE	os_mac.h	177;"	d
FTOFF_FILE	os_unix.h	235;"	d
FTPLUGIN_FILE	os_amiga.h	135;"	d
FTPLUGIN_FILE	os_dos.h	95;"	d
FTPLUGIN_FILE	os_mac.h	171;"	d
FTPLUGIN_FILE	os_unix.h	229;"	d
FTPLUGOF_FILE	os_amiga.h	144;"	d
FTPLUGOF_FILE	os_dos.h	104;"	d
FTPLUGOF_FILE	os_mac.h	180;"	d
FTPLUGOF_FILE	os_unix.h	238;"	d
FUNC2GENERIC	gui.h	596;"	d
FUNC2GENERIC	gui.h	598;"	d
FUNCARG	macros.h	306;"	d
FUNCLINE	globals.h	293;"	d
F_BLANK	if_python3.c	45;"	d	file:
F_BSIZE	memfile.c	42;"	d	file:
F_BSIZE	memfile.c	48;"	d	file:
FillArea	gui_at_sb.c	/^FillArea($/;"	f	file:
Find	if_cscope.h	/^typedef enum { Add, Find, Help, Kill, Reset, Show } csid_e;$/;"	e	enum:__anon148
FindProcessBySignature	gui_mac.c	/^FindProcessBySignature($/;"	f
FindWindowTitle	gui_w32.c	/^FindWindowTitle(HWND hwnd, LPARAM lParam)$/;"	f	file:
FinderFindModule	if_py_both.h	/^FinderFindModule(PyObject *self, PyObject *args)$/;"	f
FinderFindModule	if_py_both.h	/^FinderFindModule(PyObject* self UNUSED, PyObject* args UNUSED)$/;"	f
FinderFindSpec	if_py_both.h	/^FinderFindSpec(PyObject *self, PyObject *args)$/;"	f
FitConsoleWindow	os_win32.c	/^FitConsoleWindow($/;"	f	file:
FloatInRange	gui_at_sb.c	/^FloatInRange(float num, float small, float big)$/;"	f	file:
FontPanelHandler	gui_mac.c	/^FontPanelHandler($/;"	f	file:
FractionLoc	gui_at_sb.c	/^FractionLoc(ScrollbarWidget sbw, int x, int y)$/;"	f	file:
Frag	regexp_nfa.c	/^struct Frag$/;"	s	file:
Frag_T	regexp_nfa.c	/^typedef struct Frag Frag_T;$/;"	t	typeref:struct:Frag	file:
Free	if_cscope.h	/^    Free,$/;"	e	enum:__anon149
FreeWild	filepath.c	/^FreeWild(int count, char_u **files)$/;"	f
Fspec_Rms	os_vms.c	/^static char *Fspec_Rms;		       \/\/ rms file spec, passed implicitly between routines$/;"	v	file:
FullName_save	filepath.c	/^FullName_save($/;"	f
FullPathFromFSSpec_save	gui_mac.c	/^char_u *FullPathFromFSSpec_save(FSSpec file)$/;"	f
FunctionAttr	if_py_both.h	/^FunctionAttr(FunctionObject *self, char *name)$/;"	f
FunctionAttrs	if_py_both.h	/^static char *FunctionAttrs[] = {$/;"	v
FunctionCall	if_py_both.h	/^FunctionCall(FunctionObject *self, PyObject *argsObject, PyObject *kwargs)$/;"	f
FunctionConstructor	if_py_both.h	/^FunctionConstructor(PyTypeObject *subtype, PyObject *args, PyObject *kwargs)$/;"	f
FunctionDestructor	if_py_both.h	/^FunctionDestructor(FunctionObject *self)$/;"	f
FunctionDir	if_py_both.h	/^FunctionDir(PyObject *self)$/;"	f
FunctionGetattr	if_python.c	/^FunctionGetattr(PyObject *self, char *name)$/;"	f	file:
FunctionGetattro	if_python3.c	/^FunctionGetattro(PyObject *self, PyObject *nameobj)$/;"	f	file:
FunctionMethods	if_py_both.h	/^static struct PyMethodDef FunctionMethods[] = {$/;"	v	typeref:struct:PyMethodDef
FunctionNew	if_py_both.h	/^FunctionNew(PyTypeObject *subtype, char_u *name, int argc, typval_T *argv,$/;"	f
FunctionObject	if_py_both.h	/^} FunctionObject;$/;"	t	typeref:struct:__anon158
FunctionRepr	if_py_both.h	/^FunctionRepr(FunctionObject *self)$/;"	f
FunctionType	if_py_both.h	/^static PyTypeObject FunctionType;$/;"	v
GAP	option.c	4357;"	d	file:
GAP	term.c	5677;"	d	file:
GARGCOUNT	structs.h	848;"	d
GARGLIST	structs.h	844;"	d
GA_CHAR	charset.c	400;"	d	file:
GA_EMPTY	structs.h	57;"	d
GA_PTR	charset.c	401;"	d	file:
GC_malloc	if_mzsch.c	395;"	d	file:
GC_malloc_atomic	if_mzsch.c	396;"	d	file:
GC_malloc_one_tagged	if_mzsch.c	481;"	d	file:
GC_register_traversers	if_mzsch.c	482;"	d	file:
GENERIC_64	os_vms.c	/^} GENERIC_64;$/;"	t	typeref:struct:_generic_64	file:
GETFILE_ERROR	vim.h	934;"	d
GETFILE_NOT_WRITTEN	vim.h	935;"	d
GETFILE_OPEN_OTHER	vim.h	937;"	d
GETFILE_SAME_FILE	vim.h	936;"	d
GETFILE_SUCCESS	vim.h	939;"	d
GETFILE_UNUSED	vim.h	938;"	d
GETF_ALT	vim.h	930;"	d
GETF_SETMARK	vim.h	929;"	d
GETF_SWITCH	vim.h	931;"	d
GETTEXT_DLL	os_win32.c	601;"	d	file:
GETTEXT_DLL_ALT1	os_win32.c	602;"	d	file:
GETTEXT_DLL_ALT2	os_win32.c	603;"	d	file:
GET_ATTR_STRING	if_python3.c	839;"	d	file:
GET_CHARTAB	charset.c	25;"	d	file:
GET_LOC_LIST	quickfix.c	198;"	d	file:
GET_UINT32	sha256.c	27;"	d	file:
GET_XBUTTON_WPARAM	gui_w32.c	927;"	d	file:
GET_X_ATOM	gui_gtk_x11.c	105;"	d	file:
GET_X_LPARAM	gui_w32.c	291;"	d	file:
GLOBAL_WO	structs.h	3360;"	d
GLV_NO_AUTOLOAD	vim.h	2540;"	d
GLV_QUIET	vim.h	2539;"	d
GLV_READ_ONLY	vim.h	2541;"	d
GOTO_COST	screen.c	3020;"	d	file:
GO_ALL	option.h	285;"	d
GO_ASEL	option.h	262;"	d
GO_ASELML	option.h	263;"	d
GO_ASELPLUS	option.h	277;"	d
GO_BOT	option.h	264;"	d
GO_CONDIALOG	option.h	265;"	d
GO_DARKTHEME	option.h	266;"	d
GO_FOOTER	option.h	282;"	d
GO_FORG	option.h	268;"	d
GO_GREY	option.h	269;"	d
GO_HORSCROLL	option.h	270;"	d
GO_ICON	option.h	271;"	d
GO_KEEPWINSIZE	option.h	284;"	d
GO_LEFT	option.h	272;"	d
GO_MENUS	option.h	274;"	d
GO_NOSYSMENU	option.h	275;"	d
GO_POINTER	option.h	276;"	d
GO_RIGHT	option.h	278;"	d
GO_TABLINE	option.h	267;"	d
GO_TEAROFF	option.h	280;"	d
GO_TERMINAL	option.h	261;"	d
GO_TOOLBAR	option.h	281;"	d
GO_VERTICAL	option.h	283;"	d
GO_VLEFT	option.h	273;"	d
GO_VRIGHT	option.h	279;"	d
GREEN	term.c	2948;"	d	file:
GREG_EXPR_SRC	vim.h	2493;"	d
GREG_LIST	vim.h	2494;"	d
GREG_NO_EXPR	vim.h	2492;"	d
GTK_FORM	gui_gtk_f.h	26;"	d
GTK_FORM	gui_gtk_f.h	31;"	d
GTK_FORM_CLASS	gui_gtk_f.h	27;"	d
GTK_FORM_CLASS	gui_gtk_f.h	32;"	d
GTK_IS_FORM	gui_gtk_f.h	28;"	d
GTK_IS_FORM	gui_gtk_f.h	33;"	d
GTK_IS_FORM_CLASS	gui_gtk_f.h	29;"	d
GTK_IS_FORM_CLASS	gui_gtk_f.h	34;"	d
GTK_TYPE_FORM	gui_gtk_f.h	24;"	d
GUARANTEED_STRING_ARG	if_mzsch.c	737;"	d	file:
GUARANTEED_STRING_ARG	if_mzsch.c	762;"	d	file:
GUARDED	netbeans.c	39;"	d	file:
GUARDEDOFFSET	netbeans.c	40;"	d	file:
GUI_ATTR_ENTRY	highlight.c	2039;"	d	file:
GUI_CHILD_FAILED	gui.c	/^    GUI_CHILD_FAILED$/;"	e	enum:__anon35	file:
GUI_CHILD_IO_ERROR	gui.c	/^    GUI_CHILD_IO_ERROR,$/;"	e	enum:__anon35	file:
GUI_CHILD_OK	gui.c	/^    GUI_CHILD_OK,$/;"	e	enum:__anon35	file:
GUI_DWRITE_H	gui_dwrite.h	14;"	d
GUI_FUNCTION	vim.h	1637;"	d
GUI_FUNCTION	vim.h	1645;"	d
GUI_FUNCTION	vim.h	1653;"	d
GUI_FUNCTION2	vim.h	1638;"	d
GUI_FUNCTION2	vim.h	1646;"	d
GUI_FUNCTION2	vim.h	1654;"	d
GUI_GET_COLOR	vim.h	1667;"	d
GUI_MAY_FORK	gui.h	603;"	d
GUI_MAY_SPAWN	gui.h	257;"	d
GUI_MCH_GET_COLOR	vim.h	1666;"	d
GUI_MCH_GET_RGB	vim.h	1664;"	d
GUI_MCH_GET_RGB2	vim.h	1665;"	d
GUI_MON_INVERT	gui.h	139;"	d
GUI_MON_IS_CURSOR	gui.h	140;"	d
GUI_MON_NOCLEAR	gui.h	142;"	d
GUI_MON_TRS_CURSOR	gui.h	141;"	d
GUI_MON_WRAP_CURSOR	gui.h	138;"	d
GUI_PH_MARGIN	gui_photon.c	56;"	d	file:
GUI_PH_MOUSE_TYPE	gui_photon.c	58;"	d	file:
GVIMEXT32_PATH	dosinst.c	24;"	d	file:
GVIMEXT64_PATH	dosinst.c	23;"	d	file:
GVIMRC_FILE	os_amiga.h	207;"	d
GVIMRC_FILE	os_dos.h	83;"	d
GVIMRC_FILE	os_mac.h	144;"	d
GVIMRC_FILE	os_unix.h	333;"	d
GdkAtom	gui_gtk_x11.c	61;"	d	file:
GdkBitmap	gui_gtk.c	92;"	d	file:
GdkDragContext	gui_gtk_x11.c	78;"	d	file:
GdkEvent	proto.h	28;"	d
GdkEventButton	gui_gtk_x11.c	77;"	d	file:
GdkEventClient	gui_gtk_x11.c	80;"	d	file:
GdkEventConfigure	gui_gtk_x11.c	79;"	d	file:
GdkEventExpose	gui_gtk_x11.c	62;"	d	file:
GdkEventFocus	gui_gtk_x11.c	63;"	d	file:
GdkEventKey	gui_gtk.c	97;"	d	file:
GdkEventKey	gui_gtk_x11.c	73;"	d	file:
GdkEventKey	proto.h	29;"	d
GdkEventMotion	gui_gtk_x11.c	76;"	d	file:
GdkEventProperty	gui_gtk_x11.c	65;"	d	file:
GdkEventSelection	gui_gtk_x11.c	74;"	d	file:
GdkEventVisibility	gui_gtk_x11.c	64;"	d	file:
GdkPixmap	gui_gtk.c	91;"	d	file:
Get	if_cscope.h	/^    Get,$/;"	e	enum:__anon149
GetBufferLine	if_py_both.h	/^GetBufferLine(buf_T *buf, PyInt n)$/;"	f
GetBufferLineList	if_py_both.h	/^GetBufferLineList(buf_T *buf, PyInt lo, PyInt hi)$/;"	f
GetCompositionString_inUCS2	gui_w32.c	/^GetCompositionString_inUCS2(HIMC hIMC, DWORD GCS, int *lenp)$/;"	f	file:
GetConsoleHwnd	os_mswin.c	/^GetConsoleHwnd(void)$/;"	f	file:
GetConsoleIcon	os_win32.c	/^GetConsoleIcon($/;"	f	file:
GetFSSpecFromPath	gui_mac.c	/^GetFSSpecFromPath(char_u *file, FSSpec *fileFSSpec)$/;"	f
GetFontPanelSelection	gui_mac.c	/^GetFontPanelSelection(char_u *outName)$/;"	f	file:
GetFontSize	gui_w32.c	/^GetFontSize(GuiFont font)$/;"	f	file:
GetHwnd	if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetHwnd )($/;"	m	struct:IVimVtbl
GetIDsOfNames	if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )($/;"	m	struct:IVimVtbl
GetRegProp	if_xcmdsrv.c	/^GetRegProp($/;"	f	file:
GetResultStr	gui_w32.c	/^GetResultStr(HWND hwnd, int GCS, int *lenp)$/;"	f	file:
GetStockBrush	gui_w32.c	3818;"	d	file:
GetTabFromPoint	gui_w32.c	/^GetTabFromPoint($/;"	f	file:
GetTextWidth	gui_w32.c	/^GetTextWidth(HDC hdc, char_u *str, int len)$/;"	f	file:
GetTextWidthEnc	gui_w32.c	/^GetTextWidthEnc(HDC hdc, char_u *str, int len)$/;"	f	file:
GetTypeInfo	if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )($/;"	m	struct:IVimVtbl
GetTypeInfoCount	if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )($/;"	m	struct:IVimVtbl
GetWin32Error	if_cscope.c	/^GetWin32Error(void)$/;"	f	file:
Green	gui_mac.c	176;"	d	file:
GtkAdjustment	gui_gtk.c	95;"	d	file:
GtkContainer	gui_gtk_x11.c	66;"	d	file:
GtkForm	gui_gtk_f.h	/^typedef struct _GtkForm GtkForm;$/;"	t	typeref:struct:_GtkForm
GtkFormChild	gui_gtk_f.c	/^typedef struct _GtkFormChild GtkFormChild;$/;"	t	typeref:struct:_GtkFormChild	file:
GtkFormClass	gui_gtk_f.h	/^typedef struct _GtkFormClass GtkFormClass;$/;"	t	typeref:struct:_GtkFormClass
GtkIconFactory	gui_gtk.c	93;"	d	file:
GtkSelectionData	gui_gtk_x11.c	75;"	d	file:
GtkTargetEntry	gui_gtk_x11.c	67;"	d	file:
GtkToolbar	gui_gtk.c	94;"	d	file:
GtkType	gui_gtk_x11.c	68;"	d	file:
GtkWidget	gui_gtk.c	/^typedef int GtkWidget;$/;"	t	file:
GtkWidget	gui_gtk_x11.c	69;"	d	file:
Gui	gui.h	/^typedef struct Gui$/;"	s
GuiFont	gui.h	/^  typedef PangoFontDescription	*GuiFont;       \/\/ handle for a GUI font$/;"	t
GuiFont	gui.h	/^  typedef XFontStruct	*GuiFont;	\/\/ handle for a GUI font$/;"	t
GuiFont	gui.h	/^  typedef char		*GuiFont;$/;"	t
GuiFont	gui.h	/^  typedef long_u	GuiFont;	\/\/ handle for a GUI font$/;"	t
GuiFontset	gui.h	/^  typedef PangoFontDescription  *GuiFontset;    \/\/ handle for a GUI fontset$/;"	t
GuiFontset	gui.h	/^  typedef XFontSet	GuiFontset;	\/\/ handle for a GUI fontset$/;"	t
GuiFontset	gui.h	/^  typedef char		*GuiFontset;$/;"	t
GuiFontset	gui.h	/^  typedef long_u	GuiFontset;	\/\/ handle for a GUI fontset$/;"	t
GuiScrollbar	gui.h	/^typedef struct GuiScrollbar$/;"	s
HANDLE	gui_w32.c	/^typedef int HANDLE;$/;"	t	file:
HANDLE	if_lua.c	87;"	d	file:
HANDLE	if_tcl.c	/^typedef int HANDLE;$/;"	t	file:
HANDLE	if_tcl.c	165;"	d	file:
HANDLE	os_mswin.c	/^typedef int HANDLE;$/;"	t	file:
HANDLE	os_win32.c	/^typedef int HANDLE;$/;"	t	file:
HANDLE	terminal.c	/^typedef int HANDLE;$/;"	t	file:
HANDLE_WM_ACTIVATEAPP	gui_w32.c	3869;"	d	file:
HANDLE_WM_CHAR	gui_w32.c	3897;"	d	file:
HANDLE_WM_DEADCHAR	gui_w32.c	3905;"	d	file:
HANDLE_WM_DROPFILES	gui_w32.c	3893;"	d	file:
HANDLE_WM_HSCROLL	gui_w32.c	3889;"	d	file:
HANDLE_WM_KILLFOCUS	gui_w32.c	3885;"	d	file:
HANDLE_WM_LBUTTONDBLCLK	gui_w32.c	3837;"	d	file:
HANDLE_WM_LBUTTONDOWN	gui_w32.c	3861;"	d	file:
HANDLE_WM_LBUTTONUP	gui_w32.c	3857;"	d	file:
HANDLE_WM_MBUTTONDBLCLK	gui_w32.c	3833;"	d	file:
HANDLE_WM_MBUTTONDOWN	gui_w32.c	3853;"	d	file:
HANDLE_WM_MBUTTONUP	gui_w32.c	3829;"	d	file:
HANDLE_WM_MOUSEMOVE	gui_w32.c	3845;"	d	file:
HANDLE_WM_RBUTTONDBLCLK	gui_w32.c	3825;"	d	file:
HANDLE_WM_RBUTTONDOWN	gui_w32.c	3841;"	d	file:
HANDLE_WM_RBUTTONUP	gui_w32.c	3849;"	d	file:
HANDLE_WM_SETFOCUS	gui_w32.c	3881;"	d	file:
HANDLE_WM_SYSCHAR	gui_w32.c	3865;"	d	file:
HANDLE_WM_SYSDEADCHAR	gui_w32.c	3901;"	d	file:
HANDLE_WM_VSCROLL	gui_w32.c	3877;"	d	file:
HANDLE_WM_WINDOWPOSCHANGING	gui_w32.c	3873;"	d	file:
HANDLE_WM_XBUTTONDBLCLK	gui_w32.c	177;"	d	file:
HANDLE_WM_XBUTTONDOWN	gui_w32.c	173;"	d	file:
HANDLE_WM_XBUTTONUP	gui_w32.c	169;"	d	file:
HASHITEM_EMPTY	structs.h	1224;"	d
HASLOOKBH	regexp_bt.c	241;"	d	file:
HASNL	regexp_bt.c	240;"	d	file:
HASWIDTH	regexp_bt.c	237;"	d	file:
HAS_HOTKEY_LEN	message.c	3799;"	d	file:
HAVE_ACL	os_unix.h	494;"	d
HAVE_ACL	os_win32.h	55;"	d
HAVE_AVAIL_MEM	os_amiga.h	17;"	d
HAVE_AVAIL_MEM	os_mac.h	270;"	d
HAVE_AVAIL_MEM	os_mac.h	97;"	d
HAVE_BIND_TEXTDOMAIN_CODESET	vim.h	542;"	d
HAVE_CHECK_STACK_GROWTH	os_unix.c	660;"	d	file:
HAVE_DATE_TIME	os_amiga.h	34;"	d
HAVE_DATE_TIME	os_mac.h	110;"	d
HAVE_DATE_TIME	os_vms_conf.h	26;"	d
HAVE_DATE_TIME	os_win32.h	63;"	d
HAVE_DIRENT_H	os_vms_conf.h	126;"	d
HAVE_DROP_FILE	gui.h	82;"	d
HAVE_DROP_FILE	os_beos.h	18;"	d
HAVE_DUP	if_ruby.c	154;"	d	file:
HAVE_DUP	os_dos.h	134;"	d
HAVE_DUP	os_unix.h	489;"	d
HAVE_ERRNO_H	os_vms_conf.h	116;"	d
HAVE_EX_SCRIPT_NI	ex_docmd.c	78;"	d	file:
HAVE_FCHDIR	os_vms_conf.h	147;"	d
HAVE_FCHDIR	vim.h	57;"	d
HAVE_FCHOWN	os_vms_conf.h	108;"	d
HAVE_FCNTL_H	if_python.c	38;"	d	file:
HAVE_FCNTL_H	if_python.c	73;"	d	file:
HAVE_FCNTL_H	if_python3.c	37;"	d	file:
HAVE_FCNTL_H	if_python3.c	72;"	d	file:
HAVE_FCNTL_H	os_amiga.h	25;"	d
HAVE_FCNTL_H	os_mac.h	104;"	d
HAVE_FCNTL_H	os_vms_conf.h	173;"	d
HAVE_FCNTL_H	os_vms_conf.h	182;"	d
HAVE_FCNTL_H	os_win32.h	43;"	d
HAVE_FLOAT_FUNCS	os_vms_conf.h	122;"	d
HAVE_FSYNC	os_vms_conf.h	111;"	d
HAVE_GETCWD	os_vms_conf.h	102;"	d
HAVE_GETPWNAM	os_vms_conf.h	113;"	d
HAVE_GETPWUID	os_vms_conf.h	112;"	d
HAVE_GETTIMEOFDAY	os_vms_conf.h	123;"	d
HAVE_GETTIMEOFDAY	os_vms_conf.h	152;"	d
HAVE_GETTIMEOFDAY	os_vms_conf.h	161;"	d
HAVE_GET_LOCALE_VAL	ex_cmds2.c	996;"	d	file:
HAVE_ICONV	os_vms_conf.h	193;"	d
HAVE_ICONV	os_vms_conf.h	196;"	d
HAVE_ICONV_H	os_vms_conf.h	192;"	d
HAVE_ICONV_H	os_vms_conf.h	195;"	d
HAVE_INPUT_METHOD	vim.h	2174;"	d
HAVE_ISNAN	os_vms_conf.h	157;"	d
HAVE_ISNAN	os_vms_conf.h	166;"	d
HAVE_LIBC_H	os_vms_conf.h	144;"	d
HAVE_LOCALE_H	os_vms_conf.h	176;"	d
HAVE_LOCALE_H	os_vms_conf.h	185;"	d
HAVE_LOCALE_H	os_win32.h	40;"	d
HAVE_LSTAT	os_vms_conf.h	148;"	d
HAVE_MATH_H	os_mac.h	107;"	d
HAVE_MATH_H	os_vms_conf.h	121;"	d
HAVE_MATH_H	os_win32.h	28;"	d
HAVE_MEMSET	os_amiga.h	31;"	d
HAVE_MEMSET	os_mac.h	102;"	d
HAVE_MEMSET	os_vms_conf.h	106;"	d
HAVE_MEMSET	os_win32.h	38;"	d
HAVE_NDIR_H	os_vms_conf.h	130;"	d
HAVE_NETDB_H	os_vms_conf.h	125;"	d
HAVE_NO_LONG_LONG	os_vms_conf.h	158;"	d
HAVE_OPENDIR	os_vms_conf.h	117;"	d
HAVE_PATHDEF	vim.h	28;"	d
HAVE_PROCESS_STILL_RUNNING	memline.c	2035;"	d	file:
HAVE_PUTENV	if_python.c	52;"	d	file:
HAVE_PUTENV	if_python3.c	55;"	d	file:
HAVE_PUTENV	os_mac.h	280;"	d
HAVE_PUTENV	os_mac.h	286;"	d
HAVE_PUTENV	os_vms_conf.h	118;"	d
HAVE_PUTENV	os_win32.h	71;"	d
HAVE_PWD_H	os_vms_conf.h	124;"	d
HAVE_QSORT	os_amiga.h	32;"	d
HAVE_QSORT	os_mac.h	105;"	d
HAVE_QSORT	os_vms_conf.h	110;"	d
HAVE_QSORT	os_win32.h	45;"	d
HAVE_RENAME	os_mac.h	282;"	d
HAVE_RENAME	os_vms_conf.h	109;"	d
HAVE_SANDBOX	feature.h	297;"	d
HAVE_SELECT	os_mac.h	278;"	d
HAVE_SELECT	os_vms_conf.h	172;"	d
HAVE_SELECT	os_vms_conf.h	181;"	d
HAVE_SELECT	vim.h	490;"	d
HAVE_SETENV	os_amiga.h	30;"	d
HAVE_SETENV	os_mac.h	281;"	d
HAVE_SETENV	os_vms_conf.h	119;"	d
HAVE_SETENV	os_win32.h	198;"	d
HAVE_SETJMP_H	os_vms_conf.h	120;"	d
HAVE_SGTTY_H	os_vms_conf.h	137;"	d
HAVE_SIGCONTEXT	os_vms_conf.h	81;"	d
HAVE_SIGSETJMP	os_vms_conf.h	156;"	d
HAVE_SIGSETJMP	os_vms_conf.h	165;"	d
HAVE_STAT64	vim.h	2094;"	d
HAVE_STAT_H	os_amiga.h	21;"	d
HAVE_STDARG_H	if_python.c	55;"	d	file:
HAVE_STDARG_H	if_python3.c	58;"	d	file:
HAVE_STDLIB_H	os_amiga.h	23;"	d
HAVE_STDLIB_H	os_vms_conf.h	114;"	d
HAVE_STRCASECMP	os_vms_conf.h	154;"	d
HAVE_STRCASECMP	os_vms_conf.h	163;"	d
HAVE_STRCSPN	os_amiga.h	26;"	d
HAVE_STRCSPN	os_mac.h	101;"	d
HAVE_STRCSPN	os_vms_conf.h	103;"	d
HAVE_STRCSPN	os_win32.h	30;"	d
HAVE_STRERROR	os_vms_conf.h	107;"	d
HAVE_STRFTIME	if_python.c	46;"	d	file:
HAVE_STRFTIME	if_python3.c	49;"	d	file:
HAVE_STRFTIME	os_amiga.h	29;"	d
HAVE_STRFTIME	os_mac.h	112;"	d
HAVE_STRFTIME	os_vms_conf.h	179;"	d
HAVE_STRFTIME	os_vms_conf.h	188;"	d
HAVE_STRFTIME	os_win32.h	36;"	d
HAVE_STRICMP	os_amiga.h	27;"	d
HAVE_STRICMP	os_win32.h	32;"	d
HAVE_STRINGS_H	os_vms_conf.h	155;"	d
HAVE_STRINGS_H	os_vms_conf.h	164;"	d
HAVE_STRING_H	if_python.c	49;"	d	file:
HAVE_STRING_H	if_python3.c	52;"	d	file:
HAVE_STRING_H	os_amiga.h	24;"	d
HAVE_STRING_H	os_mac.h	100;"	d
HAVE_STRING_H	os_vms_conf.h	115;"	d
HAVE_STRING_H	os_win32.h	25;"	d
HAVE_STRNICMP	os_amiga.h	28;"	d
HAVE_STRNICMP	os_win32.h	33;"	d
HAVE_STROPTS_H	os_vms_conf.h	140;"	d
HAVE_STRTOL	os_vms_conf.h	104;"	d
HAVE_ST_MODE	os_dos.h	135;"	d
HAVE_ST_MODE	os_mac.h	106;"	d
HAVE_ST_MODE	os_unix.h	491;"	d
HAVE_ST_MODE	os_win32.h	46;"	d
HAVE_SVR4_PTYS	pty.c	128;"	d	file:
HAVE_SYS_DIR_H	os_vms_conf.h	129;"	d
HAVE_SYS_IOCTL_H	os_vms_conf.h	138;"	d
HAVE_SYS_NDIR_H	os_vms_conf.h	128;"	d
HAVE_SYS_POLL_H	os_vms_conf.h	146;"	d
HAVE_SYS_PTEM_H	os_vms_conf.h	142;"	d
HAVE_SYS_SELECT_H	os_mac.h	279;"	d
HAVE_SYS_SELECT_H	os_vms_conf.h	133;"	d
HAVE_SYS_STATFS_H	os_vms_conf.h	145;"	d
HAVE_SYS_STREAM_H	os_vms_conf.h	141;"	d
HAVE_SYS_SYSTEMINFO_H	os_vms_conf.h	135;"	d
HAVE_SYS_TIME_H	os_vms_conf.h	175;"	d
HAVE_SYS_TIME_H	os_vms_conf.h	184;"	d
HAVE_SYS_UTSNAME_H	os_unix.h	17;"	d
HAVE_SYS_UTSNAME_H	os_vms_conf.h	134;"	d
HAVE_SYS_WAIT_H	os_mac.h	275;"	d
HAVE_SYS_WAIT_H	os_vms_conf.h	131;"	d
HAVE_TERMCAP_H	os_vms_conf.h	136;"	d
HAVE_TERMIOS_H	os_mac.h	276;"	d
HAVE_TERMIOS_H	os_vms_conf.h	143;"	d
HAVE_TERMIO_H	os_vms_conf.h	139;"	d
HAVE_TGETENT	os_mac.h	251;"	d
HAVE_TGETENT	os_vms_conf.h	105;"	d
HAVE_TLS_SPACE	if_mzsch.c	53;"	d	file:
HAVE_TOTAL_MEM	os_unix.h	169;"	d
HAVE_TOTAL_MEM	os_win32.h	69;"	d
HAVE_TRY_EXCEPT	os_win32.h	140;"	d
HAVE_UNION_WAIT	os_vms_conf.h	132;"	d
HAVE_UNISTD_H	os_vms_conf.h	174;"	d
HAVE_UNISTD_H	os_vms_conf.h	183;"	d
HAVE_USLEEP	os_vms_conf.h	153;"	d
HAVE_USLEEP	os_vms_conf.h	162;"	d
HAVE_UTIME	os_unix.h	14;"	d
HAVE_X11	os_vms_conf.h	201;"	d
HAVE_X11_XPM_H	os_vms_conf.h	203;"	d
HAVE_XPM	feature.h	599;"	d
HBITMAP	gui_w32.c	/^typedef int HBITMAP;$/;"	t	file:
HBRUSH	gui_w32.c	/^typedef int HBRUSH;$/;"	t	file:
HCURSOR	gui_w32.c	/^typedef int HCURSOR;$/;"	t	file:
HDC	gui_w32.c	/^typedef void *HDC;$/;"	t	file:
HDC	os_mswin.c	/^typedef int HDC;$/;"	t	file:
HDC	os_win32.c	/^typedef int HDC;$/;"	t	file:
HDROP	gui_w32.c	/^typedef int HDROP;$/;"	t	file:
HEAD	regexp_bt.c	190;"	d	file:
HEADER_SIZE	memline.c	131;"	d	file:
HEX	regexp_bt.c	184;"	d	file:
HFONT	os_mswin.c	/^typedef int HFONT;$/;"	t	file:
HFONT	os_win32.c	/^typedef int HFONT;$/;"	t	file:
HI2AH	spellfile.c	1823;"	d	file:
HI2CI	spellfile.c	1833;"	d	file:
HI2DI	macros.h	318;"	d
HI2KE	syntax.c	167;"	d	file:
HI2PT	textprop.c	42;"	d	file:
HI2SFT	spellsuggest.c	3036;"	d	file:
HI2SG	structs.h	814;"	d
HI2UF	structs.h	1619;"	d
HI2WC	spell.h	315;"	d
HI2WN	spellfile.c	1893;"	d	file:
HICON	os_mswin.c	/^typedef int HICON;$/;"	t	file:
HICON	os_win32.c	/^typedef int HICON;$/;"	t	file:
HIGHLIGHT	gui_x11_pm.h	92;"	d
HIGHLIGHT_INIT	optiondefs.h	295;"	d
HIGHL_COST	screen.c	3021;"	d	file:
HIKEY2DI	macros.h	317;"	d
HIKEY2KE	syntax.c	166;"	d	file:
HIKEY2PT	textprop.c	41;"	d	file:
HIKEY2SFT	spellsuggest.c	3035;"	d	file:
HIKEY2UF	structs.h	1618;"	d
HIMC	gui_w32.c	/^typedef HANDLE HIMC;$/;"	t	file:
HINSTANCE	globals.h	/^typedef int HINSTANCE;$/;"	t
HINSTANCE	gui_w32.c	/^typedef void *HINSTANCE;$/;"	t	file:
HINSTANCE	if_mzsch.c	/^typedef int HINSTANCE;$/;"	t	file:
HINSTANCE	if_python.c	126;"	d	file:
HINSTANCE	if_python.c	132;"	d	file:
HINSTANCE	if_python3.c	117;"	d	file:
HINSTANCE	if_ruby.c	163;"	d	file:
HINSTANCE	if_ruby.c	206;"	d	file:
HINSTANCE	mbyte.c	4682;"	d	file:
HINSTANCE	os_win32.c	/^typedef int HINSTANCE;$/;"	t	file:
HIST_CMD	vim.h	1104;"	d
HIST_COUNT	vim.h	1109;"	d
HIST_DEBUG	vim.h	1108;"	d
HIST_EXPR	vim.h	1106;"	d
HIST_INPUT	vim.h	1107;"	d
HIST_SEARCH	vim.h	1105;"	d
HITRETURN	vim.h	691;"	d
HI_KEY_REMOVED	structs.h	1223;"	d
HLF_8	vim.h	/^    HLF_8 = 0	    \/\/ Meta & special keys listed with ":map", text that is$/;"	e	enum:__anon278
HLF_ADD	vim.h	/^    , HLF_ADD	    \/\/ Added diff line$/;"	e	enum:__anon278
HLF_AT	vim.h	/^    , HLF_AT	    \/\/ @ characters at end of screen, characters that$/;"	e	enum:__anon278
HLF_C	vim.h	/^    , HLF_C	    \/\/ column to separate vertically split windows$/;"	e	enum:__anon278
HLF_CHD	vim.h	/^    , HLF_CHD	    \/\/ Changed diff line$/;"	e	enum:__anon278
HLF_CLN	vim.h	/^    , HLF_CLN	    \/\/ current line number$/;"	e	enum:__anon278
HLF_CM	vim.h	/^    , HLF_CM	    \/\/ Mode (e.g., "-- INSERT --")$/;"	e	enum:__anon278
HLF_CONCEAL	vim.h	/^    , HLF_CONCEAL   \/\/ Concealed text$/;"	e	enum:__anon278
HLF_COUNT	vim.h	/^    , HLF_COUNT	    \/\/ MUST be the last one$/;"	e	enum:__anon278
HLF_CUC	vim.h	/^    , HLF_CUC	    \/\/ 'cursorcolumn'$/;"	e	enum:__anon278
HLF_CUL	vim.h	/^    , HLF_CUL	    \/\/ 'cursorline'$/;"	e	enum:__anon278
HLF_D	vim.h	/^    , HLF_D	    \/\/ directories in CTRL-D listing$/;"	e	enum:__anon278
HLF_DED	vim.h	/^    , HLF_DED	    \/\/ Deleted diff line$/;"	e	enum:__anon278
HLF_E	vim.h	/^    , HLF_E	    \/\/ error messages$/;"	e	enum:__anon278
HLF_EOB	vim.h	/^    , HLF_EOB	    \/\/ after the last line in the buffer$/;"	e	enum:__anon278
HLF_FC	vim.h	/^    , HLF_FC	    \/\/ Fold column$/;"	e	enum:__anon278
HLF_FL	vim.h	/^    , HLF_FL	    \/\/ Folded line$/;"	e	enum:__anon278
HLF_H	vim.h	/^    , HLF_H	    \/\/ obsolete, ignored$/;"	e	enum:__anon278
HLF_I	vim.h	/^    , HLF_I	    \/\/ incremental search$/;"	e	enum:__anon278
HLF_L	vim.h	/^    , HLF_L	    \/\/ last search string$/;"	e	enum:__anon278
HLF_LNA	vim.h	/^    , HLF_LNA	    \/\/ LineNrAbove$/;"	e	enum:__anon278
HLF_LNB	vim.h	/^    , HLF_LNB	    \/\/ LineNrBelow$/;"	e	enum:__anon278
HLF_M	vim.h	/^    , HLF_M	    \/\/ "--More--" message$/;"	e	enum:__anon278
HLF_MC	vim.h	/^    , HLF_MC	    \/\/ 'colorcolumn'$/;"	e	enum:__anon278
HLF_N	vim.h	/^    , HLF_N	    \/\/ line number for ":number" and ":#" commands$/;"	e	enum:__anon278
HLF_PNI	vim.h	/^    , HLF_PNI	    \/\/ popup menu normal item$/;"	e	enum:__anon278
HLF_PSB	vim.h	/^    , HLF_PSB	    \/\/ popup menu scrollbar$/;"	e	enum:__anon278
HLF_PSI	vim.h	/^    , HLF_PSI	    \/\/ popup menu selected item$/;"	e	enum:__anon278
HLF_PST	vim.h	/^    , HLF_PST	    \/\/ popup menu scrollbar thumb$/;"	e	enum:__anon278
HLF_QFL	vim.h	/^    , HLF_QFL	    \/\/ quickfix window line currently selected$/;"	e	enum:__anon278
HLF_R	vim.h	/^    , HLF_R	    \/\/ return to continue message and yes\/no questions$/;"	e	enum:__anon278
HLF_S	vim.h	/^    , HLF_S	    \/\/ status lines$/;"	e	enum:__anon278
HLF_SC	vim.h	/^    , HLF_SC	    \/\/ Sign column$/;"	e	enum:__anon278
HLF_SNC	vim.h	/^    , HLF_SNC	    \/\/ status lines of not-current windows$/;"	e	enum:__anon278
HLF_SPB	vim.h	/^    , HLF_SPB	    \/\/ SpellBad$/;"	e	enum:__anon278
HLF_SPC	vim.h	/^    , HLF_SPC	    \/\/ SpellCap$/;"	e	enum:__anon278
HLF_SPL	vim.h	/^    , HLF_SPL	    \/\/ SpellLocal$/;"	e	enum:__anon278
HLF_SPR	vim.h	/^    , HLF_SPR	    \/\/ SpellRare$/;"	e	enum:__anon278
HLF_ST	vim.h	/^    , HLF_ST	    \/\/ status lines of terminal windows$/;"	e	enum:__anon278
HLF_STNC	vim.h	/^    , HLF_STNC	    \/\/ status lines of not-current terminal windows$/;"	e	enum:__anon278
HLF_T	vim.h	/^    , HLF_T	    \/\/ Titles for output from ":set all", ":autocmd" etc.$/;"	e	enum:__anon278
HLF_TP	vim.h	/^    , HLF_TP	    \/\/ tabpage line$/;"	e	enum:__anon278
HLF_TPF	vim.h	/^    , HLF_TPF	    \/\/ tabpage line filler$/;"	e	enum:__anon278
HLF_TPS	vim.h	/^    , HLF_TPS	    \/\/ tabpage line selected$/;"	e	enum:__anon278
HLF_TXD	vim.h	/^    , HLF_TXD	    \/\/ Text Changed in diff line$/;"	e	enum:__anon278
HLF_V	vim.h	/^    , HLF_V	    \/\/ Visual mode$/;"	e	enum:__anon278
HLF_VNC	vim.h	/^    , HLF_VNC	    \/\/ Visual mode, autoselecting and not clipboard owner$/;"	e	enum:__anon278
HLF_W	vim.h	/^    , HLF_W	    \/\/ warning messages$/;"	e	enum:__anon278
HLF_WM	vim.h	/^    , HLF_WM	    \/\/ Wildmenu highlight$/;"	e	enum:__anon278
HL_ALL	vim.h	662;"	d
HL_ATTR	vim.h	1746;"	d
HL_BOLD	vim.h	655;"	d
HL_CONCEAL	vim.h	894;"	d
HL_CONCEALENDS	vim.h	895;"	d
HL_CONTAINED	vim.h	877;"	d
HL_DISPLAY	vim.h	889;"	d
HL_EXCLUDENL	vim.h	888;"	d
HL_EXTEND	vim.h	891;"	d
HL_FLAGS	vim.h	1424;"	d
HL_FOLD	vim.h	890;"	d
HL_HAS_EOL	vim.h	880;"	d
HL_INVERSE	vim.h	654;"	d
HL_ITALIC	vim.h	656;"	d
HL_KEEPEND	vim.h	887;"	d
HL_MATCH	vim.h	883;"	d
HL_MATCHCONT	vim.h	892;"	d
HL_NOCOMBINE	vim.h	660;"	d
HL_NORMAL	vim.h	653;"	d
HL_ONELINE	vim.h	879;"	d
HL_SKIPEMPTY	vim.h	886;"	d
HL_SKIPNL	vim.h	884;"	d
HL_SKIPWHITE	vim.h	885;"	d
HL_STANDOUT	vim.h	659;"	d
HL_STRIKETHROUGH	vim.h	661;"	d
HL_SYNC_HERE	vim.h	881;"	d
HL_SYNC_THERE	vim.h	882;"	d
HL_TABLE	highlight.c	84;"	d	file:
HL_TRANSP	vim.h	878;"	d
HL_TRANS_CONT	vim.h	893;"	d
HL_UNDERCURL	vim.h	658;"	d
HL_UNDERLINE	vim.h	657;"	d
HMENU	gui_w32.c	/^typedef void *HMENU;$/;"	t	file:
HMT_DEC	mouse.c	1277;"	d	file:
HMT_GPM	mouse.c	1281;"	d	file:
HMT_JSBTERM	mouse.c	1278;"	d	file:
HMT_NETTERM	mouse.c	1276;"	d	file:
HMT_NORMAL	mouse.c	1275;"	d	file:
HMT_PTERM	mouse.c	1279;"	d	file:
HMT_SGR	mouse.c	1282;"	d	file:
HMT_SGR_REL	mouse.c	1283;"	d	file:
HMT_URXVT	mouse.c	1280;"	d	file:
HOTK_LEN	message.c	3792;"	d	file:
HPCON	terminal.c	/^typedef int HPCON;$/;"	t	file:
HPCON	terminal.c	71;"	d	file:
HRESULT	gui_w32.c	/^typedef int HRESULT;$/;"	t	file:
HRESULT	terminal.c	/^typedef int HRESULT;$/;"	t	file:
HT_INIT_SIZE	structs.h	1229;"	d
HWND	globals.h	/^typedef int HWND;$/;"	t
HWND	gui_w32.c	/^typedef void *HWND;$/;"	t	file:
HWND	os_mswin.c	/^typedef int HWND;$/;"	t	file:
HWND	os_win32.c	/^typedef int HWND;$/;"	t	file:
HandleMouseHide	gui_w32.c	/^HandleMouseHide(UINT uMsg, LPARAM lParam)$/;"	f	file:
HandleODocAE	gui_mac.c	/^HandleODocAE(const AppleEvent *theAEvent, AppleEvent *theReply, long refCon)$/;"	f
HandleThumb	gui_at_sb.c	/^HandleThumb($/;"	f	file:
HandleToLong	gui_w32.c	5340;"	d	file:
HandleUnusedParms	gui_mac.c	/^HandleUnusedParms(const AppleEvent *theAEvent)$/;"	f
Handle_KAHL_GTTX_AE	gui_mac.c	/^Handle_KAHL_GTTX_AE($/;"	f
Handle_KAHL_MOD_AE	gui_mac.c	/^Handle_KAHL_MOD_AE($/;"	f
Handle_KAHL_SRCH_AE	gui_mac.c	/^Handle_KAHL_SRCH_AE($/;"	f
Handle_WM_Notify	gui_w32.c	/^Handle_WM_Notify(HWND hwnd UNUSED, LPNMHDR pnmh)$/;"	f	file:
Handle_aevt_oapp_AE	gui_mac.c	/^Handle_aevt_oapp_AE($/;"	f
Handle_aevt_pdoc_AE	gui_mac.c	/^Handle_aevt_pdoc_AE($/;"	f
Handle_aevt_quit_AE	gui_mac.c	/^Handle_aevt_quit_AE($/;"	f
Handle_unknown_AE	gui_mac.c	/^Handle_unknown_AE($/;"	f
Help	if_cscope.h	/^typedef enum { Add, Find, Help, Kill, Reset, Show } csid_e;$/;"	e	enum:__anon148
ICONV_E2BIG	vim.h	2281;"	d
ICONV_E2BIG	vim.h	2286;"	d
ICONV_EILSEQ	vim.h	2283;"	d
ICONV_EILSEQ	vim.h	2288;"	d
ICONV_EINVAL	vim.h	2282;"	d
ICONV_EINVAL	vim.h	2287;"	d
ICONV_ERRNO	vim.h	2280;"	d
ICONV_ERRNO	vim.h	2285;"	d
ICONV_MULT	structs.h	4079;"	d
ICONV_TESTLEN	mbyte.c	4530;"	d	file:
ICON_BIG	os_win32.c	2458;"	d	file:
ICON_COUNT	dosinst.h	360;"	d
ICON_SMALL	os_win32.c	2455;"	d	file:
IDC_BOX1	os_mswin.c	1023;"	d	file:
IDC_PRINTTEXT1	os_mswin.c	1024;"	d	file:
IDC_PRINTTEXT2	os_mswin.c	1025;"	d	file:
IDC_PROGRESS	os_mswin.c	1026;"	d	file:
IDENT	regexp_bt.c	172;"	d	file:
IDR_TOOLBAR1	gui_w32_rc.h	5;"	d
IDX_BIG5	mbyte.c	282;"	d	file:
IDX_COUNT	mbyte.c	350;"	d	file:
IDX_CP1250	mbyte.c	326;"	d	file:
IDX_CP1251	mbyte.c	328;"	d	file:
IDX_CP1253	mbyte.c	331;"	d	file:
IDX_CP1254	mbyte.c	333;"	d	file:
IDX_CP1255	mbyte.c	335;"	d	file:
IDX_CP1256	mbyte.c	337;"	d	file:
IDX_CP1257	mbyte.c	339;"	d	file:
IDX_CP1258	mbyte.c	341;"	d	file:
IDX_CP437	mbyte.c	288;"	d	file:
IDX_CP737	mbyte.c	290;"	d	file:
IDX_CP775	mbyte.c	292;"	d	file:
IDX_CP850	mbyte.c	294;"	d	file:
IDX_CP852	mbyte.c	296;"	d	file:
IDX_CP855	mbyte.c	298;"	d	file:
IDX_CP857	mbyte.c	300;"	d	file:
IDX_CP860	mbyte.c	302;"	d	file:
IDX_CP861	mbyte.c	304;"	d	file:
IDX_CP862	mbyte.c	306;"	d	file:
IDX_CP863	mbyte.c	308;"	d	file:
IDX_CP865	mbyte.c	310;"	d	file:
IDX_CP866	mbyte.c	312;"	d	file:
IDX_CP869	mbyte.c	314;"	d	file:
IDX_CP874	mbyte.c	316;"	d	file:
IDX_CP932	mbyte.c	318;"	d	file:
IDX_CP936	mbyte.c	320;"	d	file:
IDX_CP949	mbyte.c	322;"	d	file:
IDX_CP950	mbyte.c	324;"	d	file:
IDX_DEBUG	mbyte.c	270;"	d	file:
IDX_DECMCS	mbyte.c	346;"	d	file:
IDX_EUC_CN	mbyte.c	278;"	d	file:
IDX_EUC_JP	mbyte.c	272;"	d	file:
IDX_EUC_KR	mbyte.c	276;"	d	file:
IDX_EUC_TW	mbyte.c	280;"	d	file:
IDX_HPROMAN8	mbyte.c	348;"	d	file:
IDX_ISO_10	mbyte.c	240;"	d	file:
IDX_ISO_11	mbyte.c	242;"	d	file:
IDX_ISO_13	mbyte.c	244;"	d	file:
IDX_ISO_14	mbyte.c	246;"	d	file:
IDX_ISO_15	mbyte.c	248;"	d	file:
IDX_ISO_2	mbyte.c	224;"	d	file:
IDX_ISO_3	mbyte.c	226;"	d	file:
IDX_ISO_4	mbyte.c	228;"	d	file:
IDX_ISO_5	mbyte.c	230;"	d	file:
IDX_ISO_6	mbyte.c	232;"	d	file:
IDX_ISO_7	mbyte.c	234;"	d	file:
IDX_ISO_8	mbyte.c	236;"	d	file:
IDX_ISO_9	mbyte.c	238;"	d	file:
IDX_KOI8_R	mbyte.c	250;"	d	file:
IDX_KOI8_U	mbyte.c	252;"	d	file:
IDX_LATIN_1	mbyte.c	222;"	d	file:
IDX_MACROMAN	mbyte.c	344;"	d	file:
IDX_SJIS	mbyte.c	274;"	d	file:
IDX_UCS2	mbyte.c	256;"	d	file:
IDX_UCS2LE	mbyte.c	258;"	d	file:
IDX_UCS4	mbyte.c	264;"	d	file:
IDX_UCS4LE	mbyte.c	266;"	d	file:
IDX_UTF16	mbyte.c	260;"	d	file:
IDX_UTF16LE	mbyte.c	262;"	d	file:
IDX_UTF8	mbyte.c	254;"	d	file:
ID_BEVAL_TOOLTIP	gui_w32.c	3926;"	d	file:
ID_LIST_ALL	syntax.c	211;"	d	file:
IEMSG_RET_NULL	regexp.c	64;"	d	file:
IF_EB	ascii.h	17;"	d
IF_EB	ascii.h	85;"	d
IF_SCOPE	vim9compile.c	/^    IF_SCOPE,$/;"	e	enum:__anon129	file:
IF_SYN_TIME	syntax.c	312;"	d	file:
IF_SYN_TIME	syntax.c	314;"	d	file:
IGNORE_POPUP	structs.h	/^    IGNORE_POPUP,	\/\/ only check non-popup windows$/;"	e	enum:__anon257
IID	iid_ole.c	/^} IID;$/;"	t	typeref:struct:_IID	file:
IID_IVim	if_ole.h	/^EXTERN_C const IID IID_IVim;$/;"	v
IID_IVim	iid_ole.c	/^const IID IID_IVim = {0x0F0BFAE2,0x4C90,0x11d1,{0x82,0xD7,0x00,0x04,0xAC,0x36,0x85,0x19}};$/;"	v
IMAGE_XPM	gui_w32.c	8154;"	d	file:
IME_WITHOUT_XIM	vim.h	2165;"	d
IMLEN_MAX	mbyte.c	6110;"	d	file:
IMPORT	if_ruby.c	27;"	d	file:
IM_ON_THE_SPOT	option.h	639;"	d
IM_OVER_THE_SPOT	option.h	640;"	d
INBUFLEN	ui.c	2063;"	d	file:
INBUFLEN	ui.c	2065;"	d	file:
INC	option.c	4356;"	d	file:
INC2	term.c	5676;"	d	file:
INC3	term.c	5675;"	d	file:
INCSTACK_SIZE	tag.c	1613;"	d	file:
INDENTKEYS_DEFAULT	optiondefs.h	309;"	d
INDENT_DEC	vim.h	989;"	d
INDENT_FILE	os_amiga.h	138;"	d
INDENT_FILE	os_dos.h	98;"	d
INDENT_FILE	os_mac.h	174;"	d
INDENT_FILE	os_unix.h	232;"	d
INDENT_INC	vim.h	988;"	d
INDENT_SET	vim.h	987;"	d
INDEX_SIZE	memline.c	130;"	d	file:
INDOFF_FILE	os_amiga.h	147;"	d
INDOFF_FILE	os_dos.h	107;"	d
INDOFF_FILE	os_mac.h	183;"	d
INDOFF_FILE	os_unix.h	241;"	d
INFINITY	macros.h	288;"	d
INFINITY	macros.h	290;"	d
INFINITY	macros.h	293;"	d
INIT	vim.h	1755;"	d
INIT	vim.h	1762;"	d
INIT2	vim.h	1756;"	d
INIT2	vim.h	1763;"	d
INIT3	vim.h	1757;"	d
INIT3	vim.h	1764;"	d
INIT4	vim.h	1758;"	d
INIT4	vim.h	1765;"	d
INIT5	vim.h	1759;"	d
INIT5	vim.h	1766;"	d
INLINE_KEY_BUFFER_SIZE	gui_mac.c	2066;"	d	file:
INPUT_BUFLEN	edit.c	2230;"	d	file:
INPUT_RECORD	os_mswin.c	/^typedef int INPUT_RECORD;$/;"	t	file:
INPUT_RECORD	os_win32.c	/^typedef int INPUT_RECORD;$/;"	t	file:
INSCHAR_COM_LIST	vim.h	1094;"	d
INSCHAR_CTRLV	vim.h	1092;"	d
INSCHAR_DO_COM	vim.h	1091;"	d
INSCHAR_FORMAT	vim.h	1090;"	d
INSCHAR_NO_FEX	vim.h	1093;"	d
INSERT	vim.h	680;"	d
INSERT_PANGO_ATTR	gui_gtk_x11.c	5311;"	d	file:
INT	gui_w32.c	/^typedef int INT;$/;"	t	file:
INT	os_win32.c	/^typedef int INT;$/;"	t	file:
INTPROCINT	os_unix.c	/^typedef int (*INTPROCINT)(int);$/;"	t	file:
INTPROCSTR	os_unix.c	/^typedef char_u * (*INTPROCSTR)(int);$/;"	t	file:
INVALCOLOR	gui.h	223;"	d
INVALCOLOR	structs.h	116;"	d
INVALID_BUFFER_VALUE	if_mzsch.c	76;"	d	file:
INVALID_BUFFER_VALUE	if_py_both.h	53;"	d
INVALID_FD	structs.h	1921;"	d
INVALID_QFBUFNR	quickfix.c	51;"	d	file:
INVALID_QFIDX	quickfix.c	50;"	d	file:
INVALID_STATE	syntax.c	256;"	d	file:
INVALID_TABPAGE_VALUE	if_py_both.h	55;"	d
INVALID_WINDOW_VALUE	if_mzsch.c	84;"	d	file:
INVALID_WINDOW_VALUE	if_py_both.h	54;"	d
INVERTED	vim.h	582;"	d
INVERTED_ALL	vim.h	583;"	d
IN_BUFFER	vim.h	1877;"	d
IN_OPTION_C	option.c	34;"	d	file:
IN_OTHER_WIN	vim.h	1880;"	d
IN_PERL_FILE	if_perlsfio.c	14;"	d	file:
IN_SEP_LINE	vim.h	1879;"	d
IN_SPELL_C	spell.c	58;"	d	file:
IN_STATUS_LINE	vim.h	1878;"	d
IN_UNKNOWN	vim.h	1876;"	d
IOSIZE	vim.h	1514;"	d
IO_REPARSE_TAG_MOUNT_POINT	os_win32.h	131;"	d
IO_REPARSE_TAG_SYMLINK	os_win32.h	134;"	d
IObuff	globals.h	/^EXTERN char_u	*IObuff;		\/\/ sprintf's are done in this buffer,$/;"	v
ISK_LATIN1	optiondefs.h	285;"	d
ISN_2BOOL	vim9.h	/^    ISN_2BOOL,	    \/\/ convert value to bool, invert if isn_arg.number != 0$/;"	e	enum:__anon260
ISN_2STRING	vim9.h	/^    ISN_2STRING,    \/\/ convert value to string at isn_arg.number on stack$/;"	e	enum:__anon260
ISN_ADDBLOB	vim9.h	/^    ISN_ADDBLOB,$/;"	e	enum:__anon260
ISN_ADDLIST	vim9.h	/^    ISN_ADDLIST,$/;"	e	enum:__anon260
ISN_BCALL	vim9.h	/^    ISN_BCALL,	    \/\/ call builtin function isn_arg.bfunc$/;"	e	enum:__anon260
ISN_CATCH	vim9.h	/^    ISN_CATCH,	    \/\/ drop v:exception$/;"	e	enum:__anon260
ISN_CHECKNR	vim9.h	/^    ISN_CHECKNR,    \/\/ check value can be used as a number$/;"	e	enum:__anon260
ISN_CHECKTYPE	vim9.h	/^    ISN_CHECKTYPE,  \/\/ check value type is isn_arg.type.tc_type$/;"	e	enum:__anon260
ISN_COMPAREANY	vim9.h	/^    ISN_COMPAREANY,$/;"	e	enum:__anon260
ISN_COMPAREBLOB	vim9.h	/^    ISN_COMPAREBLOB,$/;"	e	enum:__anon260
ISN_COMPAREBOOL	vim9.h	/^    ISN_COMPAREBOOL,$/;"	e	enum:__anon260
ISN_COMPAREDICT	vim9.h	/^    ISN_COMPAREDICT,$/;"	e	enum:__anon260
ISN_COMPAREFLOAT	vim9.h	/^    ISN_COMPAREFLOAT,$/;"	e	enum:__anon260
ISN_COMPAREFUNC	vim9.h	/^    ISN_COMPAREFUNC,$/;"	e	enum:__anon260
ISN_COMPARELIST	vim9.h	/^    ISN_COMPARELIST,$/;"	e	enum:__anon260
ISN_COMPARENR	vim9.h	/^    ISN_COMPARENR,$/;"	e	enum:__anon260
ISN_COMPAREPARTIAL	vim9.h	/^    ISN_COMPAREPARTIAL,$/;"	e	enum:__anon260
ISN_COMPARESPECIAL	vim9.h	/^    ISN_COMPARESPECIAL,$/;"	e	enum:__anon260
ISN_COMPARESTRING	vim9.h	/^    ISN_COMPARESTRING,$/;"	e	enum:__anon260
ISN_CONCAT	vim9.h	/^    ISN_CONCAT,$/;"	e	enum:__anon260
ISN_DCALL	vim9.h	/^    ISN_DCALL,	    \/\/ call def function isn_arg.dfunc$/;"	e	enum:__anon260
ISN_DROP	vim9.h	/^    ISN_DROP	    \/\/ pop stack and discard value$/;"	e	enum:__anon260
ISN_ECHO	vim9.h	/^    ISN_ECHO,	    \/\/ echo isn_arg.echo.echo_count items on top of stack$/;"	e	enum:__anon260
ISN_ENDTRY	vim9.h	/^    ISN_ENDTRY,	    \/\/ take entry off from ec_trystack$/;"	e	enum:__anon260
ISN_EXEC	vim9.h	/^    ISN_EXEC,	    \/\/ execute Ex command line isn_arg.string$/;"	e	enum:__anon260
ISN_EXECUTE	vim9.h	/^    ISN_EXECUTE,    \/\/ execute Ex commands isn_arg.number items on top of stack$/;"	e	enum:__anon260
ISN_FOR	vim9.h	/^    ISN_FOR,	    \/\/ get next item from a list, uses isn_arg.forloop$/;"	e	enum:__anon260
ISN_FUNCREF	vim9.h	/^    ISN_FUNCREF,    \/\/ push a function ref to dfunc isn_arg.number$/;"	e	enum:__anon260
ISN_INDEX	vim9.h	/^    ISN_INDEX,	    \/\/ [expr] list index$/;"	e	enum:__anon260
ISN_JUMP	vim9.h	/^    ISN_JUMP,	    \/\/ jump if condition is matched isn_arg.jump$/;"	e	enum:__anon260
ISN_LOAD	vim9.h	/^    ISN_LOAD,	    \/\/ push local variable isn_arg.number$/;"	e	enum:__anon260
ISN_LOADENV	vim9.h	/^    ISN_LOADENV,    \/\/ push environment variable isn_arg.string$/;"	e	enum:__anon260
ISN_LOADG	vim9.h	/^    ISN_LOADG,	    \/\/ push g: variable isn_arg.string$/;"	e	enum:__anon260
ISN_LOADOPT	vim9.h	/^    ISN_LOADOPT,    \/\/ push option isn_arg.string$/;"	e	enum:__anon260
ISN_LOADREG	vim9.h	/^    ISN_LOADREG,    \/\/ push register isn_arg.number$/;"	e	enum:__anon260
ISN_LOADS	vim9.h	/^    ISN_LOADS,	    \/\/ push s: variable isn_arg.loadstore$/;"	e	enum:__anon260
ISN_LOADSCRIPT	vim9.h	/^    ISN_LOADSCRIPT, \/\/ push script-local variable isn_arg.script.$/;"	e	enum:__anon260
ISN_LOADV	vim9.h	/^    ISN_LOADV,	    \/\/ push v: variable isn_arg.number$/;"	e	enum:__anon260
ISN_MEMBER	vim9.h	/^    ISN_MEMBER,	    \/\/ dict.member using isn_arg.string$/;"	e	enum:__anon260
ISN_NEGATENR	vim9.h	/^    ISN_NEGATENR,   \/\/ apply "-" to number$/;"	e	enum:__anon260
ISN_NEWDICT	vim9.h	/^    ISN_NEWDICT,    \/\/ push dict from stack items, size is isn_arg.number$/;"	e	enum:__anon260
ISN_NEWLIST	vim9.h	/^    ISN_NEWLIST,    \/\/ push list from stack items, size is isn_arg.number$/;"	e	enum:__anon260
ISN_OPANY	vim9.h	/^    ISN_OPANY,$/;"	e	enum:__anon260
ISN_OPFLOAT	vim9.h	/^    ISN_OPFLOAT,$/;"	e	enum:__anon260
ISN_OPNR	vim9.h	/^    ISN_OPNR,$/;"	e	enum:__anon260
ISN_PCALL	vim9.h	/^    ISN_PCALL,	    \/\/ call partial, use isn_arg.pfunc$/;"	e	enum:__anon260
ISN_PUSHBLOB	vim9.h	/^    ISN_PUSHBLOB,   \/\/ push blob isn_arg.blob$/;"	e	enum:__anon260
ISN_PUSHBOOL	vim9.h	/^    ISN_PUSHBOOL,   \/\/ push bool value isn_arg.number$/;"	e	enum:__anon260
ISN_PUSHEXC	vim9.h	/^    ISN_PUSHEXC,    \/\/ push v:exception$/;"	e	enum:__anon260
ISN_PUSHF	vim9.h	/^    ISN_PUSHF,	    \/\/ push float isn_arg.fnumber$/;"	e	enum:__anon260
ISN_PUSHNR	vim9.h	/^    ISN_PUSHNR,	    \/\/ push number isn_arg.number$/;"	e	enum:__anon260
ISN_PUSHS	vim9.h	/^    ISN_PUSHS,	    \/\/ push string isn_arg.string$/;"	e	enum:__anon260
ISN_PUSHSPEC	vim9.h	/^    ISN_PUSHSPEC,   \/\/ push special value isn_arg.number$/;"	e	enum:__anon260
ISN_RETURN	vim9.h	/^    ISN_RETURN,	    \/\/ return, result is on top of stack$/;"	e	enum:__anon260
ISN_STORE	vim9.h	/^    ISN_STORE,	    \/\/ pop into local variable isn_arg.number$/;"	e	enum:__anon260
ISN_STOREENV	vim9.h	/^    ISN_STOREENV,    \/\/ pop into environment variable isn_arg.string$/;"	e	enum:__anon260
ISN_STOREG	vim9.h	/^    ISN_STOREG,	    \/\/ pop into global variable isn_arg.string$/;"	e	enum:__anon260
ISN_STORENR	vim9.h	/^    ISN_STORENR,    \/\/ store number into local variable isn_arg.storenr.str_idx$/;"	e	enum:__anon260
ISN_STOREOPT	vim9.h	/^    ISN_STOREOPT,   \/\/ pop into option isn_arg.string$/;"	e	enum:__anon260
ISN_STOREREG	vim9.h	/^    ISN_STOREREG,    \/\/ pop into register isn_arg.number$/;"	e	enum:__anon260
ISN_STORES	vim9.h	/^    ISN_STORES,	    \/\/ pop into scirpt variable isn_arg.loadstore$/;"	e	enum:__anon260
ISN_STORESCRIPT	vim9.h	/^    ISN_STORESCRIPT, \/\/ pop into scirpt variable isn_arg.script$/;"	e	enum:__anon260
ISN_STOREV	vim9.h	/^    ISN_STOREV,	    \/\/ pop into v: variable isn_arg.number$/;"	e	enum:__anon260
ISN_THROW	vim9.h	/^    ISN_THROW,	    \/\/ pop value of stack, store in v:exception$/;"	e	enum:__anon260
ISN_TRY	vim9.h	/^    ISN_TRY,	    \/\/ add entry to ec_trystack, uses isn_arg.try$/;"	e	enum:__anon260
ISN_UCALL	vim9.h	/^    ISN_UCALL,	    \/\/ call user function or funcref\/partial isn_arg.ufunc$/;"	e	enum:__anon260
ISP_LATIN1	optiondefs.h	290;"	d
ISP_LATIN1	optiondefs.h	292;"	d
ISSPECIAL	edit.c	2062;"	d	file:
ISSPECIAL	edit.c	2064;"	d	file:
IS_CTERM	vim.h	1659;"	d
IS_CTERM	vim.h	1661;"	d
IS_ENABLE_DIRECTX	gui_w32.c	36;"	d	file:
IS_LL_LIST	quickfix.c	192;"	d	file:
IS_LL_STACK	quickfix.c	190;"	d	file:
IS_LL_WINDOW	quickfix.c	186;"	d	file:
IS_NONPRINTABLE	gui_beval.c	722;"	d	file:
IS_NONPRINTABLE	gui_beval.c	896;"	d	file:
IS_QF_LIST	quickfix.c	191;"	d	file:
IS_QF_STACK	quickfix.c	189;"	d	file:
IS_QF_WINDOW	quickfix.c	184;"	d	file:
IS_SPECIAL	keymap.h	37;"	d
IS_USER_CMDIDX	macros.h	343;"	d
ITEM	os_vms.c	/^}	ITEM;$/;"	t	typeref:struct:__anon79	file:
ITEM_COMPARE_FAIL	list.c	1320;"	d	file:
ITEM_END	syntax.c	4996;"	d	file:
ITEM_MATCHGROUP	syntax.c	4997;"	d	file:
ITEM_SKIP	syntax.c	4995;"	d	file:
ITEM_START	syntax.c	4994;"	d	file:
ITMLST1	os_vms.c	/^}	ITMLST1;$/;"	t	typeref:struct:__anon80	file:
ITMLST2	os_vms.c	/^}	ITMLST2;$/;"	t	typeref:struct:__anon81	file:
IVim	if_ole.h	/^typedef interface IVim IVim;$/;"	t
IVimVtbl	if_ole.h	/^    typedef struct IVimVtbl$/;"	s
IVimVtbl	if_ole.h	/^    } IVimVtbl;$/;"	t	typeref:struct:IVimVtbl
IVim_AddRef	if_ole.h	163;"	d
IVim_Eval	if_ole.h	186;"	d
IVim_GetHwnd	if_ole.h	192;"	d
IVim_GetIDsOfNames	if_ole.h	176;"	d
IVim_GetTypeInfo	if_ole.h	173;"	d
IVim_GetTypeInfoCount	if_ole.h	170;"	d
IVim_Invoke	if_ole.h	179;"	d
IVim_QueryInterface	if_ole.h	160;"	d
IVim_Release	if_ole.h	166;"	d
IVim_SendKeys	if_ole.h	183;"	d
IVim_SetForeground	if_ole.h	189;"	d
I_acute	regexp_nfa.c	711;"	d	file:
I_circumflex	regexp_nfa.c	712;"	d	file:
I_diaeresis	regexp_nfa.c	713;"	d	file:
I_grave	regexp_nfa.c	714;"	d	file:
IconNames	gui_gtk.c	/^typedef struct IconNames {$/;"	s	file:
IconNames	gui_gtk.c	/^} IconNames;$/;"	t	typeref:struct:IconNames	file:
Info	os_win32.c	/^    CONSOLE_SCREEN_BUFFER_INFO	Info;$/;"	m	struct:ConsoleBufferStruct	file:
Initialize	gui_at_sb.c	/^Initialize($/;"	f	file:
Initialize	gui_xmebw.c	/^Initialize(Widget rq, Widget ebw, ArgList args UNUSED, Cardinal *n UNUSED)$/;"	f	file:
InsertBufferLines	if_py_both.h	/^InsertBufferLines(buf_T *buf, PyInt n, PyObject *lines, PyInt *len_change)$/;"	f
Insstart	globals.h	/^EXTERN pos_T	Insstart;		\/\/ This is where the latest$/;"	v
Insstart_blank_vcol	edit.c	/^static colnr_T	Insstart_blank_vcol;	\/\/ vcol for first inserted blank$/;"	v	file:
Insstart_orig	globals.h	/^EXTERN pos_T	Insstart_orig;$/;"	v
Insstart_textlen	edit.c	/^static colnr_T	Insstart_textlen;	\/\/ length of line when insert started$/;"	v	file:
InstallAEHandlers	gui_mac.c	/^InstallAEHandlers(void)$/;"	f
InstallFontPanelHandler	gui_mac.c	/^InstallFontPanelHandler(void)$/;"	f	file:
IntuitionBase	os_amiga.c	/^struct IntuitionBase	*IntuitionBase = NULL;$/;"	v	typeref:struct:IntuitionBase
Invoke	if_ole.h	/^	\/* [local] *\/ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )($/;"	m	struct:IVimVtbl
IsMaximized	gui_w32.c	3812;"	d	file:
IsMinimized	gui_w32.c	3809;"	d	file:
IsNull	gui_xmebw.c	906;"	d	file:
IsSerialName	if_xcmdsrv.c	/^IsSerialName(char_u *str)$/;"	f	file:
IsValid	os_win32.c	/^    BOOL			IsValid;$/;"	m	struct:ConsoleBufferStruct	file:
IterClear	if_py_both.h	/^IterClear(IterObject *self)$/;"	f
IterDestructor	if_py_both.h	/^IterDestructor(IterObject *self)$/;"	f
IterIter	if_py_both.h	/^IterIter(PyObject *self)$/;"	f
IterNew	if_py_both.h	/^IterNew(void *start, destructorfun destruct, nextfun next, traversefun traverse,$/;"	f
IterNext	if_py_both.h	/^IterNext(IterObject *self)$/;"	f
IterObject	if_py_both.h	/^} IterObject;$/;"	t	typeref:struct:__anon153
IterTraverse	if_py_both.h	/^IterTraverse(IterObject *self, visitproc visit, void *arg)$/;"	f
IterType	if_py_both.h	/^static PyTypeObject IterType;$/;"	v
JIO_BUFFER	structs.h	/^    JIO_BUFFER,$/;"	e	enum:__anon230
JIO_FILE	structs.h	/^    JIO_FILE,$/;"	e	enum:__anon230
JIO_NULL	structs.h	/^    JIO_NULL,$/;"	e	enum:__anon230
JIO_OUT	structs.h	/^    JIO_OUT$/;"	e	enum:__anon230
JIO_PIPE	structs.h	/^    JIO_PIPE,	    \/\/ default$/;"	e	enum:__anon230
JMP_BUF	os_unix.h	478;"	d
JMP_BUF	os_unix.h	482;"	d
JO2_ANSI_COLORS	structs.h	2069;"	d
JO2_BUFNR	structs.h	2071;"	d
JO2_CURWIN	structs.h	2063;"	d
JO2_CWD	structs.h	2059;"	d
JO2_ENV	structs.h	2058;"	d
JO2_EOF_CHARS	structs.h	2066;"	d
JO2_ERR_MSG	structs.h	2055;"	d
JO2_HIDDEN	structs.h	2064;"	d
JO2_NORESTORE	structs.h	2067;"	d
JO2_OUT_MSG	structs.h	2054;"	d
JO2_TERM_API	structs.h	2072;"	d
JO2_TERM_COLS	structs.h	2061;"	d
JO2_TERM_FINISH	structs.h	2057;"	d
JO2_TERM_KILL	structs.h	2068;"	d
JO2_TERM_NAME	structs.h	2056;"	d
JO2_TERM_OPENCMD	structs.h	2065;"	d
JO2_TERM_ROWS	structs.h	2060;"	d
JO2_TTY_TYPE	structs.h	2070;"	d
JO2_VERTICAL	structs.h	2062;"	d
JOB_ENDED	structs.h	/^    JOB_ENDED,	    \/\/ detected job done$/;"	e	enum:__anon228
JOB_FAILED	structs.h	/^    JOB_FAILED,$/;"	e	enum:__anon228
JOB_FINISHED	structs.h	/^    JOB_FINISHED,   \/\/ job done and cleanup done$/;"	e	enum:__anon228
JOB_STARTED	structs.h	/^    JOB_STARTED,$/;"	e	enum:__anon228
JO_ALL	structs.h	2052;"	d
JO_BLOCK_WRITE	structs.h	2049;"	d
JO_CALLBACK	structs.h	2025;"	d
JO_CB_ALL	structs.h	2075;"	d
JO_CHANNEL	structs.h	2048;"	d
JO_CLOSE_CALLBACK	structs.h	2028;"	d
JO_ERR_BUF	structs.h	2046;"	d
JO_ERR_CALLBACK	structs.h	2027;"	d
JO_ERR_IO	structs.h	2038;"	d
JO_ERR_MODE	structs.h	2024;"	d
JO_ERR_MODIFIABLE	structs.h	2051;"	d
JO_ERR_NAME	structs.h	2041;"	d
JO_ERR_TIMEOUT	structs.h	2032;"	d
JO_EXIT_CB	structs.h	2036;"	d
JO_ID	structs.h	2034;"	d
JO_IN_BOT	structs.h	2044;"	d
JO_IN_BUF	structs.h	2047;"	d
JO_IN_IO	structs.h	2039;"	d
JO_IN_MODE	structs.h	2022;"	d
JO_IN_NAME	structs.h	2042;"	d
JO_IN_TOP	structs.h	2043;"	d
JO_MODE	structs.h	2021;"	d
JO_MODE_ALL	structs.h	2074;"	d
JO_OUT_BUF	structs.h	2045;"	d
JO_OUT_CALLBACK	structs.h	2026;"	d
JO_OUT_IO	structs.h	2037;"	d
JO_OUT_MODE	structs.h	2023;"	d
JO_OUT_MODIFIABLE	structs.h	2050;"	d
JO_OUT_NAME	structs.h	2040;"	d
JO_OUT_TIMEOUT	structs.h	2031;"	d
JO_PART	structs.h	2033;"	d
JO_STOPONEXIT	structs.h	2035;"	d
JO_TIMEOUT	structs.h	2030;"	d
JO_TIMEOUT_ALL	structs.h	2077;"	d
JO_WAITTIME	structs.h	2029;"	d
JSON_ARRAY	json.c	/^    JSON_ARRAY,		\/\/ parsing items in an array$/;"	e	enum:__anon62	file:
JSON_JS	vim.h	2510;"	d
JSON_NL	vim.h	2512;"	d
JSON_NO_NONE	vim.h	2511;"	d
JSON_OBJECT	json.c	/^    JSON_OBJECT		\/\/ parsing item in an object, after the key$/;"	e	enum:__anon62	file:
JSON_OBJECT_KEY	json.c	/^    JSON_OBJECT_KEY,	\/\/ parsing key of an object$/;"	e	enum:__anon62	file:
JUMPLISTSIZE	structs.h	132;"	d
JUMP_ALWAYS	vim9.h	/^    JUMP_ALWAYS,$/;"	e	enum:__anon265
JUMP_AND_KEEP_IF_FALSE	vim9.h	/^    JUMP_AND_KEEP_IF_FALSE,	\/\/ jump if top of stack is false, drop if not$/;"	e	enum:__anon265
JUMP_AND_KEEP_IF_TRUE	vim9.h	/^    JUMP_AND_KEEP_IF_TRUE,	\/\/ jump if top of stack is true, drop if not$/;"	e	enum:__anon265
JUMP_IF_FALSE	vim9.h	/^    JUMP_IF_FALSE,		\/\/ pop and jump if false$/;"	e	enum:__anon265
JUST_CALC_SIZE	regexp_bt.c	270;"	d	file:
KE2HIKEY	syntax.c	165;"	d	file:
KEEP_OPEN_TIME	channel.c	4219;"	d	file:
KEEP_ROOM	misc2.c	818;"	d	file:
KEEP_ROOM_KB	misc2.c	819;"	d	file:
KEY2TERMCAP0	keymap.h	129;"	d
KEY2TERMCAP1	keymap.h	130;"	d
KEYBUFLEN	netbeans.c	2286;"	d	file:
KEYLEN_PART_KEY	vim.h	2467;"	d
KEYLEN_PART_MAP	vim.h	2468;"	d
KEYLEN_REMOVED	vim.h	2469;"	d
KEYMAP_INIT	structs.h	2529;"	d
KEYMAP_LOADED	structs.h	2530;"	d
KEYWORD_IDX	syntax.c	210;"	d	file:
KEY_BUF_LEN	terminal.c	182;"	d	file:
KEY_COMPLETE	vim.h	953;"	d
KEY_EVENT_RECORD	os_mswin.c	/^typedef int KEY_EVENT_RECORD;$/;"	t	file:
KEY_EVENT_RECORD	os_win32.c	/^typedef int KEY_EVENT_RECORD;$/;"	t	file:
KEY_NAMES_TABLE_LEN	misc2.c	2493;"	d	file:
KEY_OPEN_BACK	vim.h	952;"	d
KEY_OPEN_FORW	vim.h	951;"	d
KEY_WOW64_32KEY	dosinst.h	73;"	d
KEY_WOW64_64KEY	dosinst.h	70;"	d
KE_CANCEL	keymap.h	/^    , KE_CANCEL = 101		\/\/ return from vgetc()$/;"	e	enum:key_extra
KE_CMDWIN	keymap.h	/^    , KE_CMDWIN = 84		\/\/ open command-line window from Command-line Mode$/;"	e	enum:key_extra
KE_CSI	keymap.h	/^    , KE_CSI = 81		\/\/ CSI typed directly$/;"	e	enum:key_extra
KE_CURSORHOLD	keymap.h	/^    , KE_CURSORHOLD = 96	\/\/ CursorHold event$/;"	e	enum:key_extra
KE_C_END	keymap.h	/^    , KE_C_END = 88		\/\/ control-end$/;"	e	enum:key_extra
KE_C_HOME	keymap.h	/^    , KE_C_HOME = 87		\/\/ control-home$/;"	e	enum:key_extra
KE_C_LEFT	keymap.h	/^    , KE_C_LEFT = 85		\/\/ control-left$/;"	e	enum:key_extra
KE_C_RIGHT	keymap.h	/^    , KE_C_RIGHT = 86		\/\/ control-right$/;"	e	enum:key_extra
KE_DROP	keymap.h	/^    , KE_DROP = 95		\/\/ DnD data is available$/;"	e	enum:key_extra
KE_FILLER	keymap.h	123;"	d
KE_FOCUSGAINED	keymap.h	/^    , KE_FOCUSGAINED = 98	\/\/ focus gained$/;"	e	enum:key_extra
KE_FOCUSLOST	keymap.h	/^    , KE_FOCUSLOST = 99		\/\/ focus lost$/;"	e	enum:key_extra
KE_IGNORE	keymap.h	/^    , KE_IGNORE = 53		\/\/ Ignored mouse drag\/release$/;"	e	enum:key_extra
KE_KDEL	keymap.h	/^    , KE_KDEL = 80		\/\/ keypad Delete key$/;"	e	enum:key_extra
KE_KINS	keymap.h	/^    , KE_KINS = 79		\/\/ keypad Insert key$/;"	e	enum:key_extra
KE_LEFTDRAG	keymap.h	/^    , KE_LEFTDRAG = 45		\/\/ Drag with left mouse button down$/;"	e	enum:key_extra
KE_LEFTMOUSE	keymap.h	/^    , KE_LEFTMOUSE = 44		\/\/ Left mouse button click$/;"	e	enum:key_extra
KE_LEFTMOUSE_NM	keymap.h	/^    , KE_LEFTMOUSE_NM = 69	\/\/ non-mappable Left mouse button click$/;"	e	enum:key_extra
KE_LEFTRELEASE	keymap.h	/^    , KE_LEFTRELEASE = 46	\/\/ Left mouse button release$/;"	e	enum:key_extra
KE_LEFTRELEASE_NM	keymap.h	/^    , KE_LEFTRELEASE_NM = 70	\/\/ non-mappable left mouse button release$/;"	e	enum:key_extra
KE_MIDDLEDRAG	keymap.h	/^    , KE_MIDDLEDRAG = 48	\/\/ Drag with middle mouse button down$/;"	e	enum:key_extra
KE_MIDDLEMOUSE	keymap.h	/^    , KE_MIDDLEMOUSE = 47	\/\/ Middle mouse button click$/;"	e	enum:key_extra
KE_MIDDLERELEASE	keymap.h	/^    , KE_MIDDLERELEASE = 49	\/\/ Middle mouse button release$/;"	e	enum:key_extra
KE_MOUSE	keymap.h	/^    , KE_MOUSE = 43		\/\/ mouse event start$/;"	e	enum:key_extra
KE_MOUSEDOWN	keymap.h	/^    , KE_MOUSEDOWN = 75		\/\/ scroll wheel pseudo-button Down$/;"	e	enum:key_extra
KE_MOUSELEFT	keymap.h	/^    , KE_MOUSELEFT = 77		\/\/ scroll wheel pseudo-button Left$/;"	e	enum:key_extra
KE_MOUSEMOVE	keymap.h	/^    , KE_MOUSEMOVE = 100	\/\/ mouse moved with no button down$/;"	e	enum:key_extra
KE_MOUSERIGHT	keymap.h	/^    , KE_MOUSERIGHT = 78	\/\/ scroll wheel pseudo-button Right$/;"	e	enum:key_extra
KE_MOUSEUP	keymap.h	/^    , KE_MOUSEUP = 76		\/\/ scroll wheel pseudo-button Up$/;"	e	enum:key_extra
KE_NAME	keymap.h	/^    KE_NAME = 3		\/\/ name of this terminal entry$/;"	e	enum:key_extra
KE_NOP	keymap.h	/^    , KE_NOP = 97		\/\/ doesn't do something$/;"	e	enum:key_extra
KE_PLUG	keymap.h	/^    , KE_PLUG = 83		\/\/ <Plug>$/;"	e	enum:key_extra
KE_RIGHTDRAG	keymap.h	/^    , KE_RIGHTDRAG = 51		\/\/ Drag with right mouse button down$/;"	e	enum:key_extra
KE_RIGHTMOUSE	keymap.h	/^    , KE_RIGHTMOUSE = 50	\/\/ Right mouse button click$/;"	e	enum:key_extra
KE_RIGHTRELEASE	keymap.h	/^    , KE_RIGHTRELEASE = 52	\/\/ Right mouse button release$/;"	e	enum:key_extra
KE_SNIFF_UNUSED	keymap.h	/^    , KE_SNIFF_UNUSED = 56	\/\/ obsolete$/;"	e	enum:key_extra
KE_SNR	keymap.h	/^    , KE_SNR = 82		\/\/ <SNR>$/;"	e	enum:key_extra
KE_S_DOWN	keymap.h	/^    , KE_S_DOWN = 5		\/\/ shift-down$/;"	e	enum:key_extra
KE_S_F1	keymap.h	/^    , KE_S_F1 = 6		\/\/ shifted function keys$/;"	e	enum:key_extra
KE_S_F10	keymap.h	/^    , KE_S_F10 = 15$/;"	e	enum:key_extra
KE_S_F11	keymap.h	/^    , KE_S_F11 = 16$/;"	e	enum:key_extra
KE_S_F12	keymap.h	/^    , KE_S_F12 = 17$/;"	e	enum:key_extra
KE_S_F13	keymap.h	/^    , KE_S_F13 = 18$/;"	e	enum:key_extra
KE_S_F14	keymap.h	/^    , KE_S_F14 = 19$/;"	e	enum:key_extra
KE_S_F15	keymap.h	/^    , KE_S_F15 = 20$/;"	e	enum:key_extra
KE_S_F16	keymap.h	/^    , KE_S_F16 = 21$/;"	e	enum:key_extra
KE_S_F17	keymap.h	/^    , KE_S_F17 = 22$/;"	e	enum:key_extra
KE_S_F18	keymap.h	/^    , KE_S_F18 = 23$/;"	e	enum:key_extra
KE_S_F19	keymap.h	/^    , KE_S_F19 = 24$/;"	e	enum:key_extra
KE_S_F2	keymap.h	/^    , KE_S_F2 = 7$/;"	e	enum:key_extra
KE_S_F20	keymap.h	/^    , KE_S_F20 = 25$/;"	e	enum:key_extra
KE_S_F21	keymap.h	/^    , KE_S_F21 = 26$/;"	e	enum:key_extra
KE_S_F22	keymap.h	/^    , KE_S_F22 = 27$/;"	e	enum:key_extra
KE_S_F23	keymap.h	/^    , KE_S_F23 = 28$/;"	e	enum:key_extra
KE_S_F24	keymap.h	/^    , KE_S_F24 = 29$/;"	e	enum:key_extra
KE_S_F25	keymap.h	/^    , KE_S_F25 = 30$/;"	e	enum:key_extra
KE_S_F26	keymap.h	/^    , KE_S_F26 = 31$/;"	e	enum:key_extra
KE_S_F27	keymap.h	/^    , KE_S_F27 = 32$/;"	e	enum:key_extra
KE_S_F28	keymap.h	/^    , KE_S_F28 = 33$/;"	e	enum:key_extra
KE_S_F29	keymap.h	/^    , KE_S_F29 = 34$/;"	e	enum:key_extra
KE_S_F3	keymap.h	/^    , KE_S_F3 = 8$/;"	e	enum:key_extra
KE_S_F30	keymap.h	/^    , KE_S_F30 = 35$/;"	e	enum:key_extra
KE_S_F31	keymap.h	/^    , KE_S_F31 = 36$/;"	e	enum:key_extra
KE_S_F32	keymap.h	/^    , KE_S_F32 = 37$/;"	e	enum:key_extra
KE_S_F33	keymap.h	/^    , KE_S_F33 = 38$/;"	e	enum:key_extra
KE_S_F34	keymap.h	/^    , KE_S_F34 = 39$/;"	e	enum:key_extra
KE_S_F35	keymap.h	/^    , KE_S_F35 = 40$/;"	e	enum:key_extra
KE_S_F36	keymap.h	/^    , KE_S_F36 = 41$/;"	e	enum:key_extra
KE_S_F37	keymap.h	/^    , KE_S_F37 = 42$/;"	e	enum:key_extra
KE_S_F4	keymap.h	/^    , KE_S_F4 = 9$/;"	e	enum:key_extra
KE_S_F5	keymap.h	/^    , KE_S_F5 = 10$/;"	e	enum:key_extra
KE_S_F6	keymap.h	/^    , KE_S_F6 = 11$/;"	e	enum:key_extra
KE_S_F7	keymap.h	/^    , KE_S_F7 = 12$/;"	e	enum:key_extra
KE_S_F8	keymap.h	/^    , KE_S_F8 = 13$/;"	e	enum:key_extra
KE_S_F9	keymap.h	/^    , KE_S_F9 = 14$/;"	e	enum:key_extra
KE_S_TAB_OLD	keymap.h	/^    , KE_S_TAB_OLD = 55		\/\/ shifted TAB key (no longer used)$/;"	e	enum:key_extra
KE_S_UP	keymap.h	/^    , KE_S_UP = 4		\/\/ shift-up$/;"	e	enum:key_extra
KE_S_XF1	keymap.h	/^    , KE_S_XF1 = 71		\/\/ vt100 shifted function keys for xterm$/;"	e	enum:key_extra
KE_S_XF2	keymap.h	/^    , KE_S_XF2 = 72$/;"	e	enum:key_extra
KE_S_XF3	keymap.h	/^    , KE_S_XF3 = 73$/;"	e	enum:key_extra
KE_S_XF4	keymap.h	/^    , KE_S_XF4 = 74$/;"	e	enum:key_extra
KE_TAB	keymap.h	/^    , KE_TAB = 54		\/\/ unshifted TAB key$/;"	e	enum:key_extra
KE_X1DRAG	keymap.h	/^    , KE_X1DRAG = 90$/;"	e	enum:key_extra
KE_X1MOUSE	keymap.h	/^    , KE_X1MOUSE = 89		\/\/ X1\/X2 mouse-buttons$/;"	e	enum:key_extra
KE_X1RELEASE	keymap.h	/^    , KE_X1RELEASE = 91$/;"	e	enum:key_extra
KE_X2DRAG	keymap.h	/^    , KE_X2DRAG = 93$/;"	e	enum:key_extra
KE_X2MOUSE	keymap.h	/^    , KE_X2MOUSE = 92$/;"	e	enum:key_extra
KE_X2RELEASE	keymap.h	/^    , KE_X2RELEASE = 94$/;"	e	enum:key_extra
KE_XDOWN	keymap.h	/^    , KE_XDOWN = 66$/;"	e	enum:key_extra
KE_XEND	keymap.h	/^    , KE_XEND = 61		\/\/ extra (vt100) end key for xterm$/;"	e	enum:key_extra
KE_XF1	keymap.h	/^    , KE_XF1 = 57		\/\/ extra vt100 function keys for xterm$/;"	e	enum:key_extra
KE_XF2	keymap.h	/^    , KE_XF2 = 58$/;"	e	enum:key_extra
KE_XF3	keymap.h	/^    , KE_XF3 = 59$/;"	e	enum:key_extra
KE_XF4	keymap.h	/^    , KE_XF4 = 60$/;"	e	enum:key_extra
KE_XHOME	keymap.h	/^    , KE_XHOME = 63		\/\/ extra (vt100) home key for xterm$/;"	e	enum:key_extra
KE_XLEFT	keymap.h	/^    , KE_XLEFT = 67$/;"	e	enum:key_extra
KE_XRIGHT	keymap.h	/^    , KE_XRIGHT = 68$/;"	e	enum:key_extra
KE_XUP	keymap.h	/^    , KE_XUP = 65		\/\/ extra vt100 cursor keys for xterm$/;"	e	enum:key_extra
KE_ZEND	keymap.h	/^    , KE_ZEND = 62		\/\/ extra (vt100) end key for xterm$/;"	e	enum:key_extra
KE_ZHOME	keymap.h	/^    , KE_ZHOME = 64		\/\/ extra (vt100) home key for xterm$/;"	e	enum:key_extra
KG_ALT	os_unix.c	72;"	d	file:
KG_ALTGR	os_unix.c	73;"	d	file:
KG_CAPSSHIFT	os_unix.c	78;"	d	file:
KG_CTRL	os_unix.c	71;"	d	file:
KG_CTRLL	os_unix.c	76;"	d	file:
KG_CTRLR	os_unix.c	77;"	d	file:
KG_SHIFT	os_unix.c	70;"	d	file:
KG_SHIFTL	os_unix.c	74;"	d	file:
KG_SHIFTR	os_unix.c	75;"	d	file:
KMAP_LLEN	digraph.c	2354;"	d	file:
KMAP_MAXLEN	digraph.c	2290;"	d	file:
KSSIZE	term.c	5980;"	d	file:
KS_8B	term.h	/^    KS_8B,	\/\/ set background color (RGB)$/;"	e	enum:SpecialKey
KS_8F	term.h	/^    KS_8F,	\/\/ set foreground color (RGB)$/;"	e	enum:SpecialKey
KS_AL	term.h	/^    KS_AL,	\/\/ add new blank line$/;"	e	enum:SpecialKey
KS_BC	term.h	/^    KS_BC,	\/\/ backspace character (cursor left)$/;"	e	enum:SpecialKey
KS_CAB	term.h	/^    KS_CAB,	\/\/ set background color (ANSI)$/;"	e	enum:SpecialKey
KS_CAF	term.h	/^    KS_CAF,	\/\/ set foreground color (ANSI)$/;"	e	enum:SpecialKey
KS_CAL	term.h	/^    KS_CAL,	\/\/ add number of blank lines$/;"	e	enum:SpecialKey
KS_CBD	term.h	/^    KS_CBD,	\/\/ disable bracketed paste mode$/;"	e	enum:SpecialKey
KS_CBE	term.h	/^    KS_CBE,	\/\/ enable bracketed paste mode$/;"	e	enum:SpecialKey
KS_CCO	term.h	/^    KS_CCO,	\/\/ number of colors$/;"	e	enum:SpecialKey
KS_CCS	term.h	/^    KS_CCS,	\/\/ cur is relative to scroll region$/;"	e	enum:SpecialKey
KS_CD	term.h	/^    KS_CD,	\/\/ clear to end of display$/;"	e	enum:SpecialKey
KS_CDL	term.h	/^    KS_CDL,	\/\/ delete number of lines$/;"	e	enum:SpecialKey
KS_CE	term.h	/^    KS_CE,	\/\/ clear to end of line$/;"	e	enum:SpecialKey
KS_CEC	term.h	/^    KS_CEC,	\/\/ set cursor color end$/;"	e	enum:SpecialKey
KS_CEI	term.h	/^    KS_CEI,	\/\/ end insert mode (block cursor)$/;"	e	enum:SpecialKey
KS_CGP	term.h	/^    KS_CGP,	\/\/ get window position$/;"	e	enum:SpecialKey
KS_CIE	term.h	/^    KS_CIE,	\/\/ set icon text end$/;"	e	enum:SpecialKey
KS_CIS	term.h	/^    KS_CIS,	\/\/ set icon text start$/;"	e	enum:SpecialKey
KS_CL	term.h	/^    KS_CL,	\/\/ clear screen$/;"	e	enum:SpecialKey
KS_CM	term.h	/^    KS_CM,	\/\/ cursor motion$/;"	e	enum:SpecialKey
KS_CPE	term.h	/^    KS_CPE,	\/\/ end of bracketed paste$/;"	e	enum:SpecialKey
KS_CPS	term.h	/^    KS_CPS,	\/\/ start of bracketed paste$/;"	e	enum:SpecialKey
KS_CRC	term.h	/^    KS_CRC,	\/\/ request cursor blinking$/;"	e	enum:SpecialKey
KS_CRI	term.h	/^    KS_CRI,	\/\/ cursor number of chars right$/;"	e	enum:SpecialKey
KS_CRS	term.h	/^    KS_CRS,	\/\/ request cursor style$/;"	e	enum:SpecialKey
KS_CRT	term.h	/^    KS_CRT,	\/\/ restore window title$/;"	e	enum:SpecialKey
KS_CRV	term.h	/^    KS_CRV,	\/\/ request version string$/;"	e	enum:SpecialKey
KS_CS	term.h	/^    KS_CS,	\/\/ scroll region$/;"	e	enum:SpecialKey
KS_CSB	term.h	/^    KS_CSB,	\/\/ set background color$/;"	e	enum:SpecialKey
KS_CSC	term.h	/^    KS_CSC,	\/\/ set cursor color start$/;"	e	enum:SpecialKey
KS_CSF	term.h	/^    KS_CSF,	\/\/ set foreground color$/;"	e	enum:SpecialKey
KS_CSH	term.h	/^    KS_CSH,	\/\/ cursor shape$/;"	e	enum:SpecialKey
KS_CSI	term.h	/^    KS_CSI,	\/\/ start insert mode (bar cursor)$/;"	e	enum:SpecialKey
KS_CSR	term.h	/^    KS_CSR,	\/\/ start replace mode (underline cursor)$/;"	e	enum:SpecialKey
KS_CST	term.h	/^    KS_CST,	\/\/ save window title$/;"	e	enum:SpecialKey
KS_CSV	term.h	/^    KS_CSV,	\/\/ scroll region vertical$/;"	e	enum:SpecialKey
KS_CTE	term.h	/^    KS_CTE,	\/\/ end of "raw" mode$/;"	e	enum:SpecialKey
KS_CTI	term.h	/^    KS_CTI,	\/\/ put terminal in "raw" mode$/;"	e	enum:SpecialKey
KS_CVS	term.h	/^    KS_CVS,	\/\/ cursor normally visible (no blink)$/;"	e	enum:SpecialKey
KS_CWP	term.h	/^    KS_CWP,	\/\/ set window position in pixels$/;"	e	enum:SpecialKey
KS_CWS	term.h	/^    KS_CWS,	\/\/ set window size in characters$/;"	e	enum:SpecialKey
KS_CZH	term.h	/^    KS_CZH,	\/\/ italic mode start$/;"	e	enum:SpecialKey
KS_CZR	term.h	/^    KS_CZR,	\/\/ italic mode end$/;"	e	enum:SpecialKey
KS_DA	term.h	/^    KS_DA,	\/\/ text may be scrolled down from up$/;"	e	enum:SpecialKey
KS_DB	term.h	/^    KS_DB,	\/\/ text may be scrolled up from down$/;"	e	enum:SpecialKey
KS_DEC_MOUSE	keymap.h	82;"	d
KS_DL	term.h	/^    KS_DL,	\/\/ delete line$/;"	e	enum:SpecialKey
KS_EXTRA	keymap.h	61;"	d
KS_FS	term.h	/^    KS_FS,	\/\/ set window title end (from status line)$/;"	e	enum:SpecialKey
KS_GPM_MOUSE	keymap.h	118;"	d
KS_HOR_SCROLLBAR	keymap.h	76;"	d
KS_JSBTERM_MOUSE	keymap.h	96;"	d
KS_KE	term.h	/^    KS_KE,	\/\/ out of "keypad transmit" mode$/;"	e	enum:SpecialKey
KS_KEY	keymap.h	99;"	d
KS_KS	term.h	/^    KS_KS,	\/\/ put term in "keypad transmit" mode$/;"	e	enum:SpecialKey
KS_LAST	term.h	113;"	d
KS_LE	term.h	/^    KS_LE,	\/\/ cursor left (mostly backspace)$/;"	e	enum:SpecialKey
KS_MB	term.h	/^    KS_MB,	\/\/ blink mode$/;"	e	enum:SpecialKey
KS_MD	term.h	/^    KS_MD,	\/\/ bold mode$/;"	e	enum:SpecialKey
KS_ME	term.h	/^    KS_ME,	\/\/ normal mode$/;"	e	enum:SpecialKey
KS_MENU	keymap.h	74;"	d
KS_MODIFIER	keymap.h	67;"	d
KS_MOUSE	keymap.h	73;"	d
KS_MR	term.h	/^    KS_MR,	\/\/ reverse mode$/;"	e	enum:SpecialKey
KS_MS	term.h	/^    KS_MS,	\/\/ save to move cur in reverse mode$/;"	e	enum:SpecialKey
KS_NAME	term.h	/^    KS_NAME = 0,\/\/ name of this terminal entry$/;"	e	enum:SpecialKey
KS_ND	term.h	/^    KS_ND,	\/\/ cursor right$/;"	e	enum:SpecialKey
KS_NETTERM_MOUSE	keymap.h	81;"	d
KS_OP	term.h	/^    KS_OP,	\/\/ original color pair$/;"	e	enum:SpecialKey
KS_PTERM_MOUSE	keymap.h	102;"	d
KS_RBG	term.h	/^    KS_RBG,	\/\/ request background color$/;"	e	enum:SpecialKey
KS_RFG	term.h	/^    KS_RFG,	\/\/ request foreground color$/;"	e	enum:SpecialKey
KS_SE	term.h	/^    KS_SE,	\/\/ normal mode$/;"	e	enum:SpecialKey
KS_SELECT	keymap.h	87;"	d
KS_SGR_MOUSE	keymap.h	114;"	d
KS_SGR_MOUSE_RELEASE	keymap.h	115;"	d
KS_SO	term.h	/^    KS_SO,	\/\/ standout mode$/;"	e	enum:SpecialKey
KS_SPECIAL	keymap.h	55;"	d
KS_SR	term.h	/^    KS_SR,	\/\/ scroll reverse (backward)$/;"	e	enum:SpecialKey
KS_SRI	term.h	/^    KS_SRI	\/\/ restore icon text$/;"	e	enum:SpecialKey
KS_SSI	term.h	/^    KS_SSI,	\/\/ save icon text$/;"	e	enum:SpecialKey
KS_STE	term.h	/^    KS_STE,	\/\/ exit strikethrough mode$/;"	e	enum:SpecialKey
KS_STS	term.h	/^    KS_STS,	\/\/ strikethrough mode$/;"	e	enum:SpecialKey
KS_TABLINE	keymap.h	105;"	d
KS_TABMENU	keymap.h	108;"	d
KS_TE	term.h	/^    KS_TE,	\/\/ end of termcap mode$/;"	e	enum:SpecialKey
KS_TEAROFF	keymap.h	93;"	d
KS_TI	term.h	/^    KS_TI,	\/\/ put terminal in termcap mode$/;"	e	enum:SpecialKey
KS_TS	term.h	/^    KS_TS,	\/\/ set window title start (to status line)$/;"	e	enum:SpecialKey
KS_U7	term.h	/^    KS_U7,	\/\/ request cursor position$/;"	e	enum:SpecialKey
KS_UCE	term.h	/^    KS_UCE,	\/\/ exit undercurl mode$/;"	e	enum:SpecialKey
KS_UCS	term.h	/^    KS_UCS,	\/\/ undercurl mode$/;"	e	enum:SpecialKey
KS_UE	term.h	/^    KS_UE,	\/\/ exit underscore (underline) mode$/;"	e	enum:SpecialKey
KS_URXVT_MOUSE	keymap.h	111;"	d
KS_US	term.h	/^    KS_US,	\/\/ underscore (underline) mode$/;"	e	enum:SpecialKey
KS_UT	term.h	/^    KS_UT,	\/\/ clearing uses current background color$/;"	e	enum:SpecialKey
KS_VB	term.h	/^    KS_VB,	\/\/ visual bell$/;"	e	enum:SpecialKey
KS_VE	term.h	/^    KS_VE,	\/\/ cursor visible$/;"	e	enum:SpecialKey
KS_VER_SCROLLBAR	keymap.h	75;"	d
KS_VI	term.h	/^    KS_VI,	\/\/ cursor invisible$/;"	e	enum:SpecialKey
KS_VS	term.h	/^    KS_VS,	\/\/ cursor very visible (blink)$/;"	e	enum:SpecialKey
KS_XN	term.h	/^    KS_XN,	\/\/ newline glitch$/;"	e	enum:SpecialKey
KS_XS	term.h	/^    KS_XS,	\/\/ standout not erased by overwriting (hpterm)$/;"	e	enum:SpecialKey
KS_ZERO	keymap.h	49;"	d
KWORD	regexp_bt.c	174;"	d	file:
K_BS	keymap.h	378;"	d
K_CANCEL	keymap.h	462;"	d
K_CMDWIN	keymap.h	472;"	d
K_CSI	keymap.h	469;"	d
K_CURSORHOLD	keymap.h	478;"	d
K_C_END	keymap.h	297;"	d
K_C_HOME	keymap.h	295;"	d
K_C_LEFT	keymap.h	291;"	d
K_C_RIGHT	keymap.h	293;"	d
K_DEC_MOUSE	keymap.h	423;"	d
K_DEL	keymap.h	382;"	d
K_DOWN	keymap.h	285;"	d
K_DROP	keymap.h	474;"	d
K_END	keymap.h	388;"	d
K_F1	keymap.h	313;"	d
K_F10	keymap.h	322;"	d
K_F11	keymap.h	324;"	d
K_F12	keymap.h	325;"	d
K_F13	keymap.h	326;"	d
K_F14	keymap.h	327;"	d
K_F15	keymap.h	328;"	d
K_F16	keymap.h	329;"	d
K_F17	keymap.h	330;"	d
K_F18	keymap.h	331;"	d
K_F19	keymap.h	332;"	d
K_F2	keymap.h	314;"	d
K_F20	keymap.h	333;"	d
K_F21	keymap.h	335;"	d
K_F22	keymap.h	336;"	d
K_F23	keymap.h	337;"	d
K_F24	keymap.h	338;"	d
K_F25	keymap.h	339;"	d
K_F26	keymap.h	340;"	d
K_F27	keymap.h	341;"	d
K_F28	keymap.h	342;"	d
K_F29	keymap.h	343;"	d
K_F3	keymap.h	315;"	d
K_F30	keymap.h	344;"	d
K_F31	keymap.h	346;"	d
K_F32	keymap.h	347;"	d
K_F33	keymap.h	348;"	d
K_F34	keymap.h	349;"	d
K_F35	keymap.h	350;"	d
K_F36	keymap.h	351;"	d
K_F37	keymap.h	352;"	d
K_F4	keymap.h	316;"	d
K_F5	keymap.h	317;"	d
K_F6	keymap.h	318;"	d
K_F7	keymap.h	319;"	d
K_F8	keymap.h	320;"	d
K_F9	keymap.h	321;"	d
K_FOCUSGAINED	keymap.h	475;"	d
K_FOCUSLOST	keymap.h	476;"	d
K_HELP	keymap.h	375;"	d
K_HOME	keymap.h	384;"	d
K_HOR_SCROLLBAR	keymap.h	420;"	d
K_IGNORE	keymap.h	460;"	d
K_INS	keymap.h	380;"	d
K_JSBTERM_MOUSE	keymap.h	424;"	d
K_K0	keymap.h	406;"	d
K_K1	keymap.h	407;"	d
K_K2	keymap.h	408;"	d
K_K3	keymap.h	409;"	d
K_K4	keymap.h	410;"	d
K_K5	keymap.h	411;"	d
K_K6	keymap.h	412;"	d
K_K7	keymap.h	413;"	d
K_K8	keymap.h	414;"	d
K_K9	keymap.h	415;"	d
K_KDEL	keymap.h	383;"	d
K_KDIVIDE	keymap.h	399;"	d
K_KEND	keymap.h	389;"	d
K_KENTER	keymap.h	401;"	d
K_KHOME	keymap.h	385;"	d
K_KINS	keymap.h	381;"	d
K_KMINUS	keymap.h	398;"	d
K_KMULTIPLY	keymap.h	400;"	d
K_KPAGEDOWN	keymap.h	395;"	d
K_KPAGEUP	keymap.h	394;"	d
K_KPLUS	keymap.h	397;"	d
K_KPOINT	keymap.h	402;"	d
K_LEFT	keymap.h	286;"	d
K_LEFTDRAG	keymap.h	442;"	d
K_LEFTMOUSE	keymap.h	440;"	d
K_LEFTMOUSE_NM	keymap.h	441;"	d
K_LEFTRELEASE	keymap.h	443;"	d
K_LEFTRELEASE_NM	keymap.h	444;"	d
K_MENU	keymap.h	418;"	d
K_MIDDLEDRAG	keymap.h	447;"	d
K_MIDDLEMOUSE	keymap.h	446;"	d
K_MIDDLERELEASE	keymap.h	448;"	d
K_MOUSE	keymap.h	417;"	d
K_MOUSEDOWN	keymap.h	464;"	d
K_MOUSELEFT	keymap.h	466;"	d
K_MOUSEMOVE	keymap.h	445;"	d
K_MOUSERIGHT	keymap.h	467;"	d
K_MOUSEUP	keymap.h	465;"	d
K_NETTERM_MOUSE	keymap.h	422;"	d
K_NOP	keymap.h	461;"	d
K_NUL	keymap.h	19;"	d
K_PAGEDOWN	keymap.h	393;"	d
K_PAGEUP	keymap.h	392;"	d
K_PE	keymap.h	404;"	d
K_PLUG	keymap.h	471;"	d
K_PS	keymap.h	403;"	d
K_PTERM_MOUSE	keymap.h	425;"	d
K_RIGHT	keymap.h	287;"	d
K_RIGHTDRAG	keymap.h	450;"	d
K_RIGHTMOUSE	keymap.h	449;"	d
K_RIGHTRELEASE	keymap.h	451;"	d
K_SECOND	keymap.h	135;"	d
K_SELECT	keymap.h	430;"	d
K_SELECT_STRING	keymap.h	88;"	d
K_SGR_MOUSE	keymap.h	427;"	d
K_SGR_MOUSERELEASE	keymap.h	428;"	d
K_SNR	keymap.h	470;"	d
K_SPECIAL	keymap.h	29;"	d
K_S_DOWN	keymap.h	289;"	d
K_S_END	keymap.h	296;"	d
K_S_F1	keymap.h	360;"	d
K_S_F10	keymap.h	369;"	d
K_S_F11	keymap.h	371;"	d
K_S_F12	keymap.h	372;"	d
K_S_F2	keymap.h	361;"	d
K_S_F3	keymap.h	362;"	d
K_S_F4	keymap.h	363;"	d
K_S_F5	keymap.h	364;"	d
K_S_F6	keymap.h	365;"	d
K_S_F7	keymap.h	366;"	d
K_S_F8	keymap.h	367;"	d
K_S_F9	keymap.h	368;"	d
K_S_HOME	keymap.h	294;"	d
K_S_LEFT	keymap.h	290;"	d
K_S_RIGHT	keymap.h	292;"	d
K_S_TAB	keymap.h	299;"	d
K_S_UP	keymap.h	288;"	d
K_S_XF1	keymap.h	355;"	d
K_S_XF2	keymap.h	356;"	d
K_S_XF3	keymap.h	357;"	d
K_S_XF4	keymap.h	358;"	d
K_TAB	keymap.h	298;"	d
K_TABLINE	keymap.h	433;"	d
K_TABMENU	keymap.h	434;"	d
K_TEAROFF	keymap.h	431;"	d
K_THIRD	keymap.h	137;"	d
K_UNDO	keymap.h	376;"	d
K_UP	keymap.h	284;"	d
K_URXVT_MOUSE	keymap.h	426;"	d
K_VER_SCROLLBAR	keymap.h	419;"	d
K_X1DRAG	keymap.h	454;"	d
K_X1MOUSE	keymap.h	452;"	d
K_X1MOUSE	keymap.h	453;"	d
K_X1RELEASE	keymap.h	455;"	d
K_X2DRAG	keymap.h	457;"	d
K_X2MOUSE	keymap.h	456;"	d
K_X2RELEASE	keymap.h	458;"	d
K_XDOWN	keymap.h	309;"	d
K_XEND	keymap.h	390;"	d
K_XF1	keymap.h	302;"	d
K_XF2	keymap.h	303;"	d
K_XF3	keymap.h	304;"	d
K_XF4	keymap.h	305;"	d
K_XHOME	keymap.h	386;"	d
K_XLEFT	keymap.h	310;"	d
K_XRIGHT	keymap.h	311;"	d
K_XUP	keymap.h	308;"	d
K_ZEND	keymap.h	391;"	d
K_ZERO	keymap.h	282;"	d
K_ZHOME	keymap.h	387;"	d
KeyNoremap	getchar.c	/^static int	KeyNoremap = 0;	    \/\/ remapping flags$/;"	v	file:
KeyStuffed	globals.h	/^EXTERN int	KeyStuffed;		\/\/ TRUE if current char from stuffbuf$/;"	v
KeySym	gui_mac.c	230;"	d	file:
KeyTyped	globals.h	/^EXTERN int	KeyTyped;		\/\/ TRUE if user typed current char$/;"	v
Kill	if_cscope.h	/^typedef enum { Add, Find, Help, Kill, Reset, Show } csid_e;$/;"	e	enum:__anon148
L	if_lua.c	/^static lua_State *L = NULL;$/;"	v	file:
LALLOC_CLEAR_MULT	vim.h	1581;"	d
LALLOC_CLEAR_ONE	vim.h	1580;"	d
LALLOC_MULT	vim.h	1582;"	d
LANGMAP	vim.h	681;"	d
LANGMAP_ADJUST	macros.h	126;"	d
LANGMAP_ADJUST	macros.h	141;"	d
LANGP_ENTRY	spell.h	228;"	d
LAST_NL	regexp_bt.c	198;"	d	file:
LAST_TAB_NR	ex_docmd.c	1604;"	d	file:
LAST_WIN_NR	ex_docmd.c	1602;"	d	file:
LATIN1LOWER	charset.c	1597;"	d	file:
LATIN1UPPER	charset.c	1598;"	d	file:
LBUFLEN	diff.c	44;"	d	file:
LEN_FROM_CONV	mbyte.c	515;"	d	file:
LET_IS_CONST	vim.h	2136;"	d
LET_NO_COMMAND	vim.h	2137;"	d
LIBID_Vim	if_ole.h	/^EXTERN_C const IID LIBID_Vim;$/;"	v
LIBID_Vim	iid_ole.c	/^const IID LIBID_Vim = {0x0F0BFAE0,0x4C90,0x11d1,{0x82,0xD7,0x00,0x04,0xAC,0x36,0x85,0x19}};$/;"	v
LINEEMPTY	macros.h	48;"	d
LINE_ATTR	drawline.c	349;"	d	file:
LINE_BUF_LEN	viminfo.c	423;"	d	file:
LINE_DELAY	gui_at_sb.c	220;"	d	file:
LINE_LEN	term.c	6162;"	d	file:
LINE_MAXLEN	quickfix.c	220;"	d	file:
LINE_REPEAT	gui_at_sb.c	222;"	d	file:
LISPWORD_VALUE	option.h	356;"	d
LISTCOUNT	quickfix.c	49;"	d	file:
LIST_ATTR	highlight.c	2470;"	d	file:
LIST_INT	highlight.c	2472;"	d	file:
LIST_STRING	highlight.c	2471;"	d	file:
LOGFONT	os_win32.c	/^typedef int LOGFONT;$/;"	t	file:
LOGFONTW	gui_w32.c	/^typedef int LOGFONTW[];$/;"	t	file:
LOGFONTW	os_mswin.c	/^typedef int LOGFONTW;$/;"	t	file:
LOG_TR	term.c	106;"	d	file:
LONG	gui_w32.c	/^typedef int LONG;$/;"	t	file:
LONGJMP	os_unix.h	480;"	d
LONGJMP	os_unix.h	484;"	d
LONG_LONG_OFF_T	vim.h	369;"	d
LOOKFOR_ANY	cindent.c	25;"	d	file:
LOOKFOR_CASE	cindent.c	24;"	d	file:
LOOKFOR_COMMA	cindent.c	33;"	d	file:
LOOKFOR_CPP_BASECLASS	cindent.c	30;"	d	file:
LOOKFOR_DO	cindent.c	23;"	d	file:
LOOKFOR_ENUM_OR_INIT	cindent.c	31;"	d	file:
LOOKFOR_IF	cindent.c	22;"	d	file:
LOOKFOR_INITIAL	cindent.c	21;"	d	file:
LOOKFOR_JS_KEY	cindent.c	32;"	d	file:
LOOKFOR_NOBREAK	cindent.c	29;"	d	file:
LOOKFOR_SCOPEDECL	cindent.c	28;"	d	file:
LOOKFOR_TERM	cindent.c	26;"	d	file:
LOOKFOR_UNTERM	cindent.c	27;"	d	file:
LOWER	regexp_bt.c	194;"	d	file:
LOWEST_WIN_ID	vim.h	2525;"	d
LPARAM	gui_w32.c	/^typedef int LPARAM;$/;"	t	file:
LPARAM	os_mswin.c	/^typedef int LPARAM;$/;"	t	file:
LPBOOL	os_mswin.c	/^typedef int LPBOOL;$/;"	t	file:
LPBOOL	os_win32.c	/^typedef int LPBOOL;$/;"	t	file:
LPBOOL	winclip.c	/^typedef int LPBOOL;$/;"	t	file:
LPCOMPOSITIONFORM	gui_w32.c	/^} COMPOSITIONFORM, *PCOMPOSITIONFORM, NEAR *NPCOMPOSITIONFORM, FAR *LPCOMPOSITIONFORM;$/;"	t	typeref:struct:tagCOMPOSITIONFORM	file:
LPCREATESTRUCT	gui_w32.c	/^typedef int LPCREATESTRUCT;$/;"	t	file:
LPCSTR	gui_w32.c	/^typedef int LPCSTR;$/;"	t	file:
LPCSTR	os_mswin.c	/^typedef int LPCSTR;$/;"	t	file:
LPCSTR	os_win32.c	/^typedef char * LPCSTR;$/;"	t	file:
LPCSTR	winclip.c	/^typedef int LPCSTR;$/;"	t	file:
LPCTSTR	gui_w32.c	/^typedef int LPCTSTR;$/;"	t	file:
LPCTSTR	os_win32.c	/^typedef int LPCTSTR;$/;"	t	file:
LPCWSTR	os_mswin.c	/^typedef int LPCWSTR;$/;"	t	file:
LPCWSTR	winclip.c	/^typedef int LPCWSTR;$/;"	t	file:
LPDWORD	os_mswin.c	/^typedef int LPDWORD;$/;"	t	file:
LPDWORD	os_win32.c	/^typedef int LPDWORD;$/;"	t	file:
LPFN_ISWOW64PROCESS	dosinst.h	/^typedef BOOL (WINAPI *LPFN_ISWOW64PROCESS)(HANDLE, PBOOL);$/;"	t
LPHANDLE	os_win32.c	/^typedef int LPHANDLE;$/;"	t	file:
LPNMHDR	gui_w32.c	/^typedef int LPNMHDR;$/;"	t	file:
LPNMTTDISPINFO	gui_w32.c	4040;"	d	file:
LPNMTTDISPINFOA	gui_w32.c	/^} NMTTDISPINFOA, *LPNMTTDISPINFOA;$/;"	t	typeref:struct:tagNMTTDISPINFOA	file:
LPNMTTDISPINFOW	gui_w32.c	/^} NMTTDISPINFOW, *LPNMTTDISPINFOW;$/;"	t	typeref:struct:tagNMTTDISPINFOW	file:
LPPROC_THREAD_ATTRIBUTE_LIST	terminal.c	/^typedef int LPPROC_THREAD_ATTRIBUTE_LIST;$/;"	t	file:
LPRECT	gui_w32.c	/^typedef int LPRECT;$/;"	t	file:
LPSECURITY_ATTRIBUTES	os_win32.c	/^typedef int LPSECURITY_ATTRIBUTES;$/;"	t	file:
LPSTR	gui_w32.c	/^typedef int LPSTR;$/;"	t	file:
LPSTR	os_mswin.c	/^typedef int LPSTR;$/;"	t	file:
LPSTR	os_win32.c	/^typedef int LPSTR;$/;"	t	file:
LPSTR	winclip.c	/^typedef int LPSTR;$/;"	t	file:
LPTSTR	os_mswin.c	/^typedef int LPTSTR;$/;"	t	file:
LPTSTR	os_win32.c	/^typedef int LPTSTR;$/;"	t	file:
LPVOID	os_mswin.c	/^typedef int LPVOID;$/;"	t	file:
LPVOID	os_win32.c	/^typedef int LPVOID;$/;"	t	file:
LPWINDOWPOS	gui_w32.c	/^typedef int LPWINDOWPOS;$/;"	t	file:
LPWORD	gui_w32.c	/^typedef int LPWORD;$/;"	t	file:
LPWSTR	os_mswin.c	/^typedef int LPWSTR;$/;"	t	file:
LPWSTR	os_win32.c	/^typedef char * LPWSTR;$/;"	t	file:
LPWSTR	winclip.c	/^typedef int LPWSTR;$/;"	t	file:
LREPLACE	vim.h	688;"	d
LRESULT	gui_w32.c	/^typedef int LRESULT;$/;"	t	file:
LRESULT	os_mswin.c	/^typedef int LRESULT;$/;"	t	file:
LSIZE	vim.h	1512;"	d
LTOREQ_POS	macros.h	37;"	d
LT_POS	macros.h	24;"	d
LT_POSP	macros.h	29;"	d
LUAVIM_BLOB	if_lua.c	/^static const char LUAVIM_BLOB[] = "blob";$/;"	v	file:
LUAVIM_BUFFER	if_lua.c	/^static const char LUAVIM_BUFFER[] = "buffer";$/;"	v	file:
LUAVIM_CHUNKNAME	if_lua.c	22;"	d	file:
LUAVIM_DICT	if_lua.c	/^static const char LUAVIM_DICT[] = "dict";$/;"	v	file:
LUAVIM_EVALHEADER	if_lua.c	25;"	d	file:
LUAVIM_EVALNAME	if_lua.c	24;"	d	file:
LUAVIM_FREE	if_lua.c	/^static const char LUAVIM_FREE[] = "luaV_free";$/;"	v	file:
LUAVIM_FUNCREF	if_lua.c	/^static const char LUAVIM_FUNCREF[] = "funcref";$/;"	v	file:
LUAVIM_LIST	if_lua.c	/^static const char LUAVIM_LIST[] = "list";$/;"	v	file:
LUAVIM_LUAEVAL	if_lua.c	/^static const char LUAVIM_LUAEVAL[] = "luaV_luaeval";$/;"	v	file:
LUAVIM_NAME	if_lua.c	23;"	d	file:
LUAVIM_SETREF	if_lua.c	/^static const char LUAVIM_SETREF[] = "luaV_setref";$/;"	v	file:
LUAVIM_WINDOW	if_lua.c	/^static const char LUAVIM_WINDOW[] = "window";$/;"	v	file:
L_MATCH	screen.c	896;"	d	file:
L_SHOWFILE	cmdexpand.c	532;"	d	file:
Lab_IsMenupane	gui_xmebw.c	63;"	d	file:
LastActivity	gui_w32.c	/^static DWORD	    LastActivity = 0;$/;"	v	file:
Leave	gui_xmebw.c	/^Leave(Widget wid,$/;"	f	file:
LineOffset	globals.h	/^EXTERN unsigned	*LineOffset INIT(= NULL);$/;"	v
LineToString	if_python.c	/^LineToString(const char *str)$/;"	f	file:
LineToString	if_python3.c	/^LineToString(const char *str)$/;"	f	file:
LineWraps	globals.h	/^EXTERN char_u	*LineWraps INIT(= NULL);	\/\/ line wraps to next line$/;"	v
ListAsMapping	if_py_both.h	/^static PyMappingMethods ListAsMapping = {$/;"	v
ListAsSeq	if_py_both.h	/^static PySequenceMethods ListAsSeq = {$/;"	v
ListAssIndex	if_py_both.h	/^ListAssIndex(ListObject *self, Py_ssize_t index, PyObject *obj)$/;"	f
ListAssItem	if_py_both.h	/^ListAssItem(ListObject *self, PyObject *idx, PyObject *obj)$/;"	f
ListAssSlice	if_py_both.h	/^ListAssSlice(ListObject *self, Py_ssize_t first,$/;"	f
ListAttrs	if_py_both.h	/^static char *ListAttrs[] = {$/;"	v
ListConcatInPlace	if_py_both.h	/^ListConcatInPlace(ListObject *self, PyObject *obj)$/;"	f
ListConstructor	if_py_both.h	/^ListConstructor(PyTypeObject *subtype, PyObject *args, PyObject *kwargs)$/;"	f
ListDestructor	if_py_both.h	/^ListDestructor(ListObject *self)$/;"	f
ListDir	if_py_both.h	/^ListDir(PyObject *self)$/;"	f
ListGetattr	if_python.c	/^ListGetattr(PyObject *self, char *name)$/;"	f	file:
ListGetattro	if_python3.c	/^ListGetattro(PyObject *self, PyObject *nameobj)$/;"	f	file:
ListIndex	if_py_both.h	/^ListIndex(ListObject *self, Py_ssize_t index)$/;"	f
ListItem	if_py_both.h	/^ListItem(ListObject *self, PyObject* idx)$/;"	f
ListIter	if_py_both.h	/^ListIter(ListObject *self)$/;"	f
ListIterDestruct	if_py_both.h	/^ListIterDestruct(listiterinfo_T *lii)$/;"	f
ListIterNext	if_py_both.h	/^ListIterNext(listiterinfo_T **lii)$/;"	f
ListLength	if_py_both.h	/^ListLength(ListObject *self)$/;"	f
ListMethods	if_py_both.h	/^static struct PyMethodDef ListMethods[] = {$/;"	v	typeref:struct:PyMethodDef
ListNew	if_py_both.h	/^ListNew(PyTypeObject *subtype, list_T *list)$/;"	f
ListObject	if_py_both.h	/^} ListObject;$/;"	t	typeref:struct:__anon156
ListSetattr	if_py_both.h	/^ListSetattr(ListObject *self, char *name, PyObject *valObject)$/;"	f
ListSetattro	if_python3.c	/^ListSetattro(PyObject *self, PyObject *nameobj, PyObject *val)$/;"	f	file:
ListSlice	if_py_both.h	/^ListSlice(ListObject *self, Py_ssize_t first, Py_ssize_t step,$/;"	f
ListSpecifier	gui_xmdlg.c	/^enum ListSpecifier$/;"	g	file:
ListType	if_py_both.h	/^static PyTypeObject ListType;$/;"	v
LoadXpmImage	xpm_w32.c	/^LoadXpmImage($/;"	f
LoaderDestructor	if_py_both.h	/^LoaderDestructor(LoaderObject *self)$/;"	f
LoaderLoadModule	if_py_both.h	/^LoaderLoadModule(LoaderObject *self, PyObject *args UNUSED)$/;"	f
LoaderMethods	if_py_both.h	/^static struct PyMethodDef LoaderMethods[] = {$/;"	v	typeref:struct:PyMethodDef
LoaderObject	if_py_both.h	/^} LoaderObject;$/;"	t	typeref:struct:__anon151
LoaderType	if_py_both.h	/^static PyTypeObject LoaderType;$/;"	v
LookAhead	gui_at_sb.c	/^LookAhead(Widget w, XEvent *event)$/;"	f	file:
LookupName	if_xcmdsrv.c	/^LookupName($/;"	f	file:
MACOS_CONVERT	vim.h	200;"	d
MACOS_X	vim.h	95;"	d
MAGIC_ALL	regexp.c	310;"	d	file:
MAGIC_NONE	regexp.c	307;"	d	file:
MAGIC_OFF	regexp.c	308;"	d	file:
MAGIC_ON	regexp.c	309;"	d	file:
MAKE_VER	os_win32.c	263;"	d	file:
MAP_ALL_MODES	vim.h	703;"	d
MAP_HASH	map.c	34;"	d	file:
MARGIN	gui_at_sb.c	233;"	d	file:
MATCH	regexp_bt.c	150;"	d	file:
MATCH_END	evalfunc.c	/^    MATCH_END,	    \/\/ matchend()$/;"	e	enum:__anon19	file:
MATCH_LIST	evalfunc.c	/^    MATCH_LIST,	    \/\/ matchlist()$/;"	e	enum:__anon19	file:
MATCH_MATCH	evalfunc.c	/^    MATCH_MATCH,    \/\/ match()$/;"	e	enum:__anon19	file:
MATCH_POS	evalfunc.c	/^    MATCH_POS	    \/\/ matchstrpos()$/;"	e	enum:__anon19	file:
MATCH_STR	evalfunc.c	/^    MATCH_STR,	    \/\/ matchstr()$/;"	e	enum:__anon19	file:
MAUTO	vim.h	1488;"	d
MAX	ex_getln.c	17;"	d	file:
MAX	gui.h	22;"	d
MAX	gui_gtk.c	46;"	d	file:
MAX	terminal.c	49;"	d	file:
MAX	vim.h	2401;"	d
MAXCOL	vim.h	1692;"	d
MAXCOL	vim.h	1695;"	d
MAXITEMCNT	spellfile.c	2175;"	d	file:
MAXKEYWLEN	syntax.c	94;"	d	file:
MAXLINELEN	spellfile.c	1764;"	d	file:
MAXLNUM	vim.h	1693;"	d
MAXLNUM	vim.h	1696;"	d
MAXMAPLEN	vim.h	1534;"	d
MAXMSGSIZE	channel.c	3191;"	d	file:
MAXNAMLEN	os_unix.h	141;"	d
MAXNAMLEN	os_unix.h	145;"	d
MAXNAMLEN	os_unix.h	149;"	d
MAXNAMLEN	os_unix.h	157;"	d
MAXPATHL	os_unix.h	411;"	d
MAXPATHL	os_unix.h	413;"	d
MAXPATHL	os_win32.h	108;"	d
MAXPATHL	vim.h	297;"	d
MAXPATHL	vim.h	299;"	d
MAXPOSMATCH	structs.h	3013;"	d
MAXREGIONS	spell.h	37;"	d
MAXSCORE	spellsuggest.c	32;"	d	file:
MAXSUFLEN	filepath.c	2900;"	d	file:
MAXWLEN	spell.h	32;"	d
MAXWORDCOUNT	spell.h	316;"	d
MAX_ARG_CMDS	structs.h	3810;"	d
MAX_CHECK_ENDED	channel.c	5781;"	d	file:
MAX_CLUSTER_ID	syntax.c	140;"	d	file:
MAX_COLOR_LENGTH	netbeans.c	41;"	d	file:
MAX_COLOR_STR_LEN	term.c	2954;"	d	file:
MAX_DISPLAY_SIZE	gui_xmdlg.c	85;"	d	file:
MAX_ENTRIES_IN_LIST	gui_xmdlg.c	84;"	d	file:
MAX_ENV_PATH_LEN	os_win32.c	411;"	d	file:
MAX_ESC_SEQ_LEN	term.c	2473;"	d	file:
MAX_FONTS	gui_xmdlg.c	82;"	d	file:
MAX_FONT_NAME_LEN	gui_xmdlg.c	83;"	d	file:
MAX_FUNC_ARGS	structs.h	1560;"	d
MAX_FUNC_NESTING	userfunc.c	2238;"	d	file:
MAX_HL_ID	structs.h	1039;"	d
MAX_KEY_CODE_LEN	keymap.h	511;"	d
MAX_KEY_NAME_LEN	keymap.h	500;"	d
MAX_LEVEL	fold.c	43;"	d	file:
MAX_LIMIT	regexp.c	72;"	d	file:
MAX_MCO	vim.h	1771;"	d
MAX_MSG_HIST_LEN	feature.h	124;"	d
MAX_MSG_HIST_LEN	feature.h	126;"	d
MAX_NAMED_PIPE_SIZE	vim.h	2506;"	d
MAX_NAME_LENGTH	if_xcmdsrv.c	257;"	d	file:
MAX_OPEN_CHANNELS	vim.h	2500;"	d
MAX_OPEN_CHANNELS	vim.h	2502;"	d
MAX_PROP_WORDS	if_xcmdsrv.c	160;"	d	file:
MAX_REPEAT_PARSE	getchar.c	2068;"	d	file:
MAX_ROW	terminal.c	181;"	d	file:
MAX_SWAP_PAGE_SIZE	vim.h	1238;"	d
MAX_SYN_INC_TAG	syntax.c	139;"	d	file:
MAX_TYPENR	vim.h	411;"	d
MAYBE	vim.h	1439;"	d
MAY_LOOP	os_unix.c	6043;"	d	file:
MBLOCK	vim.h	1486;"	d
MB_BYTE2LEN	vim.h	2255;"	d
MB_BYTE2LEN_CHECK	vim.h	2256;"	d
MB_CHAR2LEN	macros.h	243;"	d
MB_CHARLEN	macros.h	242;"	d
MB_COPY_CHAR	macros.h	241;"	d
MB_CPTR2LEN	macros.h	239;"	d
MB_CPTR_ADV	macros.h	235;"	d
MB_FILLER_CHAR	vim.h	593;"	d
MB_ISLOWER	macros.h	90;"	d
MB_ISUPPER	macros.h	91;"	d
MB_MAXBYTES	vim.h	1776;"	d
MB_PTR_ADV	macros.h	233;"	d
MB_PTR_BACK	macros.h	237;"	d
MB_STRICMP	vim.h	1622;"	d
MB_STRNICMP	vim.h	1623;"	d
MB_TOLOWER	macros.h	92;"	d
MB_TOUPPER	macros.h	93;"	d
MCHAR	vim.h	1484;"	d
MCH_CURSOR_SHAPE	feature.h	1074;"	d
MCLOSE	regexp_bt.c	204;"	d	file:
MEMFILE_PAGE_SIZE	memfile.c	68;"	d	file:
MEM_SIZES	misc2.c	699;"	d	file:
MENUDEPTH	menu.c	19;"	d	file:
MENUHINTS	gui_w32.c	205;"	d	file:
MENU_ALL_MODES	structs.h	3583;"	d
MENU_CMDLINE_MODE	structs.h	3580;"	d
MENU_DEFAULT_HEIGHT	gui.h	135;"	d
MENU_INDEX_CMDLINE	structs.h	3569;"	d
MENU_INDEX_INSERT	structs.h	3568;"	d
MENU_INDEX_INVALID	structs.h	3563;"	d
MENU_INDEX_NORMAL	structs.h	3564;"	d
MENU_INDEX_OP_PENDING	structs.h	3567;"	d
MENU_INDEX_SELECT	structs.h	3566;"	d
MENU_INDEX_TERMINAL	structs.h	3570;"	d
MENU_INDEX_TIP	structs.h	3571;"	d
MENU_INDEX_VISUAL	structs.h	3565;"	d
MENU_INSERT_MODE	structs.h	3579;"	d
MENU_MODES	structs.h	3572;"	d
MENU_NORMAL_MODE	structs.h	3575;"	d
MENU_OP_PENDING_MODE	structs.h	3578;"	d
MENU_SELECT_MODE	structs.h	3577;"	d
MENU_TERMINAL_MODE	structs.h	3581;"	d
MENU_TIP_MODE	structs.h	3582;"	d
MENU_VISUAL_MODE	structs.h	3576;"	d
MESSAGE_FILE	message.c	14;"	d	file:
MESSAGE_QUEUE	macros.h	262;"	d
META	regexp.c	/^static char_u META[] = "%&()*+.123456789<=>?@ACDFHIKLMOPSUVWX[_acdfhiklmnopsuvwxz{|~";$/;"	v	file:
META_flags	regexp.c	/^static char_u META_flags[] = {$/;"	v	file:
ME_ARG_MISSING	main.c	76;"	d	file:
ME_EXTRA_CMD	main.c	80;"	d	file:
ME_GARBAGE	main.c	78;"	d	file:
ME_INVALID_ARG	main.c	82;"	d	file:
ME_TOO_MANY_ARGS	main.c	74;"	d	file:
ME_UNKNOWN_OPTION	main.c	72;"	d	file:
MFS_ALL	vim.h	1066;"	d
MFS_FLUSH	vim.h	1068;"	d
MFS_STOP	vim.h	1067;"	d
MFS_ZERO	vim.h	1069;"	d
MF_SEED_LEN	structs.h	646;"	d
MHT_GROWTH_FACTOR	memfile.c	1332;"	d	file:
MHT_INIT_SIZE	structs.h	472;"	d
MHT_LOG_LOAD_FACTOR	memfile.c	1331;"	d	file:
MIN	bufwrite.c	2085;"	d	file:
MIN	gui.h	25;"	d
MIN	gui_gtk.c	43;"	d	file:
MIN	message_test.c	26;"	d	file:
MIN	terminal.c	46;"	d	file:
MIN	vim.h	2404;"	d
MINIMAL_SIZE	getchar.c	41;"	d	file:
MIN_COLUMNS	vim.h	1493;"	d
MIN_LINES	vim.h	1494;"	d
MIN_SPACE	insexpand.c	3588;"	d	file:
MIN_STACK_WINNT	os_win32.c	6879;"	d	file:
MIN_SWAP_PAGE_SIZE	vim.h	1237;"	d
MKSESSION_NL	session.c	1065;"	d	file:
MK_XBUTTON1	gui_w32.c	229;"	d	file:
MK_XBUTTON2	gui_w32.c	230;"	d	file:
MLCS_MAXL	memline.c	5328;"	d	file:
MLCS_MINL	memline.c	5329;"	d	file:
MLINE	vim.h	1485;"	d
ML_CHNK_ADDLINE	structs.h	706;"	d
ML_CHNK_DELLINE	structs.h	707;"	d
ML_CHNK_UPDLINE	structs.h	708;"	d
ML_DELETE	memline.c	224;"	d	file:
ML_EMPTY	structs.h	724;"	d
ML_EXTRA	tag.c	2516;"	d	file:
ML_FIND	memline.c	226;"	d	file:
ML_FLUSH	memline.c	227;"	d	file:
ML_INSERT	memline.c	225;"	d	file:
ML_LINE_DIRTY	structs.h	725;"	d
ML_LOCKED_DIRTY	structs.h	726;"	d
ML_LOCKED_POS	structs.h	727;"	d
ML_SIMPLE	memline.c	228;"	d	file:
MNU_HIDDEN_CHAR	structs.h	3587;"	d
MODBY_LEN	version.c	2006;"	d	file:
MODE_ALL	vim.h	700;"	d
MODE_JS	structs.h	/^    MODE_JS,$/;"	e	enum:__anon229
MODE_JSON	structs.h	/^    MODE_JSON,$/;"	e	enum:__anon229
MODE_NL	structs.h	/^    MODE_NL = 0,$/;"	e	enum:__anon229
MODE_RAW	structs.h	/^    MODE_RAW,$/;"	e	enum:__anon229
MOD_KEYS_ENTRY_SIZE	misc2.c	2226;"	d	file:
MOD_MASK_2CLICK	keymap.h	486;"	d
MOD_MASK_3CLICK	keymap.h	487;"	d
MOD_MASK_4CLICK	keymap.h	488;"	d
MOD_MASK_ALT	keymap.h	484;"	d
MOD_MASK_CMD	keymap.h	490;"	d
MOD_MASK_CTRL	keymap.h	483;"	d
MOD_MASK_META	keymap.h	485;"	d
MOD_MASK_MULTI_CLICK	keymap.h	493;"	d
MOD_MASK_SHIFT	keymap.h	482;"	d
MOPEN	regexp_bt.c	201;"	d	file:
MOTIF_POPUP	gui_motif.c	62;"	d	file:
MOUSEWHEEL_LOW	vim.h	1857;"	d
MOUSE_4	vim.h	1842;"	d
MOUSE_5	vim.h	1843;"	d
MOUSE_6	vim.h	1848;"	d
MOUSE_7	vim.h	1849;"	d
MOUSE_A	option.h	228;"	d
MOUSE_ALL	option.h	229;"	d
MOUSE_ALT	vim.h	1835;"	d
MOUSE_CLICK_MASK	vim.h	1859;"	d
MOUSE_COLOFF	vim.h	1870;"	d
MOUSE_COMMAND	option.h	225;"	d
MOUSE_CTRL	vim.h	1836;"	d
MOUSE_DID_MOVE	vim.h	1889;"	d
MOUSE_DRAG	vim.h	1854;"	d
MOUSE_DRAG_XTERM	vim.h	1852;"	d
MOUSE_EVENT_RECORD	os_mswin.c	/^typedef int MOUSE_EVENT_RECORD;$/;"	t	file:
MOUSE_EVENT_RECORD	os_win32.c	/^typedef int MOUSE_EVENT_RECORD;$/;"	t	file:
MOUSE_FOCUS	vim.h	1887;"	d
MOUSE_FOLD_CLOSE	vim.h	1882;"	d
MOUSE_FOLD_OPEN	vim.h	1883;"	d
MOUSE_HELP	option.h	226;"	d
MOUSE_HIDE	gui_photon.c	43;"	d	file:
MOUSE_INSERT	option.h	224;"	d
MOUSE_LEFT	vim.h	1828;"	d
MOUSE_MAY_STOP_VIS	vim.h	1891;"	d
MOUSE_MAY_VIS	vim.h	1888;"	d
MOUSE_MIDDLE	vim.h	1829;"	d
MOUSE_MOVED	os_mswin.c	68;"	d	file:
MOUSE_MOVED	os_win32.c	78;"	d	file:
MOUSE_NONE	option.h	230;"	d
MOUSE_NONEF	option.h	231;"	d
MOUSE_NORMAL	option.h	222;"	d
MOUSE_RELEASE	vim.h	1831;"	d
MOUSE_RELEASED	vim.h	1892;"	d
MOUSE_RETURN	option.h	227;"	d
MOUSE_RIGHT	vim.h	1830;"	d
MOUSE_SETPOS	vim.h	1890;"	d
MOUSE_SHIFT	vim.h	1834;"	d
MOUSE_SHOW	gui_photon.c	44;"	d	file:
MOUSE_VISUAL	option.h	223;"	d
MOUSE_WINBAR	vim.h	1884;"	d
MOUSE_X1	vim.h	1845;"	d
MOUSE_X2	vim.h	1846;"	d
MP	os_amiga.c	965;"	d	file:
MSCR_DOWN	vim.h	2462;"	d
MSCR_LEFT	vim.h	2464;"	d
MSCR_RIGHT	vim.h	2465;"	d
MSCR_UP	vim.h	2463;"	d
MSG	gui_w32.c	/^typedef int MSG;$/;"	t	file:
MSG	gui_w32.c	267;"	d	file:
MSG_BUF_CLEN	vim.h	1519;"	d
MSG_BUF_LEN	vim.h	1518;"	d
MSG_HIST	vim.h	665;"	d
MSHAPE_HIDE	structs.h	3540;"	d
MSHAPE_NUMBERED	structs.h	3539;"	d
MSWIN	vim.h	17;"	d
MSWIN_FIND_REPLACE	feature.h	1027;"	d
MSWIN_FR_BUFSIZE	feature.h	1028;"	d
MT_COUNT	tag.c	55;"	d	file:
MT_GL_CUR	tag.c	49;"	d	file:
MT_GL_OTH	tag.c	50;"	d	file:
MT_IC_OFF	tag.c	52;"	d	file:
MT_MASK	tag.c	54;"	d	file:
MT_RE_OFF	tag.c	53;"	d	file:
MT_ST_CUR	tag.c	48;"	d	file:
MT_ST_OTH	tag.c	51;"	d	file:
MULTIBYTECODE	regexp_bt.c	221;"	d	file:
MULTISIGN_BYTE	vim.h	2296;"	d
MULTI_MULT	regexp.c	90;"	d	file:
MULTI_ONE	regexp.c	89;"	d	file:
MYINTPROCINT	os_mswin.c	/^typedef int (*MYINTPROCINT)(int);$/;"	t	file:
MYINTPROCSTR	os_mswin.c	/^typedef LPTSTR (*MYINTPROCSTR)(int);$/;"	t	file:
MYRESETSTKOFLW	os_win32.h	146;"	d
MYSTRPROCINT	os_mswin.c	/^typedef int (*MYSTRPROCINT)(LPTSTR);$/;"	t	file:
MYSTRPROCSTR	os_mswin.c	/^typedef LPTSTR (*MYSTRPROCSTR)(LPTSTR);$/;"	t	file:
MZSCHEME_GUI_THREADS	feature.h	1096;"	d
MZ_GC_ARRAY_VAR_IN_REG	if_mzsch.h	57;"	d
MZ_GC_CHECK	if_mzsch.h	71;"	d
MZ_GC_CHECK	if_mzsch.h	73;"	d
MZ_GC_DECL_REG	if_mzsch.h	51;"	d
MZ_GC_REG	if_mzsch.h	60;"	d
MZ_GC_UNREG	if_mzsch.h	63;"	d
MZ_GC_VAR_IN_REG	if_mzsch.h	54;"	d
M_delete	if_mzsch.c	/^static Scheme_Object *M_delete = NULL;$/;"	v	file:
M_execute	if_mzsch.c	/^static Scheme_Object *M_execute = NULL;$/;"	v	file:
M_global	if_mzsch.c	/^static Scheme_Object *M_global = NULL;$/;"	v	file:
M_read	if_mzsch.c	/^static Scheme_Object *M_read = NULL;$/;"	v	file:
M_write	if_mzsch.c	/^static Scheme_Object *M_write = NULL;$/;"	v	file:
MacOSHelpItems	gui.h	/^    int		MacOSHelpItems;	    \/\/ Nr of help-items supplied by MacOS$/;"	m	struct:Gui
MacOSHelpMenu	gui.h	/^    MenuHandle	MacOSHelpMenu;	    \/\/ Help menu provided by the MacOS$/;"	m	struct:Gui
Magic	regexp.c	28;"	d	file:
Messaging_WndProc	os_mswin.c	/^Messaging_WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f	file:
Meta	ascii.h	41;"	d
MetaChar	ascii.h	162;"	d
MetaCharTable	os_unix.c	/^char MetaCharTable[]=$/;"	v
ModificationInfo	gui_mac.c	/^struct ModificationInfo \/\/ for replying to class 'KAHL', event 'MOD ', keyDirectObject typeAEList$/;"	s	file:
ModificationInfo	gui_mac.c	/^typedef struct ModificationInfo ModificationInfo;$/;"	t	typeref:struct:ModificationInfo	file:
MoveRectTo	gui_mac.c	5225;"	d	file:
MoveThumb	gui_at_sb.c	/^MoveThumb($/;"	f	file:
MultiByteToWideChar_alloc	winclip.c	/^MultiByteToWideChar_alloc(UINT cp, DWORD flags,$/;"	f
MyTranslateMessage	gui_w32.c	358;"	d	file:
MyTranslateMessage	gui_w32.c	360;"	d	file:
MyWindowProc	gui_w32.c	392;"	d	file:
NALPHA	regexp_bt.c	193;"	d	file:
NAME	gui_xmdlg.c	/^    NAME,$/;"	e	enum:ListSpecifier	file:
NAMESPACE_CHAR	eval.c	28;"	d	file:
NAMLEN	os_unix.h	114;"	d
NAMLEN	os_unix.h	118;"	d
NAN	macros.h	297;"	d
NBDEBUG	vim.h	2382;"	d
NBDEBUG_H	nbdebug.h	12;"	d
NBDEBUG_TRACE	nbdebug.h	36;"	d
NBDLEVEL	nbdebug.h	34;"	d
NB_DEBUG_ALL	nbdebug.h	32;"	d
NB_DEF_ADDR	netbeans.c	126;"	d	file:
NB_DEF_HOST	netbeans.c	125;"	d	file:
NB_DEF_PASS	netbeans.c	127;"	d	file:
NB_PRINT	nbdebug.h	31;"	d
NB_TRACE	nbdebug.h	28;"	d
NB_TRACE_COLONCMD	nbdebug.h	30;"	d
NB_TRACE_VERBOSE	nbdebug.h	29;"	d
NCLOSE	regexp_bt.c	219;"	d	file:
NDEBUG	json_test.c	14;"	d	file:
NDEBUG	kword_test.c	14;"	d	file:
NDEBUG	memfile_test.c	15;"	d	file:
NDEBUG	message_test.c	14;"	d	file:
NDIGIT	regexp_bt.c	183;"	d	file:
NEAR	gui_w32.c	242;"	d	file:
NEED_GUI_UPDATE_SCREEN	gui.c	840;"	d	file:
NEED_VCOL2COL	mouse.c	122;"	d	file:
NETBEANS_OPEN	netbeans.c	64;"	d	file:
NEWL	regexp_bt.c	161;"	d	file:
NEWTEXTMETRIC	gui_w32.c	/^typedef int NEWTEXTMETRIC;$/;"	t	file:
NEWTEXTMETRICW	os_mswin.c	/^typedef int NEWTEXTMETRICW;$/;"	t	file:
NEW_DICTIONARY	if_py_both.h	1563;"	d
NEW_FUNCTION	if_py_both.h	2922;"	d
NEW_LIST	if_py_both.h	2247;"	d
NEW_TTY_SYSTEM	os_unix.c	343;"	d	file:
NEXT	regexp_bt.c	429;"	d	file:
NFA_ADD_NL	regexp_nfa.c	33;"	d	file:
NFA_ALPHA	regexp_nfa.c	/^    NFA_ALPHA,		\/\/	Match alpha char$/;"	e	enum:__anon102	file:
NFA_ANY	regexp_nfa.c	/^    NFA_ANY,		\/\/	Match any one character.$/;"	e	enum:__anon102	file:
NFA_ANY_COMPOSING	regexp_nfa.c	/^    NFA_ANY_COMPOSING,		    \/\/ \\%C: Any composing characters.$/;"	e	enum:__anon102	file:
NFA_BACKREF1	regexp_nfa.c	/^    NFA_BACKREF1,		    \/\/ \\1$/;"	e	enum:__anon102	file:
NFA_BACKREF2	regexp_nfa.c	/^    NFA_BACKREF2,		    \/\/ \\2$/;"	e	enum:__anon102	file:
NFA_BACKREF3	regexp_nfa.c	/^    NFA_BACKREF3,		    \/\/ \\3$/;"	e	enum:__anon102	file:
NFA_BACKREF4	regexp_nfa.c	/^    NFA_BACKREF4,		    \/\/ \\4$/;"	e	enum:__anon102	file:
NFA_BACKREF5	regexp_nfa.c	/^    NFA_BACKREF5,		    \/\/ \\5$/;"	e	enum:__anon102	file:
NFA_BACKREF6	regexp_nfa.c	/^    NFA_BACKREF6,		    \/\/ \\6$/;"	e	enum:__anon102	file:
NFA_BACKREF7	regexp_nfa.c	/^    NFA_BACKREF7,		    \/\/ \\7$/;"	e	enum:__anon102	file:
NFA_BACKREF8	regexp_nfa.c	/^    NFA_BACKREF8,		    \/\/ \\8$/;"	e	enum:__anon102	file:
NFA_BACKREF9	regexp_nfa.c	/^    NFA_BACKREF9,		    \/\/ \\9$/;"	e	enum:__anon102	file:
NFA_BOF	regexp_nfa.c	/^    NFA_BOF,			    \/\/ \\%^  Begin file$/;"	e	enum:__anon102	file:
NFA_BOL	regexp_nfa.c	/^    NFA_BOL,			    \/\/ ^    Begin line$/;"	e	enum:__anon102	file:
NFA_BOW	regexp_nfa.c	/^    NFA_BOW,			    \/\/ \\<   Begin word$/;"	e	enum:__anon102	file:
NFA_CLASS_ALNUM	regexp_nfa.c	/^    NFA_CLASS_ALNUM,$/;"	e	enum:__anon102	file:
NFA_CLASS_ALPHA	regexp_nfa.c	/^    NFA_CLASS_ALPHA,$/;"	e	enum:__anon102	file:
NFA_CLASS_BACKSPACE	regexp_nfa.c	/^    NFA_CLASS_BACKSPACE,$/;"	e	enum:__anon102	file:
NFA_CLASS_BLANK	regexp_nfa.c	/^    NFA_CLASS_BLANK,$/;"	e	enum:__anon102	file:
NFA_CLASS_CNTRL	regexp_nfa.c	/^    NFA_CLASS_CNTRL,$/;"	e	enum:__anon102	file:
NFA_CLASS_DIGIT	regexp_nfa.c	/^    NFA_CLASS_DIGIT,$/;"	e	enum:__anon102	file:
NFA_CLASS_ESCAPE	regexp_nfa.c	/^    NFA_CLASS_ESCAPE,$/;"	e	enum:__anon102	file:
NFA_CLASS_FNAME	regexp_nfa.c	/^    NFA_CLASS_FNAME$/;"	e	enum:__anon102	file:
NFA_CLASS_GRAPH	regexp_nfa.c	/^    NFA_CLASS_GRAPH,$/;"	e	enum:__anon102	file:
NFA_CLASS_IDENT	regexp_nfa.c	/^    NFA_CLASS_IDENT,$/;"	e	enum:__anon102	file:
NFA_CLASS_KEYWORD	regexp_nfa.c	/^    NFA_CLASS_KEYWORD,$/;"	e	enum:__anon102	file:
NFA_CLASS_LOWER	regexp_nfa.c	/^    NFA_CLASS_LOWER,$/;"	e	enum:__anon102	file:
NFA_CLASS_PRINT	regexp_nfa.c	/^    NFA_CLASS_PRINT,$/;"	e	enum:__anon102	file:
NFA_CLASS_PUNCT	regexp_nfa.c	/^    NFA_CLASS_PUNCT,$/;"	e	enum:__anon102	file:
NFA_CLASS_RETURN	regexp_nfa.c	/^    NFA_CLASS_RETURN,$/;"	e	enum:__anon102	file:
NFA_CLASS_SPACE	regexp_nfa.c	/^    NFA_CLASS_SPACE,$/;"	e	enum:__anon102	file:
NFA_CLASS_TAB	regexp_nfa.c	/^    NFA_CLASS_TAB,$/;"	e	enum:__anon102	file:
NFA_CLASS_UPPER	regexp_nfa.c	/^    NFA_CLASS_UPPER,$/;"	e	enum:__anon102	file:
NFA_CLASS_XDIGIT	regexp_nfa.c	/^    NFA_CLASS_XDIGIT,$/;"	e	enum:__anon102	file:
NFA_COL	regexp_nfa.c	/^    NFA_COL,		\/\/	Match cursor column$/;"	e	enum:__anon102	file:
NFA_COL_GT	regexp_nfa.c	/^    NFA_COL_GT,		\/\/	Match > cursor column$/;"	e	enum:__anon102	file:
NFA_COL_LT	regexp_nfa.c	/^    NFA_COL_LT,		\/\/	Match < cursor column$/;"	e	enum:__anon102	file:
NFA_COMPOSING	regexp_nfa.c	/^    NFA_COMPOSING,		    \/\/ Next nodes in NFA are part of the$/;"	e	enum:__anon102	file:
NFA_CONCAT	regexp_nfa.c	/^    NFA_CONCAT,			    \/\/ concatenate two previous items (postfix$/;"	e	enum:__anon102	file:
NFA_CURSOR	regexp_nfa.c	/^    NFA_CURSOR,		\/\/	Match cursor pos$/;"	e	enum:__anon102	file:
NFA_DIGIT	regexp_nfa.c	/^    NFA_DIGIT,		\/\/	Match digit char$/;"	e	enum:__anon102	file:
NFA_EMPTY	regexp_nfa.c	/^    NFA_EMPTY,			    \/\/ matches 0-length$/;"	e	enum:__anon102	file:
NFA_END_COLL	regexp_nfa.c	/^    NFA_END_COLL,		    \/\/ [abc] end$/;"	e	enum:__anon102	file:
NFA_END_COMPOSING	regexp_nfa.c	/^    NFA_END_COMPOSING,		    \/\/ End of a composing char in the NFA$/;"	e	enum:__anon102	file:
NFA_END_INVISIBLE	regexp_nfa.c	/^    NFA_END_INVISIBLE,$/;"	e	enum:__anon102	file:
NFA_END_INVISIBLE_NEG	regexp_nfa.c	/^    NFA_END_INVISIBLE_NEG,$/;"	e	enum:__anon102	file:
NFA_END_NEG_COLL	regexp_nfa.c	/^    NFA_END_NEG_COLL,		    \/\/ [^abc] end (postfix only)$/;"	e	enum:__anon102	file:
NFA_END_PATTERN	regexp_nfa.c	/^    NFA_END_PATTERN,$/;"	e	enum:__anon102	file:
NFA_ENGINE	regexp.h	40;"	d
NFA_EOF	regexp_nfa.c	/^    NFA_EOF,			    \/\/ \\%$  End file$/;"	e	enum:__anon102	file:
NFA_EOL	regexp_nfa.c	/^    NFA_EOL,			    \/\/ $    End line$/;"	e	enum:__anon102	file:
NFA_EOW	regexp_nfa.c	/^    NFA_EOW,			    \/\/ \\>   End word$/;"	e	enum:__anon102	file:
NFA_FIRST_NL	regexp_nfa.c	/^    NFA_FIRST_NL = NFA_ANY + NFA_ADD_NL,$/;"	e	enum:__anon102	file:
NFA_FNAME	regexp_nfa.c	/^    NFA_FNAME,		\/\/	Match file name char$/;"	e	enum:__anon102	file:
NFA_HEAD	regexp_nfa.c	/^    NFA_HEAD,		\/\/	Match head char$/;"	e	enum:__anon102	file:
NFA_HEX	regexp_nfa.c	/^    NFA_HEX,		\/\/	Match hex char$/;"	e	enum:__anon102	file:
NFA_IDENT	regexp_nfa.c	/^    NFA_IDENT,		\/\/	Match identifier char$/;"	e	enum:__anon102	file:
NFA_KWORD	regexp_nfa.c	/^    NFA_KWORD,		\/\/	Match keyword char$/;"	e	enum:__anon102	file:
NFA_LAST_NL	regexp_nfa.c	/^    NFA_LAST_NL = NFA_NUPPER_IC + NFA_ADD_NL,$/;"	e	enum:__anon102	file:
NFA_LNUM	regexp_nfa.c	/^    NFA_LNUM,		\/\/	Match line number$/;"	e	enum:__anon102	file:
NFA_LNUM_GT	regexp_nfa.c	/^    NFA_LNUM_GT,	\/\/	Match > line number$/;"	e	enum:__anon102	file:
NFA_LNUM_LT	regexp_nfa.c	/^    NFA_LNUM_LT,	\/\/	Match < line number$/;"	e	enum:__anon102	file:
NFA_LOWER	regexp_nfa.c	/^    NFA_LOWER,		\/\/	Match lowercase char$/;"	e	enum:__anon102	file:
NFA_LOWER_IC	regexp_nfa.c	/^    NFA_LOWER_IC,	\/\/	Match [a-z]$/;"	e	enum:__anon102	file:
NFA_MARK	regexp_nfa.c	/^    NFA_MARK,		\/\/	Match mark$/;"	e	enum:__anon102	file:
NFA_MARK_GT	regexp_nfa.c	/^    NFA_MARK_GT,	\/\/	Match > mark$/;"	e	enum:__anon102	file:
NFA_MARK_LT	regexp_nfa.c	/^    NFA_MARK_LT,	\/\/	Match < mark$/;"	e	enum:__anon102	file:
NFA_MATCH	regexp_nfa.c	/^    NFA_MATCH,$/;"	e	enum:__anon102	file:
NFA_MAX_BRACES	regexp.h	28;"	d
NFA_MAX_STATES	regexp.h	33;"	d
NFA_MCLOSE	regexp_nfa.c	/^    NFA_MCLOSE,$/;"	e	enum:__anon102	file:
NFA_MCLOSE1	regexp_nfa.c	/^    NFA_MCLOSE1,$/;"	e	enum:__anon102	file:
NFA_MCLOSE2	regexp_nfa.c	/^    NFA_MCLOSE2,$/;"	e	enum:__anon102	file:
NFA_MCLOSE3	regexp_nfa.c	/^    NFA_MCLOSE3,$/;"	e	enum:__anon102	file:
NFA_MCLOSE4	regexp_nfa.c	/^    NFA_MCLOSE4,$/;"	e	enum:__anon102	file:
NFA_MCLOSE5	regexp_nfa.c	/^    NFA_MCLOSE5,$/;"	e	enum:__anon102	file:
NFA_MCLOSE6	regexp_nfa.c	/^    NFA_MCLOSE6,$/;"	e	enum:__anon102	file:
NFA_MCLOSE7	regexp_nfa.c	/^    NFA_MCLOSE7,$/;"	e	enum:__anon102	file:
NFA_MCLOSE8	regexp_nfa.c	/^    NFA_MCLOSE8,$/;"	e	enum:__anon102	file:
NFA_MCLOSE9	regexp_nfa.c	/^    NFA_MCLOSE9,$/;"	e	enum:__anon102	file:
NFA_MOPEN	regexp_nfa.c	/^    NFA_MOPEN,$/;"	e	enum:__anon102	file:
NFA_MOPEN1	regexp_nfa.c	/^    NFA_MOPEN1,$/;"	e	enum:__anon102	file:
NFA_MOPEN2	regexp_nfa.c	/^    NFA_MOPEN2,$/;"	e	enum:__anon102	file:
NFA_MOPEN3	regexp_nfa.c	/^    NFA_MOPEN3,$/;"	e	enum:__anon102	file:
NFA_MOPEN4	regexp_nfa.c	/^    NFA_MOPEN4,$/;"	e	enum:__anon102	file:
NFA_MOPEN5	regexp_nfa.c	/^    NFA_MOPEN5,$/;"	e	enum:__anon102	file:
NFA_MOPEN6	regexp_nfa.c	/^    NFA_MOPEN6,$/;"	e	enum:__anon102	file:
NFA_MOPEN7	regexp_nfa.c	/^    NFA_MOPEN7,$/;"	e	enum:__anon102	file:
NFA_MOPEN8	regexp_nfa.c	/^    NFA_MOPEN8,$/;"	e	enum:__anon102	file:
NFA_MOPEN9	regexp_nfa.c	/^    NFA_MOPEN9,$/;"	e	enum:__anon102	file:
NFA_NALPHA	regexp_nfa.c	/^    NFA_NALPHA,		\/\/	Match non-alpha char$/;"	e	enum:__anon102	file:
NFA_NCLOSE	regexp_nfa.c	/^    NFA_NCLOSE,			    \/\/ End of subexpr. marked with \\%( ... \\)$/;"	e	enum:__anon102	file:
NFA_NDIGIT	regexp_nfa.c	/^    NFA_NDIGIT,		\/\/	Match non-digit char$/;"	e	enum:__anon102	file:
NFA_NEWL	regexp_nfa.c	/^    NFA_NEWL,$/;"	e	enum:__anon102	file:
NFA_NHEAD	regexp_nfa.c	/^    NFA_NHEAD,		\/\/	Match non-head char$/;"	e	enum:__anon102	file:
NFA_NHEX	regexp_nfa.c	/^    NFA_NHEX,		\/\/	Match non-hex char$/;"	e	enum:__anon102	file:
NFA_NLOWER	regexp_nfa.c	/^    NFA_NLOWER,		\/\/	Match non-lowercase char$/;"	e	enum:__anon102	file:
NFA_NLOWER_IC	regexp_nfa.c	/^    NFA_NLOWER_IC,	\/\/	Match [^a-z]$/;"	e	enum:__anon102	file:
NFA_NOCTAL	regexp_nfa.c	/^    NFA_NOCTAL,		\/\/	Match non-octal char$/;"	e	enum:__anon102	file:
NFA_NOPEN	regexp_nfa.c	/^    NFA_NOPEN,			    \/\/ Start of subexpression marked with \\%($/;"	e	enum:__anon102	file:
NFA_NUPPER	regexp_nfa.c	/^    NFA_NUPPER,		\/\/	Match non-uppercase char$/;"	e	enum:__anon102	file:
NFA_NUPPER_IC	regexp_nfa.c	/^    NFA_NUPPER_IC,	\/\/	Match [^A-Z]$/;"	e	enum:__anon102	file:
NFA_NWHITE	regexp_nfa.c	/^    NFA_NWHITE,		\/\/	Match non-whitespace char$/;"	e	enum:__anon102	file:
NFA_NWORD	regexp_nfa.c	/^    NFA_NWORD,		\/\/	Match non-word char$/;"	e	enum:__anon102	file:
NFA_OCTAL	regexp_nfa.c	/^    NFA_OCTAL,		\/\/	Match octal char$/;"	e	enum:__anon102	file:
NFA_OPT_CHARS	regexp_nfa.c	/^    NFA_OPT_CHARS,		    \/\/ \\%[abc]$/;"	e	enum:__anon102	file:
NFA_OR	regexp_nfa.c	/^    NFA_OR,			    \/\/ \\| (postfix only)$/;"	e	enum:__anon102	file:
NFA_PIM_MATCH	regexp_nfa.c	3822;"	d	file:
NFA_PIM_NOMATCH	regexp_nfa.c	3823;"	d	file:
NFA_PIM_TODO	regexp_nfa.c	3821;"	d	file:
NFA_PIM_UNUSED	regexp_nfa.c	3820;"	d	file:
NFA_PREV_ATOM_JUST_BEFORE	regexp_nfa.c	/^    NFA_PREV_ATOM_JUST_BEFORE,	    \/\/ Used for \\@<=$/;"	e	enum:__anon102	file:
NFA_PREV_ATOM_JUST_BEFORE_NEG	regexp_nfa.c	/^    NFA_PREV_ATOM_JUST_BEFORE_NEG,  \/\/ Used for \\@<!$/;"	e	enum:__anon102	file:
NFA_PREV_ATOM_LIKE_PATTERN	regexp_nfa.c	/^    NFA_PREV_ATOM_LIKE_PATTERN,	    \/\/ Used for \\@>$/;"	e	enum:__anon102	file:
NFA_PREV_ATOM_NO_WIDTH	regexp_nfa.c	/^    NFA_PREV_ATOM_NO_WIDTH,	    \/\/ Used for \\@=$/;"	e	enum:__anon102	file:
NFA_PREV_ATOM_NO_WIDTH_NEG	regexp_nfa.c	/^    NFA_PREV_ATOM_NO_WIDTH_NEG,	    \/\/ Used for \\@!$/;"	e	enum:__anon102	file:
NFA_PRINT	regexp_nfa.c	/^    NFA_PRINT,		\/\/	Match printable char$/;"	e	enum:__anon102	file:
NFA_QUEST	regexp_nfa.c	/^    NFA_QUEST,			    \/\/ greedy \\? (postfix only)$/;"	e	enum:__anon102	file:
NFA_QUEST_NONGREEDY	regexp_nfa.c	/^    NFA_QUEST_NONGREEDY,	    \/\/ non-greedy \\? (postfix only)$/;"	e	enum:__anon102	file:
NFA_RANGE	regexp_nfa.c	/^    NFA_RANGE,			    \/\/ range of the two previous items$/;"	e	enum:__anon102	file:
NFA_RANGE_MAX	regexp_nfa.c	/^    NFA_RANGE_MAX,		    \/\/ high end of a range$/;"	e	enum:__anon102	file:
NFA_RANGE_MIN	regexp_nfa.c	/^    NFA_RANGE_MIN,		    \/\/ low end of a range$/;"	e	enum:__anon102	file:
NFA_REGEXP_DEBUG_LOG	regexp_nfa.c	29;"	d	file:
NFA_REGEXP_DUMP_LOG	regexp_nfa.c	27;"	d	file:
NFA_REGEXP_ERROR_LOG	regexp_nfa.c	25;"	d	file:
NFA_REGEXP_RUN_LOG	regexp_nfa.c	28;"	d	file:
NFA_SFNAME	regexp_nfa.c	/^    NFA_SFNAME,		\/\/	Match file name char but no digit$/;"	e	enum:__anon102	file:
NFA_SIDENT	regexp_nfa.c	/^    NFA_SIDENT,		\/\/	Match identifier char but no digit$/;"	e	enum:__anon102	file:
NFA_SKIP	regexp_nfa.c	/^    NFA_SKIP,			    \/\/ Skip characters$/;"	e	enum:__anon102	file:
NFA_SKWORD	regexp_nfa.c	/^    NFA_SKWORD,		\/\/	Match word char but no digit$/;"	e	enum:__anon102	file:
NFA_SPLIT	regexp_nfa.c	/^    NFA_SPLIT = -1024,$/;"	e	enum:__anon102	file:
NFA_SPRINT	regexp_nfa.c	/^    NFA_SPRINT,		\/\/	Match printable char but no digit$/;"	e	enum:__anon102	file:
NFA_STAR	regexp_nfa.c	/^    NFA_STAR,			    \/\/ greedy * (postfix only)$/;"	e	enum:__anon102	file:
NFA_START_COLL	regexp_nfa.c	/^    NFA_START_COLL,		    \/\/ [abc] start$/;"	e	enum:__anon102	file:
NFA_START_INVISIBLE	regexp_nfa.c	/^    NFA_START_INVISIBLE,$/;"	e	enum:__anon102	file:
NFA_START_INVISIBLE_BEFORE	regexp_nfa.c	/^    NFA_START_INVISIBLE_BEFORE,$/;"	e	enum:__anon102	file:
NFA_START_INVISIBLE_BEFORE_FIRST	regexp_nfa.c	/^    NFA_START_INVISIBLE_BEFORE_FIRST,$/;"	e	enum:__anon102	file:
NFA_START_INVISIBLE_BEFORE_NEG	regexp_nfa.c	/^    NFA_START_INVISIBLE_BEFORE_NEG,$/;"	e	enum:__anon102	file:
NFA_START_INVISIBLE_BEFORE_NEG_FIRST	regexp_nfa.c	/^    NFA_START_INVISIBLE_BEFORE_NEG_FIRST,$/;"	e	enum:__anon102	file:
NFA_START_INVISIBLE_FIRST	regexp_nfa.c	/^    NFA_START_INVISIBLE_FIRST,$/;"	e	enum:__anon102	file:
NFA_START_INVISIBLE_NEG	regexp_nfa.c	/^    NFA_START_INVISIBLE_NEG,$/;"	e	enum:__anon102	file:
NFA_START_INVISIBLE_NEG_FIRST	regexp_nfa.c	/^    NFA_START_INVISIBLE_NEG_FIRST,$/;"	e	enum:__anon102	file:
NFA_START_NEG_COLL	regexp_nfa.c	/^    NFA_START_NEG_COLL,		    \/\/ [^abc] start$/;"	e	enum:__anon102	file:
NFA_START_PATTERN	regexp_nfa.c	/^    NFA_START_PATTERN,$/;"	e	enum:__anon102	file:
NFA_STAR_NONGREEDY	regexp_nfa.c	/^    NFA_STAR_NONGREEDY,		    \/\/ non-greedy * (postfix only)$/;"	e	enum:__anon102	file:
NFA_TOO_EXPENSIVE	regexp.h	34;"	d
NFA_UPPER	regexp_nfa.c	/^    NFA_UPPER,		\/\/	Match uppercase char$/;"	e	enum:__anon102	file:
NFA_UPPER_IC	regexp_nfa.c	/^    NFA_UPPER_IC,	\/\/	Match [A-Z]$/;"	e	enum:__anon102	file:
NFA_VCOL	regexp_nfa.c	/^    NFA_VCOL,		\/\/	Match cursor virtual column$/;"	e	enum:__anon102	file:
NFA_VCOL_GT	regexp_nfa.c	/^    NFA_VCOL_GT,	\/\/	Match > cursor virtual column$/;"	e	enum:__anon102	file:
NFA_VCOL_LT	regexp_nfa.c	/^    NFA_VCOL_LT,	\/\/	Match < cursor virtual column$/;"	e	enum:__anon102	file:
NFA_VISUAL	regexp_nfa.c	/^    NFA_VISUAL,		\/\/	Match Visual area$/;"	e	enum:__anon102	file:
NFA_WHITE	regexp_nfa.c	/^    NFA_WHITE,		\/\/	Match whitespace char$/;"	e	enum:__anon102	file:
NFA_WORD	regexp_nfa.c	/^    NFA_WORD,		\/\/	Match word char$/;"	e	enum:__anon102	file:
NFA_ZCLOSE	regexp_nfa.c	/^    NFA_ZCLOSE,$/;"	e	enum:__anon102	file:
NFA_ZCLOSE1	regexp_nfa.c	/^    NFA_ZCLOSE1,$/;"	e	enum:__anon102	file:
NFA_ZCLOSE2	regexp_nfa.c	/^    NFA_ZCLOSE2,$/;"	e	enum:__anon102	file:
NFA_ZCLOSE3	regexp_nfa.c	/^    NFA_ZCLOSE3,$/;"	e	enum:__anon102	file:
NFA_ZCLOSE4	regexp_nfa.c	/^    NFA_ZCLOSE4,$/;"	e	enum:__anon102	file:
NFA_ZCLOSE5	regexp_nfa.c	/^    NFA_ZCLOSE5,$/;"	e	enum:__anon102	file:
NFA_ZCLOSE6	regexp_nfa.c	/^    NFA_ZCLOSE6,$/;"	e	enum:__anon102	file:
NFA_ZCLOSE7	regexp_nfa.c	/^    NFA_ZCLOSE7,$/;"	e	enum:__anon102	file:
NFA_ZCLOSE8	regexp_nfa.c	/^    NFA_ZCLOSE8,$/;"	e	enum:__anon102	file:
NFA_ZCLOSE9	regexp_nfa.c	/^    NFA_ZCLOSE9,$/;"	e	enum:__anon102	file:
NFA_ZEND	regexp_nfa.c	/^    NFA_ZEND,			    \/\/ Used for \\ze$/;"	e	enum:__anon102	file:
NFA_ZOPEN	regexp_nfa.c	/^    NFA_ZOPEN,$/;"	e	enum:__anon102	file:
NFA_ZOPEN1	regexp_nfa.c	/^    NFA_ZOPEN1,$/;"	e	enum:__anon102	file:
NFA_ZOPEN2	regexp_nfa.c	/^    NFA_ZOPEN2,$/;"	e	enum:__anon102	file:
NFA_ZOPEN3	regexp_nfa.c	/^    NFA_ZOPEN3,$/;"	e	enum:__anon102	file:
NFA_ZOPEN4	regexp_nfa.c	/^    NFA_ZOPEN4,$/;"	e	enum:__anon102	file:
NFA_ZOPEN5	regexp_nfa.c	/^    NFA_ZOPEN5,$/;"	e	enum:__anon102	file:
NFA_ZOPEN6	regexp_nfa.c	/^    NFA_ZOPEN6,$/;"	e	enum:__anon102	file:
NFA_ZOPEN7	regexp_nfa.c	/^    NFA_ZOPEN7,$/;"	e	enum:__anon102	file:
NFA_ZOPEN8	regexp_nfa.c	/^    NFA_ZOPEN8,$/;"	e	enum:__anon102	file:
NFA_ZOPEN9	regexp_nfa.c	/^    NFA_ZOPEN9,$/;"	e	enum:__anon102	file:
NFA_ZREF1	regexp_nfa.c	/^    NFA_ZREF1,			    \/\/ \\z1$/;"	e	enum:__anon102	file:
NFA_ZREF2	regexp_nfa.c	/^    NFA_ZREF2,			    \/\/ \\z2$/;"	e	enum:__anon102	file:
NFA_ZREF3	regexp_nfa.c	/^    NFA_ZREF3,			    \/\/ \\z3$/;"	e	enum:__anon102	file:
NFA_ZREF4	regexp_nfa.c	/^    NFA_ZREF4,			    \/\/ \\z4$/;"	e	enum:__anon102	file:
NFA_ZREF5	regexp_nfa.c	/^    NFA_ZREF5,			    \/\/ \\z5$/;"	e	enum:__anon102	file:
NFA_ZREF6	regexp_nfa.c	/^    NFA_ZREF6,			    \/\/ \\z6$/;"	e	enum:__anon102	file:
NFA_ZREF7	regexp_nfa.c	/^    NFA_ZREF7,			    \/\/ \\z7$/;"	e	enum:__anon102	file:
NFA_ZREF8	regexp_nfa.c	/^    NFA_ZREF8,			    \/\/ \\z8$/;"	e	enum:__anon102	file:
NFA_ZREF9	regexp_nfa.c	/^    NFA_ZREF9,			    \/\/ \\z9$/;"	e	enum:__anon102	file:
NFA_ZSTART	regexp_nfa.c	/^    NFA_ZSTART,			    \/\/ Used for \\zs$/;"	e	enum:__anon102	file:
NGETTEXT	vim.h	537;"	d
NGETTEXT	vim.h	549;"	d
NGETTEXT	vim.h	558;"	d
NHEAD	regexp_bt.c	191;"	d	file:
NHEX	regexp_bt.c	185;"	d	file:
NIL	if_perlsfio.c	25;"	d	file:
NL	ascii.h	107;"	d
NL	ascii.h	28;"	d
NLOWER	regexp_bt.c	195;"	d	file:
NL_STR	ascii.h	108;"	d
NL_STR	ascii.h	29;"	d
NMARKS	structs.h	130;"	d
NMTTDISPINFOA	gui_w32.c	/^} NMTTDISPINFOA, *LPNMTTDISPINFOA;$/;"	t	typeref:struct:tagNMTTDISPINFOA	file:
NMTTDISPINFOW	gui_w32.c	/^} NMTTDISPINFOW, *LPNMTTDISPINFOW;$/;"	t	typeref:struct:tagNMTTDISPINFOW	file:
NMTTDISPINFOW_NEW	gui_w32.c	/^} NMTTDISPINFOW_NEW;$/;"	t	typeref:struct:tagNMTTDISPINFOW_NEW	file:
NMTTDISPINFO_NEW	gui_w32.c	/^} NMTTDISPINFO_NEW;$/;"	t	typeref:struct:tagNMTTDISPINFO_NEW	file:
NOBEHIND	regexp_bt.c	153;"	d	file:
NOCTAL	regexp_bt.c	187;"	d	file:
NODE_NORMAL	vim.h	972;"	d
NODE_OTHER	vim.h	975;"	d
NODE_WRITABLE	vim.h	973;"	d
NOFONT	gui.h	232;"	d
NOFONT	gui.h	238;"	d
NOFONT	gui.h	244;"	d
NOFONT	gui.h	249;"	d
NOFONTSET	gui.h	233;"	d
NOFONTSET	gui.h	239;"	d
NOFONTSET	gui.h	245;"	d
NOFONTSET	gui.h	250;"	d
NOMATCH	regexp_bt.c	151;"	d	file:
NONE	gui_xmdlg.c	/^    NONE$/;"	e	enum:ListSpecifier	file:
NONE_IDX	syntax.c	84;"	d	file:
NOPEN	regexp_bt.c	217;"	d	file:
NORMAL	vim.h	2394;"	d
NORMAL	vim.h	675;"	d
NORMAL_BUSY	vim.h	690;"	d
NOTAGFILE	tag.c	60;"	d	file:
NOTDONE	vim.h	717;"	d
NOTHING	regexp_bt.c	145;"	d	file:
NOT_EQUAL	gui_xmebw.c	1075;"	d	file:
NOT_MULTI	regexp.c	88;"	d	file:
NOT_VALID	vim.h	586;"	d
NOWIN	window.c	66;"	d	file:
NO_BUFFERS	vim.h	1222;"	d
NO_CONSOLE	os_win32.h	74;"	d
NO_CONSOLE_INPUT	gui.h	172;"	d
NO_LOCAL_UNDOLEVEL	option.h	1295;"	d
NO_SCOPE	vim9compile.c	/^    NO_SCOPE,$/;"	e	enum:__anon129	file:
NO_SCREEN	vim.h	1221;"	d
NO_VIM_MAIN	json_test.c	18;"	d	file:
NO_VIM_MAIN	kword_test.c	18;"	d	file:
NO_VIM_MAIN	memfile_test.c	19;"	d	file:
NO_VIM_MAIN	message_test.c	18;"	d	file:
NO_X11_INCLUDES	os_mac_conv.c	16;"	d	file:
NPCOMPOSITIONFORM	gui_w32.c	/^} COMPOSITIONFORM, *PCOMPOSITIONFORM, NEAR *NPCOMPOSITIONFORM, FAR *LPCOMPOSITIONFORM;$/;"	t	typeref:struct:tagCOMPOSITIONFORM	file:
NR_ELEMS	gui_mac.c	67;"	d	file:
NR_TRANS	structs.h	/^typedef struct nr_trans NR_TRANS;$/;"	t	typeref:struct:nr_trans
NSCRIPT	globals.h	1136;"	d
NSUBEXP	regexp.h	22;"	d
NT	if_ruby.c	24;"	d	file:
NUL	ascii.h	103;"	d
NUL	ascii.h	24;"	d
NUL	dosinst.h	53;"	d
NUMBER_INT	if_py_both.h	163;"	d
NUMBER_LONG	if_py_both.h	162;"	d
NUMBER_NATURAL	if_py_both.h	164;"	d
NUMBER_UNSIGNED	if_py_both.h	165;"	d
NUMBUFLEN	vim.h	316;"	d
NUM_ELEMENTS	hardcopy.c	975;"	d	file:
NUM_EVENTS	vim.h	/^    NUM_EVENTS			\/\/ MUST be the last one$/;"	e	enum:auto_event
NUM_MOUSE_CLICKS	vim.h	1861;"	d
NUM_REGISTERS	structs.h	3980;"	d
NUM_REGISTERS	structs.h	3982;"	d
NUM_REGISTERS	structs.h	3985;"	d
NUPPER	regexp_bt.c	197;"	d	file:
NV_CMDS_SIZE	normal.c	381;"	d	file:
NV_KEEPREG	normal.c	150;"	d	file:
NV_LANG	normal.c	144;"	d	file:
NV_NCH	normal.c	141;"	d	file:
NV_NCH_ALW	normal.c	143;"	d	file:
NV_NCH_NOP	normal.c	142;"	d	file:
NV_NCW	normal.c	151;"	d	file:
NV_RL	normal.c	149;"	d	file:
NV_SS	normal.c	146;"	d	file:
NV_SSS	normal.c	147;"	d	file:
NV_STS	normal.c	148;"	d	file:
NWHITE	regexp_bt.c	181;"	d	file:
NWORD	regexp_bt.c	189;"	d	file:
N_	gui_gtk.c	55;"	d	file:
N_	gui_gtk_x11.c	39;"	d	file:
N_	vim.h	538;"	d
N_	vim.h	551;"	d
N_	vim.h	553;"	d
N_	vim.h	559;"	d
N_DND_TARGETS	gui_gtk_x11.c	152;"	d	file:
N_SELECTION_TARGETS	gui_gtk_x11.c	137;"	d	file:
N_virguilla	regexp_nfa.c	715;"	d	file:
NameBuff	globals.h	/^EXTERN char_u	*NameBuff;		\/\/ file names are expanded in this$/;"	v
NoButton	gui_at_sb.c	214;"	d	file:
NotifyScroll	gui_at_sb.c	/^NotifyScroll($/;"	f	file:
NotifyThumb	gui_at_sb.c	/^NotifyThumb($/;"	f	file:
NtInitialize	if_ruby.c	339;"	d	file:
NumRegions	os_win32.c	/^    int				NumRegions;$/;"	m	struct:ConsoleBufferStruct	file:
NumberToLong	if_py_both.h	/^NumberToLong(PyObject *obj, long *result, int flags)$/;"	f
OCTAL	regexp_bt.c	186;"	d	file:
OK	dosinst.h	56;"	d
OK	os_mac.h	56;"	d
OK	vim.h	714;"	d
OLDXAW	vim.h	82;"	d
ONE_CLIPBOARD	globals.h	639;"	d
ONE_LINE_DATA	gui_at_sb.h	141;"	d
ONE_PAGE_DATA	gui_at_sb.h	142;"	d
ONE_WINDOW	globals.h	663;"	d
OP	regexp_bt.c	428;"	d	file:
OPENLINE_COM_LIST	vim.h	1101;"	d
OPENLINE_DELSPACES	vim.h	1097;"	d
OPENLINE_DO_COM	vim.h	1098;"	d
OPENLINE_KEEPTRAIL	vim.h	1099;"	d
OPENLINE_MARKFIX	vim.h	1100;"	d
OPEN_CHR_FILES	vim.h	2567;"	d
OPEN_NULL_FAILED	os_unix.c	4508;"	d	file:
OPEN_OH_ARGTYPE	if_cscope.c	797;"	d	file:
OPEN_OH_ARGTYPE	os_mswin.c	453;"	d	file:
OPEN_OH_ARGTYPE	os_mswin.c	455;"	d	file:
OPERAND	regexp_bt.c	430;"	d	file:
OPERAND_CMP	regexp_bt.c	437;"	d	file:
OPERAND_MAX	regexp_bt.c	435;"	d	file:
OPERAND_MIN	regexp_bt.c	432;"	d	file:
OPF_CHANGE	ops.c	25;"	d	file:
OPF_LINES	ops.c	24;"	d	file:
OPTARG_HAS	terminal.c	735;"	d	file:
OPTARG_HAS	terminal.c	822;"	d	file:
OPTION_COUNT	optiondefs.h	3012;"	d
OPT_BOTH	optiondefs.h	25;"	d
OPT_BUF	optiondefs.h	24;"	d
OPT_FREE	vim.h	1208;"	d
OPT_GLOBAL	vim.h	1209;"	d
OPT_LOCAL	vim.h	1210;"	d
OPT_MBFONT_ASCII	hardcopy.c	107;"	d	file:
OPT_MBFONT_BOLD	hardcopy.c	109;"	d	file:
OPT_MBFONT_BOLDOBLIQUE	hardcopy.c	111;"	d	file:
OPT_MBFONT_NUM_OPTIONS	hardcopy.c	112;"	d	file:
OPT_MBFONT_OBLIQUE	hardcopy.c	110;"	d	file:
OPT_MBFONT_REGULAR	hardcopy.c	108;"	d	file:
OPT_MBFONT_USECOURIER	hardcopy.c	106;"	d	file:
OPT_MODELINE	vim.h	1211;"	d
OPT_NOWIN	vim.h	1213;"	d
OPT_ONECOLUMN	vim.h	1214;"	d
OPT_PRINT_BOT	globals.h	1350;"	d
OPT_PRINT_COLLATE	globals.h	1360;"	d
OPT_PRINT_DUPLEX	globals.h	1357;"	d
OPT_PRINT_FORMFEED	globals.h	1362;"	d
OPT_PRINT_HEADERHEIGHT	globals.h	1353;"	d
OPT_PRINT_JOBSPLIT	globals.h	1361;"	d
OPT_PRINT_LEFT	globals.h	1351;"	d
OPT_PRINT_NUMBER	globals.h	1355;"	d
OPT_PRINT_NUM_OPTIONS	globals.h	1364;"	d
OPT_PRINT_PAPER	globals.h	1359;"	d
OPT_PRINT_PORTRAIT	globals.h	1358;"	d
OPT_PRINT_RIGHT	globals.h	1352;"	d
OPT_PRINT_SYNTAX	globals.h	1354;"	d
OPT_PRINT_TOP	globals.h	1349;"	d
OPT_PRINT_WRAP	globals.h	1356;"	d
OPT_WIN	optiondefs.h	23;"	d
OPT_WINONLY	vim.h	1212;"	d
OP_APPEND	vim.h	1466;"	d
OP_CHANGE	vim.h	1451;"	d
OP_COLON	vim.h	1458;"	d
OP_DELETE	vim.h	1449;"	d
OP_DELETE	vim.h	2397;"	d
OP_FILTER	vim.h	1454;"	d
OP_FOLD	vim.h	1467;"	d
OP_FOLDCLOSE	vim.h	1470;"	d
OP_FOLDCLOSEREC	vim.h	1471;"	d
OP_FOLDDEL	vim.h	1472;"	d
OP_FOLDDELREC	vim.h	1473;"	d
OP_FOLDOPEN	vim.h	1468;"	d
OP_FOLDOPENREC	vim.h	1469;"	d
OP_FORMAT	vim.h	1457;"	d
OP_FORMAT2	vim.h	1474;"	d
OP_FUNCTION	vim.h	1475;"	d
OP_INDENT	vim.h	1456;"	d
OP_INSERT	vim.h	1465;"	d
OP_JOIN	vim.h	1461;"	d
OP_JOIN	vim.h	2398;"	d
OP_JOIN_NS	vim.h	1462;"	d
OP_LOWER	vim.h	1460;"	d
OP_LSHIFT	vim.h	1452;"	d
OP_NOP	vim.h	1448;"	d
OP_NR_ADD	vim.h	1476;"	d
OP_NR_SUB	vim.h	1478;"	d
OP_PENDING	vim.h	677;"	d
OP_REPLACE	vim.h	1464;"	d
OP_ROT13	vim.h	1463;"	d
OP_RSHIFT	vim.h	1453;"	d
OP_TILDE	vim.h	1455;"	d
OP_UPPER	vim.h	1459;"	d
OP_YANK	vim.h	1450;"	d
OSC	ascii.h	171;"	d
OSPEED_EXTERN	os_mac.h	252;"	d
OSVERSIONINFO	gui_w32.c	/^typedef int OSVERSIONINFO;$/;"	t	file:
OUTPUT_LEN_TYPE	if_mzsch.c	137;"	d	file:
OUTPUT_LEN_TYPE	if_mzsch.c	139;"	d	file:
OUT_OF_TIME	search.c	5031;"	d	file:
OUT_SIZE	term.c	2464;"	d	file:
OUT_STR	vim.h	1632;"	d
OUT_STR_NF	vim.h	1633;"	d
O_EXTRA	vim.h	1558;"	d
O_EXTRA	vim.h	1560;"	d
O_NOCTTY	pty.c	135;"	d	file:
O_NOFOLLOW	vim.h	1564;"	d
O_NONBLOCK	filepath.c	829;"	d	file:
O_acute	regexp_nfa.c	719;"	d	file:
O_circumflex	regexp_nfa.c	716;"	d	file:
O_diaeresis	regexp_nfa.c	717;"	d	file:
O_grave	regexp_nfa.c	718;"	d	file:
O_slash	regexp_nfa.c	721;"	d	file:
O_virguilla	regexp_nfa.c	720;"	d	file:
ObjectDir	if_py_both.h	/^ObjectDir(PyObject *self, char **attributes)$/;"	f
Offset	gui_at_sb.c	127;"	d	file:
Offset	gui_at_sb.c	90;"	d	file:
OptionsAsMapping	if_py_both.h	/^static PyMappingMethods OptionsAsMapping = {$/;"	v
OptionsAsSeq	if_py_both.h	/^static PySequenceMethods OptionsAsSeq = {$/;"	v
OptionsAssItem	if_py_both.h	/^OptionsAssItem(OptionsObject *self, PyObject *keyObject, PyObject *valObject)$/;"	f
OptionsClear	if_py_both.h	/^OptionsClear(OptionsObject *self)$/;"	f
OptionsContains	if_py_both.h	/^OptionsContains(OptionsObject *self, PyObject *keyObject)$/;"	f
OptionsDestructor	if_py_both.h	/^OptionsDestructor(OptionsObject *self)$/;"	f
OptionsItem	if_py_both.h	/^OptionsItem(OptionsObject *self, PyObject *keyObject)$/;"	f
OptionsIter	if_py_both.h	/^OptionsIter(OptionsObject *self)$/;"	f
OptionsIterNext	if_py_both.h	/^OptionsIterNext(optiterinfo_T **oii)$/;"	f
OptionsNew	if_py_both.h	/^OptionsNew(int opt_type, void *from, checkfun Check, PyObject *fromObj)$/;"	f
OptionsObject	if_py_both.h	/^} OptionsObject;$/;"	t	typeref:struct:__anon159
OptionsTraverse	if_py_both.h	/^OptionsTraverse(OptionsObject *self, visitproc visit, void *arg)$/;"	f
OptionsType	if_py_both.h	/^static PyTypeObject OptionsType;$/;"	v
Output	if_py_both.h	/^static OutputObject Output =$/;"	v
OutputAttrs	if_py_both.h	/^static char *OutputAttrs[] = {$/;"	v
OutputDir	if_py_both.h	/^OutputDir(PyObject *self)$/;"	f
OutputGetattr	if_python.c	/^OutputGetattr(PyObject *self, char *name)$/;"	f	file:
OutputGetattro	if_python3.c	/^OutputGetattro(PyObject *self, PyObject *nameobj)$/;"	f	file:
OutputMethods	if_py_both.h	/^static struct PyMethodDef OutputMethods[] = {$/;"	v	typeref:struct:PyMethodDef
OutputObject	if_py_both.h	/^} OutputObject;$/;"	t	typeref:struct:__anon150
OutputSetattr	if_py_both.h	/^OutputSetattr(OutputObject *self, char *name, PyObject *valObject)$/;"	f
OutputSetattro	if_python3.c	/^OutputSetattro(PyObject *self, PyObject *nameobj, PyObject *val)$/;"	f	file:
OutputType	if_py_both.h	/^static PyTypeObject OutputType;$/;"	v
OutputWrite	if_py_both.h	/^OutputWrite(OutputObject *self, PyObject *string)$/;"	f
OutputWritelines	if_py_both.h	/^OutputWritelines(OutputObject *self, PyObject *seq)$/;"	f
P	sha256.c	100;"	d	file:
PACL	os_mswin.c	/^typedef int PACL;$/;"	t	file:
PACL	os_win32.c	/^typedef int PACL;$/;"	t	file:
PAGE_DELAY	gui_at_sb.c	221;"	d	file:
PAGE_REPEAT	gui_at_sb.c	223;"	d	file:
PART_COUNT	structs.h	/^    PART_COUNT,$/;"	e	enum:__anon231
PART_ERR	structs.h	/^    PART_ERR,$/;"	e	enum:__anon231
PART_IN	structs.h	/^    PART_IN,$/;"	e	enum:__anon231
PART_OUT	structs.h	/^    PART_OUT,$/;"	e	enum:__anon231
PART_SOCK	structs.h	/^    PART_SOCK = 0,$/;"	e	enum:__anon231
PASTE_CMDLINE	vim.h	/^    PASTE_CMDLINE,	\/\/ command line$/;"	e	enum:__anon281
PASTE_EX	vim.h	/^    PASTE_EX,		\/\/ ex mode line$/;"	e	enum:__anon281
PASTE_INSERT	vim.h	/^    PASTE_INSERT,	\/\/ insert mode$/;"	e	enum:__anon281
PASTE_ONE_CHAR	vim.h	/^    PASTE_ONE_CHAR	\/\/ return first character$/;"	e	enum:__anon281
PATHSEP	ascii.h	181;"	d
PATHSEP	ascii.h	184;"	d
PATHSEPSTR	ascii.h	182;"	d
PATHSEPSTR	ascii.h	185;"	d
PATH_ESC_CHARS	vim.h	303;"	d
PATH_ESC_CHARS	vim.h	307;"	d
PATH_ESC_CHARS	vim.h	310;"	d
PBYTE	macros.h	19;"	d
PC	term.c	/^char *UP, *BC, PC;$/;"	v
PC	termlib.c	/^char	PC = 0;		      \/\/ Pad character, default NULL$/;"	v
PCOMPOSITIONFORM	gui_w32.c	/^} COMPOSITIONFORM, *PCOMPOSITIONFORM, NEAR *NPCOMPOSITIONFORM, FAR *LPCOMPOSITIONFORM;$/;"	t	typeref:struct:tagCOMPOSITIONFORM	file:
PC_STATUS_LEFT	edit.c	1631;"	d	file:
PC_STATUS_RIGHT	edit.c	1630;"	d	file:
PC_STATUS_SET	edit.c	1632;"	d	file:
PC_STATUS_UNSET	edit.c	1629;"	d	file:
PDP_RETVAL	os_mswin.c	1060;"	d	file:
PDP_RETVAL	os_mswin.c	1062;"	d	file:
PDWORD	os_win32.c	/^typedef int PDWORD;$/;"	t	file:
PDYN_CONSOLE_SCREEN_BUFFER_INFOEX	os_win32.c	/^} DYN_CONSOLE_SCREEN_BUFFER_INFOEX, *PDYN_CONSOLE_SCREEN_BUFFER_INFOEX;$/;"	t	typeref:struct:_DYN_CONSOLE_SCREEN_BUFFER_INFOEX	file:
PDYN_STARTUPINFOEXW	terminal.c	/^} DYN_STARTUPINFOEXW, *PDYN_STARTUPINFOEXW;$/;"	t	typeref:struct:_DYN_STARTUPINFOEXW	file:
PERROR	channel.c	247;"	d	file:
PERROR	channel.c	248;"	d	file:
PERROR	vim.h	1673;"	d
PERROR	vim.h	1675;"	d
PERTURB_SHIFT	hashtab.c	40;"	d	file:
PEXP_FUNC	profiler.c	/^    PEXP_FUNC		\/\/ expand :profile func {funcname}$/;"	e	enum:__anon86	file:
PEXP_SUBCMD	profiler.c	/^    PEXP_SUBCMD,	\/\/ expand :profile sub-commands$/;"	e	enum:__anon86	file:
PFD_NOPREFIX	spellsuggest.c	196;"	d	file:
PFD_NOTSPECIAL	spellsuggest.c	198;"	d	file:
PFD_PREFIXTREE	spellsuggest.c	197;"	d	file:
PFX_FLAGS	spellfile.c	2007;"	d	file:
PHANDLE	os_win32.c	/^typedef int PHANDLE;$/;"	t	file:
PICKLENGTH	gui_at_sb.c	215;"	d	file:
PLAN_CR	screen.c	3024;"	d	file:
PLAN_LE	screen.c	3023;"	d	file:
PLAN_NL	screen.c	3025;"	d	file:
PLAN_WRITE	screen.c	3026;"	d	file:
PLINES_NOFILL	macros.h	256;"	d
PLINES_NOFILL	macros.h	258;"	d
PLUS	regexp_bt.c	148;"	d	file:
PLUS_REGISTER	structs.h	3969;"	d
PLUS_REGISTER	structs.h	3971;"	d
POINT	gui_w32.c	/^typedef int POINT;$/;"	t	file:
POP	regexp_nfa.c	3204;"	d	file:
POP	regexp_nfa.c	3711;"	d	file:
POP1	regexp_nfa.c	3707;"	d	file:
POP2	regexp_nfa.c	3709;"	d	file:
POPCLOSE_BUTTON	structs.h	/^    POPCLOSE_BUTTON,$/;"	e	enum:__anon238
POPCLOSE_CLICK	structs.h	/^    POPCLOSE_CLICK$/;"	e	enum:__anon238
POPCLOSE_NONE	structs.h	/^    POPCLOSE_NONE,$/;"	e	enum:__anon238
POPF_CURSORLINE	vim.h	627;"	d
POPF_DRAG	vim.h	629;"	d
POPF_HIDDEN	vim.h	626;"	d
POPF_INFO	vim.h	632;"	d
POPF_INFO_MENU	vim.h	633;"	d
POPF_IS_POPUP	vim.h	625;"	d
POPF_MAPPING	vim.h	631;"	d
POPF_ON_CMDLINE	vim.h	628;"	d
POPF_POSINVERT	vim.h	634;"	d
POPF_RESIZE	vim.h	630;"	d
POPPOS_BOTLEFT	structs.h	/^    POPPOS_BOTLEFT,$/;"	e	enum:__anon237
POPPOS_BOTRIGHT	structs.h	/^    POPPOS_BOTRIGHT,$/;"	e	enum:__anon237
POPPOS_CENTER	structs.h	/^    POPPOS_CENTER,$/;"	e	enum:__anon237
POPPOS_NONE	structs.h	/^    POPPOS_NONE$/;"	e	enum:__anon237
POPPOS_TOPLEFT	structs.h	/^    POPPOS_TOPLEFT,$/;"	e	enum:__anon237
POPPOS_TOPRIGHT	structs.h	/^    POPPOS_TOPRIGHT,$/;"	e	enum:__anon237
POPUPMENU_ZINDEX	structs.h	2273;"	d
POPUPWIN_DEFAULT_ZINDEX	structs.h	2272;"	d
POPUPWIN_DIALOG_ZINDEX	structs.h	2274;"	d
POPUPWIN_NOTIFICATION_ZINDEX	structs.h	2275;"	d
POPUP_HANDLED_1	vim.h	637;"	d
POPUP_HANDLED_2	vim.h	638;"	d
POPUP_HANDLED_3	vim.h	639;"	d
POPUP_HANDLED_4	vim.h	640;"	d
POPUP_HANDLED_5	vim.h	641;"	d
POSIX	os_qnx.h	15;"	d
POUND	ascii.h	117;"	d
POUND	ascii.h	38;"	d
PRCOLOR_BLACK	hardcopy.c	95;"	d	file:
PRCOLOR_WHITE	hardcopy.c	96;"	d	file:
PREFIX_LEN	message_test.c	245;"	d	file:
PREFIX_STR1	message_test.c	246;"	d	file:
PREFIX_STR2	message_test.c	247;"	d	file:
PRINT	regexp_bt.c	178;"	d	file:
PRINTDLG	os_win32.c	/^typedef int PRINTDLG;$/;"	t	file:
PRINTDLGW	os_mswin.c	/^typedef int PRINTDLGW;$/;"	t	file:
PRINTF_DECIMAL_LONG_U	vim.h	360;"	d
PRINTF_HEX_LONG_U	vim.h	345;"	d
PRINTF_HEX_LONG_U	vim.h	358;"	d
PRINTLINESIZE	spellfile.c	2069;"	d	file:
PRINTSOME	spellfile.c	2072;"	d	file:
PRINTWIDTH	spellfile.c	2070;"	d	file:
PRINT_NUMBER_WIDTH	structs.h	3738;"	d
PRL_ITEM	structs.h	1709;"	d
PROCESS_INFORMATION	os_win32.c	/^typedef int PROCESS_INFORMATION;$/;"	t	file:
PROC_THREAD_ATTRIBUTE_PSEUDOCONSOLE	terminal.c	77;"	d	file:
PROFCMD_CONTINUE	profiler.c	359;"	d	file:
PROFCMD_FILE	profiler.c	363;"	d	file:
PROFCMD_FUNC	profiler.c	361;"	d	file:
PROFCMD_LAST	profiler.c	365;"	d	file:
PROFCMD_PAUSE	profiler.c	357;"	d	file:
PROFCMD_START	profiler.c	355;"	d	file:
PROF_NONE	vim.h	1822;"	d
PROF_PAUSED	vim.h	1824;"	d
PROF_STORE	spellsuggest.c	1144;"	d	file:
PROF_YES	vim.h	1823;"	d
PROTECTED_DACL_SECURITY_INFORMATION	os_win32.c	769;"	d	file:
PROXY_DELEGATION	dlldata.c	14;"	d	file:
PRT_CID_PROLOG_VERSION	hardcopy.c	1270;"	d	file:
PRT_DSC_ENDCOMMENTS	hardcopy.c	1298;"	d	file:
PRT_DSC_ENDCOMMENTS_TYPE	hardcopy.c	1294;"	d	file:
PRT_DSC_MISC_TYPE	hardcopy.c	1291;"	d	file:
PRT_DSC_TITLE	hardcopy.c	1296;"	d	file:
PRT_DSC_TITLE_TYPE	hardcopy.c	1292;"	d	file:
PRT_DSC_VERSION	hardcopy.c	1297;"	d	file:
PRT_DSC_VERSION_TYPE	hardcopy.c	1293;"	d	file:
PRT_FILE_BUFFER_LEN	hardcopy.c	1701;"	d	file:
PRT_MEDIASIZE_LEN	hardcopy.c	988;"	d	file:
PRT_PROLOG_VERSION	hardcopy.c	1269;"	d	file:
PRT_PS_DEFAULT_BUFFER_SIZE	hardcopy.c	979;"	d	file:
PRT_PS_DEFAULT_DPI	hardcopy.c	977;"	d	file:
PRT_PS_DEFAULT_FONTSIZE	hardcopy.c	978;"	d	file:
PRT_PS_FONT_BOLD	hardcopy.c	1020;"	d	file:
PRT_PS_FONT_BOLDOBLIQUE	hardcopy.c	1022;"	d	file:
PRT_PS_FONT_OBLIQUE	hardcopy.c	1021;"	d	file:
PRT_PS_FONT_ROMAN	hardcopy.c	1019;"	d	file:
PRT_PS_FONT_TO_USER	hardcopy.c	1581;"	d	file:
PRT_RESOURCE_CMAP	hardcopy.c	1286;"	d	file:
PRT_RESOURCE_ENCODING	hardcopy.c	1285;"	d	file:
PRT_RESOURCE_HEADER	hardcopy.c	1282;"	d	file:
PRT_RESOURCE_PROCSET	hardcopy.c	1284;"	d	file:
PRT_RESOURCE_RESOURCE	hardcopy.c	1283;"	d	file:
PRT_RESOURCE_TYPE_CMAP	hardcopy.c	1258;"	d	file:
PRT_RESOURCE_TYPE_ENCODING	hardcopy.c	1257;"	d	file:
PRT_RESOURCE_TYPE_PROCSET	hardcopy.c	1256;"	d	file:
PRT_UNIT_INCH	globals.h	1391;"	d
PRT_UNIT_MM	globals.h	1392;"	d
PRT_UNIT_NAMES	globals.h	1394;"	d
PRT_UNIT_NONE	globals.h	1389;"	d
PRT_UNIT_PERC	globals.h	1390;"	d
PRT_UNIT_POINT	globals.h	1393;"	d
PSCR	hardcopy.c	1697;"	d	file:
PSECURITY_DESCRIPTOR	os_mswin.c	/^typedef int PSECURITY_DESCRIPTOR;$/;"	t	file:
PSECURITY_DESCRIPTOR	os_win32.c	/^typedef int PSECURITY_DESCRIPTOR;$/;"	t	file:
PSID	os_mswin.c	/^typedef int PSID;$/;"	t	file:
PSID	os_win32.c	/^typedef int PSID;$/;"	t	file:
PSIZE_T	terminal.c	/^typedef int PSIZE_T;$/;"	t	file:
PSLF	hardcopy.c	1696;"	d	file:
PSNSECINFO	os_win32.c	/^typedef int PSNSECINFO;$/;"	t	file:
PSNSECINFOW	os_win32.c	/^typedef int PSNSECINFOW;$/;"	t	file:
PT2HIKEY	textprop.c	40;"	d	file:
PTR2CHAR	macros.h	244;"	d
PTR_BL	memline.c	/^typedef struct pointer_block	PTR_BL;	    \/\/ contents of a pointer block$/;"	t	typeref:struct:pointer_block	file:
PTR_EN	memline.c	/^typedef struct pointer_entry	PTR_EN;	    \/\/ block\/line-count pair$/;"	t	typeref:struct:pointer_entry	file:
PTR_ID	memline.c	61;"	d	file:
PTYRANGE0	pty.c	120;"	d	file:
PTYRANGE1	pty.c	123;"	d	file:
PTY_DONE	pty.c	189;"	d	file:
PTY_DONE	pty.c	219;"	d	file:
PTY_DONE	pty.c	236;"	d	file:
PTY_DONE	pty.c	260;"	d	file:
PTY_DONE	pty.c	285;"	d	file:
PTY_DONE	pty.c	313;"	d	file:
PTY_DONE	pty.c	346;"	d	file:
PT_FLAG_COMBINE	structs.h	778;"	d
PT_FLAG_INS_END_INCL	structs.h	777;"	d
PT_FLAG_INS_START_INCL	structs.h	776;"	d
PUM_DEF_HEIGHT	popupmenu.c	49;"	d	file:
PUSH	regexp_nfa.c	3203;"	d	file:
PUSH	regexp_nfa.c	3712;"	d	file:
PUSH1	regexp_nfa.c	3708;"	d	file:
PUSH2	regexp_nfa.c	3710;"	d	file:
PUT_CURSEND	vim.h	1078;"	d
PUT_CURSLINE	vim.h	1079;"	d
PUT_FIXINDENT	vim.h	1077;"	d
PUT_LINE	vim.h	1080;"	d
PUT_LINE_FORWARD	vim.h	1082;"	d
PUT_LINE_SPLIT	vim.h	1081;"	d
PUT_UINT32	sha256.c	35;"	d	file:
PVOID	terminal.c	/^typedef int PVOID;$/;"	t	file:
PV_AI	optiondefs.h	29;"	d
PV_AR	optiondefs.h	30;"	d
PV_ARAB	optiondefs.h	160;"	d
PV_BEXPR	optiondefs.h	73;"	d
PV_BH	optiondefs.h	32;"	d
PV_BIN	optiondefs.h	39;"	d
PV_BKC	optiondefs.h	31;"	d
PV_BL	optiondefs.h	40;"	d
PV_BOMB	optiondefs.h	41;"	d
PV_BOTH	optiondefs.h	19;"	d
PV_BRI	optiondefs.h	163;"	d
PV_BRIOPT	optiondefs.h	164;"	d
PV_BT	optiondefs.h	33;"	d
PV_BUF	optiondefs.h	21;"	d
PV_CC	optiondefs.h	210;"	d
PV_CFU	optiondefs.h	61;"	d
PV_CI	optiondefs.h	42;"	d
PV_CIN	optiondefs.h	44;"	d
PV_CINK	optiondefs.h	45;"	d
PV_CINO	optiondefs.h	46;"	d
PV_CINW	optiondefs.h	49;"	d
PV_CM	optiondefs.h	51;"	d
PV_CMS	optiondefs.h	53;"	d
PV_COCU	optiondefs.h	224;"	d
PV_COLE	optiondefs.h	225;"	d
PV_COM	optiondefs.h	55;"	d
PV_CPT	optiondefs.h	56;"	d
PV_CRBIND	optiondefs.h	222;"	d
PV_CSL	optiondefs.h	59;"	d
PV_CUC	optiondefs.h	207;"	d
PV_CUL	optiondefs.h	208;"	d
PV_CULOPT	optiondefs.h	209;"	d
PV_DEF	optiondefs.h	64;"	d
PV_DICT	optiondefs.h	57;"	d
PV_DIFF	optiondefs.h	168;"	d
PV_EFM	optiondefs.h	35;"	d
PV_EOL	optiondefs.h	67;"	d
PV_EP	optiondefs.h	69;"	d
PV_ET	optiondefs.h	70;"	d
PV_FDC	optiondefs.h	171;"	d
PV_FDE	optiondefs.h	179;"	d
PV_FDI	optiondefs.h	173;"	d
PV_FDL	optiondefs.h	174;"	d
PV_FDM	optiondefs.h	175;"	d
PV_FDN	optiondefs.h	177;"	d
PV_FDT	optiondefs.h	180;"	d
PV_FEN	optiondefs.h	172;"	d
PV_FENC	optiondefs.h	71;"	d
PV_FEX	optiondefs.h	77;"	d
PV_FF	optiondefs.h	79;"	d
PV_FIXEOL	optiondefs.h	68;"	d
PV_FLP	optiondefs.h	80;"	d
PV_FML	optiondefs.h	176;"	d
PV_FMR	optiondefs.h	182;"	d
PV_FO	optiondefs.h	81;"	d
PV_FP	optiondefs.h	75;"	d
PV_FT	optiondefs.h	82;"	d
PV_GP	optiondefs.h	36;"	d
PV_IMI	optiondefs.h	83;"	d
PV_IMS	optiondefs.h	84;"	d
PV_INC	optiondefs.h	65;"	d
PV_INDE	optiondefs.h	86;"	d
PV_INDK	optiondefs.h	87;"	d
PV_INEX	optiondefs.h	90;"	d
PV_INF	optiondefs.h	92;"	d
PV_ISK	optiondefs.h	93;"	d
PV_KEY	optiondefs.h	95;"	d
PV_KMAP	optiondefs.h	98;"	d
PV_KP	optiondefs.h	100;"	d
PV_LBR	optiondefs.h	185;"	d
PV_LISP	optiondefs.h	102;"	d
PV_LIST	optiondefs.h	158;"	d
PV_LW	optiondefs.h	103;"	d
PV_MA	optiondefs.h	106;"	d
PV_MASK	optiondefs.h	22;"	d
PV_MAXVAL	optiondefs.h	/^    PV_MAXVAL = 0xffff    \/\/ to avoid warnings for value out of range$/;"	e	enum:__anon170
PV_MENC	optiondefs.h	105;"	d
PV_ML	optiondefs.h	107;"	d
PV_MOD	optiondefs.h	108;"	d
PV_MP	optiondefs.h	37;"	d
PV_MPS	optiondefs.h	109;"	d
PV_NF	optiondefs.h	110;"	d
PV_NONE	optiondefs.h	/^    PV_NONE = 0,$/;"	e	enum:__anon170
PV_NU	optiondefs.h	187;"	d
PV_NUW	optiondefs.h	190;"	d
PV_OFU	optiondefs.h	112;"	d
PV_PATH	optiondefs.h	114;"	d
PV_PI	optiondefs.h	115;"	d
PV_PVW	optiondefs.h	193;"	d
PV_QE	optiondefs.h	117;"	d
PV_RL	optiondefs.h	196;"	d
PV_RLC	optiondefs.h	197;"	d
PV_RNU	optiondefs.h	188;"	d
PV_RO	optiondefs.h	119;"	d
PV_SBR	optiondefs.h	213;"	d
PV_SCBIND	optiondefs.h	199;"	d
PV_SCL	optiondefs.h	233;"	d
PV_SCROLL	optiondefs.h	200;"	d
PV_SI	optiondefs.h	121;"	d
PV_SISO	optiondefs.h	201;"	d
PV_SMC	optiondefs.h	125;"	d
PV_SN	optiondefs.h	123;"	d
PV_SO	optiondefs.h	202;"	d
PV_SPC	optiondefs.h	129;"	d
PV_SPELL	optiondefs.h	204;"	d
PV_SPF	optiondefs.h	130;"	d
PV_SPL	optiondefs.h	131;"	d
PV_STL	optiondefs.h	216;"	d
PV_STS	optiondefs.h	133;"	d
PV_SUA	optiondefs.h	135;"	d
PV_SW	optiondefs.h	137;"	d
PV_SWF	optiondefs.h	138;"	d
PV_SYN	optiondefs.h	126;"	d
PV_TAGS	optiondefs.h	142;"	d
PV_TC	optiondefs.h	143;"	d
PV_TFU	optiondefs.h	140;"	d
PV_TS	optiondefs.h	144;"	d
PV_TSR	optiondefs.h	58;"	d
PV_TW	optiondefs.h	145;"	d
PV_TWK	optiondefs.h	228;"	d
PV_TWS	optiondefs.h	229;"	d
PV_TWSL	optiondefs.h	230;"	d
PV_TX	optiondefs.h	146;"	d
PV_UDF	optiondefs.h	148;"	d
PV_UL	optiondefs.h	218;"	d
PV_VSTS	optiondefs.h	152;"	d
PV_VTS	optiondefs.h	153;"	d
PV_WCR	optiondefs.h	166;"	d
PV_WFH	optiondefs.h	219;"	d
PV_WFW	optiondefs.h	220;"	d
PV_WIN	optiondefs.h	20;"	d
PV_WM	optiondefs.h	150;"	d
PV_WRAP	optiondefs.h	221;"	d
PWORD	gui_w32.c	/^typedef int PWORD;$/;"	t	file:
PY3OBJ_DELETED	if_python3.c	844;"	d	file:
PYINITIALISED	if_python.c	780;"	d	file:
PYINITIALISED	if_python3.c	782;"	d	file:
PYTHONX_STRING_LENGTH	if_py_both.h	1137;"	d
PYTHON_PROC	if_python.c	486;"	d	file:
PYTHON_PROC	if_python3.c	462;"	d	file:
PYTYPE_READY	if_py_both.h	6658;"	d
PY_ALTERNATE_DIR_STRING	if_py_both.h	1135;"	d
PY_CAN_RECURSE	if_python.c	121;"	d	file:
PY_CAN_RECURSE	if_python3.c	831;"	d	file:
PY_MAIN_DIR_STRING	if_py_both.h	1131;"	d
PY_NO_MAPPING_KEYS	if_python.c	212;"	d	file:
PY_SSIZE_T_CLEAN	if_python.c	64;"	d	file:
PY_SSIZE_T_CLEAN	if_python.c	69;"	d	file:
PY_SSIZE_T_CLEAN	if_python3.c	67;"	d	file:
PY_STRSAVE	if_python.c	821;"	d	file:
PY_USE_CAPSULE	if_python.c	91;"	d	file:
PY_USE_CAPSULE	if_python3.c	82;"	d	file:
P_ALLOCED	option.h	22;"	d
P_BOOL	option.h	19;"	d
P_COMMA	option.h	43;"	d
P_CURSWANT	option.h	57;"	d
P_DEF_ALLOCED	option.h	29;"	d
P_EXPAND	option.h	26;"	d
P_FLAGLIST	option.h	47;"	d
P_GETTEXT	option.h	50;"	d
P_INSECURE	option.h	53;"	d
P_MLE	option.h	61;"	d
P_NDNAME	option.h	59;"	d
P_NFNAME	option.h	52;"	d
P_NODEFAULT	option.h	28;"	d
P_NODUP	option.h	46;"	d
P_NOGLOB	option.h	51;"	d
P_NO_MKRC	option.h	32;"	d
P_NO_ML	option.h	56;"	d
P_NUM	option.h	20;"	d
P_ONECOMMA	option.h	44;"	d
P_PRI_MKRC	option.h	54;"	d
P_RALL	option.h	40;"	d
P_RBUF	option.h	39;"	d
P_RCLR	option.h	41;"	d
P_RSTAT	option.h	37;"	d
P_RWIN	option.h	38;"	d
P_RWINONLY	option.h	60;"	d
P_SECURE	option.h	49;"	d
P_STRING	option.h	21;"	d
P_VIM	option.h	34;"	d
P_VI_DEF	option.h	33;"	d
P_WAS_SET	option.h	31;"	d
PaintArrows	gui_at_sb.c	/^PaintArrows(ScrollbarWidget sbw)$/;"	f	file:
PaintThumb	gui_at_sb.c	/^PaintThumb(ScrollbarWidget sbw)$/;"	f	file:
PeekNotifyEvent	gui_at_sb.c	/^PeekNotifyEvent(Display *dpy, XEvent *event, char *args)$/;"	f	file:
PendingCommand	if_xcmdsrv.c	/^typedef struct PendingCommand$/;"	s	file:
PendingCommand	if_xcmdsrv.c	/^} PendingCommand;$/;"	t	typeref:struct:PendingCommand	file:
PfnGetConsoleScreenBufferInfoEx	os_win32.c	/^typedef BOOL (WINAPI *PfnGetConsoleScreenBufferInfoEx)(HANDLE, PDYN_CONSOLE_SCREEN_BUFFER_INFOEX);$/;"	t	file:
PfnRtlGetVersion	os_win32.c	/^typedef BOOL (WINAPI *PfnRtlGetVersion)(LPOSVERSIONINFOW);$/;"	t	file:
PfnSetConsoleScreenBufferInfoEx	os_win32.c	/^typedef BOOL (WINAPI *PfnSetConsoleScreenBufferInfoEx)(HANDLE, PDYN_CONSOLE_SCREEN_BUFFER_INFOEX);$/;"	t	file:
PgColor_t	gui_photon.c	25;"	d	file:
Pg_BLACK	gui_photon.c	29;"	d	file:
PhEvent_t	gui_photon.c	26;"	d	file:
PhImage_t	gui_photon.c	34;"	d	file:
PhPoint_t	gui_photon.c	27;"	d	file:
PhTile_t	gui_photon.c	32;"	d	file:
PixelToDialogX	gui_w32.c	/^PixelToDialogX(int numPixels)$/;"	f	file:
PixelToDialogY	gui_w32.c	/^PixelToDialogY(int numPixels)$/;"	f	file:
PlatformId	os_win32.c	/^PlatformId(void)$/;"	f
Port_Info	if_mzsch.c	/^} Port_Info;$/;"	t	typeref:struct:__anon55	file:
Print	if_cscope.h	/^    Print$/;"	e	enum:__anon149
PrintDlgProc	os_mswin.c	/^PrintDlgProc($/;"	f	file:
PrintHookProc	os_mswin.c	/^PrintHookProc($/;"	f	file:
PtCallbackF_t	gui_photon.c	30;"	d	file:
PtCallbackInfo_t	gui_photon.c	31;"	d	file:
PtWidget_t	gui_photon.c	28;"	d	file:
PtWidget_t	gui_photon.c	33;"	d	file:
Ptrlist	regexp_nfa.c	/^typedef union Ptrlist Ptrlist;$/;"	t	typeref:union:Ptrlist	file:
Ptrlist	regexp_nfa.c	/^union Ptrlist$/;"	u	file:
PtyProto	pty.c	/^static char PtyProto[] = "\/dev\/pt\/XY";$/;"	v	file:
PtyProto	pty.c	/^static char PtyProto[] = "\/dev\/ptyXY";$/;"	v	file:
PtyProto	pty.c	/^static char PtyProto[] = "\/dev\/ptym\/ptyXY";$/;"	v	file:
Py3Init_vim	if_python3.c	/^Py3Init_vim(void)$/;"	f	file:
PyArg_Parse	if_python.c	150;"	d	file:
PyArg_Parse	if_python.c	161;"	d	file:
PyArg_Parse	if_python3.c	133;"	d	file:
PyArg_Parse	if_python3.c	134;"	d	file:
PyArg_ParseTuple	if_python.c	151;"	d	file:
PyArg_ParseTuple	if_python.c	162;"	d	file:
PyArg_ParseTuple	if_python3.c	135;"	d	file:
PyArg_ParseTuple	if_python3.c	136;"	d	file:
PyBool_Type	if_python.c	188;"	d	file:
PyBool_Type	if_python3.c	245;"	d	file:
PyBytes_AsString	if_python3.c	227;"	d	file:
PyBytes_AsString	if_python3.c	228;"	d	file:
PyBytes_AsStringAndSize	if_python.c	78;"	d	file:
PyBytes_AsStringAndSize	if_python3.c	230;"	d	file:
PyBytes_Check	if_python.c	77;"	d	file:
PyBytes_FromString	if_python.c	76;"	d	file:
PyBytes_FromString	if_python3.c	232;"	d	file:
PyBytes_FromString	if_python3.c	233;"	d	file:
PyBytes_FromStringAndSize	if_python.c	79;"	d	file:
PyBytes_FromStringAndSize	if_python3.c	234;"	d	file:
PyBytes_FromStringAndSize	if_python3.c	235;"	d	file:
PyCObject_AsVoidPtr	if_python.c	303;"	d	file:
PyCObject_FromVoidPtr	if_python.c	302;"	d	file:
PyCapsule_GetPointer	if_python.c	300;"	d	file:
PyCapsule_GetPointer	if_python3.c	283;"	d	file:
PyCapsule_New	if_python.c	299;"	d	file:
PyCapsule_New	if_python3.c	282;"	d	file:
PyDict_GetItemString	if_python.c	208;"	d	file:
PyDict_GetItemString	if_python3.c	178;"	d	file:
PyDict_New	if_python.c	207;"	d	file:
PyDict_New	if_python3.c	177;"	d	file:
PyDict_Next	if_python.c	209;"	d	file:
PyDict_Next	if_python3.c	179;"	d	file:
PyDict_SetItemString	if_python.c	165;"	d	file:
PyDict_SetItemString	if_python3.c	139;"	d	file:
PyDict_Type	if_python.c	210;"	d	file:
PyErr_BadArgument	if_python.c	166;"	d	file:
PyErr_BadArgument	if_python3.c	140;"	d	file:
PyErr_Clear	if_python.c	168;"	d	file:
PyErr_Clear	if_python3.c	141;"	d	file:
PyErr_ExceptionMatches	if_python.c	176;"	d	file:
PyErr_ExceptionMatches	if_python3.c	149;"	d	file:
PyErr_FORMAT	if_py_both.h	31;"	d
PyErr_FORMAT2	if_py_both.h	32;"	d
PyErr_Format	if_python.c	169;"	d	file:
PyErr_Format	if_python3.c	142;"	d	file:
PyErr_NewException	if_python.c	167;"	d	file:
PyErr_NewException	if_python3.c	246;"	d	file:
PyErr_NoMemory	if_python.c	171;"	d	file:
PyErr_NoMemory	if_python3.c	144;"	d	file:
PyErr_Occurred	if_python.c	172;"	d	file:
PyErr_Occurred	if_python3.c	145;"	d	file:
PyErr_PrintEx	if_python.c	170;"	d	file:
PyErr_PrintEx	if_python3.c	143;"	d	file:
PyErr_SET_STRING	if_py_both.h	28;"	d
PyErr_SET_VIM	if_py_both.h	30;"	d
PyErr_SetNone	if_python.c	173;"	d	file:
PyErr_SetNone	if_python3.c	146;"	d	file:
PyErr_SetObject	if_python.c	175;"	d	file:
PyErr_SetObject	if_python3.c	148;"	d	file:
PyErr_SetString	if_python.c	174;"	d	file:
PyErr_SetString	if_python3.c	147;"	d	file:
PyErr_SetVim	if_py_both.h	29;"	d
PyErr_VIM_FORMAT	if_py_both.h	33;"	d
PyEval_GetGlobals	if_python3.c	201;"	d	file:
PyEval_GetLocals	if_python3.c	200;"	d	file:
PyEval_InitThreads	if_python.c	177;"	d	file:
PyEval_InitThreads	if_python3.c	150;"	d	file:
PyEval_RestoreThread	if_python.c	178;"	d	file:
PyEval_RestoreThread	if_python3.c	151;"	d	file:
PyEval_SaveThread	if_python.c	179;"	d	file:
PyEval_SaveThread	if_python3.c	152;"	d	file:
PyExc_AttributeError	if_python.c	472;"	d	file:
PyExc_AttributeError	if_python3.c	448;"	d	file:
PyExc_ImportError	if_python.c	480;"	d	file:
PyExc_ImportError	if_python3.c	456;"	d	file:
PyExc_IndexError	if_python.c	473;"	d	file:
PyExc_IndexError	if_python3.c	449;"	d	file:
PyExc_KeyError	if_python.c	474;"	d	file:
PyExc_KeyError	if_python3.c	450;"	d	file:
PyExc_KeyboardInterrupt	if_python.c	475;"	d	file:
PyExc_KeyboardInterrupt	if_python3.c	451;"	d	file:
PyExc_OverflowError	if_python.c	481;"	d	file:
PyExc_OverflowError	if_python3.c	457;"	d	file:
PyExc_RuntimeError	if_python.c	479;"	d	file:
PyExc_RuntimeError	if_python3.c	455;"	d	file:
PyExc_SystemExit	if_python.c	478;"	d	file:
PyExc_SystemExit	if_python3.c	454;"	d	file:
PyExc_TypeError	if_python.c	476;"	d	file:
PyExc_TypeError	if_python3.c	452;"	d	file:
PyExc_ValueError	if_python.c	477;"	d	file:
PyExc_ValueError	if_python3.c	453;"	d	file:
PyFile_Type	if_python.c	251;"	d	file:
PyFloat_AsDouble	if_python.c	241;"	d	file:
PyFloat_AsDouble	if_python3.c	237;"	d	file:
PyFloat_FromDouble	if_python.c	242;"	d	file:
PyFloat_FromDouble	if_python3.c	236;"	d	file:
PyFloat_Type	if_python.c	243;"	d	file:
PyFloat_Type	if_python3.c	242;"	d	file:
PyGILState_Ensure	if_python.c	181;"	d	file:
PyGILState_Ensure	if_python3.c	153;"	d	file:
PyGILState_Release	if_python.c	182;"	d	file:
PyGILState_Release	if_python3.c	154;"	d	file:
PyImport_AddModule	if_python.c	246;"	d	file:
PyImport_AddModule	if_python3.c	218;"	d	file:
PyImport_AppendInittab	if_python3.c	217;"	d	file:
PyImport_ImportModule	if_python.c	206;"	d	file:
PyImport_ImportModule	if_python3.c	175;"	d	file:
PyInquiry	if_python.c	105;"	d	file:
PyInquiry	if_python.c	96;"	d	file:
PyInt	if_python.c	103;"	d	file:
PyInt	if_python.c	95;"	d	file:
PyInt	if_python3.c	84;"	d	file:
PyIntArgFunc	if_python.c	106;"	d	file:
PyIntArgFunc	if_python.c	97;"	d	file:
PyIntArgFunc	if_python3.c	99;"	d	file:
PyIntIntArgFunc	if_python.c	107;"	d	file:
PyIntIntArgFunc	if_python.c	98;"	d	file:
PyIntIntObjArgProc	if_python.c	100;"	d	file:
PyIntIntObjArgProc	if_python.c	109;"	d	file:
PyIntObjArgProc	if_python.c	108;"	d	file:
PyIntObjArgProc	if_python.c	99;"	d	file:
PyIntObjArgProc	if_python3.c	100;"	d	file:
PyInt_AsLong	if_python.c	184;"	d	file:
PyInt_AsLong	if_python3.c	95;"	d	file:
PyInt_Check	if_python3.c	92;"	d	file:
PyInt_FromLong	if_python.c	185;"	d	file:
PyInt_FromLong	if_python3.c	94;"	d	file:
PyInt_Type	if_python.c	189;"	d	file:
PyIter_Next	if_python.c	219;"	d	file:
PyIter_Next	if_python3.c	184;"	d	file:
PyList_Append	if_python.c	192;"	d	file:
PyList_Append	if_python3.c	158;"	d	file:
PyList_GetItem	if_python.c	191;"	d	file:
PyList_GetItem	if_python3.c	157;"	d	file:
PyList_Insert	if_python.c	193;"	d	file:
PyList_Insert	if_python3.c	159;"	d	file:
PyList_New	if_python.c	194;"	d	file:
PyList_New	if_python3.c	160;"	d	file:
PyList_SetItem	if_python.c	195;"	d	file:
PyList_SetItem	if_python3.c	161;"	d	file:
PyList_Size	if_python.c	196;"	d	file:
PyList_Size	if_python3.c	162;"	d	file:
PyList_Type	if_python.c	197;"	d	file:
PyLong_AsLong	if_python.c	186;"	d	file:
PyLong_AsLong	if_python3.c	155;"	d	file:
PyLong_FromLong	if_python.c	187;"	d	file:
PyLong_FromLong	if_python3.c	156;"	d	file:
PyLong_Type	if_python.c	190;"	d	file:
PyMapping_Check	if_python.c	218;"	d	file:
PyMapping_Check	if_python3.c	180;"	d	file:
PyMapping_Keys	if_python.c	214;"	d	file:
PyMapping_Keys	if_python3.c	182;"	d	file:
PyMem_Free	if_python.c	163;"	d	file:
PyMem_Free	if_python3.c	137;"	d	file:
PyMem_Malloc	if_python.c	164;"	d	file:
PyMem_Malloc	if_python3.c	138;"	d	file:
PyMethodDef	if_python.c	/^struct PyMethodDef { Py_ssize_t a; };$/;"	s	file:
PyModule_AddObject	if_python.c	221;"	d	file:
PyModule_AddObject	if_python3.c	216;"	d	file:
PyModule_Create2	if_python3.c	253;"	d	file:
PyModule_Create2TraceRefs	if_python3.c	251;"	d	file:
PyModule_GetDict	if_python.c	220;"	d	file:
PyModule_GetDict	if_python3.c	189;"	d	file:
PyNumber_Check	if_python.c	244;"	d	file:
PyNumber_Check	if_python3.c	243;"	d	file:
PyNumber_Long	if_python.c	245;"	d	file:
PyNumber_Long	if_python3.c	244;"	d	file:
PyObject	if_python.c	83;"	d	file:
PyObject_Call	if_python.c	229;"	d	file:
PyObject_Call	if_python3.c	199;"	d	file:
PyObject_CallFunction	if_python.c	156;"	d	file:
PyObject_CallFunction	if_python.c	228;"	d	file:
PyObject_CallFunctionObjArgs	if_python.c	227;"	d	file:
PyObject_CallFunctionObjArgs	if_python3.c	197;"	d	file:
PyObject_CallMethod	if_python.c	155;"	d	file:
PyObject_CallMethod	if_python.c	217;"	d	file:
PyObject_Free	if_python.c	295;"	d	file:
PyObject_Free	if_python3.c	260;"	d	file:
PyObject_GC_Del	if_python.c	269;"	d	file:
PyObject_GC_Del	if_python3.c	263;"	d	file:
PyObject_GC_UnTrack	if_python.c	270;"	d	file:
PyObject_GC_UnTrack	if_python3.c	264;"	d	file:
PyObject_GenericGetAttr	if_python3.c	238;"	d	file:
PyObject_GetAttrString	if_python.c	224;"	d	file:
PyObject_GetAttrString	if_python3.c	194;"	d	file:
PyObject_GetItem	if_python.c	216;"	d	file:
PyObject_GetItem	if_python3.c	187;"	d	file:
PyObject_GetIter	if_python.c	279;"	d	file:
PyObject_GetIter	if_python3.c	185;"	d	file:
PyObject_HasAttrString	if_python.c	225;"	d	file:
PyObject_HasAttrString	if_python3.c	195;"	d	file:
PyObject_Init	if_python.c	278;"	d	file:
PyObject_Init	if_python3.c	176;"	d	file:
PyObject_IsTrue	if_python.c	280;"	d	file:
PyObject_IsTrue	if_python3.c	188;"	d	file:
PyObject_Malloc	if_python.c	294;"	d	file:
PyObject_Malloc	if_python3.c	259;"	d	file:
PyObject_NEW	if_python3.c	286;"	d	file:
PyObject_NEW	if_python3.c	287;"	d	file:
PyObject_Repr	if_python.c	230;"	d	file:
PyObject_Repr	if_python3.c	186;"	d	file:
PyObject_SetAttrString	if_python.c	226;"	d	file:
PyObject_SetAttrString	if_python3.c	196;"	d	file:
PyRun_SimpleString	if_python.c	148;"	d	file:
PyRun_SimpleString	if_python.c	222;"	d	file:
PyRun_SimpleString	if_python3.c	190;"	d	file:
PyRun_SimpleString	if_python3.c	191;"	d	file:
PyRun_String	if_python.c	149;"	d	file:
PyRun_String	if_python.c	223;"	d	file:
PyRun_String	if_python3.c	192;"	d	file:
PyRun_String	if_python3.c	193;"	d	file:
PySequenceMethods	if_python.c	87;"	d	file:
PySequence_Check	if_python.c	198;"	d	file:
PySequence_Check	if_python3.c	163;"	d	file:
PySequence_Fast	if_python.c	201;"	d	file:
PySequence_Fast	if_python3.c	166;"	d	file:
PySequence_GetItem	if_python.c	200;"	d	file:
PySequence_GetItem	if_python3.c	165;"	d	file:
PySequence_Size	if_python.c	199;"	d	file:
PySequence_Size	if_python3.c	164;"	d	file:
PySliceObject_T	if_python.c	/^typedef PySliceObject PySliceObject_T;$/;"	t	file:
PySliceObject_T	if_python3.c	/^typedef PyObject PySliceObject_T;$/;"	t	file:
PySliceObject_T	if_python3.c	/^typedef PySliceObject PySliceObject_T;$/;"	t	file:
PySlice_AdjustIndices	if_python3.c	170;"	d	file:
PySlice_GetIndicesEx	if_python.c	205;"	d	file:
PySlice_GetIndicesEx	if_python3.c	173;"	d	file:
PySlice_GetIndicesEx	if_python3.c	174;"	d	file:
PySlice_Type	if_python.c	252;"	d	file:
PySlice_Type	if_python3.c	241;"	d	file:
PySlice_Unpack	if_python3.c	171;"	d	file:
PyStdPrinter_Type	if_python3.c	240;"	d	file:
PyString_AsString	if_python.c	231;"	d	file:
PyString_AsStringAndSize	if_python.c	232;"	d	file:
PyString_Check	if_python3.c	86;"	d	file:
PyString_FromFormat	if_python.c	234;"	d	file:
PyString_FromFormat	if_python3.c	90;"	d	file:
PyString_FromString	if_python.c	233;"	d	file:
PyString_FromString	if_python3.c	88;"	d	file:
PyString_FromStringAndSize	if_python.c	235;"	d	file:
PyString_Size	if_python.c	236;"	d	file:
PyString_Type	if_python.c	237;"	d	file:
PySys_GetObject	if_python.c	248;"	d	file:
PySys_GetObject	if_python3.c	203;"	d	file:
PySys_SetArgv	if_python.c	249;"	d	file:
PySys_SetArgv	if_python3.c	204;"	d	file:
PySys_SetObject	if_python.c	247;"	d	file:
PySys_SetObject	if_python3.c	202;"	d	file:
PyThreadState	if_python.c	/^typedef PyObject PyThreadState;$/;"	t	file:
PyThreadState	if_python.c	84;"	d	file:
PyTuple_GetItem	if_python.c	203;"	d	file:
PyTuple_GetItem	if_python3.c	168;"	d	file:
PyTuple_Size	if_python.c	202;"	d	file:
PyTuple_Size	if_python3.c	167;"	d	file:
PyTuple_Type	if_python.c	204;"	d	file:
PyTypeObject	if_python.c	85;"	d	file:
PyType_GenericAlloc	if_python.c	254;"	d	file:
PyType_GenericAlloc	if_python3.c	265;"	d	file:
PyType_GenericNew	if_python3.c	266;"	d	file:
PyType_IsSubtype	if_python.c	282;"	d	file:
PyType_IsSubtype	if_python3.c	281;"	d	file:
PyType_Ready	if_python.c	253;"	d	file:
PyType_Ready	if_python3.c	205;"	d	file:
PyType_Type	if_python.c	250;"	d	file:
PyType_Type	if_python3.c	239;"	d	file:
PyUnicodeUCS2_FromFormat	if_python3.c	276;"	d	file:
PyUnicodeUCS4_FromFormat	if_python3.c	274;"	d	file:
PyUnicode_AsEncodedString	if_python.c	239;"	d	file:
PyUnicode_AsEncodedString	if_python.c	240;"	d	file:
PyUnicode_AsEncodedString	if_python3.c	225;"	d	file:
PyUnicode_AsEncodedString	if_python3.c	226;"	d	file:
PyUnicode_Decode	if_python3.c	279;"	d	file:
PyUnicode_Decode	if_python3.c	280;"	d	file:
PyUnicode_FromFormat	if_python3.c	270;"	d	file:
PyUnicode_FromString	if_python3.c	267;"	d	file:
PyUnicode_FromString	if_python3.c	268;"	d	file:
PyUnicode_Type	if_python.c	238;"	d	file:
Py_BuildValue	if_python.c	152;"	d	file:
Py_BuildValue	if_python.c	255;"	d	file:
Py_BuildValue	if_python3.c	206;"	d	file:
Py_BuildValue	if_python3.c	207;"	d	file:
Py_CLEAR	if_python.c	802;"	d	file:
Py_DECREF	if_python3.c	622;"	d	file:
Py_DECREF	if_python3.c	623;"	d	file:
Py_Finalize	if_python.c	260;"	d	file:
Py_Finalize	if_python3.c	210;"	d	file:
Py_FindMethod	if_python.c	256;"	d	file:
Py_GetProgramName	if_python.c	/^Py_GetProgramName(void)$/;"	f
Py_InitModule4	if_python.c	153;"	d	file:
Py_InitModule4	if_python.c	257;"	d	file:
Py_InitModule4_64	if_python.c	154;"	d	file:
Py_Initialize	if_python.c	259;"	d	file:
Py_Initialize	if_python3.c	209;"	d	file:
Py_IsInitialized	if_python.c	261;"	d	file:
Py_IsInitialized	if_python3.c	211;"	d	file:
Py_NoSiteFlag	if_python.c	306;"	d	file:
Py_SetPythonHome	if_python.c	258;"	d	file:
Py_SetPythonHome	if_python3.c	208;"	d	file:
Py_TYPE_NAME	if_py_both.h	35;"	d
Py_UNICODE_USE_UCS_FUNCTIONS	if_python3.c	272;"	d	file:
Py_VISIT	if_python.c	799;"	d	file:
Py_XDECREF	if_python3.c	634;"	d	file:
Py_XDECREF	if_python3.c	635;"	d	file:
Py_bytes_fmt	if_python.c	112;"	d	file:
Py_bytes_fmt	if_python3.c	97;"	d	file:
Py_ssize_t	if_py_both.h	/^typedef int Py_ssize_t;  \/\/ Python 2.4 and earlier don't have this type.$/;"	t
Py_ssize_t_fmt	if_python.c	101;"	d	file:
Py_ssize_t_fmt	if_python.c	110;"	d	file:
Py_ssize_t_fmt	if_python3.c	96;"	d	file:
Py_underscore_GC	if_python.c	265;"	d	file:
Python3_Init	if_python3.c	/^Python3_Init(void)$/;"	f	file:
PythonIO_Flush	if_py_both.h	/^PythonIO_Flush(void)$/;"	f
PythonIO_Init_io	if_py_both.h	/^PythonIO_Init_io(void)$/;"	f
PythonMod_Init	if_python.c	/^PythonMod_Init(void)$/;"	f	file:
Python_Init	if_python.c	/^Python_Init(void)$/;"	f	file:
Python_Lock_Vim	if_py_both.h	/^Python_Lock_Vim(void)$/;"	f
Python_Release_Vim	if_py_both.h	/^Python_Release_Vim(void)$/;"	f
Python_RestoreThread	if_python.c	/^Python_RestoreThread(void)$/;"	f	file:
Python_SaveThread	if_python.c	/^Python_SaveThread(void)$/;"	f	file:
QFLT_INTERNAL	quickfix.c	/^    QFLT_INTERNAL  \/\/ Internal - Temporary list used by getqflist()\/getloclist()$/;"	e	enum:__anon87	file:
QFLT_LOCATION	quickfix.c	/^    QFLT_LOCATION, \/\/ Location list - per window list$/;"	e	enum:__anon87	file:
QFLT_QUICKFIX	quickfix.c	/^    QFLT_QUICKFIX, \/\/ Quickfix list - global list$/;"	e	enum:__anon87	file:
QF_END_OF_INPUT	quickfix.c	/^    QF_END_OF_INPUT = 2,$/;"	e	enum:__anon88	file:
QF_FAIL	quickfix.c	/^    QF_FAIL = 0,$/;"	e	enum:__anon88	file:
QF_GETLIST_ALL	quickfix.c	/^    QF_GETLIST_ALL	= 0x7FF,$/;"	e	enum:__anon92	file:
QF_GETLIST_CONTEXT	quickfix.c	/^    QF_GETLIST_CONTEXT	= 0x10,$/;"	e	enum:__anon92	file:
QF_GETLIST_FILEWINID	quickfix.c	/^    QF_GETLIST_FILEWINID	= 0x200,$/;"	e	enum:__anon92	file:
QF_GETLIST_ID	quickfix.c	/^    QF_GETLIST_ID	= 0x20,$/;"	e	enum:__anon92	file:
QF_GETLIST_IDX	quickfix.c	/^    QF_GETLIST_IDX	= 0x40,$/;"	e	enum:__anon92	file:
QF_GETLIST_ITEMS	quickfix.c	/^    QF_GETLIST_ITEMS	= 0x2,$/;"	e	enum:__anon92	file:
QF_GETLIST_NONE	quickfix.c	/^    QF_GETLIST_NONE	= 0x0,$/;"	e	enum:__anon92	file:
QF_GETLIST_NR	quickfix.c	/^    QF_GETLIST_NR	= 0x4,$/;"	e	enum:__anon92	file:
QF_GETLIST_QFBUFNR	quickfix.c	/^    QF_GETLIST_QFBUFNR	= 0x400,$/;"	e	enum:__anon92	file:
QF_GETLIST_SIZE	quickfix.c	/^    QF_GETLIST_SIZE	= 0x80,$/;"	e	enum:__anon92	file:
QF_GETLIST_TICK	quickfix.c	/^    QF_GETLIST_TICK	= 0x100,$/;"	e	enum:__anon92	file:
QF_GETLIST_TITLE	quickfix.c	/^    QF_GETLIST_TITLE	= 0x1,$/;"	e	enum:__anon92	file:
QF_GETLIST_WINID	quickfix.c	/^    QF_GETLIST_WINID	= 0x8,$/;"	e	enum:__anon92	file:
QF_IGNORE_LINE	quickfix.c	/^    QF_IGNORE_LINE = 4,$/;"	e	enum:__anon88	file:
QF_MULTISCAN	quickfix.c	/^    QF_MULTISCAN = 5,$/;"	e	enum:__anon88	file:
QF_NOMEM	quickfix.c	/^    QF_NOMEM = 3,$/;"	e	enum:__anon88	file:
QF_OK	quickfix.c	/^    QF_OK = 1,$/;"	e	enum:__anon88	file:
QF_WINHEIGHT	vim.h	1503;"	d
QueryInterface	if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )($/;"	m	struct:IVimVtbl
R	sha256.c	94;"	d	file:
R13_	ascii.h	100;"	d
RAISE_DELETE_LINE_FAIL	if_py_both.h	44;"	d
RAISE_INSERT_LINE_FAIL	if_py_both.h	45;"	d
RAISE_INVALID_INDEX_TYPE	if_py_both.h	49;"	d
RAISE_KEY_ADD_FAIL	if_py_both.h	47;"	d
RAISE_LOCKED_DICTIONARY	if_py_both.h	41;"	d
RAISE_LOCKED_LIST	if_py_both.h	42;"	d
RAISE_NO_EMPTY_KEYS	if_py_both.h	39;"	d
RAISE_REPLACE_LINE_FAIL	if_py_both.h	46;"	d
RAISE_UNDO_FAIL	if_py_both.h	43;"	d
RARRAY_LEN	if_ruby.c	141;"	d	file:
RARRAY_PTR	if_ruby.c	144;"	d	file:
RA_BREAK	regexp.c	95;"	d	file:
RA_CONT	regexp.c	94;"	d	file:
RA_FAIL	regexp.c	93;"	d	file:
RA_MATCH	regexp.c	96;"	d	file:
RA_NOMATCH	regexp.c	97;"	d	file:
RBAppend	if_py_both.h	/^RBAppend($/;"	f
RBAsItem	if_py_both.h	/^RBAsItem($/;"	f
RBAsSlice	if_py_both.h	/^RBAsSlice($/;"	f
RBItem	if_py_both.h	/^RBItem(BufferObject *self, PyInt n, PyInt start, PyInt end)$/;"	f
RBSlice	if_py_both.h	/^RBSlice(BufferObject *self, PyInt lo, PyInt hi, PyInt start, PyInt end)$/;"	f
RB_ARY_NEW4_MACRO	if_ruby.c	311;"	d	file:
READBIN	vim.h	1545;"	d
READBIN	vim.h	1549;"	d
READ_BUFFER	vim.h	981;"	d
READ_BUFFER_SIZE	gui.c	352;"	d	file:
READ_BUFFER_SIZE	gui.c	356;"	d	file:
READ_DUMMY	vim.h	982;"	d
READ_FIFO	vim.h	984;"	d
READ_FILTER	vim.h	979;"	d
READ_KEEP_UNDO	vim.h	983;"	d
READ_NEW	vim.h	978;"	d
READ_STDIN	vim.h	980;"	d
RECT	gui_w32.c	/^typedef int RECT;$/;"	t	file:
RED	term.c	2947;"	d	file:
REDRAW_TOP	vim.h	584;"	d
REGEXP_ABBR	regexp.c	/^static char_u REGEXP_ABBR[] = "nrtebdoxuU";$/;"	v	file:
REGEXP_INRANGE	regexp.c	/^static char_u REGEXP_INRANGE[] = "]^-n\\\\";$/;"	v	file:
REGION_ALL	spell.c	67;"	d	file:
REGMAGIC	regexp.c	54;"	d	file:
REGMBC	regexp_bt.c	524;"	d	file:
REGSTACK_INITIAL	regexp_bt.c	388;"	d	file:
REG_EXEC	viminfo.c	1528;"	d	file:
REG_MULTI	regexp.c	1170;"	d	file:
REG_NOPAREN	regexp.c	351;"	d	file:
REG_NPAREN	regexp.c	354;"	d	file:
REG_PAREN	regexp.c	352;"	d	file:
REG_PREVIOUS	viminfo.c	1527;"	d	file:
REG_ZPAREN	regexp.c	353;"	d	file:
REMAP_NONE	vim.h	958;"	d
REMAP_SCRIPT	vim.h	959;"	d
REMAP_SKIP	vim.h	960;"	d
REMAP_YES	vim.h	957;"	d
REPEATED_MSG_LOOKING	globals.h	1823;"	d
REPEATED_MSG_SAFESTATE	globals.h	1824;"	d
REPLACE	vim.h	685;"	d
REPLACE_CR_NCHAR	vim.h	2641;"	d
REPLACE_FLAG	vim.h	684;"	d
REPLACE_NL_NCHAR	vim.h	2642;"	d
REPLACE_NORMAL	macros.h	210;"	d
REPLY_COUNT	os_mswin.c	2461;"	d	file:
REPLY_ITEM	os_mswin.c	2460;"	d	file:
REPTERM_DO_LT	vim.h	2662;"	d
REPTERM_FROM_PART	vim.h	2661;"	d
REPTERM_NO_SIMPLIFY	vim.h	2664;"	d
REPTERM_SPECIAL	vim.h	2663;"	d
RESCORE	spellsuggest.c	26;"	d	file:
RESETSTKOFLW	os_win32.h	143;"	d
RESETSTKOFLW	os_win32.h	145;"	d
RESET_BINDING	macros.h	252;"	d
RESET_CHARTAB	charset.c	24;"	d	file:
RESIZE_BOTH	vim.h	1192;"	d
RESIZE_HOR	vim.h	1191;"	d
RESIZE_VERT	vim.h	1190;"	d
RETSIGTYPE	os_mac.h	272;"	d
RETSIGTYPE	os_vms_conf.h	75;"	d
RET_WIN_BUF_CHARTABSIZE	charset.c	749;"	d	file:
RET_WIN_BUF_CHARTABSIZE	charset.c	757;"	d	file:
REX_ALL	vim.h	1028;"	d
REX_SET	vim.h	1026;"	d
REX_USE	vim.h	1027;"	d
RE_AUTO	vim.h	1022;"	d
RE_BOF	regexp_bt.c	222;"	d	file:
RE_BOTH	vim.h	1015;"	d
RE_COL	regexp_bt.c	227;"	d	file:
RE_COMPOSING	regexp_bt.c	232;"	d	file:
RE_EOF	regexp_bt.c	223;"	d	file:
RE_LAST	vim.h	1016;"	d
RE_LNUM	regexp_bt.c	226;"	d	file:
RE_MAGIC	vim.h	1019;"	d
RE_MARK	regexp_bt.c	230;"	d	file:
RE_SEARCH	vim.h	1013;"	d
RE_STRICT	vim.h	1021;"	d
RE_STRING	vim.h	1020;"	d
RE_SUBST	vim.h	1014;"	d
RE_VCOL	regexp_bt.c	228;"	d	file:
RE_VISUAL	regexp_bt.c	231;"	d	file:
RF_HASNL	regexp.c	287;"	d	file:
RF_ICASE	regexp.c	285;"	d	file:
RF_ICOMBINE	regexp.c	288;"	d	file:
RF_LOOKBH	regexp.c	289;"	d	file:
RF_NOICASE	regexp.c	286;"	d	file:
RGB	gui_mac.c	174;"	d	file:
RGB	gui_photon.c	38;"	d	file:
RGB	term.c	6157;"	d	file:
RGB	term.c	6160;"	d	file:
RIGHTMOST_BUTTON_PRESSED	os_mswin.c	52;"	d	file:
RIGHTMOST_BUTTON_PRESSED	os_win32.c	62;"	d	file:
RI_ALPHA	regexp.c	226;"	d	file:
RI_DIGIT	regexp.c	221;"	d	file:
RI_HEAD	regexp.c	225;"	d	file:
RI_HEX	regexp.c	222;"	d	file:
RI_LOWER	regexp.c	227;"	d	file:
RI_OCTAL	regexp.c	223;"	d	file:
RI_UPPER	regexp.c	228;"	d	file:
RI_WHITE	regexp.c	229;"	d	file:
RI_WORD	regexp.c	224;"	d	file:
RL_MEMSET	drawscreen.c	1111;"	d	file:
RM_ABBR	getchar.c	79;"	d	file:
RM_NONE	getchar.c	77;"	d	file:
RM_SCRIPT	getchar.c	78;"	d	file:
RM_YES	getchar.c	76;"	d	file:
ROOT_UID	vim.h	81;"	d
ROOT_UID	vim.h	87;"	d
ROT13	ascii.h	101;"	d
ROT13	ascii.h	22;"	d
ROTL	evalfunc.c	5270;"	d	file:
ROTL	evalfunc.c	5383;"	d	file:
ROTR	sha256.c	83;"	d	file:
ROWS_AVAIL	window.c	68;"	d	file:
RP_DISCARD	ex_eval.c	738;"	d	file:
RP_MAKE	ex_eval.c	736;"	d	file:
RP_RESUME	ex_eval.c	737;"	d	file:
RSTRING_LEN	if_ruby.c	147;"	d	file:
RSTRING_PTR	if_ruby.c	150;"	d	file:
RS_BEHIND1	regexp_bt.c	/^    , RS_BEHIND1	\/\/ BEHIND \/ NOBEHIND matching rest$/;"	e	enum:regstate_E	file:
RS_BEHIND2	regexp_bt.c	/^    , RS_BEHIND2	\/\/ BEHIND \/ NOBEHIND matching behind part$/;"	e	enum:regstate_E	file:
RS_BRANCH	regexp_bt.c	/^    , RS_BRANCH		\/\/ BRANCH$/;"	e	enum:regstate_E	file:
RS_BRCPLX_LONG	regexp_bt.c	/^    , RS_BRCPLX_LONG	\/\/ BRACE_COMPLEX and trying longest match$/;"	e	enum:regstate_E	file:
RS_BRCPLX_MORE	regexp_bt.c	/^    , RS_BRCPLX_MORE	\/\/ BRACE_COMPLEX and trying one more match$/;"	e	enum:regstate_E	file:
RS_BRCPLX_SHORT	regexp_bt.c	/^    , RS_BRCPLX_SHORT	\/\/ BRACE_COMPLEX and trying shortest match$/;"	e	enum:regstate_E	file:
RS_FAIL	gui_gtk_x11.c	1382;"	d	file:
RS_MCLOSE	regexp_bt.c	/^    , RS_MCLOSE		\/\/ MCLOSE + [0-9]$/;"	e	enum:regstate_E	file:
RS_MOPEN	regexp_bt.c	/^    , RS_MOPEN		\/\/ MOPEN + [0-9]$/;"	e	enum:regstate_E	file:
RS_NOMATCH	regexp_bt.c	/^    , RS_NOMATCH	\/\/ NOMATCH$/;"	e	enum:regstate_E	file:
RS_NONE	gui_gtk_x11.c	1380;"	d	file:
RS_NOPEN	regexp_bt.c	/^    RS_NOPEN = 0	\/\/ NOPEN and NCLOSE$/;"	e	enum:regstate_E	file:
RS_OK	gui_gtk_x11.c	1381;"	d	file:
RS_STAR_LONG	regexp_bt.c	/^    , RS_STAR_LONG	\/\/ STAR\/PLUS\/BRACE_SIMPLE longest match$/;"	e	enum:regstate_E	file:
RS_STAR_SHORT	regexp_bt.c	/^    , RS_STAR_SHORT	\/\/ STAR\/PLUS\/BRACE_SIMPLE shortest match$/;"	e	enum:regstate_E	file:
RS_ZCLOSE	regexp_bt.c	/^    , RS_ZCLOSE		\/\/ ZCLOSE + [0-9]$/;"	e	enum:regstate_E	file:
RS_ZOPEN	regexp_bt.c	/^    , RS_ZOPEN		\/\/ ZOPEN + [0-9]$/;"	e	enum:regstate_E	file:
RUBYEXTERN	if_ruby.c	28;"	d	file:
RUBYEXTERN	if_ruby.c	32;"	d	file:
RUBY_DATA_FUNC	if_ruby.c	179;"	d	file:
RUBY_EXPORT	if_ruby.c	64;"	d	file:
RUBY_PROC	if_ruby.c	164;"	d	file:
RUBY_PROC	if_ruby.c	169;"	d	file:
RULER_BUF_LEN	drawscreen.c	615;"	d	file:
RUNTIME_DIRNAME	feature.h	873;"	d
R_OK	vim.h	1571;"	d
RangeAppend	if_py_both.h	/^RangeAppend(RangeObject *self, PyObject *args)$/;"	f
RangeAsItem	if_python3.c	/^RangeAsItem(PyObject *self, Py_ssize_t n, PyObject *val)$/;"	f	file:
RangeAsMapping	if_py_both.h	/^static PyMappingMethods RangeAsMapping;$/;"	v
RangeAsMapping	if_python3.c	/^static PyMappingMethods RangeAsMapping = {$/;"	v	file:
RangeAsSeq	if_py_both.h	/^static PySequenceMethods RangeAsSeq;$/;"	v
RangeAsSeq	if_python.c	/^static PySequenceMethods RangeAsSeq = {$/;"	v	file:
RangeAsSeq	if_python3.c	/^static PySequenceMethods RangeAsSeq = {$/;"	v	file:
RangeAsSlice	if_python3.c	/^RangeAsSlice(PyObject *self, Py_ssize_t lo, Py_ssize_t hi, PyObject *val)$/;"	f	file:
RangeAsSubscript	if_python3.c	/^RangeAsSubscript(PyObject *self, PyObject *idx, PyObject *val)$/;"	f	file:
RangeAssItem	if_python.c	/^RangeAssItem(PyObject *self, PyInt n, PyObject *val)$/;"	f	file:
RangeAssSlice	if_python.c	/^RangeAssSlice(PyObject *self, PyInt lo, PyInt hi, PyObject *val)$/;"	f	file:
RangeAttrs	if_py_both.h	/^static char *RangeAttrs[] = {$/;"	v
RangeClear	if_py_both.h	/^RangeClear(RangeObject *self)$/;"	f
RangeDestructor	if_py_both.h	/^RangeDestructor(RangeObject *self)$/;"	f
RangeDir	if_py_both.h	/^RangeDir(PyObject *self)$/;"	f
RangeEnd	if_py_both.h	/^static PyInt RangeEnd;$/;"	v
RangeGetattr	if_python.c	/^RangeGetattr(PyObject *self, char *name)$/;"	f	file:
RangeGetattro	if_python3.c	/^RangeGetattro(PyObject *self, PyObject *nameobj)$/;"	f	file:
RangeItem	if_py_both.h	/^RangeItem(RangeObject *self, PyInt n)$/;"	f
RangeLength	if_py_both.h	/^RangeLength(RangeObject *self)$/;"	f
RangeMethods	if_py_both.h	/^static struct PyMethodDef RangeMethods[] = {$/;"	v	typeref:struct:PyMethodDef
RangeNew	if_py_both.h	/^RangeNew(buf_T *buf, PyInt start, PyInt end)$/;"	f
RangeObject	if_py_both.h	/^} RangeObject;$/;"	t	typeref:struct:__anon166
RangeRepr	if_py_both.h	/^RangeRepr(RangeObject *self)$/;"	f
RangeSlice	if_py_both.h	/^RangeSlice(RangeObject *self, PyInt lo, PyInt hi)$/;"	f
RangeStart	if_py_both.h	/^static PyInt RangeStart;$/;"	v
RangeSubscript	if_python3.c	/^RangeSubscript(PyObject *self, PyObject* idx)$/;"	f	file:
RangeTraverse	if_py_both.h	/^RangeTraverse(RangeObject *self, visitproc visit, void *arg)$/;"	f
RangeType	if_py_both.h	/^static PyTypeObject RangeType;$/;"	v
RangeType_Check	if_python.c	1220;"	d	file:
RangeType_Check	if_python3.c	1182;"	d	file:
RealWaitForChar	os_unix.c	/^RealWaitForChar(int fd, long msec, int *check_for_gpm UNUSED, int *interrupted)$/;"	f
RealWaitForChar	os_vms.c	/^RealWaitForChar($/;"	f
Realize	gui_at_sb.c	/^Realize($/;"	f	file:
Red	gui_mac.c	175;"	d	file:
Redisplay	gui_at_sb.c	/^Redisplay(Widget w, XEvent *event, Region region)$/;"	f	file:
Redisplay	gui_xmebw.c	/^Redisplay(Widget w, XEvent *event, Region region)$/;"	f	file:
RedrawingDisabled	globals.h	/^EXTERN int	RedrawingDisabled INIT(= 0);$/;"	v
Regions	os_win32.c	/^    PSMALL_RECT			Regions;$/;"	m	struct:ConsoleBufferStruct	file:
Release	if_ole.h	/^	ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )($/;"	m	struct:IVimVtbl
RepeatNotify	gui_at_sb.c	/^RepeatNotify(XtPointer client_data, XtIntervalId *idp UNUSED)$/;"	f	file:
Reset	if_cscope.h	/^typedef enum { Add, Find, Help, Kill, Reset, Show } csid_e;$/;"	e	enum:__anon148
ResetRedobuff	getchar.c	/^ResetRedobuff(void)$/;"	f
Resize	gui_at_sb.c	/^Resize(Widget w)$/;"	f	file:
ResizeConBuf	os_win32.c	/^ResizeConBuf($/;"	f	file:
ResizeConBufAndWindow	os_win32.c	/^ResizeConBufAndWindow($/;"	f	file:
ResizeWindow	os_win32.c	/^ResizeWindow($/;"	f	file:
RestoreConsoleBuffer	os_win32.c	/^RestoreConsoleBuffer($/;"	f	file:
RevOut	gui_w32.c	/^RevOut( HDC s_hdc,$/;"	f	file:
Rows	globals.h	/^EXTERN long	Rows			\/\/ nr of rows in the screen$/;"	v
S0	sha256.c	85;"	d	file:
S1	sha256.c	86;"	d	file:
S2	sha256.c	88;"	d	file:
S3	sha256.c	89;"	d	file:
SAL_COLLAPSE	spellfile.c	267;"	d	file:
SAL_F0LLOWUP	spellfile.c	266;"	d	file:
SAL_REM_ACCENTS	spellfile.c	268;"	d	file:
SAVE_RESTORE_BOTH	vim.h	2652;"	d
SAVE_RESTORE_ICON	vim.h	2651;"	d
SAVE_RESTORE_TITLE	vim.h	2650;"	d
SAVE_YOURSELF_IDX	gui_x11.c	90;"	d	file:
SA_ONSTACK_COMPATIBILITY	vim.h	84;"	d
SBAR_BOTTOM	gui.h	125;"	d
SBAR_HORIZ	gui.h	129;"	d
SBAR_LEFT	gui.h	123;"	d
SBAR_NONE	gui.h	122;"	d
SBAR_RIGHT	gui.h	124;"	d
SBAR_VERT	gui.h	128;"	d
SBLOCKSIZE	spellfile.c	1843;"	d	file:
SB_CLEAR_ALL	message.c	/^    SB_CLEAR_ALL,$/;"	e	enum:__anon72	file:
SB_CLEAR_CMDLINE_BUSY	message.c	/^    SB_CLEAR_CMDLINE_BUSY,$/;"	e	enum:__anon72	file:
SB_CLEAR_CMDLINE_DONE	message.c	/^    SB_CLEAR_CMDLINE_DONE$/;"	e	enum:__anon72	file:
SB_CLEAR_NONE	message.c	/^    SB_CLEAR_NONE = 0,$/;"	e	enum:__anon72	file:
SB_DEFAULT_WIDTH	gui.h	132;"	d
SCANF_DECIMAL_LONG_U	vim.h	344;"	d
SCANF_DECIMAL_LONG_U	vim.h	357;"	d
SCANF_HEX_LONG_U	vim.h	343;"	d
SCANF_HEX_LONG_U	vim.h	356;"	d
SCHEME_BYTE_STRINGP	if_mzsch.h	46;"	d
SCHEME_BYTE_STRLEN_VAL	if_mzsch.h	43;"	d
SCHEME_STRINGP	if_mzsch.h	29;"	d
SCHEME_VIMBUFFERP	if_mzsch.c	67;"	d	file:
SCHEME_VIMWINDOWP	if_mzsch.c	68;"	d	file:
SCORE_BIG	spellsuggest.c	121;"	d	file:
SCORE_COMMON1	spellsuggest.c	108;"	d	file:
SCORE_COMMON2	spellsuggest.c	109;"	d	file:
SCORE_COMMON3	spellsuggest.c	110;"	d	file:
SCORE_DEL	spellsuggest.c	96;"	d	file:
SCORE_DELCOMP	spellsuggest.c	98;"	d	file:
SCORE_DELDUP	spellsuggest.c	97;"	d	file:
SCORE_EDIT_MIN	spellsuggest.c	127;"	d	file:
SCORE_FILE	spellsuggest.c	104;"	d	file:
SCORE_ICASE	spellsuggest.c	87;"	d	file:
SCORE_INS	spellsuggest.c	99;"	d	file:
SCORE_INSCOMP	spellsuggest.c	101;"	d	file:
SCORE_INSDUP	spellsuggest.c	100;"	d	file:
SCORE_LIMITMAX	spellsuggest.c	123;"	d	file:
SCORE_MAXINIT	spellsuggest.c	105;"	d	file:
SCORE_MAXMAX	spellsuggest.c	122;"	d	file:
SCORE_NONWORD	spellsuggest.c	102;"	d	file:
SCORE_RARE	spellsuggest.c	89;"	d	file:
SCORE_REGION	spellsuggest.c	88;"	d	file:
SCORE_REP	spellsuggest.c	92;"	d	file:
SCORE_SFMAX1	spellsuggest.c	117;"	d	file:
SCORE_SFMAX2	spellsuggest.c	118;"	d	file:
SCORE_SFMAX3	spellsuggest.c	119;"	d	file:
SCORE_SIMILAR	spellsuggest.c	94;"	d	file:
SCORE_SPLIT	spellsuggest.c	85;"	d	file:
SCORE_SPLIT_NO	spellsuggest.c	86;"	d	file:
SCORE_SUBCOMP	spellsuggest.c	95;"	d	file:
SCORE_SUBST	spellsuggest.c	93;"	d	file:
SCORE_SWAP	spellsuggest.c	90;"	d	file:
SCORE_SWAP3	spellsuggest.c	91;"	d	file:
SCORE_THRES2	spellsuggest.c	111;"	d	file:
SCORE_THRES3	spellsuggest.c	112;"	d	file:
SCRAPTEXTFLAVOR	gui_mac.c	52;"	d	file:
SCRIPT_ITEM	globals.h	289;"	d
SCRIPT_SV	globals.h	290;"	d
SCRIPT_VARS	globals.h	291;"	d
SCRIPT_VERSION_VIM9	structs.h	71;"	d
SCROLL_PAST_END	gui.c	60;"	d	file:
SCTX_INIT	optiondefs.h	276;"	d
SCTX_INIT	optiondefs.h	278;"	d
SEARCH_COL	vim.h	911;"	d
SEARCH_ECHO	vim.h	900;"	d
SEARCH_END	vim.h	905;"	d
SEARCH_HIS	vim.h	904;"	d
SEARCH_HL_PRIORITY	highlight.c	3651;"	d	file:
SEARCH_KEEP	vim.h	909;"	d
SEARCH_MARK	vim.h	908;"	d
SEARCH_MSG	vim.h	901;"	d
SEARCH_NFMSG	vim.h	902;"	d
SEARCH_NOOF	vim.h	906;"	d
SEARCH_OPT	vim.h	903;"	d
SEARCH_PEEK	vim.h	910;"	d
SEARCH_REV	vim.h	899;"	d
SEARCH_START	vim.h	907;"	d
SEARCH_STAT_BUF_LEN	search.c	1208;"	d	file:
SEA_DIALOG	vim.h	1227;"	d
SEA_NONE	vim.h	1226;"	d
SEA_QUIT	vim.h	1228;"	d
SEA_RECOVER	vim.h	1229;"	d
SECURITY_INFORMATION	os_mswin.c	/^typedef int SECURITY_INFORMATION;$/;"	t	file:
SECURITY_INFORMATION	os_win32.c	/^typedef int SECURITY_INFORMATION;$/;"	t	file:
SEEK_END	misc1.c	2234;"	d	file:
SEEK_END	os_unix.c	6410;"	d	file:
SEEK_SET	misc1.c	2231;"	d	file:
SEEK_SET	os_unix.c	6407;"	d	file:
SELECTMODE	vim.h	698;"	d
SELECT_CLEARED	vim.h	2031;"	d
SELECT_DONE	vim.h	2033;"	d
SELECT_IN_PROGRESS	vim.h	2032;"	d
SELECT_MODE_CHAR	vim.h	2035;"	d
SELECT_MODE_LINE	vim.h	2037;"	d
SELECT_MODE_WORD	vim.h	2036;"	d
SEL_FILE_CANCEL	gui_at_fs.c	73;"	d	file:
SEL_FILE_NULL	gui_at_fs.c	75;"	d	file:
SEL_FILE_OK	gui_at_fs.c	74;"	d	file:
SEL_FILE_TEXT	gui_at_fs.c	76;"	d	file:
SEND_MSEC_POLL	if_xcmdsrv.c	560;"	d	file:
SESSION_FILE	feature.h	785;"	d
SETJMP	os_unix.h	479;"	d
SETJMP	os_unix.h	483;"	d
SETWSIZE	vim.h	693;"	d
SET_CHARTAB	charset.c	23;"	d	file:
SET_FLAG	undo.c	2021;"	d	file:
SET_INVALID_PARAM_HANDLER	os_win32.c	2083;"	d	file:
SET_INVALID_PARAM_HANDLER	os_win32.c	2086;"	d	file:
SET_NUM_MOUSE_CLICKS	vim.h	1864;"	d
SET_SIG_ALARM	os_unix.c	175;"	d	file:
SE_OBJECT_TYPE	os_win32.c	/^typedef int SE_OBJECT_TYPE;$/;"	t	file:
SFDir	gui_at_fs.c	/^} SFDir;$/;"	t	typeref:struct:__anon32	file:
SFEntry	gui_at_fs.c	/^} SFEntry;$/;"	t	typeref:struct:__anon31	file:
SFLogin	gui_at_fs.c	/^} SFLogin;$/;"	t	typeref:struct:__anon33	file:
SFNAME	regexp_bt.c	177;"	d	file:
SF_CCOMMENT	syntax.c	89;"	d	file:
SF_DEFAULT_FONT	gui_at_fs.c	997;"	d	file:
SF_DEFAULT_FONT	gui_at_fs.c	999;"	d	file:
SF_DO_NOT_SCROLL	gui_at_fs.c	79;"	d	file:
SF_DO_SCROLL	gui_at_fs.c	78;"	d	file:
SF_MATCH	syntax.c	90;"	d	file:
SFaboveAndBelowText	gui_at_fs.c	/^static int	SFaboveAndBelowText = 2;$/;"	v	file:
SFapp	gui_at_fs.c	/^static XtAppContext SFapp;$/;"	v	file:
SFback	gui_at_fs.c	/^static Pixel	SFfore, SFback;$/;"	v	file:
SFbesideText	gui_at_fs.c	/^static int	SFbesideText = 3;$/;"	v	file:
SFbuttonPressList	gui_at_fs.c	/^SFbuttonPressList($/;"	f	file:
SFbuttonPressed	gui_at_fs.c	/^static int	SFbuttonPressed = 0;$/;"	v	file:
SFbuttonReleaseList	gui_at_fs.c	/^SFbuttonReleaseList($/;"	f	file:
SFcancelCallback	gui_at_fs.c	/^SFcancelCallback(Widget w UNUSED, XtPointer cl UNUSED, XtPointer cd UNUSED)$/;"	f	file:
SFcancelSelect	gui_at_fs.c	/^static XtCallbackRec SFcancelSelect[] =$/;"	v	file:
SFcharAscent	gui_at_fs.c	/^static int	SFcharWidth, SFcharAscent, SFcharHeight;$/;"	v	file:
SFcharHeight	gui_at_fs.c	/^static int	SFcharWidth, SFcharAscent, SFcharHeight;$/;"	v	file:
SFcharWidth	gui_at_fs.c	/^static int	SFcharWidth, SFcharAscent, SFcharHeight;$/;"	v	file:
SFcharsPerEntry	gui_at_fs.c	/^static int	SFcharsPerEntry = 15;$/;"	v	file:
SFchdir	gui_at_fs.c	/^SFchdir(char *path)$/;"	f	file:
SFcheckDir	gui_at_fs.c	/^SFcheckDir(int n, SFDir *dir)$/;"	f	file:
SFcheckFiles	gui_at_fs.c	/^SFcheckFiles(SFDir *dir)$/;"	f	file:
SFclearList	gui_at_fs.c	/^SFclearList(int n, int doScroll)$/;"	f	file:
SFcompareEntries	gui_at_fs.c	/^SFcompareEntries(const void *p, const void *q)$/;"	f	file:
SFcompareLogins	gui_at_fs.c	/^SFcompareLogins(const void *p, const void *q)$/;"	f	file:
SFcompletionSegs	gui_at_fs.c	/^static XSegment SFsegs[2], SFcompletionSegs[2];$/;"	v	file:
SFcreateGC	gui_at_fs.c	/^SFcreateGC(void)$/;"	f	file:
SFcreateWidgets	gui_at_fs.c	/^SFcreateWidgets($/;"	f	file:
SFcurrentDir	gui_at_fs.c	/^		SFcurrentDir[MAXPATHL];$/;"	v	file:
SFcurrentInvert	gui_at_fs.c	/^static int	SFcurrentInvert[3] = { -1, -1, -1 };$/;"	v	file:
SFcurrentListY	gui_at_fs.c	/^static int SFcurrentListY;$/;"	v	file:
SFcurrentPath	gui_at_fs.c	/^		SFcurrentPath[MAXPATHL],$/;"	v	file:
SFdeleteEntry	gui_at_fs.c	/^SFdeleteEntry(SFDir *dir, SFEntry *entry)$/;"	f	file:
SFdirEnd	gui_at_fs.c	/^static int	SFdirEnd;$/;"	v	file:
SFdirModTimer	gui_at_fs.c	/^SFdirModTimer(XtPointer cl UNUSED, XtIntervalId *id UNUSED)$/;"	f	file:
SFdirModTimerId	gui_at_fs.c	/^static XtIntervalId SFdirModTimerId;$/;"	v	file:
SFdirPtr	gui_at_fs.c	/^static int	SFdirPtr;$/;"	v	file:
SFdirs	gui_at_fs.c	/^static SFDir	*SFdirs = NULL;$/;"	v	file:
SFdismissAction	gui_at_fs.c	/^SFdismissAction($/;"	f	file:
SFdisplay	gui_at_fs.c	/^static Display	*SFdisplay;$/;"	v	file:
SFdoNotTouchDirPtr	gui_at_fs.c	/^static int	SFdoNotTouchDirPtr = 0;$/;"	v	file:
SFdoNotTouchVorigin	gui_at_fs.c	/^static int	SFdoNotTouchVorigin = 0;$/;"	v	file:
SFdrawList	gui_at_fs.c	/^SFdrawList(int n, int doScroll)$/;"	f	file:
SFdrawLists	gui_at_fs.c	/^SFdrawLists(int doScroll)$/;"	f	file:
SFdrawStrings	gui_at_fs.c	/^SFdrawStrings($/;"	f	file:
SFenterList	gui_at_fs.c	/^SFenterList(Widget w UNUSED, int n, XEnterWindowEvent *event)$/;"	f	file:
SFentryHeight	gui_at_fs.c	/^static int	SFentryWidth, SFentryHeight;$/;"	v	file:
SFentryWidth	gui_at_fs.c	/^static int	SFentryWidth, SFentryHeight;$/;"	v	file:
SFexpand	gui_at_fs.c	/^SFexpand(char *str)$/;"	f	file:
SFexposeList	gui_at_fs.c	/^SFexposeList($/;"	f	file:
SFfindFile	gui_at_fs.c	/^SFfindFile(SFDir *dir, char *str)$/;"	f	file:
SFfindHomeDir	gui_at_fs.c	/^SFfindHomeDir(char *begin, char *end)$/;"	f	file:
SFfont	gui_at_fs.c	/^static XFontSet SFfont;$/;"	v	file:
SFfont	gui_at_fs.c	/^static XFontStruct *SFfont;$/;"	v	file:
SFfore	gui_at_fs.c	/^static Pixel	SFfore, SFback;$/;"	v	file:
SFfree	gui_at_fs.c	/^SFfree(int i)$/;"	f	file:
SFfunc	gui_at_fs.c	/^static int	(*SFfunc)();$/;"	v	file:
SFgetDir	gui_at_fs.c	/^SFgetDir($/;"	f	file:
SFgetHomeDirs	gui_at_fs.c	/^SFgetHomeDirs(void)$/;"	f	file:
SFgetText	gui_at_fs.c	/^SFgetText(void)$/;"	f	file:
SFhAreaSelectedCallback	gui_at_fs.c	/^SFhAreaSelectedCallback(Widget w, XtPointer n, XtPointer pnew)$/;"	f	file:
SFhScrollWidth	gui_at_fs.c	/^static int	SFpathScrollWidth, SFvScrollHeight, SFhScrollWidth;$/;"	v	file:
SFhSliderMovedCallback	gui_at_fs.c	/^SFhSliderMovedCallback(Widget w UNUSED, XtPointer n, XtPointer nw)$/;"	f	file:
SFhomeDir	gui_at_fs.c	/^static SFDir	SFrootDir, SFhomeDir;$/;"	v	file:
SFinitFont	gui_at_fs.c	/^SFinitFont(void)$/;"	f	file:
SFinvertEntry	gui_at_fs.c	/^SFinvertEntry(int n)$/;"	f	file:
SFinvertGC	gui_at_fs.c	/^static GC SFlineGC, SFscrollGC, SFinvertGC, SFtextGC;$/;"	v	file:
SFleaveList	gui_at_fs.c	/^SFleaveList(Widget w UNUSED, int n, XEvent *event UNUSED)$/;"	f	file:
SFlineGC	gui_at_fs.c	/^static GC SFlineGC, SFscrollGC, SFinvertGC, SFtextGC;$/;"	v	file:
SFlineToTextH	gui_at_fs.c	/^static int	SFlineToTextH = 3;$/;"	v	file:
SFlineToTextV	gui_at_fs.c	/^static int	SFlineToTextV = 3;$/;"	v	file:
SFlistSize	gui_at_fs.c	/^static int	SFlistSize = 10;$/;"	v	file:
SFlogins	gui_at_fs.c	/^static SFLogin	*SFlogins;$/;"	v	file:
SFlowerY	gui_at_fs.c	/^static int	SFupperX, SFlowerY, SFupperY;$/;"	v	file:
SFmodVerifyCallback	gui_at_fs.c	/^SFmodVerifyCallback($/;"	f	file:
SFmotionList	gui_at_fs.c	/^SFmotionList(Widget w UNUSED, int n, XMotionEvent *event)$/;"	f	file:
SFnewInvertEntry	gui_at_fs.c	/^SFnewInvertEntry(int n, XMotionEvent *event)$/;"	f	file:
SFokCallback	gui_at_fs.c	/^SFokCallback(Widget w UNUSED, XtPointer cl UNUSED, XtPointer cd UNUSED)$/;"	f	file:
SFokSelect	gui_at_fs.c	/^static XtCallbackRec SFokSelect[] =$/;"	v	file:
SFpathAreaSelectedCallback	gui_at_fs.c	/^SFpathAreaSelectedCallback($/;"	f	file:
SFpathScrollWidth	gui_at_fs.c	/^static int	SFpathScrollWidth, SFvScrollHeight, SFhScrollWidth;$/;"	v	file:
SFpathSliderMovedCallback	gui_at_fs.c	/^SFpathSliderMovedCallback($/;"	f	file:
SFprepareToReturn	gui_at_fs.c	/^SFprepareToReturn(void)$/;"	f	file:
SFreplaceText	gui_at_fs.c	/^SFreplaceText(SFDir *dir, char *str)$/;"	f	file:
SFrootDir	gui_at_fs.c	/^static SFDir	SFrootDir, SFhomeDir;$/;"	v	file:
SFscrollGC	gui_at_fs.c	/^static GC SFlineGC, SFscrollGC, SFinvertGC, SFtextGC;$/;"	v	file:
SFscrollTimer	gui_at_fs.c	/^SFscrollTimer(XtPointer p, XtIntervalId *id UNUSED)$/;"	f	file:
SFscrollTimerId	gui_at_fs.c	/^static XtIntervalId SFscrollTimerId;$/;"	v	file:
SFscrollTimerInterval	gui_at_fs.c	/^SFscrollTimerInterval(void)$/;"	f	file:
SFsegs	gui_at_fs.c	/^static XSegment SFsegs[2], SFcompletionSegs[2];$/;"	v	file:
SFsetColors	gui_at_fs.c	/^SFsetColors($/;"	f	file:
SFsetText	gui_at_fs.c	/^SFsetText(char *path)$/;"	f	file:
SFstartDir	gui_at_fs.c	/^static char	SFstartDir[MAXPATHL],$/;"	v	file:
SFstatAndCheck	gui_at_fs.c	/^SFstatAndCheck(SFDir *dir, SFEntry *entry)$/;"	f	file:
SFstatChar	gui_at_fs.c	/^SFstatChar(stat_T *statBuf)$/;"	f	file:
SFstatus	gui_at_fs.c	/^static int	SFstatus = SEL_FILE_NULL;$/;"	v	file:
SFstrdup	gui_at_fs.c	/^SFstrdup(char **s1, char *s2)$/;"	f	file:
SFtextBuffer	gui_at_fs.c	/^static char	SFtextBuffer[MAXPATHL*sizeof(wchar_t)];$/;"	v	file:
SFtextBuffer	gui_at_fs.c	/^static char	SFtextBuffer[MAXPATHL];$/;"	v	file:
SFtextChanged	gui_at_fs.c	/^SFtextChanged(void)$/;"	f	file:
SFtextGC	gui_at_fs.c	/^static GC SFlineGC, SFscrollGC, SFinvertGC, SFtextGC;$/;"	v	file:
SFtextPos	gui_at_fs.c	/^static XawTextPosition SFtextPos;$/;"	v	file:
SFtextX	gui_at_fs.c	/^static int	SFtextX, SFtextYoffset;$/;"	v	file:
SFtextYoffset	gui_at_fs.c	/^static int	SFtextX, SFtextYoffset;$/;"	v	file:
SFtwiddle	gui_at_fs.c	/^static int	SFtwiddle = 0;$/;"	v	file:
SFunreadableDir	gui_at_fs.c	/^SFunreadableDir(SFDir *dir)$/;"	f	file:
SFunselect	gui_at_fs.c	/^SFunselect(void)$/;"	f	file:
SFupdatePath	gui_at_fs.c	/^SFupdatePath(void)$/;"	f	file:
SFupperX	gui_at_fs.c	/^static int	SFupperX, SFlowerY, SFupperY;$/;"	v	file:
SFupperY	gui_at_fs.c	/^static int	SFupperX, SFlowerY, SFupperY;$/;"	v	file:
SFvAreaSelectedCallback	gui_at_fs.c	/^SFvAreaSelectedCallback(Widget w, XtPointer n, XtPointer pnew)$/;"	f	file:
SFvFloatSliderMovedCallback	gui_at_fs.c	/^SFvFloatSliderMovedCallback(Widget w, XtPointer n, XtPointer fnew)$/;"	f	file:
SFvScrollHeight	gui_at_fs.c	/^static int	SFpathScrollWidth, SFvScrollHeight, SFhScrollWidth;$/;"	v	file:
SFvSliderMovedCallback	gui_at_fs.c	/^SFvSliderMovedCallback(Widget w UNUSED, int n, int nw)$/;"	f	file:
SFwmDeleteWindow	gui_at_fs.c	/^static Atom	SFwmDeleteWindow;$/;"	v	file:
SFworkProc	gui_at_fs.c	/^SFworkProc(void)$/;"	f	file:
SFworkProcAdded	gui_at_fs.c	/^static int	SFworkProcAdded = 0;$/;"	v	file:
SFwriteStatChar	gui_at_fs.c	/^SFwriteStatChar($/;"	f	file:
SGN_KEY_OFF	structs.h	813;"	d
SG_CTERM	highlight.c	18;"	d	file:
SG_GUI	highlight.c	19;"	d	file:
SG_LINK	highlight.c	20;"	d	file:
SG_TERM	highlight.c	17;"	d	file:
SHAPE_BLOCK	structs.h	3535;"	d
SHAPE_CURSOR	structs.h	3543;"	d
SHAPE_HOR	structs.h	3536;"	d
SHAPE_IDX_C	structs.h	3520;"	d
SHAPE_IDX_CI	structs.h	3521;"	d
SHAPE_IDX_CLINE	structs.h	3525;"	d
SHAPE_IDX_COUNT	structs.h	3533;"	d
SHAPE_IDX_CR	structs.h	3522;"	d
SHAPE_IDX_I	structs.h	3518;"	d
SHAPE_IDX_MORE	structs.h	3530;"	d
SHAPE_IDX_MOREL	structs.h	3531;"	d
SHAPE_IDX_N	structs.h	3516;"	d
SHAPE_IDX_O	structs.h	3523;"	d
SHAPE_IDX_R	structs.h	3519;"	d
SHAPE_IDX_SDRAG	structs.h	3527;"	d
SHAPE_IDX_SM	structs.h	3532;"	d
SHAPE_IDX_STATUS	structs.h	3526;"	d
SHAPE_IDX_V	structs.h	3517;"	d
SHAPE_IDX_VDRAG	structs.h	3529;"	d
SHAPE_IDX_VE	structs.h	3524;"	d
SHAPE_IDX_VSEP	structs.h	3528;"	d
SHAPE_MOUSE	structs.h	3542;"	d
SHAPE_VER	structs.h	3537;"	d
SHARED_MASK	spellfile.c	1633;"	d	file:
SHELL_COOKED	vim.h	965;"	d
SHELL_DOOUT	vim.h	966;"	d
SHELL_ESC_CHARS	vim.h	308;"	d
SHELL_ESC_CHARS	vim.h	311;"	d
SHELL_EXPAND	vim.h	964;"	d
SHELL_FILTER	vim.h	963;"	d
SHELL_READ	vim.h	968;"	d
SHELL_SILENT	vim.h	967;"	d
SHELL_SPECIAL	os_unix.c	6413;"	d	file:
SHELL_WRITE	vim.h	969;"	d
SHIFT	os_win32.c	841;"	d	file:
SHM_A	option.h	244;"	d
SHM_ALL	option.h	258;"	d
SHM_ATTENTION	option.h	251;"	d
SHM_COMPLETIONMENU	option.h	253;"	d
SHM_FILE	option.h	238;"	d
SHM_FILEINFO	option.h	255;"	d
SHM_INTRO	option.h	252;"	d
SHM_LAST	option.h	239;"	d
SHM_LINES	option.h	241;"	d
SHM_MOD	option.h	237;"	d
SHM_NEW	option.h	242;"	d
SHM_OVER	option.h	248;"	d
SHM_OVERALL	option.h	249;"	d
SHM_POSIX	option.h	257;"	d
SHM_RECORDING	option.h	254;"	d
SHM_RO	option.h	236;"	d
SHM_SEARCH	option.h	250;"	d
SHM_SEARCHCOUNT	option.h	256;"	d
SHM_TEXT	option.h	240;"	d
SHM_TRUNC	option.h	246;"	d
SHM_TRUNCALL	option.h	247;"	d
SHM_WRI	option.h	243;"	d
SHM_WRITE	option.h	245;"	d
SHORT	os_mswin.c	/^typedef int SHORT;$/;"	t	file:
SHORT	os_win32.c	/^typedef int SHORT;$/;"	t	file:
SHOWCMD_BUFLEN	normal.c	1729;"	d	file:
SHOWCMD_COLS	vim.h	1699;"	d
SHOWMATCH	vim.h	696;"	d
SHR	sha256.c	82;"	d	file:
SHUFFLE_XOSHIRO128STARSTAR	evalfunc.c	5277;"	d	file:
SHUFFLE_XOSHIRO128STARSTAR	evalfunc.c	5385;"	d	file:
SIDENT	regexp_bt.c	173;"	d	file:
SID_CARG	vim.h	1243;"	d
SID_CMDARG	vim.h	1242;"	d
SID_ENV	vim.h	1244;"	d
SID_ERROR	vim.h	1245;"	d
SID_MODELINE	vim.h	1241;"	d
SID_NONE	vim.h	1246;"	d
SIGDEFARG	if_cscope.c	/^sig_handler SIGDEFARG(sigarg)$/;"	f	file:
SIGDEFARG	os_mac.h	265;"	d
SIGDEFARG	os_unix.c	/^catch_sigint SIGDEFARG(sigarg)$/;"	f	file:
SIGDEFARG	os_unix.c	/^catch_sigpwr SIGDEFARG(sigarg)$/;"	f	file:
SIGDEFARG	os_unix.c	/^deathtrap SIGDEFARG(sigarg)$/;"	f	file:
SIGDEFARG	os_unix.c	/^sig_alarm SIGDEFARG(sigarg)$/;"	f	file:
SIGDEFARG	os_unix.c	/^sig_sysmouse SIGDEFARG(sigarg)$/;"	f	file:
SIGDEFARG	os_unix.c	/^sig_winch SIGDEFARG(sigarg)$/;"	f	file:
SIGDEFARG	os_unix.c	/^sigcont_handler SIGDEFARG(sigarg)$/;"	f	file:
SIGDEFARG	os_unix.h	102;"	d
SIGDEFARG	os_unix.h	107;"	d
SIGDEFARG	os_unix.h	98;"	d
SIGDUMMYARG	os_mac.h	268;"	d
SIGDUMMYARG	os_unix.h	103;"	d
SIGDUMMYARG	os_unix.h	108;"	d
SIGDUMMYARG	os_unix.h	99;"	d
SIGHAS3ARGS	os_unix.h	92;"	d
SIGHASARG	os_unix.h	88;"	d
SIGNAL_BLOCK	vim.h	2429;"	d
SIGNAL_UNBLOCK	vim.h	2430;"	d
SIGNCMD_DEFINE	sign.c	45;"	d	file:
SIGNCMD_JUMP	sign.c	55;"	d	file:
SIGNCMD_LAST	sign.c	57;"	d	file:
SIGNCMD_LIST	sign.c	49;"	d	file:
SIGNCMD_PLACE	sign.c	51;"	d	file:
SIGNCMD_UNDEFINE	sign.c	47;"	d	file:
SIGNCMD_UNPLACE	sign.c	53;"	d	file:
SIGN_ASPECT	gui_gtk_x11.c	6900;"	d	file:
SIGN_BYTE	vim.h	2292;"	d
SIGN_DEF_PRIO	structs.h	817;"	d
SIGN_HEIGHT	gui_gtk_x11.c	6899;"	d	file:
SIGN_WIDTH	gui_gtk_x11.c	6898;"	d	file:
SIGN_WIDTH	gui_x11.c	3211;"	d	file:
SIGPROTOARG	os_mac.h	262;"	d
SIGPROTOARG	os_unix.c	/^static RETSIGTYPE catch_sigint SIGPROTOARG;$/;"	v	file:
SIGPROTOARG	os_unix.c	/^static RETSIGTYPE catch_sigpwr SIGPROTOARG;$/;"	v	file:
SIGPROTOARG	os_unix.c	/^static RETSIGTYPE deathtrap SIGPROTOARG;$/;"	v	file:
SIGPROTOARG	os_unix.c	/^static RETSIGTYPE sig_alarm SIGPROTOARG;$/;"	v	file:
SIGPROTOARG	os_unix.c	/^static RETSIGTYPE sig_sysmouse SIGPROTOARG;$/;"	v	file:
SIGPROTOARG	os_unix.c	/^static RETSIGTYPE sig_winch SIGPROTOARG;$/;"	v	file:
SIGPROTOARG	os_unix.c	/^static RETSIGTYPE sigcont_handler SIGPROTOARG;$/;"	v	file:
SIGPROTOARG	os_unix.h	101;"	d
SIGPROTOARG	os_unix.h	106;"	d
SIGPROTOARG	os_unix.h	97;"	d
SIGRETURN	os_mac.h	273;"	d
SIGRETURN	os_vms_conf.h	78;"	d
SIGSET_DECL	os_unix.c	186;"	d	file:
SIGSET_DECL	os_unix.c	190;"	d	file:
SIGSTKSZ	os_unix.c	777;"	d	file:
SIGWINCH	os_unix.c	102;"	d	file:
SIGWINCH	os_unix.c	110;"	d	file:
SIG_ERR	os_unix.c	200;"	d	file:
SIMPLE	regexp_bt.c	238;"	d	file:
SIN_CHANGED	vim.h	1085;"	d
SIN_INSERT	vim.h	1086;"	d
SIN_UNDO	vim.h	1087;"	d
SIZE	gui_xmdlg.c	/^    SIZE,$/;"	e	enum:ListSpecifier	file:
SIZEOF_CSTR	hardcopy.c	1315;"	d	file:
SIZE_T	terminal.c	/^typedef int SIZE_T;$/;"	t	file:
SKIP_FOLLOWING_SLASHES	os_vms.c	86;"	d	file:
SKIP_STOP	netbeans.c	962;"	d	file:
SKWORD	regexp_bt.c	175;"	d	file:
SLF_POPUP	vim.h	591;"	d
SLF_RIGHTLEFT	vim.h	590;"	d
SMACK_LABEL_LEN	os_unix.c	42;"	d	file:
SMALLBUFSIZE	bufwrite.c	20;"	d	file:
SMALL_RECT	os_mswin.c	/^typedef int SMALL_RECT;$/;"	t	file:
SMALL_RECT	os_win32.c	/^typedef int SMALL_RECT;$/;"	t	file:
SMODE_CONT	gui_at_sb.h	135;"	d
SMODE_LINE_DOWN	gui_at_sb.h	139;"	d
SMODE_LINE_UP	gui_at_sb.h	138;"	d
SMODE_NONE	gui_at_sb.h	134;"	d
SMODE_PAGE_DOWN	gui_at_sb.h	137;"	d
SMODE_PAGE_UP	gui_at_sb.h	136;"	d
SM_CXPADDEDBORDER	os_win32.h	97;"	d
SNAP_AUCMD_IDX	structs.h	2887;"	d
SNAP_COUNT	structs.h	2888;"	d
SNAP_HELP_IDX	structs.h	2886;"	d
SNF_REQUIRED	spellfile.c	294;"	d	file:
SN_CHARFLAGS	spellfile.c	276;"	d	file:
SN_COMPOUND	spellfile.c	283;"	d	file:
SN_END	spellfile.c	292;"	d	file:
SN_INFO	spellfile.c	290;"	d	file:
SN_MAP	spellfile.c	282;"	d	file:
SN_MIDWORD	spellfile.c	277;"	d	file:
SN_NOBREAK	spellfile.c	285;"	d	file:
SN_NOCOMPOUNDSUGS	spellfile.c	291;"	d	file:
SN_NOSPLITSUGS	spellfile.c	289;"	d	file:
SN_PREFCOND	spellfile.c	278;"	d	file:
SN_REGION	spellfile.c	275;"	d	file:
SN_REP	spellfile.c	279;"	d	file:
SN_REPSAL	spellfile.c	287;"	d	file:
SN_SAL	spellfile.c	280;"	d	file:
SN_SOFO	spellfile.c	281;"	d	file:
SN_SUGFILE	spellfile.c	286;"	d	file:
SN_SYLLABLE	spellfile.c	284;"	d	file:
SN_WORDS	spellfile.c	288;"	d	file:
SOCK_ERRNO	channel.c	26;"	d	file:
SOCK_ERRNO	channel.c	48;"	d	file:
SOME_BUILTIN_TCAPS	feature.h	460;"	d
SOME_VALID	vim.h	585;"	d
SOPT_BOOL	vim.h	2478;"	d
SOPT_BUF	vim.h	2483;"	d
SOPT_GLOBAL	vim.h	2481;"	d
SOPT_NUM	vim.h	2479;"	d
SOPT_STRING	vim.h	2480;"	d
SOPT_UNSET	vim.h	2484;"	d
SOPT_WIN	vim.h	2482;"	d
SOURCING_LNUM	globals.h	277;"	d
SOURCING_NAME	globals.h	275;"	d
SPACE_FOR_ARGNR	buffer.c	3786;"	d	file:
SPACE_FOR_DIR	buffer.c	3785;"	d	file:
SPACE_FOR_FNAME	buffer.c	3784;"	d	file:
SPACE_IN_FILENAME	os_amiga.h	14;"	d
SPACE_IN_FILENAME	os_dos.h	131;"	d
SPACE_IN_FILENAME	os_mac.h	88;"	d
SPACE_IN_FILENAME	os_vms_conf.h	6;"	d
SPECIAL_WILDCHAR	os_unix.h	402;"	d
SPEC_ABUF	ex_docmd.c	8016;"	d	file:
SPEC_AFILE	ex_docmd.c	8014;"	d	file:
SPEC_AMATCH	ex_docmd.c	8018;"	d	file:
SPEC_CCWORD	ex_docmd.c	8004;"	d	file:
SPEC_CEXPR	ex_docmd.c	8006;"	d	file:
SPEC_CFILE	ex_docmd.c	8008;"	d	file:
SPEC_CLIENT	ex_docmd.c	8023;"	d	file:
SPEC_CWORD	ex_docmd.c	8002;"	d	file:
SPEC_HASH	ex_docmd.c	8000;"	d	file:
SPEC_PERC	ex_docmd.c	7998;"	d	file:
SPEC_SFILE	ex_docmd.c	8010;"	d	file:
SPEC_SFLNUM	ex_docmd.c	8020;"	d	file:
SPEC_SLNUM	ex_docmd.c	8012;"	d	file:
SPELL_ADD_BAD	spell.h	305;"	d
SPELL_ADD_GOOD	spell.h	304;"	d
SPELL_ADD_RARE	spell.h	306;"	d
SPELL_EXTERN	spell.h	285;"	d
SPELL_EXTERN	spell.h	288;"	d
SPELL_INIT	spell.h	286;"	d
SPELL_INIT	spell.h	289;"	d
SPELL_ISUPPER	spell.h	274;"	d
SPELL_ISUPPER	spell.h	277;"	d
SPELL_TOFOLD	spell.h	258;"	d
SPELL_TOFOLD	spell.h	261;"	d
SPELL_TOUPPER	spell.h	266;"	d
SPELL_TOUPPER	spell.h	269;"	d
SPI_GETWHEELSCROLLLINES	gui_w32.c	4223;"	d	file:
SPI_SETWHEELSCROLLLINES	gui_w32.c	4226;"	d	file:
SPLITMIX32	evalfunc.c	5271;"	d	file:
SPLITMIX32	evalfunc.c	5384;"	d	file:
SPL_FNAME_ADD	spell.h	135;"	d
SPL_FNAME_ADD	spell.h	139;"	d
SPL_FNAME_ASCII	spell.h	136;"	d
SPL_FNAME_ASCII	spell.h	140;"	d
SPL_FNAME_TMPL	spell.h	134;"	d
SPL_FNAME_TMPL	spell.h	138;"	d
SPO_COUNT	syntax.c	28;"	d	file:
SPO_HE_OFF	syntax.c	24;"	d	file:
SPO_HS_OFF	syntax.c	23;"	d	file:
SPO_LC_OFF	syntax.c	27;"	d	file:
SPO_ME_OFF	syntax.c	22;"	d	file:
SPO_MS_OFF	syntax.c	21;"	d	file:
SPO_RE_OFF	syntax.c	26;"	d	file:
SPO_RS_OFF	syntax.c	25;"	d	file:
SPRINT	regexp_bt.c	179;"	d	file:
SPSTART	regexp_bt.c	239;"	d	file:
SPS_BEST	spellsuggest.c	391;"	d	file:
SPS_DOUBLE	spellsuggest.c	393;"	d	file:
SPS_FAST	spellsuggest.c	392;"	d	file:
SPTYPE_END	syntax.c	78;"	d	file:
SPTYPE_MATCH	syntax.c	76;"	d	file:
SPTYPE_SKIP	syntax.c	79;"	d	file:
SPTYPE_START	syntax.c	77;"	d	file:
SPWORDLEN	drawline.c	313;"	d	file:
SP_BAD	spell.c	78;"	d	file:
SP_BANNED	spell.c	74;"	d	file:
SP_COLUMN	evalfunc.c	5819;"	d	file:
SP_END	evalfunc.c	5818;"	d	file:
SP_FORMERROR	spell.h	214;"	d
SP_LOCAL	spell.c	77;"	d	file:
SP_NOMOVE	evalfunc.c	5812;"	d	file:
SP_OK	spell.c	75;"	d	file:
SP_OTHERERROR	spell.h	215;"	d
SP_RARE	spell.c	76;"	d	file:
SP_REPEAT	evalfunc.c	5813;"	d	file:
SP_RETCOUNT	evalfunc.c	5814;"	d	file:
SP_SETPCMARK	evalfunc.c	5815;"	d	file:
SP_START	evalfunc.c	5816;"	d	file:
SP_SUBPAT	evalfunc.c	5817;"	d	file:
SP_TRUNCERROR	spell.h	213;"	d
SREQ_BUF	vim.h	2489;"	d
SREQ_GLOBAL	vim.h	2487;"	d
SREQ_WIN	vim.h	2488;"	d
SRHEIGHT	os_win32.c	2167;"	d	file:
SROP_Add	if_xcmdsrv.c	/^enum ServerReplyOp { SROP_Find, SROP_Add, SROP_Delete };$/;"	e	enum:ServerReplyOp	file:
SROP_Delete	if_xcmdsrv.c	/^enum ServerReplyOp { SROP_Find, SROP_Add, SROP_Delete };$/;"	e	enum:ServerReplyOp	file:
SROP_Find	if_xcmdsrv.c	/^enum ServerReplyOp { SROP_Find, SROP_Add, SROP_Delete };$/;"	e	enum:ServerReplyOp	file:
SRWIDTH	os_win32.c	2166;"	d	file:
SSOP_BLANK	option.h	839;"	d
SSOP_BUFFERS	option.h	832;"	d
SSOP_CURDIR	option.h	844;"	d
SSOP_CURSOR	option.h	846;"	d
SSOP_FOLDS	option.h	845;"	d
SSOP_GLOBALS	option.h	840;"	d
SSOP_HELP	option.h	838;"	d
SSOP_LOCALOPTIONS	option.h	836;"	d
SSOP_OPTIONS	option.h	837;"	d
SSOP_RESIZE	option.h	834;"	d
SSOP_SESDIR	option.h	843;"	d
SSOP_SLASH	option.h	841;"	d
SSOP_TABPAGES	option.h	847;"	d
SSOP_TERMINAL	option.h	848;"	d
SSOP_UNIX	option.h	842;"	d
SSOP_WINPOS	option.h	833;"	d
SSOP_WINSIZE	option.h	835;"	d
SST_DIST	vim.h	874;"	d
SST_FIX_STATES	vim.h	873;"	d
SST_INVALID	vim.h	875;"	d
SST_MAX_ENTRIES	vim.h	872;"	d
SST_MIN_ENTRIES	vim.h	871;"	d
STACK_FRAME_SIZE	vim9.h	245;"	d
STACK_INCR	memline.c	211;"	d	file:
STACK_TV	vim9execute.c	174;"	d	file:
STACK_TV	vim9execute.c	215;"	d	file:
STACK_TV	vim9execute.c	427;"	d	file:
STACK_TV_BOT	vim9execute.c	430;"	d	file:
STACK_TV_BOT	vim9execute.c	431;"	d	file:
STACK_TV_BOT	vim9execute.c	70;"	d	file:
STACK_TV_VAR	vim9execute.c	434;"	d	file:
STAR	regexp_bt.c	146;"	d	file:
STARTUPINFO	os_win32.c	/^typedef int STARTUPINFO;$/;"	t	file:
STARTUPTIME	feature.h	759;"	d
STAR_REGISTER	structs.h	3967;"	d
STATE_DEL	spellsuggest.c	/^    STATE_DEL,		\/\/ Delete a byte from the bad word.$/;"	e	enum:__anon112	file:
STATE_ENDNUL	spellsuggest.c	/^    STATE_ENDNUL,	\/\/ Past NUL bytes at start of the node.$/;"	e	enum:__anon112	file:
STATE_FINAL	spellsuggest.c	/^    STATE_FINAL		\/\/ End of this node.$/;"	e	enum:__anon112	file:
STATE_INS	spellsuggest.c	/^    STATE_INS,		\/\/ Insert a byte in the bad word.$/;"	e	enum:__anon112	file:
STATE_INS_PREP	spellsuggest.c	/^    STATE_INS_PREP,	\/\/ Prepare for inserting bytes.$/;"	e	enum:__anon112	file:
STATE_NOPREFIX	spellsuggest.c	/^    STATE_NOPREFIX,	\/\/ try without prefix$/;"	e	enum:__anon112	file:
STATE_PLAIN	spellsuggest.c	/^    STATE_PLAIN,	\/\/ Use each byte of the node.$/;"	e	enum:__anon112	file:
STATE_REP	spellsuggest.c	/^    STATE_REP,		\/\/ Use matching REP items from the .aff file.$/;"	e	enum:__anon112	file:
STATE_REP_INI	spellsuggest.c	/^    STATE_REP_INI,	\/\/ Prepare for using REP items.$/;"	e	enum:__anon112	file:
STATE_REP_UNDO	spellsuggest.c	/^    STATE_REP_UNDO,	\/\/ Undo a REP item replacement.$/;"	e	enum:__anon112	file:
STATE_SPLITUNDO	spellsuggest.c	/^    STATE_SPLITUNDO,	\/\/ Undo splitting.$/;"	e	enum:__anon112	file:
STATE_START	spellsuggest.c	/^    STATE_START = 0,	\/\/ At start of node check for NUL bytes (goodword$/;"	e	enum:__anon112	file:
STATE_SWAP	spellsuggest.c	/^    STATE_SWAP,		\/\/ Swap two bytes.$/;"	e	enum:__anon112	file:
STATE_SWAP3	spellsuggest.c	/^    STATE_SWAP3,	\/\/ Swap two characters over three.$/;"	e	enum:__anon112	file:
STATE_UNROT3L	spellsuggest.c	/^    STATE_UNROT3L,	\/\/ Undo rotate three characters left$/;"	e	enum:__anon112	file:
STATE_UNROT3R	spellsuggest.c	/^    STATE_UNROT3R,	\/\/ Undo rotate three characters right$/;"	e	enum:__anon112	file:
STATE_UNSWAP	spellsuggest.c	/^    STATE_UNSWAP,	\/\/ Undo swap two characters.$/;"	e	enum:__anon112	file:
STATE_UNSWAP3	spellsuggest.c	/^    STATE_UNSWAP3,	\/\/ Undo Swap two characters over three.$/;"	e	enum:__anon112	file:
STATFS	memfile.c	41;"	d	file:
STATFS	memfile.c	47;"	d	file:
STATUS_FAIL	term.c	/^    STATUS_FAIL		\/\/ timed out$/;"	e	enum:__anon119	file:
STATUS_GET	term.c	/^    STATUS_GET,		\/\/ send request when switching to RAW mode$/;"	e	enum:__anon119	file:
STATUS_GOT	term.c	/^    STATUS_GOT,		\/\/ received response$/;"	e	enum:__anon119	file:
STATUS_HEIGHT	vim.h	1495;"	d
STATUS_SENT	term.c	/^    STATUS_SENT,	\/\/ did send request, checking for response$/;"	e	enum:__anon119	file:
STERM	ascii.h	172;"	d
STIPPLE_BITMAP	gui_xmebw.c	113;"	d	file:
STL_ALL	option.h	338;"	d
STL_ALTPERCENT	option.h	328;"	d
STL_ARGLISTSTAT	option.h	329;"	d
STL_BUFNO	option.h	310;"	d
STL_BYTEVAL	option.h	314;"	d
STL_BYTEVAL_X	option.h	315;"	d
STL_COLUMN	option.h	305;"	d
STL_FILENAME	option.h	304;"	d
STL_FILEPATH	option.h	302;"	d
STL_FILETYPE	option.h	320;"	d
STL_FILETYPE_ALT	option.h	321;"	d
STL_FULLPATH	option.h	303;"	d
STL_HELPFLAG	option.h	318;"	d
STL_HELPFLAG_ALT	option.h	319;"	d
STL_HIGHLIGHT	option.h	335;"	d
STL_IN_ICON	globals.h	1321;"	d
STL_IN_TITLE	globals.h	1322;"	d
STL_KEYMAP	option.h	311;"	d
STL_LINE	option.h	308;"	d
STL_MAX_ITEM	vim.h	1700;"	d
STL_MIDDLEMARK	option.h	332;"	d
STL_MODIFIED	option.h	324;"	d
STL_MODIFIED_ALT	option.h	325;"	d
STL_NUMLINES	option.h	309;"	d
STL_OFFSET	option.h	312;"	d
STL_OFFSET_X	option.h	313;"	d
STL_PAGENUM	option.h	330;"	d
STL_PERCENTAGE	option.h	327;"	d
STL_PREVIEWFLAG	option.h	322;"	d
STL_PREVIEWFLAG_ALT	option.h	323;"	d
STL_QUICKFIX	option.h	326;"	d
STL_ROFLAG	option.h	316;"	d
STL_ROFLAG_ALT	option.h	317;"	d
STL_TABCLOSENR	option.h	337;"	d
STL_TABPAGENR	option.h	336;"	d
STL_TRUNCMARK	option.h	333;"	d
STL_USER_HL	option.h	334;"	d
STL_VIM_EXPR	option.h	331;"	d
STL_VIRTCOL	option.h	306;"	d
STL_VIRTCOL_ALT	option.h	307;"	d
STR2NR_ALL	vim.h	322;"	d
STR2NR_BIN	vim.h	319;"	d
STR2NR_FORCE	vim.h	325;"	d
STR2NR_HEX	vim.h	321;"	d
STR2NR_NO_OCT	vim.h	323;"	d
STR2NR_OCT	vim.h	320;"	d
STR2NR_QUOTE	vim.h	327;"	d
STRCAT	vim.h	1625;"	d
STRCMP	vim.h	1591;"	d
STRCPY	vim.h	1589;"	d
STRICMP	vim.h	1594;"	d
STRICMP	vim.h	1597;"	d
STRICMP	vim.h	1599;"	d
STRICT	os_win32.h	89;"	d
STRING_TAG	gui_motif.c	101;"	d	file:
STRING_TAG	gui_motif.c	103;"	d	file:
STRLEN	vim.h	1588;"	d
STRLEN	vim.h	2395;"	d
STRMOVE	vim.h	1604;"	d
STRNCAT	vim.h	1626;"	d
STRNCMP	vim.h	1592;"	d
STRNCPY	vim.h	1590;"	d
STRNICMP	vim.h	1607;"	d
STRNICMP	vim.h	1610;"	d
STRNICMP	vim.h	1612;"	d
STRPROCINT	os_unix.c	/^typedef int (*STRPROCINT)(char_u *);$/;"	t	file:
STRPROCSTR	os_unix.c	/^typedef char_u * (*STRPROCSTR)(char_u *);$/;"	t	file:
STR_CHAR	charset.c	402;"	d	file:
STR_PTR	charset.c	403;"	d	file:
STUB_IMPL	iscygpty.c	52;"	d	file:
STYLE	gui_xmdlg.c	/^    STYLE,$/;"	e	enum:ListSpecifier	file:
STYLE_BT	os_unix.c	6441;"	d	file:
STYLE_ECHO	os_unix.c	6437;"	d	file:
STYLE_GLOB	os_unix.c	6438;"	d	file:
STYLE_PRINT	os_unix.c	6440;"	d	file:
STYLE_VIMGLOB	os_unix.c	6439;"	d	file:
SUBPAT	regexp_bt.c	154;"	d	file:
SUG	spellsuggest.c	70;"	d	file:
SUG_CLEAN_COUNT	spellsuggest.c	78;"	d	file:
SUG_MAX_COUNT	spellsuggest.c	82;"	d	file:
SUN_SYSTEM	vim.h	249;"	d
SWB_NEWTAB	option.h	921;"	d
SWB_SPLIT	option.h	920;"	d
SWB_USELAST	option.h	923;"	d
SWB_USEOPEN	option.h	918;"	d
SWB_USETAB	option.h	919;"	d
SWB_VSPLIT	option.h	922;"	d
SYNID_ALLBUT	syntax.c	134;"	d	file:
SYNID_CLUSTER	syntax.c	137;"	d	file:
SYNID_CONTAINED	syntax.c	136;"	d	file:
SYNID_TOP	syntax.c	135;"	d	file:
SYNSPL_DEFAULT	structs.h	2193;"	d
SYNSPL_NOTOP	structs.h	2195;"	d
SYNSPL_TOP	structs.h	2194;"	d
SYNTAX_FNAME	os_amiga.h	150;"	d
SYNTAX_FNAME	os_dos.h	111;"	d
SYNTAX_FNAME	os_mac.h	187;"	d
SYNTAX_FNAME	os_unix.h	338;"	d
SYN_CLSTR	syntax.c	124;"	d	file:
SYN_ITEMS	syntax.c	82;"	d	file:
SYN_NAMELEN	syntax.c	18;"	d	file:
SYN_STATE_P	syntax.c	92;"	d	file:
SYN_TIME_LIMIT	feature.h	1169;"	d
SYS_GVIMRC_FILE	os_amiga.h	123;"	d
SYS_GVIMRC_FILE	os_dos.h	44;"	d
SYS_GVIMRC_FILE	os_mac.h	124;"	d
SYS_GVIMRC_FILE	os_unix.h	220;"	d
SYS_MENU_FILE	os_amiga.h	126;"	d
SYS_MENU_FILE	os_dos.h	56;"	d
SYS_MENU_FILE	os_mac.h	127;"	d
SYS_MENU_FILE	os_unix.h	244;"	d
SYS_NMLN	os_unixx.h	74;"	d
SYS_OPTWIN_FILE	feature.h	861;"	d
SYS_OPTWIN_FILE	os_dos.h	61;"	d
SYS_OPTWIN_FILE	os_mac.h	130;"	d
SYS_SELECT_WITH_SYS_TIME	os_mac.h	277;"	d
SYS_VIMRC_FILE	os_amiga.h	120;"	d
SYS_VIMRC_FILE	os_dos.h	17;"	d
SYS_VIMRC_FILE	os_mac.h	121;"	d
SYS_VIMRC_FILE	os_unix.h	217;"	d
SY_MAXLEN	spell.c	1842;"	d	file:
S_ISBLK	vim.h	2587;"	d
S_ISBLK	vim.h	2589;"	d
S_ISCHR	vim.h	2608;"	d
S_ISCHR	vim.h	2610;"	d
S_ISDIR	vim.h	2573;"	d
S_ISDIR	vim.h	2575;"	d
S_ISFIFO	vim.h	2601;"	d
S_ISFIFO	vim.h	2603;"	d
S_ISLNK	vim.h	2615;"	d
S_ISLNK	vim.h	2617;"	d
S_ISREG	vim.h	2580;"	d
S_ISREG	vim.h	2582;"	d
S_ISSOCK	vim.h	2594;"	d
S_ISSOCK	vim.h	2596;"	d
S_ISXXX	gui_at_fs.c	199;"	d	file:
S_IXGRP	gui_at_fs.c	193;"	d	file:
S_IXOTH	gui_at_fs.c	196;"	d	file:
S_IXUSR	gui_at_fs.c	190;"	d	file:
SaveConsoleBuffer	os_win32.c	/^SaveConsoleBuffer($/;"	f	file:
SaveConsoleTitleAndIcon	os_win32.c	/^SaveConsoleTitleAndIcon(void)$/;"	f	file:
SaveInst	os_mswin.c	/^SaveInst(HINSTANCE hInst)$/;"	f
SaveInst	os_w32exe.c	/^void SaveInst(HINSTANCE hInst);$/;"	v
Scheme_Closed_Prim	if_mzsch.c	/^typedef int Scheme_Closed_Prim;$/;"	t	file:
Scheme_Env	if_mzsch.c	/^typedef int Scheme_Env;$/;"	t	file:
Scheme_Hash_Table	if_mzsch.c	/^typedef int Scheme_Hash_Table;$/;"	t	file:
Scheme_Object	if_mzsch.c	/^typedef int Scheme_Object;$/;"	t	file:
Scheme_Prim	if_mzsch.c	/^typedef int Scheme_Prim;$/;"	t	file:
Scheme_Thread	if_mzsch.c	/^typedef int Scheme_Thread;$/;"	t	file:
Scheme_Type	if_mzsch.c	/^typedef int Scheme_Type;$/;"	t	file:
ScreenAttrs	globals.h	/^EXTERN sattr_T	*ScreenAttrs INIT(= NULL);$/;"	v
ScreenLines	globals.h	/^EXTERN schar_T	*ScreenLines INIT(= NULL);$/;"	v
ScreenLines2	globals.h	/^EXTERN schar_T	*ScreenLines2 INIT(= NULL);$/;"	v
ScreenLinesC	globals.h	/^EXTERN u8char_T	*ScreenLinesC[MAX_MCO];		\/\/ composing characters$/;"	v
ScreenLinesUC	globals.h	/^EXTERN u8char_T	*ScreenLinesUC INIT(= NULL);	\/\/ decoded UTF-8 characters$/;"	v
Screen_mco	globals.h	/^EXTERN int	Screen_mco INIT(= 0);		\/\/ value of p_mco used when$/;"	v
ScrollOneLineDown	gui_at_sb.c	/^ScrollOneLineDown($/;"	f	file:
ScrollOneLineUp	gui_at_sb.c	/^ScrollOneLineUp($/;"	f	file:
ScrollPageDown	gui_at_sb.c	/^ScrollPageDown($/;"	f	file:
ScrollPageUp	gui_at_sb.c	/^ScrollPageUp($/;"	f	file:
ScrollSome	gui_at_sb.c	/^ScrollSome($/;"	f	file:
ScrollbarClassPart	gui_at_sb.h	/^typedef struct {int empty;} ScrollbarClassPart;$/;"	t	typeref:struct:__anon144
ScrollbarClassRec	gui_at_sb.h	/^} ScrollbarClassRec;$/;"	t	typeref:struct:_ScrollbarClassRec
ScrollbarPart	gui_at_sb.h	/^} ScrollbarPart;$/;"	t	typeref:struct:__anon143
ScrollbarRec	gui_at_sb.h	/^} ScrollbarRec;$/;"	t	typeref:struct:_ScrollbarRec
ScrollbarWidget	gui_at_sb.h	/^typedef struct _ScrollbarRec	  *ScrollbarWidget;$/;"	t	typeref:struct:_ScrollbarRec
ScrollbarWidgetClass	gui_at_sb.h	/^typedef struct _ScrollbarClassRec *ScrollbarWidgetClass;$/;"	t	typeref:struct:_ScrollbarClassRec
SearchedFile	search.c	/^typedef struct SearchedFile$/;"	s	file:
SearchedFile	search.c	/^} SearchedFile;$/;"	t	typeref:struct:SearchedFile	file:
SelectFont	gui_w32.c	3815;"	d	file:
SelectionRange	gui_mac.c	/^struct SelectionRange \/\/ for handling kCoreClassEvent:kOpenDocuments:keyAEPosition typeChar$/;"	s	file:
SelectionRange	gui_mac.c	/^typedef struct SelectionRange SelectionRange;$/;"	t	typeref:struct:SelectionRange	file:
SendInit	if_xcmdsrv.c	/^SendInit(Display *dpy)$/;"	f	file:
SendKeys	if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SendKeys )($/;"	m	struct:IVimVtbl
Send_KAHL_MOD_AE	gui_mac.c	/^Send_KAHL_MOD_AE(buf_T *buf)$/;"	f
ServerReply	if_xcmdsrv.c	/^struct ServerReply$/;"	s	file:
ServerReplyFind	if_xcmdsrv.c	/^ServerReplyFind(Window w, enum ServerReplyOp op)$/;"	f	file:
ServerReplyOp	if_xcmdsrv.c	/^enum ServerReplyOp { SROP_Find, SROP_Add, SROP_Delete };$/;"	g	file:
ServerWait	if_xcmdsrv.c	/^ServerWait($/;"	f	file:
SetBufferLine	if_py_both.h	/^SetBufferLine(buf_T *buf, PyInt n, PyObject *line, PyInt *len_change)$/;"	f
SetBufferLineList	if_py_both.h	/^SetBufferLineList($/;"	f
SetConsoleIcon	os_win32.c	/^SetConsoleIcon($/;"	f	file:
SetDimensions	gui_at_sb.c	/^SetDimensions(ScrollbarWidget sbw)$/;"	f	file:
SetForeground	if_ole.h	/^	HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetForeground )($/;"	m	struct:IVimVtbl
SetValues	gui_at_sb.c	/^SetValues($/;"	f	file:
SetValues	gui_xmebw.c	/^SetValues(Widget current,$/;"	f	file:
Sfdisc_t	if_perlsfio.c	22;"	d	file:
Sfio_t	if_perlsfio.c	21;"	d	file:
ShS_NEUTRAL	beval.h	/^    ShS_NEUTRAL,			\/\/ nothing showing or pending$/;"	e	enum:__anon140
ShS_PENDING	beval.h	/^    ShS_PENDING,			\/\/ data requested from debugger$/;"	e	enum:__anon140
ShS_SHOWING	beval.h	/^    ShS_SHOWING				\/\/ the balloon is being displayed$/;"	e	enum:__anon140
ShS_UPDATE_PENDING	beval.h	/^    ShS_UPDATE_PENDING,			\/\/ switching information displayed$/;"	e	enum:__anon140
SharedFindReplace	gui_gtk.c	/^} SharedFindReplace;$/;"	t	typeref:struct:_SharedFindReplace	file:
SharedFindReplace	gui_motif.c	/^} SharedFindReplace;$/;"	t	typeref:struct:_SharedFindReplace	file:
SharedFontSelData	gui_xmdlg.c	/^} SharedFontSelData;$/;"	t	typeref:struct:_SharedFontSelData	file:
Show	if_cscope.h	/^typedef enum { Add, Find, Help, Kill, Reset, Show } csid_e;$/;"	e	enum:__anon148
SpecialKey	term.h	/^enum SpecialKey$/;"	g
StartupInfo	terminal.c	/^    STARTUPINFOW StartupInfo;$/;"	m	struct:_DYN_STARTUPINFOEXW	file:
State	globals.h	/^EXTERN int	State INIT(= NORMAL);	\/\/ This is the current state of the$/;"	v
Store	if_cscope.h	/^    Store,$/;"	e	enum:__anon149
StringToChars	if_py_both.h	/^StringToChars(PyObject *obj, PyObject **todecref)$/;"	f
StringToLine	if_py_both.h	/^StringToLine(PyObject *obj)$/;"	f
StringValuePtr	if_ruby.c	138;"	d	file:
TAB	ascii.h	106;"	d
TAB	ascii.h	27;"	d
TABLE_SIZE	dosinst.c	62;"	d	file:
TABLINE_HEIGHT	gui.h	165;"	d
TABLINE_HEIGHT	gui.h	168;"	d
TABLINE_MENU_CLOSE	globals.h	590;"	d
TABLINE_MENU_NEW	globals.h	591;"	d
TABLINE_MENU_OPEN	globals.h	592;"	d
TAB_PYTHON_REF	if_python.c	787;"	d	file:
TAB_PYTHON_REF	if_python3.c	789;"	d	file:
TAGSTACKSIZE	structs.h	133;"	d
TAG_BREAK	if_ruby.c	1029;"	d	file:
TAG_CSCOPE	vim.h	1146;"	d
TAG_FATAL	if_ruby.c	1035;"	d	file:
TAG_HELP	vim.h	1141;"	d
TAG_INS_COMP	vim.h	1149;"	d
TAG_KEEP_LANG	vim.h	1150;"	d
TAG_MANY	vim.h	1153;"	d
TAG_MASK	if_ruby.c	1036;"	d	file:
TAG_NAMES	vim.h	1142;"	d
TAG_NEXT	if_ruby.c	1030;"	d	file:
TAG_NOIC	vim.h	1144;"	d
TAG_NO_TAGFUNC	vim.h	1151;"	d
TAG_RAISE	if_ruby.c	1033;"	d	file:
TAG_REDO	if_ruby.c	1032;"	d	file:
TAG_REGEXP	vim.h	1143;"	d
TAG_RETRY	if_ruby.c	1031;"	d	file:
TAG_RETURN	if_ruby.c	1028;"	d	file:
TAG_SEP	tag.c	109;"	d	file:
TAG_THROW	if_ruby.c	1034;"	d	file:
TAG_VERBOSE	vim.h	1148;"	d
TARGET_COMPOUND_TEXT	gui_gtk_x11.c	/^    TARGET_COMPOUND_TEXT,$/;"	e	enum:__anon36	file:
TARGET_COUNT	dosinst.h	322;"	d
TARGET_HTML	gui_gtk_x11.c	/^    TARGET_HTML,$/;"	e	enum:__anon36	file:
TARGET_STRING	gui_gtk_x11.c	/^    TARGET_STRING,$/;"	e	enum:__anon36	file:
TARGET_TEXT	gui_gtk_x11.c	/^    TARGET_TEXT,$/;"	e	enum:__anon36	file:
TARGET_TEXT_PLAIN	gui_gtk_x11.c	/^    TARGET_TEXT_PLAIN,$/;"	e	enum:__anon36	file:
TARGET_TEXT_URI_LIST	gui_gtk_x11.c	/^    TARGET_TEXT_URI_LIST,$/;"	e	enum:__anon36	file:
TARGET_TYPE_NONE	gui_gtk_x11.c	/^    TARGET_TYPE_NONE,$/;"	e	enum:__anon36	file:
TARGET_UTF8_STRING	gui_gtk_x11.c	/^    TARGET_UTF8_STRING,$/;"	e	enum:__anon36	file:
TARGET_VIM	gui_gtk_x11.c	/^    TARGET_VIM,$/;"	e	enum:__anon36	file:
TARGET_VIMENC	gui_gtk_x11.c	/^    TARGET_VIMENC$/;"	e	enum:__anon36	file:
TBIS_GIANT	option.h	988;"	d
TBIS_HUGE	option.h	987;"	d
TBIS_LARGE	option.h	986;"	d
TBIS_MEDIUM	option.h	985;"	d
TBIS_SMALL	option.h	984;"	d
TBIS_TINY	option.h	983;"	d
TBSTYLE_FLAT	gui_w32.c	7841;"	d	file:
TBUFFER_LEN	menu.c	1464;"	d	file:
TBUFSZ	vim.h	1528;"	d
TB_SETUNICODEFORMAT	gui_w32.c	2386;"	d	file:
TCL_PROC	if_tcl.c	166;"	d	file:
TCL_PROC	if_tcl.c	171;"	d	file:
TC_FOLLOWIC	option.h	929;"	d
TC_FOLLOWSCS	option.h	932;"	d
TC_IGNORE	option.h	930;"	d
TC_MATCH	option.h	931;"	d
TC_SMART	option.h	933;"	d
TEAROFF_BUTTON_PAD_X	gui_w32.c	3913;"	d	file:
TEAROFF_COLUMN_PADDING	gui_w32.c	3916;"	d	file:
TEAROFF_MIN_WIDTH	gui_w32.c	3914;"	d	file:
TEAROFF_PADDING_X	gui_w32.c	3912;"	d	file:
TEAROFF_SUBMENU_LABEL	gui_w32.c	3915;"	d	file:
TEAR_LEN	gui.h	157;"	d
TEAR_STRING	gui.h	156;"	d
TECObjectRef	os_mac_conv.c	/^typedef int *TECObjectRef;$/;"	t	file:
TEMPDIRNAMES	os_unix.h	397;"	d
TEMPNAME	os_amiga.h	55;"	d
TEMPNAME	os_unix.h	393;"	d
TEMPNAMELEN	os_amiga.h	56;"	d
TEMPNAMELEN	os_unix.h	394;"	d
TEMPNAMELEN	os_unix.h	398;"	d
TEMPNAMELEN	os_win32.h	114;"	d
TEMP_BUF_SIZE	gui_xmdlg.c	86;"	d	file:
TERMCAP2KEY	keymap.h	128;"	d
TERMCAPFILE	termlib.c	58;"	d	file:
TERMCAPFILE	termlib.c	61;"	d	file:
TERMCAPFILE	termlib.c	63;"	d	file:
TERMINAL	vim.h	699;"	d
TERMINFO	os_vms_conf.h	14;"	d
TERMREQUEST_INIT	term.c	121;"	d	file:
TERM_ATTR_ENTRY	highlight.c	2030;"	d	file:
TERM_START_FORCEIT	vim.h	2646;"	d
TERM_START_NOJOB	vim.h	2645;"	d
TERM_START_SYSTEM	vim.h	2647;"	d
TERM_STR	vim.h	1747;"	d
TEST_COUNT	memfile_test.c	26;"	d	file:
TEXTMETRIC	os_mswin.c	/^typedef int TEXTMETRIC;$/;"	t	file:
TEXTMETRIC	os_win32.c	/^typedef int TEXTMETRIC;$/;"	t	file:
TEXT_X	gui.h	105;"	d
TEXT_X	gui.h	112;"	d
TEXT_Y	gui.h	106;"	d
TEXT_Y	gui.h	115;"	d
TFN_INT	vim.h	2532;"	d
TFN_NO_AUTOLOAD	vim.h	2534;"	d
TFN_NO_DEREF	vim.h	2535;"	d
TFN_QUIET	vim.h	2533;"	d
TFN_READ_ONLY	vim.h	2536;"	d
TGETENT	term.c	189;"	d	file:
TGETENT_ZERO_ERR	os_vms_conf.h	101;"	d
TGETSTR	term.c	188;"	d	file:
THROW_ON_ERROR	ex_eval.c	60;"	d	file:
THROW_ON_ERROR_TRUE	ex_eval.c	61;"	d	file:
THROW_ON_INTERRUPT	ex_eval.c	62;"	d	file:
THROW_ON_INTERRUPT_TRUE	ex_eval.c	63;"	d	file:
TILDE_REGISTER	structs.h	3975;"	d
TIME_MSG	macros.h	205;"	d
TIME_MSG	macros.h	207;"	d
TIME_WITH_SYS_TIME	os_vms_conf.h	69;"	d
TIOCGWINSZ	os_unix.c	105;"	d	file:
TL_FINISH_CLOSE	terminal.c	107;"	d	file:
TL_FINISH_NOCLOSE	terminal.c	108;"	d	file:
TL_FINISH_OPEN	terminal.c	109;"	d	file:
TL_FINISH_UNSET	terminal.c	106;"	d	file:
TMODE_COOK	term.h	212;"	d
TMODE_LOOP	terminal.c	166;"	d	file:
TMODE_ONCE	terminal.c	165;"	d	file:
TMODE_RAW	term.h	214;"	d
TMODE_SLEEP	term.h	213;"	d
TMPLEN	buffer.c	4061;"	d	file:
TMP_LEN	message.c	4246;"	d	file:
TOKEN_INFORMATION_CLASS	os_win32.c	/^typedef int TOKEN_INFORMATION_CLASS;$/;"	t	file:
TOLOWER_ASC	macros.h	80;"	d
TOLOWER_ASC	macros.h	83;"	d
TOLOWER_LOC	macros.h	66;"	d
TOLOWER_LOC	macros.h	70;"	d
TOLOWER_LOC	macros.h	73;"	d
TOOLBAR_BITMAP_COUNT	gui_w32.c	2398;"	d	file:
TOOLBAR_BORDER_HEIGHT	gui.h	162;"	d
TOOLBAR_BUTTON_HEIGHT	gui.h	160;"	d
TOOLBAR_BUTTON_WIDTH	gui.h	161;"	d
TOOLBAR_HORIZ	option.h	978;"	d
TOOLBAR_ICONS	option.h	976;"	d
TOOLBAR_NAME_COUNT	menu.c	76;"	d	file:
TOOLBAR_TEXT	option.h	975;"	d
TOOLBAR_TOOLTIPS	option.h	977;"	d
TOOLINFOW_NEW	gui_w32.c	/^} TOOLINFOW_NEW;$/;"	t	typeref:struct:tagTOOLINFOW_NEW	file:
TOOLINFO_NEW	gui_w32.c	/^} TOOLINFO_NEW;$/;"	t	typeref:struct:tagTOOLINFOA_NEW	file:
TOP_SHADOW	gui_x11_pm.h	91;"	d
TOUPPER_ASC	macros.h	79;"	d
TOUPPER_ASC	macros.h	82;"	d
TOUPPER_LOC	macros.h	65;"	d
TOUPPER_LOC	macros.h	69;"	d
TOUPPER_LOC	macros.h	72;"	d
TO_SPECIAL	keymap.h	142;"	d
TPUTSFUNCAST	term.c	41;"	d	file:
TPUTSFUNCAST	term.c	44;"	d	file:
TPUTSFUNCAST	term.c	46;"	d	file:
TP_FLAG_CONT_NEXT	structs.h	760;"	d
TP_FLAG_CONT_PREV	structs.h	761;"	d
TRACE	os_win32.h	166;"	d
TRACE	os_win32.h	181;"	d
TRACE0	os_win32.h	167;"	d
TRACE0	os_win32.h	182;"	d
TRACE1	os_win32.h	168;"	d
TRACE1	os_win32.h	183;"	d
TRACE2	os_win32.h	169;"	d
TRACE2	os_win32.h	184;"	d
TRACE3	os_win32.h	170;"	d
TRACE3	os_win32.h	185;"	d
TRACE4	os_win32.h	171;"	d
TRACE4	os_win32.h	186;"	d
TRAMPOLINED_MZVIM_STARTUP	if_mzsch.c	63;"	d	file:
TRUE	dosinst.h	62;"	d
TRUE	os_amiga.c	23;"	d	file:
TRUE	os_amiga.c	76;"	d	file:
TRUE	os_amiga.c	77;"	d	file:
TRUE	vim.h	1436;"	d
TRUNC_ON_OPEN	bufwrite.c	1783;"	d	file:
TRUSTEE	os_win32.c	/^typedef int TRUSTEE;$/;"	t	file:
TRY_ABORT	os_beos.c	35;"	d	file:
TRY_DEEPER	spellsuggest.c	1188;"	d	file:
TRY_SCOPE	vim9compile.c	/^    TRY_SCOPE,$/;"	e	enum:__anon129	file:
TSF_DIDDEL	spellsuggest.c	193;"	d	file:
TSF_DIDSPLIT	spellsuggest.c	192;"	d	file:
TSF_PREFIXOK	spellsuggest.c	191;"	d	file:
TTF_DI_SETITEM	gui_w32.c	4017;"	d	file:
TTM_SETMAXTIPWIDTH	gui_w32.c	4013;"	d	file:
TTN_GETDISPINFO	gui_w32.c	4021;"	d	file:
TTN_GETDISPINFOW	gui_w32.c	4054;"	d	file:
TTYM_DEC	option.h	996;"	d
TTYM_JSBTERM	option.h	998;"	d
TTYM_NETTERM	option.h	997;"	d
TTYM_PTERM	option.h	999;"	d
TTYM_SGR	option.h	1001;"	d
TTYM_URXVT	option.h	1000;"	d
TTYM_XTERM	option.h	994;"	d
TTYM_XTERM2	option.h	995;"	d
TT_MODE	os_vms.c	/^}	TT_MODE;$/;"	t	typeref:struct:__anon76	file:
TYPEAHEADLEN	os_win32.c	1785;"	d	file:
TYPELEN_INIT	getchar.c	84;"	d	file:
TYPE_ATCURSOR	popupwin.c	/^    TYPE_ATCURSOR,$/;"	e	enum:__anon85	file:
TYPE_BEVAL	popupwin.c	/^    TYPE_BEVAL,$/;"	e	enum:__anon85	file:
TYPE_DIALOG	popupwin.c	/^    TYPE_DIALOG,$/;"	e	enum:__anon85	file:
TYPE_INFO	popupwin.c	/^    TYPE_INFO		\/\/ popup menu info$/;"	e	enum:__anon85	file:
TYPE_MENU	popupwin.c	/^    TYPE_MENU,$/;"	e	enum:__anon85	file:
TYPE_NORMAL	popupwin.c	/^    TYPE_NORMAL,$/;"	e	enum:__anon85	file:
TYPE_NOTIFICATION	popupwin.c	/^    TYPE_NOTIFICATION,$/;"	e	enum:__anon85	file:
TYPE_PREVIEW	popupwin.c	/^    TYPE_PREVIEW,	\/\/ preview window$/;"	e	enum:__anon85	file:
T_8B	term.h	202;"	d
T_8F	term.h	201;"	d
T_AL	term.h	130;"	d
T_BC	term.h	172;"	d
T_BD	term.h	204;"	d
T_BE	term.h	203;"	d
T_CAB	term.h	181;"	d
T_CAF	term.h	180;"	d
T_CAL	term.h	131;"	d
T_CCO	term.h	174;"	d
T_CCS	term.h	173;"	d
T_CD	term.h	137;"	d
T_CDL	term.h	133;"	d
T_CE	term.h	129;"	d
T_CEC	term.h	189;"	d
T_CEI	term.h	194;"	d
T_CGP	term.h	191;"	d
T_CIE	term.h	185;"	d
T_CIS	term.h	184;"	d
T_CL	term.h	136;"	d
T_CM	term.h	162;"	d
T_CRC	term.h	146;"	d
T_CRI	term.h	164;"	d
T_CRS	term.h	147;"	d
T_CRT	term.h	208;"	d
T_CRV	term.h	196;"	d
T_CS	term.h	134;"	d
T_CSB	term.h	176;"	d
T_CSC	term.h	188;"	d
T_CSF	term.h	175;"	d
T_CSH	term.h	145;"	d
T_CSI	term.h	193;"	d
T_CSR	term.h	195;"	d
T_CST	term.h	207;"	d
T_CSV	term.h	135;"	d
T_CTE	term.h	171;"	d
T_CTI	term.h	169;"	d
T_CVS	term.h	144;"	d
T_CWP	term.h	190;"	d
T_CWS	term.h	192;"	d
T_CZH	term.h	153;"	d
T_CZR	term.h	154;"	d
T_DA	term.h	139;"	d
T_DB	term.h	140;"	d
T_DL	term.h	132;"	d
T_FS	term.h	187;"	d
T_KE	term.h	167;"	d
T_KS	term.h	166;"	d
T_LE	term.h	182;"	d
T_MB	term.h	179;"	d
T_MD	term.h	150;"	d
T_ME	term.h	148;"	d
T_MR	term.h	149;"	d
T_MS	term.h	161;"	d
T_NAME	term.h	128;"	d
T_ND	term.h	183;"	d
T_OP	term.h	199;"	d
T_PE	term.h	206;"	d
T_PS	term.h	205;"	d
T_RBG	term.h	198;"	d
T_RFG	term.h	197;"	d
T_SE	term.h	151;"	d
T_SO	term.h	152;"	d
T_SR	term.h	163;"	d
T_SRI	term.h	210;"	d
T_SSI	term.h	209;"	d
T_STE	term.h	159;"	d
T_STS	term.h	160;"	d
T_TE	term.h	170;"	d
T_TI	term.h	168;"	d
T_TS	term.h	186;"	d
T_U7	term.h	200;"	d
T_UCE	term.h	157;"	d
T_UCS	term.h	158;"	d
T_UE	term.h	155;"	d
T_US	term.h	156;"	d
T_UT	term.h	138;"	d
T_VB	term.h	165;"	d
T_VE	term.h	142;"	d
T_VI	term.h	141;"	d
T_VS	term.h	143;"	d
T_XN	term.h	178;"	d
T_XS	term.h	177;"	d
TabListAsSeq	if_py_both.h	/^static PySequenceMethods TabListAsSeq;$/;"	v
TabListAsSeq	if_python.c	/^static PySequenceMethods TabListAsSeq = {$/;"	v	file:
TabListAsSeq	if_python3.c	/^static PySequenceMethods TabListAsSeq = {$/;"	v	file:
TabListItem	if_py_both.h	/^TabListItem(PyObject *self UNUSED, PyInt n)$/;"	f
TabListLength	if_py_both.h	/^TabListLength(PyObject *self UNUSED)$/;"	f
TabListObject	if_py_both.h	/^} TabListObject;$/;"	t	typeref:struct:__anon162
TabListType	if_py_both.h	/^static PyTypeObject TabListType;$/;"	v
TabPageAttr	if_py_both.h	/^TabPageAttr(TabPageObject *self, char *name)$/;"	f
TabPageAttrValid	if_py_both.h	/^TabPageAttrValid(TabPageObject *self, char *name)$/;"	f
TabPageAttrs	if_py_both.h	/^static char *TabPageAttrs[] = {$/;"	v
TabPageDestructor	if_py_both.h	/^TabPageDestructor(TabPageObject *self)$/;"	f
TabPageDir	if_py_both.h	/^TabPageDir(PyObject *self)$/;"	f
TabPageGetattr	if_python.c	/^TabPageGetattr(PyObject *self, char *name)$/;"	f	file:
TabPageGetattro	if_python3.c	/^TabPageGetattro(PyObject *self, PyObject *nameobj)$/;"	f	file:
TabPageIdxs	globals.h	/^EXTERN short	*TabPageIdxs INIT(= NULL);$/;"	v
TabPageMethods	if_py_both.h	/^static struct PyMethodDef TabPageMethods[] = {$/;"	v	typeref:struct:PyMethodDef
TabPageNew	if_py_both.h	/^TabPageNew(tabpage_T *tab)$/;"	f
TabPageObject	if_py_both.h	/^} TabPageObject;$/;"	t	typeref:struct:__anon161
TabPageRepr	if_py_both.h	/^TabPageRepr(TabPageObject *self)$/;"	f
TabPageType	if_py_both.h	/^static PyTypeObject TabPageType;$/;"	v
TextData	gui_at_fs.c	/^} TextData;$/;"	t	typeref:struct:__anon34	file:
TheBufferMap	if_py_both.h	/^static BufMapObject TheBufferMap =$/;"	v
TheCurrent	if_py_both.h	/^static CurrentObject TheCurrent =$/;"	v
TheTabPageList	if_py_both.h	/^static TabListObject TheTabPageList =$/;"	v
TheWindowList	if_py_both.h	/^static WinListObject TheWindowList =$/;"	v
Thunk_Info	if_mzsch.c	/^} Thunk_Info;$/;"	t	typeref:struct:__anon56	file:
Trace	os_mswin.c	/^Trace($/;"	f
TrackUserActivity	gui_w32.c	/^TrackUserActivity(UINT uMsg)$/;"	f	file:
TtyProto	pty.c	/^static char TtyProto[] = "\/dev\/pty\/ttyXY";$/;"	v	file:
TtyProto	pty.c	/^static char TtyProto[] = "\/dev\/tt\/XY";$/;"	v	file:
TtyProto	pty.c	/^static char TtyProto[] = "\/dev\/ttyXY";$/;"	v	file:
UB_CRYPT	memline.c	/^    , UB_CRYPT		\/\/ update crypt key$/;"	e	enum:__anon70	file:
UB_FNAME	memline.c	/^      UB_FNAME = 0	\/\/ update timestamp and filename$/;"	e	enum:__anon70	file:
UB_SAME_DIR	memline.c	/^    , UB_SAME_DIR       \/\/ update the B0_SAME_DIR flag$/;"	e	enum:__anon70	file:
UCHARAT	regexp.c	59;"	d	file:
UC_BUFFER	usercmd.c	117;"	d	file:
UChar	os_win32.c	925;"	d	file:
UChar	os_win32.c	927;"	d	file:
UE_MAGIC	undo.c	82;"	d	file:
UF2HIKEY	structs.h	1617;"	d
UF_ENTRY_END_MAGIC	undo.c	739;"	d	file:
UF_ENTRY_MAGIC	undo.c	738;"	d	file:
UF_HEADER_END_MAGIC	undo.c	737;"	d	file:
UF_HEADER_MAGIC	undo.c	736;"	d	file:
UF_LAST_SAVE_NR	undo.c	744;"	d	file:
UF_START_MAGIC	undo.c	734;"	d	file:
UF_START_MAGIC_LEN	undo.c	735;"	d	file:
UF_VERSION	undo.c	740;"	d	file:
UF_VERSION_CRYPT	undo.c	741;"	d	file:
UHP_SAVE_NR	undo.c	747;"	d	file:
UH_CHANGED	structs.h	422;"	d
UH_EMPTYBUF	structs.h	423;"	d
UH_MAGIC	undo.c	81;"	d	file:
UINT	gui_w32.c	/^typedef int UINT;$/;"	t	file:
UINT	os_mswin.c	/^typedef int UINT;$/;"	t	file:
UINT	winclip.c	/^typedef int UINT;$/;"	t	file:
UINT32_T	os_vms_conf.h	57;"	d
UINT32_T	vim.h	/^typedef UINT32_TYPEDEF UINT32_T;$/;"	t
UINT32_TYPEDEF	vim.h	62;"	d
UINT32_TYPEDEF	vim.h	67;"	d
UINT32_TYPEDEF	vim.h	71;"	d
UINT_PTR	gui_w32.c	/^typedef int UINT_PTR;$/;"	t	file:
UINT_PTR	gui_w32.c	3932;"	d	file:
UINT_PTR	gui_w32.c	3933;"	d	file:
UI_MSEC_DELAY	if_xcmdsrv.c	559;"	d	file:
UNBLOCK_SIGNALS	os_unix.c	188;"	d	file:
UNBLOCK_SIGNALS	os_unix.c	192;"	d	file:
UNDO_HASH_SIZE	vim.h	1537;"	d
UNHIGHLIGHTT	gui_xmebw.c	36;"	d	file:
UNIX	vim.h	99;"	d
UNKNOWN	fileio.c	140;"	d	file:
UNKNOWN_CREATOR	os_mac.h	290;"	d
UNUSED	ex_docmd.c	/^    void	*cookie UNUSED,		\/\/ argument for fgetline()$/;"	v
UNUSED	vim.h	241;"	d
UNUSED	vim.h	244;"	d
UP	term.c	/^char *UP, *BC, PC;$/;"	v
UP	termlib.c	/^char	*UP = 0, *BC = 0;     \/\/ Pointers to UP and BC strings from database$/;"	v
UPDATE_KEYS_ZIP	crypt_zip.c	71;"	d	file:
UPPER	regexp_bt.c	196;"	d	file:
UP_BC_PC_EXTERN	os_mac.h	253;"	d
URL_BACKSLASH	misc1.c	26;"	d	file:
URL_SLASH	misc1.c	25;"	d	file:
USEMEMMOVE	os_vms_conf.h	32;"	d
USEPOPUP_HIDDEN	vim.h	/^    USEPOPUP_HIDDEN	\/\/ use info popup initially hidden$/;"	e	enum:__anon283
USEPOPUP_NONE	vim.h	/^    USEPOPUP_NONE,$/;"	e	enum:__anon283
USEPOPUP_NORMAL	vim.h	/^    USEPOPUP_NORMAL,	\/\/ use info popup$/;"	e	enum:__anon283
USER_CMD	usercmd.c	33;"	d	file:
USER_CMD_GA	usercmd.c	34;"	d	file:
USER_HIGHLIGHT	globals.h	457;"	d
USE_24BIT	vim.h	1643;"	d
USE_24BIT	vim.h	1649;"	d
USE_24BIT	vim.h	1655;"	d
USE_AEVENT	gui_mac.c	42;"	d	file:
USE_AEVENT	gui_mac.c	47;"	d	file:
USE_ARGV	channel.c	5840;"	d	file:
USE_ATSUI_DRAWING	gui_mac.c	165;"	d	file:
USE_CARBONIZED	gui_mac.c	41;"	d	file:
USE_CARBONKEYHANDLER	gui_mac.c	58;"	d	file:
USE_CMD_KEY	os_mac.h	70;"	d
USE_CRNL	os_dos.h	133;"	d
USE_DLOPEN	feature.h	562;"	d
USE_EXE_NAME	os_mac.h	86;"	d
USE_EXE_NAME	os_win32.h	22;"	d
USE_FILE_CHOOSER	vim.h	2322;"	d
USE_FNAME_CASE	os_amiga.h	15;"	d
USE_FNAME_CASE	os_mac.h	93;"	d
USE_FNAME_CASE	os_unix.h	41;"	d
USE_FNAME_CASE	os_win32.h	58;"	d
USE_FONTSET	os_vms_conf.h	205;"	d
USE_FOPEN_NOINH	scriptfile.c	1035;"	d	file:
USE_FSTATFS	memfile.c	129;"	d	file:
USE_GETCWD	os_unix.h	70;"	d
USE_GETCWD	os_vms_conf.h	9;"	d
USE_GNOME_SESSION	gui_gtk_x11.c	163;"	d	file:
USE_ICONV	feature.h	525;"	d
USE_IMACTIVATEFUNC	mbyte.c	4783;"	d	file:
USE_IMACTIVATEFUNC	mbyte.c	4786;"	d	file:
USE_IMSTATUSFUNC	mbyte.c	4784;"	d	file:
USE_IMSTATUSFUNC	mbyte.c	4787;"	d	file:
USE_INPUT_BUF	vim.h	1725;"	d
USE_MCH_ACCESS	fileio.c	21;"	d	file:
USE_MCH_ERRMSG	vim.h	2154;"	d
USE_NL	screen.c	3536;"	d	file:
USE_OFFSETED_WINDOW	gui_mac.c	43;"	d	file:
USE_ON_FLY_SCROLL	gui.h	72;"	d
USE_PANEL_GROUP	gui_photon.c	47;"	d	file:
USE_POPUP_SETPOS	mouse.c	121;"	d	file:
USE_PRINTF_FORMAT_ATTRIBUTE	vim.h	2101;"	d
USE_REDRAW	screen.c	3538;"	d	file:
USE_RUBY_INTEGER	if_ruby.c	36;"	d	file:
USE_SYSMENU_FONT	gui_w32.c	4067;"	d	file:
USE_SYSTEM	os_beos.h	14;"	d
USE_SYSTEM	os_vms_conf.h	10;"	d
USE_TCL_STUBS	if_tcl.c	73;"	d	file:
USE_TERM_CONSOLE	os_amiga.h	16;"	d
USE_TERM_CONSOLE	os_beos.h	16;"	d
USE_TERM_CONSOLE	os_haiku.h	14;"	d
USE_TERM_CONSOLE	os_win32.h	23;"	d
USE_THREAD_FOR_INPUT_WITH_TIMEOUT	os_beos.h	15;"	d
USE_TMPNAM	os_amiga.h	85;"	d
USE_TMPNAM	os_mac.h	103;"	d
USE_TMPNAM	os_qnx.h	13;"	d
USE_TYPEDDATA	if_ruby.c	128;"	d	file:
USE_T_AL	screen.c	3532;"	d	file:
USE_T_CAL	screen.c	3530;"	d	file:
USE_T_CD	screen.c	3537;"	d	file:
USE_T_CDL	screen.c	3531;"	d	file:
USE_T_CE	screen.c	3533;"	d	file:
USE_T_DL	screen.c	3534;"	d	file:
USE_T_SR	screen.c	3535;"	d	file:
USE_UNIXFILENAME	os_mac.h	76;"	d
USE_UTF8LOOKUP	gui_x11.c	753;"	d	file:
USE_UTF8_STRING	os_unix.c	2015;"	d	file:
USE_VIMPTY_GETENV	os_mac.h	241;"	d
USE_VTP	os_win32.c	215;"	d	file:
USE_VTP	os_win32.c	217;"	d	file:
USE_X11R6_XIM	mbyte.c	6021;"	d	file:
USE_XIM	feature.h	538;"	d
USE_XSMP	feature.h	931;"	d
USE_XSMP_INTERACT	feature.h	934;"	d
USING_FLOAT_STUFF	eval.c	13;"	d	file:
USING_FLOAT_STUFF	evalfunc.c	13;"	d	file:
USING_FLOAT_STUFF	json.c	15;"	d	file:
USING_FLOAT_STUFF	message.c	15;"	d	file:
USING_FLOAT_STUFF	vim9compile.c	14;"	d	file:
USING_FLOAT_STUFF	vim9execute.c	14;"	d	file:
USING_SETJMP	os_unix.c	873;"	d	file:
USR_EXRC_FILE	os_amiga.h	154;"	d
USR_EXRC_FILE	os_dos.h	36;"	d
USR_EXRC_FILE	os_haiku.h	18;"	d
USR_EXRC_FILE	os_mac.h	152;"	d
USR_EXRC_FILE	os_unix.h	249;"	d
USR_EXRC_FILE	os_unix.h	251;"	d
USR_EXRC_FILE2	os_amiga.h	157;"	d
USR_EXRC_FILE2	os_dos.h	39;"	d
USR_EXRC_FILE2	os_haiku.h	19;"	d
USR_EXRC_FILE2	os_unix.h	256;"	d
USR_GVIMRC_FILE	os_amiga.h	180;"	d
USR_GVIMRC_FILE	os_dos.h	47;"	d
USR_GVIMRC_FILE	os_haiku.h	22;"	d
USR_GVIMRC_FILE	os_mac.h	141;"	d
USR_GVIMRC_FILE	os_unix.h	282;"	d
USR_GVIMRC_FILE	os_unix.h	284;"	d
USR_GVIMRC_FILE2	os_amiga.h	183;"	d
USR_GVIMRC_FILE2	os_dos.h	50;"	d
USR_GVIMRC_FILE2	os_haiku.h	23;"	d
USR_GVIMRC_FILE2	os_unix.h	290;"	d
USR_GVIMRC_FILE2	os_unix.h	292;"	d
USR_GVIMRC_FILE3	os_amiga.h	186;"	d
USR_GVIMRC_FILE3	os_dos.h	53;"	d
USR_GVIMRC_FILE3	os_unix.h	298;"	d
USR_GVIMRC_FILE4	os_amiga.h	189;"	d
USR_VIMRC_FILE	os_amiga.h	161;"	d
USR_VIMRC_FILE	os_dos.h	20;"	d
USR_VIMRC_FILE	os_haiku.h	20;"	d
USR_VIMRC_FILE	os_mac.h	148;"	d
USR_VIMRC_FILE	os_unix.h	261;"	d
USR_VIMRC_FILE	os_unix.h	263;"	d
USR_VIMRC_FILE2	os_amiga.h	164;"	d
USR_VIMRC_FILE2	os_dos.h	23;"	d
USR_VIMRC_FILE2	os_haiku.h	21;"	d
USR_VIMRC_FILE2	os_unix.h	270;"	d
USR_VIMRC_FILE2	os_unix.h	272;"	d
USR_VIMRC_FILE3	os_amiga.h	167;"	d
USR_VIMRC_FILE3	os_dos.h	26;"	d
USR_VIMRC_FILE3	os_unix.h	277;"	d
USR_VIMRC_FILE4	os_amiga.h	170;"	d
USR_VIM_DIR	os_haiku.h	16;"	d
UTF_COMPOSINGLIKE	macros.h	214;"	d
UTF_COMPOSINGLIKE	macros.h	216;"	d
UVARNUM_MAX	structs.h	1256;"	d
UVARNUM_MAX	structs.h	1262;"	d
UVARNUM_MAX	structs.h	1270;"	d
UVARNUM_MAX	structs.h	1277;"	d
UVARNUM_MAX	structs.h	1285;"	d
UVARNUM_MAX	structs.h	1289;"	d
U_ALLOC_LINE	undo.c	127;"	d	file:
U_acute	regexp_nfa.c	725;"	d	file:
U_circumflex	regexp_nfa.c	722;"	d	file:
U_diaeresis	regexp_nfa.c	723;"	d	file:
U_grave	regexp_nfa.c	724;"	d	file:
UniChar	os_mac_conv.c	/^typedef int UniChar;$/;"	t	file:
VALID	vim.h	580;"	d
VALID_BOTLINE	vim.h	620;"	d
VALID_BOTLINE_AP	vim.h	621;"	d
VALID_CHEIGHT	vim.h	618;"	d
VALID_CROW	vim.h	619;"	d
VALID_HEAD	vim.h	1901;"	d
VALID_NO_UPDATE	vim.h	578;"	d
VALID_PATH	vim.h	1900;"	d
VALID_STATE	syntax.c	257;"	d	file:
VALID_TOPLINE	vim.h	622;"	d
VALID_VIRTCOL	vim.h	617;"	d
VALID_WCOL	vim.h	616;"	d
VALID_WROW	vim.h	615;"	d
VALUE	if_ruby.c	178;"	d	file:
VARNAME_SIZE	if_tcl.c	98;"	d	file:
VARNUM_MAX	structs.h	1255;"	d
VARNUM_MAX	structs.h	1261;"	d
VARNUM_MAX	structs.h	1269;"	d
VARNUM_MAX	structs.h	1276;"	d
VARNUM_MAX	structs.h	1284;"	d
VARNUM_MAX	structs.h	1288;"	d
VARNUM_MIN	structs.h	1254;"	d
VARNUM_MIN	structs.h	1260;"	d
VARNUM_MIN	structs.h	1268;"	d
VARNUM_MIN	structs.h	1275;"	d
VARNUM_MIN	structs.h	1283;"	d
VARNUM_MIN	structs.h	1287;"	d
VAR_BLOB	structs.h	/^    VAR_BLOB,		\/\/ "v_blob" is used$/;"	e	enum:__anon204
VAR_BOOL	structs.h	/^    VAR_BOOL,		\/\/ "v_number" is used: VVAL_TRUE or VVAL_FALSE$/;"	e	enum:__anon204
VAR_CHANNEL	structs.h	/^    VAR_CHANNEL,	\/\/ "v_channel" is used$/;"	e	enum:__anon204
VAR_CURBUF	if_tcl.c	93;"	d	file:
VAR_CURLINE	if_tcl.c	96;"	d	file:
VAR_CURLNUM	if_tcl.c	97;"	d	file:
VAR_CURWIN	if_tcl.c	94;"	d	file:
VAR_DEF_SCOPE	structs.h	1375;"	d
VAR_DICT	structs.h	/^    VAR_DICT,		\/\/ "v_dict" is used$/;"	e	enum:__anon204
VAR_FIXED	structs.h	1380;"	d
VAR_FLAVOUR_DEFAULT	structs.h	/^    VAR_FLAVOUR_DEFAULT,	\/\/ doesn't start with uppercase$/;"	e	enum:__anon256
VAR_FLAVOUR_SESSION	structs.h	/^    VAR_FLAVOUR_SESSION,	\/\/ starts with uppercase, some lower$/;"	e	enum:__anon256
VAR_FLAVOUR_VIMINFO	structs.h	/^    VAR_FLAVOUR_VIMINFO		\/\/ all uppercase$/;"	e	enum:__anon256
VAR_FLOAT	structs.h	/^    VAR_FLOAT,		\/\/ "v_float" is used$/;"	e	enum:__anon204
VAR_FUNC	structs.h	/^    VAR_FUNC,		\/\/ "v_string" is function name$/;"	e	enum:__anon204
VAR_JOB	structs.h	/^    VAR_JOB,		\/\/ "v_job" is used$/;"	e	enum:__anon204
VAR_LBASE	if_tcl.c	95;"	d	file:
VAR_LIST	structs.h	/^    VAR_LIST,		\/\/ "v_list" is used$/;"	e	enum:__anon204
VAR_LOCKED	structs.h	1379;"	d
VAR_NUMBER	structs.h	/^    VAR_NUMBER,		\/\/ "v_number" is used$/;"	e	enum:__anon204
VAR_PARTIAL	structs.h	/^    VAR_PARTIAL,	\/\/ "v_partial" is used$/;"	e	enum:__anon204
VAR_RANGE1	if_tcl.c	90;"	d	file:
VAR_RANGE2	if_tcl.c	91;"	d	file:
VAR_RANGE3	if_tcl.c	92;"	d	file:
VAR_SCOPE	structs.h	1374;"	d
VAR_SHORT_LEN	structs.h	1561;"	d
VAR_SPECIAL	structs.h	/^    VAR_SPECIAL,	\/\/ "v_number" is used: VVAL_NULL or VVAL_NONE$/;"	e	enum:__anon204
VAR_STRING	structs.h	/^    VAR_STRING,		\/\/ "v_string" is used$/;"	e	enum:__anon204
VAR_TYPE_BLOB	vim.h	2018;"	d
VAR_TYPE_BOOL	vim.h	2014;"	d
VAR_TYPE_CHANNEL	vim.h	2017;"	d
VAR_TYPE_DICT	vim.h	2012;"	d
VAR_TYPE_FLOAT	vim.h	2013;"	d
VAR_TYPE_FUNC	vim.h	2010;"	d
VAR_TYPE_JOB	vim.h	2016;"	d
VAR_TYPE_LIST	vim.h	2011;"	d
VAR_TYPE_NONE	vim.h	2015;"	d
VAR_TYPE_NUMBER	vim.h	2008;"	d
VAR_TYPE_STRING	vim.h	2009;"	d
VAR_UNKNOWN	structs.h	/^    VAR_UNKNOWN = 0,	\/\/ not set, also used for "any" type$/;"	e	enum:__anon204
VAR_VOID	structs.h	/^    VAR_VOID,		\/\/ no value$/;"	e	enum:__anon204
VAR_WIN	optiondefs.h	245;"	d
VCOL_HLC	drawline.c	429;"	d	file:
VER_PLATFORM_WIN32_WINDOWS	os_win32.c	761;"	d	file:
VE_ALL	option.h	1029;"	d
VE_BLOCK	option.h	1027;"	d
VE_INSERT	option.h	1028;"	d
VE_ONEMORE	option.h	1030;"	d
VGR_GLOBAL	vim.h	2436;"	d
VGR_NOJUMP	vim.h	2437;"	d
VIF_FORCEIT	vim.h	2452;"	d
VIF_GET_OLDFILES	vim.h	2453;"	d
VIF_WANT_INFO	vim.h	2450;"	d
VIF_WANT_MARKS	vim.h	2451;"	d
VIM9_NAMESPACE_CHAR	vim9compile.c	1830;"	d	file:
VIMBAT_UNINSTKEY	dosinst.h	358;"	d
VIMENC_ATOM_NAME	vim.h	2028;"	d
VIMERR	if_tcl.c	107;"	d	file:
VIMINFO_FILE	os_amiga.h	194;"	d
VIMINFO_FILE	os_dos.h	66;"	d
VIMINFO_FILE	os_haiku.h	24;"	d
VIMINFO_FILE	os_mac.h	192;"	d
VIMINFO_FILE	os_unix.h	313;"	d
VIMINFO_FILE	os_unix.h	315;"	d
VIMINFO_FILE2	os_dos.h	69;"	d
VIMINFO_FILE2	os_unix.h	319;"	d
VIMINFO_VERSION	vim.h	1117;"	d
VIMINFO_VERSION_WITH_HISTORY	vim.h	1118;"	d
VIMINFO_VERSION_WITH_MARKS	vim.h	1120;"	d
VIMINFO_VERSION_WITH_REGISTERS	vim.h	1119;"	d
VIMOUT	if_tcl.c	106;"	d	file:
VIMPACKAGE	vim.h	205;"	d
VIMRC_FILE	os_amiga.h	203;"	d
VIMRC_FILE	os_dos.h	74;"	d
VIMRC_FILE	os_mac.h	156;"	d
VIMRC_FILE	os_unix.h	328;"	d
VIMSCRAPFLAVOR	gui_mac.c	51;"	d	file:
VIMSPELLMAGIC	spellfile.c	270;"	d	file:
VIMSPELLMAGICL	spellfile.c	271;"	d	file:
VIMSPELLVERSION	spellfile.c	272;"	d	file:
VIMSUGMAGIC	spell.c	69;"	d	file:
VIMSUGMAGIC	spell.h	230;"	d
VIMSUGMAGICL	spell.c	70;"	d	file:
VIMSUGMAGICL	spell.h	231;"	d
VIMSUGVERSION	spell.c	71;"	d	file:
VIMSUGVERSION	spell.h	232;"	d
VIM_ALL	vim.h	1172;"	d
VIM_ATOM_NAME	vim.h	2027;"	d
VIM_BACKTICK	feature.h	177;"	d
VIM_CANCEL	vim.h	1171;"	d
VIM_CLASS	gui_x11.c	58;"	d	file:
VIM_CLASSNAME	os_mswin.c	1919;"	d	file:
VIM_CLASSNAME_LEN	os_mswin.c	1920;"	d	file:
VIM_CLASSW	gui_w32.c	4070;"	d	file:
VIM_CLEAR	macros.h	334;"	d
VIM_DEFAULT	optiondefs.h	283;"	d
VIM_DEFAULTS_FILE	os_amiga.h	173;"	d
VIM_DEFAULTS_FILE	os_dos.h	29;"	d
VIM_DEFAULTS_FILE	os_mac.h	133;"	d
VIM_DEFAULTS_FILE	os_unix.h	303;"	d
VIM_DISCARDALL	vim.h	1173;"	d
VIM_ERROR	vim.h	1160;"	d
VIM_GENERIC	vim.h	1159;"	d
VIM_INFO	vim.h	1162;"	d
VIM_ISBREAK	macros.h	148;"	d
VIM_ISDIGIT	macros.h	98;"	d
VIM_ISWHITE	macros.h	43;"	d
VIM_LAST_TYPE	vim.h	1164;"	d
VIM_LC_MESSAGES	ex_cmds2.c	1198;"	d	file:
VIM_NAME	gui_w32.c	4069;"	d	file:
VIM_NAME	gui_x11.c	57;"	d	file:
VIM_NO	vim.h	1170;"	d
VIM_QUESTION	vim.h	1163;"	d
VIM_SIZEOF_INT	os_vms_conf.h	29;"	d
VIM_SIZEOF_INT	vim.h	128;"	d
VIM_SIZEOF_INT	vim.h	135;"	d
VIM_SIZEOF_INT	vim.h	137;"	d
VIM_SIZEOF_INT	vim.h	142;"	d
VIM_SIZEOF_LONG	os_vms_conf.h	159;"	d
VIM_SIZEOF_LONG	os_vms_conf.h	167;"	d
VIM_STARTMENU	dosinst.h	76;"	d
VIM_TOSTR	version.h	16;"	d
VIM_TOSTR_	version.h	15;"	d
VIM_VERSION_100	version.h	28;"	d
VIM_VERSION_BUILD	version.h	21;"	d
VIM_VERSION_BUILD_BCD	version.h	22;"	d
VIM_VERSION_BUILD_STR	version.h	30;"	d
VIM_VERSION_DATE_ONLY	version.h	23;"	d
VIM_VERSION_LONG	version.h	49;"	d
VIM_VERSION_LONG_DATE	version.h	50;"	d
VIM_VERSION_LONG_HEAD	version.h	48;"	d
VIM_VERSION_LONG_ONLY	version.h	47;"	d
VIM_VERSION_MAJOR	version.h	19;"	d
VIM_VERSION_MAJOR_STR	version.h	26;"	d
VIM_VERSION_MEDIUM	version.h	46;"	d
VIM_VERSION_MINOR	version.h	20;"	d
VIM_VERSION_MINOR_STR	version.h	27;"	d
VIM_VERSION_NODOT	version.h	44;"	d
VIM_VERSION_PATCHLEVEL	version.h	32;"	d
VIM_VERSION_PATCHLEVEL_STR	version.h	34;"	d
VIM_VERSION_RELEASE	version.h	36;"	d
VIM_VERSION_SHORT	version.h	45;"	d
VIM_WARNING	vim.h	1161;"	d
VIM_YES	vim.h	1169;"	d
VIM__H	vim.h	10;"	d
VISIBLE_HEIGHT	vim.h	1498;"	d
VISIBLE_HEIGHT	vim.h	1501;"	d
VISUAL	vim.h	676;"	d
VIS_SEL	map.c	2219;"	d	file:
VIS_SEL	map.c	2289;"	d	file:
VI_DEFAULT	optiondefs.h	282;"	d
VIsual	globals.h	/^EXTERN pos_T	VIsual;		\/\/ start position of active Visual selection$/;"	v
VIsual_active	globals.h	/^EXTERN int	VIsual_active INIT(= FALSE);$/;"	v
VIsual_mode	globals.h	/^EXTERN int	VIsual_mode INIT(= 'v');$/;"	v
VIsual_mode_orig	normal.c	/^static int	VIsual_mode_orig = NUL;		\/\/ saved Visual mode$/;"	v	file:
VIsual_reselect	globals.h	/^EXTERN int	VIsual_reselect;$/;"	v
VIsual_select	globals.h	/^EXTERN int	VIsual_select INIT(= FALSE);$/;"	v
VMOUSEZ_CLASSNAME	gui_w32.c	4229;"	d	file:
VMOUSEZ_TITLE	gui_w32.c	4230;"	d	file:
VMSH_MOUSEWHEEL	gui_w32.c	4231;"	d	file:
VMSH_SCROLL_LINES	gui_w32.c	4232;"	d	file:
VMS_TEMPNAM	os_unix.h	391;"	d
VOID	gui_w32.c	/^typedef void VOID;$/;"	t	file:
VOID	os_mswin.c	/^typedef void VOID;$/;"	t	file:
VOID	os_win32.c	/^typedef void VOID;$/;"	t	file:
VREPLACE	vim.h	687;"	d
VREPLACE_FLAG	vim.h	686;"	d
VTERM_ANSI_INDEX_NONE	term.c	6337;"	d	file:
VTP_FIRST_SUPPORT_BUILD	os_win32.c	7212;"	d	file:
VVAL_FALSE	vim.h	2002;"	d
VVAL_NONE	vim.h	2004;"	d
VVAL_NULL	vim.h	2005;"	d
VVAL_TRUE	vim.h	2003;"	d
VV_ARGV	vim.h	1998;"	d
VV_BEVAL_BUFNR	vim.h	1943;"	d
VV_BEVAL_COL	vim.h	1947;"	d
VV_BEVAL_LNUM	vim.h	1946;"	d
VV_BEVAL_TEXT	vim.h	1948;"	d
VV_BEVAL_WINID	vim.h	1945;"	d
VV_BEVAL_WINNR	vim.h	1944;"	d
VV_CC_FROM	vim.h	1919;"	d
VV_CC_TO	vim.h	1920;"	d
VV_CHAR	vim.h	1953;"	d
VV_CMDARG	vim.h	1925;"	d
VV_CMDBANG	vim.h	1936;"	d
VV_COMPAT	evalvars.c	36;"	d	file:
VV_COMPLETED_ITEM	vim.h	1964;"	d
VV_COUNT	vim.h	1904;"	d
VV_COUNT1	vim.h	1905;"	d
VV_CTYPE	vim.h	1918;"	d
VV_DYING	vim.h	1932;"	d
VV_ECHOSPACE	vim.h	1997;"	d
VV_ERRMSG	vim.h	1907;"	d
VV_ERRORS	vim.h	1971;"	d
VV_EVENT	vim.h	1995;"	d
VV_EXCEPTION	vim.h	1933;"	d
VV_FALSE	vim.h	1972;"	d
VV_FCS_CHOICE	vim.h	1942;"	d
VV_FCS_REASON	vim.h	1941;"	d
VV_FNAME	vim.h	1915;"	d
VV_FNAME_DIFF	vim.h	1924;"	d
VV_FNAME_IN	vim.h	1921;"	d
VV_FNAME_NEW	vim.h	1923;"	d
VV_FNAME_OUT	vim.h	1922;"	d
VV_FOLDDASHES	vim.h	1928;"	d
VV_FOLDEND	vim.h	1927;"	d
VV_FOLDLEVEL	vim.h	1929;"	d
VV_FOLDSTART	vim.h	1926;"	d
VV_HLSEARCH	vim.h	1960;"	d
VV_INSERTMODE	vim.h	1937;"	d
VV_KEY	vim.h	1939;"	d
VV_LANG	vim.h	1916;"	d
VV_LC_TIME	vim.h	1917;"	d
VV_LEN	vim.h	1999;"	d
VV_LNUM	vim.h	1913;"	d
VV_MOUSE_COL	vim.h	1957;"	d
VV_MOUSE_LNUM	vim.h	1956;"	d
VV_MOUSE_WIN	vim.h	1954;"	d
VV_MOUSE_WINID	vim.h	1955;"	d
VV_NAME	evalvars.c	40;"	d	file:
VV_NONE	vim.h	1974;"	d
VV_NULL	vim.h	1975;"	d
VV_NUMBERSIZE	vim.h	1976;"	d
VV_OLDFILES	vim.h	1961;"	d
VV_OP	vim.h	1958;"	d
VV_OPTION_COMMAND	vim.h	1969;"	d
VV_OPTION_NEW	vim.h	1965;"	d
VV_OPTION_OLD	vim.h	1966;"	d
VV_OPTION_OLDGLOBAL	vim.h	1968;"	d
VV_OPTION_OLDLOCAL	vim.h	1967;"	d
VV_OPTION_TYPE	vim.h	1970;"	d
VV_PREVCOUNT	vim.h	1906;"	d
VV_PROFILING	vim.h	1940;"	d
VV_PROGNAME	vim.h	1930;"	d
VV_PROGPATH	vim.h	1963;"	d
VV_REG	vim.h	1935;"	d
VV_RO	evalvars.c	37;"	d	file:
VV_RO_SBX	evalvars.c	38;"	d	file:
VV_SCROLLSTART	vim.h	1949;"	d
VV_SEARCHFORWARD	vim.h	1959;"	d
VV_SEND_SERVER	vim.h	1931;"	d
VV_SHELL_ERROR	vim.h	1910;"	d
VV_STATUSMSG	vim.h	1909;"	d
VV_SWAPCHOICE	vim.h	1951;"	d
VV_SWAPCOMMAND	vim.h	1952;"	d
VV_SWAPNAME	vim.h	1950;"	d
VV_TERMBLINKRESP	vim.h	1994;"	d
VV_TERMRBGRESP	vim.h	1991;"	d
VV_TERMRESPONSE	vim.h	1914;"	d
VV_TERMRFGRESP	vim.h	1990;"	d
VV_TERMSTYLERESP	vim.h	1993;"	d
VV_TERMU7RESP	vim.h	1992;"	d
VV_TESTING	vim.h	1978;"	d
VV_THIS_SESSION	vim.h	1911;"	d
VV_THROWPOINT	vim.h	1934;"	d
VV_TRUE	vim.h	1973;"	d
VV_TYPE_BLOB	vim.h	1989;"	d
VV_TYPE_BOOL	vim.h	1985;"	d
VV_TYPE_CHANNEL	vim.h	1988;"	d
VV_TYPE_DICT	vim.h	1983;"	d
VV_TYPE_FLOAT	vim.h	1984;"	d
VV_TYPE_FUNC	vim.h	1981;"	d
VV_TYPE_JOB	vim.h	1987;"	d
VV_TYPE_LIST	vim.h	1982;"	d
VV_TYPE_NONE	vim.h	1986;"	d
VV_TYPE_NUMBER	vim.h	1979;"	d
VV_TYPE_STRING	vim.h	1980;"	d
VV_VAL	vim.h	1938;"	d
VV_VERSION	vim.h	1912;"	d
VV_VERSIONLONG	vim.h	1996;"	d
VV_VIM_DID_ENTER	vim.h	1977;"	d
VV_WARNINGMSG	vim.h	1908;"	d
VV_WINDOWID	vim.h	1962;"	d
VW_POS_CENTER	gui.h	/^    VW_POS_CENTER,$/;"	e	enum:__anon145
VW_POS_MOUSE	gui.h	/^    VW_POS_MOUSE,$/;"	e	enum:__anon145
VW_POS_TOP_CENTER	gui.h	/^    VW_POS_TOP_CENTER$/;"	e	enum:__anon145
Version	version.c	/^char		*Version = VIM_VERSION_SHORT;$/;"	v
Vim	if_ole.h	/^typedef class Vim Vim;$/;"	t	typeref:class:Vim
Vim	if_ole.h	/^typedef struct Vim Vim;$/;"	t	typeref:struct:Vim
VimApp	gui_haiku.h	/^typedef struct VimApp VimApp;$/;"	t	typeref:struct:VimApp
VimChdir	if_py_both.h	/^VimChdir(PyObject *self UNUSED, PyObject *args, PyObject *kwargs)$/;"	f
VimCheckInterrupt	if_py_both.h	/^VimCheckInterrupt(void)$/;"	f
VimClipType_t	winclip.c	/^} VimClipType_t;$/;"	t	typeref:struct:__anon138	file:
VimCommand	if_py_both.h	/^VimCommand(PyObject *self UNUSED, PyObject *string)$/;"	f
VimError	if_py_both.h	/^static PyObject *VimError;$/;"	v
VimEval	if_py_both.h	/^VimEval(PyObject *self UNUSED, PyObject *args)$/;"	f
VimEvalPy	if_py_both.h	/^VimEvalPy(PyObject *self UNUSED, PyObject *string)$/;"	f
VimFchdir	if_py_both.h	/^VimFchdir(PyObject *self UNUSED, PyObject *args, PyObject *kwargs)$/;"	f
VimForeachRTP	if_py_both.h	/^VimForeachRTP(PyObject *self UNUSED, PyObject *callable)$/;"	f
VimFormView	gui_haiku.h	/^typedef struct VimFormView VimFormView;$/;"	t	typeref:struct:VimFormView
VimMenu	structs.h	/^struct VimMenu$/;"	s
VimMethods	if_py_both.h	/^static struct PyMethodDef VimMethods[] = {$/;"	v	typeref:struct:PyMethodDef
VimPathHook	if_py_both.h	/^VimPathHook(PyObject *self UNUSED, PyObject *args)$/;"	f
VimScrollBar	gui_haiku.h	/^typedef struct VimScrollBar VimScrollBar;$/;"	t	typeref:struct:VimScrollBar
VimStrwidth	if_py_both.h	/^VimStrwidth(PyObject *self UNUSED, PyObject *string)$/;"	f
VimTextAreaView	gui_haiku.h	/^typedef struct VimTextAreaView VimTextAreaView;$/;"	t	typeref:struct:VimTextAreaView
VimToPython	if_py_both.h	/^VimToPython(typval_T *our_tv, int depth, PyObject *lookup_dict)$/;"	f
VimTryEnd	if_py_both.h	/^VimTryEnd(void)$/;"	f
VimTryStart	if_py_both.h	/^VimTryStart(void)$/;"	f
VimWindow	gui.h	/^    WindowPtr	VimWindow;$/;"	m	struct:Gui
VimWindow	gui_haiku.h	/^typedef struct VimWindow VimWindow;$/;"	t	typeref:struct:VimWindow
Vim_GetPaths	if_py_both.h	/^Vim_GetPaths(PyObject *self UNUSED)$/;"	f
Vim_Prim	if_mzsch.c	/^} Vim_Prim;$/;"	t	typeref:struct:__anon54	file:
VirtKeyMap	os_win32.c	/^} VirtKeyMap[] =$/;"	v	typeref:struct:__anon82	file:
WANT_X11	feature.h	918;"	d
WARGCOUNT	structs.h	850;"	d
WARGLIST	structs.h	846;"	d
WAS_BANNED	spellsuggest.c	73;"	d	file:
WCHAR	gui_w32.c	/^typedef int WCHAR;$/;"	t	file:
WCHAR	os_mswin.c	/^typedef int WCHAR;$/;"	t	file:
WCHAR	os_win32.c	/^typedef int WCHAR;$/;"	t	file:
WC_KEY_OFF	spell.h	314;"	d
WEXITSTATUS	os_unixx.h	33;"	d
WEXITSTATUS	os_unixx.h	35;"	d
WFP_COMPFORBID	spell.h	169;"	d
WFP_COMPPERMIT	spell.h	168;"	d
WFP_NC	spell.h	166;"	d
WFP_RARE	spell.h	165;"	d
WFP_UP	spell.h	167;"	d
WF_AFX	spell.h	150;"	d
WF_ALLCAP	spell.h	147;"	d
WF_BANNED	spell.h	149;"	d
WF_CAPMASK	spell.h	154;"	d
WF_COMPROOT	spell.h	160;"	d
WF_FIXCAP	spell.h	151;"	d
WF_HAS_AFF	spell.h	157;"	d
WF_KEEPCAP	spell.h	152;"	d
WF_MIXCAP	spellsuggest.c	35;"	d	file:
WF_NEEDCOMP	spell.h	158;"	d
WF_NOCOMPAFT	spell.h	162;"	d
WF_NOCOMPBEF	spell.h	161;"	d
WF_NOSUGGEST	spell.h	159;"	d
WF_ONECAP	spell.h	146;"	d
WF_PFX_COMPFORBID	spell.h	178;"	d
WF_PFX_COMPPERMIT	spell.h	176;"	d
WF_PFX_NC	spell.h	174;"	d
WF_PFX_UP	spell.h	175;"	d
WF_RARE	spell.h	148;"	d
WF_RAREPFX	spell.h	173;"	d
WF_REGION	spell.h	145;"	d
WHILE_SCOPE	vim9compile.c	/^    WHILE_SCOPE,$/;"	e	enum:__anon129	file:
WHITE	regexp_bt.c	180;"	d	file:
WHITECHAR	edit.c	2067;"	d	file:
WIFEXITED	os_unixx.h	41;"	d
WIFEXITED	os_unixx.h	43;"	d
WILDCHAR_LIST	os_mac.h	230;"	d
WILD_ADD_SLASH	vim.h	814;"	d
WILD_ALL	vim.h	806;"	d
WILD_ALLLINKS	vim.h	819;"	d
WILD_ALL_KEEP	vim.h	808;"	d
WILD_BUFLASTUSED	vim.h	822;"	d
WILD_ESCAPE	vim.h	817;"	d
WILD_EXPAND_FREE	vim.h	802;"	d
WILD_EXPAND_KEEP	vim.h	803;"	d
WILD_FREE	vim.h	801;"	d
WILD_HOME_REPLACE	vim.h	811;"	d
WILD_ICASE	vim.h	818;"	d
WILD_IGNORE_COMPLETESLASH	vim.h	820;"	d
WILD_KEEP_ALL	vim.h	815;"	d
WILD_LIST_NOTFOUND	vim.h	810;"	d
WILD_LONGEST	vim.h	807;"	d
WILD_NEXT	vim.h	804;"	d
WILD_NOERROR	vim.h	821;"	d
WILD_NO_BEEP	vim.h	813;"	d
WILD_PREV	vim.h	805;"	d
WILD_SILENT	vim.h	816;"	d
WILD_USE_NL	vim.h	812;"	d
WIM_BUFLASTUSED	option.h	344;"	d
WIM_FULL	option.h	341;"	d
WIM_LIST	option.h	343;"	d
WIM_LONGEST	option.h	342;"	d
WIN32	mbyte.c	94;"	d	file:
WIN32UNIX	os_unix.h	37;"	d
WIN32_LEAN_AND_MEAN	if_cscope.h	16;"	d
WIN32_LEAN_AND_MEAN	mbyte.c	84;"	d	file:
WIN32_LEAN_AND_MEAN	os_unix.c	57;"	d	file:
WIN32_LEAN_AND_MEAN	os_w32dll.c	16;"	d	file:
WIN32_LEAN_AND_MEAN	ui.c	22;"	d	file:
WIN32_LEAN_AND_MEAN	vimrun.c	22;"	d	file:
WIN32_LEAN_AND_MEAN	winclip.c	24;"	d	file:
WIN32_LEAN_AND_MEAN	xpm_w32.c	13;"	d	file:
WINAPI	gui_w32.c	/^typedef int WINAPI;$/;"	t	file:
WINAPI	gui_w32.c	3800;"	d	file:
WINAPI	os_mswin.c	80;"	d	file:
WINAPI	os_win32.c	97;"	d	file:
WINAPI	terminal.c	6014;"	d	file:
WINAPI	winclip.c	34;"	d	file:
WINBAR_HEIGHT	vim.h	1497;"	d
WINBAR_HEIGHT	vim.h	1500;"	d
WINBASEAPI	os_mswin.c	81;"	d	file:
WINBASEAPI	winclip.c	35;"	d	file:
WINBYTE	mbyte.c	88;"	d	file:
WINBYTE	mbyte.c	91;"	d	file:
WINBYTE	mbyte.c	97;"	d	file:
WINDOW_REF	if_mzsch.c	212;"	d	file:
WINDOW_REF	if_mzsch.c	215;"	d	file:
WINNT_RESERVE_BYTES	os_win32.c	6438;"	d	file:
WINPTY_DLL	terminal.c	6359;"	d	file:
WINPTY_MOUSE_MODE_FORCE	terminal.c	6340;"	d	file:
WINPTY_SPAWN_FLAG_AUTO_SHUTDOWN	terminal.c	6338;"	d	file:
WINPTY_SPAWN_FLAG_EXIT_AFTER_SHUTDOWN	terminal.c	6339;"	d	file:
WIN_HOR	structs.h	3813;"	d
WIN_IS_POPUP	vim.h	644;"	d
WIN_IS_POPUP	vim.h	646;"	d
WIN_PYTHON_REF	if_python.c	785;"	d	file:
WIN_PYTHON_REF	if_python3.c	787;"	d	file:
WIN_TABS	structs.h	3815;"	d
WIN_VER	structs.h	3814;"	d
WITH_NL	regexp_bt.c	199;"	d	file:
WL_BRI	drawline.c	398;"	d	file:
WL_CMDLINE	drawline.c	382;"	d	file:
WL_FOLD	drawline.c	387;"	d	file:
WL_LINE	drawline.c	407;"	d	file:
WL_NR	drawline.c	396;"	d	file:
WL_SBR	drawline.c	403;"	d	file:
WL_SIGN	drawline.c	392;"	d	file:
WL_START	drawline.c	380;"	d	file:
WM_MOUSEWHEEL	gui_w32.c	3921;"	d	file:
WM_OLE	vim.h	2041;"	d
WM_SCROLLED	globals.h	1228;"	d
WM_SHOWN	globals.h	1227;"	d
WM_XBUTTONDBLCLK	gui_w32.c	228;"	d	file:
WM_XBUTTONDOWN	gui_w32.c	226;"	d	file:
WM_XBUTTONUP	gui_w32.c	227;"	d	file:
WNDENUMPROC	os_mswin.c	/^typedef int WNDENUMPROC;$/;"	t	file:
WNDPROC	gui_w32.c	/^typedef int WNDPROC;$/;"	t	file:
WN_MASK	spellfile.c	1891;"	d	file:
WORD	gui_w32.c	/^typedef int WORD;$/;"	t	file:
WORD	os_mswin.c	/^typedef int WORD;$/;"	t	file:
WORD	os_win32.c	/^typedef int WORD;$/;"	t	file:
WORD	regexp_bt.c	188;"	d	file:
WORKDIR	dosinst.c	1927;"	d	file:
WORST	regexp_bt.c	242;"	d	file:
WPARAM	gui_w32.c	/^typedef int WPARAM;$/;"	t	file:
WPARAM	os_mswin.c	/^typedef int WPARAM;$/;"	t	file:
WPF_RESTORETOMAXIMIZED	gui_w32.c	3318;"	d	file:
WRITEBIN	vim.h	1544;"	d
WRITEBIN	vim.h	1548;"	d
WRITEBUFSIZE	structs.h	4052;"	d
WSInitialized	os_mswin.c	/^int WSInitialized = FALSE; \/\/ WinSock is initialized$/;"	v
WSP_ABOVE	vim.h	1184;"	d
WSP_BELOW	vim.h	1183;"	d
WSP_BOT	vim.h	1181;"	d
WSP_HELP	vim.h	1182;"	d
WSP_NEWLOC	vim.h	1185;"	d
WSP_ROOM	vim.h	1178;"	d
WSP_TOP	vim.h	1180;"	d
WSP_VERT	vim.h	1179;"	d
WT_ENV	nbdebug.h	/^		WT_ENV = 1,		\/\/ look for env var if set$/;"	e	enum:__anon169
WT_STOP	nbdebug.h	/^		WT_STOP			\/\/ look for ~\/.gvimstop if set$/;"	e	enum:__anon169
WT_WAIT	nbdebug.h	/^		WT_WAIT,		\/\/ look for ~\/.gvimwait if set$/;"	e	enum:__anon169
WV_ARAB	option.h	/^    , WV_ARAB$/;"	e	enum:__anon172
WV_BRI	option.h	/^    , WV_BRI$/;"	e	enum:__anon172
WV_BRIOPT	option.h	/^    , WV_BRIOPT$/;"	e	enum:__anon172
WV_CC	option.h	/^    , WV_CC$/;"	e	enum:__anon172
WV_COCU	option.h	/^    , WV_COCU$/;"	e	enum:__anon172
WV_COLE	option.h	/^    , WV_COLE$/;"	e	enum:__anon172
WV_COUNT	option.h	/^    , WV_COUNT	    \/\/ must be the last one$/;"	e	enum:__anon172
WV_CRBIND	option.h	/^    , WV_CRBIND$/;"	e	enum:__anon172
WV_CUC	option.h	/^    , WV_CUC$/;"	e	enum:__anon172
WV_CUL	option.h	/^    , WV_CUL$/;"	e	enum:__anon172
WV_CULOPT	option.h	/^    , WV_CULOPT$/;"	e	enum:__anon172
WV_DIFF	option.h	/^    , WV_DIFF$/;"	e	enum:__anon172
WV_FDC	option.h	/^    , WV_FDC$/;"	e	enum:__anon172
WV_FDE	option.h	/^    , WV_FDE$/;"	e	enum:__anon172
WV_FDI	option.h	/^    , WV_FDI$/;"	e	enum:__anon172
WV_FDL	option.h	/^    , WV_FDL$/;"	e	enum:__anon172
WV_FDM	option.h	/^    , WV_FDM$/;"	e	enum:__anon172
WV_FDN	option.h	/^    , WV_FDN$/;"	e	enum:__anon172
WV_FDT	option.h	/^    , WV_FDT$/;"	e	enum:__anon172
WV_FEN	option.h	/^    , WV_FEN$/;"	e	enum:__anon172
WV_FML	option.h	/^    , WV_FML$/;"	e	enum:__anon172
WV_FMR	option.h	/^    , WV_FMR$/;"	e	enum:__anon172
WV_LBR	option.h	/^    , WV_LBR$/;"	e	enum:__anon172
WV_LIST	option.h	/^    WV_LIST = 0$/;"	e	enum:__anon172
WV_NU	option.h	/^    , WV_NU$/;"	e	enum:__anon172
WV_NUW	option.h	/^    , WV_NUW$/;"	e	enum:__anon172
WV_PVW	option.h	/^    , WV_PVW$/;"	e	enum:__anon172
WV_RL	option.h	/^    , WV_RL$/;"	e	enum:__anon172
WV_RLC	option.h	/^    , WV_RLC$/;"	e	enum:__anon172
WV_RNU	option.h	/^    , WV_RNU$/;"	e	enum:__anon172
WV_SBR	option.h	/^    , WV_SBR$/;"	e	enum:__anon172
WV_SCBIND	option.h	/^    , WV_SCBIND$/;"	e	enum:__anon172
WV_SCL	option.h	/^    , WV_SCL$/;"	e	enum:__anon172
WV_SCROLL	option.h	/^    , WV_SCROLL$/;"	e	enum:__anon172
WV_SISO	option.h	/^    , WV_SISO$/;"	e	enum:__anon172
WV_SO	option.h	/^    , WV_SO$/;"	e	enum:__anon172
WV_SPELL	option.h	/^    , WV_SPELL$/;"	e	enum:__anon172
WV_STL	option.h	/^    , WV_STL$/;"	e	enum:__anon172
WV_TWK	option.h	/^    , WV_TWK$/;"	e	enum:__anon172
WV_TWS	option.h	/^    , WV_TWS$/;"	e	enum:__anon172
WV_WCR	option.h	/^    , WV_WCR$/;"	e	enum:__anon172
WV_WFH	option.h	/^    , WV_WFH$/;"	e	enum:__anon172
WV_WFW	option.h	/^    , WV_WFW$/;"	e	enum:__anon172
WV_WRAP	option.h	/^    , WV_WRAP$/;"	e	enum:__anon172
WW_ALL	option.h	219;"	d
W_ENDCOL	vim.h	852;"	d
W_NEXT	globals.h	664;"	d
W_OK	vim.h	1568;"	d
W_WINROW	vim.h	854;"	d
W_WINROW	vim.h	856;"	d
WaitForChar	os_unix.c	/^WaitForChar(long msec, int *interrupted, int ignore_input)$/;"	f	file:
WaitForChar	os_win32.c	/^WaitForChar(long msec, int ignore_input)$/;"	f	file:
WaitForCharOrMouse	os_unix.c	/^WaitForCharOrMouse(long msec, int *interrupted, int ignore_input)$/;"	f	file:
WaitForPend	if_xcmdsrv.c	/^WaitForPend(void *p)$/;"	f	file:
WaitForReply	if_xcmdsrv.c	/^WaitForReply(void *p)$/;"	f	file:
WaitNextEventWrp	gui_mac.c	/^WaitNextEventWrp(EventMask eventMask, EventRecord *theEvent, UInt32 sleep, RgnHandle mouseRgn)$/;"	f
WantQueryMouse	globals.h	/^EXTERN int	WantQueryMouse INIT(= FALSE);$/;"	v
WcsLen	gui_at_fs.c	/^WcsLen(wchar_t *p)$/;"	f	file:
WideCharToMultiByte_alloc	winclip.c	/^WideCharToMultiByte_alloc(UINT cp, DWORD flags,$/;"	f
Widget	proto.h	25;"	d
WinListAsSeq	if_py_both.h	/^static PySequenceMethods WinListAsSeq;$/;"	v
WinListAsSeq	if_python.c	/^static PySequenceMethods WinListAsSeq = {$/;"	v	file:
WinListAsSeq	if_python3.c	/^static PySequenceMethods WinListAsSeq = {$/;"	v	file:
WinListDestructor	if_py_both.h	/^WinListDestructor(WinListObject *self)$/;"	f
WinListItem	if_py_both.h	/^WinListItem(WinListObject *self, PyInt n)$/;"	f
WinListLength	if_py_both.h	/^WinListLength(WinListObject *self)$/;"	f
WinListNew	if_py_both.h	/^WinListNew(TabPageObject *tabObject)$/;"	f
WinListObject	if_py_both.h	/^} WinListObject;$/;"	t	typeref:struct:__anon164
WinListType	if_py_both.h	/^static PyTypeObject WinListType;$/;"	v
Window	os_amiga.c	20;"	d	file:
WindowAttr	if_py_both.h	/^WindowAttr(WindowObject *self, char *name)$/;"	f
WindowAttrValid	if_py_both.h	/^WindowAttrValid(WindowObject *self, char *name)$/;"	f
WindowAttrs	if_py_both.h	/^static char *WindowAttrs[] = {$/;"	v
WindowClear	if_py_both.h	/^WindowClear(WindowObject *self)$/;"	f
WindowDestructor	if_py_both.h	/^WindowDestructor(WindowObject *self)$/;"	f
WindowDir	if_py_both.h	/^WindowDir(PyObject *self)$/;"	f
WindowGetattr	if_python.c	/^WindowGetattr(PyObject *self, char *name)$/;"	f	file:
WindowGetattro	if_python3.c	/^WindowGetattro(PyObject *self, PyObject *nameobj)$/;"	f	file:
WindowMethods	if_py_both.h	/^static struct PyMethodDef WindowMethods[] = {$/;"	v	typeref:struct:PyMethodDef
WindowNew	if_py_both.h	/^WindowNew(win_T *win, tabpage_T *tab)$/;"	f
WindowObject	if_py_both.h	/^} WindowObject;$/;"	t	typeref:struct:__anon163
WindowRepr	if_py_both.h	/^WindowRepr(WindowObject *self)$/;"	f
WindowSearch	gui_mac.c	/^struct WindowSearch \/\/ for handling class 'KAHL', event 'SRCH', keyDirectObject typeChar$/;"	s	file:
WindowSearch	gui_mac.c	/^typedef struct WindowSearch WindowSearch;$/;"	t	typeref:struct:WindowSearch	file:
WindowSetattr	if_py_both.h	/^WindowSetattr(WindowObject *self, char *name, PyObject *valObject)$/;"	f
WindowSetattro	if_python3.c	/^WindowSetattro(PyObject *self, PyObject *nameobj, PyObject *val)$/;"	f	file:
WindowTraverse	if_py_both.h	/^WindowTraverse(WindowObject *self, visitproc visit, void *arg)$/;"	f
WindowType	if_py_both.h	/^static PyTypeObject WindowType;$/;"	v
WindowType_Check	if_python.c	1207;"	d	file:
WindowType_Check	if_python3.c	1169;"	d	file:
WindowValid	if_xcmdsrv.c	/^WindowValid(Display *dpy, Window w)$/;"	f	file:
WtWait	nbdebug.h	/^} WtWait;$/;"	t	typeref:enum:__anon169
XAllocClassHint	gui_gtk_vms.h	85;"	d
XAllocColor	gui_gtk_vms.h	86;"	d
XAllocColorCells	gui_gtk_vms.h	87;"	d
XAllocSizeHints	gui_gtk_vms.h	88;"	d
XAllocWMHints	gui_gtk_vms.h	89;"	d
XAutoRepeatOff	gui_gtk_vms.h	90;"	d
XAutoRepeatOn	gui_gtk_vms.h	91;"	d
XBaseFontNameListOfFontSet	gui_gtk_vms.h	92;"	d
XBell	gui_gtk_vms.h	93;"	d
XBitmapPad	gui_gtk_vms.h	94;"	d
XChangeActivePointerGrab	gui_gtk_vms.h	95;"	d
XChangeGC	gui_gtk_vms.h	96;"	d
XChangeProperty	gui_gtk_vms.h	97;"	d
XChangeWindowAttributes	gui_gtk_vms.h	98;"	d
XCheckIfEvent	gui_gtk_vms.h	99;"	d
XCheckMaskEvent	gui_gtk_vms.h	100;"	d
XCheckTypedEvent	gui_gtk_vms.h	101;"	d
XCheckTypedWindowEvent	gui_gtk_vms.h	102;"	d
XCheckWindowEvent	gui_gtk_vms.h	103;"	d
XClearArea	gui_gtk_vms.h	104;"	d
XClearWindow	gui_gtk_vms.h	105;"	d
XClipBox	gui_gtk_vms.h	106;"	d
XCloseDisplay	gui_gtk_vms.h	107;"	d
XCloseIM	gui_gtk_vms.h	108;"	d
XConfigureWindow	gui_gtk_vms.h	109;"	d
XConvertSelection	gui_gtk_vms.h	110;"	d
XCopyArea	gui_gtk_vms.h	111;"	d
XCopyGC	gui_gtk_vms.h	112;"	d
XCopyPlane	gui_gtk_vms.h	113;"	d
XCreateBitmapFromData	gui_gtk_vms.h	114;"	d
XCreateColormap	gui_gtk_vms.h	115;"	d
XCreateFontCursor	gui_gtk_vms.h	116;"	d
XCreateFontSet	gui_gtk_vms.h	117;"	d
XCreateGC	gui_gtk_vms.h	118;"	d
XCreateIC	gui_gtk_vms.h	119;"	d
XCreateImage	gui_gtk_vms.h	120;"	d
XCreatePixmap	gui_gtk_vms.h	121;"	d
XCreatePixmapCursor	gui_gtk_vms.h	122;"	d
XCreatePixmapFromBitmapData	gui_gtk_vms.h	123;"	d
XCreateRegion	gui_gtk_vms.h	124;"	d
XCreateSimpleWindow	gui_gtk_vms.h	125;"	d
XCreateWindow	gui_gtk_vms.h	126;"	d
XD_GUI	os_unix.c	1727;"	d	file:
XD_HERE	os_unix.c	1726;"	d	file:
XD_NONE	os_unix.c	1725;"	d	file:
XD_XTERM	os_unix.c	1728;"	d	file:
XDefaultRootWindow	gui_gtk_vms.h	127;"	d
XDefaultScreenOfDisplay	gui_gtk_vms.h	128;"	d
XDefineCursor	gui_gtk_vms.h	129;"	d
XDeleteProperty	gui_gtk_vms.h	130;"	d
XDestroyIC	gui_gtk_vms.h	131;"	d
XDestroyRegion	gui_gtk_vms.h	132;"	d
XDestroyWindow	gui_gtk_vms.h	133;"	d
XDisplayName	gui_gtk_vms.h	134;"	d
XDisplayOfScreen	gui_gtk_vms.h	135;"	d
XDisplayString	gui_gtk_vms.h	136;"	d
XDrawArc	gui_gtk_vms.h	137;"	d
XDrawImageString	gui_gtk_vms.h	138;"	d
XDrawImageString16	gui_gtk_vms.h	139;"	d
XDrawImageString16	gui_x11.c	117;"	d	file:
XDrawLine	gui_gtk_vms.h	140;"	d
XDrawLines	gui_gtk_vms.h	141;"	d
XDrawPoint	gui_gtk_vms.h	142;"	d
XDrawPoints	gui_gtk_vms.h	143;"	d
XDrawRectangle	gui_gtk_vms.h	144;"	d
XDrawSegments	gui_gtk_vms.h	145;"	d
XDrawString	gui_gtk_vms.h	146;"	d
XDrawString	gui_x11.c	99;"	d	file:
XDrawString16	gui_gtk_vms.h	147;"	d
XDrawString16	gui_x11.c	108;"	d	file:
XEmptyRegion	gui_gtk_vms.h	148;"	d
XEqualRegion	gui_gtk_vms.h	149;"	d
XEventsQueued	gui_gtk_vms.h	150;"	d
XExtentsOfFontSet	gui_gtk_vms.h	151;"	d
XFetchBuffer	gui_gtk_vms.h	152;"	d
XFillArc	gui_gtk_vms.h	153;"	d
XFillPolygon	gui_gtk_vms.h	154;"	d
XFillRectangle	gui_gtk_vms.h	155;"	d
XFillRectangles	gui_gtk_vms.h	156;"	d
XFilterEvent	gui_gtk_vms.h	157;"	d
XFlush	gui_gtk_vms.h	158;"	d
XFontsOfFontSet	gui_gtk_vms.h	159;"	d
XFree	gui_gtk_vms.h	160;"	d
XFreeColormap	gui_gtk_vms.h	161;"	d
XFreeColors	gui_gtk_vms.h	162;"	d
XFreeCursor	gui_gtk_vms.h	163;"	d
XFreeFont	gui_gtk_vms.h	164;"	d
XFreeFontInfo	gui_gtk_vms.h	165;"	d
XFreeFontNames	gui_gtk_vms.h	166;"	d
XFreeFontSet	gui_gtk_vms.h	167;"	d
XFreeGC	gui_gtk_vms.h	168;"	d
XFreeModifiermap	gui_gtk_vms.h	169;"	d
XFreePixmap	gui_gtk_vms.h	170;"	d
XFreeStringList	gui_gtk_vms.h	171;"	d
XGetAtomName	gui_gtk_vms.h	172;"	d
XGetDefault	gui_gtk_vms.h	173;"	d
XGetErrorDatabaseText	gui_gtk_vms.h	174;"	d
XGetErrorText	gui_gtk_vms.h	175;"	d
XGetFontProperty	gui_gtk_vms.h	176;"	d
XGetGCValues	gui_gtk_vms.h	177;"	d
XGetGeometry	gui_gtk_vms.h	178;"	d
XGetICValues	gui_gtk_vms.h	180;"	d
XGetIMValues	gui_gtk_vms.h	181;"	d
XGetIconSizes	gui_gtk_vms.h	179;"	d
XGetImage	gui_gtk_vms.h	182;"	d
XGetKeyboardControl	gui_gtk_vms.h	183;"	d
XGetModifierMapping	gui_gtk_vms.h	184;"	d
XGetMotionEvents	gui_gtk_vms.h	185;"	d
XGetNormalHints	gui_gtk_vms.h	186;"	d
XGetSelectionOwner	gui_gtk_vms.h	187;"	d
XGetSubImage	gui_gtk_vms.h	188;"	d
XGetVisualInfo	gui_gtk_vms.h	189;"	d
XGetWMColormapWindows	gui_gtk_vms.h	190;"	d
XGetWMHints	gui_gtk_vms.h	193;"	d
XGetWMIconName	gui_gtk_vms.h	191;"	d
XGetWMName	gui_gtk_vms.h	194;"	d
XGetWMNormalHints	gui_gtk_vms.h	195;"	d
XGetWMProtocols	gui_gtk_vms.h	192;"	d
XGetWindowAttributes	gui_gtk_vms.h	196;"	d
XGetWindowProperty	gui_gtk_vms.h	197;"	d
XGrabKeyboard	gui_gtk_vms.h	198;"	d
XGrabPointer	gui_gtk_vms.h	199;"	d
XGrabServer	gui_gtk_vms.h	200;"	d
XHeightOfScreen	gui_gtk_vms.h	201;"	d
XIconifyWindow	gui_gtk_vms.h	202;"	d
XIfEvent	gui_gtk_vms.h	203;"	d
XImage	proto.h	32;"	d
XInternAtom	gui_gtk_vms.h	204;"	d
XIntersectRegion	gui_gtk_vms.h	205;"	d
XKeycodeToKeysym	gui_gtk_vms.h	206;"	d
XKeysymToKeycode	gui_gtk_vms.h	207;"	d
XKeysymToString	gui_gtk_vms.h	208;"	d
XListFonts	gui_gtk_vms.h	209;"	d
XListFontsWithInfo	gui_gtk_vms.h	210;"	d
XListPixmapFormats	gui_gtk_vms.h	211;"	d
XListProperties	gui_gtk_vms.h	212;"	d
XLoadQueryFont	gui_gtk_vms.h	213;"	d
XLookupString	gui_gtk_vms.h	214;"	d
XLowerWindow	gui_gtk_vms.h	215;"	d
XMapRaised	gui_gtk_vms.h	216;"	d
XMapWindow	gui_gtk_vms.h	217;"	d
XMatchVisualInfo	gui_gtk_vms.h	218;"	d
XMoveResizeWindow	gui_gtk_vms.h	219;"	d
XMoveWindow	gui_gtk_vms.h	220;"	d
XNextEvent	gui_gtk_vms.h	221;"	d
XOffsetRegion	gui_gtk_vms.h	222;"	d
XOpenDisplay	gui_gtk_vms.h	223;"	d
XOpenIM	gui_gtk_vms.h	224;"	d
XPMATTRIBUTES_TYPE	os_vms_conf.h	11;"	d
XP_BS_NONE	structs.h	588;"	d
XP_BS_ONE	structs.h	589;"	d
XP_BS_THREE	structs.h	590;"	d
XParseColor	gui_gtk_vms.h	225;"	d
XParseGeometry	gui_gtk_vms.h	226;"	d
XPeekEvent	gui_gtk_vms.h	227;"	d
XPending	gui_gtk_vms.h	228;"	d
XPointInRegion	gui_gtk_vms.h	229;"	d
XPolygonRegion	gui_gtk_vms.h	230;"	d
XPutBackEvent	gui_gtk_vms.h	231;"	d
XPutImage	gui_gtk_vms.h	232;"	d
XQueryColor	gui_gtk_vms.h	234;"	d
XQueryColors	gui_gtk_vms.h	235;"	d
XQueryExtension	gui_gtk_vms.h	236;"	d
XQueryPointer	gui_gtk_vms.h	237;"	d
XQueryTree	gui_gtk_vms.h	238;"	d
XRaiseWindow	gui_gtk_vms.h	239;"	d
XReconfigureWMWindow	gui_gtk_vms.h	240;"	d
XRectInRegion	gui_gtk_vms.h	241;"	d
XRefreshKeyboardMapping	gui_gtk_vms.h	242;"	d
XReparentWindow	gui_gtk_vms.h	243;"	d
XResizeWindow	gui_gtk_vms.h	244;"	d
XRestackWindows	gui_gtk_vms.h	245;"	d
XRootWindow	gui_gtk_vms.h	233;"	d
XRootWindowOfScreen	gui_gtk_vms.h	246;"	d
XScreenNumberOfScreen	gui_gtk_vms.h	247;"	d
XSelectAsyncEvent	gui_gtk_vms.h	248;"	d
XSelectAsyncInput	gui_gtk_vms.h	249;"	d
XSelectInput	gui_gtk_vms.h	250;"	d
XSendEvent	gui_gtk_vms.h	251;"	d
XServerVendor	gui_gtk_vms.h	252;"	d
XSetBackground	gui_gtk_vms.h	253;"	d
XSetClassHint	gui_gtk_vms.h	254;"	d
XSetClipMask	gui_gtk_vms.h	255;"	d
XSetClipOrigin	gui_gtk_vms.h	256;"	d
XSetClipRectangles	gui_gtk_vms.h	257;"	d
XSetCloseDownMode	gui_gtk_vms.h	258;"	d
XSetCommand	gui_gtk_vms.h	259;"	d
XSetDashes	gui_gtk_vms.h	260;"	d
XSetErrorHandler	gui_gtk_vms.h	261;"	d
XSetFillStyle	gui_gtk_vms.h	262;"	d
XSetFont	gui_gtk_vms.h	263;"	d
XSetForeground	gui_gtk_vms.h	264;"	d
XSetFunction	gui_gtk_vms.h	265;"	d
XSetGraphicsExposures	gui_gtk_vms.h	266;"	d
XSetICFocus	gui_gtk_vms.h	267;"	d
XSetICValues	gui_gtk_vms.h	268;"	d
XSetIOErrorHandler	gui_gtk_vms.h	269;"	d
XSetInputFocus	gui_gtk_vms.h	270;"	d
XSetLineAttributes	gui_gtk_vms.h	271;"	d
XSetLocaleModifiers	gui_gtk_vms.h	272;"	d
XSetNormalHints	gui_gtk_vms.h	273;"	d
XSetRegion	gui_gtk_vms.h	274;"	d
XSetSelectionOwner	gui_gtk_vms.h	275;"	d
XSetStipple	gui_gtk_vms.h	276;"	d
XSetSubwindowMode	gui_gtk_vms.h	277;"	d
XSetTSOrigin	gui_gtk_vms.h	278;"	d
XSetTile	gui_gtk_vms.h	279;"	d
XSetTransientForHint	gui_gtk_vms.h	280;"	d
XSetWMColormapWindows	gui_gtk_vms.h	281;"	d
XSetWMHints	gui_gtk_vms.h	282;"	d
XSetWMIconName	gui_gtk_vms.h	283;"	d
XSetWMName	gui_gtk_vms.h	284;"	d
XSetWMNormalHints	gui_gtk_vms.h	285;"	d
XSetWMProperties	gui_gtk_vms.h	286;"	d
XSetWMProtocols	gui_gtk_vms.h	287;"	d
XSetWindowBackground	gui_gtk_vms.h	288;"	d
XSetWindowBackgroundPixmap	gui_gtk_vms.h	289;"	d
XSetWindowColormap	gui_gtk_vms.h	290;"	d
XShapeCombineMask	gui_gtk_vms.h	291;"	d
XShapeCombineRectangles	gui_gtk_vms.h	292;"	d
XShapeGetRectangles	gui_gtk_vms.h	293;"	d
XShrinkRegion	gui_gtk_vms.h	294;"	d
XStoreBuffer	gui_gtk_vms.h	295;"	d
XStoreColor	gui_gtk_vms.h	296;"	d
XStoreColors	gui_gtk_vms.h	297;"	d
XStoreName	gui_gtk_vms.h	298;"	d
XStringToKeysym	gui_gtk_vms.h	299;"	d
XSubtractRegion	gui_gtk_vms.h	300;"	d
XSupportsLocale	gui_gtk_vms.h	301;"	d
XSync	gui_gtk_vms.h	302;"	d
XSynchronize	gui_gtk_vms.h	303;"	d
XT_LEN	term.c	5850;"	d	file:
XT_TRACE_DELAY	os_unix.c	159;"	d	file:
XTextExtents	gui_gtk_vms.h	304;"	d
XTextExtents16	gui_gtk_vms.h	305;"	d
XTextWidth	gui_gtk_vms.h	306;"	d
XTextWidth16	gui_gtk_vms.h	307;"	d
XTranslateCoordinates	gui_gtk_vms.h	308;"	d
XUndefineCursor	gui_gtk_vms.h	309;"	d
XUngrabKeyboard	gui_gtk_vms.h	310;"	d
XUngrabPointer	gui_gtk_vms.h	311;"	d
XUngrabServer	gui_gtk_vms.h	312;"	d
XUnionRectWithRegion	gui_gtk_vms.h	313;"	d
XUnionRegion	gui_gtk_vms.h	314;"	d
XUnmapWindow	gui_gtk_vms.h	315;"	d
XUnsetICFocus	gui_gtk_vms.h	317;"	d
XVaCreateNestedList	gui_gtk_vms.h	318;"	d
XVisualIDFromVisual	gui_gtk_vms.h	319;"	d
XWarpPointer	gui_gtk_vms.h	320;"	d
XWidthOfScreen	gui_gtk_vms.h	321;"	d
XWindowEvent	gui_gtk_vms.h	322;"	d
XWithdrawWindow	gui_gtk_vms.h	323;"	d
XXorRegion	gui_gtk_vms.h	324;"	d
X_2_COL	gui.h	109;"	d
X_2_COL	gui.h	114;"	d
X_DISPLAY	vim.h	2304;"	d
X_DISPLAY	vim.h	2306;"	d
X_DISPLAY	vim.h	2311;"	d
X_DISPLAY	vim.h	2313;"	d
X_DISPLAY	vim.h	2316;"	d
X_LOCALE	os_vms_conf.h	206;"	d
XmAddProtocolCallback	gui_gtk_vms.h	325;"	d
XmAddProtocols	gui_gtk_vms.h	326;"	d
XmBOTTOM	gui_xmebw.h	58;"	d
XmCLocation	gui_xmebw.h	38;"	d
XmCShift	gui_xmebw.h	31;"	d
XmChangeColor	gui_gtk_vms.h	327;"	d
XmClipboardCopy	gui_gtk_vms.h	328;"	d
XmClipboardEndCopy	gui_gtk_vms.h	329;"	d
XmClipboardInquireLength	gui_gtk_vms.h	330;"	d
XmClipboardLock	gui_gtk_vms.h	331;"	d
XmClipboardRetrieve	gui_gtk_vms.h	332;"	d
XmClipboardStartCopy	gui_gtk_vms.h	333;"	d
XmClipboardUnlock	gui_gtk_vms.h	334;"	d
XmCreateArrowButton	gui_gtk_vms.h	335;"	d
XmCreateArrowButtonGadget	gui_gtk_vms.h	336;"	d
XmCreateCascadeButton	gui_gtk_vms.h	337;"	d
XmCreateDialogShell	gui_gtk_vms.h	338;"	d
XmCreateDragIcon	gui_gtk_vms.h	339;"	d
XmCreateDrawingArea	gui_gtk_vms.h	340;"	d
XmCreateDrawnButton	gui_gtk_vms.h	341;"	d
XmCreateFileSelectionBox	gui_gtk_vms.h	342;"	d
XmCreateFileSelectionDialog	gui_gtk_vms.h	343;"	d
XmCreateForm	gui_gtk_vms.h	344;"	d
XmCreateFormDialog	gui_gtk_vms.h	345;"	d
XmCreateFrame	gui_gtk_vms.h	346;"	d
XmCreateInformationDialog	gui_gtk_vms.h	347;"	d
XmCreateLabelGadget	gui_gtk_vms.h	348;"	d
XmCreateMainWindow	gui_gtk_vms.h	349;"	d
XmCreateMenuBar	gui_gtk_vms.h	350;"	d
XmCreateMessageBox	gui_gtk_vms.h	351;"	d
XmCreateMessageDialog	gui_gtk_vms.h	352;"	d
XmCreateOptionMenu	gui_gtk_vms.h	353;"	d
XmCreatePanedWindow	gui_gtk_vms.h	354;"	d
XmCreatePopupMenu	gui_gtk_vms.h	355;"	d
XmCreatePromptDialog	gui_gtk_vms.h	356;"	d
XmCreatePulldownMenu	gui_gtk_vms.h	357;"	d
XmCreatePushButton	gui_gtk_vms.h	358;"	d
XmCreatePushButtonGadget	gui_gtk_vms.h	359;"	d
XmCreateQuestionDialog	gui_gtk_vms.h	360;"	d
XmCreateRadioBox	gui_gtk_vms.h	361;"	d
XmCreateRowColumn	gui_gtk_vms.h	362;"	d
XmCreateScale	gui_gtk_vms.h	363;"	d
XmCreateScrollBar	gui_gtk_vms.h	364;"	d
XmCreateScrolledList	gui_gtk_vms.h	365;"	d
XmCreateScrolledText	gui_gtk_vms.h	366;"	d
XmCreateScrolledWindow	gui_gtk_vms.h	367;"	d
XmCreateSelectionDialog	gui_gtk_vms.h	368;"	d
XmCreateSeparator	gui_gtk_vms.h	369;"	d
XmCreateSeparatorGadget	gui_gtk_vms.h	370;"	d
XmCreateTemplateDialog	gui_gtk_vms.h	371;"	d
XmCreateText	gui_gtk_vms.h	372;"	d
XmCreateTextField	gui_gtk_vms.h	373;"	d
XmCreateToggleButton	gui_gtk_vms.h	374;"	d
XmCreateToggleButtonGadget	gui_gtk_vms.h	375;"	d
XmDragStart	gui_gtk_vms.h	376;"	d
XmDropSiteRegister	gui_gtk_vms.h	377;"	d
XmDropSiteUnregister	gui_gtk_vms.h	378;"	d
XmDropSiteUpdate	gui_gtk_vms.h	379;"	d
XmDropTransferStart	gui_gtk_vms.h	380;"	d
XmEnhancedButtonClassPart	gui_xmebwp.h	/^} XmEnhancedButtonClassPart;$/;"	t	typeref:struct:_XmEnhancedButtonClassPart
XmEnhancedButtonClassRec	gui_xmebwp.h	/^} XmEnhancedButtonClassRec;$/;"	t	typeref:struct:__anon146
XmEnhancedButtonPart	gui_xmebwp.h	/^} XmEnhancedButtonPart;$/;"	t	typeref:struct:_XmEnhancedButtonPart
XmEnhancedButtonRec	gui_xmebwp.h	/^} XmEnhancedButtonRec;$/;"	t	typeref:struct:_XmEnhancedButtonRec
XmEnhancedButtonWidget	gui_xmebw.h	/^typedef struct _XmEnhancedButtonRec *XmEnhancedButtonWidget;$/;"	t	typeref:struct:_XmEnhancedButtonRec
XmEnhancedButtonWidgetClass	gui_xmebw.h	/^typedef struct _XmEnhancedButtonClassRec *XmEnhancedButtonWidgetClass;$/;"	t	typeref:struct:_XmEnhancedButtonClassRec
XmFOCUS_IGNORE	gui_xmebw.c	78;"	d	file:
XmFileSelectionBoxGetChild	gui_gtk_vms.h	381;"	d
XmFileSelectionDoSearch	gui_gtk_vms.h	382;"	d
XmFontListAppendEntry	gui_gtk_vms.h	383;"	d
XmFontListCopy	gui_gtk_vms.h	384;"	d
XmFontListCreate	gui_gtk_vms.h	385;"	d
XmFontListEntryCreate	gui_gtk_vms.h	386;"	d
XmFontListEntryFree	gui_gtk_vms.h	387;"	d
XmFontListEntryGetFont	gui_gtk_vms.h	388;"	d
XmFontListEntryGetTag	gui_gtk_vms.h	389;"	d
XmFontListEntryLoad	gui_gtk_vms.h	390;"	d
XmFontListFree	gui_gtk_vms.h	391;"	d
XmFontListFreeFontContext	gui_gtk_vms.h	392;"	d
XmFontListGetNextFont	gui_gtk_vms.h	393;"	d
XmFontListInitFontContext	gui_gtk_vms.h	394;"	d
XmFontListNextEntry	gui_gtk_vms.h	395;"	d
XmGetColors	gui_gtk_vms.h	396;"	d
XmGetFocusWidget	gui_gtk_vms.h	397;"	d
XmGetMenuCursor	gui_gtk_vms.h	398;"	d
XmGetPixmapByDepth	gui_gtk_vms.h	399;"	d
XmGetTearOffControl	gui_gtk_vms.h	400;"	d
XmGetXmDisplay	gui_gtk_vms.h	401;"	d
XmImMbLookupString	gui_gtk_vms.h	402;"	d
XmImRegister	gui_gtk_vms.h	403;"	d
XmImSetFocusValues	gui_gtk_vms.h	404;"	d
XmImSetValues	gui_gtk_vms.h	405;"	d
XmImUnregister	gui_gtk_vms.h	406;"	d
XmImUnsetFocus	gui_gtk_vms.h	407;"	d
XmInternAtom	gui_gtk_vms.h	408;"	d
XmIsEnhancedButton	gui_xmebw.h	61;"	d
XmIsMotifWMRunning	gui_gtk_vms.h	409;"	d
XmLEFT	gui_xmebw.h	55;"	d
XmListAddItem	gui_gtk_vms.h	410;"	d
XmListAddItemUnselected	gui_gtk_vms.h	411;"	d
XmListAddItemsUnselected	gui_gtk_vms.h	412;"	d
XmListDeleteAllItems	gui_gtk_vms.h	413;"	d
XmListDeleteItemsPos	gui_gtk_vms.h	414;"	d
XmListDeletePos	gui_gtk_vms.h	415;"	d
XmListDeselectAllItems	gui_gtk_vms.h	416;"	d
XmListDeselectPos	gui_gtk_vms.h	417;"	d
XmListGetKbdItemPos	gui_gtk_vms.h	418;"	d
XmListGetMatchPos	gui_gtk_vms.h	419;"	d
XmListGetSelectedPos	gui_gtk_vms.h	420;"	d
XmListPosSelected	gui_gtk_vms.h	421;"	d
XmListSelectItem	gui_gtk_vms.h	422;"	d
XmListSelectPos	gui_gtk_vms.h	423;"	d
XmListSetBottomPos	gui_gtk_vms.h	424;"	d
XmListSetItem	gui_gtk_vms.h	425;"	d
XmListSetKbdItemPos	gui_gtk_vms.h	426;"	d
XmListSetPos	gui_gtk_vms.h	427;"	d
XmMainWindowSetAreas	gui_gtk_vms.h	428;"	d
XmMenuPosition	gui_gtk_vms.h	429;"	d
XmMessageBoxGetChild	gui_gtk_vms.h	430;"	d
XmNlabelLocation	gui_xmebw.h	35;"	d
XmNpixmapData	gui_xmebw.h	42;"	d
XmNpixmapFile	gui_xmebw.h	46;"	d
XmNshift	gui_xmebw.h	28;"	d
XmOptionButtonGadget	gui_gtk_vms.h	431;"	d
XmOptionLabelGadget	gui_gtk_vms.h	432;"	d
XmProcessTraversal	gui_gtk_vms.h	433;"	d
XmQmotif	gui_gtk_vms.h	434;"	d
XmRIGHT	gui_xmebw.h	56;"	d
XmRemoveProtocolCallback	gui_gtk_vms.h	435;"	d
XmRepTypeGetId	gui_gtk_vms.h	436;"	d
XmRepTypeGetRecord	gui_gtk_vms.h	437;"	d
XmRepTypeRegister	gui_gtk_vms.h	438;"	d
XmRepTypeValidValue	gui_gtk_vms.h	439;"	d
XmScrollBarSetValues	gui_gtk_vms.h	440;"	d
XmScrolledWindowSetAreas	gui_gtk_vms.h	441;"	d
XmSelectionBoxGetChild	gui_gtk_vms.h	442;"	d
XmStringByteCompare	gui_gtk_vms.h	443;"	d
XmStringCompare	gui_gtk_vms.h	444;"	d
XmStringConcat	gui_gtk_vms.h	445;"	d
XmStringCopy	gui_gtk_vms.h	446;"	d
XmStringCreate	gui_gtk_vms.h	447;"	d
XmStringCreateLocalized	gui_gtk_vms.h	448;"	d
XmStringCreateLtoR	gui_gtk_vms.h	449;"	d
XmStringCreateSimple	gui_gtk_vms.h	450;"	d
XmStringDraw	gui_gtk_vms.h	451;"	d
XmStringDrawUnderline	gui_gtk_vms.h	452;"	d
XmStringExtent	gui_gtk_vms.h	453;"	d
XmStringFree	gui_gtk_vms.h	454;"	d
XmStringFreeContext	gui_gtk_vms.h	455;"	d
XmStringGetLtoR	gui_gtk_vms.h	456;"	d
XmStringGetNextComponent	gui_gtk_vms.h	457;"	d
XmStringGetNextSegment	gui_gtk_vms.h	458;"	d
XmStringInitContext	gui_gtk_vms.h	459;"	d
XmStringLength	gui_gtk_vms.h	460;"	d
XmStringLtoRCreate	gui_gtk_vms.h	461;"	d
XmStringNConcat	gui_gtk_vms.h	462;"	d
XmStringSegmentCreate	gui_gtk_vms.h	463;"	d
XmStringWidth	gui_gtk_vms.h	464;"	d
XmTOP	gui_xmebw.h	57;"	d
XmTextClearSelection	gui_gtk_vms.h	465;"	d
XmTextFieldGetEditable	gui_gtk_vms.h	466;"	d
XmTextFieldGetInsertionPosition	gui_gtk_vms.h	467;"	d
XmTextFieldGetLastPosition	gui_gtk_vms.h	468;"	d
XmTextFieldGetSelection	gui_gtk_vms.h	469;"	d
XmTextFieldGetString	gui_gtk_vms.h	470;"	d
XmTextFieldInsert	gui_gtk_vms.h	471;"	d
XmTextFieldRemove	gui_gtk_vms.h	472;"	d
XmTextFieldSetSelection	gui_gtk_vms.h	473;"	d
XmTextFieldSetString	gui_gtk_vms.h	474;"	d
XmTextGetCursorPosition	gui_gtk_vms.h	475;"	d
XmTextGetInsertionPosition	gui_gtk_vms.h	476;"	d
XmTextGetLastPosition	gui_gtk_vms.h	477;"	d
XmTextGetMaxLength	gui_gtk_vms.h	478;"	d
XmTextGetSelection	gui_gtk_vms.h	479;"	d
XmTextGetSelectionPosition	gui_gtk_vms.h	480;"	d
XmTextGetString	gui_gtk_vms.h	481;"	d
XmTextInsert	gui_gtk_vms.h	482;"	d
XmTextRemove	gui_gtk_vms.h	483;"	d
XmTextReplace	gui_gtk_vms.h	484;"	d
XmTextSetCursorPosition	gui_gtk_vms.h	485;"	d
XmTextSetHighlight	gui_gtk_vms.h	486;"	d
XmTextSetInsertionPosition	gui_gtk_vms.h	487;"	d
XmTextSetSelection	gui_gtk_vms.h	488;"	d
XmTextSetString	gui_gtk_vms.h	489;"	d
XmToggleButtonGadgetGetState	gui_gtk_vms.h	490;"	d
XmToggleButtonGadgetSetState	gui_gtk_vms.h	491;"	d
XmToggleButtonGetState	gui_gtk_vms.h	492;"	d
XmToggleButtonSetState	gui_gtk_vms.h	493;"	d
XmUpdateDisplay	gui_gtk_vms.h	494;"	d
XmVaCreateSimpleRadioBox	gui_gtk_vms.h	495;"	d
XmbDrawString	gui_gtk_vms.h	496;"	d
XmbLookupString	gui_gtk_vms.h	497;"	d
XmbResetIC	gui_gtk_vms.h	498;"	d
XmbSetWMProperties	gui_gtk_vms.h	499;"	d
XmbTextEscapement	gui_gtk_vms.h	500;"	d
XmbTextExtents	gui_gtk_vms.h	501;"	d
XmbTextListToTextProperty	gui_gtk_vms.h	502;"	d
XmbTextPropertyToTextList	gui_gtk_vms.h	503;"	d
XmeClearBorder	gui_xmebw.c	66;"	d	file:
XmeDrawHighlight	gui_xmebw.c	68;"	d	file:
XmeDrawShadows	gui_xmebw.c	67;"	d	file:
XmuClientWindow	gui_gtk_vms.h	504;"	d
XmuPrintDefaultErrorMessage	gui_gtk_vms.h	505;"	d
XrmGetDatabase	gui_gtk_vms.h	506;"	d
XrmGetResource	gui_gtk_vms.h	507;"	d
XrmPutStringResource	gui_gtk_vms.h	508;"	d
XrmQuarkToString	gui_gtk_vms.h	509;"	d
XrmStringToQuark	gui_gtk_vms.h	510;"	d
XtAddCallback	gui_gtk_vms.h	511;"	d
XtAddCallbacks	gui_gtk_vms.h	512;"	d
XtAddEventHandler	gui_gtk_vms.h	513;"	d
XtAddGrab	gui_gtk_vms.h	514;"	d
XtAllocateGC	gui_gtk_vms.h	515;"	d
XtAppAddActions	gui_gtk_vms.h	516;"	d
XtAppAddInput	gui_gtk_vms.h	517;"	d
XtAppAddTimeOut	gui_gtk_vms.h	518;"	d
XtAppCreateShell	gui_gtk_vms.h	519;"	d
XtAppInitialize	gui_gtk_vms.h	520;"	d
XtAppNextEvent	gui_gtk_vms.h	521;"	d
XtAppPeekEvent	gui_gtk_vms.h	522;"	d
XtAppPending	gui_gtk_vms.h	523;"	d
XtAppProcessEvent	gui_gtk_vms.h	524;"	d
XtAppSetErrorHandler	gui_gtk_vms.h	525;"	d
XtAppSetFallbackResources	gui_gtk_vms.h	526;"	d
XtAppSetWarningHandler	gui_gtk_vms.h	527;"	d
XtAppSetWarningMsgHandler	gui_gtk_vms.h	528;"	d
XtAppWarning	gui_gtk_vms.h	529;"	d
XtCBoldFont	gui_x11.c	255;"	d	file:
XtCBoldItalicFont	gui_x11.c	259;"	d	file:
XtCBottomShadowPixel	gui_at_sb.h	81;"	d
XtCItalicFont	gui_x11.c	257;"	d	file:
XtCLimitThumb	gui_at_sb.h	82;"	d
XtCMaxOfThumb	gui_at_sb.h	78;"	d
XtCMenuBackground	gui_x11.c	272;"	d	file:
XtCMenuFont	gui_x11.c	265;"	d	file:
XtCMenuFontSet	gui_x11.c	267;"	d	file:
XtCMenuForeground	gui_x11.c	274;"	d	file:
XtCMenuHeight	gui_x11.c	263;"	d	file:
XtCMinimumThumb	gui_at_sb.h	75;"	d
XtCScrollBackground	gui_x11.c	278;"	d	file:
XtCScrollForeground	gui_x11.c	280;"	d	file:
XtCScrollbarWidth	gui_x11.c	261;"	d	file:
XtCShadowWidth	gui_at_sb.h	79;"	d
XtCShown	gui_at_sb.h	76;"	d
XtCTooltipBackground	gui_x11.c	284;"	d	file:
XtCTooltipFont	gui_x11.c	288;"	d	file:
XtCTooltipForeground	gui_x11.c	286;"	d	file:
XtCTopOfThumb	gui_at_sb.h	77;"	d
XtCTopShadowPixel	gui_at_sb.h	80;"	d
XtCallActionProc	gui_gtk_vms.h	530;"	d
XtCallCallbackList	gui_gtk_vms.h	531;"	d
XtCallCallbacks	gui_gtk_vms.h	532;"	d
XtConfigureWidget	gui_gtk_vms.h	533;"	d
XtConvertAndStore	gui_gtk_vms.h	534;"	d
XtCreateApplicationContext	gui_gtk_vms.h	535;"	d
XtCreateManagedWidget	gui_gtk_vms.h	536;"	d
XtCreatePopupShell	gui_gtk_vms.h	537;"	d
XtCreateWidget	gui_gtk_vms.h	538;"	d
XtDatabase	gui_gtk_vms.h	539;"	d
XtDestroyWidget	gui_gtk_vms.h	540;"	d
XtDisownSelection	gui_gtk_vms.h	541;"	d
XtDispatchEvent	gui_gtk_vms.h	542;"	d
XtDisplayOfObject	gui_gtk_vms.h	543;"	d
XtDisplayStringConvWarning	gui_gtk_vms.h	544;"	d
XtDisplayToApplicationContext	gui_gtk_vms.h	545;"	d
XtFree	gui_gtk_vms.h	546;"	d
XtGetActionKeysym	gui_gtk_vms.h	547;"	d
XtGetActionList	gui_gtk_vms.h	548;"	d
XtGetApplicationNameAndClass	gui_gtk_vms.h	549;"	d
XtGetApplicationResources	gui_gtk_vms.h	550;"	d
XtGetGC	gui_gtk_vms.h	551;"	d
XtGetMultiClickTime	gui_gtk_vms.h	552;"	d
XtGetSelectionValue	gui_gtk_vms.h	553;"	d
XtGetSelectionValues	gui_gtk_vms.h	554;"	d
XtGetSubresources	gui_gtk_vms.h	555;"	d
XtGetValues	gui_gtk_vms.h	556;"	d
XtGrabKeyboard	gui_gtk_vms.h	557;"	d
XtGrabPointer	gui_gtk_vms.h	558;"	d
XtHasCallbacks	gui_gtk_vms.h	559;"	d
XtInitializeWidgetClass	gui_gtk_vms.h	560;"	d
XtInsertEventHandler	gui_gtk_vms.h	561;"	d
XtIsManaged	gui_gtk_vms.h	562;"	d
XtIsObject	gui_gtk_vms.h	563;"	d
XtIsSensitive	gui_gtk_vms.h	564;"	d
XtIsSubclass	gui_gtk_vms.h	565;"	d
XtLastTimestampProcessed	gui_gtk_vms.h	566;"	d
XtMakeGeometryRequest	gui_gtk_vms.h	567;"	d
XtMakeResizeRequest	gui_gtk_vms.h	568;"	d
XtMalloc	gui_gtk_vms.h	569;"	d
XtManageChild	gui_gtk_vms.h	570;"	d
XtManageChildren	gui_gtk_vms.h	571;"	d
XtMergeArgLists	gui_gtk_vms.h	572;"	d
XtMoveWidget	gui_gtk_vms.h	573;"	d
XtName	gui_gtk_vms.h	574;"	d
XtNameToWidget	gui_gtk_vms.h	575;"	d
XtNboldFont	gui_x11.c	254;"	d	file:
XtNboldItalicFont	gui_x11.c	258;"	d	file:
XtNbottomShadowPixel	gui_at_sb.h	89;"	d
XtNitalicFont	gui_x11.c	256;"	d	file:
XtNlimitThumb	gui_at_sb.h	90;"	d
XtNmaxOfThumb	gui_at_sb.h	86;"	d
XtNmenuBackground	gui_x11.c	271;"	d	file:
XtNmenuFont	gui_x11.c	264;"	d	file:
XtNmenuFontSet	gui_x11.c	266;"	d	file:
XtNmenuForeground	gui_x11.c	273;"	d	file:
XtNmenuHeight	gui_x11.c	262;"	d	file:
XtNminimumThumb	gui_at_sb.h	84;"	d
XtNscrollBackground	gui_x11.c	277;"	d	file:
XtNscrollForeground	gui_x11.c	279;"	d	file:
XtNscrollbarWidth	gui_x11.c	260;"	d	file:
XtNshadowWidth	gui_at_sb.h	87;"	d
XtNtooltipBackground	gui_x11.c	283;"	d	file:
XtNtooltipFont	gui_x11.c	287;"	d	file:
XtNtooltipForeground	gui_x11.c	285;"	d	file:
XtNtopOfThumb	gui_at_sb.h	85;"	d
XtNtopShadowPixel	gui_at_sb.h	88;"	d
XtOpenDisplay	gui_gtk_vms.h	576;"	d
XtOverrideTranslations	gui_gtk_vms.h	577;"	d
XtOwnSelection	gui_gtk_vms.h	578;"	d
XtParent	gui_gtk_vms.h	579;"	d
XtParseTranslationTable	gui_gtk_vms.h	580;"	d
XtPopdown	gui_gtk_vms.h	581;"	d
XtPopup	gui_gtk_vms.h	582;"	d
XtQueryGeometry	gui_gtk_vms.h	583;"	d
XtRealizeWidget	gui_gtk_vms.h	584;"	d
XtRealloc	gui_gtk_vms.h	585;"	d
XtRegisterDrawable	gui_gtk_vms.h	738;"	d
XtReleaseGC	gui_gtk_vms.h	586;"	d
XtRemoveAllCallbacks	gui_gtk_vms.h	587;"	d
XtRemoveCallback	gui_gtk_vms.h	588;"	d
XtRemoveEventHandler	gui_gtk_vms.h	589;"	d
XtRemoveGrab	gui_gtk_vms.h	590;"	d
XtRemoveInput	gui_gtk_vms.h	591;"	d
XtRemoveTimeOut	gui_gtk_vms.h	592;"	d
XtResizeWidget	gui_gtk_vms.h	593;"	d
XtResolvePathname	gui_gtk_vms.h	594;"	d
XtSetKeyboardFocus	gui_gtk_vms.h	595;"	d
XtSetMappedWhenManaged	gui_gtk_vms.h	596;"	d
XtSetSensitive	gui_gtk_vms.h	597;"	d
XtSetTypeConverter	gui_gtk_vms.h	598;"	d
XtSetValues	gui_gtk_vms.h	599;"	d
XtShellStrings	gui_gtk_vms.h	600;"	d
XtStrings	gui_gtk_vms.h	601;"	d
XtToolkitInitialize	gui_gtk_vms.h	602;"	d
XtTranslateCoords	gui_gtk_vms.h	603;"	d
XtTranslateKeycode	gui_gtk_vms.h	604;"	d
XtUngrabKeyboard	gui_gtk_vms.h	605;"	d
XtUngrabPointer	gui_gtk_vms.h	606;"	d
XtUnmanageChild	gui_gtk_vms.h	607;"	d
XtUnmanageChildren	gui_gtk_vms.h	608;"	d
XtUnrealizeWidget	gui_gtk_vms.h	609;"	d
XtUnregisterDrawable	gui_gtk_vms.h	739;"	d
XtVaAppCreateShell	gui_gtk_vms.h	610;"	d
XtVaCreateManagedWidget	gui_gtk_vms.h	611;"	d
XtVaCreatePopupShell	gui_gtk_vms.h	612;"	d
XtVaCreateWidget	gui_gtk_vms.h	613;"	d
XtVaGetValues	gui_gtk_vms.h	614;"	d
XtVaSetValues	gui_gtk_vms.h	615;"	d
XtWarning	gui_gtk_vms.h	616;"	d
XtWidgetToApplicationContext	gui_gtk_vms.h	617;"	d
XtWindow	gui_gtk_vms.h	618;"	d
XtWindowOfObject	gui_gtk_vms.h	619;"	d
XtWindowToWidget	gui_gtk_vms.h	620;"	d
XwcDrawString	gui_gtk_vms.h	621;"	d
XwcFreeStringList	gui_gtk_vms.h	622;"	d
XwcTextEscapement	gui_gtk_vms.h	623;"	d
XwcTextExtents	gui_gtk_vms.h	624;"	d
XwcTextListToTextProperty	gui_gtk_vms.h	625;"	d
XwcTextPropertyToTextList	gui_gtk_vms.h	626;"	d
Y_2_ROW	gui.h	110;"	d
Y_2_ROW	gui.h	118;"	d
Y_acute	regexp_nfa.c	726;"	d	file:
ZCLOSE	regexp_bt.c	211;"	d	file:
ZERO_BL	memline.c	/^typedef struct block0		ZERO_BL;    \/\/ contents of the first block$/;"	t	typeref:struct:block0	file:
ZERO_FLAG	spellfile.c	263;"	d	file:
ZOPEN	regexp_bt.c	209;"	d	file:
ZREF	regexp_bt.c	212;"	d	file:
_	gui_gtk.c	52;"	d	file:
_	gui_gtk_x11.c	36;"	d	file:
_	if_ruby.c	112;"	d	file:
_	vim.h	2408;"	d
_	vim.h	536;"	d
_	vim.h	548;"	d
_	vim.h	557;"	d
_ConvertFromPyObject	if_py_both.h	/^_ConvertFromPyObject(PyObject *obj, typval_T *tv, PyObject *lookup_dict)$/;"	f
_DEBUG	if_python.c	42;"	d	file:
_DEBUG	if_python3.c	41;"	d	file:
_DEBUG	vim.h	2414;"	d
_DYN_CONSOLE_SCREEN_BUFFER_INFOEX	os_win32.c	/^typedef struct _DYN_CONSOLE_SCREEN_BUFFER_INFOEX$/;"	s	file:
_DYN_STARTUPINFOEXW	terminal.c	/^typedef struct _DYN_STARTUPINFOEXW$/;"	s	file:
_DialogInfo	gui_gtk.c	/^typedef struct _DialogInfo$/;"	s	file:
_DictionaryItem	if_py_both.h	/^_DictionaryItem(DictionaryObject *self, PyObject *args, int flags)$/;"	f
_DllVersionInfo	gui_w32.c	/^typedef struct _DllVersionInfo$/;"	s	file:
_DuringSizing	gui_w32.c	/^_DuringSizing($/;"	f	file:
_Float128	protodef.h	/^typedef double _Float128;$/;"	t
_Float16	protodef.h	/^typedef double _Float16;$/;"	t
_Float32	protodef.h	/^typedef double _Float32;$/;"	t
_Float32x	protodef.h	/^typedef double _Float32x;$/;"	t
_Float64	protodef.h	/^typedef double _Float64;$/;"	t
_Float64x	protodef.h	/^typedef double _Float64x;$/;"	t
_GtkForm	gui_gtk_f.h	/^struct _GtkForm$/;"	s
_GtkFormChild	gui_gtk_f.c	/^struct _GtkFormChild$/;"	s	file:
_GtkFormClass	gui_gtk_f.h	/^struct _GtkFormClass$/;"	s
_IF_MZSCH_H_	if_mzsch.h	6;"	d
_IID	iid_ole.c	/^typedef struct _IID$/;"	s	file:
_INC_GLOBAL_IME	glbl_ime.h	11;"	d
_IO_PTEM_H	os_unixx.h	101;"	d
_ISCYGPTY_H	iscygpty.h	31;"	d
_NO_PROTO	os_unix.h	48;"	d
_OPTION_H_	option.h	14;"	d
_OnActivateApp	gui_w32.c	/^_OnActivateApp($/;"	f	file:
_OnBlinkTimer	gui_w32.c	/^_OnBlinkTimer($/;"	f	file:
_OnChar	gui_w32.c	/^_OnChar($/;"	f	file:
_OnClose	gui_w32.c	/^_OnClose(HWND hwnd UNUSED)$/;"	f	file:
_OnDeadChar	gui_w32.c	/^_OnDeadChar($/;"	f	file:
_OnDestroy	gui_w32.c	/^_OnDestroy(HWND hwnd)$/;"	f	file:
_OnDropFiles	gui_w32.c	/^_OnDropFiles($/;"	f	file:
_OnEndSession	gui_w32.c	/^_OnEndSession(void)$/;"	f	file:
_OnFindRepl	gui_w32.c	/^_OnFindRepl(void)$/;"	f	file:
_OnImeComposition	gui_w32.c	/^_OnImeComposition(HWND hwnd, WPARAM dbcs UNUSED, LPARAM param)$/;"	f	file:
_OnImeNotify	gui_w32.c	/^_OnImeNotify(HWND hWnd, DWORD dwCommand, DWORD dwData UNUSED)$/;"	f	file:
_OnKillFocus	gui_w32.c	/^_OnKillFocus($/;"	f	file:
_OnMenu	gui_w32.c	/^_OnMenu($/;"	f	file:
_OnMouseButtonDown	gui_w32.c	/^_OnMouseButtonDown($/;"	f	file:
_OnMouseEvent	gui_w32.c	/^_OnMouseEvent($/;"	f	file:
_OnMouseMoveOrRelease	gui_w32.c	/^_OnMouseMoveOrRelease($/;"	f	file:
_OnMouseWheel	gui_w32.c	/^_OnMouseWheel($/;"	f	file:
_OnPaint	gui_w32.c	/^_OnPaint($/;"	f	file:
_OnScroll	gui_w32.c	/^_OnScroll($/;"	f	file:
_OnSetFocus	gui_w32.c	/^_OnSetFocus($/;"	f	file:
_OnSettingChange	gui_w32.c	/^_OnSettingChange(UINT n)$/;"	f	file:
_OnSize	gui_w32.c	/^_OnSize($/;"	f	file:
_OnSizeTextArea	gui_w32.c	/^_OnSizeTextArea($/;"	f	file:
_OnSysChar	gui_w32.c	/^_OnSysChar($/;"	f	file:
_OnTimer	gui_w32.c	/^_OnTimer($/;"	f	file:
_OnWindowPosChanged	gui_w32.c	/^_OnWindowPosChanged($/;"	f	file:
_POSIX_C_SOURCE	if_python.c	58;"	d	file:
_POSIX_C_SOURCE	if_python3.c	61;"	d	file:
_POSIX_THREADS	if_python.c	34;"	d	file:
_PyObject_CallFunction_SizeT	if_python3.c	198;"	d	file:
_PyObject_DebugFree	if_python.c	292;"	d	file:
_PyObject_DebugFree	if_python3.c	257;"	d	file:
_PyObject_DebugMalloc	if_python.c	291;"	d	file:
_PyObject_DebugMalloc	if_python3.c	256;"	d	file:
_PyObject_GC_Del	if_python.c	266;"	d	file:
_PyObject_GC_New	if_python.c	263;"	d	file:
_PyObject_GC_New	if_python3.c	262;"	d	file:
_PyObject_GC_UnTrack	if_python.c	267;"	d	file:
_PyObject_New	if_python.c	262;"	d	file:
_PyObject_NextNotImplemented	if_python.c	273;"	d	file:
_PyObject_NextNotImplemented	if_python3.c	215;"	d	file:
_PyUnicode_AsString	if_python3.c	220;"	d	file:
_PyUnicode_AsString	if_python3.c	221;"	d	file:
_PyUnicode_AsString	if_python3.c	223;"	d	file:
_Py_Dealloc	if_python.c	286;"	d	file:
_Py_Dealloc	if_python3.c	250;"	d	file:
_Py_FalseStruct	if_python3.c	213;"	d	file:
_Py_NegativeRefcount	if_python.c	284;"	d	file:
_Py_NegativeRefcount	if_python3.c	248;"	d	file:
_Py_NoneStruct	if_python.c	275;"	d	file:
_Py_NoneStruct	if_python3.c	212;"	d	file:
_Py_RefTotal	if_python.c	285;"	d	file:
_Py_RefTotal	if_python3.c	249;"	d	file:
_Py_TrueStruct	if_python.c	277;"	d	file:
_Py_TrueStruct	if_python3.c	214;"	d	file:
_Py_ZeroStruct	if_python.c	/^static PyObject* _Py_ZeroStruct;$/;"	v	file:
_Py_ZeroStruct	if_python.c	276;"	d	file:
_REGEXP_H	regexp.h	14;"	d
_ScrollbarClassRec	gui_at_sb.h	/^typedef struct _ScrollbarClassRec {$/;"	s
_ScrollbarRec	gui_at_sb.h	/^typedef struct _ScrollbarRec {$/;"	s
_Scrollbar_h	gui_at_sb.h	60;"	d
_SharedFindReplace	gui_gtk.c	/^typedef struct _SharedFindReplace$/;"	s	file:
_SharedFindReplace	gui_motif.c	/^typedef struct _SharedFindReplace$/;"	s	file:
_SharedFontSelData	gui_xmdlg.c	/^typedef struct _SharedFontSelData$/;"	s	file:
_TANDEM_SOURCE	vim.h	78;"	d
_TextAreaWndProc	gui_w32.c	/^_TextAreaWndProc($/;"	f	file:
_VimChdir	if_py_both.h	/^_VimChdir(PyObject *_chdir, PyObject *args, PyObject *kwargs)$/;"	f
_WIN32_WINNT	if_ruby.c	71;"	d	file:
_WndProc	gui_w32.c	/^_WndProc($/;"	f	file:
_XOPEN_SOURCE	if_python.c	61;"	d	file:
_XOPEN_SOURCE	if_python3.c	64;"	d	file:
_XOPEN_SOURCE	vim.h	45;"	d
_XRegisterFilterByType	gui_gtk_vms.h	83;"	d
_XUnregisterFilter	gui_gtk_vms.h	316;"	d
_Xaw3dDrawShadows	gui_at_sb.c	/^_Xaw3dDrawShadows($/;"	f	file:
_XmBottomShadowColorDefault	gui_gtk_vms.h	627;"	d
_XmClearBorder	gui_gtk_vms.h	628;"	d
_XmConfigureObject	gui_gtk_vms.h	629;"	d
_XmDestroyParentCallback	gui_gtk_vms.h	630;"	d
_XmDrawArrow	gui_gtk_vms.h	631;"	d
_XmDrawShadows	gui_gtk_vms.h	632;"	d
_XmEnhancedButtonClassPart	gui_xmebwp.h	/^typedef struct _XmEnhancedButtonClassPart$/;"	s
_XmEnhancedButtonPart	gui_xmebwp.h	/^typedef struct _XmEnhancedButtonPart$/;"	s
_XmEnhancedButtonRec	gui_xmebwp.h	/^typedef struct _XmEnhancedButtonRec$/;"	s
_XmFontListGetDefaultFont	gui_gtk_vms.h	633;"	d
_XmFromHorizontalPixels	gui_gtk_vms.h	634;"	d
_XmFromVerticalPixels	gui_gtk_vms.h	635;"	d
_XmGetClassExtensionPtr	gui_gtk_vms.h	636;"	d
_XmGetDefaultFontList	gui_gtk_vms.h	637;"	d
_XmGetTextualDragIcon	gui_gtk_vms.h	638;"	d
_XmGetWidgetExtData	gui_gtk_vms.h	639;"	d
_XmGrabKeyboard	gui_gtk_vms.h	640;"	d
_XmGrabPointer	gui_gtk_vms.h	641;"	d
_XmInheritClass	gui_gtk_vms.h	642;"	d
_XmInputInGadget	gui_gtk_vms.h	643;"	d
_XmMakeGeometryRequest	gui_gtk_vms.h	644;"	d
_XmMenuPopDown	gui_gtk_vms.h	645;"	d
_XmMoveObject	gui_gtk_vms.h	646;"	d
_XmNavigChangeManaged	gui_gtk_vms.h	647;"	d
_XmOSBuildFileList	gui_gtk_vms.h	648;"	d
_XmOSFileCompare	gui_gtk_vms.h	649;"	d
_XmOSFindPatternPart	gui_gtk_vms.h	650;"	d
_XmOSQualifyFileSpec	gui_gtk_vms.h	651;"	d
_XmPostPopupMenu	gui_gtk_vms.h	652;"	d
_XmPrimitiveEnter	gui_gtk_vms.h	653;"	d
_XmPrimitiveLeave	gui_gtk_vms.h	654;"	d
_XmRedisplayGadgets	gui_gtk_vms.h	655;"	d
_XmShellIsExclusive	gui_gtk_vms.h	656;"	d
_XmStringDraw	gui_gtk_vms.h	657;"	d
_XmStringGetTextConcat	gui_gtk_vms.h	658;"	d
_XmStrings	gui_gtk_vms.h	659;"	d
_XmToHorizontalPixels	gui_gtk_vms.h	660;"	d
_XmToVerticalPixels	gui_gtk_vms.h	661;"	d
_XmTopShadowColorDefault	gui_gtk_vms.h	662;"	d
_Xm_fastPtr	gui_gtk_vms.h	663;"	d
_XtCheckSubclassFlag	gui_gtk_vms.h	664;"	d
_XtInherit	gui_gtk_vms.h	665;"	d
_XtInheritTranslations	gui_gtk_vms.h	666;"	d
_XtRegisterWindow	gui_gtk_vms.h	723;"	d
_XtUnregisterWindow	gui_gtk_vms.h	724;"	d
__ARGS	vim.h	229;"	d
__CYGWIN32__	if_mzsch.h	25;"	d
__CYGWIN32__	if_mzsch.h	9;"	d
__GTK_FORM_H__	gui_gtk_f.h	10;"	d
__IID_DEFINED__	iid_ole.c	23;"	d	file:
__IID_DEFINED__	iid_ole.c	28;"	d	file:
__IVim_FWD_DEFINED__	if_ole.h	27;"	d
__IVim_INTERFACE_DEFINED__	if_ole.h	54;"	d
__MIDL_user_allocate_free_DEFINED__	if_ole.h	48;"	d
__OPENTRANSPORTPROTOCOL__	if_ruby.c	117;"	d	file:
__OPENTRANSPORTPROVIDERS__	if_ruby.c	118;"	d	file:
__OPENTRANSPORT__	if_ruby.c	116;"	d	file:
__SUSV3	os_unixx.h	109;"	d
__Vim_FWD_DEFINED__	if_ole.h	33;"	d
__Vim_LIBRARY_DEFINED__	if_ole.h	256;"	d
__chkabort	os_amiga.c	/^void __regargs __chkabort(void)$/;"	f
__declspec	main.c	/^__declspec(dllexport)$/;"	f
__if_ole_h__	if_ole.h	18;"	d
__in	iscygpty.c	41;"	d	file:
__in_opt	iscygpty.c	42;"	d	file:
__out	iscygpty.c	40;"	d	file:
__stack	os_amiga.c	/^unsigned long __stack = 1048576;$/;"	v
__stdcall	os_win32.c	146;"	d	file:
__thread	if_mzsch.h	15;"	d
__w64	vim.h	352;"	d
_addfmt	termlib.c	/^_addfmt(char *buf, char *fmt, int val)$/;"	f	file:
_apply_thunk_catch_exceptions	if_mzsch.c	/^_apply_thunk_catch_exceptions(Scheme_Object *f, Scheme_Object **exn)$/;"	f	file:
_basic	os_vms.c	/^	    char	_basic[3];$/;"	m	struct:__anon76::__anon77::__anon78	file:
_bauds	termlib.c	/^long _bauds[16]={$/;"	v
_cdecl	gui_w32.c	243;"	d	file:
_cdecl	gui_w32.c	244;"	d	file:
_chdrive	os_mswin.c	/^int _chdrive(int drive)$/;"	f
_find	termlib.c	/^_find(char *s, char *set)$/;"	f	file:
_fstat	os_mswin.c	445;"	d	file:
_fstat	os_mswin.c	449;"	d	file:
_fullpath	os_mswin.c	/^char * _fullpath(char *buf, char *fname, int len)$/;"	f
_generic_64	os_vms.c	/^typedef struct _generic_64 {$/;"	s	file:
_match	termlib.c	/^_match(char *s1, char *s2)$/;"	f	file:
_memory_h	if_perlsfio.c	13;"	d	file:
_signicon_t	gui_w32.c	/^typedef struct _signicon_t$/;"	s	file:
_stat	os_mswin.c	443;"	d	file:
_stat	os_mswin.c	447;"	d	file:
_stricoll	os_mswin.c	/^int _stricoll(char *a, char *b)$/;"	f
_tls_index	if_mzsch.c	/^static intptr_t _tls_index = 0;$/;"	v	file:
_wstat	os_mswin.c	444;"	d	file:
_wstat	os_mswin.c	448;"	d	file:
_xsmp_xtinputid	gui_x11.c	/^static XtInputId _xsmp_xtinputid;$/;"	v	file:
a	if_python.c	/^struct PyMethodDef { Py_ssize_t a; };$/;"	m	struct:PyMethodDef	file:
a	regexp.c	/^    int a, b, c;$/;"	m	struct:__anon100	file:
a_AIN	arabic.c	60;"	d	file:
a_ALEF	arabic.c	42;"	d	file:
a_ALEF_HAMZA_ABOVE	arabic.c	38;"	d	file:
a_ALEF_HAMZA_BELOW	arabic.c	40;"	d	file:
a_ALEF_MADDA	arabic.c	37;"	d	file:
a_ALEF_MAKSURA	arabic.c	71;"	d	file:
a_BEH	arabic.c	43;"	d	file:
a_BYTE_ORDER_MARK	arabic.c	164;"	d	file:
a_DAD	arabic.c	57;"	d	file:
a_DAL	arabic.c	50;"	d	file:
a_DAMMA	arabic.c	77;"	d	file:
a_DAMMATAN	arabic.c	74;"	d	file:
a_FATHA	arabic.c	76;"	d	file:
a_FATHATAN	arabic.c	73;"	d	file:
a_FEH	arabic.c	63;"	d	file:
a_FKAF	arabic.c	88;"	d	file:
a_FYEH	arabic.c	90;"	d	file:
a_GAF	arabic.c	89;"	d	file:
a_GHAIN	arabic.c	61;"	d	file:
a_HAH	arabic.c	48;"	d	file:
a_HAMZA	arabic.c	36;"	d	file:
a_HAMZA_ABOVE	arabic.c	82;"	d	file:
a_HAMZA_BELOW	arabic.c	83;"	d	file:
a_HEH	arabic.c	69;"	d	file:
a_JEEM	arabic.c	47;"	d	file:
a_JEH	arabic.c	87;"	d	file:
a_KAF	arabic.c	65;"	d	file:
a_KASRA	arabic.c	78;"	d	file:
a_KASRATAN	arabic.c	75;"	d	file:
a_KHAH	arabic.c	49;"	d	file:
a_LAM	arabic.c	66;"	d	file:
a_MADDA_ABOVE	arabic.c	81;"	d	file:
a_MEEM	arabic.c	67;"	d	file:
a_NOON	arabic.c	68;"	d	file:
a_PEH	arabic.c	85;"	d	file:
a_QAF	arabic.c	64;"	d	file:
a_REH	arabic.c	52;"	d	file:
a_SAD	arabic.c	56;"	d	file:
a_SEEN	arabic.c	54;"	d	file:
a_SHADDA	arabic.c	79;"	d	file:
a_SHEEN	arabic.c	55;"	d	file:
a_SUKUN	arabic.c	80;"	d	file:
a_TAH	arabic.c	58;"	d	file:
a_TATWEEL	arabic.c	62;"	d	file:
a_TCHEH	arabic.c	86;"	d	file:
a_TEH	arabic.c	45;"	d	file:
a_TEH_MARBUTA	arabic.c	44;"	d	file:
a_THAL	arabic.c	51;"	d	file:
a_THEH	arabic.c	46;"	d	file:
a_WAW	arabic.c	70;"	d	file:
a_WAW_HAMZA	arabic.c	39;"	d	file:
a_YEH	arabic.c	72;"	d	file:
a_YEH_HAMZA	arabic.c	41;"	d	file:
a_ZAH	arabic.c	59;"	d	file:
a_ZAIN	arabic.c	53;"	d	file:
a_acute	regexp_nfa.c	728;"	d	file:
a_circumflex	regexp_nfa.c	729;"	d	file:
a_cur_menu	gui_athena.c	/^static vimmenu_T *a_cur_menu = NULL;$/;"	v	file:
a_diaeresis	regexp_nfa.c	731;"	d	file:
a_f_LAM_ALEF	arabic.c	99;"	d	file:
a_f_LAM_ALEF_HAMZA_ABOVE	arabic.c	95;"	d	file:
a_f_LAM_ALEF_HAMZA_BELOW	arabic.c	97;"	d	file:
a_f_LAM_ALEF_MADDA_ABOVE	arabic.c	93;"	d	file:
a_grave	regexp_nfa.c	727;"	d	file:
a_ring	regexp_nfa.c	732;"	d	file:
a_s_LAM_ALEF	arabic.c	98;"	d	file:
a_s_LAM_ALEF_HAMZA_ABOVE	arabic.c	94;"	d	file:
a_s_LAM_ALEF_HAMZA_BELOW	arabic.c	96;"	d	file:
a_s_LAM_ALEF_MADDA_ABOVE	arabic.c	92;"	d	file:
a_virguilla	regexp_nfa.c	730;"	d	file:
abandon_cmdline	ex_getln.c	/^abandon_cmdline(void)$/;"	f	file:
aborted_in_try	ex_eval.c	/^aborted_in_try(void)$/;"	f
aborting	ex_eval.c	/^aborting(void)$/;"	f
abs_mouse	gui_photon.c	/^static PhPoint_t    abs_mouse;$/;"	v	file:
abs_restart_command	gui_gtk_x11.c	/^static       char *abs_restart_command = NULL;$/;"	v	file:
accel_group	gui.h	/^    GtkAccelGroup *accel_group;$/;"	m	struct:Gui
achar	arabic.c	/^static struct achar {$/;"	s	file:
achars	arabic.c	/^} achars[] = {$/;"	v	typeref:struct:achar	file:
acl_cnt	os_unix.c	/^    int acl_cnt;$/;"	m	struct:vim_acl_solaris_T	file:
acl_entry	os_unix.c	/^    aclent_t *acl_entry;$/;"	m	struct:vim_acl_solaris_T	file:
aco_save_T	structs.h	/^} aco_save_T;$/;"	t	typeref:struct:__anon244
acp_to_enc	winclip.c	/^acp_to_enc($/;"	f
actext	structs.h	/^    char_u	*actext;	    \/\/ accelerator text (after TAB)$/;"	m	struct:VimMenu
actions	gui_at_fs.c	/^static XtActionsRec actions[] =$/;"	v	file:
actions	gui_at_sb.c	/^static XtActionsRec actions[] =$/;"	v	file:
actionsList	gui_xmebw.c	/^static XtActionsRec actionsList[] =$/;"	v	file:
activate_dialog_mnemonics	gui_motif.c	/^activate_dialog_mnemonics(Widget dialog)$/;"	f	file:
active	dosinst.c	/^    int	    active;			\/\/ non-zero when choice is active$/;"	m	struct:choice	file:
active_apc_list	autocmd.c	/^static AutoPatCmd *active_apc_list = NULL; \/\/ stack of active autocommands$/;"	v	file:
addEventHandler	gui_beval.c	/^addEventHandler(GtkWidget *target, BalloonEval *beval)$/;"	f	file:
addEventHandler	gui_beval.c	/^addEventHandler(Widget target, BalloonEval *beval)$/;"	f	file:
add_b0_fenc	memline.c	/^add_b0_fenc($/;"	f	file:
add_banned	spellsuggest.c	/^add_banned($/;"	f	file:
add_border_left_right_padding	popupwin.c	/^add_border_left_right_padding(win_T *wp)$/;"	f	file:
add_buff	getchar.c	/^add_buff($/;"	f	file:
add_bufnum	ex_cmds2.c	/^add_bufnum(int *bufnrs, int *bufnump, int nr)$/;"	f	file:
add_cancel_action	gui_xmdlg.c	/^add_cancel_action(Widget shell, XtCallbackProc close_callback, void *arg)$/;"	f	file:
add_channel	channel.c	/^add_channel(void)$/;"	f
add_char2buf	edit.c	/^add_char2buf(int c, char_u *s)$/;"	f
add_char_buff	getchar.c	/^add_char_buff(buffheader_T *buf, int c)$/;"	f	file:
add_cmd_modifier	usercmd.c	/^add_cmd_modifier(char_u *buf, char *mod_str, int *multi_mods)$/;"	f	file:
add_dialog_element	gui_w32.c	/^add_dialog_element($/;"	f	file:
add_dummy_choice	dosinst.c	/^add_dummy_choice(void)$/;"	f	file:
add_empty_scrollback	terminal.c	/^add_empty_scrollback(term_T *term, cellattr_T *fill_attr, int lnum)$/;"	f	file:
add_fromto	spellfile.c	/^add_fromto($/;"	f	file:
add_keyword	syntax.c	/^add_keyword($/;"	f	file:
add_llist_tags	tag.c	/^add_llist_tags($/;"	f	file:
add_long	gui_w32.c	6654;"	d	file:
add_long_to_buf	term.c	/^add_long_to_buf(long_u val, char_u *dst)$/;"	f
add_map	map.c	/^add_map(char_u *map, int mode)$/;"	f
add_menu_path	menu.c	/^add_menu_path($/;"	f	file:
add_mnemonic_grabs	gui_motif.c	/^add_mnemonic_grabs(Widget dialog, Widget w)$/;"	f	file:
add_msg_hist	message.c	/^add_msg_hist($/;"	f	file:
add_nr_var	userfunc.c	/^add_nr_var($/;"	f	file:
add_num_buff	getchar.c	/^add_num_buff(buffheader_T *buf, long n)$/;"	f	file:
add_pack_dir_to_rtp	scriptfile.c	/^add_pack_dir_to_rtp(char_u *fname)$/;"	f	file:
add_pack_plugin	scriptfile.c	/^add_pack_plugin(char_u *fname, void *cookie)$/;"	f	file:
add_pack_start_dirs	scriptfile.c	/^add_pack_start_dirs(void)$/;"	f
add_pathsep	dosinst.h	/^add_pathsep(char *name)$/;"	f
add_pathsep	filepath.c	/^add_pathsep(char_u *p)$/;"	f
add_pixmap_args	gui_motif.c	/^add_pixmap_args(vimmenu_T *menu, Arg *args, int n)$/;"	f	file:
add_popup_dicts	popupwin.c	/^add_popup_dicts(buf_T *buf, list_T *l)$/;"	f	file:
add_popup_strings	popupwin.c	/^add_popup_strings(buf_T *buf, list_T *l)$/;"	f	file:
add_scrollback_line_to_buffer	terminal.c	/^add_scrollback_line_to_buffer(term_T *term, char_u *text, int len)$/;"	f	file:
add_sound_suggest	spellsuggest.c	/^add_sound_suggest($/;"	f	file:
add_stock_icon	gui_gtk.c	/^add_stock_icon(GtkIconFactory	*factory,$/;"	f	file:
add_string	gui_w32.c	6652;"	d	file:
add_string	if_py_both.h	/^add_string(PyObject *list, char *s)$/;"	f
add_suggestion	spellsuggest.c	/^add_suggestion($/;"	f	file:
add_tabline_menu_item	gui_gtk_x11.c	/^add_tabline_menu_item(GtkWidget *menu, char_u *text, int resp)$/;"	f	file:
add_tabline_popup_menu_entry	gui_w32.c	/^add_tabline_popup_menu_entry(HMENU pmenu, UINT item_id, char_u *item_text)$/;"	f	file:
add_tag_field	tag.c	/^add_tag_field($/;"	f	file:
add_termcap_entry	term.c	/^add_termcap_entry(char_u *name, int force)$/;"	f
add_termcode	term.c	/^add_termcode(char_u *name, char_u *string, int flags)$/;"	f
add_text_props_for_append	memline.c	/^add_text_props_for_append($/;"	f	file:
add_time	time.c	/^add_time(char_u *buf, size_t buflen, time_t tt)$/;"	f
add_timer_info	time.c	/^add_timer_info(typval_T *rettv, timer_T *timer)$/;"	f	file:
add_timer_info_all	time.c	/^add_timer_info_all(typval_T *rettv)$/;"	f	file:
add_to_history	cmdhist.c	/^add_to_history($/;"	f
add_to_input_buf	ui.c	/^add_to_input_buf(char_u *s, int len)$/;"	f
add_to_input_buf_csi	ui.c	/^add_to_input_buf_csi(char_u *str, int len)$/;"	f
add_to_list	gui_xmdlg.c	/^add_to_list(char **buf, char *item, int *count)$/;"	f	file:
add_to_showcmd	normal.c	/^add_to_showcmd(int c)$/;"	f
add_to_showcmd_c	normal.c	/^add_to_showcmd_c(int c)$/;"	f
add_user	misc1.c	/^add_user(char_u *user, int need_copy)$/;"	f	file:
add_word	gui_w32.c	6653;"	d	file:
addfile	filepath.c	/^addfile($/;"	f
addr	quickfix.c	/^    char_u	    addr[FMT_PATTERNS]; \/\/ indices of used % patterns$/;"	m	struct:efm_S	file:
addr_count	ex_cmds.h	/^    int		addr_count;	\/\/ the number of addresses given$/;"	m	struct:exarg
addr_error	ex_docmd.c	/^addr_error(cmd_addr_T addr_type)$/;"	f	file:
addr_type	ex_cmds.h	/^    cmd_addr_T	addr_type;	\/\/ type of the count\/range$/;"	m	struct:exarg
addr_type_complete	usercmd.c	/^} addr_type_complete[] =$/;"	v	typeref:struct:__anon124	file:
addsigntype	netbeans.c	/^addsigntype($/;"	f	file:
addstar	cmdexpand.c	/^addstar($/;"	f
addstate	regexp_nfa.c	/^addstate($/;"	f	file:
addstate_here	regexp_nfa.c	/^addstate_here($/;"	f	file:
adjust_clip_reg	register.c	/^adjust_clip_reg(int *rp)$/;"	f
adjust_cursor	normal.c	/^adjust_cursor(oparg_T *oap)$/;"	f	file:
adjust_cursor_col	misc2.c	/^adjust_cursor_col(void)$/;"	f
adjust_cursor_eol	ops.c	/^adjust_cursor_eol(void)$/;"	f
adjust_for_sel	normal.c	/^adjust_for_sel(cmdarg_T *cap)$/;"	f	file:
adjust_prop_columns	textprop.c	/^adjust_prop_columns($/;"	f
adjust_props_for_join	textprop.c	/^adjust_props_for_join($/;"	f
adjust_props_for_split	textprop.c	/^adjust_props_for_split($/;"	f
adjust_text_props_for_delete	memline.c	/^adjust_text_props_for_delete($/;"	f	file:
adjustment_value_changed	gui_gtk.c	/^adjustment_value_changed(GtkAdjustment *adjustment, gpointer data)$/;"	f	file:
advance_color_col	drawline.c	/^advance_color_col(int vcol, int **color_cols)$/;"	f	file:
ae_add	spellfile.c	/^    char_u	*ae_add;	\/\/ text to add to basic word (can be NULL)$/;"	m	struct:affentry_S	file:
ae_attr	structs.h	/^    short	    ae_attr;		\/\/ HL_BOLD, etc.$/;"	m	struct:attr_entry
ae_chop	spellfile.c	/^    char_u	*ae_chop;	\/\/ text to chop off basic word (can be NULL)$/;"	m	struct:affentry_S	file:
ae_compforbid	spellfile.c	/^    char	ae_compforbid;	\/\/ COMPOUNDFORBIDFLAG found$/;"	m	struct:affentry_S	file:
ae_comppermit	spellfile.c	/^    char	ae_comppermit;	\/\/ COMPOUNDPERMITFLAG found$/;"	m	struct:affentry_S	file:
ae_cond	spellfile.c	/^    char_u	*ae_cond;	\/\/ condition (NULL for ".")$/;"	m	struct:affentry_S	file:
ae_flags	spellfile.c	/^    char_u	*ae_flags;	\/\/ flags on the affix (can be NULL)$/;"	m	struct:affentry_S	file:
ae_fname	structs.h	/^    char_u	*ae_fname;	\/\/ file name as specified$/;"	m	struct:argentry
ae_fnum	structs.h	/^    int		ae_fnum;	\/\/ buffer number with expanded file name$/;"	m	struct:argentry
ae_next	spellfile.c	/^    affentry_T	*ae_next;	\/\/ next affix with same name\/number$/;"	m	struct:affentry_S	file:
ae_prog	spellfile.c	/^    regprog_T	*ae_prog;	\/\/ regexp program for ae_cond or NULL$/;"	m	struct:affentry_S	file:
ae_u	structs.h	/^    } ae_u;$/;"	m	struct:attr_entry	typeref:union:attr_entry::__anon196
aentry_T	structs.h	/^} aentry_T;$/;"	t	typeref:struct:argentry
af_bad	spellfile.c	/^    unsigned	af_bad;		\/\/ BAD ID for banned word$/;"	m	struct:afffile_S	file:
af_circumfix	spellfile.c	/^    unsigned	af_circumfix;	\/\/ CIRCUMFIX ID$/;"	m	struct:afffile_S	file:
af_comp	spellfile.c	/^    hashtab_T	af_comp;	\/\/ hashtable for compound flags, compitem_T$/;"	m	struct:afffile_S	file:
af_compforbid	spellfile.c	/^    unsigned	af_compforbid;	\/\/ COMPOUNDFORBIDFLAG ID$/;"	m	struct:afffile_S	file:
af_comppermit	spellfile.c	/^    unsigned	af_comppermit;	\/\/ COMPOUNDPERMITFLAG ID$/;"	m	struct:afffile_S	file:
af_comproot	spellfile.c	/^    unsigned	af_comproot;	\/\/ COMPOUNDROOT ID$/;"	m	struct:afffile_S	file:
af_enc	spellfile.c	/^    char_u	*af_enc;	\/\/ "SET", normalized, alloc'ed string or NULL$/;"	m	struct:afffile_S	file:
af_flagtype	spellfile.c	/^    int		af_flagtype;	\/\/ AFT_CHAR, AFT_LONG, AFT_NUM or AFT_CAPLONG$/;"	m	struct:afffile_S	file:
af_ignoreextra	spellfile.c	/^    int		af_ignoreextra;	\/\/ IGNOREEXTRA present$/;"	m	struct:afffile_S	file:
af_keepcase	spellfile.c	/^    unsigned	af_keepcase;	\/\/ KEEPCASE ID for keep-case word$/;"	m	struct:afffile_S	file:
af_needaffix	spellfile.c	/^    unsigned	af_needaffix;	\/\/ NEEDAFFIX ID$/;"	m	struct:afffile_S	file:
af_needcomp	spellfile.c	/^    unsigned	af_needcomp;	\/\/ NEEDCOMPOUND ID$/;"	m	struct:afffile_S	file:
af_nosuggest	spellfile.c	/^    unsigned	af_nosuggest;	\/\/ NOSUGGEST ID$/;"	m	struct:afffile_S	file:
af_pfxpostpone	spellfile.c	/^    int		af_pfxpostpone;	\/\/ postpone prefixes without chop string and$/;"	m	struct:afffile_S	file:
af_pref	spellfile.c	/^    hashtab_T	af_pref;	\/\/ hashtable for prefixes, affheader_T$/;"	m	struct:afffile_S	file:
af_rare	spellfile.c	/^    unsigned	af_rare;	\/\/ RARE ID for rare word$/;"	m	struct:afffile_S	file:
af_suff	spellfile.c	/^    hashtab_T	af_suff;	\/\/ hashtable for suffixes, affheader_T$/;"	m	struct:afffile_S	file:
aff_check_number	spellfile.c	/^aff_check_number(int spinval, int affval, char *name)$/;"	f	file:
aff_check_string	spellfile.c	/^aff_check_string(char_u *spinval, char_u *affval, char *name)$/;"	f	file:
aff_process_flags	spellfile.c	/^aff_process_flags(afffile_T *affile, affentry_T *entry)$/;"	f	file:
affentry_S	spellfile.c	/^struct affentry_S$/;"	s	file:
affentry_T	spellfile.c	/^typedef struct affentry_S affentry_T;$/;"	t	typeref:struct:affentry_S	file:
afffile_S	spellfile.c	/^typedef struct afffile_S$/;"	s	file:
afffile_T	spellfile.c	/^} afffile_T;$/;"	t	typeref:struct:afffile_S	file:
affheader_S	spellfile.c	/^typedef struct affheader_S$/;"	s	file:
affheader_T	spellfile.c	/^} affheader_T;$/;"	t	typeref:struct:affheader_S	file:
affitem2flag	spellfile.c	/^affitem2flag($/;"	f	file:
after_copy_winopt	option.c	/^after_copy_winopt(win_T *wp UNUSED)$/;"	f
after_label	cindent.c	/^after_label(char_u *l)$/;"	f	file:
after_pathsep	misc2.c	/^after_pathsep(char_u *b, char_u *p)$/;"	f
after_sigcont	os_unix.c	/^after_sigcont(void)$/;"	f	file:
after_updating_screen	drawscreen.c	/^after_updating_screen(int may_resize_shell UNUSED)$/;"	f
ah_combine	spellfile.c	/^    int		ah_combine;	\/\/ suffix may combine with prefix$/;"	m	struct:affheader_S	file:
ah_first	spellfile.c	/^    affentry_T	*ah_first;	\/\/ first affix entry$/;"	m	struct:affheader_S	file:
ah_flag	spellfile.c	/^    unsigned	ah_flag;	\/\/ affix name as number, uses "af_flagtype"$/;"	m	struct:affheader_S	file:
ah_follows	spellfile.c	/^    int		ah_follows;	\/\/ another affix block should be following$/;"	m	struct:affheader_S	file:
ah_key	spellfile.c	/^    char_u	ah_key[AH_KEY_LEN]; \/\/ key for hashtab == name of affix$/;"	m	struct:affheader_S	file:
ah_newID	spellfile.c	/^    int		ah_newID;	\/\/ prefix ID after renumbering; 0 if not used$/;"	m	struct:affheader_S	file:
ai_col	globals.h	/^EXTERN colnr_T	ai_col INIT(= 0);$/;"	v
aid_insert_sign	alloc.h	/^	aid_insert_sign,$/;"	e	enum:__anon139
aid_last	alloc.h	/^	aid_last$/;"	e	enum:__anon139
aid_none	alloc.h	/^	aid_none = 0,$/;"	e	enum:__anon139
aid_qf_dirname_now	alloc.h	/^	aid_qf_dirname_now,$/;"	e	enum:__anon139
aid_qf_dirname_start	alloc.h	/^	aid_qf_dirname_start,$/;"	e	enum:__anon139
aid_qf_errmsg	alloc.h	/^	aid_qf_errmsg,$/;"	e	enum:__anon139
aid_qf_module	alloc.h	/^	aid_qf_module,$/;"	e	enum:__anon139
aid_qf_namebuf	alloc.h	/^	aid_qf_namebuf,$/;"	e	enum:__anon139
aid_qf_pattern	alloc.h	/^	aid_qf_pattern,$/;"	e	enum:__anon139
aid_sign_define_by_name	alloc.h	/^	aid_sign_define_by_name,$/;"	e	enum:__anon139
aid_sign_getdefined	alloc.h	/^	aid_sign_getdefined,$/;"	e	enum:__anon139
aid_sign_getinfo	alloc.h	/^	aid_sign_getinfo,$/;"	e	enum:__anon139
aid_sign_getlist	alloc.h	/^	aid_sign_getlist,$/;"	e	enum:__anon139
aid_sign_getplaced	alloc.h	/^	aid_sign_getplaced,$/;"	e	enum:__anon139
aid_sign_getplaced_dict	alloc.h	/^	aid_sign_getplaced_dict,$/;"	e	enum:__anon139
aid_sign_getplaced_list	alloc.h	/^	aid_sign_getplaced_list,$/;"	e	enum:__anon139
aid_tagstack_details	alloc.h	/^	aid_tagstack_details,$/;"	e	enum:__anon139
aid_tagstack_from	alloc.h	/^	aid_tagstack_from,$/;"	e	enum:__anon139
aid_tagstack_items	alloc.h	/^	aid_tagstack_items,$/;"	e	enum:__anon139
aixhack	pty.c	/^static int aixhack = -1;$/;"	v	file:
al_ga	structs.h	/^    garray_T	al_ga;		\/\/ growarray with the array of file names$/;"	m	struct:arglist
al_refcount	structs.h	/^    int		al_refcount;	\/\/ number of windows using this arglist$/;"	m	struct:arglist
alist_T	structs.h	/^} alist_T;$/;"	t	typeref:struct:arglist
alist_add	arglist.c	/^alist_add($/;"	f
alist_add_list	arglist.c	/^alist_add_list($/;"	f	file:
alist_check_arg_idx	arglist.c	/^alist_check_arg_idx(void)$/;"	f	file:
alist_clear	arglist.c	/^alist_clear(alist_T *al)$/;"	f
alist_expand	arglist.c	/^alist_expand(int *fnum_list, int fnum_len)$/;"	f
alist_init	arglist.c	/^alist_init(alist_T *al)$/;"	f
alist_name	arglist.c	/^alist_name(aentry_T *aep)$/;"	f
alist_new	arglist.c	/^alist_new(void)$/;"	f
alist_set	arglist.c	/^alist_set($/;"	f
alist_slash_adjust	arglist.c	/^alist_slash_adjust(void)$/;"	f
alist_unlink	arglist.c	/^alist_unlink(alist_T *al)$/;"	f
all	gui_gtk.c	/^    GtkWidget *all;	\/\/ 'Replace All' action button$/;"	m	struct:_SharedFindReplace	file:
all	gui_motif.c	/^    Widget all;		\/\/ 'Replace All' action button$/;"	m	struct:_SharedFindReplace	file:
all_termrequests	term.c	/^static termrequest_T *all_termrequests[] = {$/;"	v	file:
allbuf_lock	globals.h	/^EXTERN int	allbuf_lock INIT(= 0);$/;"	v
allbuf_locked	ex_getln.c	/^allbuf_locked(void)$/;"	f
allcap_copy	spell.c	/^allcap_copy(char_u *word, char_u *wcopy)$/;"	f
alloc	dosinst.h	/^alloc(int len)$/;"	f
alloc	misc2.c	/^alloc(size_t size)$/;"	f
alloc_clear	misc2.c	/^alloc_clear(size_t size)$/;"	f
alloc_clear_id	misc2.c	/^alloc_clear_id(size_t size, alloc_id_T id UNUSED)$/;"	f
alloc_cmdbuff	ex_getln.c	/^alloc_cmdbuff(int len)$/;"	f	file:
alloc_color	gui_xmebw.c	/^alloc_color(Display	*display,$/;"	f	file:
alloc_does_fail	misc2.c	/^alloc_does_fail(size_t size)$/;"	f
alloc_fail_countdown	globals.h	/^EXTERN int  alloc_fail_countdown INIT(= -1);$/;"	v
alloc_fail_id	globals.h	/^EXTERN alloc_id_T  alloc_fail_id INIT(= aid_none);$/;"	v
alloc_fail_repeat	globals.h	/^EXTERN int  alloc_fail_repeat INIT(= 0);$/;"	v
alloc_id	misc2.c	/^alloc_id(size_t size, alloc_id_T id UNUSED)$/;"	f
alloc_id_T	alloc.h	/^} alloc_id_T;$/;"	t	typeref:enum:__anon139
alloc_new_sign	sign.c	/^alloc_new_sign(char_u *name)$/;"	f	file:
alloc_state	regexp_nfa.c	/^alloc_state(int c, nfa_state_T *out, nfa_state_T *out1)$/;"	f	file:
alloc_string_tv	eval.c	/^alloc_string_tv(char_u *s)$/;"	f
alloc_tabpage	window.c	/^alloc_tabpage(void)$/;"	f	file:
alloc_text	dosinst.c	/^alloc_text(int idx, char *fmt, char *arg)$/;"	f	file:
alloc_tv	eval.c	/^alloc_tv(void)$/;"	f
alloc_typebuf	getchar.c	/^alloc_typebuf(void)$/;"	f	file:
allow_dirs	autocmd.c	/^    char	    allow_dirs;		\/\/ Pattern may match whole path$/;"	m	struct:AutoPat	file:
allow_keys	globals.h	/^EXTERN int allow_keys INIT(= FALSE);	\/\/ allow key codes when no_mapping$/;"	v
allow_scrollbar	gui_mac.c	/^static int allow_scrollbar = FALSE;$/;"	v	file:
allow_scrollbar	gui_w32.c	/^static int allow_scrollbar = FALSE;$/;"	v	file:
already_warned	fileio.c	/^static int already_warned = FALSE;$/;"	v	file:
alt_tabpage	window.c	/^alt_tabpage(void)$/;"	f	file:
altname_buf_ptr	os_mswin.c	/^static char_u *altname_buf_ptr = NULL;$/;"	v	file:
ambiguous	mbyte.c	/^static struct interval ambiguous[] =$/;"	v	typeref:struct:interval	file:
amount	ex_cmds.h	/^    int		amount;		\/\/ number of '>' or '<' for shift command$/;"	m	struct:exarg
ansi_table	term.c	/^static char_u ansi_table[16][4] = {$/;"	v	file:
anyBufIsChanged	undo.c	/^anyBufIsChanged(void)$/;"	f
ap	evalfunc.c	/^static va_list	ap;$/;"	v	file:
app_context	globals.h	/^EXTERN XtAppContext app_context INIT(= (XtAppContext)NULL);$/;"	v
append	ex_cmds.h	/^    int		append;		\/\/ TRUE with ":w >>file" command$/;"	m	struct:exarg
append	regexp_nfa.c	/^append(Ptrlist *l1, Ptrlist *l2)$/;"	f	file:
append_arg_number	buffer.c	/^append_arg_number($/;"	f	file:
append_cell	terminal.c	/^append_cell(garray_T *gap, cellattr_T *cell)$/;"	f	file:
append_command	ex_docmd.c	/^append_command(char_u *cmd)$/;"	f	file:
append_ga_line	misc2.c	/^append_ga_line(garray_T *gap)$/;"	f
append_indent	ex_cmds.c	/^static int append_indent = 0;	    \/\/ autoindent for first line$/;"	v	file:
append_redir	ex_cmds.c	/^append_redir($/;"	f
append_to_buffer	channel.c	/^append_to_buffer(buf_T *buffer, char_u *msg, channel_T *channel, ch_part_T part)$/;"	f	file:
appended_lines	change.c	/^appended_lines(linenr_T lnum, long count)$/;"	f
appended_lines_mark	change.c	/^appended_lines_mark(linenr_T lnum, long count)$/;"	f
applicationShellWidgetClass	gui_gtk_vms.h	667;"	d
apply_autocmds	autocmd.c	/^apply_autocmds($/;"	f
apply_autocmds_exarg	autocmd.c	/^apply_autocmds_exarg($/;"	f
apply_autocmds_group	autocmd.c	/^apply_autocmds_group($/;"	f	file:
apply_autocmds_retval	autocmd.c	/^apply_autocmds_retval($/;"	f
apply_fontlist	gui_xmdlg.c	44;"	d	file:
apply_fontlist	gui_xmdlg.c	46;"	d	file:
apply_general_options	popupwin.c	/^apply_general_options(win_T *wp, dict_T *dict)$/;"	f	file:
apply_leader	vim9compile.c	/^apply_leader(typval_T *rettv, char_u *start, char_u *end)$/;"	f	file:
apply_move_options	popupwin.c	/^apply_move_options(win_T *wp, dict_T *d)$/;"	f	file:
apply_options	popupwin.c	/^apply_options(win_T *wp, dict_T *dict)$/;"	f	file:
apply_optionset_autocmd	option.c	/^apply_optionset_autocmd($/;"	f	file:
apply_wide_font_attr	gui_gtk_x11.c	/^apply_wide_font_attr(char_u *s, int len, PangoAttrList *attr_list)$/;"	f	file:
approximate_botline_win	move.c	/^approximate_botline_win($/;"	f
arabic_combine	arabic.c	/^arabic_combine($/;"	f
arabic_maycombine	arabic.c	/^arabic_maycombine(int two)$/;"	f
arabic_shape	arabic.c	/^arabic_shape($/;"	f
arg	dosinst.c	/^    int	    arg;			\/\/ argument for function$/;"	m	struct:choice	file:
arg	ex_cmds.h	/^    char_u	*arg;		\/\/ argument of the command$/;"	m	struct:exarg
arg	map.c	/^    char_u	*arg;$/;"	m	struct:initmap	file:
arg	structs.h	/^    int		arg;		\/\/ extra argument from nv_cmds[]$/;"	m	struct:cmdarg_S
arg_all	arglist.c	/^arg_all(void)$/;"	f
arg_bufnr	autocmd.c	/^    int		arg_bufnr;	\/\/ Initially equal to <abuf>, set to zero when$/;"	m	struct:AutoPatCmd_S	file:
arg_had_last	globals.h	/^EXTERN int	arg_had_last INIT(= FALSE); \/\/ accessed last file in$/;"	v
argc	if_py_both.h	/^    int		argc;$/;"	m	struct:__anon158
argc	structs.h	/^    int		argc;$/;"	m	struct:__anon252
argentry	structs.h	/^typedef struct argentry$/;"	s
arglist	structs.h	/^typedef struct arglist$/;"	s
args	gui_motif.c	/^    char *  args;   \/\/ not used right now$/;"	m	struct:dialog_callback_arg	file:
argt	ex_cmds.h	/^    long	argt;		\/\/ flags for the command$/;"	m	struct:exarg
arguments	structs.h	/^    char_u	*arguments;$/;"	m	struct:__anon247
argv	if_py_both.h	/^    typval_T	*argv;$/;"	m	struct:__anon158
argv	structs.h	/^    char	**argv;$/;"	m	struct:__anon252
argv_func	structs.h	/^    int		(* argv_func)(int, typval_T *, int, int);$/;"	m	struct:__anon223
armed_pixmap	gui_xmebwp.h	/^    Pixmap armed_pixmap;$/;"	m	struct:_XmEnhancedButtonPart
arr	term.c	/^    char arr[KSSIZE];   \/\/ real buffer$/;"	m	struct:ks_tbl_s	file:
arrow_used	globals.h	/^EXTERN int arrow_used;			\/\/ Normally FALSE, set to TRUE after$/;"	v
arshape_buf	ex_getln.c	/^static char_u	*arshape_buf = NULL;$/;"	v	file:
ascii_enc	hardcopy.c	/^    char			*ascii_enc;$/;"	m	struct:prt_ps_mbfont_S	file:
ascii_font	gui.h	/^    PangoFont	     *ascii_font;   \/\/ cached font for ASCII strings$/;"	m	struct:Gui
ascii_glyph_table_init	gui_gtk_x11.c	/^ascii_glyph_table_init(void)$/;"	f	file:
ascii_glyphs	gui.h	/^    PangoGlyphString *ascii_glyphs; \/\/ cached code point -> glyph map$/;"	m	struct:Gui
ask_for_key	structs.h	/^    int		ask_for_key;		\/\/ -x argument$/;"	m	struct:__anon252
ask_yesno	misc1.c	/^ask_yesno(char_u *str, int direct)$/;"	f
assert_append_cmd_or_arg	testing.c	/^assert_append_cmd_or_arg(garray_T *gap, typval_T *argvars, char_u *cmd)$/;"	f	file:
assert_beeps	testing.c	/^assert_beeps(typval_T *argvars)$/;"	f	file:
assert_bool	testing.c	/^assert_bool(typval_T *argvars, int isTrue)$/;"	f	file:
assert_equal_common	testing.c	/^assert_equal_common(typval_T *argvars, assert_type_T atype)$/;"	f	file:
assert_equalfile	testing.c	/^assert_equalfile(typval_T *argvars)$/;"	f	file:
assert_error	evalvars.c	/^assert_error(garray_T *gap)$/;"	f
assert_inrange	testing.c	/^assert_inrange(typval_T *argvars)$/;"	f	file:
assert_match_common	testing.c	/^assert_match_common(typval_T *argvars, assert_type_T atype)$/;"	f	file:
assert_type_T	vim.h	/^} assert_type_T;$/;"	t	typeref:enum:__anon280
assign_dest_T	vim9compile.c	/^} assign_dest_T;$/;"	t	typeref:enum:__anon132	file:
assignment_len	vim9compile.c	/^assignment_len(char_u *p, int *heredoc)$/;"	f
at_ctrl_x_key	getchar.c	/^at_ctrl_x_key(void)$/;"	f	file:
at_start	regexp.c	/^     int	at_start;$/;"	m	struct:__anon98	file:
at_start	regexp.c	/^static int	at_start;	\/\/ True when on the first character$/;"	v	file:
athena_calculate_ins_pos	gui_athena.c	/^athena_calculate_ins_pos(Widget widget)$/;"	f	file:
attention_message	memline.c	/^attention_message($/;"	f	file:
attr	message.c	/^    int			attr;$/;"	m	struct:msg_hist	file:
attr	structs.h	/^    int		attr;	    \/\/ attributes to be used for a match$/;"	m	struct:__anon240
attr_cur	structs.h	/^    int		attr_cur;   \/\/ attributes currently active in win_line()$/;"	m	struct:__anon240
attr_entry	structs.h	/^typedef struct attr_entry$/;"	s
attrentry_T	structs.h	/^} attrentry_T;$/;"	t	typeref:struct:attr_entry
attrs	terminal.c	/^  VTermScreenCellAttrs	attrs;$/;"	m	struct:__anon121	file:
au_cleanup	autocmd.c	/^au_cleanup(void)$/;"	f	file:
au_del_cmd	autocmd.c	/^static void au_del_cmd(AutoCmd *ac)$/;"	f	file:
au_del_group	autocmd.c	/^au_del_group(char_u *name)$/;"	f	file:
au_did_filetype	globals.h	/^EXTERN int	au_did_filetype INIT(= FALSE);$/;"	v
au_event_disable	autocmd.c	/^au_event_disable(char *what)$/;"	f
au_event_restore	autocmd.c	/^au_event_restore(char_u *old_ei)$/;"	f
au_exists	autocmd.c	/^au_exists(char_u *arg)$/;"	f
au_find_group	autocmd.c	/^au_find_group(char_u *name)$/;"	f	file:
au_get_grouparg	autocmd.c	/^au_get_grouparg(char_u **argp)$/;"	f	file:
au_has_group	autocmd.c	/^au_has_group(char_u *name)$/;"	f
au_need_clean	autocmd.c	/^static int au_need_clean = FALSE;   \/\/ need to delete marked patterns$/;"	v	file:
au_new_group	autocmd.c	/^au_new_group(char_u *name)$/;"	f	file:
au_pending_free_buf	globals.h	/^EXTERN buf_T	*au_pending_free_buf INIT(= NULL);$/;"	v
au_pending_free_win	globals.h	/^EXTERN win_T	*au_pending_free_win INIT(= NULL);$/;"	v
au_remove_cmds	autocmd.c	/^au_remove_cmds(AutoPat *ap)$/;"	f	file:
au_remove_pat	autocmd.c	/^au_remove_pat(AutoPat *ap)$/;"	f	file:
aubuflocal_remove	autocmd.c	/^aubuflocal_remove(buf_T *buf)$/;"	f
aucmd	structs.h	/^	AutoPatCmd *aucmd;  \/\/ autocommand info$/;"	m	union:__anon225::__anon226
aucmd_prepbuf	autocmd.c	/^aucmd_prepbuf($/;"	f
aucmd_restbuf	autocmd.c	/^aucmd_restbuf($/;"	f
aucmd_win	globals.h	/^EXTERN win_T	*aucmd_win;	\/\/ window used in aucmd_prepbuf()$/;"	v
aucmd_win_used	globals.h	/^EXTERN int	aucmd_win_used INIT(= FALSE);	\/\/ aucmd_win is being used$/;"	v
augroups	autocmd.c	/^static garray_T augroups = {0, 0, sizeof(char_u *), 10, NULL};$/;"	v	file:
auto_event	vim.h	/^enum auto_event$/;"	g
auto_format	edit.c	/^auto_format($/;"	f
auto_next_pat	autocmd.c	/^auto_next_pat($/;"	f	file:
auto_rebind	if_py_both.h	/^    int		auto_rebind;$/;"	m	struct:__anon158
autocmd_blocked	autocmd.c	/^static int	autocmd_blocked = 0;	\/\/ block all autocmds$/;"	v	file:
autocmd_bufnr	globals.h	/^EXTERN int	autocmd_bufnr INIT(= 0);     \/\/ fnum for <abuf> on cmdline$/;"	v
autocmd_busy	globals.h	/^EXTERN int	autocmd_busy INIT(= FALSE);	\/\/ Is apply_autocmds() busy?$/;"	v
autocmd_fname	globals.h	/^EXTERN char_u	*autocmd_fname INIT(= NULL); \/\/ fname for <afile> on cmdline$/;"	v
autocmd_fname_full	globals.h	/^EXTERN int	autocmd_fname_full;	     \/\/ autocmd_fname is full path$/;"	v
autocmd_match	globals.h	/^EXTERN char_u	*autocmd_match INIT(= NULL); \/\/ name for <amatch> on cmdline$/;"	v
autocmd_nested	autocmd.c	/^static int	autocmd_nested = FALSE;$/;"	v	file:
autocmd_no_enter	globals.h	/^EXTERN int	autocmd_no_enter INIT(= FALSE); \/\/ *Enter autocmds disabled$/;"	v
autocmd_no_leave	globals.h	/^EXTERN int	autocmd_no_leave INIT(= FALSE); \/\/ *Leave autocmds disabled$/;"	v
autocmd_supported	autocmd.c	/^autocmd_supported(char_u *name)$/;"	f
autoload_name	scriptfile.c	/^autoload_name(char_u *name)$/;"	f
autowrite	ex_cmds2.c	/^autowrite(buf_T *buf, int forceit)$/;"	f
autowrite_all	ex_cmds2.c	/^autowrite_all(void)$/;"	f
available	vim.h	/^    int		available;	\/\/ Is clipboard available?$/;"	m	struct:__anon279
average	syntax.c	/^    proftime_T	average;$/;"	m	struct:__anon117	file:
b	regexp.c	/^    int a, b, c;$/;"	m	struct:__anon100	file:
b0_dirty	memline.c	185;"	d	file:
b0_flags	memline.c	190;"	d	file:
b0_fname	memline.c	/^    char_u	b0_fname[B0_FNAME_SIZE_ORG]; \/\/ name of file being edited$/;"	m	struct:block0	file:
b0_hname	memline.c	/^    char_u	b0_hname[B0_HNAME_SIZE]; \/\/ host name (if it has a name)$/;"	m	struct:block0	file:
b0_id	memline.c	/^    char_u	b0_id[2];	\/\/ id for block 0: BLOCK0_ID0 and BLOCK0_ID1,$/;"	m	struct:block0	file:
b0_ino	memline.c	/^    char_u	b0_ino[4];	\/\/ inode of b0_fname$/;"	m	struct:block0	file:
b0_magic_char	memline.c	/^    char_u	b0_magic_char;	\/\/ check for last char$/;"	m	struct:block0	file:
b0_magic_int	memline.c	/^    int		b0_magic_int;	\/\/ check for byte order of int$/;"	m	struct:block0	file:
b0_magic_long	memline.c	/^    long	b0_magic_long;	\/\/ check for byte order of long$/;"	m	struct:block0	file:
b0_magic_short	memline.c	/^    short	b0_magic_short;	\/\/ check for byte order of short$/;"	m	struct:block0	file:
b0_magic_wrong	memline.c	/^b0_magic_wrong(ZERO_BL *b0p)$/;"	f	file:
b0_mtime	memline.c	/^    char_u	b0_mtime[4];	\/\/ last modification time of file$/;"	m	struct:block0	file:
b0_page_size	memline.c	/^    char_u	b0_page_size[4];\/\/ number of bytes per page$/;"	m	struct:block0	file:
b0_pid	memline.c	/^    char_u	b0_pid[4];	\/\/ process id of creator (or 0)$/;"	m	struct:block0	file:
b0_seed	memline.c	196;"	d	file:
b0_uname	memline.c	/^    char_u	b0_uname[B0_UNAME_SIZE]; \/\/ name of user (uid if no name)$/;"	m	struct:block0	file:
b0_version	memline.c	/^    char_u	b0_version[10];	\/\/ Vim version string$/;"	m	struct:block0	file:
bFullscreenSupported	os_win32.c	/^    BOOL bFullscreenSupported;$/;"	m	struct:_DYN_CONSOLE_SCREEN_BUFFER_INFOEX	file:
bUserAbort	os_mswin.c	/^static int		*bUserAbort = NULL;$/;"	v	file:
b_FSSpec	structs.h	/^    FSSpec	b_FSSpec;	\/\/ MacOS File Identification$/;"	m	struct:file_buffer
b_bad_char	structs.h	/^    int		b_bad_char;	\/\/ "++bad=" argument when edit started or 0$/;"	m	struct:file_buffer
b_bkc_flags	structs.h	/^    unsigned	b_bkc_flags;    \/\/ flags for 'backupcopy'$/;"	m	struct:file_buffer
b_bufvar	structs.h	/^    dictitem_T	b_bufvar;	\/\/ variable for "b:" Dictionary$/;"	m	struct:file_buffer
b_cap_prog	structs.h	/^    regprog_T	*b_cap_prog;	    \/\/ program for 'spellcapcheck'$/;"	m	struct:__anon239
b_changed	structs.h	/^    int		b_changed;	\/\/ 'modified': Set to TRUE if something in the$/;"	m	struct:file_buffer
b_changelist	structs.h	/^    pos_T	b_changelist[JUMPLISTSIZE];$/;"	m	struct:file_buffer
b_changelistlen	structs.h	/^    int		b_changelistlen;	\/\/ number of active entries$/;"	m	struct:file_buffer
b_chartab	structs.h	/^    char_u	b_chartab[32];$/;"	m	struct:file_buffer
b_cjk	structs.h	/^    int		b_cjk;		    \/\/ all CJK letters as OK$/;"	m	struct:__anon239
b_cryptstate	structs.h	/^    cryptstate_T *b_cryptstate;	\/\/ Encryption state while reading or writing$/;"	m	struct:file_buffer
b_ct_di	structs.h	/^    dictitem16_T b_ct_di;	\/\/ holds the b:changedtick value in$/;"	m	struct:file_buffer
b_dev	structs.h	/^    dev_t	b_dev;		\/\/ device number$/;"	m	struct:file_buffer
b_dev_valid	structs.h	/^    int		b_dev_valid;	\/\/ TRUE when b_dev has a valid number$/;"	m	struct:file_buffer
b_did_warn	structs.h	/^    int		b_did_warn;	\/\/ Set to 1 if user has been warned on first$/;"	m	struct:file_buffer
b_diff_failed	structs.h	/^    int		b_diff_failed;	\/\/ internal diff failed for this buffer$/;"	m	struct:file_buffer
b_fab_mrs	structs.h	/^    unsigned int b_fab_mrs;	\/\/ Max record size$/;"	m	struct:file_buffer
b_fab_rat	structs.h	/^    char	 b_fab_rat;	\/\/ Record attribute$/;"	m	struct:file_buffer
b_fab_rfm	structs.h	/^    char	 b_fab_rfm;	\/\/ Record format$/;"	m	struct:file_buffer
b_ffname	structs.h	/^    char_u	*b_ffname;	\/\/ full path file name, allocated$/;"	m	struct:file_buffer
b_first_abbr	structs.h	/^    mapblock_T	*b_first_abbr;$/;"	m	struct:file_buffer
b_flags	structs.h	/^    int		b_flags;	\/\/ various BF_ flags$/;"	m	struct:file_buffer
b_fname	structs.h	/^    char_u	*b_fname;	\/\/ current file name, points to b_ffname or$/;"	m	struct:file_buffer
b_fnum	structs.h	/^    int		b_fnum;		\/\/ buffer number for this file.$/;"	m	struct:file_buffer
b_has_qf_entry	structs.h	/^    int		b_has_qf_entry;$/;"	m	struct:file_buffer
b_has_sign_column	structs.h	/^    int		b_has_sign_column; \/\/ Flag that is set when a first sign is$/;"	m	struct:file_buffer
b_has_textprop	structs.h	/^    int		b_has_textprop;	\/\/ TRUE when text props were added$/;"	m	struct:file_buffer
b_help	structs.h	/^    int		b_help;		\/\/ TRUE for help file buffer (when set b_p_bt$/;"	m	struct:file_buffer
b_ind_case	structs.h	/^    int		b_ind_case;$/;"	m	struct:file_buffer
b_ind_case_break	structs.h	/^    int		b_ind_case_break;$/;"	m	struct:file_buffer
b_ind_case_code	structs.h	/^    int		b_ind_case_code;$/;"	m	struct:file_buffer
b_ind_close_extra	structs.h	/^    int		b_ind_close_extra;$/;"	m	struct:file_buffer
b_ind_comment	structs.h	/^    int		b_ind_comment;$/;"	m	struct:file_buffer
b_ind_continuation	structs.h	/^    int		b_ind_continuation;$/;"	m	struct:file_buffer
b_ind_cpp_baseclass	structs.h	/^    int		b_ind_cpp_baseclass;$/;"	m	struct:file_buffer
b_ind_cpp_extern_c	structs.h	/^    int		b_ind_cpp_extern_c;$/;"	m	struct:file_buffer
b_ind_cpp_namespace	structs.h	/^    int		b_ind_cpp_namespace;$/;"	m	struct:file_buffer
b_ind_first_open	structs.h	/^    int		b_ind_first_open;$/;"	m	struct:file_buffer
b_ind_func_type	structs.h	/^    int		b_ind_func_type;$/;"	m	struct:file_buffer
b_ind_hash_comment	structs.h	/^    int		b_ind_hash_comment;$/;"	m	struct:file_buffer
b_ind_if_for_while	structs.h	/^    int		b_ind_if_for_while;$/;"	m	struct:file_buffer
b_ind_in_comment	structs.h	/^    int		b_ind_in_comment;$/;"	m	struct:file_buffer
b_ind_in_comment2	structs.h	/^    int		b_ind_in_comment2;$/;"	m	struct:file_buffer
b_ind_java	structs.h	/^    int		b_ind_java;$/;"	m	struct:file_buffer
b_ind_js	structs.h	/^    int		b_ind_js;$/;"	m	struct:file_buffer
b_ind_jump_label	structs.h	/^    int		b_ind_jump_label;$/;"	m	struct:file_buffer
b_ind_keep_case_label	structs.h	/^    int		b_ind_keep_case_label;$/;"	m	struct:file_buffer
b_ind_level	structs.h	/^    int		b_ind_level;$/;"	m	struct:file_buffer
b_ind_matching_paren	structs.h	/^    int		b_ind_matching_paren;$/;"	m	struct:file_buffer
b_ind_maxcomment	structs.h	/^    int		b_ind_maxcomment;$/;"	m	struct:file_buffer
b_ind_maxparen	structs.h	/^    int		b_ind_maxparen;$/;"	m	struct:file_buffer
b_ind_no_brace	structs.h	/^    int		b_ind_no_brace;$/;"	m	struct:file_buffer
b_ind_open_extra	structs.h	/^    int		b_ind_open_extra;$/;"	m	struct:file_buffer
b_ind_open_imag	structs.h	/^    int		b_ind_open_imag;$/;"	m	struct:file_buffer
b_ind_open_left_imag	structs.h	/^    int		b_ind_open_left_imag;$/;"	m	struct:file_buffer
b_ind_param	structs.h	/^    int		b_ind_param;$/;"	m	struct:file_buffer
b_ind_paren_prev	structs.h	/^    int		b_ind_paren_prev;$/;"	m	struct:file_buffer
b_ind_scopedecl	structs.h	/^    int		b_ind_scopedecl;$/;"	m	struct:file_buffer
b_ind_scopedecl_code	structs.h	/^    int		b_ind_scopedecl_code;$/;"	m	struct:file_buffer
b_ind_unclosed	structs.h	/^    int		b_ind_unclosed;$/;"	m	struct:file_buffer
b_ind_unclosed2	structs.h	/^    int		b_ind_unclosed2;$/;"	m	struct:file_buffer
b_ind_unclosed_noignore	structs.h	/^    int		b_ind_unclosed_noignore;$/;"	m	struct:file_buffer
b_ind_unclosed_whiteok	structs.h	/^    int		b_ind_unclosed_whiteok;$/;"	m	struct:file_buffer
b_ind_unclosed_wrapped	structs.h	/^    int		b_ind_unclosed_wrapped;$/;"	m	struct:file_buffer
b_ino	structs.h	/^    ino_t	b_ino;		\/\/ inode number$/;"	m	struct:file_buffer
b_key	structs.h	/^    char_u	b_key[VIM_SIZEOF_INT * 2 + 1];$/;"	m	struct:file_buffer
b_keywtab	structs.h	/^    hashtab_T	b_keywtab;		\/\/ syntax keywords hash table$/;"	m	struct:__anon239
b_keywtab_ic	structs.h	/^    hashtab_T	b_keywtab_ic;		\/\/ idem, ignore case$/;"	m	struct:__anon239
b_kmap_ga	structs.h	/^    garray_T	b_kmap_ga;	\/\/ the keymap table$/;"	m	struct:file_buffer
b_kmap_state	structs.h	/^    short	b_kmap_state;	\/\/ using "lmap" mappings$/;"	m	struct:file_buffer
b_langp	structs.h	/^    garray_T	b_langp;	    \/\/ list of pointers to slang_T, see spell.c$/;"	m	struct:__anon239
b_last_change	structs.h	/^    pos_T	b_last_change;	\/\/ position of last change: '. mark$/;"	m	struct:file_buffer
b_last_changedtick	structs.h	/^    varnumber_T	b_last_changedtick; \/\/ b:changedtick when TextChanged or$/;"	m	struct:file_buffer
b_last_changedtick_pum	structs.h	/^    varnumber_T	b_last_changedtick_pum; \/\/ b:changedtick when TextChangedP was$/;"	m	struct:file_buffer
b_last_cursor	structs.h	/^    pos_T	b_last_cursor;	\/\/ cursor position when last unloading this$/;"	m	struct:file_buffer
b_last_insert	structs.h	/^    pos_T	b_last_insert;	\/\/ where Insert mode was left$/;"	m	struct:file_buffer
b_last_used	structs.h	/^    time_T	b_last_used;	\/\/ time when the buffer was last used; used$/;"	m	struct:file_buffer
b_listener	structs.h	/^    listener_T	*b_listener;$/;"	m	struct:file_buffer
b_locked	structs.h	/^    int		b_locked;	\/\/ Buffer is being closed or referenced, don't$/;"	m	struct:file_buffer
b_maphash	structs.h	/^    mapblock_T	*(b_maphash[256]);$/;"	m	struct:file_buffer
b_mapped_ctrl_c	structs.h	/^    int		b_mapped_ctrl_c; \/\/ modes where CTRL-C is mapped$/;"	m	struct:file_buffer
b_marks_read	structs.h	/^    int		b_marks_read;	\/\/ Have we read viminfo marks yet?$/;"	m	struct:file_buffer
b_may_swap	structs.h	/^    int		b_may_swap;$/;"	m	struct:file_buffer
b_ml	structs.h	/^    memline_T	b_ml;		\/\/ associated memline (also contains line$/;"	m	struct:file_buffer
b_mod_bot	structs.h	/^    linenr_T	b_mod_bot;	\/\/ lnum below last changed line, AFTER the$/;"	m	struct:file_buffer
b_mod_set	structs.h	/^    int		b_mod_set;	\/\/ TRUE when there are changes since the last$/;"	m	struct:file_buffer
b_mod_top	structs.h	/^    linenr_T	b_mod_top;	\/\/ topmost lnum that was changed$/;"	m	struct:file_buffer
b_mod_xlines	structs.h	/^    long	b_mod_xlines;	\/\/ number of extra buffer lines inserted;$/;"	m	struct:file_buffer
b_mtime	structs.h	/^    long	b_mtime;	\/\/ last change time of original file$/;"	m	struct:file_buffer
b_mtime_read	structs.h	/^    long	b_mtime_read;	\/\/ last change time when reading$/;"	m	struct:file_buffer
b_mzscheme_ref	structs.h	/^    void	*b_mzscheme_ref; \/\/ The MzScheme reference to this buffer$/;"	m	struct:file_buffer
b_namedm	structs.h	/^    pos_T	b_namedm[NMARKS]; \/\/ current named marks (mark.c)$/;"	m	struct:file_buffer
b_netbeans_file	structs.h	/^    int		b_netbeans_file;    \/\/ TRUE when buffer is owned by NetBeans$/;"	m	struct:file_buffer
b_new_change	structs.h	/^    int		b_new_change;		\/\/ set by u_savecommon()$/;"	m	struct:file_buffer
b_next	structs.h	/^    buf_T	*b_next;	\/\/ links in list of buffers$/;"	m	struct:file_buffer
b_next	structs.h	/^    buffblock_T	*b_next;	\/\/ pointer to next buffblock$/;"	m	struct:buffblock
b_no_eol_lnum	structs.h	/^    linenr_T	b_no_eol_lnum;	\/\/ non-zero lnum when last line of next binary$/;"	m	struct:file_buffer
b_nospell_cluster_id	structs.h	/^    int		b_nospell_cluster_id;	\/\/ @NoSpell cluster ID or 0$/;"	m	struct:__anon239
b_nwindows	structs.h	/^    int		b_nwindows;	\/\/ nr of windows open on this buffer$/;"	m	struct:file_buffer
b_op_end	structs.h	/^    pos_T	b_op_end;$/;"	m	struct:file_buffer
b_op_start	structs.h	/^    pos_T	b_op_start;$/;"	m	struct:file_buffer
b_op_start_orig	structs.h	/^    pos_T	b_op_start_orig;  \/\/ used for Insstart_orig$/;"	m	struct:file_buffer
b_orig_mode	structs.h	/^    int		b_orig_mode;	\/\/ mode of original file$/;"	m	struct:file_buffer
b_orig_size	structs.h	/^    off_T	b_orig_size;	\/\/ size of original file in bytes$/;"	m	struct:file_buffer
b_p_ai	structs.h	/^    int		b_p_ai;		\/\/ 'autoindent'$/;"	m	struct:file_buffer
b_p_ai_nopaste	structs.h	/^    int		b_p_ai_nopaste;	\/\/ b_p_ai saved for paste mode$/;"	m	struct:file_buffer
b_p_ar	structs.h	/^    int		b_p_ar;		\/\/ 'autoread' local value$/;"	m	struct:file_buffer
b_p_bexpr	structs.h	/^    char_u	*b_p_bexpr;	\/\/ 'balloonexpr' local value$/;"	m	struct:file_buffer
b_p_bexpr_flags	structs.h	/^    long_u	b_p_bexpr_flags;\/\/ flags for 'balloonexpr'$/;"	m	struct:file_buffer
b_p_bh	structs.h	/^    char_u	*b_p_bh;	\/\/ 'bufhidden'$/;"	m	struct:file_buffer
b_p_bin	structs.h	/^    int		b_p_bin;	\/\/ 'binary'$/;"	m	struct:file_buffer
b_p_bkc	structs.h	/^    char_u	*b_p_bkc;	\/\/ 'backupcopy'$/;"	m	struct:file_buffer
b_p_bl	structs.h	/^    int		b_p_bl;		\/\/ 'buflisted'$/;"	m	struct:file_buffer
b_p_bomb	structs.h	/^    int		b_p_bomb;	\/\/ 'bomb'$/;"	m	struct:file_buffer
b_p_bt	structs.h	/^    char_u	*b_p_bt;	\/\/ 'buftype'$/;"	m	struct:file_buffer
b_p_cfu	structs.h	/^    char_u	*b_p_cfu;	\/\/ 'completefunc'$/;"	m	struct:file_buffer
b_p_ci	structs.h	/^    int		b_p_ci;		\/\/ 'copyindent'$/;"	m	struct:file_buffer
b_p_cin	structs.h	/^    int		b_p_cin;	\/\/ 'cindent'$/;"	m	struct:file_buffer
b_p_cink	structs.h	/^    char_u	*b_p_cink;	\/\/ 'cinkeys'$/;"	m	struct:file_buffer
b_p_cino	structs.h	/^    char_u	*b_p_cino;	\/\/ 'cinoptions'$/;"	m	struct:file_buffer
b_p_cinw	structs.h	/^    char_u	*b_p_cinw;	\/\/ 'cinwords'$/;"	m	struct:file_buffer
b_p_cm	structs.h	/^    char_u	*b_p_cm;	\/\/ 'cryptmethod'$/;"	m	struct:file_buffer
b_p_cms	structs.h	/^    char_u	*b_p_cms;	\/\/ 'commentstring'$/;"	m	struct:file_buffer
b_p_com	structs.h	/^    char_u	*b_p_com;	\/\/ 'comments'$/;"	m	struct:file_buffer
b_p_cpt	structs.h	/^    char_u	*b_p_cpt;	\/\/ 'complete'$/;"	m	struct:file_buffer
b_p_csl	structs.h	/^    char_u	*b_p_csl;	\/\/ 'completeslash'$/;"	m	struct:file_buffer
b_p_def	structs.h	/^    char_u	*b_p_def;	\/\/ 'define' local value$/;"	m	struct:file_buffer
b_p_dict	structs.h	/^    char_u	*b_p_dict;	\/\/ 'dictionary' local value$/;"	m	struct:file_buffer
b_p_efm	structs.h	/^    char_u	*b_p_efm;	\/\/ 'errorformat' local value$/;"	m	struct:file_buffer
b_p_eol	structs.h	/^    int		b_p_eol;	\/\/ 'endofline'$/;"	m	struct:file_buffer
b_p_ep	structs.h	/^    char_u	*b_p_ep;	\/\/ 'equalprg' local value$/;"	m	struct:file_buffer
b_p_et	structs.h	/^    int		b_p_et;		\/\/ 'expandtab'$/;"	m	struct:file_buffer
b_p_et_nobin	structs.h	/^    int		b_p_et_nobin;	\/\/ b_p_et saved for binary mode$/;"	m	struct:file_buffer
b_p_et_nopaste	structs.h	/^    int		b_p_et_nopaste; \/\/ b_p_et saved for paste mode$/;"	m	struct:file_buffer
b_p_fenc	structs.h	/^    char_u	*b_p_fenc;	\/\/ 'fileencoding'$/;"	m	struct:file_buffer
b_p_fex	structs.h	/^    char_u	*b_p_fex;	\/\/ 'formatexpr'$/;"	m	struct:file_buffer
b_p_fex_flags	structs.h	/^    long_u	b_p_fex_flags;	\/\/ flags for 'formatexpr'$/;"	m	struct:file_buffer
b_p_ff	structs.h	/^    char_u	*b_p_ff;	\/\/ 'fileformat'$/;"	m	struct:file_buffer
b_p_fixeol	structs.h	/^    int		b_p_fixeol;	\/\/ 'fixendofline'$/;"	m	struct:file_buffer
b_p_flp	structs.h	/^    char_u	*b_p_flp;	\/\/ 'formatlistpat'$/;"	m	struct:file_buffer
b_p_fo	structs.h	/^    char_u	*b_p_fo;	\/\/ 'formatoptions'$/;"	m	struct:file_buffer
b_p_fp	structs.h	/^    char_u	*b_p_fp;	\/\/ 'formatprg'$/;"	m	struct:file_buffer
b_p_ft	structs.h	/^    char_u	*b_p_ft;	\/\/ 'filetype'$/;"	m	struct:file_buffer
b_p_gp	structs.h	/^    char_u	*b_p_gp;	\/\/ 'grepprg' local value$/;"	m	struct:file_buffer
b_p_iminsert	structs.h	/^    long	b_p_iminsert;	\/\/ input mode for insert$/;"	m	struct:file_buffer
b_p_imsearch	structs.h	/^    long	b_p_imsearch;	\/\/ input mode for search$/;"	m	struct:file_buffer
b_p_inc	structs.h	/^    char_u	*b_p_inc;	\/\/ 'include'$/;"	m	struct:file_buffer
b_p_inde	structs.h	/^    char_u	*b_p_inde;	\/\/ 'indentexpr'$/;"	m	struct:file_buffer
b_p_inde_flags	structs.h	/^    long_u	b_p_inde_flags;	\/\/ flags for 'indentexpr'$/;"	m	struct:file_buffer
b_p_indk	structs.h	/^    char_u	*b_p_indk;	\/\/ 'indentkeys'$/;"	m	struct:file_buffer
b_p_inex	structs.h	/^    char_u	*b_p_inex;	\/\/ 'includeexpr'$/;"	m	struct:file_buffer
b_p_inex_flags	structs.h	/^    long_u	b_p_inex_flags;	\/\/ flags for 'includeexpr'$/;"	m	struct:file_buffer
b_p_inf	structs.h	/^    int		b_p_inf;	\/\/ 'infercase'$/;"	m	struct:file_buffer
b_p_initialized	structs.h	/^    int		b_p_initialized;	\/\/ set when options initialized$/;"	m	struct:file_buffer
b_p_isk	structs.h	/^    char_u	*b_p_isk;	\/\/ 'iskeyword'$/;"	m	struct:file_buffer
b_p_key	structs.h	/^    char_u	*b_p_key;	\/\/ 'key'$/;"	m	struct:file_buffer
b_p_keymap	structs.h	/^    char_u	*b_p_keymap;	\/\/ 'keymap'$/;"	m	struct:file_buffer
b_p_kp	structs.h	/^    char_u	*b_p_kp;	\/\/ 'keywordprg'$/;"	m	struct:file_buffer
b_p_lisp	structs.h	/^    int		b_p_lisp;	\/\/ 'lisp'$/;"	m	struct:file_buffer
b_p_lw	structs.h	/^    char_u	*b_p_lw;	\/\/ 'lispwords' local value$/;"	m	struct:file_buffer
b_p_ma	structs.h	/^    int		b_p_ma;		\/\/ 'modifiable'$/;"	m	struct:file_buffer
b_p_menc	structs.h	/^    char_u	*b_p_menc;	\/\/ 'makeencoding'$/;"	m	struct:file_buffer
b_p_ml	structs.h	/^    int		b_p_ml;		\/\/ 'modeline'$/;"	m	struct:file_buffer
b_p_ml_nobin	structs.h	/^    int		b_p_ml_nobin;	\/\/ b_p_ml saved for binary mode$/;"	m	struct:file_buffer
b_p_mp	structs.h	/^    char_u	*b_p_mp;	\/\/ 'makeprg' local value$/;"	m	struct:file_buffer
b_p_mps	structs.h	/^    char_u	*b_p_mps;	\/\/ 'matchpairs'$/;"	m	struct:file_buffer
b_p_nf	structs.h	/^    char_u	*b_p_nf;	\/\/ 'nrformats'$/;"	m	struct:file_buffer
b_p_ofu	structs.h	/^    char_u	*b_p_ofu;	\/\/ 'omnifunc'$/;"	m	struct:file_buffer
b_p_path	structs.h	/^    char_u	*b_p_path;	\/\/ 'path' local value$/;"	m	struct:file_buffer
b_p_pi	structs.h	/^    int		b_p_pi;		\/\/ 'preserveindent'$/;"	m	struct:file_buffer
b_p_qe	structs.h	/^    char_u	*b_p_qe;	\/\/ 'quoteescape'$/;"	m	struct:file_buffer
b_p_ro	structs.h	/^    int		b_p_ro;		\/\/ 'readonly'$/;"	m	struct:file_buffer
b_p_script_ctx	structs.h	/^    sctx_T	b_p_script_ctx[BV_COUNT]; \/\/ SCTXs for buffer-local options$/;"	m	struct:file_buffer
b_p_si	structs.h	/^    int		b_p_si;		\/\/ 'smartindent'$/;"	m	struct:file_buffer
b_p_smc	structs.h	/^    long	b_p_smc;	\/\/ 'synmaxcol'$/;"	m	struct:file_buffer
b_p_sn	structs.h	/^    int		b_p_sn;		\/\/ 'shortname'$/;"	m	struct:file_buffer
b_p_spc	structs.h	/^    char_u	*b_p_spc;	    \/\/ 'spellcapcheck'$/;"	m	struct:__anon239
b_p_spf	structs.h	/^    char_u	*b_p_spf;	    \/\/ 'spellfile'$/;"	m	struct:__anon239
b_p_spl	structs.h	/^    char_u	*b_p_spl;	    \/\/ 'spelllang'$/;"	m	struct:__anon239
b_p_sts	structs.h	/^    long	b_p_sts;	\/\/ 'softtabstop'$/;"	m	struct:file_buffer
b_p_sts_nopaste	structs.h	/^    long	b_p_sts_nopaste; \/\/ b_p_sts saved for paste mode$/;"	m	struct:file_buffer
b_p_sua	structs.h	/^    char_u	*b_p_sua;	\/\/ 'suffixesadd'$/;"	m	struct:file_buffer
b_p_sw	structs.h	/^    long	b_p_sw;		\/\/ 'shiftwidth'$/;"	m	struct:file_buffer
b_p_swf	structs.h	/^    int		b_p_swf;	\/\/ 'swapfile'$/;"	m	struct:file_buffer
b_p_syn	structs.h	/^    char_u	*b_p_syn;	\/\/ 'syntax'$/;"	m	struct:file_buffer
b_p_tags	structs.h	/^    char_u	*b_p_tags;	\/\/ 'tags' local value$/;"	m	struct:file_buffer
b_p_tc	structs.h	/^    char_u	*b_p_tc;	\/\/ 'tagcase' local value$/;"	m	struct:file_buffer
b_p_tfu	structs.h	/^    char_u	*b_p_tfu;	\/\/ 'tagfunc'$/;"	m	struct:file_buffer
b_p_ts	structs.h	/^    long	b_p_ts;		\/\/ 'tabstop'$/;"	m	struct:file_buffer
b_p_tsr	structs.h	/^    char_u	*b_p_tsr;	\/\/ 'thesaurus' local value$/;"	m	struct:file_buffer
b_p_tw	structs.h	/^    long	b_p_tw;		\/\/ 'textwidth'$/;"	m	struct:file_buffer
b_p_tw_nobin	structs.h	/^    long	b_p_tw_nobin;	\/\/ b_p_tw saved for binary mode$/;"	m	struct:file_buffer
b_p_tw_nopaste	structs.h	/^    long	b_p_tw_nopaste;	\/\/ b_p_tw saved for paste mode$/;"	m	struct:file_buffer
b_p_twsl	structs.h	/^    long	b_p_twsl;	\/\/ 'termwinscroll'$/;"	m	struct:file_buffer
b_p_tx	structs.h	/^    int		b_p_tx;		\/\/ 'textmode'$/;"	m	struct:file_buffer
b_p_udf	structs.h	/^    int		b_p_udf;	\/\/ 'undofile'$/;"	m	struct:file_buffer
b_p_ul	structs.h	/^    long	b_p_ul;		\/\/ 'undolevels' local value$/;"	m	struct:file_buffer
b_p_vsts	structs.h	/^    char_u	*b_p_vsts;	\/\/ 'varsofttabstop'$/;"	m	struct:file_buffer
b_p_vsts_array	structs.h	/^    int		*b_p_vsts_array;   \/\/ 'varsofttabstop' in internal format$/;"	m	struct:file_buffer
b_p_vsts_nopaste	structs.h	/^    char_u	*b_p_vsts_nopaste; \/\/ b_p_vsts saved for paste mode$/;"	m	struct:file_buffer
b_p_vts	structs.h	/^    char_u	*b_p_vts;	\/\/ 'vartabstop'$/;"	m	struct:file_buffer
b_p_vts_array	structs.h	/^    int		*b_p_vts_array;	\/\/ 'vartabstop' in internal format$/;"	m	struct:file_buffer
b_p_wm	structs.h	/^    long	b_p_wm;		\/\/ 'wrapmargin'$/;"	m	struct:file_buffer
b_p_wm_nobin	structs.h	/^    long	b_p_wm_nobin;	\/\/ b_p_wm saved for binary mode$/;"	m	struct:file_buffer
b_p_wm_nopaste	structs.h	/^    long	b_p_wm_nopaste;	\/\/ b_p_wm saved for paste mode$/;"	m	struct:file_buffer
b_perl_private	structs.h	/^    void	*b_perl_private;$/;"	m	struct:file_buffer
b_prev	structs.h	/^    buf_T	*b_prev;$/;"	m	struct:file_buffer
b_prompt_callback	structs.h	/^    callback_T	b_prompt_callback;	\/\/ set by prompt_setcallback()$/;"	m	struct:file_buffer
b_prompt_insert	structs.h	/^    int		b_prompt_insert;	\/\/ value for restart_edit when entering$/;"	m	struct:file_buffer
b_prompt_interrupt	structs.h	/^    callback_T	b_prompt_interrupt;	\/\/ set by prompt_setinterrupt()$/;"	m	struct:file_buffer
b_prompt_text	structs.h	/^    char_u	*b_prompt_text;		\/\/ set by prompt_setprompt()$/;"	m	struct:file_buffer
b_proptypes	structs.h	/^    hashtab_T	*b_proptypes;	\/\/ text property types local to buffer$/;"	m	struct:file_buffer
b_python3_ref	structs.h	/^    void	*b_python3_ref;	\/\/ The Python3 reference to this buffer$/;"	m	struct:file_buffer
b_python_ref	structs.h	/^    void	*b_python_ref;	\/\/ The Python reference to this buffer$/;"	m	struct:file_buffer
b_recorded_changes	structs.h	/^    list_T	*b_recorded_changes;$/;"	m	struct:file_buffer
b_ruby_ref	structs.h	/^    void	*b_ruby_ref;$/;"	m	struct:file_buffer
b_s	structs.h	/^    synblock_T	b_s;		\/\/ Info related to syntax highlighting.  w_s$/;"	m	struct:file_buffer
b_saving	structs.h	/^    int		b_saving;	\/\/ Set to TRUE if we are in the middle of$/;"	m	struct:file_buffer
b_scanned	structs.h	/^    int		b_scanned;	\/\/ ^N\/^P have scanned this buffer$/;"	m	struct:file_buffer
b_sfname	structs.h	/^    char_u	*b_sfname;	\/\/ short file name, allocated, may be equal to$/;"	m	struct:file_buffer
b_shortname	structs.h	/^    int		b_shortname;	\/\/ this file has an 8.3 file name$/;"	m	struct:file_buffer
b_signlist	structs.h	/^    sign_entry_T *b_signlist;	   \/\/ list of placed signs$/;"	m	struct:file_buffer
b_spell	structs.h	/^    int		b_spell;	\/\/ TRUE for a spell file buffer, most fields$/;"	m	struct:file_buffer
b_spell_cluster_id	structs.h	/^    int		b_spell_cluster_id;	\/\/ @Spell cluster ID or 0$/;"	m	struct:__anon239
b_spell_ismw	structs.h	/^    char_u	b_spell_ismw[256];  \/\/ flags: is midword char$/;"	m	struct:__anon239
b_spell_ismw_mb	structs.h	/^    char_u	*b_spell_ismw_mb;   \/\/ multi-byte midword chars$/;"	m	struct:__anon239
b_sst_array	structs.h	/^    synstate_T	*b_sst_array;$/;"	m	struct:__anon239
b_sst_check_lnum	structs.h	/^    linenr_T	b_sst_check_lnum;$/;"	m	struct:__anon239
b_sst_first	structs.h	/^    synstate_T	*b_sst_first;$/;"	m	struct:__anon239
b_sst_firstfree	structs.h	/^    synstate_T	*b_sst_firstfree;$/;"	m	struct:__anon239
b_sst_freecount	structs.h	/^    int		b_sst_freecount;$/;"	m	struct:__anon239
b_sst_lasttick	structs.h	/^    short_u	b_sst_lasttick;	\/\/ last display tick$/;"	m	struct:__anon239
b_sst_len	structs.h	/^    int		b_sst_len;$/;"	m	struct:__anon239
b_start_bomb	structs.h	/^    int		b_start_bomb;	\/\/ 'bomb' when it was read$/;"	m	struct:file_buffer
b_start_eol	structs.h	/^    int		b_start_eol;	\/\/ last line had eol when it was read$/;"	m	struct:file_buffer
b_start_fenc	structs.h	/^    char_u	*b_start_fenc;	\/\/ 'fileencoding' when edit started or NULL$/;"	m	struct:file_buffer
b_start_ffc	structs.h	/^    int		b_start_ffc;	\/\/ first char of 'ff' when edit started$/;"	m	struct:file_buffer
b_str	structs.h	/^    char_u	b_str[1];	\/\/ contents (actually longer)$/;"	m	struct:buffblock
b_syn_chartab	structs.h	/^    char_u	b_syn_chartab[32];  \/\/ syntax iskeyword option$/;"	m	struct:__anon239
b_syn_clusters	structs.h	/^    garray_T	b_syn_clusters;		\/\/ table for syntax clusters$/;"	m	struct:__anon239
b_syn_conceal	structs.h	/^    int		b_syn_conceal;		\/\/ auto-conceal for :syn cmds$/;"	m	struct:__anon239
b_syn_containedin	structs.h	/^    int		b_syn_containedin;	\/\/ TRUE when there is an item with a$/;"	m	struct:__anon239
b_syn_error	structs.h	/^    int		b_syn_error;		\/\/ TRUE when error occurred in HL$/;"	m	struct:__anon239
b_syn_folditems	structs.h	/^    int		b_syn_folditems;	\/\/ number of patterns with the HL_FOLD$/;"	m	struct:__anon239
b_syn_ic	structs.h	/^    int		b_syn_ic;		\/\/ ignore case for :syn cmds$/;"	m	struct:__anon239
b_syn_isk	structs.h	/^    char_u	*b_syn_isk;	    \/\/ iskeyword option$/;"	m	struct:__anon239
b_syn_linecont_ic	structs.h	/^    int		b_syn_linecont_ic;	\/\/ ignore-case flag for above$/;"	m	struct:__anon239
b_syn_linecont_pat	structs.h	/^    char_u	*b_syn_linecont_pat;	\/\/ line continuation pattern$/;"	m	struct:__anon239
b_syn_linecont_prog	structs.h	/^    regprog_T	*b_syn_linecont_prog;	\/\/ line continuation program$/;"	m	struct:__anon239
b_syn_linecont_time	structs.h	/^    syn_time_T  b_syn_linecont_time;$/;"	m	struct:__anon239
b_syn_patterns	structs.h	/^    garray_T	b_syn_patterns;		\/\/ table for syntax patterns$/;"	m	struct:__anon239
b_syn_slow	structs.h	/^    int		b_syn_slow;		\/\/ TRUE when 'redrawtime' reached$/;"	m	struct:__anon239
b_syn_spell	structs.h	/^    int		b_syn_spell;		\/\/ SYNSPL_ values$/;"	m	struct:__anon239
b_syn_sync_flags	structs.h	/^    int		b_syn_sync_flags;	\/\/ flags about how to sync$/;"	m	struct:__anon239
b_syn_sync_id	structs.h	/^    short	b_syn_sync_id;		\/\/ group to sync on$/;"	m	struct:__anon239
b_syn_sync_linebreaks	structs.h	/^    long	b_syn_sync_linebreaks;	\/\/ offset for multi-line pattern$/;"	m	struct:__anon239
b_syn_sync_maxlines	structs.h	/^    long	b_syn_sync_maxlines;	\/\/ maximal sync lines offset$/;"	m	struct:__anon239
b_syn_sync_minlines	structs.h	/^    long	b_syn_sync_minlines;	\/\/ minimal sync lines offset$/;"	m	struct:__anon239
b_syn_topgrp	structs.h	/^    int		b_syn_topgrp;		\/\/ for ":syntax include"$/;"	m	struct:__anon239
b_tc_flags	structs.h	/^    unsigned	b_tc_flags;     \/\/ flags for 'tagcase'$/;"	m	struct:file_buffer
b_tcl_ref	structs.h	/^    void	*b_tcl_ref;$/;"	m	struct:file_buffer
b_term	structs.h	/^    term_T	*b_term;	\/\/ When not NULL this buffer is for a terminal$/;"	m	struct:file_buffer
b_u_curhead	structs.h	/^    u_header_T	*b_u_curhead;	\/\/ pointer to current header$/;"	m	struct:file_buffer
b_u_line_colnr	structs.h	/^    colnr_T	b_u_line_colnr;	\/\/ optional column number$/;"	m	struct:file_buffer
b_u_line_lnum	structs.h	/^    linenr_T	b_u_line_lnum;	\/\/ line number of line in u_line$/;"	m	struct:file_buffer
b_u_line_ptr	structs.h	/^    undoline_T	b_u_line_ptr;	\/\/ saved line for "U" command$/;"	m	struct:file_buffer
b_u_newhead	structs.h	/^    u_header_T	*b_u_newhead;	\/\/ pointer to newest header; may not be valid$/;"	m	struct:file_buffer
b_u_numhead	structs.h	/^    int		b_u_numhead;	\/\/ current number of headers$/;"	m	struct:file_buffer
b_u_oldhead	structs.h	/^    u_header_T	*b_u_oldhead;	\/\/ pointer to oldest header$/;"	m	struct:file_buffer
b_u_save_nr_cur	structs.h	/^    long	b_u_save_nr_cur; \/\/ file write nr after which we are now$/;"	m	struct:file_buffer
b_u_save_nr_last	structs.h	/^    long	b_u_save_nr_last; \/\/ counter for last file write$/;"	m	struct:file_buffer
b_u_seq_cur	structs.h	/^    long	b_u_seq_cur;	\/\/ hu_seq of header below which we are now$/;"	m	struct:file_buffer
b_u_seq_last	structs.h	/^    long	b_u_seq_last;	\/\/ last used undo sequence number$/;"	m	struct:file_buffer
b_u_synced	structs.h	/^    int		b_u_synced;	\/\/ entry lists are synced$/;"	m	struct:file_buffer
b_u_time_cur	structs.h	/^    time_T	b_u_time_cur;	\/\/ uh_time of header below which we are now$/;"	m	struct:file_buffer
b_ucmds	structs.h	/^    garray_T	b_ucmds;$/;"	m	struct:file_buffer
b_vars	structs.h	/^    dict_T	*b_vars;	\/\/ internal variables, local to buffer$/;"	m	struct:file_buffer
b_visual	structs.h	/^    visualinfo_T b_visual;$/;"	m	struct:file_buffer
b_visual_mode_eval	structs.h	/^    int		b_visual_mode_eval;  \/\/ b_visual.vi_mode for visualmode()$/;"	m	struct:file_buffer
b_was_netbeans_file	structs.h	/^    int		b_was_netbeans_file;\/\/ TRUE if b_netbeans_file was once set$/;"	m	struct:file_buffer
b_wininfo	structs.h	/^    wininfo_T	*b_wininfo;	\/\/ list of last used info for each window$/;"	m	struct:file_buffer
b_write_to_channel	structs.h	/^    int		b_write_to_channel; \/\/ TRUE when appended lines are written to$/;"	m	struct:file_buffer
back_gc	gui.h	/^    GC		back_gc;$/;"	m	struct:Gui
back_in_line	search.c	/^back_in_line(void)$/;"	f	file:
back_pixel	gui.h	/^    guicolor_T	back_pixel;	    \/\/ Color of background$/;"	m	struct:Gui
background_argument	globals.h	/^EXTERN char	*background_argument INIT(= NULL);$/;"	v
backpos	regexp_bt.c	/^static garray_T	backpos = {0, 0, 0, 0, NULL};$/;"	v	file:
backpos_S	regexp_bt.c	/^typedef struct backpos_S$/;"	s	file:
backpos_T	regexp_bt.c	/^} backpos_T;$/;"	t	typeref:struct:backpos_S	file:
backslash_halve	charset.c	/^backslash_halve(char_u *p)$/;"	f
backslash_halve_save	charset.c	/^backslash_halve_save(char_u *p)$/;"	f
backslash_trans	regexp.c	/^backslash_trans(int c)$/;"	f	file:
backspace	structs.h	/^    int backspace;	\/\/ what the Backspace key produces$/;"	m	struct:__anon227
backspace_until_column	edit.c	/^backspace_until_column(int col)$/;"	f
bad_char	ex_cmds.h	/^    int		bad_char;	\/\/ BAD_KEEP, BAD_DROP or replacement byte$/;"	m	struct:exarg
bad_param_handler	os_win32.c	/^bad_param_handler(const wchar_t *expression,$/;"	f	file:
badcryptxt	blowfish.c	/^    char_u   badcryptxt[9]; \/\/ cryptxt when big\/little endian is wrong$/;"	m	struct:__anon3	file:
badi	spellsuggest.c	/^    int		badi;$/;"	m	struct:__anon114	file:
badword_captype	spellsuggest.c	/^badword_captype(char_u *word, char_u *end)$/;"	f	file:
balloonEval	globals.h	/^EXTERN BalloonEval	*balloonEval INIT(= NULL);$/;"	v
balloonEvalForTerm	globals.h	/^EXTERN int		balloonEvalForTerm INIT(= FALSE);$/;"	v
balloonLabel	beval.h	/^    GtkWidget		*balloonLabel;$/;"	m	struct:BalloonEvalStruct
balloonShell	beval.h	/^    GtkWidget		*balloonShell;$/;"	m	struct:BalloonEvalStruct
balloon_array	popupmenu.c	/^static pumitem_T *balloon_array = NULL;$/;"	v	file:
balloon_arraysize	popupmenu.c	/^static int balloon_arraysize;$/;"	v	file:
balloon_draw_event_cb	gui_beval.c	/^balloon_draw_event_cb(GtkWidget *widget,$/;"	f	file:
balloon_expose_event_cb	gui_beval.c	/^balloon_expose_event_cb(GtkWidget *widget,$/;"	f	file:
balpart_T	popupmenu.c	/^} balpart_T;$/;"	t	typeref:struct:__anon83	file:
bangredo	globals.h	/^EXTERN int	bangredo INIT(= FALSE);	    \/\/ set to TRUE with ! command$/;"	v
barline_parse	viminfo.c	/^barline_parse(vir_T *virp, char_u *text, garray_T *values)$/;"	f	file:
barline_writestring	viminfo.c	/^barline_writestring(FILE *fd, char_u *s, int remaining_start)$/;"	f	file:
basetv	structs.h	/^    typval_T	*basetv;	\/\/ base for base->method()$/;"	m	struct:__anon223
basic	os_vms.c	/^	int	basic;$/;"	m	union:__anon76::__anon77	file:
bat_text_no	dosinst.c	/^char *bat_text_no = "do NOT install .bat files to use Vim at the command line";$/;"	v
bat_text_yes	dosinst.c	/^char *bat_text_yes = "Install .bat files to use Vim at the command line:";$/;"	v
batfile_thisversion	uninstall.c	/^batfile_thisversion(char *path)$/;"	f	file:
batname	dosinst.h	/^    char	*batname;	\/\/ batch file name$/;"	m	struct:__anon141
batpath	dosinst.h	/^    char	batpath[BUFSIZE];  \/\/ path of batch file to create; not$/;"	m	struct:__anon141
bbox_max_y	hardcopy.c	/^    int		bbox_max_y;$/;"	m	struct:prt_ps_font_S	file:
bbox_min_y	hardcopy.c	/^    int		bbox_min_y;$/;"	m	struct:prt_ps_font_S	file:
bck_word	search.c	/^bck_word(long count, int bigword, int stop)$/;"	f
bckend_word	search.c	/^bckend_word($/;"	f
beep_flush	misc1.c	/^beep_flush(void)$/;"	f
beepcmd	if_tcl.c	/^beepcmd($/;"	f	file:
before_blocking	getchar.c	/^before_blocking(void)$/;"	f
before_quit_autocmds	ex_docmd.c	/^before_quit_autocmds(win_T *wp, int quit_all, int forceit)$/;"	f	file:
beginSelection	gui_at_fs.c	/^    int		beginSelection;$/;"	m	struct:__anon32	file:
beginline	edit.c	/^beginline(int flags)$/;"	f
behind_pos	regexp_bt.c	/^static regsave_T behind_pos;$/;"	v	file:
beos_cleanup_read_thread	os_beos.c	/^beos_cleanup_read_thread(void)$/;"	f
beos_select	os_beos.c	/^beos_select(int nbits,$/;"	f
bevalServers	globals.h	/^EXTERN int bevalServers INIT(= 0);$/;"	v
bevalexpr_due	globals.h	/^EXTERN proftime_T bevalexpr_due;$/;"	v
bevalexpr_due_set	globals.h	/^EXTERN int  bevalexpr_due_set INIT(= FALSE);$/;"	v
bf_cfb_init	blowfish.c	/^bf_cfb_init($/;"	f	file:
bf_check_tables	blowfish.c	/^bf_check_tables($/;"	f	file:
bf_e_block	blowfish.c	/^bf_e_block($/;"	f	file:
bf_e_cblock	blowfish.c	/^bf_e_cblock($/;"	f	file:
bf_key_init	blowfish.c	/^bf_key_init($/;"	f	file:
bf_self_test	blowfish.c	/^bf_self_test(void)$/;"	f	file:
bf_state_T	blowfish.c	/^} bf_state_T;$/;"	t	typeref:struct:__anon2	file:
bf_test_data	blowfish.c	/^static struct_bf_test_data bf_test_data[] = {$/;"	v	file:
bfunc	vim9.h	/^	cbfunc_T	    bfunc;$/;"	m	union:__anon276::__anon277
bg	terminal.c	/^  VTermColor		bg;$/;"	m	struct:__anon121	file:
bg_b	term.c	/^static int bg_b = 255;$/;"	v	file:
bg_color	structs.h	/^	    guicolor_T	    bg_color;	\/\/ background color handle$/;"	m	struct:attr_entry::__anon196::__anon199
bg_color	structs.h	/^	    short_u	    bg_color;	\/\/ background color number$/;"	m	struct:attr_entry::__anon196::__anon198
bg_color	structs.h	/^    long_u	bg_color;$/;"	m	struct:__anon246
bg_g	term.c	/^static int bg_g = 255;$/;"	v	file:
bg_r	term.c	/^static int bg_r = 255;$/;"	v	file:
bg_rgb	structs.h	/^	    guicolor_T	    bg_rgb;	\/\/ background color RGB$/;"	m	struct:attr_entry::__anon196::__anon198
bgcolor	gui.h	/^    GdkColor	*bgcolor;	    \/\/ GDK-styled background color$/;"	m	struct:Gui
bgcolor	gui.h	/^    GdkRGBA	*bgcolor;	    \/\/ GDK-styled background color$/;"	m	struct:Gui
bh_bnum	structs.h	503;"	d
bh_curr	structs.h	/^    buffblock_T	*bh_curr;	\/\/ buffblock for appending$/;"	m	struct:buffheader
bh_data	structs.h	/^    char_u	*bh_data;	    \/\/ pointer to memory (for used block)$/;"	m	struct:block_hdr
bh_first	structs.h	/^    buffblock_T	bh_first;	\/\/ first (dummy) block of list$/;"	m	struct:buffheader
bh_flags	structs.h	/^    char	bh_flags;	    \/\/ BH_DIRTY or BH_LOCKED$/;"	m	struct:block_hdr
bh_hashitem	structs.h	/^    mf_hashitem_T bh_hashitem;      \/\/ header for hash table and key$/;"	m	struct:block_hdr
bh_index	structs.h	/^    int		bh_index;	\/\/ index for reading$/;"	m	struct:buffheader
bh_next	structs.h	/^    bhdr_T	*bh_next;	    \/\/ next block_hdr in free or used list$/;"	m	struct:block_hdr
bh_page_count	structs.h	/^    int		bh_page_count;	    \/\/ number of pages in this block$/;"	m	struct:block_hdr
bh_prev	structs.h	/^    bhdr_T	*bh_prev;	    \/\/ previous block_hdr in used list$/;"	m	struct:block_hdr
bh_space	structs.h	/^    int		bh_space;	\/\/ space in bh_curr for appending$/;"	m	struct:buffheader
bhdr_T	structs.h	/^typedef struct block_hdr    bhdr_T;$/;"	t	typeref:struct:block_hdr
bi_avail	undo.c	/^    size_t	bi_avail;   \/\/ bytes available in bi_buffer$/;"	m	struct:__anon122	file:
bi_buf	undo.c	/^    buf_T	*bi_buf;$/;"	m	struct:__anon122	file:
bi_buffer	undo.c	/^    char_u	*bi_buffer; \/\/ CRYPT_BUF_SIZE, NULL when not buffering$/;"	m	struct:__anon122	file:
bi_fp	undo.c	/^    FILE	*bi_fp;$/;"	m	struct:__anon122	file:
bi_state	undo.c	/^    cryptstate_T *bi_state;$/;"	m	struct:__anon122	file:
bi_used	undo.c	/^    size_t	bi_used;    \/\/ bytes written to\/read from bi_buffer$/;"	m	struct:__anon122	file:
bin_window	gui_gtk_f.h	/^    GdkWindow *bin_window;$/;"	m	struct:_GtkForm
bind_textdomain_codeset	gui_gtk.c	64;"	d	file:
bind_textdomain_codeset	gui_gtk_x11.c	48;"	d	file:
bind_textdomain_codeset	vim.h	540;"	d
bind_textdomain_codeset	vim.h	565;"	d
bind_textdomain_codeset	vim.h	567;"	d
bindtextdomain	gui_gtk.c	61;"	d	file:
bindtextdomain	gui_gtk_x11.c	45;"	d	file:
bindtextdomain	vim.h	539;"	d
bindtextdomain	vim.h	561;"	d
bindtextdomain	vim.h	563;"	d
bkc_flags	option.h	/^EXTERN unsigned	bkc_flags;	\/\/ flags from 'backupcopy'$/;"	v
bl_maxval	regexp_bt.c	/^static long	bl_maxval;$/;"	v	file:
bl_minval	regexp_bt.c	/^static long	bl_minval;$/;"	v	file:
blank_pointer	gui.h	/^    Cursor	blank_pointer;	    \/\/ Blank pointer$/;"	m	struct:Gui
blank_pointer	gui.h	/^    GdkCursor	*blank_pointer;	    \/\/ Blank pointer$/;"	m	struct:Gui
blank_xpm	gui_xmebw.c	/^static char * blank_xpm[] =$/;"	v	file:
blink_cb	gui_gtk_x11.c	/^blink_cb(gpointer data UNUSED)$/;"	f	file:
blink_mode	gui_gtk_x11.c	/^static gboolean blink_mode = TRUE;$/;"	v	file:
blink_offtime	gui_gtk_x11.c	/^static long_u blink_offtime = 250;$/;"	v	file:
blink_offtime	gui_photon.c	/^static long_u	blink_offtime	= 250;$/;"	v	file:
blink_offtime	gui_w32.c	/^static long_u		blink_offtime = 250;$/;"	v	file:
blink_offtime	gui_x11.c	/^static long_u		blink_offtime = 250;$/;"	v	file:
blink_ontime	gui_gtk_x11.c	/^static long_u blink_ontime = 400;$/;"	v	file:
blink_ontime	gui_photon.c	/^static long_u	blink_ontime	= 400;$/;"	v	file:
blink_ontime	gui_w32.c	/^static long_u		blink_ontime = 400;$/;"	v	file:
blink_ontime	gui_x11.c	/^static long_u		blink_ontime = 400;$/;"	v	file:
blink_state	gui_gtk_x11.c	/^static int blink_state = BLINK_NONE;$/;"	v	file:
blink_state	gui_photon.c	/^} blink_state = BLINK_NONE;$/;"	v	typeref:enum:__anon44	file:
blink_state	gui_w32.c	/^static int		blink_state = BLINK_NONE;$/;"	v	file:
blink_state	gui_x11.c	/^static int		blink_state = BLINK_NONE;$/;"	v	file:
blink_state_is_inverted	term.c	/^blink_state_is_inverted()$/;"	f
blink_timer	gui_gtk_x11.c	/^static guint blink_timer = 0;$/;"	v	file:
blink_timer	gui_w32.c	/^static UINT		blink_timer = 0;$/;"	v	file:
blink_timer	gui_x11.c	/^static XtIntervalId	blink_timer = (XtIntervalId)0;$/;"	v	file:
blink_waittime	gui_gtk_x11.c	/^static long_u blink_waittime = 700;$/;"	v	file:
blink_waittime	gui_photon.c	/^static long_u	blink_waittime	= 700;$/;"	v	file:
blink_waittime	gui_w32.c	/^static long_u		blink_waittime = 700;$/;"	v	file:
blink_waittime	gui_x11.c	/^static long_u		blink_waittime = 700;$/;"	v	file:
blinkoff	structs.h	/^    long	blinkoff;	\/\/ blinking, off time$/;"	m	struct:cursor_entry
blinkon	structs.h	/^    long	blinkon;	\/\/ blinking, on time$/;"	m	struct:cursor_entry
blinkwait	structs.h	/^    long	blinkwait;	\/\/ blinking, wait time before blinking starts$/;"	m	struct:cursor_entry
blob	vim9.h	/^	blob_T		    *blob;$/;"	m	union:__anon276::__anon277
blob2string	blob.c	/^blob2string(blob_T *blob, char_u **tofree, char_u *numbuf)$/;"	f
blob_T	structs.h	/^typedef struct blobvar_S blob_T;$/;"	t	typeref:struct:blobvar_S
blob_alloc	blob.c	/^blob_alloc(void)$/;"	f
blob_copy	blob.c	/^blob_copy(blob_T *from, typval_T *to)$/;"	f
blob_equal	blob.c	/^blob_equal($/;"	f
blob_free	blob.c	/^blob_free(blob_T *b)$/;"	f
blob_get	blob.c	/^blob_get(blob_T *b, int idx)$/;"	f
blob_len	blob.c	/^blob_len(blob_T *b)$/;"	f
blob_remove	blob.c	/^blob_remove(typval_T *argvars, typval_T *rettv)$/;"	f
blob_set	blob.c	/^blob_set(blob_T *b, int idx, char_u c)$/;"	f
blob_unref	blob.c	/^blob_unref(blob_T *b)$/;"	f
blobvar_S	structs.h	/^struct blobvar_S$/;"	s
block0	memline.c	/^struct block0$/;"	s	file:
block8	blowfish.c	/^} block8;$/;"	t	typeref:union:__anon1	file:
block_autocmds	autocmd.c	/^block_autocmds(void)$/;"	f
block_def	structs.h	/^struct block_def$/;"	s
block_hdr	structs.h	/^struct block_hdr$/;"	s
block_insert	ops.c	/^block_insert($/;"	f	file:
block_mode	structs.h	/^    int		block_mode;	\/\/ current operator is Visual block mode$/;"	m	struct:oparg_S
block_prep	ops.c	/^block_prep($/;"	f
block_redo	getchar.c	/^static int	block_redo = FALSE;$/;"	v	file:
block_signals	os_unix.c	/^block_signals(sigset_t *set)$/;"	f	file:
blocked_by_popup	screen.c	/^blocked_by_popup(int row, int col)$/;"	f	file:
blocknr_T	structs.h	/^typedef long		    blocknr_T;$/;"	t
blowfish_self_test	blowfish.c	/^blowfish_self_test(void)$/;"	f
bo_flags	option.h	/^EXTERN unsigned	bo_flags;$/;"	v
bold	structs.h	/^    int		bold;$/;"	m	struct:__anon246
bold_font	gui.h	/^    GuiFont	bold_font;	    \/\/ Bold font$/;"	m	struct:Gui
boldface	os_mswin.c	/^static const int	boldface[2] = {FW_REGULAR, FW_BOLD};$/;"	v	file:
boldital_font	gui.h	/^    GuiFont	boldital_font;	    \/\/ Bold-Italic font$/;"	m	struct:Gui
bomb_size	mbyte.c	/^bomb_size(void)$/;"	f
bool	vim.h	2423;"	d
border_offset	gui.h	/^    int		border_offset;	    \/\/ Total pixel offset for all borders$/;"	m	struct:Gui
border_width	gui.h	/^    int		border_width;	    \/\/ Width of our border around text area$/;"	m	struct:Gui
botRight	gui_mac.c	124;"	d	file:
bot_shadow_GC	gui_at_sb.h	/^    GC		bot_shadow_GC;$/;"	m	struct:__anon143
bot_shadow_contrast	gui_at_sb.h	/^    int		bot_shadow_contrast;$/;"	m	struct:__anon143
bot_shadow_pixel	gui_at_sb.h	/^    Pixel	bot_shadow_pixel;$/;"	m	struct:__anon143
bot_top_msg	globals.h	/^EXTERN char bot_top_msg[] INIT(= N_("search hit BOTTOM, continuing at TOP"));$/;"	v
botline_forw	move.c	/^botline_forw(lineoff_T *lp)$/;"	f	file:
botline_topline	move.c	/^botline_topline(lineoff_T *lp)$/;"	f	file:
botlnum	structs.h	/^    linenr_T	botlnum;		\/\/ bottom buffer line$/;"	m	struct:posmatch
bottom_sbar	gui.h	/^    scrollbar_T bottom_sbar;	    \/\/ Bottom scrollbar$/;"	m	struct:Gui
bottommsg	tag.c	/^static char_u *bottommsg = (char_u *)N_("E555: at bottom of tag stack");$/;"	v	file:
box	gui_mac.c	/^    Rect    box;$/;"	m	struct:__anon40	file:
bp_pos	regexp_bt.c	/^    regsave_T	bp_pos;		\/\/ last input position$/;"	m	struct:backpos_S	file:
bp_scan	regexp_bt.c	/^    char_u	*bp_scan;	\/\/ "scan" where BACK was encountered$/;"	m	struct:backpos_S	file:
br_buf	structs.h	/^    buf_T   *br_buf;$/;"	m	struct:__anon181
br_buf_free_count	structs.h	/^    int	    br_buf_free_count;$/;"	m	struct:__anon181
br_fnum	structs.h	/^    int	    br_fnum;$/;"	m	struct:__anon181
brace_count	regexp_bt.c	/^static int	brace_count[10]; \/\/ Current counts for complex brace repeats$/;"	v	file:
brace_max	regexp_bt.c	/^static long	brace_max[10];	\/\/ Maximums for complex brace repeats$/;"	v	file:
brace_min	regexp_bt.c	/^static long	brace_min[10];	\/\/ Minimums for complex brace repeats$/;"	v	file:
bracketed_paste	edit.c	/^bracketed_paste(paste_mode_T mode, int drop, garray_T *gap)$/;"	f
breakat_flags	globals.h	/^EXTERN char	breakat_flags[256];	\/\/ which characters are in 'breakat'$/;"	v
breakcheck_count	misc1.c	/^static int	breakcheck_count = 0;$/;"	v	file:
breakpoint	scriptfile.c	/^    linenr_T	breakpoint;	\/\/ next line with breakpoint or zero$/;"	m	struct:source_cookie	file:
breakpoint	structs.h	/^    linenr_T	breakpoint;	\/\/ next line with breakpoint or zero$/;"	m	struct:funccall_S
briopt_check	indent.c	/^briopt_check(win_T *wp)$/;"	f
browse	structs.h	/^    int		browse;			\/\/ TRUE to invoke file dialog$/;"	m	struct:__anon191
browse_cancel_cb	gui_gtk.c	/^browse_cancel_cb(GtkWidget *widget UNUSED, gpointer cbdata)$/;"	f	file:
browse_destroy_cb	gui_gtk.c	/^browse_destroy_cb(GtkWidget *widget UNUSED)$/;"	f	file:
browse_fname	gui.h	/^    char_u	*browse_fname;	    \/\/ file name from filedlg$/;"	m	struct:Gui
browse_fname	gui_motif.c	/^static char *browse_fname = NULL;$/;"	v	file:
browse_ok_cb	gui_gtk.c	/^browse_ok_cb(GtkWidget *widget UNUSED, gpointer cbdata)$/;"	f	file:
browse_save_fname	ex_cmds2.c	/^browse_save_fname(buf_T *buf)$/;"	f
bs_cchar	structs.h	/^    int		    bs_cchar;	 \/\/ stores si_cchar$/;"	m	struct:buf_state
bs_extmatch	structs.h	/^    reg_extmatch_T *bs_extmatch; \/\/ external matches from start pattern$/;"	m	struct:buf_state
bs_flags	structs.h	/^    int		    bs_flags;	 \/\/ flags for pattern$/;"	m	struct:buf_state
bs_idx	structs.h	/^    int		    bs_idx;	 \/\/ index of pattern$/;"	m	struct:buf_state
bs_seqnr	structs.h	/^    int		    bs_seqnr;	 \/\/ stores si_seqnr$/;"	m	struct:buf_state
bt_dontwrite	buffer.c	/^bt_dontwrite(buf_T *buf)$/;"	f
bt_dontwrite_msg	buffer.c	/^bt_dontwrite_msg(buf_T *buf)$/;"	f
bt_entry	term.c	/^    int		bt_entry;$/;"	m	struct:builtin_term	file:
bt_help	buffer.c	/^bt_help(buf_T *buf)$/;"	f
bt_nofile	buffer.c	/^bt_nofile(buf_T *buf)$/;"	f
bt_nofilename	buffer.c	/^bt_nofilename(buf_T *buf)$/;"	f
bt_normal	buffer.c	/^bt_normal(buf_T *buf)$/;"	f
bt_popup	buffer.c	/^bt_popup(buf_T *buf)$/;"	f
bt_prompt	buffer.c	/^bt_prompt(buf_T *buf)$/;"	f
bt_quickfix	buffer.c	/^bt_quickfix(buf_T *buf)$/;"	f
bt_regcomp	regexp_bt.c	/^bt_regcomp(char_u *expr, int re_flags)$/;"	f	file:
bt_regengine	regexp.c	/^static regengine_T bt_regengine =$/;"	v	file:
bt_regengine	regexp.c	/^static regengine_T bt_regengine;$/;"	v	file:
bt_regexec_both	regexp_bt.c	/^bt_regexec_both($/;"	f	file:
bt_regexec_multi	regexp_bt.c	/^bt_regexec_multi($/;"	f	file:
bt_regexec_nl	regexp_bt.c	/^bt_regexec_nl($/;"	f	file:
bt_regfree	regexp_bt.c	/^bt_regfree(regprog_T *prog)$/;"	f	file:
bt_regprog_T	regexp.h	/^} bt_regprog_T;$/;"	t	typeref:struct:__anon173
bt_string	term.c	/^    char	*bt_string;$/;"	m	struct:builtin_term	file:
bt_terminal	buffer.c	/^bt_terminal(buf_T *buf)$/;"	f
btype_T	viminfo.c	/^} btype_T;$/;"	t	typeref:enum:__anon136	file:
buf	buffer.c	/^    buf_T   *buf;$/;"	m	struct:__anon4	file:
buf	if_mzsch.c	/^    buf_T	    *buf;$/;"	m	struct:__anon52	file:
buf	if_py_both.h	/^    BufferObject *buf;$/;"	m	struct:__anon166
buf	if_py_both.h	/^    buf_T *buf;$/;"	m	struct:__anon165
buf	quickfix.c	/^    buf_T	*buf;$/;"	m	struct:__anon89	file:
buf	structs.h	/^    buf_T	*buf;	    \/\/ the buffer to search for a match$/;"	m	struct:__anon240
buf	term.c	/^    char buf[KSSIZE];   \/\/ save buffer in non-vtp mode$/;"	m	struct:ks_tbl_s	file:
bufIsChanged	undo.c	/^bufIsChanged(buf_T *buf)$/;"	f
bufIsChangedNotTerm	undo.c	/^bufIsChangedNotTerm(buf_T *buf)$/;"	f
buf_T	os_unixx.h	51;"	d
buf_T	os_unixx.h	55;"	d
buf_T	pty.c	60;"	d	file:
buf_T	pty.c	64;"	d	file:
buf_T	structs.h	/^typedef struct file_buffer	buf_T;		\/\/ forward declaration$/;"	t	typeref:struct:file_buffer
buf_addsign	sign.c	/^buf_addsign($/;"	f	file:
buf_change_sign_type	sign.c	/^buf_change_sign_type($/;"	f	file:
buf_check_timestamp	fileio.c	/^buf_check_timestamp($/;"	f
buf_clear_file	buffer.c	/^buf_clear_file(buf_T *buf)$/;"	f
buf_compare	viminfo.c	/^buf_compare(const void *s1, const void *s2)$/;"	f
buf_contents_changed	buffer.c	/^buf_contents_changed(buf_T *buf)$/;"	f
buf_copy_options	option.c	/^buf_copy_options(buf_T *buf, int flags)$/;"	f
buf_delete_signs	sign.c	/^buf_delete_signs(buf_T *buf, char_u *group)$/;"	f
buf_delsign	sign.c	/^buf_delsign($/;"	f
buf_findsign	sign.c	/^buf_findsign($/;"	f
buf_findsign_id	sign.c	/^buf_findsign_id($/;"	f
buf_findsigntype_id	sign.c	/^buf_findsigntype_id($/;"	f
buf_free_count	buffer.c	/^static int	buf_free_count = 0;$/;"	v	file:
buf_freeall	buffer.c	/^buf_freeall(buf_T *buf, int flags)$/;"	f
buf_get_signattrs	sign.c	/^buf_get_signattrs(win_T *wp, linenr_T lnum, sign_attrs_T *sattr)$/;"	f
buf_getsign_at_line	sign.c	/^buf_getsign_at_line($/;"	f	file:
buf_hashtab	buffer.c	/^static hashtab_T buf_hashtab;$/;"	v	file:
buf_hashtab_add	buffer.c	/^buf_hashtab_add(buf_T *buf)$/;"	f	file:
buf_hashtab_remove	buffer.c	/^buf_hashtab_remove(buf_T *buf)$/;"	f	file:
buf_hide	buffer.c	/^buf_hide(buf_T *buf)$/;"	f
buf_init_chartab	charset.c	/^buf_init_chartab($/;"	f
buf_jump_open_tab	window.c	/^buf_jump_open_tab(buf_T *buf)$/;"	f
buf_jump_open_win	window.c	/^buf_jump_open_win(buf_T *buf)$/;"	f
buf_list	netbeans.c	/^static nbbuf_T *buf_list = NULL;$/;"	v	file:
buf_list_size	netbeans.c	/^static int buf_list_size = 0;	\/\/ size of buf_list$/;"	v	file:
buf_list_used	netbeans.c	/^static int buf_list_used = 0;	\/\/ nr of entries in buf_list actually in use$/;"	v	file:
buf_modname	fileio.c	/^buf_modname($/;"	f
buf_name_changed	buffer.c	/^buf_name_changed(buf_T *buf)$/;"	f
buf_opt_idx	option.c	/^static int buf_opt_idx[BV_COUNT];$/;"	v	file:
buf_reload	fileio.c	/^buf_reload(buf_T *buf, int orig_mode)$/;"	f
buf_reuse	buffer.c	/^static garray_T buf_reuse = GA_EMPTY;	\/\/ file numbers to recycle$/;"	v	file:
buf_same_ino	buffer.c	/^buf_same_ino($/;"	f	file:
buf_set_name	buffer.c	/^buf_set_name(int fnum, char_u *name)$/;"	f
buf_setino	buffer.c	/^buf_setino(buf_T *buf)$/;"	f
buf_signcount	sign.c	/^buf_signcount(buf_T *buf, linenr_T lnum)$/;"	f
buf_spname	buffer.c	/^buf_spname(buf_T *buf)$/;"	f
buf_state	structs.h	/^typedef struct buf_state$/;"	s
buf_store_time	fileio.c	/^buf_store_time(buf_T *buf, stat_T *st, char_u *fname UNUSED)$/;"	f
buf_valid	buffer.c	/^buf_valid(buf_T *buf)$/;"	f
buf_win_common	evalbuffer.c	/^buf_win_common(typval_T *argvars, typval_T *rettv, int get_nr)$/;"	f	file:
buf_write	bufwrite.c	/^buf_write($/;"	f
buf_write_all	ex_cmds2.c	/^buf_write_all(buf_T *buf, int forceit)$/;"	f
buf_write_bytes	bufwrite.c	/^buf_write_bytes(struct bw_info *ip)$/;"	f	file:
bufadrs	os_vms.c	/^    char	*bufadrs;$/;"	m	struct:__anon79	file:
buffblock	structs.h	/^struct buffblock$/;"	s
buffblock_T	structs.h	/^typedef struct buffblock buffblock_T;$/;"	t	typeref:struct:buffblock
buffer	hardcopy.c	/^    char_u  buffer[PRT_FILE_BUFFER_LEN];$/;"	m	struct:prt_resfile_buffer_S	file:
buffer	structs.h	/^  char_u   buffer[64];$/;"	m	struct:__anon250
buffer_append	if_ruby.c	/^buffer_append(VALUE self, VALUE num, VALUE str)$/;"	f	file:
buffer_aref	if_ruby.c	/^buffer_aref(VALUE self, VALUE num)$/;"	f	file:
buffer_aset	if_ruby.c	/^buffer_aset(VALUE self, VALUE num, VALUE str)$/;"	f	file:
buffer_count	if_ruby.c	/^buffer_count(VALUE self)$/;"	f	file:
buffer_delete	if_ruby.c	/^buffer_delete(VALUE self, VALUE num)$/;"	f	file:
buffer_dsize	if_ruby.c	/^buffer_dsize(const void *buf UNUSED)$/;"	f	file:
buffer_ensure_loaded	buffer.c	/^buffer_ensure_loaded(buf_T *buf)$/;"	f
buffer_fixup_proc	if_mzsch.c	/^static int buffer_fixup_proc(void *obj)$/;"	f	file:
buffer_mark_proc	if_mzsch.c	/^static int buffer_mark_proc(void *obj)$/;"	f	file:
buffer_name	if_ruby.c	/^buffer_name(VALUE self)$/;"	f	file:
buffer_new	if_mzsch.c	/^buffer_new(buf_T *buf)$/;"	f	file:
buffer_new	if_ruby.c	/^buffer_new(buf_T *buf)$/;"	f	file:
buffer_number	if_ruby.c	/^buffer_number(VALUE self)$/;"	f	file:
buffer_s_aref	if_ruby.c	/^buffer_s_aref(VALUE self UNUSED, VALUE num)$/;"	f	file:
buffer_s_count	if_ruby.c	/^buffer_s_count(void)$/;"	f	file:
buffer_s_current	if_ruby.c	/^buffer_s_current(void)$/;"	f	file:
buffer_size_proc	if_mzsch.c	/^static int buffer_size_proc(void *obj UNUSED)$/;"	f	file:
buffer_type	if_ruby.c	/^static const rb_data_type_t buffer_type = {$/;"	v	file:
buffercmd	if_tcl.c	/^buffercmd($/;"	f	file:
buffheader	structs.h	/^struct buffheader$/;"	s
buffheader_T	structs.h	/^typedef struct buffheader buffheader_T;$/;"	t	typeref:struct:buffheader
bufinfo_T	undo.c	/^} bufinfo_T;$/;"	t	typeref:struct:__anon122	file:
buflen	os_vms.c	/^    short	buflen;$/;"	m	struct:__anon79	file:
buflist_add	buffer.c	/^buflist_add(char_u *fname, int flags)$/;"	f
buflist_altfpos	buffer.c	/^buflist_altfpos(win_T *win)$/;"	f
buflist_find_by_name	evalbuffer.c	/^buflist_find_by_name(char_u *name, int curtab_only)$/;"	f
buflist_findfpos	buffer.c	/^buflist_findfpos(buf_T *buf)$/;"	f
buflist_findlnum	buffer.c	/^buflist_findlnum(buf_T *buf)$/;"	f
buflist_findname	buffer.c	/^buflist_findname(char_u *ffname)$/;"	f
buflist_findname_exp	buffer.c	/^buflist_findname_exp(char_u *fname)$/;"	f
buflist_findname_stat	buffer.c	/^buflist_findname_stat($/;"	f	file:
buflist_findnr	buffer.c	/^buflist_findnr(int nr)$/;"	f
buflist_findpat	buffer.c	/^buflist_findpat($/;"	f
buflist_getfile	buffer.c	/^buflist_getfile($/;"	f
buflist_getfpos	buffer.c	/^buflist_getfpos(void)$/;"	f	file:
buflist_list	buffer.c	/^buflist_list(exarg_T *eap)$/;"	f
buflist_match	buffer.c	/^buflist_match($/;"	f	file:
buflist_name_nr	buffer.c	/^buflist_name_nr($/;"	f
buflist_new	buffer.c	/^buflist_new($/;"	f
buflist_nr2name	buffer.c	/^buflist_nr2name($/;"	f
buflist_setfpos	buffer.c	/^buflist_setfpos($/;"	f
buflist_slash_adjust	buffer.c	/^buflist_slash_adjust(void)$/;"	f
buflnum	quickfix.c	/^    linenr_T	buflnum;$/;"	m	struct:__anon89	file:
buflocal_nr	autocmd.c	/^    int		    buflocal_nr;	\/\/ !=0 for buffer-local AutoPat$/;"	m	struct:AutoPat	file:
bufmatch_T	buffer.c	/^} bufmatch_T;$/;"	t	typeref:struct:__anon4	file:
bufp	netbeans.c	/^    buf_T		*bufp;$/;"	m	struct:nbbuf_struct	file:
bufref_T	structs.h	/^} bufref_T;$/;"	t	typeref:struct:__anon181
bufref_valid	buffer.c	/^bufref_valid(bufref_T *bufref)$/;"	f
bufselfcmd	if_tcl.c	/^bufselfcmd($/;"	f	file:
bufstate_T	structs.h	/^} bufstate_T;$/;"	t	typeref:struct:buf_state
build_argv_from_list	misc2.c	/^build_argv_from_list(list_T *l, char ***argv, int *argc)$/;"	f
build_argv_from_string	misc2.c	/^build_argv_from_string(char_u *cmd, char ***argv, int *argc)$/;"	f
build_drop_cmd	main.c	/^build_drop_cmd($/;"	f	file:
build_link_name	dosinst.c	/^build_link_name($/;"	f
build_shortcut	dosinst.c	/^build_shortcut($/;"	f	file:
build_stl_str_hl	buffer.c	/^build_stl_str_hl($/;"	f
built_in_pixmaps	gui_x11_pm.h	/^static char **(built_in_pixmaps[]) =$/;"	v
builtin_function	userfunc.c	/^builtin_function(char_u *name, int len)$/;"	f
builtin_term	term.c	/^struct builtin_term$/;"	s	file:
builtin_termcaps	term.c	/^static struct builtin_term builtin_termcaps[] =$/;"	v	typeref:struct:builtin_term	file:
bump_color	gui_xmebw.c	/^bump_color(unsigned short value)$/;"	f	file:
butproc	gui_athena.c	/^butproc($/;"	f	file:
butproc	gui_motif.c	/^butproc($/;"	f	file:
button	mouse.c	/^    int	    button;		\/\/ Which mouse button is it?$/;"	m	struct:mousetable	file:
button	structs.h	/^    BPictureButton *button;$/;"	m	struct:VimMenu
button_equal	gui_gtk.c	/^button_equal(const char *a, const char *b)$/;"	f	file:
button_press_event	gui_gtk_x11.c	/^button_press_event(GtkWidget *widget,$/;"	f	file:
button_release_event	gui_gtk_x11.c	/^button_release_event(GtkWidget *widget UNUSED,$/;"	f	file:
bv_allocated	viminfo.c	/^    int		bv_allocated;	\/\/ bv_string was allocated$/;"	m	struct:__anon137	file:
bv_ga	structs.h	/^    garray_T	bv_ga;		\/\/ growarray with the data$/;"	m	struct:blobvar_S
bv_len	viminfo.c	/^    int		bv_len;		\/\/ length of bv_string$/;"	m	struct:__anon137	file:
bv_lock	structs.h	/^    char	bv_lock;	\/\/ zero, VAR_LOCKED, VAR_FIXED$/;"	m	struct:blobvar_S
bv_nr	viminfo.c	/^    long	bv_nr;$/;"	m	struct:__anon137	file:
bv_refcount	structs.h	/^    int		bv_refcount;	\/\/ reference count$/;"	m	struct:blobvar_S
bv_string	viminfo.c	/^    char_u	*bv_string;$/;"	m	struct:__anon137	file:
bv_tofree	viminfo.c	/^    char_u	*bv_tofree;	\/\/ free later when not NULL$/;"	m	struct:__anon137	file:
bv_type	viminfo.c	/^    btype_T	bv_type;$/;"	m	struct:__anon137	file:
bval_T	viminfo.c	/^} bval_T;$/;"	t	typeref:struct:__anon137	file:
bw_buf	bufwrite.c	/^    char_u	*bw_buf;	\/\/ buffer with data to be written$/;"	m	struct:bw_info	file:
bw_buffer	bufwrite.c	/^    buf_T	*bw_buffer;	\/\/ buffer being written$/;"	m	struct:bw_info	file:
bw_conv_buf	bufwrite.c	/^    char_u	*bw_conv_buf;	\/\/ buffer for writing converted chars$/;"	m	struct:bw_info	file:
bw_conv_buflen	bufwrite.c	/^    size_t	bw_conv_buflen; \/\/ size of bw_conv_buf$/;"	m	struct:bw_info	file:
bw_conv_error	bufwrite.c	/^    int		bw_conv_error;	\/\/ set for conversion error$/;"	m	struct:bw_info	file:
bw_conv_error_lnum	bufwrite.c	/^    linenr_T	bw_conv_error_lnum;  \/\/ first line with error or zero$/;"	m	struct:bw_info	file:
bw_fd	bufwrite.c	/^    int		bw_fd;		\/\/ file descriptor$/;"	m	struct:bw_info	file:
bw_first	bufwrite.c	/^    int		bw_first;	\/\/ first write call$/;"	m	struct:bw_info	file:
bw_flags	bufwrite.c	/^    int		bw_flags;	\/\/ FIO_ flags$/;"	m	struct:bw_info	file:
bw_iconv_fd	bufwrite.c	/^    iconv_t	bw_iconv_fd;	\/\/ descriptor for iconv() or -1$/;"	m	struct:bw_info	file:
bw_info	bufwrite.c	/^struct bw_info$/;"	s	file:
bw_len	bufwrite.c	/^    int		bw_len;		\/\/ length of data$/;"	m	struct:bw_info	file:
bw_rest	bufwrite.c	/^    char_u	bw_rest[CONV_RESTLEN]; \/\/ not converted bytes$/;"	m	struct:bw_info	file:
bw_restlen	bufwrite.c	/^    int		bw_restlen;	\/\/ nr of bytes in bw_rest[]$/;"	m	struct:bw_info	file:
bw_start_lnum	bufwrite.c	/^    linenr_T	bw_start_lnum;  \/\/ line number at start of buffer$/;"	m	struct:bw_info	file:
by_signal	gui.h	/^    gboolean	     by_signal;     \/\/ cause of draw operation$/;"	m	struct:Gui
byte2cells	charset.c	/^byte2cells(int b)$/;"	f
byte_in_str	spell.c	/^byte_in_str(char_u *str, int n)$/;"	f
byteidx	evalfunc.c	/^byteidx(typval_T *argvars, typval_T *rettv, int comp UNUSED)$/;"	f	file:
bytelen	popupmenu.c	/^    int		bytelen;$/;"	m	struct:__anon83	file:
bytes2offset	spellsuggest.c	/^bytes2offset(char_u **pp)$/;"	f	file:
bytes_printed	hardcopy.c	/^    long_u	bytes_printed;	    \/\/ bytes printed so far$/;"	m	struct:__anon47	file:
c	arabic.c	/^    unsigned c;$/;"	m	struct:achar	file:
c	iid_ole.c	/^    unsigned char  c[8];$/;"	m	struct:_IID	file:
c	regexp.c	/^    int a, b, c;$/;"	m	struct:__anon100	file:
c	regexp.h	/^    int			c;$/;"	m	struct:nfa_state
cBuffer	if_ruby.c	/^static VALUE cBuffer;$/;"	v	file:
cVimWindow	if_ruby.c	/^static VALUE cVimWindow;$/;"	v	file:
c_cedilla	regexp_nfa.c	733;"	d	file:
calc_hist_idx	cmdhist.c	/^calc_hist_idx(int histype, int num)$/;"	f	file:
call_PyObject_Free	if_python3.c	/^call_PyObject_Free(void *p)$/;"	f	file:
call_PyType_GenericAlloc	if_python3.c	/^call_PyType_GenericAlloc(PyTypeObject *type, Py_ssize_t nitems)$/;"	f	file:
call_PyType_GenericNew	if_python3.c	/^call_PyType_GenericNew(PyTypeObject *type, PyObject *args, PyObject *kwds)$/;"	f	file:
call_bfunc	vim9execute.c	/^call_bfunc(int func_idx, int argcount, ectx_T *ectx)$/;"	f	file:
call_by_name	vim9execute.c	/^call_by_name(char_u *name, int argcount, ectx_T *ectx, isn_T *iptr)$/;"	f	file:
call_callback	userfunc.c	/^call_callback($/;"	f
call_def_function	vim9execute.c	/^call_def_function($/;"	f
call_dfunc	vim9execute.c	/^call_dfunc(int cdf_idx, int argcount, ectx_T *ectx)$/;"	f	file:
call_eval_func	vim9execute.c	/^call_eval_func(char_u *name, int argcount, ectx_T *ectx, isn_T *iptr)$/;"	f	file:
call_func	userfunc.c	/^call_func($/;"	f
call_func_retlist	eval.c	/^call_func_retlist($/;"	f
call_func_retnr	eval.c	/^call_func_retnr($/;"	f
call_func_retstr	eval.c	/^call_func_retstr($/;"	f
call_func_rettv	eval.c	/^call_func_rettv($/;"	f	file:
call_imactivatefunc	mbyte.c	/^call_imactivatefunc(int active)$/;"	f	file:
call_imstatusfunc	mbyte.c	/^call_imstatusfunc(void)$/;"	f	file:
call_internal_func	evalfunc.c	/^call_internal_func($/;"	f
call_internal_func_by_idx	evalfunc.c	/^call_internal_func_by_idx($/;"	f
call_internal_method	evalfunc.c	/^call_internal_method($/;"	f
call_load_module	if_py_both.h	/^call_load_module(char *name, int len, PyObject *find_module_result)$/;"	f
call_partial	vim9execute.c	/^call_partial(typval_T *tv, int argcount, ectx_T *ectx)$/;"	f	file:
call_prepare	vim9execute.c	/^call_prepare(int argcount, typval_T *argvars, ectx_T *ectx)$/;"	f	file:
call_shell	misc2.c	/^call_shell(char_u *cmd, int opt)$/;"	f
call_ufunc	vim9execute.c	/^call_ufunc(ufunc_T *ufunc, int argcount, ectx_T *ectx, isn_T *iptr)$/;"	f	file:
call_update_screen	popupmenu.c	/^static int call_update_screen = FALSE;$/;"	v	file:
call_user_expand_func	cmdexpand.c	/^call_user_expand_func($/;"	f	file:
call_user_func	userfunc.c	/^call_user_func($/;"	f	file:
call_user_func_check	userfunc.c	/^call_user_func_check($/;"	f
call_vim_function	eval.c	/^call_vim_function($/;"	f
callable	if_py_both.h	/^    PyObject	*callable;$/;"	m	struct:__anon152
callback_T	structs.h	/^} callback_T;$/;"	t	typeref:struct:__anon203
callback_depth	userfunc.c	/^static int callback_depth = 0;$/;"	v	file:
callback_queue	sound.c	/^static soundcb_queue_T *callback_queue = NULL;$/;"	v	file:
called_emsg	globals.h	/^EXTERN int	called_emsg;		    \/\/ always incremented by emsg()$/;"	v
called_vim_beep	globals.h	/^EXTERN int	called_vim_beep;	    \/\/ set if vim_beep() is called$/;"	v
caller	structs.h	/^    funccall_T	*caller;	\/\/ calling function or NULL$/;"	m	struct:funccall_S
can_abandon	ex_cmds2.c	/^can_abandon(buf_T *buf, int forceit)$/;"	f
can_be_compound	spellsuggest.c	/^can_be_compound($/;"	f	file:
can_bs	option.c	/^can_bs($/;"	f
can_cindent	edit.c	/^static int	can_cindent;		\/\/ may do cindenting on this line$/;"	v	file:
can_clear	screen.c	/^can_clear(char_u *p)$/;"	f
can_compound	spell.c	/^can_compound(slang_T *slang, char_u *word, char_u *flags)$/;"	f
can_f_submatch	regexp.c	/^static int can_f_submatch = FALSE;	\/\/ TRUE when submatch() can be used$/;"	v	file:
can_free_funccal	userfunc.c	/^can_free_funccal(funccall_T *fc, int copyID)$/;"	f	file:
can_get_termresponse	term.c	/^can_get_termresponse()$/;"	f	file:
can_join	arabic.c	/^can_join(int c1, int c2)$/;"	f	file:
can_si	globals.h	/^EXTERN int	can_si INIT(= FALSE);$/;"	v
can_si_back	globals.h	/^EXTERN int	can_si_back INIT(= FALSE);$/;"	v
can_unload_buffer	buffer.c	/^can_unload_buffer(buf_T *buf)$/;"	f	file:
can_update_cursor	gui.c	/^static int can_update_cursor = TRUE; \/\/ can display the cursor$/;"	v	file:
can_use_beval	beval.c	/^can_use_beval(void)$/;"	f
can_write_buf_line	channel.c	/^can_write_buf_line(channel_T *channel)$/;"	f	file:
cancel	gui_motif.c	/^    Widget cancel;$/;"	m	struct:_SharedFindReplace	file:
cancel	gui_xmdlg.c	/^    Widget	cancel;$/;"	m	struct:_SharedFontSelData	file:
cancelBalloon	gui_beval.c	/^cancelBalloon(BalloonEval *beval)$/;"	f	file:
cancel_callback	gui_xmdlg.c	/^cancel_callback(Widget w UNUSED,$/;"	f	file:
canon	mbyte.c	/^{   char *name;		int canon;}$/;"	m	struct:__anon68	file:
cansplit	if_cscope.h	/^    int	    cansplit;		\/\/ if supports splitting window$/;"	m	struct:__anon147
captype	spell.c	/^captype($/;"	f
cat_func_name	userfunc.c	/^cat_func_name(char_u *buf, ufunc_T *fp)$/;"	f	file:
cat_prefix_varname	evalvars.c	/^cat_prefix_varname(int prefix, char_u *name)$/;"	f	file:
catch_exception	ex_eval.c	/^catch_exception(except_T *excp)$/;"	f
catch_int_signal	os_unix.c	/^catch_int_signal(void)$/;"	f	file:
catch_signals	os_unix.c	/^catch_signals($/;"	f	file:
caught	structs.h	/^    except_T		*caught;	\/\/ next exception on the caught stack$/;"	m	struct:vim_exception
caught_stack	ex_docmd.c	/^    except_T	*caught_stack;$/;"	m	struct:dbg_stuff	file:
caught_stack	globals.h	/^EXTERN except_T *caught_stack INIT(= NULL);$/;"	v
cause_abort	ex_eval.c	/^static int cause_abort = FALSE;$/;"	v	file:
cause_errthrow	ex_eval.c	/^cause_errthrow($/;"	f
cb	structs.h	/^    void	(*cb)(vimmenu_T *); \/\/ Call-back function$/;"	m	struct:VimMenu
cbSize	gui_w32.c	/^    DWORD cbSize;$/;"	m	struct:_DllVersionInfo	file:
cbSize	gui_w32.c	/^    UINT       cbSize;$/;"	m	struct:tagTOOLINFOA_NEW	file:
cbSize	gui_w32.c	/^    UINT       cbSize;$/;"	m	struct:tagTOOLINFOW_NEW	file:
cbSize	os_win32.c	/^    ULONG cbSize;$/;"	m	struct:_DYN_CONSOLE_SCREEN_BUFFER_INFOEX	file:
cb_free_name	structs.h	/^    int		cb_free_name;	    \/\/ cb_name was allocated$/;"	m	struct:__anon203
cb_name	structs.h	/^    char_u	*cb_name;$/;"	m	struct:__anon203
cb_partial	structs.h	/^    partial_T	*cb_partial;$/;"	m	struct:__anon203
cbf_argcount	vim9.h	/^    int	    cbf_argcount;   \/\/ number of arguments on top of stack$/;"	m	struct:__anon261
cbf_idx	vim9.h	/^    int	    cbf_idx;	    \/\/ index in "global_functions"$/;"	m	struct:__anon261
cbfunc_T	vim9.h	/^} cbfunc_T;$/;"	t	typeref:struct:__anon261
cbq_S	structs.h	/^struct cbq_S$/;"	s
cbq_T	structs.h	/^typedef struct cbq_S cbq_T;$/;"	t	typeref:struct:cbq_S
cbuffer_get_auname	quickfix.c	/^cbuffer_get_auname(cmdidx_T cmdidx)$/;"	f	file:
cbuffer_process_args	quickfix.c	/^cbuffer_process_args($/;"	f	file:
ccheck_abbr	ex_getln.c	/^ccheck_abbr(int c)$/;"	f	file:
ccline	ex_getln.c	/^static cmdline_info_T ccline;$/;"	v	file:
cctx_S	vim9compile.c	/^struct cctx_S {$/;"	s	file:
cctx_T	structs.h	/^typedef struct cctx_S cctx_T;$/;"	t	typeref:struct:cctx_S
cdf_argcount	vim9.h	/^    int	    cdf_argcount;   \/\/ number of arguments on top of stack$/;"	m	struct:__anon262
cdf_idx	vim9.h	/^    int	    cdf_idx;	    \/\/ index in "def_functions" for ISN_DCALL$/;"	m	struct:__anon262
cdfunc_T	vim9.h	/^} cdfunc_T;$/;"	t	typeref:struct:__anon262
cdscope_T	structs.h	/^} cdscope_T;$/;"	t	typeref:enum:__anon255
cedit_key	ex_getln.c	/^static int	cedit_key INIT(= -1);	\/\/ key value of 'cedit' option$/;"	v	file:
cell2attr	terminal.c	/^cell2attr($/;"	f	file:
cell2cellattr	terminal.c	/^cell2cellattr(const VTermScreenCell *cell, cellattr_T *attr)$/;"	f	file:
cellattr_T	terminal.c	/^} cellattr_T;$/;"	t	typeref:struct:__anon121	file:
cells	popupmenu.c	/^    int		cells;$/;"	m	struct:__anon83	file:
cexpr_get_auname	quickfix.c	/^cexpr_get_auname(cmdidx_T cmdidx)$/;"	f	file:
cfb_buffer	blowfish.c	/^    char_u	cfb_buffer[BF_MAX_CFB_LEN]; \/\/ up to 64 bytes used$/;"	m	struct:__anon2	file:
cfb_len	blowfish.c	/^    int		cfb_len;	    \/\/ size of cfb_buffer actually used$/;"	m	struct:__anon2	file:
cfile_get_auname	quickfix.c	/^cfile_get_auname(cmdidx_T cmdidx)$/;"	f	file:
chAlone	os_win32.c	/^    int	    chAlone;$/;"	m	struct:__anon82	file:
chAlt	os_win32.c	/^    int	    chAlt;$/;"	m	struct:__anon82	file:
chCtrl	os_win32.c	/^    int	    chCtrl;$/;"	m	struct:__anon82	file:
chShift	os_win32.c	/^    int	    chShift;$/;"	m	struct:__anon82	file:
ch_anonymous_pipe	structs.h	/^    int		ch_anonymous_pipe;  \/\/ ConPTY$/;"	m	struct:channel_S
ch_block_ids	structs.h	/^    garray_T	ch_block_ids;	\/\/ list of IDs that channel_read_json_block()$/;"	m	struct:__anon232
ch_block_write	structs.h	/^    int		ch_block_write;	\/\/ for testing: 0 when not used, -1 when write$/;"	m	struct:__anon232
ch_buf_append	structs.h	/^    int		ch_buf_append;	\/\/ write appended lines instead top-bot$/;"	m	struct:__anon232
ch_buf_bot	structs.h	/^    linenr_T	ch_buf_bot;	\/\/ last line to send$/;"	m	struct:__anon232
ch_buf_top	structs.h	/^    linenr_T	ch_buf_top;	\/\/ next line to send$/;"	m	struct:__anon232
ch_bufref	structs.h	/^    bufref_T	ch_bufref;	\/\/ buffer to read from or write to$/;"	m	struct:__anon232
ch_callback	structs.h	/^    callback_T	ch_callback;	\/\/ call when a msg is not handled$/;"	m	struct:__anon232
ch_callback	structs.h	/^    callback_T	ch_callback;	\/\/ call when any msg is not handled$/;"	m	struct:channel_S
ch_cb_head	structs.h	/^    cbq_T	ch_cb_head;	\/\/ dummy node for per-request callbacks$/;"	m	struct:__anon232
ch_close_cb	structs.h	/^    callback_T	ch_close_cb;	\/\/ call when channel is closed$/;"	m	struct:channel_S
ch_close_part	channel.c	/^ch_close_part(channel_T *channel, ch_part_T part)$/;"	f	file:
ch_close_part_on_error	channel.c	/^ch_close_part_on_error($/;"	f	file:
ch_copyID	structs.h	/^    int		ch_copyID;$/;"	m	struct:channel_S
ch_deadline	structs.h	/^    DWORD	ch_deadline;$/;"	m	struct:__anon232
ch_deadline	structs.h	/^    struct timeval ch_deadline;$/;"	m	struct:__anon232	typeref:struct:__anon232::timeval
ch_drop_never	structs.h	/^    int		ch_drop_never;$/;"	m	struct:channel_S
ch_error	channel.c	/^ch_error(channel_T *ch, const char *fmt, ...)$/;"	f	file:
ch_error	structs.h	/^    int		ch_error;	\/\/ When TRUE an error was reported.  Avoids$/;"	m	struct:channel_S
ch_expr_common	channel.c	/^ch_expr_common(typval_T *argvars, typval_T *rettv, int eval)$/;"	f	file:
ch_fd	structs.h	/^    sock_T	ch_fd;	    \/\/ socket\/stdin\/stdout\/stderr, -1 if not used$/;"	m	struct:__anon232
ch_head	structs.h	/^    readq_T	ch_head;	\/\/ header for circular raw read queue$/;"	m	struct:__anon232
ch_hostname	structs.h	/^    char	*ch_hostname;	\/\/ only for socket, allocated$/;"	m	struct:channel_S
ch_id	structs.h	/^    int		ch_id;		\/\/ ID of the channel$/;"	m	struct:channel_S
ch_inputHandler	structs.h	/^    XtInputId	ch_inputHandler; \/\/ Cookie for input$/;"	m	struct:__anon232
ch_inputHandler	structs.h	/^    gint	ch_inputHandler; \/\/ Cookie for input$/;"	m	struct:__anon232
ch_io	structs.h	/^    job_io_T	ch_io;$/;"	m	struct:__anon232
ch_job	structs.h	/^    job_T	*ch_job;	\/\/ Job that uses this channel; this does not$/;"	m	struct:channel_S
ch_job_killed	structs.h	/^    int		ch_job_killed;	\/\/ TRUE when there was a job and it was killed$/;"	m	struct:channel_S
ch_json_head	structs.h	/^    jsonq_T	ch_json_head;	\/\/ header for circular json read queue$/;"	m	struct:__anon232
ch_keep_open	structs.h	/^    int		ch_keep_open;	\/\/ do not close on read error$/;"	m	struct:channel_S
ch_killing	structs.h	/^    int		ch_killing;	    \/\/ TerminateJobObject() was called$/;"	m	struct:channel_S
ch_last_msg_id	structs.h	/^    int		ch_last_msg_id;	\/\/ ID of the last message$/;"	m	struct:channel_S
ch_log	channel.c	/^ch_log(channel_T *ch, const char *fmt, ...)$/;"	f
ch_log_active	channel.c	/^ch_log_active(void)$/;"	f
ch_log_lead	channel.c	/^ch_log_lead(const char *what, channel_T *ch, ch_part_T part)$/;"	f	file:
ch_logfile	channel.c	/^ch_logfile(char_u *fname, char_u *opt)$/;"	f
ch_mode	structs.h	/^    ch_mode_T	ch_mode;$/;"	m	struct:__anon232
ch_mode_T	structs.h	/^} ch_mode_T;$/;"	t	typeref:enum:__anon229
ch_named_pipe	structs.h	/^    int		ch_named_pipe;	\/\/ using named pipe instead of pty$/;"	m	struct:channel_S
ch_nb_close_cb	structs.h	/^    void	(*ch_nb_close_cb)(void);$/;"	m	struct:channel_S
ch_next	structs.h	/^    channel_T	*ch_next;$/;"	m	struct:channel_S
ch_nomod_error	structs.h	/^    int		ch_nomod_error;	\/\/ TRUE when e_modifiable was given$/;"	m	struct:__anon232
ch_nomodifiable	structs.h	/^    int		ch_nomodifiable; \/\/ TRUE when buffer can be 'nomodifiable'$/;"	m	struct:__anon232
ch_nonblock	structs.h	/^    int		ch_nonblock;$/;"	m	struct:channel_S
ch_nonblocking	structs.h	/^    int		ch_nonblocking;	\/\/ write() is non-blocking$/;"	m	struct:__anon232
ch_part	structs.h	/^    chanpart_T	ch_part[PART_COUNT]; \/\/ info for socket, out, err and in$/;"	m	struct:channel_S
ch_part_T	structs.h	/^} ch_part_T;$/;"	t	typeref:enum:__anon231
ch_poll_idx	structs.h	/^    int		ch_poll_idx;	\/\/ used by channel_poll_setup()$/;"	m	struct:__anon232
ch_port	structs.h	/^    int		ch_port;	\/\/ only for socket$/;"	m	struct:channel_S
ch_prev	structs.h	/^    channel_T	*ch_prev;$/;"	m	struct:channel_S
ch_raw_common	channel.c	/^ch_raw_common(typval_T *argvars, typval_T *rettv, int eval)$/;"	f	file:
ch_refcount	structs.h	/^    int		ch_refcount;	\/\/ reference count$/;"	m	struct:channel_S
ch_timeout	structs.h	/^    int		ch_timeout;	\/\/ request timeout in msec$/;"	m	struct:__anon232
ch_to_be_closed	structs.h	/^    int		ch_to_be_closed; \/\/ bitset of readable fds to be closed.$/;"	m	struct:channel_S
ch_to_be_freed	structs.h	/^    int		ch_to_be_freed; \/\/ When TRUE channel must be freed when it's$/;"	m	struct:channel_S
ch_wait_len	structs.h	/^    size_t	ch_wait_len;$/;"	m	struct:__anon232
ch_write_text_mode	structs.h	/^    int		ch_write_text_mode; \/\/ write buffer lines with CR, not NL$/;"	m	struct:channel_S
ch_writeque	structs.h	/^    writeq_T	ch_writeque;	\/\/ header for write queue$/;"	m	struct:__anon232
change_bat_choice	dosinst.c	/^change_bat_choice(int idx)$/;"	f	file:
change_compatible	option.c	/^change_compatible(int on)$/;"	f
change_directories_choice	dosinst.c	/^change_directories_choice(int idx)$/;"	f	file:
change_drive	dosinst.h	/^change_drive(int drive)$/;"	f
change_indent	indent.c	/^change_indent($/;"	f
change_main_bat_choice	dosinst.c	/^change_main_bat_choice(int idx)$/;"	f	file:
change_mouse_choice	dosinst.c	/^change_mouse_choice(int idx)$/;"	f	file:
change_openwith_choice	dosinst.c	/^change_openwith_choice(int idx)$/;"	f	file:
change_popup_choice	dosinst.c	/^change_popup_choice(int idx)$/;"	f	file:
change_remap_choice	dosinst.c	/^change_remap_choice(int idx)$/;"	f	file:
change_run_choice	dosinst.c	/^change_run_choice(int idx)$/;"	f	file:
change_vimrc_choice	dosinst.c	/^change_vimrc_choice(int idx)$/;"	f	file:
change_warning	change.c	/^change_warning(int col)$/;"	f
changed	change.c	/^changed(void)$/;"	f
changed	gui_at_fs.c	/^    int		changed;$/;"	m	struct:__anon32	file:
changedOneline	change.c	/^changedOneline(buf_T *buf, linenr_T lnum)$/;"	f	file:
changed_bytes	change.c	/^changed_bytes(linenr_T lnum, colnr_T col)$/;"	f
changed_cline_bef_curs	move.c	/^changed_cline_bef_curs(void)$/;"	f
changed_cline_bef_curs_win	move.c	/^changed_cline_bef_curs_win(win_T *wp)$/;"	f
changed_common	change.c	/^changed_common($/;"	f	file:
changed_internal	change.c	/^changed_internal(void)$/;"	f
changed_line_abv_curs	move.c	/^changed_line_abv_curs(void)$/;"	f
changed_line_abv_curs_win	move.c	/^changed_line_abv_curs_win(win_T *wp)$/;"	f
changed_lines	change.c	/^changed_lines($/;"	f
changed_lines_buf	change.c	/^changed_lines_buf($/;"	f	file:
changed_window_setting	move.c	/^changed_window_setting(void)$/;"	f
changed_window_setting_win	move.c	/^changed_window_setting_win(win_T *wp)$/;"	f
changedir_func	ex_docmd.c	/^changedir_func($/;"	f
changefunc	dosinst.c	/^    void    (*changefunc)(int idx);	\/\/ function to change this choice$/;"	m	struct:choice	file:
channel_S	structs.h	/^struct channel_S {$/;"	s
channel_T	structs.h	/^typedef struct channel_S channel_T;$/;"	t	typeref:struct:channel_S
channel_add_block_id	channel.c	/^channel_add_block_id(chanpart_T *chanpart, int id)$/;"	f	file:
channel_any_keep_open	channel.c	/^channel_any_keep_open()$/;"	f
channel_any_readahead	channel.c	/^channel_any_readahead(void)$/;"	f
channel_blocking_wait	channel.c	/^static int channel_blocking_wait = 0;$/;"	v	file:
channel_buffer_free	channel.c	/^channel_buffer_free(buf_T *buf)$/;"	f
channel_can_close	channel.c	/^channel_can_close(channel_T *channel)$/;"	f	file:
channel_can_write_to	channel.c	/^channel_can_write_to(channel_T *channel)$/;"	f
channel_clear	channel.c	/^channel_clear(channel_T *channel)$/;"	f
channel_clear_one	channel.c	/^channel_clear_one(channel_T *channel, ch_part_T part)$/;"	f	file:
channel_close	channel.c	/^channel_close(channel_T *channel, int invoke_close_cb)$/;"	f
channel_close_in	channel.c	/^channel_close_in(channel_T *channel)$/;"	f	file:
channel_close_now	channel.c	/^channel_close_now(channel_T *channel)$/;"	f	file:
channel_collapse	channel.c	/^channel_collapse(channel_T *channel, ch_part_T part, int want_nl)$/;"	f
channel_consume	channel.c	/^channel_consume(channel_T *channel, ch_part_T part, int len)$/;"	f
channel_exe_cmd	channel.c	/^channel_exe_cmd(channel_T *channel, ch_part_T part, typval_T *argv)$/;"	f	file:
channel_fd2channel	channel.c	/^channel_fd2channel(sock_T fd, ch_part_T *partp)$/;"	f	file:
channel_fill	channel.c	/^channel_fill(js_read_T *reader)$/;"	f	file:
channel_fill_poll_write	channel.c	/^channel_fill_poll_write(int nfd_in, struct pollfd *fds)$/;"	f	file:
channel_fill_wfds	channel.c	/^channel_fill_wfds(int maxfd_arg, fd_set *wfds)$/;"	f	file:
channel_find_buffer	channel.c	/^channel_find_buffer(char_u *name, int err, int msg)$/;"	f	file:
channel_first_nl	channel.c	/^channel_first_nl(readq_T *node)$/;"	f
channel_free	channel.c	/^channel_free(channel_T *channel)$/;"	f	file:
channel_free_all	channel.c	/^channel_free_all(void)$/;"	f
channel_free_channel	channel.c	/^channel_free_channel(channel_T *channel)$/;"	f	file:
channel_free_contents	channel.c	/^channel_free_contents(channel_T *channel)$/;"	f	file:
channel_get	channel.c	/^channel_get(channel_T *channel, ch_part_T part, int *outlen)$/;"	f
channel_get_all	channel.c	/^channel_get_all(channel_T *channel, ch_part_T part, int *outlen)$/;"	f	file:
channel_get_json	channel.c	/^channel_get_json($/;"	f	file:
channel_get_mode	channel.c	/^channel_get_mode(channel_T *channel, ch_part_T part)$/;"	f	file:
channel_get_timeout	channel.c	/^channel_get_timeout(channel_T *channel, ch_part_T part)$/;"	f	file:
channel_gui_register	channel.c	/^channel_gui_register(channel_T *channel)$/;"	f	file:
channel_gui_register_all	channel.c	/^channel_gui_register_all(void)$/;"	f
channel_gui_register_one	channel.c	/^channel_gui_register_one(channel_T *channel, ch_part_T part UNUSED)$/;"	f	file:
channel_gui_unregister	channel.c	/^channel_gui_unregister(channel_T *channel)$/;"	f	file:
channel_gui_unregister_one	channel.c	/^channel_gui_unregister_one(channel_T *channel UNUSED, ch_part_T part UNUSED)$/;"	f	file:
channel_handle_events	channel.c	/^channel_handle_events(int only_keep_open)$/;"	f
channel_has_block_id	channel.c	/^channel_has_block_id(chanpart_T *chanpart, int id)$/;"	f	file:
channel_has_readahead	channel.c	/^channel_has_readahead(channel_T *channel, ch_part_T part)$/;"	f	file:
channel_in_blocking_wait	channel.c	/^channel_in_blocking_wait(void)$/;"	f
channel_info	channel.c	/^channel_info(channel_T *channel, dict_T *dict)$/;"	f	file:
channel_init_winsock	os_mswin.c	/^channel_init_winsock(void)$/;"	f
channel_is_open	channel.c	/^channel_is_open(channel_T *channel)$/;"	f
channel_may_free	channel.c	/^channel_may_free(channel_T *channel)$/;"	f	file:
channel_need_redraw	channel.c	/^static int channel_need_redraw = FALSE;$/;"	v	file:
channel_open	channel.c	/^channel_open($/;"	f
channel_open_func	channel.c	/^channel_open_func(typval_T *argvars)$/;"	f	file:
channel_parse_json	channel.c	/^channel_parse_json(channel_T *channel, ch_part_T part)$/;"	f	file:
channel_parse_messages	channel.c	/^channel_parse_messages(void)$/;"	f
channel_part_info	channel.c	/^channel_part_info(channel_T *channel, dict_T *dict, char *name, ch_part_T part)$/;"	f	file:
channel_part_read	channel.c	/^channel_part_read(channel_T *channel)$/;"	f	file:
channel_part_send	channel.c	/^channel_part_send(channel_T *channel)$/;"	f	file:
channel_peek	channel.c	/^channel_peek(channel_T *channel, ch_part_T part)$/;"	f
channel_poll_cb	gui_gtk_x11.c	/^channel_poll_cb(gpointer data UNUSED)$/;"	f	file:
channel_poll_cb	gui_x11.c	/^channel_poll_cb($/;"	f	file:
channel_poll_check	channel.c	/^channel_poll_check(int ret_in, void *fds_in)$/;"	f
channel_poll_setup	channel.c	/^channel_poll_setup(int nfd_in, void *fds_in, int *towait)$/;"	f
channel_push_json	channel.c	/^channel_push_json(channel_T *channel, ch_part_T part, typval_T *rettv)$/;"	f	file:
channel_read	channel.c	/^channel_read(channel_T *channel, ch_part_T part, char *func)$/;"	f	file:
channel_read_block	channel.c	/^channel_read_block($/;"	f	file:
channel_read_fd	channel.c	/^channel_read_fd(int fd)$/;"	f	file:
channel_read_json_block	channel.c	/^channel_read_json_block($/;"	f	file:
channel_remove_block_id	channel.c	/^channel_remove_block_id(chanpart_T *chanpart, int id)$/;"	f	file:
channel_save	channel.c	/^channel_save(channel_T *channel, ch_part_T part, char_u *buf, int len,$/;"	f	file:
channel_select_check	channel.c	/^channel_select_check(int ret_in, void *rfds_in, void *wfds_in)$/;"	f
channel_select_setup	channel.c	/^channel_select_setup($/;"	f
channel_send	channel.c	/^channel_send($/;"	f
channel_set_job	channel.c	/^channel_set_job(channel_T *channel, job_T *job, jobopt_T *options)$/;"	f
channel_set_nonblock	channel.c	/^channel_set_nonblock(channel_T *channel, ch_part_T part)$/;"	f
channel_set_options	channel.c	/^channel_set_options(channel_T *channel, jobopt_T *opt)$/;"	f	file:
channel_set_pipes	channel.c	/^channel_set_pipes(channel_T *channel, sock_T in, sock_T out, sock_T err)$/;"	f
channel_set_req_callback	channel.c	/^channel_set_req_callback($/;"	f	file:
channel_status	channel.c	/^channel_status(channel_T *channel, int req_part)$/;"	f
channel_still_useful	channel.c	/^channel_still_useful(channel_T *channel)$/;"	f	file:
channel_unref	channel.c	/^channel_unref(channel_T *channel)$/;"	f
channel_wait	channel.c	/^channel_wait(channel_T *channel, sock_T fd, int timeout)$/;"	f	file:
channel_wait_result	channel.c	/^} channel_wait_result;$/;"	t	typeref:enum:__anon5	file:
channel_write_any_lines	channel.c	/^channel_write_any_lines(void)$/;"	f
channel_write_in	channel.c	/^channel_write_in(channel_T *channel)$/;"	f	file:
channel_write_input	channel.c	/^channel_write_input(channel_T *channel)$/;"	f	file:
channel_write_new_lines	channel.c	/^channel_write_new_lines(buf_T *buf)$/;"	f
chanpart_T	structs.h	/^} chanpart_T;$/;"	t	typeref:struct:__anon232
char1	digraph.c	/^    char_u	char1;$/;"	m	struct:digraph	file:
char2	digraph.c	/^    char_u	char2;$/;"	m	struct:digraph	file:
char2cells	charset.c	/^char2cells(int c)$/;"	f
char_ascent	gui.h	/^    int		char_ascent;	    \/\/ Ascent of char in pixels$/;"	m	struct:Gui
char_avail	getchar.c	/^char_avail(void)$/;"	f
char_height	gui.h	/^    int		char_height;	    \/\/ Height of char cell in pixels, includes$/;"	m	struct:Gui
char_needs_redraw	screen.c	/^char_needs_redraw(int off_from, int off_to, int cols)$/;"	f	file:
char_to_long	memline.c	/^char_to_long(char_u *s)$/;"	f	file:
char_to_string	gui_w32.c	/^char_to_string(int ch, char_u *string, int slen, int had_alt)$/;"	f	file:
char_u	term.h	/^typedef unsigned char char_u;$/;"	t
char_u	vim.h	/^typedef unsigned char	char_u;$/;"	t
char_width	gui.h	/^    int		char_width;	    \/\/ Width of char cell in pixels$/;"	m	struct:Gui
character_present	os_beos.c	/^sem_id character_present;$/;"	v
character_wanted	os_beos.c	/^sem_id character_wanted;$/;"	v
charbuf	os_beos.c	/^char_u charbuf;$/;"	v
charcount	os_beos.c	/^signed char charcount;$/;"	v
chars_per_line	structs.h	/^    int		chars_per_line;$/;"	m	struct:__anon247
charset	gui_motif.c	/^static XmStringCharSet charset = (XmStringCharSet) XmSTRING_DEFAULT_CHARSET;$/;"	v	file:
charset	hardcopy.c	/^    char	*charset;$/;"	m	struct:prt_ps_charset_S	file:
charset	os_mswin.c	/^    BYTE	charset;$/;"	m	struct:charset_pair	file:
charset_id2name	os_mswin.c	/^charset_id2name(int id)$/;"	f
charset_pair	os_mswin.c	/^struct charset_pair$/;"	s	file:
charset_pairs	os_mswin.c	/^charset_pairs[] =$/;"	v	typeref:struct:charset_pair	file:
charset_translate	gui_photon.c	/^static struct PxTransCtrl *charset_translate;$/;"	v	typeref:struct:PxTransCtrl	file:
charsets	hardcopy.c	/^    struct prt_ps_charset_S	*charsets;$/;"	m	struct:prt_ps_mbfont_S	typeref:struct:prt_ps_mbfont_S::prt_ps_charset_S	file:
chartab_initialized	charset.c	/^static int    chartab_initialized = FALSE;$/;"	v	file:
chartabsize	charset.c	/^chartabsize(char_u *p, colnr_T col)$/;"	f
chdir	os_mswin.c	25;"	d	file:
chdir	os_win32.c	38;"	d	file:
checkCloseRec	fold.c	/^checkCloseRec(garray_T *gap, linenr_T lnum, int level)$/;"	f	file:
checkSmall	fold.c	/^checkSmall($/;"	f	file:
check_abbr	map.c	/^check_abbr($/;"	f
check_arg_idx	arglist.c	/^check_arg_idx(win_T *win)$/;"	f
check_auto_format	edit.c	/^check_auto_format($/;"	f	file:
check_buf_options	optionstr.c	/^check_buf_options(buf_T *buf)$/;"	f
check_cedit	ex_getln.c	/^check_cedit(void)$/;"	f
check_changed	ex_cmds2.c	/^check_changed(buf_T *buf, int flags)$/;"	f
check_changed_any	ex_cmds2.c	/^check_changed_any($/;"	f
check_char_class	regexp_nfa.c	/^check_char_class(int class, int c)$/;"	f	file:
check_clipboard_option	ui.c	/^check_clipboard_option(void)$/;"	f
check_closed	fold.c	/^check_closed($/;"	f	file:
check_col	ui.c	/^check_col(int col)$/;"	f
check_colorcolumn	window.c	/^check_colorcolumn(win_T *wp)$/;"	f
check_connection	evalfunc.c	/^check_connection(void)$/;"	f	file:
check_copy_area	gui_gtk_x11.c	/^check_copy_area(void)$/;"	f	file:
check_cstack	ex_docmd.c	/^    int		check_cstack;$/;"	m	struct:dbg_stuff	file:
check_cstack	globals.h	/^EXTERN int check_cstack INIT(= FALSE);$/;"	v
check_cursor	misc2.c	/^check_cursor(void)$/;"	f
check_cursor_col	misc2.c	/^check_cursor_col(void)$/;"	f
check_cursor_col_win	misc2.c	/^check_cursor_col_win(win_T *win)$/;"	f
check_cursor_lnum	misc2.c	/^check_cursor_lnum(void)$/;"	f
check_cursor_moved	move.c	/^check_cursor_moved(win_T *wp)$/;"	f
check_due_timer	time.c	/^check_due_timer(void)$/;"	f
check_ei	autocmd.c	/^check_ei(void)$/;"	f
check_external_diff	diff.c	/^check_external_diff(diffio_T *diffio)$/;"	f	file:
check_ff_value	optionstr.c	/^check_ff_value(char_u *p)$/;"	f
check_file_readonly	fileio.c	/^check_file_readonly($/;"	f
check_fname	ex_cmds2.c	/^check_fname(void)$/;"	f
check_fontset_sanity	gui_x11.c	/^check_fontset_sanity(XFontSet fs)$/;"	f	file:
check_for_bom	fileio.c	/^check_for_bom($/;"	f	file:
check_for_codes	term.c	/^static int	check_for_codes = FALSE;    \/\/ check for key code response$/;"	v	file:
check_for_codes_from_term	term.c	/^check_for_codes_from_term(void)$/;"	f	file:
check_for_cryptkey	fileio.c	/^check_for_cryptkey($/;"	f	file:
check_for_delay	screen.c	/^check_for_delay(int check_msg_scroll)$/;"	f
check_help_lang	ex_cmds.c	/^check_help_lang(char_u *arg)$/;"	f
check_highlight	popupwin.c	/^check_highlight(dict_T *dict, char *name, char_u **pval)$/;"	f	file:
check_internal_func	evalfunc.c	/^check_internal_func(int idx, int argcount)$/;"	f
check_keepend	syntax.c	/^check_keepend(void)$/;"	f	file:
check_keyword_id	syntax.c	/^check_keyword_id($/;"	f	file:
check_line_range	if_mzsch.c	/^check_line_range(linenr_T lnum, buf_T *buf)$/;"	f	file:
check_linecomment	search.c	/^check_linecomment(char_u *line)$/;"	f	file:
check_lnums	window.c	/^check_lnums(int do_curwin)$/;"	f
check_map	map.c	/^check_map($/;"	f
check_map_keycodes	map.c	/^check_map_keycodes(void)$/;"	f
check_mark	mark.c	/^check_mark(pos_T *pos)$/;"	f
check_marks_read	viminfo.c	/^check_marks_read(void)$/;"	f
check_menu_pointer	menu.c	/^check_menu_pointer(vimmenu_T *root, vimmenu_T *menu_to_check)$/;"	f
check_more	ex_docmd.c	/^check_more($/;"	f	file:
check_mouse_moved	popupwin.c	/^check_mouse_moved(win_T *wp, win_T *mouse_wp)$/;"	f	file:
check_mouse_termcode	os_unix.c	/^check_mouse_termcode(void)$/;"	f
check_mtime	bufwrite.c	/^check_mtime(buf_T *buf, stat_T *st)$/;"	f	file:
check_need_cap	spell.c	/^check_need_cap(linenr_T lnum, colnr_T col)$/;"	f
check_need_swap	memline.c	/^check_need_swap($/;"	f
check_nextcmd	ex_docmd.c	/^check_nextcmd(char_u *p)$/;"	f
check_nomodeline	autocmd.c	/^check_nomodeline(char_u **argp)$/;"	f
check_not_string	vim9execute.c	/^check_not_string(typval_T *tv)$/;"	f
check_number_or_float	vim9compile.c	/^check_number_or_float(vartype_T type1, vartype_T type2, char_u *op)$/;"	f	file:
check_opt_strings	optionstr.c	/^check_opt_strings($/;"	f	file:
check_opt_wim	ex_getln.c	/^check_opt_wim(void)$/;"	f
check_options	option.c	/^check_options(void)$/;"	f
check_overwrite	ex_cmds.c	/^check_overwrite($/;"	f
check_popup_unhidden	popupwin.c	/^check_popup_unhidden(win_T *wp)$/;"	f	file:
check_pos	misc2.c	/^check_pos(buf_T *buf, pos_T *pos)$/;"	f
check_prevcol	search.c	/^check_prevcol($/;"	f	file:
check_quickfix_busy	quickfix.c	/^check_quickfix_busy(void)$/;"	f
check_readonly	ex_cmds.c	/^check_readonly(int *forceit, buf_T *buf)$/;"	f	file:
check_recorded_changes	change.c	/^check_recorded_changes($/;"	f	file:
check_redraw	option.c	/^check_redraw(long_u flags)$/;"	f
check_renumber	spellfile.c	/^check_renumber(spellinfo_T *spin)$/;"	f	file:
check_restricted	ex_cmds.c	/^check_restricted(void)$/;"	f
check_row	ui.c	/^check_row(int row)$/;"	f
check_scrollbind	normal.c	/^check_scrollbind(linenr_T topline_diff, long leftcol_diff)$/;"	f
check_secure	ex_cmds.c	/^check_secure(void)$/;"	f
check_shellsize	term.c	/^check_shellsize(void)$/;"	f
check_snapshot_rec	window.c	/^check_snapshot_rec(frame_T *sn, frame_T *fr)$/;"	f	file:
check_spell_redraw	edit.c	/^check_spell_redraw(void)$/;"	f	file:
check_split_disallowed	window.c	/^check_split_disallowed()$/;"	f	file:
check_stack_growth	os_unix.c	/^check_stack_growth(char *p)$/;"	f	file:
check_startup_plug_hints	gui_gtk_x11.c	/^check_startup_plug_hints(gpointer data UNUSED)$/;"	f	file:
check_state_ends	syntax.c	/^check_state_ends(void)$/;"	f	file:
check_status	misc1.c	/^check_status(buf_T *buf)$/;"	f
check_stl_option	optionstr.c	/^check_stl_option(char_u *s)$/;"	f	file:
check_str_len	os_mswin.c	/^check_str_len(char_u *str)$/;"	f	file:
check_string_option	optionstr.c	/^check_string_option(char_u **pp)$/;"	f
check_suggestions	spellsuggest.c	/^check_suggestions($/;"	f	file:
check_swap_exists_action	main.c	/^check_swap_exists_action(void)$/;"	f	file:
check_termcode	term.c	/^check_termcode($/;"	f
check_termcode_mouse	mouse.c	/^check_termcode_mouse($/;"	f
check_timestamps	fileio.c	/^check_timestamps($/;"	f
check_top_offset	move.c	/^check_top_offset(void)$/;"	f	file:
check_topfill	move.c	/^check_topfill($/;"	f
check_tty	main.c	/^check_tty(mparm_T *parmp)$/;"	f	file:
check_type	vim9compile.c	/^check_type(type_T *expected, type_T *actual, int give_msg)$/;"	f	file:
check_unpack	dosinst.c	/^check_unpack(void)$/;"	f	file:
check_vars	evalvars.c	/^check_vars(char_u *name, int len)$/;"	f
check_visual_highlight	normal.c	/^check_visual_highlight(void)$/;"	f
check_win_options	option.c	/^check_win_options(win_T *win)$/;"	f	file:
check_winopt	option.c	/^check_winopt(winopt_T *wop UNUSED)$/;"	f	file:
check_xpm	gui_motif.c	/^check_xpm(char_u *path)$/;"	f	file:
checkclearop	normal.c	/^checkclearop(oparg_T *oap)$/;"	f	file:
checkclearopq	normal.c	/^checkclearopq(oparg_T *oap)$/;"	f	file:
checkforcmd	ex_docmd.c	/^checkforcmd($/;"	f
checkfun	if_py_both.h	/^typedef int (*checkfun)(void *);$/;"	t
checkpcmark	mark.c	/^checkpcmark(void)$/;"	f
checktype_T	vim9.h	/^} checktype_T;$/;"	t	typeref:struct:__anon271
checkupdate	fold.c	/^checkupdate(win_T *wp)$/;"	f	file:
chg_c_laa2f	arabic.c	/^chg_c_laa2f(int hid_c)$/;"	f	file:
chg_c_laa2i	arabic.c	/^chg_c_laa2i(int hid_c)$/;"	f	file:
children	gui_gtk_f.h	/^    GList *children;$/;"	m	struct:_GtkForm
children	structs.h	/^    vimmenu_T	*children;	    \/\/ Children of sub-menu$/;"	m	struct:VimMenu
chk_modeline	buffer.c	/^chk_modeline($/;"	f	file:
choice	dosinst.c	/^struct choice$/;"	s	file:
choice_count	dosinst.c	/^int		choice_count = 0;	\/\/ number of choices available$/;"	v
choices	dosinst.c	/^struct choice	choices[30];		\/\/ choices the user can make$/;"	v	typeref:struct:choice
chunksize_T	structs.h	/^} chunksize_T;$/;"	t	typeref:struct:ml_chunksize
ci_flag	spellfile.c	/^    unsigned	ci_flag;	\/\/ affix name as number, uses "af_flagtype"$/;"	m	struct:compitem_S	file:
ci_key	spellfile.c	/^    char_u	ci_key[AH_KEY_LEN]; \/\/ key for hashtab == name of compound$/;"	m	struct:compitem_S	file:
ci_newID	spellfile.c	/^    int		ci_newID;	\/\/ affix ID after renumbering.$/;"	m	struct:compitem_S	file:
cin_ends_in	cindent.c	/^cin_ends_in(char_u *s, char_u *find, char_u *ignore)$/;"	f	file:
cin_first_id_amount	cindent.c	/^cin_first_id_amount(void)$/;"	f	file:
cin_get_equal_amount	cindent.c	/^cin_get_equal_amount(linenr_T lnum)$/;"	f	file:
cin_has_js_key	cindent.c	/^cin_has_js_key(char_u *text)$/;"	f	file:
cin_is_cinword	cindent.c	/^cin_is_cinword(char_u *line)$/;"	f
cin_is_cpp_baseclass	cindent.c	/^cin_is_cpp_baseclass($/;"	f	file:
cin_is_cpp_extern_c	cindent.c	/^cin_is_cpp_extern_c(char_u *s)$/;"	f	file:
cin_is_cpp_namespace	cindent.c	/^cin_is_cpp_namespace(char_u *s)$/;"	f	file:
cin_is_if_for_while_before_offset	cindent.c	/^cin_is_if_for_while_before_offset(char_u *line, int *poffset)$/;"	f	file:
cin_isbreak	cindent.c	/^cin_isbreak(char_u *p)$/;"	f	file:
cin_iscase	cindent.c	/^cin_iscase($/;"	f	file:
cin_iscomment	cindent.c	/^cin_iscomment(char_u *p)$/;"	f	file:
cin_isdefault	cindent.c	/^cin_isdefault(char_u *s)$/;"	f	file:
cin_isdo	cindent.c	/^cin_isdo(char_u *p)$/;"	f	file:
cin_iselse	cindent.c	/^cin_iselse($/;"	f	file:
cin_isfuncdecl	cindent.c	/^cin_isfuncdecl($/;"	f	file:
cin_isif	cindent.c	/^cin_isif(char_u *p)$/;"	f	file:
cin_isinit	cindent.c	/^cin_isinit(void)$/;"	f	file:
cin_islabel	cindent.c	/^cin_islabel(void)		\/\/ XXX$/;"	f	file:
cin_islabel_skip	cindent.c	/^cin_islabel_skip(char_u **s)$/;"	f	file:
cin_islinecomment	cindent.c	/^cin_islinecomment(char_u *p)$/;"	f	file:
cin_ispreproc	cindent.c	/^cin_ispreproc(char_u *s)$/;"	f	file:
cin_ispreproc_cont	cindent.c	/^cin_ispreproc_cont(char_u **pp, linenr_T *lnump, int *amount)$/;"	f	file:
cin_isscopedecl	cindent.c	/^cin_isscopedecl(char_u *s)$/;"	f	file:
cin_isterminated	cindent.c	/^cin_isterminated($/;"	f	file:
cin_iswhileofdo	cindent.c	/^cin_iswhileofdo (char_u *p, linenr_T lnum)	\/\/ XXX$/;"	f	file:
cin_iswhileofdo_end	cindent.c	/^cin_iswhileofdo_end(int terminated)$/;"	f	file:
cin_nocode	cindent.c	/^cin_nocode(char_u *s)$/;"	f	file:
cin_skip2pos	cindent.c	/^cin_skip2pos(pos_T *trypos)$/;"	f	file:
cin_skipcomment	cindent.c	/^cin_skipcomment(char_u *s)$/;"	f	file:
cin_starts_with	cindent.c	/^cin_starts_with(char_u *s, char *word)$/;"	f	file:
cindent_on	cindent.c	/^cindent_on(void)$/;"	f
cinitmappings	map.c	/^static struct initmap cinitmappings[] =$/;"	v	typeref:struct:initmap	file:
class	os_vms.c	/^    char	class;$/;"	m	struct:__anon76	file:
class_tab	regexp.c	/^static short	class_tab[256];$/;"	v	file:
classchars	regexp_bt.c	/^static char_u	*classchars = (char_u *)".iIkKfFpPsSdDxXoOwWhHaAlLuU";$/;"	v	file:
classcodes	regexp_bt.c	/^static int	classcodes[] = {$/;"	v	file:
clean	structs.h	/^    int		clean;			\/\/ --clean argument$/;"	m	struct:__anon252
cleanup_T	structs.h	/^typedef struct cleanup_stuff cleanup_T;$/;"	t	typeref:struct:cleanup_stuff
cleanup_conditionals	ex_eval.c	/^cleanup_conditionals($/;"	f
cleanup_function_call	userfunc.c	/^cleanup_function_call(funccall_T *fc)$/;"	f	file:
cleanup_help_tags	cmdexpand.c	/^cleanup_help_tags(int num_file, char_u **file)$/;"	f	file:
cleanup_jumplist	mark.c	/^cleanup_jumplist(win_T *wp, int loadfiles)$/;"	f
cleanup_scrollback	terminal.c	/^cleanup_scrollback(term_T *term)$/;"	f	file:
cleanup_stuff	structs.h	/^struct cleanup_stuff$/;"	s
cleanup_subexpr	regexp.c	/^cleanup_subexpr(void)$/;"	f	file:
cleanup_suggestions	spellsuggest.c	/^cleanup_suggestions($/;"	f	file:
cleanup_vterm	terminal.c	/^cleanup_vterm(term_T *term)$/;"	f	file:
cleanup_zsubexpr	regexp.c	/^cleanup_zsubexpr(void)$/;"	f	file:
clear	if_py_both.h	/^    clearfun clear;$/;"	m	struct:__anon153
clear	if_py_both.h	1482;"	d
clearFolding	fold.c	/^clearFolding(win_T *win)$/;"	f
clearTypeLevel	gui_dwrite.h	/^    float clearTypeLevel;$/;"	m	struct:DWriteRenderingParams
clear_TabPageIdxs	screen.c	/^clear_TabPageIdxs(void)$/;"	f	file:
clear_buf_prop_types	textprop.c	/^clear_buf_prop_types(buf_T *buf)$/;"	f
clear_chars	os_win32.c	/^clear_chars($/;"	f	file:
clear_cmdline	globals.h	/^EXTERN int	clear_cmdline INIT(= FALSE);	\/\/ cmdline must be cleared$/;"	v
clear_csinfo	if_cscope.c	/^clear_csinfo(int i)$/;"	f	file:
clear_current_state	syntax.c	/^clear_current_state(void)$/;"	f	file:
clear_diffin	diff.c	/^clear_diffin(diffin_T *din)$/;"	f	file:
clear_diffout	diff.c	/^clear_diffout(diffout_T *dout)$/;"	f	file:
clear_global_prop_types	textprop.c	/^clear_global_prop_types(void)$/;"	f
clear_hist_entry	cmdhist.c	/^clear_hist_entry(histentry_T *hisptr)$/;"	f
clear_hl_tables	highlight.c	/^clear_hl_tables(void)$/;"	f
clear_ht_prop_types	textprop.c	/^clear_ht_prop_types(hashtab_T *ht)$/;"	f	file:
clear_job_options	channel.c	/^clear_job_options(jobopt_T *opt)$/;"	f
clear_keywtab	syntax.c	/^clear_keywtab(hashtab_T *ht)$/;"	f	file:
clear_lval	eval.c	/^clear_lval(lval_T *lp)$/;"	f
clear_matches	highlight.c	/^clear_matches(win_T *wp)$/;"	f
clear_midword	spell.c	/^clear_midword(win_T *wp)$/;"	f	file:
clear_node	spellfile.c	/^clear_node(wordnode_T *node)$/;"	f	file:
clear_oparg	ops.c	/^clear_oparg(oparg_T *oap)$/;"	f
clear_option_flag	option.c	/^clear_option_flag(int opt_idx, long_u flag)$/;"	f
clear_rect	gui_w32.c	/^clear_rect(RECT *rcp)$/;"	f	file:
clear_registers	register.c	/^clear_registers(void)$/;"	f
clear_sb_text	message.c	/^clear_sb_text(int all)$/;"	f
clear_screen	os_win32.c	/^clear_screen(void)$/;"	f	file:
clear_showcmd	normal.c	/^clear_showcmd(void)$/;"	f
clear_snapshot	window.c	/^clear_snapshot(tabpage_T *tp, int idx)$/;"	f	file:
clear_snapshot_rec	window.c	/^clear_snapshot_rec(frame_T *fr)$/;"	f	file:
clear_spell_chartab	spell.c	/^clear_spell_chartab(spelltab_T *sp)$/;"	f
clear_string_option	optionstr.c	/^clear_string_option(char_u **pp)$/;"	f
clear_sub	regexp_nfa.c	/^clear_sub(regsub_T *sub)$/;"	f	file:
clear_submatch_list	regexp.c	/^clear_submatch_list(staticList10_T *sl)$/;"	f	file:
clear_syn_state	syntax.c	/^clear_syn_state(synstate_T *p)$/;"	f	file:
clear_termcodes	term.c	/^clear_termcodes(void)$/;"	f
clear_termoptions	option.c	/^clear_termoptions(void)$/;"	f
clear_to_end_of_display	os_win32.c	/^clear_to_end_of_display(void)$/;"	f	file:
clear_to_end_of_line	os_win32.c	/^clear_to_end_of_line(void)$/;"	f	file:
clear_tv	eval.c	/^clear_tv(typval_T *varp)$/;"	f
clear_wininfo	buffer.c	/^clear_wininfo(buf_T *buf)$/;"	f	file:
clear_winopt	option.c	/^clear_winopt(winopt_T *wop UNUSED)$/;"	f
clear_xterm_clip	os_unix.c	/^clear_xterm_clip(void)$/;"	f
clearfun	if_py_both.h	/^typedef int (*clearfun)(void **);$/;"	t
clearmode	screen.c	/^clearmode(void)$/;"	f
clearop	normal.c	/^clearop(oparg_T *oap)$/;"	f
clearopbeep	normal.c	/^clearopbeep(oparg_T *oap)$/;"	f
clickIsPopup	gui_mac.c	/^static short clickIsPopup;$/;"	v	file:
clicked_page	gui_gtk_x11.c	/^static int clicked_page;	    \/\/ page clicked in tab line$/;"	v	file:
clientData	beval.h	/^    void		*clientData;	\/\/ For callback$/;"	m	struct:BalloonEvalStruct
clientWindow	globals.h	/^EXTERN HWND	clientWindow INIT(= 0);$/;"	v
clientWindow	globals.h	/^EXTERN Window	clientWindow INIT(= None);$/;"	v
client_enc	os_mswin.c	/^static char_u	*client_enc = NULL;$/;"	v	file:
clientid	os_unix.c	/^    char *clientid;	    \/\/ The client ID for the current smc session$/;"	m	struct:__anon75	file:
clip_auto_select	ui.c	/^clip_auto_select(void)$/;"	f
clip_autoselect_plus	globals.h	/^EXTERN int	clip_autoselect_plus INIT(= FALSE);$/;"	v
clip_autoselect_star	globals.h	/^EXTERN int	clip_autoselect_star INIT(= FALSE);$/;"	v
clip_autoselectml	globals.h	/^EXTERN int	clip_autoselectml INIT(= FALSE);$/;"	v
clip_clear_selection	ui.c	/^clip_clear_selection(Clipboard_T *cbd)$/;"	f
clip_compare_pos	ui.c	/^clip_compare_pos($/;"	f	file:
clip_convert_selection	register.c	/^clip_convert_selection(char_u **str, long_u *len, Clipboard_T *cbd)$/;"	f
clip_copy_modeless_selection	ui.c	/^clip_copy_modeless_selection(int both UNUSED)$/;"	f
clip_copy_selection	ui.c	/^clip_copy_selection(Clipboard_T *clip)$/;"	f	file:
clip_did_set_selection	ui.c	/^static int clip_did_set_selection = TRUE;$/;"	v	file:
clip_exclude_prog	globals.h	/^EXTERN regprog_T *clip_exclude_prog INIT(= NULL);$/;"	v
clip_free_selection	register.c	/^clip_free_selection(Clipboard_T *cbd)$/;"	f
clip_gen_lose_selection	ui.c	/^clip_gen_lose_selection(Clipboard_T *cbd)$/;"	f	file:
clip_gen_own_selection	ui.c	/^clip_gen_own_selection(Clipboard_T *cbd)$/;"	f	file:
clip_gen_owner_exists	ui.c	/^clip_gen_owner_exists(Clipboard_T *cbd UNUSED)$/;"	f
clip_gen_request_selection	ui.c	/^clip_gen_request_selection(Clipboard_T *cbd)$/;"	f
clip_gen_set_selection	ui.c	/^clip_gen_set_selection(Clipboard_T *cbd)$/;"	f
clip_get_line_end	ui.c	/^clip_get_line_end(Clipboard_T *cbd UNUSED, int row)$/;"	f	file:
clip_get_selection	register.c	/^clip_get_selection(Clipboard_T *cbd)$/;"	f
clip_get_word_boundaries	ui.c	/^clip_get_word_boundaries(Clipboard_T *cb, int row, int col)$/;"	f	file:
clip_gtk_owner_exists	gui_gtk_x11.c	/^clip_gtk_owner_exists(Clipboard_T *cbd)$/;"	f
clip_html	globals.h	/^EXTERN int	clip_html INIT(= FALSE);$/;"	v
clip_init	ui.c	/^clip_init(int can_use)$/;"	f
clip_invert_area	ui.c	/^clip_invert_area($/;"	f	file:
clip_invert_rectangle	ui.c	/^clip_invert_rectangle($/;"	f	file:
clip_isautosel_plus	ui.c	/^clip_isautosel_plus(void)$/;"	f
clip_isautosel_star	ui.c	/^clip_isautosel_star(void)$/;"	f
clip_lose_selection	ui.c	/^clip_lose_selection(Clipboard_T *cbd)$/;"	f
clip_may_clear_selection	ui.c	/^clip_may_clear_selection(int row1, int row2)$/;"	f
clip_may_redraw_selection	ui.c	/^clip_may_redraw_selection(int row, int col, int len)$/;"	f
clip_mch_lose_selection	gui_gtk_x11.c	/^clip_mch_lose_selection(Clipboard_T *cbd UNUSED)$/;"	f
clip_mch_lose_selection	gui_mac.c	/^clip_mch_lose_selection(Clipboard_T *cbd)$/;"	f
clip_mch_lose_selection	gui_x11.c	/^clip_mch_lose_selection(Clipboard_T *cbd)$/;"	f
clip_mch_lose_selection	os_qnx.c	/^clip_mch_lose_selection(Clipboard_T *cbd)$/;"	f
clip_mch_lose_selection	winclip.c	/^clip_mch_lose_selection(Clipboard_T *cbd UNUSED)$/;"	f
clip_mch_own_selection	gui_gtk_x11.c	/^clip_mch_own_selection(Clipboard_T *cbd)$/;"	f
clip_mch_own_selection	gui_mac.c	/^clip_mch_own_selection(Clipboard_T *cbd)$/;"	f
clip_mch_own_selection	gui_x11.c	/^clip_mch_own_selection(Clipboard_T *cbd)$/;"	f
clip_mch_own_selection	os_qnx.c	/^clip_mch_own_selection(Clipboard_T *cbd)$/;"	f
clip_mch_own_selection	winclip.c	/^clip_mch_own_selection(Clipboard_T *cbd UNUSED)$/;"	f
clip_mch_request_selection	gui_gtk_x11.c	/^clip_mch_request_selection(Clipboard_T *cbd)$/;"	f
clip_mch_request_selection	gui_mac.c	/^clip_mch_request_selection(Clipboard_T *cbd)$/;"	f
clip_mch_request_selection	gui_x11.c	/^clip_mch_request_selection(Clipboard_T *cbd)$/;"	f
clip_mch_request_selection	os_qnx.c	/^clip_mch_request_selection(Clipboard_T *cbd)$/;"	f
clip_mch_request_selection	winclip.c	/^clip_mch_request_selection(Clipboard_T *cbd)$/;"	f
clip_mch_set_selection	gui_gtk_x11.c	/^clip_mch_set_selection(Clipboard_T *cbd UNUSED)$/;"	f
clip_mch_set_selection	gui_mac.c	/^clip_mch_set_selection(Clipboard_T *cbd)$/;"	f
clip_mch_set_selection	gui_x11.c	/^clip_mch_set_selection($/;"	f
clip_mch_set_selection	os_qnx.c	/^clip_mch_set_selection(Clipboard_T *cbd)$/;"	f
clip_mch_set_selection	winclip.c	/^clip_mch_set_selection(Clipboard_T *cbd)$/;"	f
clip_modeless	ui.c	/^clip_modeless(int button, int is_click, int is_drag)$/;"	f
clip_own_selection	ui.c	/^clip_own_selection(Clipboard_T *cbd)$/;"	f
clip_plus	globals.h	/^EXTERN Clipboard_T clip_plus;	\/\/ CLIPBOARD selection in X11$/;"	v
clip_plus	globals.h	638;"	d
clip_plus_save	os_unix.c	/^static void *clip_plus_save = NULL;$/;"	v	file:
clip_process_selection	ui.c	/^clip_process_selection($/;"	f
clip_scroll_selection	ui.c	/^clip_scroll_selection($/;"	f
clip_star	globals.h	/^EXTERN Clipboard_T clip_star;	\/\/ PRIMARY selection in X11$/;"	v
clip_star_save	os_unix.c	/^static void *clip_star_save = NULL;$/;"	v	file:
clip_start_selection	ui.c	/^clip_start_selection(int col, int row, int repeated_click)$/;"	f
clip_unnamed	globals.h	/^EXTERN int	clip_unnamed INIT(= 0); \/\/ above two values or'ed$/;"	v
clip_unnamed_saved	globals.h	/^EXTERN int	clip_unnamed_saved INIT(= 0);$/;"	v
clip_update	os_unix.c	/^clip_update(void)$/;"	f	file:
clip_update_modeless_selection	ui.c	/^clip_update_modeless_selection($/;"	f	file:
clip_update_selection	ui.c	/^clip_update_selection(Clipboard_T *clip)$/;"	f
clip_x11_convert_selection_cb	ui.c	/^clip_x11_convert_selection_cb($/;"	f	file:
clip_x11_lose_ownership_cb	ui.c	/^clip_x11_lose_ownership_cb(Widget w UNUSED, Atom *sel_atom)$/;"	f	file:
clip_x11_lose_selection	ui.c	/^clip_x11_lose_selection(Widget myShell, Clipboard_T *cbd)$/;"	f
clip_x11_notify_cb	ui.c	/^clip_x11_notify_cb(Widget w UNUSED, Atom *sel_atom UNUSED, Atom *target UNUSED)$/;"	f	file:
clip_x11_own_selection	ui.c	/^clip_x11_own_selection(Widget myShell, Clipboard_T *cbd)$/;"	f
clip_x11_owner_exists	ui.c	/^clip_x11_owner_exists(Clipboard_T *cbd)$/;"	f	file:
clip_x11_request_selection	ui.c	/^clip_x11_request_selection($/;"	f
clip_x11_request_selection_cb	ui.c	/^clip_x11_request_selection_cb($/;"	f	file:
clip_x11_set_selection	ui.c	/^clip_x11_set_selection(Clipboard_T *cbd UNUSED)$/;"	f
clip_x11_timestamp_cb	ui.c	/^clip_x11_timestamp_cb($/;"	f	file:
clip_xterm_lose_selection	os_unix.c	/^clip_xterm_lose_selection(Clipboard_T *cbd)$/;"	f
clip_xterm_own_selection	os_unix.c	/^clip_xterm_own_selection(Clipboard_T *cbd)$/;"	f
clip_xterm_request_selection	os_unix.c	/^clip_xterm_request_selection(Clipboard_T *cbd)$/;"	f
clip_xterm_set_selection	os_unix.c	/^clip_xterm_set_selection(Clipboard_T *cbd)$/;"	f
clip_yank_selection	register.c	/^clip_yank_selection($/;"	f
clipboard_needs_update	ui.c	/^static int clipboard_needs_update = FALSE; \/\/ clipboard needs to be updated$/;"	v	file:
cloneFoldGrowArray	fold.c	/^cloneFoldGrowArray(garray_T *from, garray_T *to)$/;"	f
closeFold	fold.c	/^closeFold(linenr_T lnum, long count)$/;"	f
closeFoldRecurse	fold.c	/^closeFoldRecurse(linenr_T lnum)$/;"	f
close_all_popups	popupwin.c	/^close_all_popups(void)$/;"	f
close_all_scripts	getchar.c	/^close_all_scripts(void)$/;"	f
close_buffer	buffer.c	/^close_buffer($/;"	f
close_dll	if_lua.c	90;"	d	file:
close_dll	if_lua.c	94;"	d	file:
close_dll	if_python.c	138;"	d	file:
close_dll	if_python.c	142;"	d	file:
close_dll	if_python3.c	123;"	d	file:
close_dll	if_python3.c	127;"	d	file:
close_dll	if_ruby.c	167;"	d	file:
close_dll	if_ruby.c	172;"	d	file:
close_dll	if_tcl.c	169;"	d	file:
close_dll	if_tcl.c	174;"	d	file:
close_last_window_tabpage	window.c	/^close_last_window_tabpage($/;"	f	file:
close_others	window.c	/^close_others($/;"	f
close_redir	ex_docmd.c	/^close_redir(void)$/;"	f	file:
close_signicon_image	gui_w32.c	/^close_signicon_image(signicon_t *sign)$/;"	f	file:
close_spellbuf	spell.c	/^close_spellbuf(buf_T *buf)$/;"	f
close_tabpage	window.c	/^close_tabpage(tabpage_T *tab)$/;"	f
close_win	os_amiga.c	/^static int		close_win = FALSE;  \/\/ set if Vim opened the window$/;"	v	file:
close_windows	window.c	/^close_windows($/;"	f
closescript	getchar.c	/^closescript(void)$/;"	f	file:
clr_history	cmdhist.c	/^clr_history(int histype)$/;"	f	file:
clrallmarks	mark.c	/^clrallmarks(buf_T *buf)$/;"	f
cls	search.c	/^cls(void)$/;"	f	file:
cls_bigword	search.c	/^static int	cls_bigword;	\/\/ TRUE for "W", "B" or "E"$/;"	v	file:
cmap_charset	hardcopy.c	/^    char	*cmap_charset;$/;"	m	struct:prt_ps_charset_S	file:
cmap_encoding	hardcopy.c	/^    char	*cmap_encoding;$/;"	m	struct:prt_ps_encoding_S	file:
cmd	autocmd.c	/^    char_u	    *cmd;		\/\/ The command to be executed (NULL$/;"	m	struct:AutoCmd	file:
cmd	ex_cmds.h	/^    char_u	*cmd;		\/\/ the name of the command (except for :make)$/;"	m	struct:exarg
cmd	if_tcl.c	/^    Tcl_Command cmd;	    \/\/ Tcl command that represents this object$/;"	m	struct:ref	file:
cmd_addr_T	ex_cmds.h	/^} cmd_addr_T;$/;"	t	typeref:enum:__anon142
cmd_addr_type	ex_cmds.h	/^    cmd_addr_T	cmd_addr_type;	\/\/ flag for address type$/;"	m	struct:cmdname
cmd_arg	normal.c	/^    short	cmd_arg;	\/\/ value for ca.arg$/;"	m	struct:nv_cmd	file:
cmd_argt	ex_cmds.h	/^    long_u	cmd_argt;	\/\/ flags declared above$/;"	m	struct:cmdname
cmd_char	normal.c	/^    int		cmd_char;	\/\/ (first) command character$/;"	m	struct:nv_cmd	file:
cmd_exists	ex_docmd.c	/^cmd_exists(char_u *name)$/;"	f
cmd_flags	normal.c	/^    short_u	cmd_flags;	\/\/ NV_ flags$/;"	m	struct:nv_cmd	file:
cmd_func	ex_cmds.h	/^    ex_func_T   cmd_func;	\/\/ function for this command$/;"	m	struct:cmdname
cmd_func	normal.c	/^    nv_func_T   cmd_func;	\/\/ function for this command$/;"	m	struct:nv_cmd	file:
cmd_hkmap	ex_getln.c	/^static int	cmd_hkmap = 0;	\/\/ Hebrew mapping during command line$/;"	v	file:
cmd_name	ex_cmds.h	/^    char_u	*cmd_name;	\/\/ name of the command$/;"	m	struct:cmdname
cmd_showtail	cmdexpand.c	/^static int	cmd_showtail;	\/\/ Only show path tail in lists ?$/;"	v	file:
cmd_silent	globals.h	/^EXTERN int	cmd_silent INIT(= FALSE); \/\/ don't echo the command line$/;"	v
cmd_source	scriptfile.c	/^cmd_source(char_u *fname, exarg_T *eap)$/;"	f	file:
cmd_with_count	window.c	/^cmd_with_count($/;"	f	file:
cmdarg_S	structs.h	/^typedef struct cmdarg_S$/;"	s
cmdarg_T	structs.h	/^} cmdarg_T;$/;"	t	typeref:struct:cmdarg_S
cmdattr	structs.h	/^    int		cmdattr;	\/\/ attributes for prompt$/;"	m	struct:__anon190
cmdbuff	structs.h	/^    char_u	*cmdbuff;	\/\/ pointer to command line buffer$/;"	m	struct:__anon190
cmdbufflen	structs.h	/^    int		cmdbufflen;	\/\/ length of cmdbuff$/;"	m	struct:__anon190
cmdchar	structs.h	/^    int		cmdchar;	\/\/ command character$/;"	m	struct:cmdarg_S
cmdcomplete_str_to_type	usercmd.c	/^cmdcomplete_str_to_type(char_u *complete_str)$/;"	f
cmdfirstc	structs.h	/^    int		cmdfirstc;	\/\/ ':', '\/', '?', '=', '>' or NUL$/;"	m	struct:__anon190
cmdidx	ex_cmds.h	/^    cmdidx_T	cmdidx;		\/\/ the index for the command$/;"	m	struct:exarg
cmdidx_T	ex_cmds.h	/^typedef enum CMD_index cmdidx_T;$/;"	t	typeref:enum:CMD_index
cmdidxs1	ex_cmdidxs.h	/^static const unsigned short cmdidxs1[26] =$/;"	v
cmdidxs2	ex_cmdidxs.h	/^static const unsigned char cmdidxs2[26][26] =$/;"	v
cmdindent	structs.h	/^    int		cmdindent;	\/\/ number of spaces before cmdline$/;"	m	struct:__anon190
cmdlen	structs.h	/^    int		cmdlen;		\/\/ number of chars in command line$/;"	m	struct:__anon190
cmdline_at_end	ex_getln.c	/^cmdline_at_end(void)$/;"	f
cmdline_charsize	ex_getln.c	/^cmdline_charsize(int idx)$/;"	f	file:
cmdline_del	ex_getln.c	/^cmdline_del(int from)$/;"	f	file:
cmdline_getvcol_cursor	ex_getln.c	/^cmdline_getvcol_cursor(void)$/;"	f
cmdline_has_arabic	ex_getln.c	/^cmdline_has_arabic(int start, int len)$/;"	f	file:
cmdline_info_T	structs.h	/^} cmdline_info_T;$/;"	t	typeref:struct:__anon190
cmdline_init	ex_getln.c	/^cmdline_init(void)$/;"	f
cmdline_option_T	gui_gtk_x11.c	/^cmdline_option_T;$/;"	t	typeref:struct:__anon37	file:
cmdline_options	gui_gtk_x11.c	/^static const cmdline_option_T cmdline_options[] =$/;"	v	file:
cmdline_options	gui_x11.c	/^static XrmOptionDescRec cmdline_options[] =$/;"	v	file:
cmdline_overstrike	ex_getln.c	/^cmdline_overstrike(void)$/;"	f
cmdline_paste	ex_getln.c	/^cmdline_paste($/;"	f	file:
cmdline_paste_reg	register.c	/^cmdline_paste_reg($/;"	f
cmdline_paste_str	ex_getln.c	/^cmdline_paste_str(char_u *s, int literally)$/;"	f
cmdline_row	globals.h	/^EXTERN int	cmdline_row;$/;"	v
cmdline_star	globals.h	/^EXTERN int	cmdline_star INIT(= FALSE);	\/\/ cmdline is crypted$/;"	v
cmdlinep	ex_cmds.h	/^    char_u	**cmdlinep;	\/\/ pointer to pointer of allocated cmdline$/;"	m	struct:exarg
cmdmod	ex_docmd.c	/^static struct cmdmod$/;"	s	file:
cmdmod	globals.h	/^EXTERN cmdmod_T	cmdmod;			\/\/ Ex command modifiers$/;"	v
cmdmod_T	structs.h	/^} cmdmod_T;$/;"	t	typeref:struct:__anon191
cmdmods	ex_docmd.c	/^} cmdmods[] = {$/;"	v	typeref:struct:cmdmod	file:
cmdmsg_rl	globals.h	/^EXTERN int	cmdmsg_rl INIT(= FALSE);    \/\/ cmdline is drawn right to left$/;"	v
cmdname	ex_cmds.h	/^static struct cmdname$/;"	s
cmdnames	ex_cmds.h	/^} cmdnames[] =$/;"	v	typeref:struct:cmdname
cmdpos	structs.h	/^    int		cmdpos;		\/\/ current cursor position$/;"	m	struct:__anon190
cmdprompt	structs.h	/^    char_u	*cmdprompt;	\/\/ message in front of cmdline$/;"	m	struct:__anon190
cmds	autocmd.c	/^    AutoCmd	    *cmds;		\/\/ list of commands to do$/;"	m	struct:AutoPat	file:
cmds	sign.c	/^static char *cmds[] = {$/;"	v	file:
cmds_tofree	structs.h	/^    char_u	cmds_tofree[MAX_ARG_CMDS];   \/\/ commands that need free()$/;"	m	struct:__anon252
cmdspos	structs.h	/^    int		cmdspos;	\/\/ cursor column on screen$/;"	m	struct:__anon190
cmdsrv_main	main.c	/^cmdsrv_main($/;"	f	file:
cmdwin_result	globals.h	/^EXTERN int	cmdwin_result INIT(= 0); \/\/ result of cmdline window or 0$/;"	v
cmdwin_type	globals.h	/^EXTERN int	cmdwin_type INIT(= 0);	\/\/ type of cmdline window or 0$/;"	v
cmp_flags	option.h	/^EXTERN unsigned	cmp_flags;$/;"	v
code	if_xcmdsrv.c	/^    int	    code;	\/\/ Result Code. 0 is OK$/;"	m	struct:PendingCommand	file:
code	regexp_nfa.c	/^static char_u code[50];$/;"	v	file:
code	term.c	/^    char_u  *code;	    \/\/ terminal code (in allocated memory)$/;"	m	struct:termcode	file:
code	term.c	/^    int  code;		\/\/ value of KS_$/;"	m	struct:ks_tbl_s	file:
code0	gui_gtk_x11.c	/^    char_u code0;$/;"	m	struct:special_key	file:
code1	gui_gtk_x11.c	/^    char_u code1;$/;"	m	struct:special_key	file:
code_hdr	if_py_both.h	/^static const char	*code_hdr = "def " DOPY_FUNC "(line, linenr):\\n ";$/;"	v
code_hdr_len	if_py_both.h	/^static int		code_hdr_len = 30;$/;"	v
codepage	mbyte.c	/^{   char *name;		int prop;		int codepage;}$/;"	m	struct:__anon67	file:
col	gui.h	/^    int		col;		    \/\/ Current cursor column in GUI display$/;"	m	struct:Gui
col	quickfix.c	/^    int		col;$/;"	m	struct:__anon90	file:
col	structs.h	/^    colnr_T	col;	\/\/ column number$/;"	m	struct:__anon178
col	structs.h	/^    colnr_T	col;	\/\/ column number$/;"	m	struct:__anon179
col	structs.h	/^    colnr_T	col;	\/\/ column number$/;"	m	struct:__anon241
col2tcl	if_tcl.c	102;"	d	file:
col2vim	if_tcl.c	103;"	d	file:
col_adjust	mark.c	1207;"	d	file:
col_print	buffer.c	/^col_print($/;"	f
coladd	structs.h	/^    colnr_T	coladd; \/\/ extra virtual column$/;"	m	struct:__anon178
coladvance	misc2.c	/^coladvance(colnr_T wcol)$/;"	f
coladvance2	misc2.c	/^coladvance2($/;"	f	file:
coladvance_force	misc2.c	/^coladvance_force(colnr_T wcol)$/;"	f
coll_get_char	regexp_bt.c	/^coll_get_char(void)$/;"	f	file:
colnr_T	structs.h	/^typedef int		colnr_T;$/;"	t
colnr_T	vim.h	/^typedef int	colnr_T;		\/\/ column number type$/;"	t
coloncmd	netbeans.c	/^coloncmd(char *cmd, ...)$/;"	f	file:
color2index	terminal.c	/^color2index(VTermColor *color, int fg, int *boldp)$/;"	f	file:
color_approx	gui.h	/^    Bool	color_approx;	    \/\/ Some color was approximated$/;"	m	struct:Gui
color_name2handle	highlight.c	/^color_name2handle(char_u *name)$/;"	f
color_names	highlight.c	/^static char *(color_names[28]) = {$/;"	v	file:
color_numbers_16	highlight.c	/^static int color_numbers_16[28] = {0, 1, 2, 3,$/;"	v	file:
color_numbers_256	highlight.c	/^static int color_numbers_256[28] = {0, 4, 2, 6,$/;"	v	file:
color_numbers_8	highlight.c	/^static int color_numbers_8[28] = {0, 4, 2, 6,$/;"	v	file:
color_numbers_88	highlight.c	/^static int color_numbers_88[28] = {0, 4, 2, 6,$/;"	v	file:
color_to_rgba	gui_gtk_x11.c	/^color_to_rgba(guicolor_T color)$/;"	f	file:
column	hardcopy.c	/^    colnr_T	column;		    \/\/ byte column$/;"	m	struct:__anon47	file:
combine_stl_hlt	highlight.c	/^combine_stl_hlt($/;"	f	file:
commProperty	globals.h	/^EXTERN Atom	commProperty INIT(= None);$/;"	v
commWindow	globals.h	/^EXTERN Window	commWindow INIT(= None);$/;"	v
command	tag.c	/^    char_u	*command;	\/\/ first char of command$/;"	m	struct:tag_pointers	file:
command_complete	usercmd.c	/^} command_complete[] =$/;"	v	typeref:struct:__anon123	file:
command_count	ex_cmdidxs.h	/^static const int command_count = 568;$/;"	v
command_end	tag.c	/^    char_u	*command_end;	\/\/ first char after command$/;"	m	struct:tag_pointers	file:
command_height	window.c	/^command_height(void)$/;"	f
command_line_scan	main.c	/^command_line_scan(mparm_T *parmp)$/;"	f	file:
command_line_setup_choices	dosinst.c	/^command_line_setup_choices(int argc, char **argv)$/;"	f	file:
commandcmd	if_tcl.c	/^commandcmd($/;"	f	file:
commands	structs.h	/^    char_u	*commands[MAX_ARG_CMDS];     \/\/ commands from + or -c arg.$/;"	m	struct:__anon252
common_channel_read	channel.c	/^common_channel_read(typval_T *argvars, typval_T *rettv, int raw, int blob)$/;"	f	file:
common_function	evalfunc.c	/^common_function(typval_T *argvars, typval_T *rettv, int is_funcref)$/;"	f	file:
common_init	main.c	/^common_init(mparm_T *paramp)$/;"	f
common_type	vim9compile.c	/^common_type(type_T *type1, type_T *type2, type_T *dest)$/;"	f	file:
comp_botline	move.c	/^comp_botline(win_T *wp)$/;"	f	file:
comp_char_differs	screen.c	/^comp_char_differs(int off_from, int off_to)$/;"	f	file:
comp_col	screen.c	/^comp_col(void)$/;"	f
comp_textwidth	edit.c	/^comp_textwidth($/;"	f
compare_func_name	eval.c	/^compare_func_name(const void *s1, const void *s2)$/;"	f	file:
compat_all_enhancements	dosinst.c	/^    compat_all_enhancements$/;"	e	enum:__anon13	file:
compat_choice	dosinst.c	/^int	compat_choice = (int)compat_all_enhancements;$/;"	v
compat_choices	dosinst.c	/^char	*(compat_choices[]) =$/;"	v
compat_hashtab	evalvars.c	/^static hashtab_T	compat_hashtab;$/;"	v	file:
compat_some_enhancements	dosinst.c	/^    compat_some_enhancements,$/;"	e	enum:__anon13	file:
compat_text	dosinst.c	/^char	*compat_text = "- run Vim %s";$/;"	v
compat_vi	dosinst.c	/^    compat_vi = 1,$/;"	e	enum:__anon13	file:
compat_vim	dosinst.c	/^    compat_vim,$/;"	e	enum:__anon13	file:
compatible_set	option.c	/^compatible_set(void)$/;"	f	file:
compile_and_or	vim9compile.c	/^compile_and_or(char_u **arg, cctx_T *cctx, char *op)$/;"	f	file:
compile_arguments	vim9compile.c	/^compile_arguments(char_u **arg, cctx_T *cctx, int *argcount)$/;"	f	file:
compile_assignment	vim9compile.c	/^compile_assignment(char_u *arg, exarg_T *eap, cmdidx_T cmdidx, cctx_T *cctx)$/;"	f	file:
compile_block	vim9compile.c	/^compile_block(char_u *arg, cctx_T *cctx)$/;"	f	file:
compile_break	vim9compile.c	/^compile_break(char_u *arg, cctx_T *cctx)$/;"	f	file:
compile_call	vim9compile.c	/^compile_call(char_u **arg, size_t varlen, cctx_T *cctx, int argcount_init)$/;"	f	file:
compile_cap_prog	spell.c	/^compile_cap_prog(synblock_T *synblock)$/;"	f
compile_catch	vim9compile.c	/^compile_catch(char_u *arg, cctx_T *cctx UNUSED)$/;"	f	file:
compile_continue	vim9compile.c	/^compile_continue(char_u *arg, cctx_T *cctx)$/;"	f	file:
compile_def_function	vim9compile.c	/^compile_def_function(ufunc_T *ufunc, int set_return_type)$/;"	f
compile_dict	vim9compile.c	/^compile_dict(char_u **arg, cctx_T *cctx, int literal)$/;"	f	file:
compile_echo	vim9compile.c	/^compile_echo(char_u *arg, int with_white, cctx_T *cctx)$/;"	f	file:
compile_else	vim9compile.c	/^compile_else(char_u *arg, cctx_T *cctx)$/;"	f	file:
compile_elseif	vim9compile.c	/^compile_elseif(char_u *arg, cctx_T *cctx)$/;"	f	file:
compile_endblock	vim9compile.c	/^compile_endblock(cctx_T *cctx)$/;"	f	file:
compile_endfor	vim9compile.c	/^compile_endfor(char_u *arg, cctx_T *cctx)$/;"	f	file:
compile_endif	vim9compile.c	/^compile_endif(char_u *arg, cctx_T *cctx)$/;"	f	file:
compile_endtry	vim9compile.c	/^compile_endtry(char_u *arg, cctx_T *cctx)$/;"	f	file:
compile_endwhile	vim9compile.c	/^compile_endwhile(char_u *arg, cctx_T *cctx)$/;"	f	file:
compile_execute	vim9compile.c	/^compile_execute(char_u *arg, cctx_T *cctx)$/;"	f	file:
compile_expr1	vim9compile.c	/^compile_expr1(char_u **arg,  cctx_T *cctx)$/;"	f	file:
compile_expr2	vim9compile.c	/^compile_expr2(char_u **arg, cctx_T *cctx)$/;"	f	file:
compile_expr3	vim9compile.c	/^compile_expr3(char_u **arg, cctx_T *cctx)$/;"	f	file:
compile_expr4	vim9compile.c	/^compile_expr4(char_u **arg, cctx_T *cctx)$/;"	f	file:
compile_expr5	vim9compile.c	/^compile_expr5(char_u **arg, cctx_T *cctx)$/;"	f	file:
compile_expr6	vim9compile.c	/^compile_expr6(char_u **arg, cctx_T *cctx)$/;"	f	file:
compile_expr7	vim9compile.c	/^compile_expr7(char_u **arg, cctx_T *cctx)$/;"	f	file:
compile_fill_jump_to_end	vim9compile.c	/^compile_fill_jump_to_end(endlabel_T **el, cctx_T *cctx)$/;"	f	file:
compile_finally	vim9compile.c	/^compile_finally(char_u *arg, cctx_T *cctx)$/;"	f	file:
compile_for	vim9compile.c	/^compile_for(char_u *arg, cctx_T *cctx)$/;"	f	file:
compile_get_env	vim9compile.c	/^compile_get_env(char_u **arg, cctx_T *cctx)$/;"	f	file:
compile_get_option	vim9compile.c	/^compile_get_option(char_u **arg, cctx_T *cctx)$/;"	f	file:
compile_get_register	vim9compile.c	/^compile_get_register(char_u **arg, cctx_T *cctx)$/;"	f	file:
compile_if	vim9compile.c	/^compile_if(char_u *arg, cctx_T *cctx)$/;"	f	file:
compile_import	vim9compile.c	/^compile_import(char_u *arg, cctx_T *cctx)$/;"	f	file:
compile_jump_to_end	vim9compile.c	/^compile_jump_to_end(endlabel_T **el, jumpwhen_T when, cctx_T *cctx)$/;"	f	file:
compile_lambda	vim9compile.c	/^compile_lambda(char_u **arg, cctx_T *cctx)$/;"	f	file:
compile_lambda_call	vim9compile.c	/^compile_lambda_call(char_u **arg, cctx_T *cctx)$/;"	f	file:
compile_leader	vim9compile.c	/^compile_leader(cctx_T *cctx, char_u *start, char_u *end)$/;"	f	file:
compile_list	vim9compile.c	/^compile_list(char_u **arg, cctx_T *cctx)$/;"	f	file:
compile_load	vim9compile.c	/^compile_load(char_u **arg, char_u *end_arg, cctx_T *cctx, int error)$/;"	f	file:
compile_load_scriptvar	vim9compile.c	/^compile_load_scriptvar($/;"	f	file:
compile_return	vim9compile.c	/^compile_return(char_u *arg, int set_return_type, cctx_T *cctx)$/;"	f	file:
compile_subscript	vim9compile.c	/^compile_subscript($/;"	f	file:
compile_throw	vim9compile.c	/^compile_throw(char_u *arg, cctx_T *cctx UNUSED)$/;"	f	file:
compile_try	vim9compile.c	/^compile_try(char_u *arg, cctx_T *cctx)$/;"	f	file:
compile_while	vim9compile.c	/^compile_while(char_u *arg, cctx_T *cctx)$/;"	f	file:
compitem_S	spellfile.c	/^typedef struct compitem_S$/;"	s	file:
compitem_T	spellfile.c	/^} compitem_T;$/;"	t	typeref:struct:compitem_S	file:
compl_S	insexpand.c	/^struct compl_S$/;"	s	file:
compl_T	insexpand.c	/^typedef struct compl_S compl_T;$/;"	t	typeref:struct:compl_S	file:
compl_busy	edit.c	/^static int	compl_busy = FALSE;$/;"	v	file:
compl_col	insexpand.c	/^static colnr_T	  compl_col = 0;	    \/\/ column where the text starts$/;"	v	file:
compl_cont_mode	insexpand.c	/^static int	  compl_cont_mode = 0;$/;"	v	file:
compl_cont_status	globals.h	/^EXTERN int	compl_cont_status INIT(= 0);$/;"	v
compl_curr_match	insexpand.c	/^static compl_T    *compl_curr_match = NULL;$/;"	v	file:
compl_direction	insexpand.c	/^static int	  compl_direction = FORWARD;$/;"	v	file:
compl_enter_selects	insexpand.c	/^static int	  compl_enter_selects = FALSE;$/;"	v	file:
compl_first_match	insexpand.c	/^static compl_T    *compl_first_match = NULL;$/;"	v	file:
compl_get_longest	insexpand.c	/^static int	  compl_get_longest = FALSE;	\/\/ put longest common string$/;"	v	file:
compl_interrupted	insexpand.c	/^static int	  compl_interrupted = FALSE;$/;"	v	file:
compl_leader	insexpand.c	/^static char_u	  *compl_leader = NULL;$/;"	v	file:
compl_length	globals.h	/^EXTERN int	compl_length INIT(= 0);$/;"	v
compl_match_array	insexpand.c	/^static pumitem_T *compl_match_array = NULL;$/;"	v	file:
compl_match_arraysize	insexpand.c	/^static int compl_match_arraysize;$/;"	v	file:
compl_matches	insexpand.c	/^static int	  compl_matches = 0;$/;"	v	file:
compl_no_insert	insexpand.c	/^static int	  compl_no_insert = FALSE;	\/\/ FALSE: select & insert$/;"	v	file:
compl_no_select	insexpand.c	/^static int	  compl_no_select = FALSE;	\/\/ FALSE: select & insert$/;"	v	file:
compl_old_match	insexpand.c	/^static compl_T    *compl_old_match = NULL;$/;"	v	file:
compl_opt_refresh_always	insexpand.c	/^static int	  compl_opt_refresh_always = FALSE;$/;"	v	file:
compl_opt_suppress_empty	insexpand.c	/^static int	  compl_opt_suppress_empty = FALSE;$/;"	v	file:
compl_orig_text	insexpand.c	/^static char_u	  *compl_orig_text = NULL;  \/\/ text as it was before$/;"	v	file:
compl_pattern	insexpand.c	/^static char_u	  *compl_pattern = NULL;$/;"	v	file:
compl_pending	insexpand.c	/^static int	  compl_pending = 0;	    \/\/ > 1 for postponed CTRL-N$/;"	v	file:
compl_restarting	insexpand.c	/^static int	  compl_restarting = FALSE;	\/\/ don't insert match$/;"	v	file:
compl_shown_match	insexpand.c	/^static compl_T    *compl_shown_match = NULL;$/;"	v	file:
compl_shows_dir	insexpand.c	/^static int	  compl_shows_dir = FORWARD;$/;"	v	file:
compl_started	insexpand.c	/^static int	  compl_started = FALSE;$/;"	v	file:
compl_startpos	insexpand.c	/^static pos_T	  compl_startpos;$/;"	v	file:
compl_used_match	insexpand.c	/^static int	  compl_used_match;$/;"	v	file:
compl_was_interrupted	insexpand.c	/^static int	  compl_was_interrupted = FALSE;$/;"	v	file:
compl_xp	insexpand.c	/^static expand_T	  compl_xp;$/;"	v	file:
completeopt_was_set	insexpand.c	/^completeopt_was_set(void)$/;"	f
compositeWidgetClass	gui_gtk_vms.h	668;"	d
compound_text_atom	ui.c	/^static Atom	compound_text_atom;$/;"	v	file:
compress_added	spellfile.c	/^static long compress_added = 500000;	\/\/ word count$/;"	v	file:
compress_inc	spellfile.c	/^static long compress_inc = 100;		\/\/ memory \/ SBLOCKSIZE$/;"	v	file:
compress_start	spellfile.c	/^static long compress_start = 30000;	\/\/ memory \/ SBLOCKSIZE$/;"	v	file:
compute_buffer_local_count	ex_docmd.c	/^compute_buffer_local_count(int addr_type, int lnum, int offset)$/;"	f	file:
compute_cmdrow	ex_getln.c	/^compute_cmdrow(void)$/;"	f
compute_foldcolumn	screen.c	/^compute_foldcolumn(win_T *wp, int col)$/;"	f
concat_fnames	filepath.c	/^concat_fnames(char_u *fname1, char_u *fname2, int sep)$/;"	f
concat_history	viminfo.c	/^concat_history(int type)$/;"	f	file:
concat_str	misc1.c	/^concat_str(char_u *str1, char_u *str2)$/;"	f
conceal_char	structs.h	/^    int		conceal_char; \/\/ cchar for Conceal highlighting$/;"	m	struct:matchitem
conceal_check_cursor_line	screen.c	/^conceal_check_cursor_line(void)$/;"	f
conceal_cursor_line	screen.c	/^conceal_cursor_line(win_T *wp)$/;"	f
confirm	structs.h	/^    int		confirm;		\/\/ TRUE to invoke yes\/no dialog$/;"	m	struct:__anon191
confirm	uninstall.c	/^confirm(void)$/;"	f	file:
confirm_msg	message.c	/^static char_u	*confirm_msg = NULL;		\/\/ ":confirm" message$/;"	v	file:
confirm_msg_tail	message.c	/^static char_u	*confirm_msg_tail;		\/\/ tail of confirm_msg$/;"	v	file:
confirm_msg_used	message.c	/^static int	confirm_msg_used = FALSE;	\/\/ displaying confirm_msg$/;"	v	file:
conpty_stable	os_win32.c	/^static int conpty_stable = 0;$/;"	v	file:
conpty_term_and_job_init	terminal.c	/^conpty_term_and_job_init($/;"	f	file:
conpty_term_report_winsize	terminal.c	/^conpty_term_report_winsize(term_T *term, int rows, int cols)$/;"	f	file:
conpty_type	os_win32.c	/^static int conpty_type = 0;$/;"	v	file:
conpty_working	os_win32.c	/^static int conpty_working = 0;$/;"	v	file:
cont_in_list	structs.h	/^    short	*cont_in_list;	\/\/ cont.in group IDs, if non-zero$/;"	m	struct:sp_syn
cont_in_list	syntax.c	/^    short	*cont_in_list;	\/\/ group IDs for "containedin" argument$/;"	m	struct:__anon115	file:
cont_list	syntax.c	/^    short	*cont_list;	\/\/ group IDs for "contains" argument$/;"	m	struct:__anon115	file:
container	gui_gtk_f.h	/^    GtkContainer container;$/;"	m	struct:_GtkForm
context	sound.c	/^static ca_context   *context = NULL;$/;"	v	file:
contextMenu	gui_mac.c	/^static MenuRef contextMenu = NULL;$/;"	v	file:
context_sha256_T	structs.h	/^} context_sha256_T;$/;"	t	typeref:struct:__anon250
conthere	quickfix.c	/^    int		    conthere;	\/\/ %> used$/;"	m	struct:efm_S	file:
control_console_color_rgb	os_win32.c	/^control_console_color_rgb(void)$/;"	f
conv	scriptfile.c	/^    vimconv_T	conv;		\/\/ type of conversion$/;"	m	struct:source_cookie	file:
convchar	quickfix.c	/^    char_u	convchar;$/;"	m	struct:fmtpattern	file:
convertStruct	mbyte.c	/^} convertStruct;$/;"	t	typeref:struct:__anon69	file:
convert_dl	if_py_both.h	/^convert_dl(PyObject *obj, typval_T *tv,$/;"	f
convert_filter	gui_w32.c	/^convert_filter(char_u *s)$/;"	f	file:
convert_filterW	gui_w32.c	/^convert_filterW(char_u *s)$/;"	f	file:
convert_hash2dict	if_ruby.c	/^convert_hash2dict(VALUE key, VALUE val, VALUE arg)$/;"	f	file:
convert_input	mbyte.c	/^convert_input(char_u *ptr, int len, int maxlen)$/;"	f
convert_input_safe	mbyte.c	/^convert_input_safe($/;"	f
convert_localized_message	gui_gtk.c	/^convert_localized_message(char_u **buffer, const char *message)$/;"	f	file:
convert_setup	mbyte.c	/^convert_setup(vimconv_T *vcp, char_u *from, char_u *to)$/;"	f
convert_setup_ext	mbyte.c	/^convert_setup_ext($/;"	f
cookie	ex_cmds.h	/^    void	*cookie;	\/\/ argument for getline()$/;"	m	struct:exarg
cookie	ex_docmd.c	/^    void	*cookie;$/;"	m	struct:loop_cookie	file:
copyFoldingState	fold.c	/^copyFoldingState(win_T *wp_from, win_T *wp_to)$/;"	f
copy_callback	channel.c	/^copy_callback(callback_T *dest, callback_T *src)$/;"	f	file:
copy_char	message.c	/^copy_char($/;"	f	file:
copy_id_list	syntax.c	/^copy_id_list(short *list)$/;"	f	file:
copy_indent	indent.c	/^copy_indent(int size, char_u *src)$/;"	f
copy_infostreams	os_win32.c	/^copy_infostreams(char_u *from, char_u *to)$/;"	f	file:
copy_jumplist	mark.c	/^copy_jumplist(win_T *from, win_T *to)$/;"	f
copy_loclist	quickfix.c	/^copy_loclist(qf_list_T *from_qfl, qf_list_T *to_qfl)$/;"	f	file:
copy_loclist_entries	quickfix.c	/^copy_loclist_entries(qf_list_T *from_qfl, qf_list_T *to_qfl)$/;"	f	file:
copy_loclist_stack	quickfix.c	/^copy_loclist_stack(win_T *from, win_T *to)$/;"	f
copy_nonerror_line	quickfix.c	/^copy_nonerror_line(char_u *linebuf, int linelen, qffields_T *fields)$/;"	f	file:
copy_option_part	misc2.c	/^copy_option_part($/;"	f
copy_pim	regexp_nfa.c	/^copy_pim(nfa_pim_T *to, nfa_pim_T *from)$/;"	f	file:
copy_redo	getchar.c	/^copy_redo(int old_redo)$/;"	f	file:
copy_sub	regexp_nfa.c	/^copy_sub(regsub_T *to, regsub_T *from)$/;"	f	file:
copy_sub_off	regexp_nfa.c	/^copy_sub_off(regsub_T *to, regsub_T *from)$/;"	f	file:
copy_substream	os_win32.c	/^copy_substream(HANDLE sh, void *context, WCHAR *to, WCHAR *substream, long len)$/;"	f	file:
copy_text_attr	drawscreen.c	/^copy_text_attr($/;"	f	file:
copy_tv	eval.c	/^copy_tv(typval_T *from, typval_T *to)$/;"	f
copy_viminfo_marks	viminfo.c	/^copy_viminfo_marks($/;"	f	file:
copy_winopt	option.c	/^copy_winopt(winopt_T *from, winopt_T *to)$/;"	f
copy_yank_reg	register.c	/^copy_yank_reg(yankreg_T *reg)$/;"	f	file:
copy_ze_off	regexp_nfa.c	/^copy_ze_off(regsub_T *to, regsub_T *from)$/;"	f	file:
core	gui_at_sb.h	/^    CorePart		core;$/;"	m	struct:_ScrollbarRec
core	gui_xmebwp.h	/^    CorePart core;$/;"	m	struct:_XmEnhancedButtonRec
core_class	gui_at_sb.h	/^    CoreClassPart		core_class;$/;"	m	struct:_ScrollbarClassRec
core_class	gui_xmebwp.h	/^    CoreClassPart core_class;$/;"	m	struct:__anon146
corr_ind_maxparen	cindent.c	/^corr_ind_maxparen(pos_T *startpos)$/;"	f	file:
correct_cmdspos	ex_getln.c	/^correct_cmdspos(int idx, int cells)$/;"	f	file:
correct_range	ex_docmd.c	/^correct_range(exarg_T *eap)$/;"	f	file:
corruption_error	undo.c	/^corruption_error(char *mesg, char_u *file_name)$/;"	f	file:
count	gui_at_sb.c	/^    int count;$/;"	m	struct:EventData	file:
count	regexp_bt.c	/^    long	count;$/;"	m	struct:regstar_S	file:
count	regexp_nfa.c	/^    int		count;$/;"	m	struct:__anon107	file:
count	structs.h	/^    long	count;		\/\/ nr of times used$/;"	m	struct:__anon235
count	syntax.c	/^    int		count;$/;"	m	struct:__anon117	file:
count0	structs.h	/^    long	count0;		\/\/ count before command, default 0$/;"	m	struct:cmdarg_S
count1	structs.h	/^    long	count1;		\/\/ count before command, default 1$/;"	m	struct:cmdarg_S
count_and_decode_uri_list	gui_gtk_x11.c	/^count_and_decode_uri_list(char_u *out, char_u *raw, int len)$/;"	f	file:
count_changed_buffers	netbeans.c	/^count_changed_buffers(void)$/;"	f	file:
count_cluster_cells	gui_gtk_x11.c	/^count_cluster_cells(char_u *s, PangoItem *item,$/;"	f	file:
count_common_word	spell.c	/^count_common_word($/;"	f
count_syllables	spell.c	/^count_syllables(slang_T *slang, char_u *word)$/;"	f	file:
cp_flags	insexpand.c	/^    int		cp_flags;	\/\/ CP_ values$/;"	m	struct:compl_S	file:
cp_fname	insexpand.c	/^    char_u	*cp_fname;	\/\/ file containing the match, allocated when$/;"	m	struct:compl_S	file:
cp_next	insexpand.c	/^    compl_T	*cp_next;$/;"	m	struct:compl_S	file:
cp_number	insexpand.c	/^    int		cp_number;	\/\/ sequence number$/;"	m	struct:compl_S	file:
cp_prev	insexpand.c	/^    compl_T	*cp_prev;$/;"	m	struct:compl_S	file:
cp_str	insexpand.c	/^    char_u	*cp_str;	\/\/ matched text$/;"	m	struct:compl_S	file:
cp_text	insexpand.c	/^    char_u	*(cp_text[CPT_COUNT]);	\/\/ text for the menu$/;"	m	struct:compl_S	file:
cp_user_data	insexpand.c	/^    typval_T	cp_user_data;$/;"	m	struct:compl_S	file:
cpf_argcount	vim9.h	/^    int	    cpf_argcount;   \/\/ number of arguments on top of stack$/;"	m	struct:__anon263
cpf_top	vim9.h	/^    int	    cpf_top;	    \/\/ when TRUE partial is above the arguments$/;"	m	struct:__anon263
cpfunc_T	vim9.h	/^} cpfunc_T;$/;"	t	typeref:struct:__anon263
cpp_baseclass_cache_T	cindent.c	/^} cpp_baseclass_cache_T;$/;"	t	typeref:struct:__anon6	file:
cq_callback	structs.h	/^    callback_T	cq_callback;$/;"	m	struct:cbq_S
cq_next	structs.h	/^    cbq_T	*cq_next;$/;"	m	struct:cbq_S
cq_prev	structs.h	/^    cbq_T	*cq_prev;$/;"	m	struct:cbq_S
cq_seq_nr	structs.h	/^    int		cq_seq_nr;$/;"	m	struct:cbq_S
crc_32_table	crypt_zip.c	/^static u32_T crc_32_table[256];$/;"	v	file:
createBalloonEvalWindow	gui_beval.c	/^createBalloonEvalWindow(BalloonEval *beval)$/;"	f	file:
createXpmImages	gui_athena.c	/^createXpmImages(char_u *path, char **xpm, Pixmap *sen)$/;"	f	file:
create_blank_pointer	gui_gtk_x11.c	/^create_blank_pointer(void)$/;"	f	file:
create_conin	os_win32.c	/^create_conin(void)$/;"	f	file:
create_image_button	gui_gtk.c	/^create_image_button(const char *stock_id UNUSED,$/;"	f	file:
create_menu_icon	gui_gtk.c	/^create_menu_icon(vimmenu_T *menu, GtkIconSize icon_size)$/;"	f	file:
create_message_dialog	gui_gtk.c	/^create_message_dialog(int type, char_u *title, char_u *message)$/;"	f	file:
create_pipe_pair	os_win32.c	/^create_pipe_pair(HANDLE handles[2])$/;"	f	file:
create_pixmap_label	gui_motif.c	/^create_pixmap_label($/;"	f	file:
create_pty_only	terminal.c	/^create_pty_only(term_T *term, jobopt_T *opt)$/;"	f	file:
create_pty_only	terminal.c	/^create_pty_only(term_T *term, jobopt_T *options)$/;"	f	file:
create_shortcut	dosinst.c	/^create_shortcut($/;"	f
create_tabline_menu	gui_gtk_x11.c	/^create_tabline_menu(void)$/;"	f	file:
create_timer	time.c	/^create_timer(long msec, int repeat)$/;"	f
create_type_T	popupwin.c	/^} create_type_T;$/;"	t	typeref:enum:__anon85	file:
create_vterm	terminal.c	/^create_vterm(term_T *term, int rows, int cols)$/;"	f	file:
create_windows	main.c	/^create_windows(mparm_T *parmp UNUSED)$/;"	f	file:
crnl_to_nl	winclip.c	/^crnl_to_nl(const char_u *str, int *size)$/;"	f	file:
crv_status	term.c	/^static termrequest_T crv_status = TERMREQUEST_INIT;$/;"	v	file:
crypt_append_msg	crypt.c	/^crypt_append_msg($/;"	f
crypt_blowfish_decode	blowfish.c	/^crypt_blowfish_decode($/;"	f
crypt_blowfish_encode	blowfish.c	/^crypt_blowfish_encode($/;"	f
crypt_blowfish_init	blowfish.c	/^crypt_blowfish_init($/;"	f
crypt_check_current_method	crypt.c	/^crypt_check_current_method(void)$/;"	f
crypt_check_method	crypt.c	/^crypt_check_method(int method)$/;"	f
crypt_create	crypt.c	/^crypt_create($/;"	f
crypt_create_for_writing	crypt.c	/^crypt_create_for_writing($/;"	f
crypt_create_from_file	crypt.c	/^crypt_create_from_file(FILE *fp, char_u *key)$/;"	f
crypt_create_from_header	crypt.c	/^crypt_create_from_header($/;"	f
crypt_decode_alloc	crypt.c	/^crypt_decode_alloc($/;"	f
crypt_decode_inplace	crypt.c	/^crypt_decode_inplace($/;"	f
crypt_encode	crypt.c	/^crypt_encode($/;"	f
crypt_encode_alloc	crypt.c	/^crypt_encode_alloc($/;"	f
crypt_encode_inplace	crypt.c	/^crypt_encode_inplace($/;"	f
crypt_free_key	crypt.c	/^crypt_free_key(char_u *key)$/;"	f
crypt_free_state	crypt.c	/^crypt_free_state(cryptstate_T *state)$/;"	f
crypt_get_header_len	crypt.c	/^crypt_get_header_len(int method_nr)$/;"	f
crypt_get_key	crypt.c	/^crypt_get_key($/;"	f
crypt_get_method_nr	crypt.c	/^crypt_get_method_nr(buf_T *buf)$/;"	f
crypt_magic_head	crypt.c	/^static char	crypt_magic_head[] = "VimCrypt~";$/;"	v	file:
crypt_method_nr_from_magic	crypt.c	/^crypt_method_nr_from_magic(char *ptr, int len)$/;"	f
crypt_method_nr_from_name	crypt.c	/^crypt_method_nr_from_name(char_u *name)$/;"	f
crypt_self_test	crypt.c	/^crypt_self_test(void)$/;"	f
crypt_set_cm_option	crypt.c	/^crypt_set_cm_option(buf_T *buf, int method_nr)$/;"	f
crypt_whole_undofile	crypt.c	/^crypt_whole_undofile(int method_nr)$/;"	f
crypt_works_inplace	crypt.c	/^crypt_works_inplace(cryptstate_T *state)$/;"	f
crypt_zip_decode	crypt_zip.c	/^crypt_zip_decode($/;"	f
crypt_zip_encode	crypt_zip.c	/^crypt_zip_encode($/;"	f
crypt_zip_init	crypt_zip.c	/^crypt_zip_init($/;"	f
cryptmethod_T	crypt.c	/^} cryptmethod_T;$/;"	t	typeref:struct:__anon7	file:
cryptmethods	crypt.c	/^static cryptmethod_T cryptmethods[CRYPT_M_COUNT] = {$/;"	v	file:
cryptstate_T	structs.h	/^} cryptstate_T;$/;"	t	typeref:struct:__anon236
cryptxt	blowfish.c	/^    char_u   cryptxt[9];$/;"	m	struct:__anon3	file:
cs_add	if_cscope.c	/^cs_add(exarg_T *eap UNUSED)$/;"	f	file:
cs_add_common	if_cscope.c	/^cs_add_common($/;"	f	file:
cs_check_for_connections	if_cscope.c	/^cs_check_for_connections(void)$/;"	f	file:
cs_check_for_tags	if_cscope.c	/^cs_check_for_tags(void)$/;"	f	file:
cs_cmds	if_cscope.c	/^static cscmd_T	    cs_cmds[] =$/;"	v	file:
cs_cnt_connections	if_cscope.c	/^cs_cnt_connections(void)$/;"	f	file:
cs_cnt_matches	if_cscope.c	/^cs_cnt_matches(int idx)$/;"	f	file:
cs_connection	if_cscope.c	/^cs_connection(int num, char_u *dbpath, char_u *ppath)$/;"	f	file:
cs_create_cmd	if_cscope.c	/^cs_create_cmd(char *csoption, char *pattern)$/;"	f	file:
cs_create_connection	if_cscope.c	/^cs_create_connection(int i)$/;"	f	file:
cs_emsg_silent_list	structs.h	/^    eslist_T	*cs_emsg_silent_list;	\/\/ saved values of "emsg_silent"$/;"	m	struct:__anon192
cs_end	if_cscope.c	/^cs_end(void)$/;"	f
cs_exception	structs.h	887;"	d
cs_fgets	if_cscope.c	/^cs_fgets(char_u *buf, int size)$/;"	f
cs_file_results	if_cscope.c	/^cs_file_results(FILE *f, int *nummatches_a)$/;"	f	file:
cs_fill_results	if_cscope.c	/^cs_fill_results($/;"	f	file:
cs_find	if_cscope.c	/^cs_find(exarg_T *eap)$/;"	f	file:
cs_find_common	if_cscope.c	/^cs_find_common($/;"	f	file:
cs_flags	structs.h	/^    short	cs_flags[CSTACK_LEN];	\/\/ CSF_ flags$/;"	m	struct:__anon192
cs_forinfo	structs.h	/^    void	*cs_forinfo[CSTACK_LEN]; \/\/ info used by ":for"$/;"	m	struct:__anon192
cs_free_tags	if_cscope.c	/^cs_free_tags(void)$/;"	f
cs_help	if_cscope.c	/^cs_help(exarg_T *eap UNUSED)$/;"	f	file:
cs_idx	structs.h	/^    int		cs_idx;			\/\/ current entry, or -1 if none$/;"	m	struct:__anon192
cs_insert_filelist	if_cscope.c	/^cs_insert_filelist($/;"	f	file:
cs_kill	if_cscope.c	/^cs_kill(exarg_T *eap UNUSED)$/;"	f	file:
cs_kill_execute	if_cscope.c	/^cs_kill_execute($/;"	f	file:
cs_lflags	structs.h	/^    char	cs_lflags;		\/\/ loop flags: CSL_ flags$/;"	m	struct:__anon192
cs_line	structs.h	/^    int		cs_line[CSTACK_LEN];	\/\/ line nr of ":while"\/":for" line$/;"	m	struct:__anon192
cs_lookup_cmd	if_cscope.c	/^cs_lookup_cmd(exarg_T *eap)$/;"	f	file:
cs_looplevel	structs.h	/^    int		cs_looplevel;		\/\/ nr of nested ":while"s and ":for"s$/;"	m	struct:__anon192
cs_make_vim_style_matches	if_cscope.c	/^cs_make_vim_style_matches($/;"	f	file:
cs_manage_matches	if_cscope.c	/^cs_manage_matches($/;"	f	file:
cs_parse_results	if_cscope.c	/^cs_parse_results($/;"	f	file:
cs_pathcomponents	if_cscope.c	/^cs_pathcomponents(char *path)$/;"	f	file:
cs_pend	structs.h	/^    }		cs_pend;$/;"	m	struct:__anon192	typeref:union:__anon192::__anon193
cs_pending	structs.h	/^    char	cs_pending[CSTACK_LEN];	\/\/ CSTP_: what's pending in ":finally"$/;"	m	struct:__anon192
cs_print_tags	if_cscope.c	/^cs_print_tags(void)$/;"	f
cs_print_tags_priv	if_cscope.c	/^cs_print_tags_priv(char **matches, char **cntxts, int num_matches)$/;"	f	file:
cs_read_prompt	if_cscope.c	/^cs_read_prompt(int i)$/;"	f	file:
cs_reading_emsg	if_cscope.c	/^cs_reading_emsg($/;"	f	file:
cs_release_csp	if_cscope.c	/^cs_release_csp(int i, int freefnpp)$/;"	f	file:
cs_reset	if_cscope.c	/^cs_reset(exarg_T *eap UNUSED)$/;"	f	file:
cs_resolve_file	if_cscope.c	/^cs_resolve_file(int i, char *name)$/;"	f	file:
cs_rettv	structs.h	886;"	d
cs_show	if_cscope.c	/^cs_show(exarg_T *eap UNUSED)$/;"	f	file:
cs_stat_emsg	if_cscope.c	/^cs_stat_emsg(char *fname)$/;"	f	file:
cs_trylevel	structs.h	/^    int		cs_trylevel;		\/\/ nr of nested ":try"s$/;"	m	struct:__anon192
cs_usage_msg	if_cscope.c	/^cs_usage_msg(csid_e x)$/;"	f	file:
cscmd_T	if_cscope.h	/^} cscmd_T;$/;"	t	typeref:struct:__anon147
csh_like_shell	misc2.c	/^csh_like_shell(void)$/;"	f
csi	if_cscope.h	/^typedef struct csi {$/;"	s
csid_e	if_cscope.h	/^typedef enum { Add, Find, Help, Kill, Reset, Show } csid_e;$/;"	t	typeref:enum:__anon148
csinfo	if_cscope.c	/^static csinfo_T *   csinfo = NULL;$/;"	v	file:
csinfo_T	if_cscope.h	/^} csinfo_T;$/;"	t	typeref:struct:csi
csinfo_size	if_cscope.c	/^static int	    csinfo_size = 0;	\/\/ number of items allocated in$/;"	v	file:
csp_ex	structs.h	/^	void	*csp_ex[CSTACK_LEN];	\/\/ exception for pending throw$/;"	m	union:__anon192::__anon193
csp_rv	structs.h	/^	void	*csp_rv[CSTACK_LEN];	\/\/ return typeval for pending return$/;"	m	union:__anon192::__anon193
cstack	ex_cmds.h	/^    cstack_T	*cstack;	\/\/ condition stack for ":if" etc.$/;"	m	struct:exarg
cstack_T	structs.h	/^} cstack_T;$/;"	t	typeref:struct:__anon192
cstrchr	regexp.c	/^cstrchr(char_u *s, int c)$/;"	f	file:
cstrncmp	regexp.c	/^cstrncmp(char_u *s1, char_u *s2, int *n)$/;"	f	file:
ct_off	vim9.h	/^    int		ct_off;	    \/\/ offset in stack, -1 is bottom$/;"	m	struct:__anon271
ct_type	vim9.h	/^    vartype_T	ct_type;$/;"	m	struct:__anon271
cterm	structs.h	/^	} cterm;$/;"	m	union:attr_entry::__anon196	typeref:struct:attr_entry::__anon196::__anon198
cterm_attr_table	highlight.c	/^static garray_T	cterm_attr_table = {0, 0, 0, 0, NULL};$/;"	v	file:
cterm_color2rgb	term.c	/^cterm_color2rgb(int nr, char_u *r, char_u *g, char_u *b, char_u *ansi_idx)$/;"	f
cterm_color2vterm	terminal.c	/^cterm_color2vterm(int nr, VTermColor *rgb)$/;"	f	file:
cterm_color_16	hardcopy.c	/^static const long_u  cterm_color_16[16] =$/;"	v	file:
cterm_color_8	hardcopy.c	/^static const long_u  cterm_color_8[8] =$/;"	v	file:
cterm_normal_bg_color	globals.h	/^EXTERN int	cterm_normal_bg_color INIT(= 0);$/;"	v
cterm_normal_bg_gui_color	globals.h	/^EXTERN guicolor_T cterm_normal_bg_gui_color INIT(= INVALCOLOR);$/;"	v
cterm_normal_fg_bold	globals.h	/^EXTERN int	cterm_normal_fg_bold INIT(= 0);$/;"	v
cterm_normal_fg_color	globals.h	/^EXTERN int	cterm_normal_fg_color INIT(= 0);$/;"	v
cterm_normal_fg_gui_color	globals.h	/^EXTERN guicolor_T cterm_normal_fg_gui_color INIT(= INVALCOLOR);$/;"	v
ctermtoxterm	os_win32.c	/^ctermtoxterm($/;"	f	file:
ctrl_break_was_pressed	globals.h	/^EXTERN int ctrl_break_was_pressed INIT(= FALSE);$/;"	v
ctrl_c_interrupts	globals.h	/^EXTERN int	ctrl_c_interrupts INIT(= TRUE);	\/\/ CTRL-C sets got_int$/;"	v
ctrl_to_raw_c	terminal.c	/^ctrl_to_raw_c(int c)$/;"	f	file:
ctrl_x_mode	insexpand.c	/^static int	  ctrl_x_mode = CTRL_X_NORMAL;$/;"	v	file:
ctrl_x_mode_cmdline	insexpand.c	/^int ctrl_x_mode_cmdline(void) { return ctrl_x_mode == CTRL_X_CMDLINE; }$/;"	f
ctrl_x_mode_dictionary	insexpand.c	/^int ctrl_x_mode_dictionary(void) { return ctrl_x_mode == CTRL_X_DICTIONARY; }$/;"	f
ctrl_x_mode_files	insexpand.c	/^int ctrl_x_mode_files(void) { return ctrl_x_mode == CTRL_X_FILES; }$/;"	f
ctrl_x_mode_function	insexpand.c	/^int ctrl_x_mode_function(void) { return ctrl_x_mode == CTRL_X_FUNCTION; }$/;"	f
ctrl_x_mode_line_or_eval	insexpand.c	/^int ctrl_x_mode_line_or_eval(void) {$/;"	f
ctrl_x_mode_names	insexpand.c	/^static char *ctrl_x_mode_names[] = {$/;"	v	file:
ctrl_x_mode_none	insexpand.c	/^int ctrl_x_mode_none(void) { return ctrl_x_mode == 0; }$/;"	f
ctrl_x_mode_normal	insexpand.c	/^int ctrl_x_mode_normal(void) { return ctrl_x_mode == CTRL_X_NORMAL; }$/;"	f
ctrl_x_mode_not_default	insexpand.c	/^ctrl_x_mode_not_default(void)$/;"	f
ctrl_x_mode_not_defined_yet	insexpand.c	/^ctrl_x_mode_not_defined_yet(void)$/;"	f
ctrl_x_mode_omni	insexpand.c	/^int ctrl_x_mode_omni(void) { return ctrl_x_mode == CTRL_X_OMNI; }$/;"	f
ctrl_x_mode_path_defines	insexpand.c	/^int ctrl_x_mode_path_defines(void) {$/;"	f
ctrl_x_mode_path_patterns	insexpand.c	/^int ctrl_x_mode_path_patterns(void) {$/;"	f
ctrl_x_mode_scroll	insexpand.c	/^int ctrl_x_mode_scroll(void) { return ctrl_x_mode == CTRL_X_SCROLL; }$/;"	f
ctrl_x_mode_spell	insexpand.c	/^int ctrl_x_mode_spell(void) { return ctrl_x_mode == CTRL_X_SPELL; }$/;"	f
ctrl_x_mode_tags	insexpand.c	/^int ctrl_x_mode_tags(void) { return ctrl_x_mode == CTRL_X_TAGS; }$/;"	f
ctrl_x_mode_thesaurus	insexpand.c	/^int ctrl_x_mode_thesaurus(void) { return ctrl_x_mode == CTRL_X_THESAURUS; }$/;"	f
ctrl_x_mode_whole_line	insexpand.c	/^int ctrl_x_mode_whole_line(void) { return ctrl_x_mode == CTRL_X_WHOLE_LINE; }$/;"	f
ctrl_x_msgs	insexpand.c	/^static char *ctrl_x_msgs[] =$/;"	v	file:
ctx_imports	vim9compile.c	/^    garray_T	ctx_imports;	    \/\/ imported items$/;"	m	struct:cctx_S	file:
ctx_instr	vim9compile.c	/^    garray_T	ctx_instr;	    \/\/ generated instructions$/;"	m	struct:cctx_S	file:
ctx_lnum	vim9compile.c	/^    int		ctx_lnum;	    \/\/ line number in current function$/;"	m	struct:cctx_S	file:
ctx_locals	vim9compile.c	/^    garray_T	ctx_locals;	    \/\/ currently visible local variables$/;"	m	struct:cctx_S	file:
ctx_max_local	vim9compile.c	/^    int		ctx_max_local;	    \/\/ maximum number of locals at one time$/;"	m	struct:cctx_S	file:
ctx_scope	vim9compile.c	/^    scope_T	*ctx_scope;	    \/\/ current scope, NULL at toplevel$/;"	m	struct:cctx_S	file:
ctx_skip	vim9compile.c	/^    int		ctx_skip;	    \/\/ when TRUE skip commands, when FALSE skip$/;"	m	struct:cctx_S	file:
ctx_type_list	vim9compile.c	/^    garray_T	*ctx_type_list;	    \/\/ space for adding types$/;"	m	struct:cctx_S	file:
ctx_type_stack	vim9compile.c	/^    garray_T	ctx_type_stack;	    \/\/ type of each item on the stack$/;"	m	struct:cctx_S	file:
ctx_ufunc	vim9compile.c	/^    ufunc_T	*ctx_ufunc;	    \/\/ current function$/;"	m	struct:cctx_S	file:
cube_value	term.c	/^static int cube_value[] = {$/;"	v	file:
cuf_argcount	vim9.h	/^    int	    cuf_argcount;   \/\/ number of arguments on top of stack$/;"	m	struct:__anon264
cuf_name	vim9.h	/^    char_u  *cuf_name;$/;"	m	struct:__anon264
cufunc_T	vim9.h	/^} cufunc_T;$/;"	t	typeref:struct:__anon264
cur	if_py_both.h	/^    void *cur;$/;"	m	struct:__anon153
cur	structs.h	/^    int		cur;			\/\/ internal position counter$/;"	m	struct:posmatch
curPCtype	netbeans.c	/^static int curPCtype = -1;$/;"	v	file:
cur_beval	gui_w32.c	/^static BalloonEval  *cur_beval = NULL;$/;"	v	file:
cur_fnum	structs.h	/^    int		cur_fnum;	\/\/ buffer number used for cur_match$/;"	m	struct:taggy
cur_match	structs.h	/^    int		cur_match;	\/\/ match number$/;"	m	struct:taggy
cur_tmode	globals.h	/^EXTERN int	cur_tmode INIT(= TMODE_COOK);	\/\/ input terminal mode$/;"	v
curbuf	globals.h	/^EXTERN buf_T	*curbuf INIT(= NULL);	\/\/ currently active buffer$/;"	v
curbuf	if_tcl.c	/^    char *curbuf, *curwin;$/;"	m	struct:__anon60	file:
curbufIsChanged	undo.c	/^curbufIsChanged(void)$/;"	f
curbuf_lock	globals.h	/^EXTERN int	curbuf_lock INIT(= 0);$/;"	v
curbuf_locked	ex_getln.c	/^curbuf_locked(void)$/;"	f
curbuf_reusable	buffer.c	/^curbuf_reusable(void)$/;"	f
curchr	regexp.c	/^     int	curchr;$/;"	m	struct:__anon98	file:
curchr	regexp.c	/^static int	curchr;		\/\/ currently parsed character$/;"	v	file:
curerr	if_mzsch.c	/^static Scheme_Object *curerr = NULL;$/;"	v	file:
curout	if_mzsch.c	/^static Scheme_Object *curout = NULL;$/;"	v	file:
curpat	autocmd.c	/^    AutoPat	*curpat;	\/\/ next AutoPat to examine$/;"	m	struct:AutoPatCmd_S	file:
currBgColor	gui.h	/^    guicolor_T	currBgColor;	    \/\/ Current background text color$/;"	m	struct:Gui
currFgColor	gui.h	/^    guicolor_T	currFgColor;	    \/\/ Current foreground text color$/;"	m	struct:Gui
currFont	gui.h	/^    GuiFont	currFont;	    \/\/ Current font$/;"	m	struct:Gui
currSpColor	gui.h	/^    guicolor_T	currSpColor;	    \/\/ Current special text color$/;"	m	struct:Gui
curr_bg	hardcopy.c	/^static long_u	curr_bg;$/;"	v	file:
curr_bold	hardcopy.c	/^static int	curr_bold;$/;"	v	file:
curr_fg	hardcopy.c	/^static long_u	curr_fg;$/;"	v	file:
curr_italic	hardcopy.c	/^static int	curr_italic;$/;"	v	file:
curr_tmode	os_unix.c	/^static int curr_tmode = TMODE_COOK;	\/\/ contains current terminal mode$/;"	v	file:
curr_underline	hardcopy.c	/^static int	curr_underline;$/;"	v	file:
current_ScreenLine	globals.h	/^EXTERN schar_T	*current_ScreenLine INIT(= NULL);$/;"	v
current_attr	syntax.c	/^static int current_attr = 0;	    \/\/ attr of current syntax word$/;"	v	file:
current_augroup	autocmd.c	/^static int current_augroup = AUGROUP_DEFAULT;$/;"	v	file:
current_beval	gui_beval.c	/^static BalloonEval *current_beval = NULL;$/;"	v	file:
current_block	search.c	/^current_block($/;"	f
current_buf	drawline.c	/^static buf_T		*current_buf = NULL;$/;"	v	file:
current_col	syntax.c	/^static colnr_T	current_col = 0;	\/\/ column of current state$/;"	v	file:
current_copyID	eval.c	/^static int current_copyID = 0;$/;"	v	file:
current_exception	ex_docmd.c	/^    except_T	*current_exception;$/;"	m	struct:dbg_stuff	file:
current_exception	globals.h	/^EXTERN except_T *current_exception;$/;"	v
current_finished	syntax.c	/^static int	current_finished = 0;	\/\/ current line has been finished$/;"	v	file:
current_flags	syntax.c	/^static int current_flags = 0;$/;"	v	file:
current_font_height	os_mswin.c	/^int current_font_height = -12;		\/\/ also used in gui_w32.c$/;"	v
current_fontset	gui_x11.c	/^static XFontSet current_fontset = NULL;$/;"	v	file:
current_func_returned	userfunc.c	/^current_func_returned(void)$/;"	f
current_funccal	userfunc.c	/^static funccall_T *current_funccal = NULL;$/;"	v	file:
current_id	syntax.c	/^static int current_id = 0;	    \/\/ ID of current char for syn_get_id()$/;"	v	file:
current_line	ex_docmd.c	/^    int		current_line;		\/\/ last read line from growarray$/;"	m	struct:loop_cookie	file:
current_line_id	syntax.c	/^static int	current_line_id = 0;	\/\/ unique number for current line$/;"	v	file:
current_line_number	if_ruby.c	/^current_line_number(void)$/;"	f	file:
current_lnum	syntax.c	/^static linenr_T current_lnum = 0;	\/\/ lnum of current state$/;"	v	file:
current_menu	globals.h	/^EXTERN vimmenu_T	*current_menu;$/;"	v
current_next_flags	syntax.c	/^static int	current_next_flags = 0; \/\/ flags for current_next_list$/;"	v	file:
current_next_list	syntax.c	/^static short	*current_next_list = NULL; \/\/ when non-zero, nextgroup list$/;"	v	file:
current_oap	main.c	/^static oparg_T	*current_oap = NULL;$/;"	v	file:
current_par	search.c	/^current_par($/;"	f
current_quote	search.c	/^current_quote($/;"	f
current_scrollbar	globals.h	/^EXTERN int	current_scrollbar;$/;"	v
current_search	search.c	/^current_search($/;"	f
current_sent	search.c	/^current_sent(oparg_T *oap, long count, int include)$/;"	f
current_seqnr	syntax.c	/^static int current_seqnr = 0;$/;"	v	file:
current_state	syntax.c	/^static garray_T current_state		\/\/ current stack of state_items$/;"	v	file:
current_state_stored	syntax.c	/^static int	current_state_stored = 0; \/\/ TRUE if stored current state$/;"	v	file:
current_sub_char	syntax.c	/^static int current_sub_char = 0;$/;"	v	file:
current_syn_id	hardcopy.c	/^static int		current_syn_id;$/;"	v	file:
current_syn_inc_tag	syntax.c	/^static int current_syn_inc_tag = 0;$/;"	v	file:
current_tab	globals.h	/^EXTERN int	    current_tab;$/;"	v
current_tab_nr	ex_docmd.c	/^current_tab_nr(tabpage_T *tab)$/;"	f	file:
current_tabmenu	globals.h	/^EXTERN int	    current_tabmenu;$/;"	v
current_tagblock	search.c	/^current_tagblock($/;"	f
current_text_props	drawline.c	/^static textprop_T	*current_text_props = NULL;$/;"	v	file:
current_trans_id	syntax.c	/^static int current_trans_id = 0;    \/\/ idem, transparency removed$/;"	v	file:
current_win_nr	ex_docmd.c	/^current_win_nr(win_T *win)$/;"	f	file:
current_word	search.c	/^current_word($/;"	f
curs_columns	move.c	/^curs_columns($/;"	f
curs_rows	move.c	/^curs_rows(win_T *wp)$/;"	f	file:
curscript	globals.h	/^EXTERN int	curscript INIT(= 0);	    \/\/ index in scriptin[]$/;"	v
cursorRgn	gui_mac.c	/^static RgnHandle cursorRgn;$/;"	v	file:
cursor_col	gui.h	/^    int		cursor_col;	    \/\/ Physical cursor column in GUI display$/;"	m	struct:Gui
cursor_color_copy	terminal.c	/^cursor_color_copy(char_u **to_color, char_u *from_color)$/;"	f	file:
cursor_color_equal	terminal.c	/^cursor_color_equal(char_u *lhs_color, char_u *rhs_color)$/;"	f	file:
cursor_color_get	terminal.c	/^cursor_color_get(char_u *color)$/;"	f	file:
cursor_correct	move.c	/^cursor_correct(void)$/;"	f
cursor_down	edit.c	/^cursor_down($/;"	f
cursor_entry	structs.h	/^typedef struct cursor_entry$/;"	s
cursor_is_off	term.c	/^static int cursor_is_off = FALSE;$/;"	v	file:
cursor_is_valid	gui.h	/^    char	cursor_is_valid;    \/\/ There is a cursor at cursor_row\/col$/;"	m	struct:Gui
cursor_off	term.c	/^cursor_off(void)$/;"	f
cursor_on	term.c	/^cursor_on(void)$/;"	f
cursor_on_force	term.c	/^cursor_on_force(void)$/;"	f
cursor_pos_info	ops.c	/^cursor_pos_info(dict_T *dict)$/;"	f
cursor_row	gui.h	/^    int		cursor_row;	    \/\/ Physical cursor row in GUI display$/;"	m	struct:Gui
cursor_start	structs.h	/^    pos_T	cursor_start;	\/\/ cursor position before motion for "gw"$/;"	m	struct:oparg_S
cursor_up	edit.c	/^cursor_up($/;"	f
cursor_valid	move.c	/^cursor_valid(void)$/;"	f
cursor_visible	os_win32.c	/^cursor_visible(BOOL fVisible)$/;"	f	file:
cursorcmd	ex_getln.c	/^cursorcmd(void)$/;"	f
cursorentry_T	structs.h	/^} cursorentry_T;$/;"	t	typeref:struct:cursor_entry
curtab	globals.h	/^EXTERN tabpage_T    *curtab;$/;"	v
curwin	globals.h	/^EXTERN win_T	*curwin;	\/\/ currently active window$/;"	v
curwin	if_tcl.c	/^    char *curbuf, *curwin;$/;"	m	struct:__anon60	file:
curwin_col_off	move.c	/^curwin_col_off(void)$/;"	f
curwin_col_off2	move.c	/^curwin_col_off2(void)$/;"	f
curwin_init	window.c	/^curwin_init(void)$/;"	f
darken_rgb	hardcopy.c	/^darken_rgb(long_u rgb)$/;"	f	file:
dataBrowser	gui_mac.c	/^static ControlRef dataBrowser = NULL;$/;"	v	file:
data_block	memline.c	/^struct data_block$/;"	s	file:
dbFocusCallback	gui_mac.c	/^dbFocusCallback(EventHandlerCallRef handler, EventRef event, void *data)$/;"	f	file:
dbGetContextualMenuCallback	gui_mac.c	/^dbGetContextualMenuCallback(ControlRef browser,$/;"	f	file:
dbItemDataCallback	gui_mac.c	/^dbItemDataCallback(ControlRef browser,$/;"	f	file:
dbItemNotificationCallback	gui_mac.c	/^dbItemNotificationCallback(ControlRef browser,$/;"	f	file:
dbSelectContextualMenuCallback	gui_mac.c	/^dbSelectContextualMenuCallback(ControlRef browser,$/;"	f	file:
db_free	memline.c	/^    unsigned	db_free;	\/\/ free space available$/;"	m	struct:data_block	file:
db_id	memline.c	/^    short_u	db_id;		\/\/ ID for data block: DATA_ID$/;"	m	struct:data_block	file:
db_index	memline.c	/^    unsigned	db_index[1];	\/\/ index for start of line (actually bigger)$/;"	m	struct:data_block	file:
db_line_count	memline.c	/^    linenr_T	db_line_count;	\/\/ number of lines in this block$/;"	m	struct:data_block	file:
db_txt_end	memline.c	/^    unsigned	db_txt_end;	\/\/ byte just after data block$/;"	m	struct:data_block	file:
db_txt_start	memline.c	/^    unsigned	db_txt_start;	\/\/ byte where text starts$/;"	m	struct:data_block	file:
dbcs_char2bytes	mbyte.c	/^dbcs_char2bytes(int c, char_u *buf)$/;"	f	file:
dbcs_char2cells	mbyte.c	/^dbcs_char2cells(int c)$/;"	f	file:
dbcs_char2len	mbyte.c	/^dbcs_char2len($/;"	f	file:
dbcs_class	mbyte.c	/^dbcs_class(unsigned lead, unsigned trail)$/;"	f
dbcs_head_off	mbyte.c	/^dbcs_head_off(char_u *base, char_u *p)$/;"	f	file:
dbcs_off2cells	mbyte.c	/^dbcs_off2cells(unsigned off, unsigned max_off)$/;"	f
dbcs_ptr2cells	mbyte.c	/^dbcs_ptr2cells(char_u *p)$/;"	f
dbcs_ptr2cells_len	mbyte.c	/^dbcs_ptr2cells_len(char_u *p, int size)$/;"	f	file:
dbcs_ptr2char	mbyte.c	/^dbcs_ptr2char(char_u *p)$/;"	f	file:
dbcs_ptr2len	mbyte.c	/^dbcs_ptr2len($/;"	f	file:
dbcs_ptr2len_len	mbyte.c	/^dbcs_ptr2len_len(char_u *p, int size)$/;"	f	file:
dbcs_screen_head_off	mbyte.c	/^dbcs_screen_head_off(char_u *base, char_u *p)$/;"	f
dbcs_screen_tail_off	mbyte.c	/^dbcs_screen_tail_off(char_u *base, char_u *p)$/;"	f
dbg_breakp	debugger.c	/^static garray_T dbg_breakp = {0, 0, sizeof(struct debuggy), 4, NULL};$/;"	v	file:
dbg_breakpoint	debugger.c	/^dbg_breakpoint(char_u *name, linenr_T lnum)$/;"	f
dbg_check_breakpoint	debugger.c	/^dbg_check_breakpoint(exarg_T *eap)$/;"	f
dbg_check_skipped	debugger.c	/^dbg_check_skipped(exarg_T *eap)$/;"	f
dbg_find_breakpoint	debugger.c	/^dbg_find_breakpoint($/;"	f
dbg_forceit	debugger.c	/^    int		dbg_forceit;	\/\/ ! used$/;"	m	struct:debuggy	file:
dbg_level	debugger.c	/^    int		dbg_level;      \/\/ stored nested level for expr$/;"	m	struct:debuggy	file:
dbg_lnum	debugger.c	/^    linenr_T	dbg_lnum;	\/\/ line number in function or file$/;"	m	struct:debuggy	file:
dbg_name	debugger.c	/^    char_u	*dbg_name;	\/\/ function, expression or file name$/;"	m	struct:debuggy	file:
dbg_nr	debugger.c	/^    int		dbg_nr;		\/\/ breakpoint number$/;"	m	struct:debuggy	file:
dbg_parsearg	debugger.c	/^dbg_parsearg($/;"	f	file:
dbg_prog	debugger.c	/^    regprog_T	*dbg_prog;	\/\/ regexp program$/;"	m	struct:debuggy	file:
dbg_stuff	ex_docmd.c	/^struct dbg_stuff$/;"	s	file:
dbg_tick	scriptfile.c	/^    int		dbg_tick;	\/\/ debug_tick when breakpoint was set$/;"	m	struct:source_cookie	file:
dbg_tick	structs.h	/^    int		dbg_tick;	\/\/ debug_tick when breakpoint was set$/;"	m	struct:funccall_S
dbg_type	debugger.c	/^    int		dbg_type;	\/\/ DBG_FUNC, DBG_FILE or DBG_EXPR$/;"	m	struct:debuggy	file:
dbg_val	debugger.c	/^    typval_T    *dbg_val;       \/\/ last result of watchexpression$/;"	m	struct:debuggy	file:
dcbarg_T	gui_motif.c	/^} dcbarg_T;$/;"	t	typeref:struct:dialog_callback_arg	file:
dead_key	gui_w32.c	/^static int	dead_key = 0;		  \/\/ 0: no dead key, 1: dead key pressed$/;"	v	file:
deadly	os_unix.c	/^    char    deadly;	\/\/ Catch as a deadly signal?$/;"	m	struct:signalinfo	file:
deadly_signal	os_unix.c	/^static volatile sig_atomic_t deadly_signal = 0;	   \/\/ The signal we caught$/;"	v	file:
debug_backtrace_level	globals.h	/^EXTERN int	debug_backtrace_level INIT(= 0); \/\/ breakpoint backtrace level$/;"	v
debug_break_level	globals.h	/^EXTERN int	debug_break_level INIT(= -1);	\/\/ break below this level$/;"	v
debug_breakpoint_lnum	debugger.c	/^static linenr_T	debug_breakpoint_lnum;$/;"	v	file:
debug_breakpoint_name	debugger.c	/^static char_u	*debug_breakpoint_name = NULL;$/;"	v	file:
debug_did_msg	globals.h	/^EXTERN int	debug_did_msg INIT(= FALSE);	\/\/ did "debug mode" message$/;"	v
debug_expr	debugger.c	/^static int     debug_expr   = 0;        \/\/ use debug_expr$/;"	v	file:
debug_greedy	debugger.c	/^static int debug_greedy = FALSE;	\/\/ batch mode debugging: don't save$/;"	v	file:
debug_mode	globals.h	/^EXTERN int	debug_mode INIT(= FALSE);$/;"	v
debug_newval	debugger.c	/^static char_u *debug_newval = NULL;$/;"	v	file:
debug_oldval	debugger.c	/^static char_u *debug_oldval = NULL;	\/\/ old and newval for debug expressions$/;"	v	file:
debug_skipped	debugger.c	/^static int	debug_skipped;$/;"	v	file:
debug_skipped_name	debugger.c	/^static char_u	*debug_skipped_name;$/;"	v	file:
debug_tick	globals.h	/^EXTERN int	debug_tick INIT(= 0);		\/\/ breakpoint change count$/;"	v
debuggy	debugger.c	/^struct debuggy$/;"	s	file:
debuggy_find	debugger.c	/^debuggy_find($/;"	f	file:
dec	misc2.c	/^dec(pos_T *lp)$/;"	f
dec_cursor	misc2.c	/^dec_cursor(void)$/;"	f
decl	misc2.c	/^decl(pos_T *lp)$/;"	f
decodeModifyOtherKeys	edit.c	/^decodeModifyOtherKeys(int c)$/;"	f
decode_buffer_fn	crypt.c	/^    long (*decode_buffer_fn)(cryptstate_T *state, char_u *from, size_t len,$/;"	m	struct:__anon7	file:
decode_fn	crypt.c	/^    void (*decode_fn)(cryptstate_T *state, char_u *from, size_t len,$/;"	m	struct:__anon7	file:
decode_inplace_fn	crypt.c	/^    void (*decode_inplace_fn)(cryptstate_T *state, char_u *p1, size_t len,$/;"	m	struct:__anon7	file:
decode_key_event	os_win32.c	/^decode_key_event($/;"	f	file:
decode_modifiers	term.c	/^decode_modifiers(int n)$/;"	f
decode_mouse_event	os_win32.c	/^decode_mouse_event($/;"	f	file:
decomp_T	regexp.c	/^} decomp_T;$/;"	t	typeref:struct:__anon100	file:
decomp_table	regexp.c	/^static decomp_T decomp_table[0xfb4f-0xfb20+1] =$/;"	v	file:
decr_quickfix_busy	quickfix.c	/^decr_quickfix_busy(void)$/;"	f	file:
def_back_pixel	gui.h	/^    guicolor_T	def_back_pixel;	    \/\/ default Color of background$/;"	m	struct:Gui
def_functions	vim9.h	/^garray_T def_functions = {0, 0, sizeof(dfunc_T), 50, NULL};$/;"	v
def_norm_pixel	gui.h	/^    guicolor_T	def_norm_pixel;	    \/\/ default Color of normal text$/;"	m	struct:Gui
def_val	optiondefs.h	/^    char_u	*def_val[2];	\/\/ default values for variable (vi and vim)$/;"	m	struct:vimoption
defaultTranslations	gui_at_sb.c	/^static char defaultTranslations[] =$/;"	v	file:
default_bat_dir	dosinst.c	/^char	*default_bat_dir = NULL;  \/\/ when not NULL, use this as the default$/;"	v
default_console_color_bg	os_win32.c	/^static int default_console_color_bg = 0x000000; \/\/ black$/;"	v	file:
default_console_color_fg	os_win32.c	/^static int default_console_color_fg = 0xc0c0c0; \/\/ white$/;"	v	file:
default_fileformat	misc2.c	/^default_fileformat(void)$/;"	f
default_shape_engine	gui_gtk_x11.c	/^static PangoEngineShape *default_shape_engine = NULL;$/;"	v	file:
default_shell	os_win32.c	/^default_shell(void)$/;"	f
default_vim_dir	dosinst.c	/^char	*default_vim_dir = NULL;  \/\/ when not NULL, use this as the default$/;"	v
defcs	hardcopy.c	/^    char			*defcs;$/;"	m	struct:prt_ps_mbfont_S	file:
del_bytes	change.c	/^del_bytes($/;"	f
del_char	change.c	/^del_char(int fixpos)$/;"	f
del_char_after_col	edit.c	/^del_char_after_col(int limit_col UNUSED)$/;"	f	file:
del_chars	change.c	/^del_chars(long count, int fixpos)$/;"	f
del_from_showcmd	normal.c	/^del_from_showcmd(int len)$/;"	f	file:
del_history_entry	cmdhist.c	/^del_history_entry(int histype, char_u *str)$/;"	f	file:
del_history_idx	cmdhist.c	/^del_history_idx(int histype, int idx)$/;"	f	file:
del_lines	change.c	/^del_lines(long nlines,	int undo)$/;"	f
del_menutrans_vars	evalvars.c	/^del_menutrans_vars(void)$/;"	f
del_mouse_termcode	mouse.c	/^del_mouse_termcode($/;"	f
del_termcode	term.c	/^del_termcode(char_u *name)$/;"	f
del_termcode_idx	term.c	/^del_termcode_idx(int idx)$/;"	f	file:
del_trailing_spaces	misc2.c	/^del_trailing_spaces(char_u *ptr)$/;"	f
del_typebuf	getchar.c	/^del_typebuf(int len, int offset)$/;"	f
delbuf_msg	ex_cmds.c	/^delbuf_msg(char_u *name)$/;"	f	file:
delcmd	if_tcl.c	/^    Tcl_Obj	*delcmd;    \/\/ Tcl command to call when object is being del.$/;"	m	struct:ref	file:
deleteFold	fold.c	/^deleteFold($/;"	f
deleteFoldEntry	fold.c	/^deleteFoldEntry(garray_T *gap, int idx, int recursive)$/;"	f	file:
deleteFoldMarkers	fold.c	/^deleteFoldMarkers($/;"	f	file:
deleteFoldRecurse	fold.c	/^deleteFoldRecurse(garray_T *gap)$/;"	f
delete_def_function	vim9compile.c	/^delete_def_function(ufunc_T *ufunc)$/;"	f
delete_event_cb	gui_gtk_x11.c	/^delete_event_cb(GtkWidget *widget UNUSED,$/;"	f	file:
delete_first_msg	message.c	/^delete_first_msg(void)$/;"	f
delete_instr	vim9compile.c	/^delete_instr(isn_T *isn)$/;"	f	file:
delete_lines	os_win32.c	/^delete_lines(unsigned cLines)$/;"	f	file:
delete_recursive	fileio.c	/^delete_recursive(char_u *name)$/;"	f
delete_sound_callback	sound.c	/^delete_sound_callback(soundcb_T *soundcb)$/;"	f	file:
delete_tooltip	gui_w32.c	/^delete_tooltip(BalloonEval *beval)$/;"	f	file:
delete_uninstall_key	uninstall.c	/^delete_uninstall_key(void)$/;"	f	file:
delete_var	evalvars.c	/^delete_var(hashtab_T *ht, hashitem_T *hi)$/;"	f	file:
deleted_augroup	autocmd.c	/^static char_u *deleted_augroup = NULL;$/;"	v	file:
deleted_lines	change.c	/^deleted_lines(linenr_T lnum, long count)$/;"	f
deleted_lines_mark	change.c	/^deleted_lines_mark(linenr_T lnum, long count)$/;"	f
delref	if_tcl.c	/^delref(ClientData cref)$/;"	f	file:
deref_func_name	userfunc.c	/^deref_func_name(char_u *name, int *lenp, partial_T **partialp, int no_autoload)$/;"	f
deref_wordnode	spellfile.c	/^deref_wordnode(spellinfo_T *spin, wordnode_T *node)$/;"	f	file:
desired_cursor_blink	terminal.c	/^static int	desired_cursor_blink = -1;$/;"	v	file:
desired_cursor_color	terminal.c	/^static char_u	*desired_cursor_color = NULL;$/;"	v	file:
desired_cursor_shape	terminal.c	/^static int	desired_cursor_shape = -1;$/;"	v	file:
dest_env	vim9compile.c	/^    dest_env,$/;"	e	enum:__anon132	file:
dest_global	vim9compile.c	/^    dest_global,$/;"	e	enum:__anon132	file:
dest_local	vim9compile.c	/^    dest_local,$/;"	e	enum:__anon132	file:
dest_option	vim9compile.c	/^    dest_option,$/;"	e	enum:__anon132	file:
dest_reg	vim9compile.c	/^    dest_reg,$/;"	e	enum:__anon132	file:
dest_script	vim9compile.c	/^    dest_script,$/;"	e	enum:__anon132	file:
dest_vimvar	vim9compile.c	/^    dest_vimvar,$/;"	e	enum:__anon132	file:
destroying	gui_w32.c	/^static int		destroying = FALSE;	\/\/ call DestroyWindow() ourselves$/;"	v	file:
destruct	if_py_both.h	/^    destructorfun destruct;$/;"	m	struct:__anon153
destructorfun	if_py_both.h	/^typedef void (*destructorfun)(void *);$/;"	t
detected_8bit	term.c	/^static int  detected_8bit = FALSE;	\/\/ detected 8-bit terminal$/;"	v	file:
dev_T	buffer.c	50;"	d	file:
dev_T	buffer.c	52;"	d	file:
df_count	structs.h	/^    linenr_T	df_count[DB_COUNT];	\/\/ nr of inserted\/changed lines$/;"	m	struct:diffblock_S
df_def_args_isn	vim9.h	/^    garray_T	df_def_args_isn;    \/\/ default argument instructions$/;"	m	struct:dfunc_S
df_deleted	vim9.h	/^    int		df_deleted;	    \/\/ if TRUE function was deleted$/;"	m	struct:dfunc_S
df_idx	vim9.h	/^    int		df_idx;		    \/\/ index in def_functions$/;"	m	struct:dfunc_S
df_instr	vim9.h	/^    isn_T	*df_instr;	    \/\/ function body to be executed$/;"	m	struct:dfunc_S
df_instr_count	vim9.h	/^    int		df_instr_count;$/;"	m	struct:dfunc_S
df_lnum	structs.h	/^    linenr_T	df_lnum[DB_COUNT];	\/\/ line number in buffer$/;"	m	struct:diffblock_S
df_next	structs.h	/^    diff_T	*df_next;$/;"	m	struct:diffblock_S
df_ufunc	vim9.h	/^    ufunc_T	*df_ufunc;	    \/\/ struct containing most stuff$/;"	m	struct:dfunc_S
df_varcount	vim9.h	/^    int		df_varcount;	    \/\/ number of local variables$/;"	m	struct:dfunc_S
dfunc	vim9.h	/^	cdfunc_T	    dfunc;$/;"	m	union:__anon276::__anon277
dfunc_S	vim9.h	/^struct dfunc_S {$/;"	s
dfunc_T	structs.h	/^typedef struct dfunc_S dfunc_T;	    \/\/ :def function$/;"	t	typeref:struct:dfunc_S
dg_header	digraph.c	/^    char    *dg_header;$/;"	m	struct:dg_header_entry	file:
dg_header_entry	digraph.c	/^static struct dg_header_entry {$/;"	s	file:
dg_start	digraph.c	/^    int	    dg_start;$/;"	m	struct:dg_header_entry	file:
di_flags	structs.h	/^    char_u	di_flags;	\/\/ DI_FLAGS_ flags (only used for variable)$/;"	m	struct:dictitem16_S
di_flags	structs.h	/^    char_u	di_flags;	\/\/ DI_FLAGS_ flags (only used for variable)$/;"	m	struct:dictitem_S
di_key	structs.h	/^    char_u	di_key[1];	\/\/ key (actually longer!)$/;"	m	struct:dictitem_S
di_key	structs.h	/^    char_u	di_key[DICTITEM16_KEY_LEN + 1];	\/\/ key$/;"	m	struct:dictitem16_S
di_tv	structs.h	/^    typval_T	di_tv;		\/\/ type and value of the variable$/;"	m	struct:dictitem16_S
di_tv	structs.h	/^    typval_T	di_tv;		\/\/ type and value of the variable$/;"	m	struct:dictitem_S
dialog	gui_gtk.c	/^    GtkDialog	*dialog;	    \/\/ Widget of the dialog$/;"	m	struct:_DialogInfo	file:
dialog	gui_gtk.c	/^    GtkWidget *dialog;	\/\/ the main dialog widget$/;"	m	struct:_SharedFindReplace	file:
dialog	gui_motif.c	/^    Widget dialog;	\/\/ the main dialog widget$/;"	m	struct:_SharedFindReplace	file:
dialog	gui_xmdlg.c	/^    Widget	dialog;$/;"	m	struct:_SharedFontSelData	file:
dialogStatus	gui_athena.c	/^static int	dialogStatus;$/;"	v	file:
dialogStatus	gui_motif.c	/^static int	dialogStatus;$/;"	v	file:
dialog_add_buttons	gui_gtk.c	/^dialog_add_buttons(GtkDialog *dialog, char_u *button_string)$/;"	f	file:
dialog_busy	gui_mac.c	/^static int dialog_busy = FALSE;	    \/\/ TRUE when gui_mch_dialog() wants the$/;"	v	file:
dialog_callback	gui_w32.c	/^dialog_callback($/;"	f	file:
dialog_callback_arg	gui_motif.c	/^typedef struct dialog_callback_arg$/;"	s	file:
dialog_changed	ex_cmds2.c	/^dialog_changed($/;"	f
dialog_default_button	gui_w32.c	/^static int dialog_default_button = -1;$/;"	v	file:
dialog_key_press_event_cb	gui_gtk.c	/^dialog_key_press_event_cb(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
dialog_msg	ex_docmd.c	/^dialog_msg(char_u *buff, char *format, char_u *fname)$/;"	f
dialog_wgt	gui_motif.c	/^static Widget dialog_wgt;$/;"	v	file:
dialog_wm_handler	gui_athena.c	/^dialog_wm_handler($/;"	f	file:
dialogatom	gui_athena.c	/^static Atom	dialogatom;$/;"	v	file:
dict	if_py_both.h	/^    dict_T	*dict;$/;"	m	struct:__anon154
dict2string	dict.c	/^dict2string(typval_T *tv, int copyID, int restore_copyID)$/;"	f
dict_T	structs.h	/^typedef struct dictvar_S dict_T;$/;"	t	typeref:struct:dictvar_S
dict_add	dict.c	/^dict_add(dict_T *d, dictitem_T *item)$/;"	f
dict_add_bool	dict.c	/^dict_add_bool(dict_T *d, char *key, varnumber_T nr)$/;"	f
dict_add_callback	dict.c	/^dict_add_callback(dict_T *d, char *key, callback_T *cb)$/;"	f
dict_add_dict	dict.c	/^dict_add_dict(dict_T *d, char *key, dict_T *dict)$/;"	f
dict_add_list	dict.c	/^dict_add_list(dict_T *d, char *key, list_T *list)$/;"	f
dict_add_number	dict.c	/^dict_add_number(dict_T *d, char *key, varnumber_T nr)$/;"	f
dict_add_number_special	dict.c	/^dict_add_number_special(dict_T *d, char *key, varnumber_T nr, vartype_T vartype)$/;"	f	file:
dict_add_string	dict.c	/^dict_add_string(dict_T *d, char *key, char_u *str)$/;"	f
dict_add_string_len	dict.c	/^dict_add_string_len(dict_T *d, char *key, char_u *str, int len)$/;"	f
dict_add_tv	dict.c	/^dict_add_tv(dict_T *d, char *key, typval_T *tv)$/;"	f
dict_alloc	dict.c	/^dict_alloc(void)$/;"	f
dict_alloc_id	dict.c	/^dict_alloc_id(alloc_id_T id UNUSED)$/;"	f
dict_alloc_lock	dict.c	/^dict_alloc_lock(int lock)$/;"	f
dict_copy	dict.c	/^dict_copy(dict_T *orig, int deep, int copyID)$/;"	f
dict_equal	dict.c	/^dict_equal($/;"	f
dict_extend	dict.c	/^dict_extend(dict_T *d1, dict_T *d2, char_u *action)$/;"	f
dict_find	dict.c	/^dict_find(dict_T *d, char_u *key, int len)$/;"	f
dict_free	dict.c	/^dict_free(dict_T *d)$/;"	f	file:
dict_free_contents	dict.c	/^dict_free_contents(dict_T *d)$/;"	f
dict_free_dict	dict.c	/^dict_free_dict(dict_T *d)$/;"	f	file:
dict_free_items	dict.c	/^dict_free_items(int copyID)$/;"	f
dict_free_nonref	dict.c	/^dict_free_nonref(int copyID)$/;"	f
dict_get_number	dict.c	/^dict_get_number(dict_T *d, char_u *key)$/;"	f
dict_get_number_check	dict.c	/^dict_get_number_check(dict_T *d, char_u *key)$/;"	f
dict_get_number_def	dict.c	/^dict_get_number_def(dict_T *d, char_u *key, int def)$/;"	f
dict_get_string	dict.c	/^dict_get_string(dict_T *d, char_u *key, int save)$/;"	f
dict_get_tv	dict.c	/^dict_get_tv(dict_T *d, char_u *key, typval_T *rettv)$/;"	f
dict_item	if_py_both.h	/^dict_item(hashitem_T *hi)$/;"	f
dict_iterate_next	dict.c	/^dict_iterate_next(dict_iterator_T *iter, typval_T **tv_result)$/;"	f
dict_iterate_start	dict.c	/^dict_iterate_start(typval_T *var, dict_iterator_T *iter)$/;"	f
dict_iterator_T	structs.h	/^} dict_iterator_T;$/;"	t	typeref:struct:__anon234
dict_key	if_py_both.h	/^dict_key(hashitem_T *hi)$/;"	f
dict_len	dict.c	/^dict_len(dict_T *d)$/;"	f
dict_list	dict.c	/^dict_list(typval_T *argvars, typval_T *rettv, int what)$/;"	f	file:
dict_lookup	dict.c	/^dict_lookup(hashitem_T *hi)$/;"	f
dict_remove	dict.c	/^dict_remove(typval_T *argvars, typval_T *rettv, char_u *arg_errmsg)$/;"	f
dict_set_items_ro	dict.c	/^dict_set_items_ro(dict_T *di)$/;"	f
dict_unref	dict.c	/^dict_unref(dict_T *d)$/;"	f
dict_val	if_py_both.h	/^dict_val(hashitem_T *hi)$/;"	f
dictitem16_S	structs.h	/^struct dictitem16_S$/;"	s
dictitem16_T	structs.h	/^typedef struct dictitem16_S dictitem16_T;$/;"	t	typeref:struct:dictitem16_S
dictitem_S	structs.h	/^struct dictitem_S$/;"	s
dictitem_T	structs.h	/^typedef struct dictitem_S dictitem_T;$/;"	t	typeref:struct:dictitem_S
dictitem_alloc	dict.c	/^dictitem_alloc(char_u *key)$/;"	f
dictitem_copy	dict.c	/^dictitem_copy(dictitem_T *org)$/;"	f	file:
dictitem_free	dict.c	/^dictitem_free(dictitem_T *item)$/;"	f
dictitem_remove	dict.c	/^dictitem_remove(dict_T *dict, dictitem_T *item)$/;"	f
dictiterinfo_T	if_py_both.h	/^} dictiterinfo_T;$/;"	t	typeref:struct:__anon155
dictvar_S	structs.h	/^struct dictvar_S$/;"	s
did_add_space	edit.c	/^static int	did_add_space = FALSE;	\/\/ auto_format() added an extra space$/;"	v	file:
did_add_timer	globals.h	/^EXTERN int  did_add_timer INIT(= FALSE);$/;"	v
did_ai	globals.h	/^EXTERN int     did_ai INIT(= FALSE);$/;"	v
did_check_timestamps	globals.h	/^EXTERN int	did_check_timestamps INIT(= FALSE); \/\/ did check timestamps$/;"	v
did_create_conin	os_win32.c	/^static int did_create_conin = FALSE;$/;"	v	file:
did_cursorhold	globals.h	/^EXTERN int	did_cursorhold INIT(= FALSE); \/\/ set when CursorHold t'gerd$/;"	v
did_echo_string_emsg	globals.h	/^EXTERN int  did_echo_string_emsg INIT(= FALSE);$/;"	v
did_emsg	ex_docmd.c	/^    int		did_emsg;$/;"	m	struct:dbg_stuff	file:
did_emsg	globals.h	/^EXTERN int	did_emsg;		    \/\/ set by emsg() when the message$/;"	v
did_emsg_syntax	globals.h	/^EXTERN int	did_emsg_syntax;	    \/\/ did_emsg set because of a$/;"	v
did_endif	globals.h	/^EXTERN int	did_endif INIT(= FALSE);    \/\/ just had ":endif"$/;"	v
did_esilent	ex_cmds.h	/^    int		did_esilent;	 \/\/ how many times emsg_silent was incremented$/;"	m	struct:exarg
did_filetype	globals.h	/^EXTERN int	did_filetype INIT(= FALSE);	\/\/ FileType event found$/;"	v
did_incsearch	ex_getln.c	/^    int		did_incsearch;$/;"	m	struct:__anon27	file:
did_init_locales	ex_cmds2.c	/^static int	did_init_locales = FALSE;$/;"	v	file:
did_lcd	session.c	/^static int did_lcd;	\/\/ whether ":lcd" was produced for a session$/;"	v	file:
did_match_already	syntax.c	/^did_match_already(int idx, garray_T *gap)$/;"	f	file:
did_outofmem_msg	globals.h	/^EXTERN int	did_outofmem_msg INIT(= FALSE);$/;"	v
did_repeated_msg	globals.h	/^EXTERN int did_repeated_msg INIT(= 0);$/;"	v
did_request_winpos	term.c	/^static int did_request_winpos = 0;$/;"	v	file:
did_restart_edit	edit.c	/^static int	did_restart_edit;	\/\/ "restart_edit" when calling edit()$/;"	v	file:
did_sandbox	ex_cmds.h	/^    int		did_sandbox;	\/\/ when TRUE did ++sandbox$/;"	m	struct:exarg
did_save_last_search_spat	search.c	/^static int	    did_save_last_search_spat = 0;$/;"	v	file:
did_set_icon	os_unix.c	/^static int	did_set_icon = FALSE;$/;"	v	file:
did_set_option	option.c	/^did_set_option($/;"	f
did_set_spell_option	spell.c	/^did_set_spell_option(int is_spellfile)$/;"	f
did_set_spelllang	spell.c	/^did_set_spelllang(win_T *wp)$/;"	f
did_set_spelltab	spell.h	/^SPELL_EXTERN int	  did_set_spelltab;$/;"	v
did_set_string_option	optionstr.c	/^did_set_string_option($/;"	f
did_set_title	option.c	/^did_set_title(void)$/;"	f
did_si	globals.h	/^EXTERN int	did_si INIT(= FALSE);$/;"	v
did_source_packages	globals.h	/^EXTERN int	did_source_packages INIT(= FALSE);$/;"	v
did_swapwrite_msg	globals.h	/^EXTERN int	did_swapwrite_msg INIT(= FALSE);$/;"	v
did_syncbind	globals.h	/^EXTERN int     did_syncbind INIT(= FALSE);$/;"	v
did_throw	ex_docmd.c	/^    int		did_throw;$/;"	m	struct:dbg_stuff	file:
did_throw	globals.h	/^EXTERN int did_throw INIT(= FALSE);$/;"	v
did_uncaught_emsg	globals.h	/^EXTERN int	did_uncaught_emsg;	    \/\/ emsg() was called and did not$/;"	v
did_wait_return	globals.h	/^EXTERN int	did_wait_return INIT(= FALSE);	\/\/ wait_return() was used and$/;"	v
didset_options	option.c	/^didset_options(void)$/;"	f	file:
didset_options2	option.c	/^didset_options2(void)$/;"	f	file:
didset_string_options	optionstr.c	/^didset_string_options(void)$/;"	f
didset_vim	globals.h	/^EXTERN int	didset_vim INIT(= FALSE);	    \/\/ did set $VIM ourselves$/;"	v
didset_vimruntime	globals.h	/^EXTERN int	didset_vimruntime INIT(= FALSE);    \/\/ idem for $VIMRUNTIME$/;"	v
diff_T	structs.h	/^typedef struct diffblock_S diff_T;$/;"	t	typeref:struct:diffblock_S
diff_a_works	diff.c	/^static int diff_a_works = MAYBE; \/\/ TRUE when "diff -a" works, FALSE when it$/;"	v	file:
diff_algorithm	diff.c	/^static long diff_algorithm = 0;$/;"	v	file:
diff_alloc_new	diff.c	/^diff_alloc_new(tabpage_T *tp, diff_T *dprev, diff_T *dp)$/;"	f	file:
diff_bin_works	diff.c	/^static int diff_bin_works = MAYBE; \/\/ TRUE when "diff --binary" works, FALSE$/;"	v	file:
diff_buf_add	diff.c	/^diff_buf_add(buf_T *buf)$/;"	f
diff_buf_adjust	diff.c	/^diff_buf_adjust(win_T *win)$/;"	f
diff_buf_clear	diff.c	/^diff_buf_clear(void)$/;"	f	file:
diff_buf_delete	diff.c	/^diff_buf_delete(buf_T *buf)$/;"	f
diff_buf_idx	diff.c	/^diff_buf_idx(buf_T *buf)$/;"	f	file:
diff_buf_idx_tp	diff.c	/^diff_buf_idx_tp(buf_T *buf, tabpage_T *tp)$/;"	f	file:
diff_busy	diff.c	/^static int diff_busy = FALSE;	    \/\/ using diff structs, don't change them$/;"	v	file:
diff_check	diff.c	/^diff_check(win_T *wp, linenr_T lnum)$/;"	f
diff_check_fill	diff.c	/^diff_check_fill(win_T *wp, linenr_T lnum)$/;"	f
diff_check_sanity	diff.c	/^diff_check_sanity(tabpage_T *tp, diff_T *dp)$/;"	f	file:
diff_check_unchanged	diff.c	/^diff_check_unchanged(tabpage_T *tp, diff_T *dp)$/;"	f	file:
diff_clear	diff.c	/^diff_clear(tabpage_T *tp)$/;"	f
diff_cmp	diff.c	/^diff_cmp(char_u *s1, char_u *s2)$/;"	f	file:
diff_context	globals.h	/^EXTERN int	diff_context INIT(= 6);		\/\/ context for folds$/;"	v
diff_copy_entry	diff.c	/^diff_copy_entry($/;"	f	file:
diff_equal_char	diff.c	/^diff_equal_char(char_u *p1, char_u *p2, int *len)$/;"	f	file:
diff_equal_entry	diff.c	/^diff_equal_entry(diff_T *dp, int idx1, int idx2)$/;"	f	file:
diff_file	diff.c	/^diff_file(diffio_T *dio)$/;"	f	file:
diff_file_internal	diff.c	/^diff_file_internal(diffio_T *diffio)$/;"	f	file:
diff_find_change	diff.c	/^diff_find_change($/;"	f
diff_flags	diff.c	/^static int	diff_flags = DIFF_INTERNAL | DIFF_FILLER | DIFF_CLOSE_OFF;$/;"	v	file:
diff_fold_update	diff.c	/^diff_fold_update(diff_T *dp, int skip_idx)$/;"	f	file:
diff_foldcolumn	globals.h	/^EXTERN int	diff_foldcolumn INIT(= 2);	\/\/ 'foldcolumn' for diff mode$/;"	v
diff_get_corresponding_line	diff.c	/^diff_get_corresponding_line(buf_T *buf1, linenr_T lnum1)$/;"	f
diff_get_corresponding_line_int	diff.c	/^diff_get_corresponding_line_int($/;"	f	file:
diff_infold	diff.c	/^diff_infold(win_T *wp, linenr_T lnum)$/;"	f
diff_internal	diff.c	/^diff_internal(void)$/;"	f
diff_internal_failed	diff.c	/^diff_internal_failed(void)$/;"	f	file:
diff_invalidate	diff.c	/^diff_invalidate(buf_T *buf)$/;"	f
diff_lnum_win	diff.c	/^diff_lnum_win(linenr_T lnum, win_T *wp)$/;"	f
diff_mark_adjust	diff.c	/^diff_mark_adjust($/;"	f
diff_mark_adjust_tp	diff.c	/^diff_mark_adjust_tp($/;"	f	file:
diff_mode	structs.h	/^    int		diff_mode;		\/\/ start with 'diff' set$/;"	m	struct:__anon252
diff_mode_buf	diff.c	/^diff_mode_buf(buf_T *buf)$/;"	f
diff_move_to	diff.c	/^diff_move_to(int dir, long count)$/;"	f
diff_need_scrollbind	globals.h	/^EXTERN int	diff_need_scrollbind INIT(= FALSE);$/;"	v
diff_need_update	diff.c	/^static int diff_need_update = FALSE; \/\/ ex_diffupdate needs to be called$/;"	v	file:
diff_read	diff.c	/^diff_read($/;"	f	file:
diff_redraw	diff.c	/^diff_redraw($/;"	f
diff_set_topline	diff.c	/^diff_set_topline(win_T *fromwin, win_T *towin)$/;"	f
diff_try_update	diff.c	/^diff_try_update($/;"	f	file:
diff_win_options	diff.c	/^diff_win_options($/;"	f
diff_write	diff.c	/^diff_write(buf_T *buf, diffin_T *din)$/;"	f	file:
diff_write_buffer	diff.c	/^diff_write_buffer(buf_T *buf, diffin_T *din)$/;"	f	file:
diffblock_S	structs.h	/^struct diffblock_S$/;"	s
diffin_T	diff.c	/^} diffin_T;$/;"	t	typeref:struct:__anon9	file:
diffio_T	diff.c	/^} diffio_T;$/;"	t	typeref:struct:__anon11	file:
diffopt_changed	diff.c	/^diffopt_changed(void)$/;"	f
diffopt_closeoff	diff.c	/^diffopt_closeoff(void)$/;"	f
diffopt_hiddenoff	diff.c	/^diffopt_hiddenoff(void)$/;"	f
diffopt_horizontal	diff.c	/^diffopt_horizontal(void)$/;"	f
diffout_T	diff.c	/^} diffout_T;$/;"	t	typeref:struct:__anon10	file:
digr_T	digraph.c	/^} digr_T;$/;"	t	typeref:struct:digraph	file:
digraph	digraph.c	/^typedef struct digraph$/;"	s	file:
digraph_header	digraph.c	/^digraph_header(char *msg)$/;"	f	file:
digraphdefault	digraph.c	/^static digr_T digraphdefault[] =$/;"	v	file:
din_fname	diff.c	/^    char_u	*din_fname;  \/\/ used for external diff$/;"	m	struct:__anon9	file:
din_mmfile	diff.c	/^    mmfile_t	din_mmfile;  \/\/ used for internal diff$/;"	m	struct:__anon9	file:
dio_diff	diff.c	/^    diffout_T	dio_diff;     \/\/ diff result$/;"	m	struct:__anon11	file:
dio_internal	diff.c	/^    int		dio_internal; \/\/ using internal diff$/;"	m	struct:__anon11	file:
dio_new	diff.c	/^    diffin_T	dio_new;      \/\/ new file input$/;"	m	struct:__anon11	file:
dio_orig	diff.c	/^    diffin_T	dio_orig;     \/\/ original file input$/;"	m	struct:__anon11	file:
dir	gui_at_fs.c	/^    char	*dir;$/;"	m	struct:__anon32	file:
dir	gui_at_fs.c	/^    char	*dir;$/;"	m	struct:__anon33	file:
dir	structs.h	/^    int		dir;		\/\/ search direction, '\/' or '?'$/;"	m	struct:soffset
dir_of_file_exists	filepath.c	/^dir_of_file_exists(char_u *fname)$/;"	f
dir_remove_last	dosinst.c	/^dir_remove_last(const char *path, char to[MAX_PATH])$/;"	f	file:
dir_stack_T	quickfix.c	/^struct dir_stack_T$/;"	s	file:
directx_binddc	gui_w32.c	/^directx_binddc(void)$/;"	f	file:
directx_enabled	gui_w32.c	/^directx_enabled(void)$/;"	f	file:
dirent	os_unix.h	117;"	d
dirname	quickfix.c	/^    char_u		*dirname;$/;"	m	struct:dir_stack_T	file:
dis_msg	register.c	/^dis_msg($/;"	f	file:
disable_char_avail_for_testing	globals.h	/^EXTERN int  disable_char_avail_for_testing INIT(= FALSE);$/;"	v
disable_flush	gui.c	/^static int disable_flush = 0;	\/\/ If > 0, gui_mch_flush() is disabled.$/;"	v	file:
disable_fold_update	globals.h	/^EXTERN int	disable_fold_update INIT(= 0);$/;"	v
disable_redraw_for_testing	globals.h	/^EXTERN int  disable_redraw_for_testing INIT(= FALSE);$/;"	v
disabled	if_mzsch.c	/^static int disabled = FALSE;$/;"	v	file:
disallow_gui	globals.h	/^EXTERN short disallow_gui	INIT(= FALSE);$/;"	v
discard_current_exception	ex_eval.c	/^discard_current_exception(void)$/;"	f
discard_exception	ex_eval.c	/^discard_exception(except_T *excp, int was_finished)$/;"	f	file:
discard_pending_return	userfunc.c	/^discard_pending_return(void *rettv)$/;"	f
disp_sb_line	message.c	/^disp_sb_line(int row, msgchunk_T *smp)$/;"	f	file:
display_confirm_msg	message.c	/^display_confirm_msg(void)$/;"	f	file:
display_dollar	edit.c	/^display_dollar(colnr_T col)$/;"	f
display_errors	gui.c	/^display_errors(void)$/;"	f
display_errors	gui_mac.c	/^display_errors(void)$/;"	f
display_errors	os_mswin.c	/^display_errors(void)$/;"	f
display_errors	os_mswin.c	597;"	d	file:
display_errors	vim.h	2151;"	d
display_sample	gui_xmdlg.c	/^display_sample(SharedFontSelData *data)$/;"	f	file:
display_showcmd	normal.c	/^display_showcmd(void)$/;"	f	file:
display_tick	globals.h	/^EXTERN disptick_T	display_tick INIT(= 0);$/;"	v
displayname	netbeans.c	/^    char		*displayname;$/;"	m	struct:nbbuf_struct	file:
disptick_T	vim.h	/^typedef unsigned short disptick_T;	\/\/ display tick type$/;"	t
dit_hi	structs.h	/^    hashitem_T	*dit_hi;$/;"	m	struct:__anon234
dit_todo	structs.h	/^    long_u	dit_todo;$/;"	m	struct:__anon234
dlg_icons	gui_w32.c	/^static const char *dlg_icons[] = \/\/ must match names in resource file$/;"	v	file:
dll_GC_malloc	if_mzsch.c	/^static void *(*dll_GC_malloc)(size_t size_in_bytes);$/;"	v	file:
dll_GC_malloc_atomic	if_mzsch.c	/^static void *(*dll_GC_malloc_atomic)(size_t size_in_bytes);$/;"	v	file:
dll_GC_malloc_one_tagged	if_mzsch.c	/^static void *(*dll_GC_malloc_one_tagged)(size_t size_in_bytes);$/;"	v	file:
dll_GC_register_traversers	if_mzsch.c	/^static void (*dll_GC_register_traversers)(short tag, Size_Proc size, Mark_Proc mark, Fixup_Proc fixup, int is_constant_size, int is_atomic);$/;"	v	file:
dll_NtInitialize	if_ruby.c	/^static void (*dll_NtInitialize) (int*, char***);$/;"	v	file:
dll_PyArg_Parse	if_python.c	/^static int(*dll_PyArg_Parse)(PyObject *, char *, ...);$/;"	v	file:
dll_PyArg_ParseTuple	if_python.c	/^static int(*dll_PyArg_ParseTuple)(PyObject *, char *, ...);$/;"	v	file:
dll_PyBool_Type	if_python.c	/^static PyTypeObject* dll_PyBool_Type;$/;"	v	file:
dll_PyCObject_AsVoidPtr	if_python.c	/^static void* (*dll_PyCObject_AsVoidPtr)(PyObject *);$/;"	v	file:
dll_PyCObject_FromVoidPtr	if_python.c	/^static PyObject* (*dll_PyCObject_FromVoidPtr)(void *cobj, void (*destr)(void *));$/;"	v	file:
dll_PyCapsule_GetPointer	if_python.c	/^static void* (*dll_PyCapsule_GetPointer)(PyObject *, char *);$/;"	v	file:
dll_PyCapsule_New	if_python.c	/^static PyObject* (*dll_PyCapsule_New)(void *, char *, PyCapsule_Destructor);$/;"	v	file:
dll_PyDict_GetItemString	if_python.c	/^static PyObject*(*dll_PyDict_GetItemString)(PyObject *, const char *);$/;"	v	file:
dll_PyDict_New	if_python.c	/^static PyObject*(*dll_PyDict_New)(void);$/;"	v	file:
dll_PyDict_Next	if_python.c	/^static int (*dll_PyDict_Next)(PyObject *, PyInt *, PyObject **, PyObject **);$/;"	v	file:
dll_PyDict_SetItemString	if_python.c	/^static int(*dll_PyDict_SetItemString)(PyObject *dp, char *key, PyObject *item);$/;"	v	file:
dll_PyDict_Type	if_python.c	/^static PyTypeObject* dll_PyDict_Type;$/;"	v	file:
dll_PyErr_BadArgument	if_python.c	/^static int(*dll_PyErr_BadArgument)(void);$/;"	v	file:
dll_PyErr_Clear	if_python.c	/^static void(*dll_PyErr_Clear)(void);$/;"	v	file:
dll_PyErr_ExceptionMatches	if_python.c	/^static int(*dll_PyErr_ExceptionMatches)(PyObject *);$/;"	v	file:
dll_PyErr_Format	if_python.c	/^static PyObject*(*dll_PyErr_Format)(PyObject *, const char *, ...);$/;"	v	file:
dll_PyErr_NewException	if_python.c	/^static PyObject *(*dll_PyErr_NewException)(char *, PyObject *, PyObject *);$/;"	v	file:
dll_PyErr_NoMemory	if_python.c	/^static PyObject*(*dll_PyErr_NoMemory)(void);$/;"	v	file:
dll_PyErr_Occurred	if_python.c	/^static PyObject*(*dll_PyErr_Occurred)(void);$/;"	v	file:
dll_PyErr_PrintEx	if_python.c	/^static void(*dll_PyErr_PrintEx)(int);$/;"	v	file:
dll_PyErr_SetNone	if_python.c	/^static void(*dll_PyErr_SetNone)(PyObject *);$/;"	v	file:
dll_PyErr_SetObject	if_python.c	/^static void(*dll_PyErr_SetObject)(PyObject *, PyObject *);$/;"	v	file:
dll_PyErr_SetString	if_python.c	/^static void(*dll_PyErr_SetString)(PyObject *, const char *);$/;"	v	file:
dll_PyEval_InitThreads	if_python.c	/^static void(*dll_PyEval_InitThreads)(void);$/;"	v	file:
dll_PyEval_RestoreThread	if_python.c	/^static void(*dll_PyEval_RestoreThread)(PyThreadState *);$/;"	v	file:
dll_PyEval_SaveThread	if_python.c	/^static PyThreadState*(*dll_PyEval_SaveThread)(void);$/;"	v	file:
dll_PyFile_Type	if_python.c	/^static PyTypeObject* dll_PyFile_Type;$/;"	v	file:
dll_PyFloat_AsDouble	if_python.c	/^static double(*dll_PyFloat_AsDouble)(PyObject *);$/;"	v	file:
dll_PyFloat_FromDouble	if_python.c	/^static PyObject*(*dll_PyFloat_FromDouble)(double);$/;"	v	file:
dll_PyFloat_Type	if_python.c	/^static PyTypeObject* dll_PyFloat_Type;$/;"	v	file:
dll_PyGILState_Ensure	if_python.c	/^static PyGILState_STATE	(*dll_PyGILState_Ensure)(void);$/;"	v	file:
dll_PyGILState_Release	if_python.c	/^static void (*dll_PyGILState_Release)(PyGILState_STATE);$/;"	v	file:
dll_PyImport_AddModule	if_python.c	/^static PyObject*(*dll_PyImport_AddModule)(char *);$/;"	v	file:
dll_PyImport_ImportModule	if_python.c	/^static PyObject*(*dll_PyImport_ImportModule)(const char *);$/;"	v	file:
dll_PyInt_AsLong	if_python.c	/^static long(*dll_PyInt_AsLong)(PyObject *);$/;"	v	file:
dll_PyInt_FromLong	if_python.c	/^static PyObject*(*dll_PyInt_FromLong)(long);$/;"	v	file:
dll_PyInt_Type	if_python.c	/^static PyTypeObject* dll_PyInt_Type;$/;"	v	file:
dll_PyIter_Next	if_python.c	/^static PyObject* (*dll_PyIter_Next)(PyObject *);$/;"	v	file:
dll_PyList_Append	if_python.c	/^static int(*dll_PyList_Append)(PyObject *, PyObject *);$/;"	v	file:
dll_PyList_GetItem	if_python.c	/^static PyObject*(*dll_PyList_GetItem)(PyObject *, PyInt);$/;"	v	file:
dll_PyList_Insert	if_python.c	/^static int(*dll_PyList_Insert)(PyObject *, PyInt, PyObject *);$/;"	v	file:
dll_PyList_New	if_python.c	/^static PyObject*(*dll_PyList_New)(PyInt size);$/;"	v	file:
dll_PyList_SetItem	if_python.c	/^static int(*dll_PyList_SetItem)(PyObject *, PyInt, PyObject *);$/;"	v	file:
dll_PyList_Size	if_python.c	/^static PyInt(*dll_PyList_Size)(PyObject *);$/;"	v	file:
dll_PyList_Type	if_python.c	/^static PyTypeObject* dll_PyList_Type;$/;"	v	file:
dll_PyLong_AsLong	if_python.c	/^static long(*dll_PyLong_AsLong)(PyObject *);$/;"	v	file:
dll_PyLong_FromLong	if_python.c	/^static PyObject*(*dll_PyLong_FromLong)(long);$/;"	v	file:
dll_PyLong_Type	if_python.c	/^static PyTypeObject* dll_PyLong_Type;$/;"	v	file:
dll_PyMapping_Check	if_python.c	/^static int (*dll_PyMapping_Check)(PyObject *);$/;"	v	file:
dll_PyMapping_Keys	if_python.c	/^static PyObject* (*dll_PyMapping_Keys)(PyObject *);$/;"	v	file:
dll_PyMem_Free	if_python.c	/^static int(*dll_PyMem_Free)(void *);$/;"	v	file:
dll_PyMem_Malloc	if_python.c	/^static void* (*dll_PyMem_Malloc)(size_t);$/;"	v	file:
dll_PyModule_AddObject	if_python.c	/^static int(*dll_PyModule_AddObject)(PyObject *, const char *, PyObject *);$/;"	v	file:
dll_PyModule_GetDict	if_python.c	/^static PyObject*(*dll_PyModule_GetDict)(PyObject *);$/;"	v	file:
dll_PyNumber_Check	if_python.c	/^static int(*dll_PyNumber_Check)(PyObject *);$/;"	v	file:
dll_PyNumber_Long	if_python.c	/^static PyObject*(*dll_PyNumber_Long)(PyObject *);$/;"	v	file:
dll_PyObject_Call	if_python.c	/^static PyObject* (*dll_PyObject_Call)(PyObject *, PyObject *, PyObject *);$/;"	v	file:
dll_PyObject_CallFunction	if_python.c	/^static PyObject* (*dll_PyObject_CallFunction)(PyObject *, char *, ...);$/;"	v	file:
dll_PyObject_CallFunctionObjArgs	if_python.c	/^static PyObject* (*dll_PyObject_CallFunctionObjArgs)(PyObject *, ...);$/;"	v	file:
dll_PyObject_CallMethod	if_python.c	/^static PyObject* (*dll_PyObject_CallMethod)(PyObject *, char *, PyObject *);$/;"	v	file:
dll_PyObject_Free	if_python.c	/^static void (*dll_PyObject_Free)(void*);$/;"	v	file:
dll_PyObject_GC_Del	if_python.c	/^static void(*dll_PyObject_GC_Del)(void *);$/;"	v	file:
dll_PyObject_GC_UnTrack	if_python.c	/^static void(*dll_PyObject_GC_UnTrack)(void *);$/;"	v	file:
dll_PyObject_GetAttrString	if_python.c	/^static PyObject* (*dll_PyObject_GetAttrString)(PyObject *, const char *);$/;"	v	file:
dll_PyObject_GetItem	if_python.c	/^static PyObject* (*dll_PyObject_GetItem)(PyObject *, PyObject *);$/;"	v	file:
dll_PyObject_GetIter	if_python.c	/^static PyObject* (*dll_PyObject_GetIter)(PyObject *);$/;"	v	file:
dll_PyObject_HasAttrString	if_python.c	/^static int (*dll_PyObject_HasAttrString)(PyObject *, const char *);$/;"	v	file:
dll_PyObject_IsTrue	if_python.c	/^static int (*dll_PyObject_IsTrue)(PyObject *);$/;"	v	file:
dll_PyObject_Malloc	if_python.c	/^static void* (*dll_PyObject_Malloc)(size_t);$/;"	v	file:
dll_PyObject_Repr	if_python.c	/^static PyObject* (*dll_PyObject_Repr)(PyObject *);$/;"	v	file:
dll_PyObject_SetAttrString	if_python.c	/^static int (*dll_PyObject_SetAttrString)(PyObject *, const char *, PyObject *);$/;"	v	file:
dll_PyRun_SimpleString	if_python.c	/^static int(*dll_PyRun_SimpleString)(char *);$/;"	v	file:
dll_PyRun_String	if_python.c	/^static PyObject *(*dll_PyRun_String)(char *, int, PyObject *, PyObject *);$/;"	v	file:
dll_PySequence_Check	if_python.c	/^static int (*dll_PySequence_Check)(PyObject *);$/;"	v	file:
dll_PySequence_Fast	if_python.c	/^static PyObject*(*dll_PySequence_Fast)(PyObject *, const char *);$/;"	v	file:
dll_PySequence_GetItem	if_python.c	/^static PyObject*(*dll_PySequence_GetItem)(PyObject *, PyInt);$/;"	v	file:
dll_PySequence_Size	if_python.c	/^static PyInt(*dll_PySequence_Size)(PyObject *);$/;"	v	file:
dll_PySlice_GetIndicesEx	if_python.c	/^static int (*dll_PySlice_GetIndicesEx)(PySliceObject *r, PyInt length,$/;"	v	file:
dll_PySlice_Type	if_python.c	/^static PyTypeObject* dll_PySlice_Type;$/;"	v	file:
dll_PyString_AsString	if_python.c	/^static char*(*dll_PyString_AsString)(PyObject *);$/;"	v	file:
dll_PyString_AsStringAndSize	if_python.c	/^static int(*dll_PyString_AsStringAndSize)(PyObject *, char **, PyInt *);$/;"	v	file:
dll_PyString_FromFormat	if_python.c	/^static PyObject*(*dll_PyString_FromFormat)(const char *, ...);$/;"	v	file:
dll_PyString_FromString	if_python.c	/^static PyObject*(*dll_PyString_FromString)(const char *);$/;"	v	file:
dll_PyString_FromStringAndSize	if_python.c	/^static PyObject*(*dll_PyString_FromStringAndSize)(const char *, PyInt);$/;"	v	file:
dll_PyString_Size	if_python.c	/^static PyInt(*dll_PyString_Size)(PyObject *);$/;"	v	file:
dll_PyString_Type	if_python.c	/^static PyTypeObject* dll_PyString_Type;$/;"	v	file:
dll_PySys_GetObject	if_python.c	/^static PyObject *(*dll_PySys_GetObject)(char *);$/;"	v	file:
dll_PySys_SetArgv	if_python.c	/^static int(*dll_PySys_SetArgv)(int, char **);$/;"	v	file:
dll_PySys_SetObject	if_python.c	/^static int(*dll_PySys_SetObject)(char *, PyObject *);$/;"	v	file:
dll_PyTuple_GetItem	if_python.c	/^static PyObject*(*dll_PyTuple_GetItem)(PyObject *, PyInt);$/;"	v	file:
dll_PyTuple_Size	if_python.c	/^static PyInt(*dll_PyTuple_Size)(PyObject *);$/;"	v	file:
dll_PyTuple_Type	if_python.c	/^static PyTypeObject* dll_PyTuple_Type;$/;"	v	file:
dll_PyType_GenericAlloc	if_python.c	/^static PyObject* (*dll_PyType_GenericAlloc)(PyTypeObject *type, PyInt nitems);$/;"	v	file:
dll_PyType_IsSubtype	if_python.c	/^static int (*dll_PyType_IsSubtype)(PyTypeObject *, PyTypeObject *);$/;"	v	file:
dll_PyType_Ready	if_python.c	/^static int (*dll_PyType_Ready)(PyTypeObject *type);$/;"	v	file:
dll_PyType_Type	if_python.c	/^static PyTypeObject* dll_PyType_Type;$/;"	v	file:
dll_PyUnicode_Type	if_python.c	/^static PyTypeObject* dll_PyUnicode_Type;$/;"	v	file:
dll_Py_BuildValue	if_python.c	/^static PyObject*(*dll_Py_BuildValue)(char *, ...);$/;"	v	file:
dll_Py_Finalize	if_python.c	/^static void(*dll_Py_Finalize)(void);$/;"	v	file:
dll_Py_FindMethod	if_python.c	/^static PyObject*(*dll_Py_FindMethod)(struct PyMethodDef[], PyObject *, char *);$/;"	v	file:
dll_Py_InitModule4	if_python.c	/^static PyObject*(*dll_Py_InitModule4)(char *, struct PyMethodDef *, char *, PyObject *, int);$/;"	v	file:
dll_Py_Initialize	if_python.c	/^static void(*dll_Py_Initialize)(void);$/;"	v	file:
dll_Py_IsInitialized	if_python.c	/^static int(*dll_Py_IsInitialized)(void);$/;"	v	file:
dll_Py_NoSiteFlag	if_python.c	/^static int* dll_Py_NoSiteFlag;$/;"	v	file:
dll_Py_SetPythonHome	if_python.c	/^static void(*dll_Py_SetPythonHome)(char *home);$/;"	v	file:
dll_Tcl_CreateInterp	if_tcl.c	/^Tcl_Interp* (*dll_Tcl_CreateInterp)();$/;"	v
dll_Tcl_FindExecutable	if_tcl.c	/^void (*dll_Tcl_FindExecutable)(const void *);$/;"	v
dll__PyObject_DebugFree	if_python.c	/^static void (*dll__PyObject_DebugFree)(void*);$/;"	v	file:
dll__PyObject_DebugMalloc	if_python.c	/^static void* (*dll__PyObject_DebugMalloc)(size_t);$/;"	v	file:
dll__PyObject_GC_Del	if_python.c	/^static void(*dll__PyObject_GC_Del)(void *);$/;"	v	file:
dll__PyObject_GC_New	if_python.c	/^static PyObject*(*dll__PyObject_GC_New)(PyTypeObject *);$/;"	v	file:
dll__PyObject_GC_UnTrack	if_python.c	/^static void(*dll__PyObject_GC_UnTrack)(void *);$/;"	v	file:
dll__PyObject_Init	if_python.c	/^static PyObject*(*dll__PyObject_Init)(PyObject *, PyTypeObject *);$/;"	v	file:
dll__PyObject_New	if_python.c	/^static PyObject*(*dll__PyObject_New)(PyTypeObject *, PyObject *);$/;"	v	file:
dll__PyObject_NextNotImplemented	if_python.c	/^static iternextfunc dll__PyObject_NextNotImplemented;$/;"	v	file:
dll__Py_Dealloc	if_python.c	/^static void (*dll__Py_Dealloc)(PyObject *obj);$/;"	v	file:
dll__Py_NegativeRefcount	if_python.c	/^static void (*dll__Py_NegativeRefcount)(const char *fname, int lineno, PyObject *op);$/;"	v	file:
dll__Py_NoneStruct	if_python.c	/^static PyObject* dll__Py_NoneStruct;$/;"	v	file:
dll__Py_RefTotal	if_python.c	/^static PyInt* dll__Py_RefTotal;$/;"	v	file:
dll__Py_TrueStruct	if_python.c	/^static PyObject* dll__Py_TrueStruct;$/;"	v	file:
dll_luaL_addlstring	if_lua.c	/^void (*dll_luaL_addlstring) (luaL_Buffer *B, const char *s, size_t l);$/;"	v
dll_luaL_argerror	if_lua.c	/^int (*dll_luaL_argerror) (lua_State *L, int numarg, const char *extramsg);$/;"	v
dll_luaL_buffinit	if_lua.c	/^void (*dll_luaL_buffinit) (lua_State *L, luaL_Buffer *B);$/;"	v
dll_luaL_checkany	if_lua.c	/^void (*dll_luaL_checkany) (lua_State *L, int narg);$/;"	v
dll_luaL_checkinteger	if_lua.c	/^lua_Integer (*dll_luaL_checkinteger) (lua_State *L, int numArg);$/;"	v
dll_luaL_checklstring	if_lua.c	/^const char *(*dll_luaL_checklstring) (lua_State *L, int numArg, size_t *l);$/;"	v
dll_luaL_checktype	if_lua.c	/^void (*dll_luaL_checktype) (lua_State *L, int narg, int t);$/;"	v
dll_luaL_error	if_lua.c	/^int (*dll_luaL_error) (lua_State *L, const char *fmt, ...);$/;"	v
dll_luaL_loadbuffer	if_lua.c	/^int (*dll_luaL_loadbuffer) (lua_State *L, const char *buff, size_t sz, const char *name);$/;"	v
dll_luaL_loadbufferx	if_lua.c	/^int (*dll_luaL_loadbufferx) (lua_State *L, const char *buff, size_t sz, const char *name, const char *mode);$/;"	v
dll_luaL_loadfile	if_lua.c	/^int (*dll_luaL_loadfile) (lua_State *L, const char *filename);$/;"	v
dll_luaL_loadfilex	if_lua.c	/^int (*dll_luaL_loadfilex) (lua_State *L, const char *filename, const char *mode);$/;"	v
dll_luaL_newstate	if_lua.c	/^lua_State *(*dll_luaL_newstate) (void);$/;"	v
dll_luaL_openlib	if_lua.c	/^void (*dll_luaL_openlib) (lua_State *L, const char *libname, const luaL_Reg *l, int nup);$/;"	v
dll_luaL_openlibs	if_lua.c	/^void (*dll_luaL_openlibs) (lua_State *L);$/;"	v
dll_luaL_optinteger	if_lua.c	/^lua_Integer (*dll_luaL_optinteger) (lua_State *L, int nArg, lua_Integer def);$/;"	v
dll_luaL_prepbuffer	if_lua.c	/^char *(*dll_luaL_prepbuffer) (luaL_Buffer *B);$/;"	v
dll_luaL_prepbuffsize	if_lua.c	/^char *(*dll_luaL_prepbuffsize) (luaL_Buffer *B, size_t sz);$/;"	v
dll_luaL_pushresult	if_lua.c	/^void (*dll_luaL_pushresult) (luaL_Buffer *B);$/;"	v
dll_luaL_register	if_lua.c	/^void (*dll_luaL_register) (lua_State *L, const char *libname, const luaL_Reg *l);$/;"	v
dll_luaL_setfuncs	if_lua.c	/^void (*dll_luaL_setfuncs) (lua_State *L, const luaL_Reg *l, int nup);$/;"	v
dll_luaL_typerror	if_lua.c	/^int (*dll_luaL_typerror) (lua_State *L, int narg, const char *tname);$/;"	v
dll_lua_call	if_lua.c	/^void (*dll_lua_call) (lua_State *L, int nargs, int nresults);$/;"	v
dll_lua_callk	if_lua.c	/^void (*dll_lua_callk) (lua_State *L, int nargs, int nresults, int ctx,$/;"	v
dll_lua_close	if_lua.c	/^void       (*dll_lua_close) (lua_State *L);$/;"	v
dll_lua_copy	if_lua.c	/^void (*dll_lua_copy) (lua_State *L, int fromidx, int toidx);$/;"	v
dll_lua_createtable	if_lua.c	/^void (*dll_lua_createtable) (lua_State *L, int narr, int nrec);$/;"	v
dll_lua_getfield	if_lua.c	/^void (*dll_lua_getfield) (lua_State *L, int idx, const char *k);$/;"	v
dll_lua_getglobal	if_lua.c	/^void (*dll_lua_getglobal) (lua_State *L, const char *var);$/;"	v
dll_lua_getmetatable	if_lua.c	/^int (*dll_lua_getmetatable) (lua_State *L, int objindex);$/;"	v
dll_lua_gettop	if_lua.c	/^int (*dll_lua_gettop) (lua_State *L);$/;"	v
dll_lua_isnumber	if_lua.c	/^int (*dll_lua_isnumber) (lua_State *L, int idx);$/;"	v
dll_lua_isstring	if_lua.c	/^int (*dll_lua_isstring) (lua_State *L, int idx);$/;"	v
dll_lua_newuserdata	if_lua.c	/^void *(*dll_lua_newuserdata) (lua_State *L, size_t sz);$/;"	v
dll_lua_newuserdatauv	if_lua.c	/^void *(*dll_lua_newuserdatauv) (lua_State *L, size_t sz, int nuvalue);$/;"	v
dll_lua_next	if_lua.c	/^int (*dll_lua_next) (lua_State *L, int idx);$/;"	v
dll_lua_pcall	if_lua.c	/^int (*dll_lua_pcall) (lua_State *L, int nargs, int nresults, int errfunc);$/;"	v
dll_lua_pcallk	if_lua.c	/^int (*dll_lua_pcallk) (lua_State *L, int nargs, int nresults, int errfunc,$/;"	v
dll_lua_pushboolean	if_lua.c	/^void (*dll_lua_pushboolean) (lua_State *L, int b);$/;"	v
dll_lua_pushcclosure	if_lua.c	/^void (*dll_lua_pushcclosure) (lua_State *L, lua_CFunction fn, int n);$/;"	v
dll_lua_pushfstring	if_lua.c	/^const char *(*dll_lua_pushfstring) (lua_State *L, const char *fmt, ...);$/;"	v
dll_lua_pushinteger	if_lua.c	/^void (*dll_lua_pushinteger) (lua_State *L, lua_Integer n);$/;"	v
dll_lua_pushlightuserdata	if_lua.c	/^void (*dll_lua_pushlightuserdata) (lua_State *L, void *p);$/;"	v
dll_lua_pushlstring	if_lua.c	/^void (*dll_lua_pushlstring) (lua_State *L, const char *s, size_t l);$/;"	v
dll_lua_pushnil	if_lua.c	/^void (*dll_lua_pushnil) (lua_State *L);$/;"	v
dll_lua_pushnumber	if_lua.c	/^void (*dll_lua_pushnumber) (lua_State *L, lua_Number n);$/;"	v
dll_lua_pushstring	if_lua.c	/^void (*dll_lua_pushstring) (lua_State *L, const char *s);$/;"	v
dll_lua_pushvalue	if_lua.c	/^void (*dll_lua_pushvalue) (lua_State *L, int idx);$/;"	v
dll_lua_rawequal	if_lua.c	/^int (*dll_lua_rawequal) (lua_State *L, int idx1, int idx2);$/;"	v
dll_lua_rawget	if_lua.c	/^int (*dll_lua_rawget) (lua_State *L, int idx);$/;"	v
dll_lua_rawget	if_lua.c	/^void (*dll_lua_rawget) (lua_State *L, int idx);$/;"	v
dll_lua_rawgeti	if_lua.c	/^int (*dll_lua_rawgeti) (lua_State *L, int idx, lua_Integer n);$/;"	v
dll_lua_rawgeti	if_lua.c	/^void (*dll_lua_rawgeti) (lua_State *L, int idx, int n);$/;"	v
dll_lua_rawset	if_lua.c	/^void (*dll_lua_rawset) (lua_State *L, int idx);$/;"	v
dll_lua_rawseti	if_lua.c	/^void (*dll_lua_rawseti) (lua_State *L, int idx, int n);$/;"	v
dll_lua_rawseti	if_lua.c	/^void (*dll_lua_rawseti) (lua_State *L, int idx, lua_Integer n);$/;"	v
dll_lua_remove	if_lua.c	/^void (*dll_lua_remove) (lua_State *L, int idx);$/;"	v
dll_lua_replace	if_lua.c	/^void (*dll_lua_replace) (lua_State *L, int idx);$/;"	v
dll_lua_rotate	if_lua.c	/^void  (*dll_lua_rotate) (lua_State *L, int idx, int n);$/;"	v
dll_lua_setfield	if_lua.c	/^void (*dll_lua_setfield) (lua_State *L, int idx, const char *k);$/;"	v
dll_lua_setglobal	if_lua.c	/^void (*dll_lua_setglobal) (lua_State *L, const char *var);$/;"	v
dll_lua_setmetatable	if_lua.c	/^int (*dll_lua_setmetatable) (lua_State *L, int objindex);$/;"	v
dll_lua_settop	if_lua.c	/^void (*dll_lua_settop) (lua_State *L, int idx);$/;"	v
dll_lua_toboolean	if_lua.c	/^int (*dll_lua_toboolean) (lua_State *L, int idx);$/;"	v
dll_lua_tointeger	if_lua.c	/^lua_Integer (*dll_lua_tointeger) (lua_State *L, int idx);$/;"	v
dll_lua_tointegerx	if_lua.c	/^lua_Integer (*dll_lua_tointegerx) (lua_State *L, int idx, int *isnum);$/;"	v
dll_lua_tolstring	if_lua.c	/^const char *(*dll_lua_tolstring) (lua_State *L, int idx, size_t *len);$/;"	v
dll_lua_tonumber	if_lua.c	/^lua_Number (*dll_lua_tonumber) (lua_State *L, int idx);$/;"	v
dll_lua_tonumberx	if_lua.c	/^lua_Number (*dll_lua_tonumberx) (lua_State *L, int idx, int *isnum);$/;"	v
dll_lua_touserdata	if_lua.c	/^void *(*dll_lua_touserdata) (lua_State *L, int idx);$/;"	v
dll_lua_type	if_lua.c	/^int (*dll_lua_type) (lua_State *L, int idx);$/;"	v
dll_lua_typename	if_lua.c	/^const char *(*dll_lua_typename) (lua_State *L, int tp);$/;"	v
dll_luaopen_base	if_lua.c	/^int (*dll_luaopen_base) (lua_State *L);$/;"	v
dll_luaopen_debug	if_lua.c	/^int (*dll_luaopen_debug) (lua_State *L);$/;"	v
dll_luaopen_io	if_lua.c	/^int (*dll_luaopen_io) (lua_State *L);$/;"	v
dll_luaopen_math	if_lua.c	/^int (*dll_luaopen_math) (lua_State *L);$/;"	v
dll_luaopen_os	if_lua.c	/^int (*dll_luaopen_os) (lua_State *L);$/;"	v
dll_luaopen_package	if_lua.c	/^int (*dll_luaopen_package) (lua_State *L);$/;"	v
dll_luaopen_string	if_lua.c	/^int (*dll_luaopen_string) (lua_State *L);$/;"	v
dll_luaopen_table	if_lua.c	/^int (*dll_luaopen_table) (lua_State *L);$/;"	v
dll_rb_ary_detransient	if_ruby.c	/^static void (*dll_rb_ary_detransient) (VALUE);$/;"	v	file:
dll_rb_ary_new	if_ruby.c	/^static VALUE (*dll_rb_ary_new) (void);$/;"	v	file:
dll_rb_ary_new4	if_ruby.c	/^static VALUE (*dll_rb_ary_new4) (long n, const VALUE *elts);$/;"	v	file:
dll_rb_ary_push	if_ruby.c	/^static VALUE (*dll_rb_ary_push) (VALUE, VALUE);$/;"	v	file:
dll_rb_assoc_new	if_ruby.c	/^static VALUE (*dll_rb_assoc_new) (VALUE, VALUE);$/;"	v	file:
dll_rb_cFalseClass	if_ruby.c	/^VALUE *dll_rb_cFalseClass;$/;"	v
dll_rb_cFixnum	if_ruby.c	/^VALUE *dll_rb_cFixnum;$/;"	v
dll_rb_cFloat	if_ruby.c	/^VALUE *dll_rb_cFloat;$/;"	v
dll_rb_cInteger	if_ruby.c	/^VALUE *dll_rb_cInteger;$/;"	v
dll_rb_cNilClass	if_ruby.c	/^VALUE *dll_rb_cNilClass;$/;"	v
dll_rb_cObject	if_ruby.c	/^static VALUE *dll_rb_cObject;$/;"	v	file:
dll_rb_cString	if_ruby.c	/^VALUE *dll_rb_cString;$/;"	v
dll_rb_cSymbol	if_ruby.c	/^VALUE *dll_rb_cSymbol;$/;"	v
dll_rb_cTrueClass	if_ruby.c	/^VALUE *dll_rb_cTrueClass;$/;"	v
dll_rb_check_type	if_ruby.c	/^static void (*dll_rb_check_type) (VALUE,int);$/;"	v	file:
dll_rb_check_typeddata	if_ruby.c	/^static void *(*dll_rb_check_typeddata) (VALUE,const rb_data_type_t *);$/;"	v	file:
dll_rb_class_new_instance	if_ruby.c	/^static VALUE (*dll_rb_class_new_instance) (int,VALUE*,VALUE);$/;"	v	file:
dll_rb_class_path	if_ruby.c	/^static VALUE (*dll_rb_class_path) (VALUE);$/;"	v	file:
dll_rb_data_object_alloc	if_ruby.c	/^static VALUE (*dll_rb_data_object_alloc) (VALUE, void*, RUBY_DATA_FUNC, RUBY_DATA_FUNC);$/;"	v	file:
dll_rb_data_typed_object_alloc	if_ruby.c	/^static VALUE (*dll_rb_data_typed_object_alloc) (VALUE, void*, const rb_data_type_t *);$/;"	v	file:
dll_rb_data_typed_object_wrap	if_ruby.c	/^static VALUE (*dll_rb_data_typed_object_wrap) (VALUE, void*, const rb_data_type_t *);$/;"	v	file:
dll_rb_define_class_under	if_ruby.c	/^static VALUE (*dll_rb_define_class_under) (VALUE, const char*, VALUE);$/;"	v	file:
dll_rb_define_const	if_ruby.c	/^static void (*dll_rb_define_const) (VALUE,const char*,VALUE);$/;"	v	file:
dll_rb_define_global_function	if_ruby.c	/^static void (*dll_rb_define_global_function) (const char*,VALUE(*)(),int);$/;"	v	file:
dll_rb_define_method	if_ruby.c	/^static void (*dll_rb_define_method) (VALUE,const char*,VALUE(*)(),int);$/;"	v	file:
dll_rb_define_module	if_ruby.c	/^static VALUE (*dll_rb_define_module) (const char*);$/;"	v	file:
dll_rb_define_module_function	if_ruby.c	/^static void (*dll_rb_define_module_function) (VALUE,const char*,VALUE(*)(),int);$/;"	v	file:
dll_rb_define_singleton_method	if_ruby.c	/^static void (*dll_rb_define_singleton_method) (VALUE,const char*,VALUE(*)(),int);$/;"	v	file:
dll_rb_define_virtual_variable	if_ruby.c	/^static void (*dll_rb_define_virtual_variable) (const char*,VALUE(*)(),void(*)());$/;"	v	file:
dll_rb_eArgError	if_ruby.c	/^static VALUE *dll_rb_eArgError;$/;"	v	file:
dll_rb_eIndexError	if_ruby.c	/^static VALUE *dll_rb_eIndexError;$/;"	v	file:
dll_rb_eRuntimeError	if_ruby.c	/^static VALUE *dll_rb_eRuntimeError;$/;"	v	file:
dll_rb_eStandardError	if_ruby.c	/^static VALUE *dll_rb_eStandardError;$/;"	v	file:
dll_rb_enc_find	if_ruby.c	/^static rb_encoding* (*dll_rb_enc_find) (const char*);$/;"	v	file:
dll_rb_enc_find_index	if_ruby.c	/^static int (*dll_rb_enc_find_index) (const char*);$/;"	v	file:
dll_rb_enc_str_new	if_ruby.c	/^static VALUE (*dll_rb_enc_str_new) (const char*, long, rb_encoding*);$/;"	v	file:
dll_rb_errinfo	if_ruby.c	/^static VALUE (*dll_rb_errinfo) (void);$/;"	v	file:
dll_rb_eval_string_protect	if_ruby.c	/^static VALUE (*dll_rb_eval_string_protect) (const char*, int*);$/;"	v	file:
dll_rb_fix2int	if_ruby.c	/^static long (*dll_rb_fix2int) (VALUE);$/;"	v	file:
dll_rb_float_new	if_ruby.c	/^static VALUE (*dll_rb_float_new) (double);$/;"	v	file:
dll_rb_funcall2	if_ruby.c	/^static VALUE (*dll_rb_funcall2) (VALUE, ID, int, const VALUE*);$/;"	v	file:
dll_rb_funcallv	if_ruby.c	/^static VALUE (*dll_rb_funcallv) (VALUE, ID, int, const VALUE*);$/;"	v	file:
dll_rb_gc_writebarrier_unprotect	if_ruby.c	/^static void (*dll_rb_gc_writebarrier_unprotect)(VALUE obj);$/;"	v	file:
dll_rb_gc_writebarrier_unprotect_promoted	if_ruby.c	/^static void (*dll_rb_gc_writebarrier_unprotect_promoted)(VALUE);$/;"	v	file:
dll_rb_global_variable	if_ruby.c	/^static void (*dll_rb_global_variable) (VALUE*);$/;"	v	file:
dll_rb_hash_aset	if_ruby.c	/^static VALUE (*dll_rb_hash_aset) (VALUE, VALUE, VALUE);$/;"	v	file:
dll_rb_hash_foreach	if_ruby.c	/^static VALUE (*dll_rb_hash_foreach) (VALUE, int (*)(VALUE, VALUE, VALUE), VALUE);$/;"	v	file:
dll_rb_hash_new	if_ruby.c	/^static VALUE (*dll_rb_hash_new) (void);$/;"	v	file:
dll_rb_ia64_bsp	if_ruby.c	/^static void * (*dll_rb_ia64_bsp) (void);$/;"	v	file:
dll_rb_inspect	if_ruby.c	/^static VALUE (*dll_rb_inspect) (VALUE);$/;"	v	file:
dll_rb_int2big	if_ruby.c	/^static VALUE (*dll_rb_int2big)(SIGNED_VALUE);$/;"	v	file:
dll_rb_int2inum	if_ruby.c	/^static VALUE (*dll_rb_int2inum) (long);$/;"	v	file:
dll_rb_intern	if_ruby.c	/^static ID (*dll_rb_intern) (const char*);$/;"	v	file:
dll_rb_lastline_get	if_ruby.c	/^static VALUE (*dll_rb_lastline_get) (void);$/;"	v	file:
dll_rb_lastline_set	if_ruby.c	/^static void (*dll_rb_lastline_set) (VALUE);$/;"	v	file:
dll_rb_load	if_ruby.c	/^static void (*dll_rb_load) (VALUE, int);$/;"	v	file:
dll_rb_num2dbl	if_ruby.c	/^static double (*dll_rb_num2dbl) (VALUE);$/;"	v	file:
dll_rb_num2int	if_ruby.c	/^static long (*dll_rb_num2int) (VALUE);$/;"	v	file:
dll_rb_num2long	if_ruby.c	/^static long (*dll_rb_num2long) (VALUE);$/;"	v	file:
dll_rb_num2uint	if_ruby.c	/^static unsigned long (*dll_rb_num2uint) (VALUE);$/;"	v	file:
dll_rb_num2ulong	if_ruby.c	/^static unsigned long (*dll_rb_num2ulong) (VALUE);$/;"	v	file:
dll_rb_obj_alloc	if_ruby.c	/^static VALUE (*dll_rb_obj_alloc) (VALUE);$/;"	v	file:
dll_rb_obj_as_string	if_ruby.c	/^static VALUE (*dll_rb_obj_as_string) (VALUE);$/;"	v	file:
dll_rb_obj_id	if_ruby.c	/^static VALUE (*dll_rb_obj_id) (VALUE);$/;"	v	file:
dll_rb_protect	if_ruby.c	/^static VALUE (*dll_rb_protect) (VALUE (*)(VALUE), VALUE, int*);$/;"	v	file:
dll_rb_raise	if_ruby.c	/^static void (*dll_rb_raise) (VALUE, const char*, ...);$/;"	v	file:
dll_rb_require	if_ruby.c	/^static VALUE (*dll_rb_require) (const char*);$/;"	v	file:
dll_rb_sprintf	if_ruby.c	/^static VALUE (*dll_rb_sprintf) (const char*, ...);$/;"	v	file:
dll_rb_stderr	if_ruby.c	/^static VALUE *dll_rb_stderr;$/;"	v	file:
dll_rb_stdout	if_ruby.c	/^static VALUE *dll_rb_stdout;$/;"	v	file:
dll_rb_str2cstr	if_ruby.c	/^static char *(*dll_rb_str2cstr) (VALUE,int*);$/;"	v	file:
dll_rb_str_cat	if_ruby.c	/^static VALUE (*dll_rb_str_cat) (VALUE, const char*, long);$/;"	v	file:
dll_rb_str_concat	if_ruby.c	/^static VALUE (*dll_rb_str_concat) (VALUE, VALUE);$/;"	v	file:
dll_rb_str_new	if_ruby.c	/^static VALUE (*dll_rb_str_new) (const char*, long);$/;"	v	file:
dll_rb_str_new2	if_ruby.c	/^static VALUE (*dll_rb_str_new2) (const char*);$/;"	v	file:
dll_rb_str_new_cstr	if_ruby.c	/^static VALUE (*dll_rb_str_new_cstr) (const char*);$/;"	v	file:
dll_rb_string_value	if_ruby.c	/^static VALUE (*dll_rb_string_value) (volatile VALUE*);$/;"	v	file:
dll_rb_string_value_ptr	if_ruby.c	/^static char * (*dll_rb_string_value_ptr) (volatile VALUE*);$/;"	v	file:
dll_rb_w32_snprintf	if_ruby.c	/^static int (*dll_rb_w32_snprintf)(char*, size_t, const char*, ...);$/;"	v	file:
dll_ruby_errinfo	if_ruby.c	/^static VALUE *dll_ruby_errinfo;$/;"	v	file:
dll_ruby_init	if_ruby.c	/^static void (*dll_ruby_init) (void);$/;"	v	file:
dll_ruby_init_loadpath	if_ruby.c	/^static void (*dll_ruby_init_loadpath) (void);$/;"	v	file:
dll_ruby_init_stack	if_ruby.c	/^static void (*dll_ruby_init_stack)(VALUE*);$/;"	v	file:
dll_ruby_init_stack	if_ruby.c	/^static void (*dll_ruby_init_stack)(VALUE*, void*);$/;"	v	file:
dll_ruby_script	if_ruby.c	/^static void (*dll_ruby_script) (const char*);$/;"	v	file:
dll_ruby_sysinit	if_ruby.c	/^static void (*dll_ruby_sysinit) (int*, char***);$/;"	v	file:
dll_scheme_add_global	if_mzsch.c	/^static void (*dll_scheme_add_global)(const char *name, Scheme_Object *val,$/;"	v	file:
dll_scheme_add_global_symbol	if_mzsch.c	/^static void (*dll_scheme_add_global_symbol)(Scheme_Object *name,$/;"	v	file:
dll_scheme_apply	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_apply)(Scheme_Object *rator, int num_rands,$/;"	v	file:
dll_scheme_basic_env	if_mzsch.c	/^static Scheme_Env *(*dll_scheme_basic_env)(void);$/;"	v	file:
dll_scheme_builtin_value	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_builtin_value)(const char *name);$/;"	v	file:
dll_scheme_byte_string_to_char_string	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_byte_string_to_char_string)(Scheme_Object *s);$/;"	v	file:
dll_scheme_char_string_to_byte_string	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_char_string_to_byte_string)$/;"	v	file:
dll_scheme_char_string_to_path	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_char_string_to_path)$/;"	v	file:
dll_scheme_check_threads	if_mzsch.c	/^static void (*dll_scheme_check_threads)(void);$/;"	v	file:
dll_scheme_close_input_port	if_mzsch.c	/^static void (*dll_scheme_close_input_port)(Scheme_Object *port);$/;"	v	file:
dll_scheme_console_output_ptr	if_mzsch.c	/^static void (**dll_scheme_console_output_ptr)(char *str, OUTPUT_LEN_TYPE len);$/;"	v	file:
dll_scheme_console_printf_ptr	if_mzsch.c	/^static void (**dll_scheme_console_printf_ptr)(char *str, ...);$/;"	v	file:
dll_scheme_count_lines	if_mzsch.c	/^static void (*dll_scheme_count_lines)(Scheme_Object *port);$/;"	v	file:
dll_scheme_current_config	if_mzsch.c	/^static Scheme_Config *(*dll_scheme_current_config)(void);$/;"	v	file:
dll_scheme_current_continuation_marks	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_current_continuation_marks)(Scheme_Object *prompt_tag);$/;"	v	file:
dll_scheme_current_continuation_marks	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_current_continuation_marks)(void);$/;"	v	file:
dll_scheme_current_thread_ptr	if_mzsch.c	/^static Scheme_Thread **dll_scheme_current_thread_ptr;$/;"	v	file:
dll_scheme_display	if_mzsch.c	/^static void (*dll_scheme_display)(Scheme_Object *obj, Scheme_Object *port);$/;"	v	file:
dll_scheme_display_to_string	if_mzsch.c	/^static char *(*dll_scheme_display_to_string)(Scheme_Object *obj, OUTPUT_LEN_TYPE *len);$/;"	v	file:
dll_scheme_do_eval	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_do_eval)(Scheme_Object *obj,$/;"	v	file:
dll_scheme_dont_gc_ptr	if_mzsch.c	/^static void (*dll_scheme_dont_gc_ptr)(void *p);$/;"	v	file:
dll_scheme_dynamic_wind	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_dynamic_wind)(void (*pre)(void *), Scheme_Object *(* volatile act)(void *), void (* volatile post)(void *), Scheme_Object *(*jmp_handler)(void *), void * volatile data);$/;"	v	file:
dll_scheme_embedded_load	if_mzsch.c	/^static void (*dll_scheme_embedded_load)(intptr_t len, const char *s, int predefined);$/;"	v	file:
dll_scheme_eof	if_mzsch.c	/^static Scheme_Object *dll_scheme_eof;$/;"	v	file:
dll_scheme_eq	if_mzsch.c	/^static int (*dll_scheme_eq)(Scheme_Object *obj1, Scheme_Object *obj2);$/;"	v	file:
dll_scheme_eval	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_eval)(Scheme_Object *obj, Scheme_Env *env);$/;"	v	file:
dll_scheme_eval_string	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_eval_string)(const char *str,$/;"	v	file:
dll_scheme_eval_string_all	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_eval_string_all)(const char *str,$/;"	v	file:
dll_scheme_external_get_thread_local_variables	if_mzsch.c	/^static Thread_Local_Variables *(*dll_scheme_external_get_thread_local_variables)(void);$/;"	v	file:
dll_scheme_false	if_mzsch.c	/^static Scheme_Object *dll_scheme_false;$/;"	v	file:
dll_scheme_finish_primitive_module	if_mzsch.c	/^static void (*dll_scheme_finish_primitive_module)(Scheme_Env *env);$/;"	v	file:
dll_scheme_format	if_mzsch.c	/^static char *(*dll_scheme_format)(char *format, int flen, int argc,$/;"	v	file:
dll_scheme_format_utf8	if_mzsch.c	/^static char *(*dll_scheme_format_utf8)(char *format, int flen, int argc,$/;"	v	file:
dll_scheme_free_immobile_box	if_mzsch.c	/^static void (*dll_scheme_free_immobile_box)(void **b);$/;"	v	file:
dll_scheme_gc_ptr_ok	if_mzsch.c	/^static void (*dll_scheme_gc_ptr_ok)(void *p);$/;"	v	file:
dll_scheme_get_param	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_get_param)(Scheme_Config *c, int pos);$/;"	v	file:
dll_scheme_get_sized_byte_string_output	if_mzsch.c	/^static char *(*dll_scheme_get_sized_byte_string_output)(Scheme_Object *,$/;"	v	file:
dll_scheme_get_sized_string_output	if_mzsch.c	/^static char *(*dll_scheme_get_sized_string_output)(Scheme_Object *,$/;"	v	file:
dll_scheme_hash_get	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_hash_get)(Scheme_Hash_Table *table,$/;"	v	file:
dll_scheme_hash_set	if_mzsch.c	/^static void (*dll_scheme_hash_set)(Scheme_Hash_Table *table,$/;"	v	file:
dll_scheme_init_collection_paths	if_mzsch.c	/^static void (*dll_scheme_init_collection_paths)(Scheme_Env *global_env, Scheme_Object *extra_dirs);$/;"	v	file:
dll_scheme_intern_symbol	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_intern_symbol)(const char *name);$/;"	v	file:
dll_scheme_lookup_global	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_lookup_global)(Scheme_Object *symbol,$/;"	v	file:
dll_scheme_main_setup	if_mzsch.c	/^static int (*dll_scheme_main_setup)(int no_auto_statics, Scheme_Env_Main _main, int argc, char **argv);$/;"	v	file:
dll_scheme_make_byte_string	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_byte_string)(const char *chars);$/;"	v	file:
dll_scheme_make_byte_string_output_port	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_byte_string_output_port)();$/;"	v	file:
dll_scheme_make_closed_prim_w_arity	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_closed_prim_w_arity)$/;"	v	file:
dll_scheme_make_double	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_double)(double d);$/;"	v	file:
dll_scheme_make_hash_table	if_mzsch.c	/^static Scheme_Hash_Table *(*dll_scheme_make_hash_table)(int type);$/;"	v	file:
dll_scheme_make_integer_value	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_integer_value)(long i);$/;"	v	file:
dll_scheme_make_pair	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_pair)(Scheme_Object *car,$/;"	v	file:
dll_scheme_make_path	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_path)(const char *chars);$/;"	v	file:
dll_scheme_make_prim_w_arity	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_prim_w_arity)(Scheme_Prim *prim,$/;"	v	file:
dll_scheme_make_sized_byte_string	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_sized_byte_string)(char *chars,$/;"	v	file:
dll_scheme_make_string	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_string)(const char *chars);$/;"	v	file:
dll_scheme_make_string_output_port	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_string_output_port)();$/;"	v	file:
dll_scheme_make_struct_instance	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_struct_instance)(Scheme_Object *stype,$/;"	v	file:
dll_scheme_make_struct_names	if_mzsch.c	/^static Scheme_Object **(*dll_scheme_make_struct_names)(Scheme_Object *base,$/;"	v	file:
dll_scheme_make_struct_type	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_struct_type)(Scheme_Object *base,$/;"	v	file:
dll_scheme_make_struct_values	if_mzsch.c	/^static Scheme_Object **(*dll_scheme_make_struct_values)($/;"	v	file:
dll_scheme_make_type	if_mzsch.c	/^static Scheme_Type (*dll_scheme_make_type)(const char *name);$/;"	v	file:
dll_scheme_make_vector	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_make_vector)(int size,$/;"	v	file:
dll_scheme_malloc_fail_ok	if_mzsch.c	/^static void *(*dll_scheme_malloc_fail_ok)(void *(*f)(size_t), size_t);$/;"	v	file:
dll_scheme_malloc_immobile_box	if_mzsch.c	/^static void **(*dll_scheme_malloc_immobile_box)(void *p);$/;"	v	file:
dll_scheme_namespace_require	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_namespace_require)(Scheme_Object *req);$/;"	v	file:
dll_scheme_notify_multithread_ptr	if_mzsch.c	/^static void (**dll_scheme_notify_multithread_ptr)(int on);$/;"	v	file:
dll_scheme_null	if_mzsch.c	/^static Scheme_Object *dll_scheme_null;$/;"	v	file:
dll_scheme_open_input_file	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_open_input_file)(const char *name,$/;"	v	file:
dll_scheme_primitive_module	if_mzsch.c	/^static Scheme_Env *(*dll_scheme_primitive_module)(Scheme_Object *name,$/;"	v	file:
dll_scheme_proper_list_length	if_mzsch.c	/^static int (*dll_scheme_proper_list_length)(Scheme_Object *list);$/;"	v	file:
dll_scheme_raise	if_mzsch.c	/^static void (*dll_scheme_raise)(Scheme_Object *exn);$/;"	v	file:
dll_scheme_read	if_mzsch.c	/^static Scheme_Object *(*dll_scheme_read)(Scheme_Object *port);$/;"	v	file:
dll_scheme_register_embedded_load	if_mzsch.c	/^static void (*dll_scheme_register_embedded_load)(intptr_t len, const char *s);$/;"	v	file:
dll_scheme_register_static	if_mzsch.c	/^static void (*dll_scheme_register_static)(void *ptr, long size);$/;"	v	file:
dll_scheme_register_tls_space	if_mzsch.c	/^static void (*dll_scheme_register_tls_space)(void *tls_space, int _tls_index);$/;"	v	file:
dll_scheme_set_collects_path	if_mzsch.c	/^static void *(*dll_scheme_set_collects_path)(Scheme_Object *p);$/;"	v	file:
dll_scheme_set_config_path	if_mzsch.c	/^static void (*dll_scheme_set_config_path)(Scheme_Object *p);$/;"	v	file:
dll_scheme_set_param	if_mzsch.c	/^static void (*dll_scheme_set_param)(Scheme_Config *c, int pos,$/;"	v	file:
dll_scheme_set_stack_base	if_mzsch.c	/^static void (*dll_scheme_set_stack_base)(void *base, int no_auto_statics);$/;"	v	file:
dll_scheme_signal_error	if_mzsch.c	/^static void (*dll_scheme_signal_error)(const char *msg, ...);$/;"	v	file:
dll_scheme_true	if_mzsch.c	/^static Scheme_Object *dll_scheme_true;$/;"	v	file:
dll_scheme_void	if_mzsch.c	/^static Scheme_Object *dll_scheme_void;$/;"	v	file:
dll_scheme_wrong_type	if_mzsch.c	/^static void (*dll_scheme_wrong_type)(const char *name, const char *expected,$/;"	v	file:
dname	structs.h	/^    char_u	*dname;		    \/\/ Displayed Name ("name" without '&')$/;"	m	struct:VimMenu
dnd_targets	gui_gtk_x11.c	/^static const GtkTargetEntry dnd_targets[] =$/;"	v	file:
dnd_yank_drag_data	register.c	/^dnd_yank_drag_data(char_u *str, long len)$/;"	f
do_Lower	regexp.c	/^do_Lower(int *d, int c)$/;"	f	file:
do_Upper	regexp.c	/^do_Upper(int *d, int c)$/;"	f	file:
do_addsub	ops.c	/^do_addsub($/;"	f	file:
do_all	ex_cmds.c	/^    int	do_all;		\/\/ do multiple substitutions per line$/;"	m	struct:__anon24	file:
do_arg_all	arglist.c	/^do_arg_all($/;"	f	file:
do_argfile	arglist.c	/^do_argfile(exarg_T *eap, int argn)$/;"	f
do_arglist	arglist.c	/^do_arglist($/;"	f	file:
do_ascii	ex_cmds.c	/^do_ascii(exarg_T *eap UNUSED)$/;"	f
do_ask	ex_cmds.c	/^    int	do_ask;		\/\/ ask for confirmation$/;"	m	struct:__anon24	file:
do_augroup	autocmd.c	/^do_augroup(char_u *arg, int del_group)$/;"	f
do_autochdir	buffer.c	/^do_autochdir(void)$/;"	f
do_autocmd	autocmd.c	/^do_autocmd(char_u *arg_in, int forceit)$/;"	f
do_autocmd_event	autocmd.c	/^do_autocmd_event($/;"	f	file:
do_bang	ex_cmds.c	/^do_bang($/;"	f
do_browse	filepath.c	/^do_browse($/;"	f
do_bufdel	buffer.c	/^do_bufdel($/;"	f
do_buffer	buffer.c	/^do_buffer($/;"	f
do_c_expr_indent	cindent.c	/^do_c_expr_indent(void)$/;"	f
do_check_cursorbind	move.c	/^do_check_cursorbind(void)$/;"	f
do_check_scrollbind	normal.c	/^do_check_scrollbind(int check)$/;"	f
do_checkbacktracelevel	debugger.c	/^do_checkbacktracelevel(void)$/;"	f	file:
do_choice	gui_xmdlg.c	/^do_choice(Widget w,$/;"	f	file:
do_clear_sb_text	message.c	/^static sb_clear_T do_clear_sb_text = SB_CLEAR_NONE;$/;"	v	file:
do_cmdline	ex_docmd.c	/^do_cmdline($/;"	f
do_cmdline_cmd	ex_docmd.c	/^do_cmdline_cmd(char_u *cmd)$/;"	f
do_count	ex_cmds.c	/^    int	do_count;	\/\/ count only$/;"	m	struct:__anon24	file:
do_cscope_general	if_cscope.c	/^do_cscope_general($/;"	f	file:
do_debug	debugger.c	/^do_debug(char_u *cmd)$/;"	f
do_dialog	message.c	/^do_dialog($/;"	f
do_dialog	vim.h	2195;"	d
do_digraph	digraph.c	/^do_digraph(int c)$/;"	f
do_doautocmd	autocmd.c	/^do_doautocmd($/;"	f
do_ecmd	ex_cmds.c	/^do_ecmd($/;"	f
do_ecmd_cmd	ex_cmds.h	/^    char_u	*do_ecmd_cmd;	\/\/ +command arg to be used in edited file$/;"	m	struct:exarg
do_ecmd_lnum	ex_cmds.h	/^    linenr_T	do_ecmd_lnum;	\/\/ the line number in an edited file$/;"	m	struct:exarg
do_err_output	if_mzsch.c	/^do_err_output(char *mesg)$/;"	f	file:
do_error	ex_cmds.c	/^    int	do_error;	\/\/ if false, ignore errors$/;"	m	struct:__anon24	file:
do_errthrow	ex_eval.c	/^do_errthrow(cstack_T *cstack, char_u *cmdname)$/;"	f
do_eval	if_mzsch.c	/^do_eval(void *s, int noargc UNUSED, Scheme_Object **noargv UNUSED)$/;"	f	file:
do_execreg	register.c	/^do_execreg($/;"	f
do_exedit	ex_docmd.c	/^do_exedit($/;"	f
do_exmap	map.c	/^do_exmap(exarg_T *eap, int isabbrev)$/;"	f	file:
do_exmode	ex_docmd.c	/^do_exmode($/;"	f
do_filter	ex_cmds.c	/^do_filter($/;"	f	file:
do_finish	scriptfile.c	/^do_finish(exarg_T *eap, int reanimate)$/;"	f
do_fixdel	ex_cmds.c	/^do_fixdel(exarg_T *eap UNUSED)$/;"	f
do_flush	if_mzsch.c	/^do_flush(void)$/;"	f	file:
do_helptags	ex_cmds.c	/^do_helptags(char_u *dirname, int add_help_tags, int ignore_writeerr)$/;"	f	file:
do_highlight	highlight.c	/^do_highlight($/;"	f
do_ic	ex_cmds.c	/^    int	do_ic;		\/\/ ignore case flag$/;"	m	struct:__anon24	file:
do_in_path	scriptfile.c	/^do_in_path($/;"	f
do_in_path_and_pp	scriptfile.c	/^do_in_path_and_pp($/;"	f	file:
do_in_runtimepath	scriptfile.c	/^do_in_runtimepath($/;"	f
do_incsearch_highlighting	ex_getln.c	/^do_incsearch_highlighting(int firstc, int *search_delim, incsearch_state_T *is_state,$/;"	f	file:
do_inits	dosinst.h	/^do_inits(char **argv)$/;"	f
do_insert_char_pre	edit.c	/^do_insert_char_pre(int c)$/;"	f	file:
do_intrnl_output	if_mzsch.c	/^do_intrnl_output(char *mesg, int error)$/;"	f	file:
do_intro_line	version.c	/^do_intro_line($/;"	f	file:
do_intthrow	ex_eval.c	/^do_intthrow(cstack_T *cstack)$/;"	f
do_join	ops.c	/^do_join($/;"	f
do_list	ex_cmds.c	/^    int	do_list;	\/\/ list last line with subs.$/;"	m	struct:__anon24	file:
do_load	if_mzsch.c	/^do_load(void *data, int noargc UNUSED, Scheme_Object **noargv UNUSED)$/;"	f	file:
do_lock_var	evalvars.c	/^do_lock_var($/;"	f	file:
do_lower	regexp.c	/^do_lower(int *d, int c)$/;"	f	file:
do_map	map.c	/^do_map($/;"	f
do_mnemonic	gui_motif.c	/^do_mnemonic(Widget w, unsigned int keycode)$/;"	f	file:
do_modelines	buffer.c	/^do_modelines(int flags)$/;"	f
do_more_prompt	message.c	/^do_more_prompt(int typed_char)$/;"	f	file:
do_mouse	mouse.c	/^do_mouse($/;"	f
do_move	ex_cmds.c	/^do_move(linenr_T line1, linenr_T line2, linenr_T dest)$/;"	f
do_mzeval	if_mzsch.c	/^do_mzeval(char_u *str, typval_T *rettv)$/;"	f
do_mzscheme_command	if_mzsch.c	/^do_mzscheme_command(exarg_T *eap, void *data, Scheme_Closed_Prim *what)$/;"	f	file:
do_number	ex_cmds.c	/^    int	do_number;	\/\/ list last line with line nr$/;"	m	struct:__anon24	file:
do_nv_ident	normal.c	/^do_nv_ident(int c1, int c2)$/;"	f
do_one_arg	arglist.c	/^do_one_arg(char_u *str)$/;"	f	file:
do_one_cmd	ex_docmd.c	/^do_one_cmd($/;"	f	file:
do_outofmem_msg	misc2.c	/^do_outofmem_msg(size_t size)$/;"	f
do_output	if_mzsch.c	/^do_output(char *mesg, OUTPUT_LEN_TYPE len UNUSED)$/;"	f	file:
do_pending_operator	ops.c	/^do_pending_operator(cmdarg_T *cap, int old_col, int gui_yank)$/;"	f
do_perror	message.c	/^do_perror(char *msg)$/;"	f
do_print	ex_cmds.c	/^    int	do_print;	\/\/ print last line with subs.$/;"	m	struct:__anon24	file:
do_printf	if_mzsch.c	/^do_printf(char *format, ...)$/;"	f	file:
do_profiling	globals.h	/^EXTERN int	do_profiling INIT(= PROF_NONE);	\/\/ PROF_ values$/;"	v
do_put	register.c	/^do_put($/;"	f
do_py3eval	if_python3.c	/^do_py3eval(char_u *str, typval_T *rettv)$/;"	f
do_pyeval	if_python.c	/^do_pyeval(char_u *str, typval_T *rettv)$/;"	f
do_record	register.c	/^do_record(int c)$/;"	f
do_redraw	globals.h	/^EXTERN int	do_redraw INIT(= FALSE);    \/\/ extra redraw once$/;"	v
do_resize	os_unix.c	/^static volatile sig_atomic_t do_resize = FALSE;$/;"	v	file:
do_return	userfunc.c	/^do_return($/;"	f
do_rubyeval	if_ruby.c	/^do_rubyeval(char_u *str, typval_T *rettv)$/;"	f
do_search	search.c	/^do_search($/;"	f
do_searchpair	evalfunc.c	/^do_searchpair($/;"	f
do_set	option.c	/^do_set($/;"	f
do_set_mnemonics	gui_motif.c	/^do_set_mnemonics(int enable)$/;"	f	file:
do_setdebugtracelevel	debugger.c	/^do_setdebugtracelevel(char_u *arg)$/;"	f	file:
do_shell	ex_cmds.c	/^do_shell($/;"	f
do_showbacktrace	debugger.c	/^do_showbacktrace(char_u *cmd)$/;"	f	file:
do_sleep	ex_docmd.c	/^do_sleep(long msec)$/;"	f
do_sort_uniq	list.c	/^do_sort_uniq(typval_T *argvars, typval_T *rettv, int sort)$/;"	f	file:
do_source	scriptfile.c	/^do_source($/;"	f
do_string_sub	eval.c	/^do_string_sub($/;"	f
do_sub	ex_cmds.c	/^do_sub(exarg_T *eap)$/;"	f
do_sub_msg	ex_cmds.c	/^do_sub_msg($/;"	f
do_swapexists	memline.c	/^do_swapexists(buf_T *buf, char_u *fname)$/;"	f	file:
do_syntax	structs.h	/^    int		do_syntax;$/;"	m	struct:__anon247
do_tag	tag.c	/^do_tag($/;"	f
do_tags	tag.c	/^do_tags(exarg_T *eap UNUSED)$/;"	f
do_throw	ex_eval.c	/^do_throw(cstack_T *cstack)$/;"	f
do_ucmd	usercmd.c	/^do_ucmd(exarg_T *eap)$/;"	f
do_unlet	evalvars.c	/^do_unlet(char_u *name, int forceit)$/;"	f
do_unlet_var	evalvars.c	/^do_unlet_var($/;"	f	file:
do_upper	regexp.c	/^do_upper(int *d, int c)$/;"	f	file:
do_viminfo	viminfo.c	/^do_viminfo(FILE *fp_in, FILE *fp_out, int flags)$/;"	f	file:
do_window	window.c	/^do_window($/;"	f
do_wqall	ex_cmds.c	/^do_wqall(exarg_T *eap)$/;"	f
do_write	ex_cmds.c	/^do_write(exarg_T *eap)$/;"	f
do_xterm_trace	os_unix.c	/^do_xterm_trace(void)$/;"	f	file:
doesrange	structs.h	/^    int		*doesrange;	\/\/ if not NULL: return: function handled range$/;"	m	struct:__anon223
dofork	gui.h	/^    int		dofork;		    \/\/ Use fork() when GUI is starting$/;"	m	struct:Gui
doing_destroy	gui_xmebwp.h	/^    int doing_destroy;$/;"	m	struct:_XmEnhancedButtonPart
doing_setvalues	gui_xmebwp.h	/^    int doing_setvalues;$/;"	m	struct:_XmEnhancedButtonPart
dollar_command	ex_docmd.c	/^static char_u dollar_command[2] = {'$', 0};$/;"	v	file:
dollar_vcol	globals.h	/^EXTERN colnr_T	dollar_vcol INIT(= -1);$/;"	v
dont_check_job_ended	os_unix.c	/^static int dont_check_job_ended = 0;$/;"	v	file:
dont_scroll	globals.h	/^EXTERN int	dont_scroll INIT(= FALSE);\/\/ don't use scrollbars when TRUE$/;"	v
dont_sync_undo	edit.c	/^static int	dont_sync_undo = FALSE;	\/\/ CTRL-G U prevents syncing undo for$/;"	v	file:
dos2	os_amiga.c	/^int			dos2 = FALSE;	    \/\/ Amiga DOS 2.0x or higher$/;"	v
dos_expandpath	filepath.c	/^dos_expandpath($/;"	f	file:
dos_packet	os_amiga.c	/^dos_packet($/;"	f	file:
dos_packet	os_amiga.c	82;"	d	file:
dosetvisible	netbeans.c	/^static int dosetvisible = FALSE;$/;"	v	file:
dospawn	gui.h	/^    int		dospawn;	    \/\/ Use spawn() when GUI is starting$/;"	m	struct:Gui
dout_fname	diff.c	/^    char_u	*dout_fname;  \/\/ used for external diff$/;"	m	struct:__anon10	file:
dout_ga	diff.c	/^    garray_T	dout_ga;      \/\/ used for internal diff$/;"	m	struct:__anon10	file:
down	gui_gtk.c	/^    GtkWidget *down;	\/\/ search direction 'Down' radio button$/;"	m	struct:_SharedFindReplace	file:
down	gui_motif.c	/^    Widget down;	\/\/ search direction 'Down' radio button$/;"	m	struct:_SharedFindReplace	file:
dpy	gui.h	/^    Display	*dpy;		    \/\/ X display$/;"	m	struct:Gui
dragRect	gui_mac.c	/^static Rect dragRect;$/;"	v	file:
dragRectControl	gui_mac.c	/^static short dragRectControl;$/;"	v	file:
dragRectEnbl	gui_mac.c	/^static short dragRectEnbl;$/;"	v	file:
dragRgn	gui_mac.c	/^static RgnHandle dragRgn;$/;"	v	file:
drag_data_received_cb	gui_gtk_x11.c	/^drag_data_received_cb(GtkWidget		*widget,$/;"	f	file:
drag_handle_text	gui_gtk_x11.c	/^drag_handle_text(GdkDragContext	    *context,$/;"	f	file:
drag_handle_uri_list	gui_gtk_x11.c	/^drag_handle_uri_list(GdkDragContext	*context,$/;"	f	file:
drag_on_resize_handle	popupwin.c	/^static int drag_on_resize_handle;$/;"	v	file:
drag_sep_line	globals.h	/^EXTERN int	drag_sep_line INIT(= FALSE);	\/\/ dragging vert separator$/;"	v
drag_start_col	popupwin.c	/^static int drag_start_col;$/;"	v	file:
drag_start_row	popupwin.c	/^static int drag_start_row;$/;"	v	file:
drag_start_wantcol	popupwin.c	/^static int drag_start_wantcol;$/;"	v	file:
drag_start_wantline	popupwin.c	/^static int drag_start_wantline;$/;"	v	file:
drag_status_line	globals.h	/^EXTERN int	drag_status_line INIT(= FALSE);	\/\/ dragging the status line$/;"	v
dragged_sb	gui.h	/^    int		dragged_sb;	    \/\/ Which scrollbar being dragged, if any?$/;"	m	struct:Gui
dragged_sb	gui_mac.c	/^static ControlHandle dragged_sb = NULL;$/;"	v	file:
dragged_wp	gui.h	/^    win_T	*dragged_wp;	    \/\/ Which WIN's sb being dragged, if any?$/;"	m	struct:Gui
drawBalloon	gui_beval.c	/^drawBalloon(BalloonEval *beval)$/;"	f	file:
draw_cmdline	ex_getln.c	/^draw_cmdline(int start, int len)$/;"	f	file:
draw_curl	gui_x11.c	/^draw_curl(int row, int col, int cells)$/;"	f	file:
draw_event	gui_gtk_x11.c	/^draw_event(GtkWidget *widget UNUSED,$/;"	f	file:
draw_glyph_string	gui_gtk_x11.c	/^draw_glyph_string(int row, int col, int num_cells, int flags,$/;"	f	file:
draw_highlight	gui_xmebw.c	/^draw_highlight(XmEnhancedButtonWidget eb)$/;"	f	file:
draw_label	gui_xmebw.c	/^draw_label(XmEnhancedButtonWidget eb, XEvent *event, Region region)$/;"	f	file:
draw_line	gui_w32.c	/^draw_line($/;"	f	file:
draw_pixmap	gui_xmebw.c	/^draw_pixmap(XmEnhancedButtonWidget eb,$/;"	f	file:
draw_shadows	gui_xmebw.c	/^draw_shadows(XmEnhancedButtonWidget eb)$/;"	f	file:
draw_string_ATSUI	gui_mac.c	/^draw_string_ATSUI(int row, int col, char_u *s, int len, int flags)$/;"	f	file:
draw_string_QD	gui_mac.c	/^draw_string_QD(int row, int col, char_u *s, int len, int flags)$/;"	f	file:
draw_tabline	screen.c	/^draw_tabline(void)$/;"	f
draw_under	gui_gtk_x11.c	/^draw_under(int flags, int row, int col, int cells, cairo_t *cr)$/;"	f	file:
draw_undercurl	gui_mac.c	/^draw_undercurl(int flags, int row, int col, int cells)$/;"	f	file:
draw_unhighlight	gui_xmebw.c	/^draw_unhighlight(XmEnhancedButtonWidget eb)$/;"	f	file:
draw_vsep_win	screen.c	/^draw_vsep_win(win_T *wp, int row)$/;"	f
drawarea	gui.h	/^    GtkWidget	*drawarea;	    \/\/ the "text" area$/;"	m	struct:Gui
drawarea_configure_event_cb	gui_gtk_x11.c	/^drawarea_configure_event_cb(GtkWidget	      *widget,$/;"	f	file:
drawarea_realize_cb	gui_gtk_x11.c	/^drawarea_realize_cb(GtkWidget *widget, gpointer data UNUSED)$/;"	f	file:
drawarea_style_updated_cb	gui_gtk_x11.c	/^drawarea_style_updated_cb(GtkWidget *widget UNUSED,$/;"	f	file:
drawarea_unrealize_cb	gui_gtk_x11.c	/^drawarea_unrealize_cb(GtkWidget *widget UNUSED, gpointer data UNUSED)$/;"	f	file:
drawer	gui_mac.c	/^static WindowRef drawer = NULL; \/\/ TODO: put into gui.h$/;"	v	file:
drawerCallback	gui_mac.c	/^drawerCallback(EventHandlerCallRef handler, EventRef event, void *data)$/;"	f	file:
drop_busy	ex_docmd.c	/^static int drop_busy = FALSE;$/;"	v	file:
drop_callback	ex_docmd.c	/^static void (*drop_callback)(void *);$/;"	v	file:
drop_callback	gui.c	/^drop_callback(void *cookie)$/;"	f	file:
drop_callback	gui_mac.c	/^drop_callback(void *cookie UNUSED)$/;"	f	file:
drop_cookie	ex_docmd.c	/^static void *drop_cookie;$/;"	v	file:
drop_filec	ex_docmd.c	/^static int drop_filec;$/;"	v	file:
drop_filev	ex_docmd.c	/^static char_u **drop_filev = NULL;$/;"	v	file:
drop_gotPosition	gui_mac.c	/^static short drop_gotPosition;$/;"	v	file:
drop_messages	channel.c	/^drop_messages(channel_T *channel, ch_part_T part)$/;"	f	file:
drop_numFiles	gui_mac.c	/^static long drop_numFiles;$/;"	v	file:
drop_split	ex_docmd.c	/^static int drop_split;$/;"	v	file:
drop_thePosition	gui_mac.c	/^static SelectionRange drop_thePosition;$/;"	v	file:
dumkey	syntax.c	/^static keyentry_T dumkey;$/;"	v	file:
dummy	os_unix.c	/^static int dummy;$/;"	v	file:
dummy	structs.h	/^    int		dummy;$/;"	m	struct:__anon239
dummy	structs.h	/^    int	    dummy;$/;"	m	struct:__anon218
dummy	structs.h	/^    int	    dummy;$/;"	m	struct:__anon219
dummy	structs.h	/^    int	    dummy;$/;"	m	struct:__anon220
dummy	structs.h	/^    int	    dummy;$/;"	m	struct:__anon221
dummy	structs.h	/^    int	    dummy;$/;"	m	struct:__anon222
dummy_check	if_py_both.h	/^dummy_check(void *arg UNUSED)$/;"	f
dump_is_corrupt	terminal.c	/^dump_is_corrupt(garray_T *gap)$/;"	f	file:
dump_pipe	os_win32.c	/^dump_pipe(int	    options,$/;"	f	file:
dump_prefixes	spell.c	/^dump_prefixes($/;"	f	file:
dump_term_color	terminal.c	/^dump_term_color(FILE *fd, VTermColor *color)$/;"	f	file:
dump_word	spell.c	/^dump_word($/;"	f	file:
dumsft	spellsuggest.c	/^static sftword_T dumsft;$/;"	v	file:
duplex	structs.h	/^    int		duplex;$/;"	m	struct:__anon247
dv_copyID	structs.h	/^    int		dv_copyID;	\/\/ ID used by deepcopy()$/;"	m	struct:dictvar_S
dv_copydict	structs.h	/^    dict_T	*dv_copydict;	\/\/ copied dict used by deepcopy()$/;"	m	struct:dictvar_S
dv_hashtab	structs.h	/^    hashtab_T	dv_hashtab;	\/\/ hashtab that refers to the items$/;"	m	struct:dictvar_S
dv_lock	structs.h	/^    char	dv_lock;	\/\/ zero, VAR_LOCKED, VAR_FIXED$/;"	m	struct:dictvar_S
dv_refcount	structs.h	/^    int		dv_refcount;	\/\/ reference count$/;"	m	struct:dictvar_S
dv_scope	structs.h	/^    char	dv_scope;	\/\/ zero, VAR_SCOPE, VAR_DEF_SCOPE$/;"	m	struct:dictvar_S
dv_used_next	structs.h	/^    dict_T	*dv_used_next;	\/\/ next dict in used dicts list$/;"	m	struct:dictvar_S
dv_used_prev	structs.h	/^    dict_T	*dv_used_prev;	\/\/ previous dict in used dicts list$/;"	m	struct:dictvar_S
dwBuildNumber	gui_w32.c	/^    DWORD dwBuildNumber;$/;"	m	struct:_DllVersionInfo	file:
dwCursorPosition	os_win32.c	/^    COORD dwCursorPosition;$/;"	m	struct:_DYN_CONSOLE_SCREEN_BUFFER_INFOEX	file:
dwMajorVersion	gui_w32.c	/^    DWORD dwMajorVersion;$/;"	m	struct:_DllVersionInfo	file:
dwMaximumWindowSize	os_win32.c	/^    COORD dwMaximumWindowSize;$/;"	m	struct:_DYN_CONSOLE_SCREEN_BUFFER_INFOEX	file:
dwMinorVersion	gui_w32.c	/^    DWORD dwMinorVersion;$/;"	m	struct:_DllVersionInfo	file:
dwPlatformID	gui_w32.c	/^    DWORD dwPlatformID;$/;"	m	struct:_DllVersionInfo	file:
dwSize	os_win32.c	/^    COORD dwSize;$/;"	m	struct:_DYN_CONSOLE_SCREEN_BUFFER_INFOEX	file:
dwStyle	gui_w32.c	/^    DWORD dwStyle;$/;"	m	struct:tagCOMPOSITIONFORM	file:
dy_flags	option.h	/^EXTERN unsigned	dy_flags;$/;"	v
dying	gui.h	/^    int		dying;		    \/\/ Is vim dying? Then output to terminal$/;"	m	struct:Gui
dyn_conpty_init	terminal.c	/^dyn_conpty_init(int verbose)$/;"	f	file:
dyn_imm_load	gui_w32.c	/^dyn_imm_load(void)$/;"	f	file:
dyn_libintl_bind_textdomain_codeset	os_win32.c	/^char *(*dyn_libintl_bind_textdomain_codeset)(const char *, const char *)$/;"	v
dyn_libintl_bindtextdomain	os_win32.c	/^char *(*dyn_libintl_bindtextdomain)(const char *, const char *)$/;"	v
dyn_libintl_end	os_win32.c	/^dyn_libintl_end(void)$/;"	f
dyn_libintl_gettext	os_win32.c	/^char *(*dyn_libintl_gettext)(const char *) = null_libintl_gettext;$/;"	v
dyn_libintl_init	os_win32.c	/^dyn_libintl_init(void)$/;"	f
dyn_libintl_ngettext	os_win32.c	/^char *(*dyn_libintl_ngettext)(const char *, const char *, unsigned long n)$/;"	v
dyn_libintl_textdomain	os_win32.c	/^char *(*dyn_libintl_textdomain)(const char *) = null_libintl_textdomain;$/;"	v
dyn_libintl_wputenv	os_win32.c	/^int (*dyn_libintl_wputenv)(const wchar_t *) = null_libintl_wputenv;$/;"	v
dyn_winpty_init	terminal.c	/^dyn_winpty_init(int verbose)$/;"	f	file:
dynamic_mzscheme_end	if_mzsch.c	/^dynamic_mzscheme_end(void)$/;"	f	file:
eDeletedBufferError	if_ruby.c	/^static VALUE eDeletedBufferError;$/;"	v	file:
eDeletedWindowError	if_ruby.c	/^static VALUE eDeletedWindowError;$/;"	v	file:
e_abort	globals.h	/^EXTERN char e_abort[]		INIT(= N_("E470: Command aborted"));$/;"	v
e_acute	regexp_nfa.c	735;"	d	file:
e_affform	spellfile.c	/^static char *e_affform = N_("E761: Format error in affix file FOL, LOW or UPP");$/;"	v	file:
e_affname	spellfile.c	/^static char *e_affname = N_("Affix name too long in %s line %d: %s");$/;"	v	file:
e_affrange	spellfile.c	/^static char *e_affrange = N_("E762: Character in FOL, LOW or UPP is out of range");$/;"	v	file:
e_afftrailing	spellfile.c	/^static char *e_afftrailing = N_("Trailing text in %s line %d: %s");$/;"	v	file:
e_argreq	globals.h	/^EXTERN char e_argreq[]		INIT(= N_("E471: Argument required"));$/;"	v
e_au_recursive	globals.h	/^EXTERN char e_au_recursive[]	INIT(= N_("E952: Autocommand caused recursive behavior"));$/;"	v
e_auabort	buffer.c	/^static char *e_auabort = N_("E855: Autocommands caused command to abort");$/;"	v	file:
e_auchangedbuf	fileio.c	/^static char *e_auchangedbuf = N_("E812: Autocommands changed buffer or buffer name");$/;"	v	file:
e_backslash	globals.h	/^EXTERN char e_backslash[]	INIT(= N_("E10: \\\\ should be followed by \/, ? or &"));$/;"	v
e_blobidx	globals.h	/^EXTERN char e_blobidx[]		INIT(= N_("E979: Blob index out of range: %ld"));$/;"	v
e_break	globals.h	/^EXTERN char e_break[]		INIT(= N_("E587: :break without :while or :for"));$/;"	v
e_bufloaded	globals.h	/^EXTERN char e_bufloaded[]	INIT(= N_("E139: File is loaded in another buffer"));$/;"	v
e_cannot_connect	channel.c	/^static char *e_cannot_connect = N_("E902: Cannot connect to port");$/;"	v	file:
e_cannot_mod	globals.h	/^EXTERN char e_cannot_mod[]	INIT(= N_("E995: Cannot modify existing variable"));$/;"	v
e_catch	globals.h	/^EXTERN char e_catch[]		INIT(= N_("E603: :catch without :try"));$/;"	v
e_circumflex	regexp_nfa.c	736;"	d	file:
e_cmdwin	globals.h	/^EXTERN char e_cmdwin[]	INIT(= N_("E11: Invalid in command-line window; <CR> executes, CTRL-C quits"));$/;"	v
e_compldel	insexpand.c	/^static char e_compldel[] = N_("E840: Completion function deleted text");$/;"	v	file:
e_complwin	insexpand.c	/^static char e_complwin[] = N_("E839: Completion function changed window");$/;"	v	file:
e_const_option	globals.h	/^EXTERN char e_const_option[]	INIT(= N_("E996: Cannot lock an option"));$/;"	v
e_continue	globals.h	/^EXTERN char e_continue[]	INIT(= N_("E586: :continue without :while or :for"));$/;"	v
e_curdir	globals.h	/^EXTERN char e_curdir[]	INIT(= N_("E12: Command not allowed from exrc\/vimrc in current dir or tag search"));$/;"	v
e_diaeresis	regexp_nfa.c	737;"	d	file:
e_dictkey	globals.h	/^EXTERN char e_dictkey[]		INIT(= N_("E716: Key not present in Dictionary: %s"));$/;"	v
e_dictrange	eval.c	/^static char *e_dictrange = N_("E719: Cannot use [:] with a Dictionary");$/;"	v	file:
e_dictreq	globals.h	/^EXTERN char e_dictreq[]		INIT(= N_("E715: Dictionary required"));$/;"	v
e_dirnotf	globals.h	/^EXTERN char e_dirnotf[]	INIT(= N_("E919: Directory not found in '%s': \\"%s\\""));$/;"	v
e_duparg2	globals.h	/^EXTERN char e_duparg2[]	INIT(= N_("E983: Duplicate argument: %s"));$/;"	v
e_duplicate_key	globals.h	/^EXTERN char e_duplicate_key[]	INIT(= N_("E721: Duplicate key in Dictionary: \\"%s\\""));$/;"	v
e_else_without_if	globals.h	/^EXTERN char e_else_without_if[] INIT(= N_("E581: :else without :if"));$/;"	v
e_elseif_without_if	globals.h	/^EXTERN char e_elseif_without_if[] INIT(= N_("E582: :elseif without :if"));$/;"	v
e_empty_sb	regexp.c	/^static char_u e_empty_sb[]  = N_("E70: Empty %s%%[]");$/;"	v	file:
e_emptybuf	globals.h	/^EXTERN char e_emptybuf[]	INIT(= N_("E749: empty buffer"));$/;"	v
e_emptykey	globals.h	/^EXTERN char e_emptykey[]	INIT(= N_("E713: Cannot use empty key for Dictionary"));$/;"	v
e_endfor	globals.h	/^EXTERN char e_endfor[]		INIT(= N_("E170: Missing :endfor"));$/;"	v
e_endif	globals.h	/^EXTERN char e_endif[]		INIT(= N_("E171: Missing :endif"));$/;"	v
e_endif_without_if	globals.h	/^EXTERN char e_endif_without_if[] INIT(= N_("E580: :endif without :if"));$/;"	v
e_endtry	globals.h	/^EXTERN char e_endtry[]		INIT(= N_("E600: Missing :endtry"));$/;"	v
e_endwhile	globals.h	/^EXTERN char e_endwhile[]	INIT(= N_("E170: Missing :endwhile"));$/;"	v
e_exists	globals.h	/^EXTERN char e_exists[]	INIT(= N_("E13: File exists (add ! to override)"));$/;"	v
e_failed	globals.h	/^EXTERN char e_failed[]	INIT(= N_("E472: Command failed"));$/;"	v
e_finally	globals.h	/^EXTERN char e_finally[]		INIT(= N_("E606: :finally without :try"));$/;"	v
e_finally_dup	globals.h	/^EXTERN char e_finally_dup[]	INIT(= N_("E607: multiple :finally"));$/;"	v
e_float_as_string	eval.c	/^static char *e_float_as_string = N_("E806: using Float as a String");$/;"	v	file:
e_font	globals.h	/^EXTERN char e_font[]		INIT(= N_("E235: Unknown font: %s"));$/;"	v
e_fontset	globals.h	/^EXTERN char e_fontset[]	INIT(= N_("E234: Unknown fontset: %s"));$/;"	v
e_fontwidth	globals.h	/^EXTERN char e_fontwidth[]	INIT(= N_("E236: Font \\"%s\\" is not fixed-width"));$/;"	v
e_for	globals.h	/^EXTERN char e_for[]		INIT(= N_("E588: :endfor without :for"));$/;"	v
e_format	spell.h	/^SPELL_EXTERN char e_format[] SPELL_INIT(= N_("E759: Format error in spell file"));$/;"	v
e_fsync	globals.h	/^EXTERN char e_fsync[]		INIT(= N_("E667: Fsync failed"));$/;"	v
e_func_deleted	globals.h	/^EXTERN char e_func_deleted[]	INIT(= N_("E933: Function was deleted: %s"));$/;"	v
e_funcdict	userfunc.c	/^static char *e_funcdict = N_("E717: Dictionary entry already exists");$/;"	v	file:
e_funcexts	userfunc.c	/^static char *e_funcexts = N_("E122: Function %s already exists, add ! to replace it");$/;"	v	file:
e_funcref	userfunc.c	/^static char *e_funcref = N_("E718: Funcref required");$/;"	v	file:
e_grave	regexp_nfa.c	734;"	d	file:
e_guarded	globals.h	/^EXTERN char e_guarded[]	INIT(= N_("E463: Region is guarded, cannot modify"));$/;"	v
e_hitend	insexpand.c	/^static char e_hitend[] = N_("Hit end of paragraph");$/;"	v	file:
e_ill_char_class	regexp_nfa.c	/^static char_u e_ill_char_class[] = N_("E877: (NFA regexp) Invalid character class: %d");$/;"	v	file:
e_illvar	globals.h	/^EXTERN char e_illvar[]		INIT(= N_("E461: Illegal variable name: %s"));$/;"	v
e_intern2	globals.h	/^EXTERN char e_intern2[]	INIT(= N_("E685: Internal error: %s"));$/;"	v
e_internal	globals.h	/^EXTERN char e_internal[]	INIT(= N_("E473: Internal error"));$/;"	v
e_interr	globals.h	/^EXTERN char e_interr[]	INIT(= N_("Interrupted"));$/;"	v
e_inval_string	globals.h	/^EXTERN char e_inval_string[]	INIT(= N_("E908: using an invalid value as a String"));$/;"	v
e_invalblob	globals.h	/^EXTERN char e_invalblob[]	INIT(= N_("E978: Invalid operation for Blob"));$/;"	v
e_invalid_col	textprop.c	/^static char_u e_invalid_col[] = N_("E964: Invalid column number: %ld");$/;"	v	file:
e_invalid_lnum	textprop.c	/^static char_u e_invalid_lnum[] = N_("E966: Invalid line number: %ld");$/;"	v	file:
e_invalidreg	globals.h	/^EXTERN char e_invalidreg[]    INIT(= N_("E850: Invalid register name"));$/;"	v
e_invalpat	globals.h	/^EXTERN char e_invalpat[]	INIT(= N_("E682: Invalid search pattern or delimiter"));$/;"	v
e_invalwindow	globals.h	/^EXTERN char e_invalwindow[]	INIT(= N_("E957: Invalid window number"));$/;"	v
e_invarg	globals.h	/^EXTERN char e_invarg[]	INIT(= N_("E474: Invalid argument"));$/;"	v
e_invarg2	globals.h	/^EXTERN char e_invarg2[]	INIT(= N_("E475: Invalid argument: %s"));$/;"	v
e_invargNval	globals.h	/^EXTERN char e_invargNval[]	INIT(= N_("E475: Invalid value for argument %s: %s"));$/;"	v
e_invargval	globals.h	/^EXTERN char e_invargval[]	INIT(= N_("E475: Invalid value for argument %s"));$/;"	v
e_invcmd	globals.h	/^EXTERN char e_invcmd[]	INIT(= N_("E476: Invalid command"));$/;"	v
e_invexpr2	globals.h	/^EXTERN char e_invexpr2[]	INIT(= N_("E15: Invalid expression: %s"));$/;"	v
e_invexprmsg	globals.h	/^EXTERN char e_invexprmsg[]	INIT(= N_("E449: Invalid expression received"));$/;"	v
e_invrange	globals.h	/^EXTERN char e_invrange[]	INIT(= N_("E16: Invalid range"));$/;"	v
e_isadir2	globals.h	/^EXTERN char e_isadir2[]	INIT(= N_("E17: \\"%s\\" is a directory"));$/;"	v
e_large_class	regexp.c	/^static char_u e_large_class[] = N_("E945: Range too large in character class");$/;"	v	file:
e_letunexp	globals.h	/^EXTERN char e_letunexp[]	INIT(= N_("E18: Unexpected characters in :let"));$/;"	v
e_letwrong	globals.h	/^EXTERN char e_letwrong[]	INIT(= N_("E734: Wrong variable type for %s="));$/;"	v
e_libcall	globals.h	/^EXTERN char e_libcall[]	INIT(= N_("E364: Library call failed for \\"%s()\\""));$/;"	v
e_listarg	globals.h	/^EXTERN char e_listarg[]		INIT(= N_("E686: Argument of %s must be a List"));$/;"	v
e_listblobarg	list.c	/^static char *e_listblobarg = N_("E899: Argument of %s must be a List or Blob");$/;"	v	file:
e_listblobreq	globals.h	/^EXTERN char e_listblobreq[]	INIT(= N_("E897: List or Blob required"));$/;"	v
e_listdictarg	globals.h	/^EXTERN char e_listdictarg[]	INIT(= N_("E712: Argument of %s must be a List or Dictionary"));$/;"	v
e_listdictblobarg	globals.h	/^EXTERN char e_listdictblobarg[]	INIT(= N_("E896: Argument of %s must be a List, Dictionary or Blob"));$/;"	v
e_listidx	globals.h	/^EXTERN char e_listidx[]		INIT(= N_("E684: list index out of range: %ld"));$/;"	v
e_listreq	globals.h	/^EXTERN char e_listreq[]		INIT(= N_("E714: List required"));$/;"	v
e_loadfunc	globals.h	/^EXTERN char e_loadfunc[]	INIT(= N_("E448: Could not load library function %s"));$/;"	v
e_loadlib	globals.h	/^EXTERN char e_loadlib[]	INIT(= N_("E370: Could not load library %s"));$/;"	v
e_loc_list_changed	quickfix.c	/^static char	*e_loc_list_changed =$/;"	v	file:
e_loclist	globals.h	/^EXTERN char e_loclist[]		INIT(= N_("E776: No location list"));$/;"	v
e_log_open_failed	regexp_nfa.c	/^static char_u e_log_open_failed[] = N_("Could not open temporary log file for writing, displaying on stderr... ");$/;"	v	file:
e_longname	globals.h	/^EXTERN char e_longname[]	INIT(= N_("E75: Name too long"));$/;"	v
e_markinval	globals.h	/^EXTERN char e_markinval[]	INIT(= N_("E19: Mark has invalid line number"));$/;"	v
e_marknotset	globals.h	/^EXTERN char e_marknotset[]	INIT(= N_("E20: Mark not set"));$/;"	v
e_maxmempat	globals.h	/^EXTERN char e_maxmempat[]	INIT(= N_("E363: pattern uses more memory than 'maxmempattern'"));$/;"	v
e_menuothermode	globals.h	/^EXTERN char e_menuothermode[]	INIT(= N_("E328: Menu only exists in another mode"));$/;"	v
e_misplaced	regexp_nfa.c	/^static char_u e_misplaced[] = N_("E866: (NFA regexp) Misplaced %c");$/;"	v	file:
e_missbrac	globals.h	/^EXTERN char e_missbrac[]	INIT(= N_("E111: Missing ']'"));$/;"	v
e_missing_close	globals.h	/^EXTERN char e_missing_close[]	INIT(= N_("E110: Missing ')'"));$/;"	v
e_missing_colon	globals.h	/^EXTERN char e_missing_colon[]	INIT(= N_("E109: Missing ':' after '?'"));$/;"	v
e_missing_dict_colon	globals.h	/^EXTERN char e_missing_dict_colon[] INIT(= N_("E720: Missing colon in Dictionary: %s"));$/;"	v
e_missing_dict_comma	globals.h	/^EXTERN char e_missing_dict_comma[] INIT(= N_("E722: Missing comma in Dictionary: %s"));$/;"	v
e_missing_dict_end	globals.h	/^EXTERN char e_missing_dict_end[]    INIT(= N_("E723: Missing end of Dictionary '}': %s"));$/;"	v
e_missing_in	globals.h	/^EXTERN char e_missing_in[]	INIT(= N_("E690: Missing \\"in\\" after :for"));$/;"	v
e_missing_paren	globals.h	/^EXTERN char e_missing_paren[]	INIT(= N_("E107: Missing parentheses: %s"));$/;"	v
e_missing_sb	regexp.c	/^static char_u e_missing_sb[] = N_("E69: Missing ] after %s%%[");$/;"	v	file:
e_missingbracket	regexp.c	/^static char_u e_missingbracket[] = N_("E769: Missing ] after %s[");$/;"	v	file:
e_modifiable	globals.h	/^EXTERN char e_modifiable[]	INIT(= N_("E21: Cannot make changes, 'modifiable' is off"));$/;"	v
e_modulus	globals.h	/^EXTERN char e_modulus[]		INIT(= N_("E804: Cannot use '%' with Float"));$/;"	v
e_nbreadonly	globals.h	/^EXTERN char e_nbreadonly[]	INIT(= N_("E744: NetBeans does not allow changes in read-only files"));$/;"	v
e_needs_vim9	vim9script.c	/^static char e_needs_vim9[] = N_("E1042: import\/export can only be used in vim9script");$/;"	v	file:
e_nesting	globals.h	/^EXTERN char e_nesting[]	INIT(= N_("E22: Scripts nested too deep"));$/;"	v
e_no_endtry	globals.h	/^EXTERN char e_no_endtry[]	INIT(= N_("E602: :endtry without :try"));$/;"	v
e_no_more_items	quickfix.c	/^static char_u	*e_no_more_items = (char_u *)N_("E553: No more items");$/;"	v	file:
e_noabbr	globals.h	/^EXTERN char e_noabbr[]	INIT(= N_("E24: No such abbreviation"));$/;"	v
e_noalt	globals.h	/^EXTERN char e_noalt[]		INIT(= N_("E23: No alternate file"));$/;"	v
e_noarabic	globals.h	/^EXTERN char e_noarabic[]	INIT(= N_("E800: Arabic cannot be used: Not enabled at compile time\\n"));$/;"	v
e_nobang	globals.h	/^EXTERN char e_nobang[]	INIT(= N_("E477: No ! allowed"));$/;"	v
e_nobufnr	globals.h	/^EXTERN char e_nobufnr[]	INIT(= N_("E86: Buffer %ld does not exist"));$/;"	v
e_nofarsi	globals.h	/^EXTERN char e_nofarsi[]		INIT(= N_("E27: Farsi support has been removed\\n"));$/;"	v
e_nofold	fold.c	/^static char *e_nofold = N_("E490: No fold found");$/;"	v	file:
e_nofunc	userfunc.c	/^static char *e_nofunc = N_("E130: Unknown function: %s");$/;"	v	file:
e_nogroup	globals.h	/^EXTERN char e_nogroup[]	INIT(= N_("E28: No such highlight group name: %s"));$/;"	v
e_nogvim	globals.h	/^EXTERN char e_nogvim[]	INIT(= N_("E25: GUI cannot be used: Not enabled at compile time"));$/;"	v
e_nohebrew	globals.h	/^EXTERN char e_nohebrew[]	INIT(= N_("E26: Hebrew cannot be used: Not enabled at compile time\\n"));$/;"	v
e_noident	normal.c	/^static char *e_noident = N_("E349: No identifier under cursor");$/;"	v	file:
e_noinstext	globals.h	/^EXTERN char e_noinstext[]	INIT(= N_("E29: No inserted text yet"));$/;"	v
e_nolastcmd	globals.h	/^EXTERN char e_nolastcmd[]	INIT(= N_("E30: No previous command line"));$/;"	v
e_nomap	globals.h	/^EXTERN char e_nomap[]		INIT(= N_("E31: No such mapping"));$/;"	v
e_nomatch	globals.h	/^EXTERN char e_nomatch[]	INIT(= N_("E479: No match"));$/;"	v
e_nomatch2	globals.h	/^EXTERN char e_nomatch2[]	INIT(= N_("E480: No match: %s"));$/;"	v
e_nomenu	menu.c	/^static char_u e_nomenu[] = N_("E329: No menu \\"%s\\"");$/;"	v	file:
e_noname	globals.h	/^EXTERN char e_noname[]	INIT(= N_("E32: No file name"));$/;"	v
e_nopresub	globals.h	/^EXTERN char e_nopresub[]	INIT(= N_("E33: No previous substitute regular expression"));$/;"	v
e_noprev	globals.h	/^EXTERN char e_noprev[]	INIT(= N_("E34: No previous command"));$/;"	v
e_noprevre	globals.h	/^EXTERN char e_noprevre[]	INIT(= N_("E35: No previous regular expression"));$/;"	v
e_norange	globals.h	/^EXTERN char e_norange[]	INIT(= N_("E481: No range allowed"));$/;"	v
e_noroom	globals.h	/^EXTERN char e_noroom[]	INIT(= N_("E36: Not enough room"));$/;"	v
e_noserver	globals.h	/^EXTERN char e_noserver[]	INIT(= N_("E247: no registered server named \\"%s\\""));$/;"	v
e_not_open	undo.c	/^static char_u e_not_open[] = N_("E828: Cannot open undo file for writing: %s");$/;"	v	file:
e_notcreate	globals.h	/^EXTERN char e_notcreate[]	INIT(= N_("E482: Can't create file %s"));$/;"	v
e_notmp	globals.h	/^EXTERN char e_notmp[]		INIT(= N_("E483: Can't get temp file name"));$/;"	v
e_notopen	globals.h	/^EXTERN char e_notopen[]	INIT(= N_("E484: Can't open file %s"));$/;"	v
e_notread	globals.h	/^EXTERN char e_notread[]	INIT(= N_("E485: Can't read file %s"));$/;"	v
e_notset	globals.h	/^EXTERN char e_notset[]	INIT(= N_("E764: Option '%s' is not set"));$/;"	v
e_notsubmenu	menu.c	/^static char_u e_notsubmenu[] = N_("E327: Part of menu-item path is not sub-menu");$/;"	v	file:
e_nowhitespace	globals.h	/^EXTERN char e_nowhitespace[]	INIT(= N_("E274: No white space allowed before parenthesis"));$/;"	v
e_nul_found	regexp_nfa.c	/^static char_u e_nul_found[] = N_("E865: (NFA) Regexp end encountered prematurely");$/;"	v	file:
e_null	globals.h	/^EXTERN char e_null[]		INIT(= N_("E38: Null argument"));$/;"	v
e_number_exp	globals.h	/^EXTERN char e_number_exp[]	INIT(= N_("E39: Number expected"));$/;"	v
e_opendisp	globals.h	/^EXTERN char e_opendisp[]	INIT(= N_("E233: cannot open display"));$/;"	v
e_openerrf	globals.h	/^EXTERN char e_openerrf[]	INIT(= N_("E40: Can't open errorfile %s"));$/;"	v
e_outofmem	globals.h	/^EXTERN char e_outofmem[]	INIT(= N_("E41: Out of memory!"));$/;"	v
e_pathtoolong	findfile.c	/^static char_u e_pathtoolong[] = N_("E854: path too long for completion");$/;"	v	file:
e_patnotf	globals.h	/^EXTERN char e_patnotf[]		INIT(= N_("Pattern not found"));$/;"	v
e_patnotf2	globals.h	/^EXTERN char e_patnotf2[]	INIT(= N_("E486: Pattern not found: %s"));$/;"	v
e_positive	globals.h	/^EXTERN char e_positive[]	INIT(= N_("E487: Argument must be positive"));$/;"	v
e_prev_dir	globals.h	/^EXTERN char e_prev_dir[]	INIT(= N_("E459: Cannot go back to previous directory"));$/;"	v
e_printf	message.c	/^static char *e_printf = N_("E766: Insufficient arguments for printf()");$/;"	v	file:
e_py_systemexit	if_py_both.h	/^static char_u e_py_systemexit[]	= "E880: Can't handle SystemExit of %s exception in vim";$/;"	v
e_quickfix	globals.h	/^EXTERN char e_quickfix[]	INIT(= N_("E42: No Errors"));$/;"	v
e_re_corr	globals.h	/^EXTERN char e_re_corr[]		INIT(= N_("E44: Corrupted regexp program"));$/;"	v
e_re_damg	globals.h	/^EXTERN char e_re_damg[]		INIT(= N_("E43: Damaged match string"));$/;"	v
e_readerrf	globals.h	/^EXTERN char e_readerrf[]	INIT(= N_("E47: Error while reading errorfile"));$/;"	v
e_readonly	globals.h	/^EXTERN char e_readonly[]	INIT(= N_("E45: 'readonly' option is set (add ! to override)"));$/;"	v
e_readonlysbx	globals.h	/^EXTERN char e_readonlysbx[]	INIT(= N_("E794: Cannot set variable in the sandbox: \\"%s\\""));$/;"	v
e_readonlyvar	globals.h	/^EXTERN char e_readonlyvar[]	INIT(= N_("E46: Cannot change read-only variable \\"%s\\""));$/;"	v
e_recursive	regexp.c	/^static char_u e_recursive[]  = N_("E956: Cannot use pattern recursively");$/;"	v	file:
e_reverse_range	regexp.c	/^static char_u e_reverse_range[] = N_("E944: Reverse range in character class");$/;"	v	file:
e_sandbox	globals.h	/^EXTERN char e_sandbox[]	INIT(= N_("E48: Not allowed in sandbox"));$/;"	v
e_screenmode	globals.h	/^EXTERN char e_screenmode[]	INIT(= N_("E359: Screen mode setting not supported"));$/;"	v
e_scroll	globals.h	/^EXTERN char e_scroll[]	INIT(= N_("E49: Invalid scroll size"));$/;"	v
e_secure	globals.h	/^EXTERN char e_secure[]	INIT(= N_("E523: Not allowed here"));$/;"	v
e_shellempty	globals.h	/^EXTERN char e_shellempty[]	INIT(= N_("E91: 'shell' option is empty"));$/;"	v
e_signdata	globals.h	/^EXTERN char e_signdata[]	INIT(= N_("E255: Couldn't read in sign data!"));$/;"	v
e_spell_trunc	spellfile.c	/^static char *e_spell_trunc = N_("E758: Truncated spell file");$/;"	v	file:
e_stringreq	globals.h	/^EXTERN char e_stringreq[]	INIT(= N_("E928: String required"));$/;"	v
e_swapclose	globals.h	/^EXTERN char e_swapclose[]	INIT(= N_("E72: Close error on swap file"));$/;"	v
e_syntax_at	vim9compile.c	/^static char e_syntax_at[] = N_("E1002: Syntax error at %s");$/;"	v	file:
e_tagstack	globals.h	/^EXTERN char e_tagstack[]	INIT(= N_("E73: tag stack empty"));$/;"	v
e_toocompl	globals.h	/^EXTERN char e_toocompl[]	INIT(= N_("E74: Command too complex"));$/;"	v
e_toofewarg	globals.h	/^EXTERN char e_toofewarg[]	INIT(= N_("E119: Not enough arguments for function: %s"));$/;"	v
e_toomany	globals.h	/^EXTERN char e_toomany[]	INIT(= N_("E77: Too many file names"));$/;"	v
e_toomanyarg	globals.h	/^EXTERN char e_toomanyarg[]	INIT(= N_("E118: Too many arguments for function: %s"));$/;"	v
e_toomsbra	globals.h	/^EXTERN char e_toomsbra[]	INIT(= N_("E76: Too many ["));$/;"	v
e_trailing	globals.h	/^EXTERN char e_trailing[]	INIT(= N_("E488: Trailing characters"));$/;"	v
e_type_not_exist	textprop.c	/^static char_u e_type_not_exist[] = N_("E971: Property type %s does not exist");$/;"	v	file:
e_umark	globals.h	/^EXTERN char e_umark[]		INIT(= N_("E78: Unknown mark"));$/;"	v
e_undefvar	globals.h	/^EXTERN char e_undefvar[]	INIT(= N_("E121: Undefined variable: %s"));$/;"	v
e_unknown_option	globals.h	/^EXTERN char e_unknown_option[]	INIT(= N_("E113: Unknown option: %s"));$/;"	v
e_unknownfunc	globals.h	/^EXTERN char e_unknownfunc[]	INIT(= N_("E117: Unknown function: %s"));$/;"	v
e_unmatchedp	regexp.c	/^static char_u e_unmatchedp[] = N_("E54: Unmatched %s(");$/;"	v	file:
e_unmatchedpar	regexp.c	/^static char_u e_unmatchedpar[] = N_("E55: Unmatched %s)");$/;"	v	file:
e_unmatchedpp	regexp.c	/^static char_u e_unmatchedpp[] = N_("E53: Unmatched %s%%(");$/;"	v	file:
e_usingsid	globals.h	/^EXTERN char e_usingsid[]	INIT(= N_("E81: Using <SID> not in a script context"));$/;"	v
e_var_notfound	vim9compile.c	/^static char e_var_notfound[] = N_("E1001: variable not found: %s");$/;"	v	file:
e_while	globals.h	/^EXTERN char e_while[]		INIT(= N_("E588: :endwhile without :while"));$/;"	v
e_white_both	vim9compile.c	/^static char e_white_both[] =$/;"	v	file:
e_wildexpand	globals.h	/^EXTERN char e_wildexpand[]	INIT(= N_("E79: Cannot expand wildcards"));$/;"	v
e_winheight	globals.h	/^EXTERN char e_winheight[]	INIT(= N_("E591: 'winheight' cannot be smaller than 'winminheight'"));$/;"	v
e_winwidth	globals.h	/^EXTERN char e_winwidth[]	INIT(= N_("E592: 'winwidth' cannot be smaller than 'winminwidth'"));$/;"	v
e_write	globals.h	/^EXTERN char e_write[]		INIT(= N_("E80: Error while writing"));$/;"	v
e_xim	mbyte.c	/^static char e_xim[] = N_("E285: Failed to create input context");$/;"	v	file:
e_z1_not_allowed	regexp.c	/^static char_u e_z1_not_allowed[] = N_("E67: \\\\z1 - \\\\z9 not allowed here");$/;"	v	file:
e_z_not_allowed	regexp.c	/^static char_u e_z_not_allowed[] = N_("E66: \\\\z( not allowed here");$/;"	v	file:
e_zerocount	globals.h	/^EXTERN char e_zerocount[]	INIT(= N_("E939: Positive count required"));$/;"	v
eap_arg_len	if_cscope.c	/^static int	    eap_arg_len;    \/\/ length of eap->arg, set in$/;"	v	file:
early_arg_scan	main.c	/^early_arg_scan(mparm_T *parmp UNUSED)$/;"	f	file:
ebcdic2ascii	charset.c	/^ebcdic2ascii(char_u *buffer, int len)$/;"	f
ebcdic2ascii_tab	charset.c	/^static char_u ebcdic2ascii_tab[256] =$/;"	v	file:
ec_dfunc_idx	vim9execute.c	/^    int		ec_dfunc_idx;	\/\/ current function index$/;"	m	struct:__anon134	file:
ec_frame	vim9execute.c	/^    int		ec_frame;	\/\/ index in ec_stack: context of ec_dfunc_idx$/;"	m	struct:__anon134	file:
ec_iidx	vim9execute.c	/^    int		ec_iidx;	\/\/ index in ec_instr: instruction to execute$/;"	m	struct:__anon134	file:
ec_in_catch	vim9execute.c	/^    int		ec_in_catch;	\/\/ when TRUE in catch or finally block$/;"	m	struct:__anon134	file:
ec_instr	vim9execute.c	/^    isn_T	*ec_instr;	\/\/ array with instructions$/;"	m	struct:__anon134	file:
ec_stack	vim9execute.c	/^    garray_T	ec_stack;	\/\/ stack of typval_T values$/;"	m	struct:__anon134	file:
ec_trystack	vim9execute.c	/^    garray_T	ec_trystack;	\/\/ stack of trycmd_T values$/;"	m	struct:__anon134	file:
echeck_abbr	edit.c	/^echeck_abbr(int c)$/;"	f	file:
echo	vim9.h	/^	echo_T		    echo;$/;"	m	union:__anon276::__anon277
echo_T	vim9.h	/^} echo_T;$/;"	t	typeref:struct:__anon269
echo_attr	eval.c	/^static int echo_attr = 0;   \/\/ attributes used for ":echo"$/;"	v	file:
echo_count	vim9.h	/^    int	    echo_count;		\/\/ number of expressions$/;"	m	struct:__anon269
echo_one	eval.c	/^echo_one(typval_T *rettv, int with_space, int *atstart, int *needclr)$/;"	f
echo_string	eval.c	/^echo_string($/;"	f
echo_string_core	eval.c	/^echo_string_core($/;"	f
echo_wid_arg	globals.h	/^EXTERN int	echo_wid_arg INIT(= FALSE);	\/\/ --echo-wid argument$/;"	v
echo_with_white	vim9.h	/^    int	    echo_with_white;    \/\/ :echo instead of :echon$/;"	m	struct:__anon269
ectx_T	vim9execute.c	/^} ectx_T;$/;"	t	typeref:struct:__anon134	file:
edit	edit.c	/^edit($/;"	f
edit_buffers	main.c	/^edit_buffers($/;"	f	file:
edit_putchar	edit.c	/^edit_putchar(int c, int highlight)$/;"	f
edit_submode	globals.h	/^EXTERN char_u	*edit_submode INIT(= NULL); \/\/ msg for CTRL-X submode$/;"	v
edit_submode_extra	globals.h	/^EXTERN char_u	*edit_submode_extra INIT(= NULL);\/\/ appended to edit_submode$/;"	v
edit_submode_highl	globals.h	/^EXTERN hlf_T	edit_submode_highl;	\/\/ highl. method for extra info$/;"	v
edit_submode_pre	globals.h	/^EXTERN char_u	*edit_submode_pre INIT(= NULL); \/\/ prepended to edit_submode$/;"	v
edit_type	structs.h	/^    int		edit_type;		\/\/ type of editing to do$/;"	m	struct:__anon252
edit_unputchar	edit.c	/^edit_unputchar(void)$/;"	f
editing_arg_idx	arglist.c	/^editing_arg_idx(win_T *win)$/;"	f
efm_S	quickfix.c	/^struct efm_S$/;"	s	file:
efm_T	quickfix.c	/^typedef struct efm_S efm_T;$/;"	t	typeref:struct:efm_S	file:
efm_analyze_prefix	quickfix.c	/^efm_analyze_prefix(char_u *efmp, efm_T *efminfo)$/;"	f	file:
efm_option_part_len	quickfix.c	/^efm_option_part_len(char_u *efm)$/;"	f	file:
efm_regpat_bufsz	quickfix.c	/^efm_regpat_bufsz(char_u *efm)$/;"	f	file:
efm_to_regpat	quickfix.c	/^efm_to_regpat($/;"	f	file:
efmpat_to_regpat	quickfix.c	/^efmpat_to_regpat($/;"	f	file:
el_end_label	vim9compile.c	/^    int		el_end_label;	    \/\/ instruction idx where to set end$/;"	m	struct:endlabel_S	file:
el_next	vim9compile.c	/^    endlabel_T	*el_next;	    \/\/ chain end_label locations$/;"	m	struct:endlabel_S	file:
elapsed	misc2.c	/^elapsed(DWORD start_tick)$/;"	f
elapsed	misc2.c	/^elapsed(struct timeval *start_tv)$/;"	f
elapsed_T	vim.h	/^typedef DWORD elapsed_T;$/;"	t
elapsed_T	vim.h	/^typedef struct timeval elapsed_T;$/;"	t	typeref:struct:timeval
emoji_all	mbyte.c	/^static struct interval emoji_all[] =$/;"	v	typeref:struct:interval	file:
empty	gui_at_sb.h	/^typedef struct {int empty;} ScrollbarClassPart;$/;"	m	struct:__anon144
empty	regexp_nfa.c	/^static Frag_T empty;$/;"	v	file:
empty	structs.h	/^    int		empty;		\/\/ op_start and op_end the same (only used by$/;"	m	struct:oparg_S
empty_curbuf	buffer.c	/^empty_curbuf($/;"	f	file:
empty_option	globals.h	/^EXTERN char_u	*empty_option INIT(= (char_u *)"");$/;"	v
empty_pattern	ex_getln.c	/^empty_pattern(char_u *p)$/;"	f	file:
empty_prop	if_xcmdsrv.c	/^static char_u	*empty_prop = (char_u *)"";	\/\/ empty GetRegProp() result$/;"	v	file:
empty_title	gui_photon.c	/^static char	*empty_title = "    ";$/;"	v	file:
emsg	message.c	/^emsg(char *s)$/;"	f
emsg_core	message.c	/^emsg_core(char_u *s)$/;"	f	file:
emsg_funcname	userfunc.c	/^emsg_funcname(char *ermsg, char_u *name)$/;"	f
emsg_invreg	message.c	/^emsg_invreg(int name)$/;"	f
emsg_namelen	message.c	/^emsg_namelen(char *msg, char_u *name, int len)$/;"	f
emsg_noredir	globals.h	/^EXTERN int	emsg_noredir INIT(= 0);	\/\/ don't redirect error messages$/;"	v
emsg_not_now	message.c	/^emsg_not_now(void)$/;"	f	file:
emsg_off	globals.h	/^EXTERN int	emsg_off INIT(= 0);	    \/\/ don't display errors for now,$/;"	v
emsg_on_display	globals.h	/^EXTERN int	emsg_on_display INIT(= FALSE);	\/\/ there is an error message$/;"	v
emsg_severe	globals.h	/^EXTERN int	emsg_severe INIT(= FALSE);  \/\/ use message of next of several$/;"	v
emsg_silent	globals.h	/^EXTERN int	emsg_silent INIT(= 0);	\/\/ don't print error messages$/;"	v
emsg_skip	globals.h	/^EXTERN int	emsg_skip INIT(= 0);	    \/\/ don't display errors for$/;"	v
emsg_to_channel_log	message.c	/^static int emsg_to_channel_log = FALSE;$/;"	v	file:
en_dname	structs.h	/^    char_u	*en_dname;	    \/\/ "dname" untranslated, NULL when "dname"$/;"	m	struct:VimMenu
en_name	structs.h	/^    char_u	*en_name;	    \/\/ "name" untranslated, NULL when "name"$/;"	m	struct:VimMenu
enabled	structs.h	/^    int		enabled;	    \/\/ for which modes the menu is enabled$/;"	m	struct:VimMenu
enc2macroman	os_mac_conv.c	/^enc2macroman($/;"	f
enc_alias_search	mbyte.c	/^enc_alias_search(char_u *name)$/;"	f	file:
enc_alias_table	mbyte.c	/^enc_alias_table[] =$/;"	v	typeref:struct:__anon68	file:
enc_canon_props	mbyte.c	/^enc_canon_props(char_u *name)$/;"	f
enc_canon_search	mbyte.c	/^enc_canon_search(char_u *name)$/;"	f	file:
enc_canon_table	mbyte.c	/^enc_canon_table[] =$/;"	v	typeref:struct:__anon67	file:
enc_canonize	mbyte.c	/^enc_canonize(char_u *enc)$/;"	f
enc_codepage	globals.h	/^EXTERN int	enc_codepage INIT(= -1);$/;"	v
enc_dbcs	globals.h	/^EXTERN int	enc_dbcs INIT(= 0);		\/\/ One of DBCS_xxx values if$/;"	v
enc_latin1like	globals.h	/^EXTERN int	enc_latin1like INIT(= TRUE);	\/\/ 'encoding' is latin1 comp.$/;"	v
enc_latin9	globals.h	/^EXTERN int	enc_latin9 INIT(= FALSE);	\/\/ 'encoding' is latin9$/;"	v
enc_locale	mbyte.c	/^enc_locale(void)$/;"	f
enc_locale_env	mbyte.c	/^enc_locale_env(char *locale)$/;"	f
enc_skip	mbyte.c	/^enc_skip(char_u *p)$/;"	f
enc_to_acp	winclip.c	/^enc_to_acp($/;"	f
enc_to_utf16	winclip.c	/^enc_to_utf16(char_u *str, int *lenp)$/;"	f
enc_unicode	globals.h	/^EXTERN int	enc_unicode INIT(= 0);	\/\/ 2: UCS-2 or UTF-16, 4: UCS-4$/;"	v
enc_utf8	globals.h	/^EXTERN int	enc_utf8 INIT(= FALSE);		\/\/ UTF-8 encoded Unicode$/;"	v
encname2codepage	mbyte.c	/^encname2codepage(char_u *name)$/;"	f
encode_buffer_fn	crypt.c	/^    long (*encode_buffer_fn)(cryptstate_T *state, char_u *from, size_t len,$/;"	m	struct:__anon7	file:
encode_fn	crypt.c	/^    void (*encode_fn)(cryptstate_T *state, char_u *from, size_t len,$/;"	m	struct:__anon7	file:
encode_inplace_fn	crypt.c	/^    void (*encode_inplace_fn)(cryptstate_T *state, char_u *p1, size_t len,$/;"	m	struct:__anon7	file:
encoding	hardcopy.c	/^    char	*encoding;$/;"	m	struct:prt_ps_encoding_S	file:
encoding_callback	gui_xmdlg.c	/^encoding_callback(Widget w,$/;"	f	file:
encoding_menu	gui_xmdlg.c	/^    Widget	encoding_menu;$/;"	m	struct:_SharedFontSelData	file:
encoding_part	gui_xmdlg.c	/^encoding_part(char *font, char *buf)$/;"	f	file:
encoding_pulldown	gui_xmdlg.c	/^    Widget	encoding_pulldown;$/;"	m	struct:_SharedFontSelData	file:
encodings	hardcopy.c	/^    struct prt_ps_encoding_S	*encodings;$/;"	m	struct:prt_ps_mbfont_S	typeref:struct:prt_ps_mbfont_S::prt_ps_encoding_S	file:
end	fold.c	/^    int		end;		\/\/ level of fold that is forced to end below$/;"	m	struct:__anon29	file:
end	if_py_both.h	/^    PyInt end;$/;"	m	struct:__anon166
end	regexp_nfa.c	/^	    char_u	*end;$/;"	m	struct:__anon103::__anon104::linepos	file:
end	regexp_nfa.c	/^    } end;			\/\/ where the match must end$/;"	m	struct:nfa_pim_S	typeref:union:nfa_pim_S::__anon106	file:
end	structs.h	/^    int		end;		\/\/ search set cursor at end$/;"	m	struct:soffset
end	structs.h	/^    pos_T	end;		\/\/ end of the operator$/;"	m	struct:oparg_S
end	vim.h	/^    pos_T	end;		\/\/ End of selected area$/;"	m	struct:__anon279
endRange	gui_mac.c	/^    long endRange; \/\/ end of selection range (if line < 0)$/;"	m	struct:SelectionRange	file:
endSelection	gui_at_fs.c	/^    int		endSelection;$/;"	m	struct:__anon32	file:
end_adjusted	structs.h	/^    int		end_adjusted;	\/\/ backuped b_op_end one char (only used by$/;"	m	struct:oparg_S
end_char_vcols	structs.h	/^    colnr_T	end_char_vcols;	\/\/ number of vcols of post-block char$/;"	m	struct:block_def
end_col	regexp_nfa.c	/^	    colnr_T	end_col;$/;"	m	struct:__anon103::__anon104::multipos	file:
end_col_nr	ex_cmds.c	/^	    varnumber_T	end_col_nr;	\/\/ ending column number$/;"	m	struct:__anon20::__anon21::__anon22	file:
end_comment_pending	globals.h	/^EXTERN int     end_comment_pending INIT(= NUL);$/;"	v
end_dynamic_lua	if_lua.c	/^end_dynamic_lua(void)$/;"	f	file:
end_dynamic_python	if_python.c	/^end_dynamic_python(void)$/;"	f	file:
end_dynamic_python3	if_python3.c	/^end_dynamic_python3(void)$/;"	f	file:
end_dynamic_ruby	if_ruby.c	/^end_dynamic_ruby(void)$/;"	f	file:
end_global_changes	ui.c	/^end_global_changes(void)$/;"	f
end_lnum	regexp_nfa.c	/^	    linenr_T	end_lnum;$/;"	m	struct:__anon103::__anon104::multipos	file:
end_search_hl	screen.c	/^end_search_hl(void)$/;"	f
end_vcol	structs.h	/^    colnr_T	end_vcol;	\/\/ end col for block mode operator$/;"	m	struct:oparg_S
end_vcol	structs.h	/^    colnr_T	end_vcol;	\/\/ start col of 1st char wholly after block$/;"	m	struct:block_def
end_visual_mode	normal.c	/^end_visual_mode(void)$/;"	f
end_word	search.c	/^end_word($/;"	f
endcol	structs.h	/^    colnr_T	endcol;	    \/\/ in win_line() points to char where HL ends$/;"	m	struct:__anon240
endlabel_S	vim9compile.c	/^struct endlabel_S {$/;"	s	file:
endlabel_T	vim9compile.c	/^typedef struct endlabel_S endlabel_T;$/;"	t	typeref:struct:endlabel_S	file:
endp	regexp.h	/^    char_u		*endp[NSUBEXP];$/;"	m	struct:__anon175
endpos	regexp.h	/^    lpos_T		endpos[NSUBEXP];$/;"	m	struct:__anon176
ends_excmd	ex_docmd.c	/^ends_excmd(int c)$/;"	f
ends_in_white	ops.c	/^ends_in_white(linenr_T lnum)$/;"	f	file:
endspaces	structs.h	/^    int		endspaces;	\/\/ 'extra' cols after last char$/;"	m	struct:block_def
engine	regexp.h	/^    regengine_T		*engine;$/;"	m	struct:__anon173
engine	regexp.h	/^    regengine_T		*engine;$/;"	m	struct:__anon174
engine	regexp.h	/^    regengine_T		*engine;$/;"	m	struct:regprog
enhancedContrast	gui_dwrite.h	/^    float enhancedContrast;$/;"	m	struct:DWriteRenderingParams
enhancedbutton	gui_xmebwp.h	/^    XmEnhancedButtonPart enhancedbutton;$/;"	m	struct:_XmEnhancedButtonRec
enhancedbutton_class	gui_xmebwp.h	/^    XmEnhancedButtonClassPart enhancedbutton_class;$/;"	m	struct:__anon146
enr	quickfix.c	/^    int		enr;$/;"	m	struct:__anon90	file:
ensure_ruby_initialized	if_ruby.c	/^ensure_ruby_initialized(void)$/;"	f	file:
enter	structs.h	/^    int enter;		\/\/ what the Enter key produces$/;"	m	struct:__anon227
enter_buffer	buffer.c	/^enter_buffer(buf_T *buf)$/;"	f	file:
enter_cleanup	ex_eval.c	/^enter_cleanup(cleanup_T *csp)$/;"	f
enter_mouse_col	terminal.c	/^static int enter_mouse_col = -1;$/;"	v	file:
enter_mouse_row	terminal.c	/^static int enter_mouse_row = -1;$/;"	v	file:
enter_notify_event	gui_gtk_x11.c	/^enter_notify_event(GtkWidget *widget UNUSED,$/;"	f	file:
enter_tabpage	window.c	/^enter_tabpage($/;"	f	file:
entered_free_all_mem	globals.h	/^EXTERN int	entered_free_all_mem INIT(= FALSE);$/;"	v
entering_window	window.c	/^entering_window(win_T *win)$/;"	f	file:
entries	gui_at_fs.c	/^    SFEntry	*entries;$/;"	m	struct:__anon32	file:
entry_activate_callback	gui_motif.c	/^entry_activate_callback($/;"	f	file:
entry_activate_cb	gui_gtk.c	/^entry_activate_cb(GtkWidget *widget UNUSED, gpointer data)$/;"	f	file:
entry_changed_cb	gui_gtk.c	/^entry_changed_cb(GtkWidget * entry, GtkWidget * dialog)$/;"	f	file:
entry_get_text_length	gui_gtk.c	/^entry_get_text_length(GtkEntry *entry)$/;"	f	file:
enumWindowsGetNames	os_mswin.c	/^enumWindowsGetNames(HWND hwnd, LPARAM lparam)$/;"	f	file:
enumWindowsGetServer	os_mswin.c	/^enumWindowsGetServer(HWND hwnd, LPARAM lparam)$/;"	f	file:
enum_windows	os_mswin.c	/^enum_windows(WNDENUMPROC lpEnumFunc, LPARAM lParam)$/;"	f	file:
enum_windows_child	os_mswin.c	/^enum_windows_child(HWND hwnd, LPARAM lParam)$/;"	f	file:
enum_windows_s	os_mswin.c	/^struct enum_windows_s$/;"	s	file:
enum_windows_toplevel	os_mswin.c	/^enum_windows_toplevel(HWND hwnd, LPARAM lParam)$/;"	f	file:
environment	if_mzsch.c	/^static Scheme_Env    *environment = NULL;$/;"	v	file:
envsize	misc2.c	/^static int  envsize = -1;	\/\/ current size of environment$/;"	v	file:
equ	os_vms.c	/^    ITEM	equ;$/;"	m	struct:__anon80	file:
equal_celattr	terminal.c	/^equal_celattr(cellattr_T *a, cellattr_T *b)$/;"	f	file:
equal_type	vim9compile.c	/^equal_type(type_T *type1, type_T *type2)$/;"	f	file:
errmsg	ex_cmds.h	/^    char	*errmsg;	\/\/ returned error message$/;"	m	struct:exarg
errmsg	quickfix.c	/^    char_u	*errmsg;$/;"	m	struct:__anon90	file:
errmsglen	quickfix.c	/^    int		errmsglen;$/;"	m	struct:__anon90	file:
error	if_py_both.h	/^    long error;$/;"	m	struct:__anon150
error	scriptfile.c	/^    int		error;		\/\/ TRUE if LF found after CR-LF$/;"	m	struct:source_cookie	file:
errorHandler	nbdebug.c	/^errorHandler($/;"	f	file:
error_ga	globals.h	/^EXTERN garray_T error_ga$/;"	v
error_if_popup_window	popupwin.c	/^error_if_popup_window(int also_with_term UNUSED)$/;"	f
error_if_term_popup_window	popupwin.c	/^error_if_term_popup_window()$/;"	f
error_print	if_ruby.c	/^error_print(int state)$/;"	f	file:
es_info	structs.h	/^    } es_info;$/;"	m	struct:__anon225	typeref:union:__anon225::__anon226
es_lnum	structs.h	/^    long      es_lnum;      \/\/ replaces "sourcing_lnum"$/;"	m	struct:__anon225
es_name	structs.h	/^    char_u    *es_name;     \/\/ replaces "sourcing_name"$/;"	m	struct:__anon225
es_type	structs.h	/^    etype_T   es_type;$/;"	m	struct:__anon225
escape_chars	globals.h	/^EXTERN char_u	*escape_chars INIT(= (char_u *)" \\t\\\\\\"|");$/;"	v
escape_fname	ex_getln.c	/^escape_fname(char_u **pp)$/;"	f
eslist_T	structs.h	/^typedef struct eslist_elem eslist_T;$/;"	t	typeref:struct:eslist_elem
eslist_elem	structs.h	/^struct eslist_elem$/;"	s
estack_T	structs.h	/^} estack_T;$/;"	t	typeref:struct:__anon225
estack_init	scriptfile.c	/^estack_init(void)$/;"	f
estack_pop	scriptfile.c	/^estack_pop(void)$/;"	f
estack_push	scriptfile.c	/^estack_push(etype_T type, char_u *name, long lnum)$/;"	f
estack_push_ufunc	scriptfile.c	/^estack_push_ufunc(etype_T type, ufunc_T *ufunc, long lnum)$/;"	f
estack_sfile	scriptfile.c	/^estack_sfile(void)$/;"	f
etype_T	structs.h	/^} etype_T;$/;"	t	typeref:enum:__anon224
eval0	eval.c	/^eval0($/;"	f
eval1	eval.c	/^eval1(char_u **arg, typval_T *rettv, int evaluate)$/;"	f
eval1_emsg	eval.c	/^eval1_emsg(char_u **arg, typval_T *rettv, int evaluate)$/;"	f	file:
eval2	eval.c	/^eval2(char_u **arg, typval_T *rettv, int evaluate)$/;"	f	file:
eval3	eval.c	/^eval3(char_u **arg, typval_T *rettv, int evaluate)$/;"	f	file:
eval4	eval.c	/^eval4(char_u **arg, typval_T *rettv, int evaluate)$/;"	f	file:
eval5	eval.c	/^eval5(char_u **arg, typval_T *rettv, int evaluate)$/;"	f	file:
eval6	eval.c	/^eval6($/;"	f	file:
eval7	eval.c	/^eval7($/;"	f	file:
eval7_leader	eval.c	/^eval7_leader(typval_T *rettv, char_u *start_leader, char_u **end_leaderp)$/;"	f	file:
eval_addblob	eval.c	/^eval_addblob(typval_T *tv1, typval_T *tv2)$/;"	f
eval_addlist	eval.c	/^eval_addlist(typval_T *tv1, typval_T *tv2)$/;"	f
eval_charconvert	evalvars.c	/^eval_charconvert($/;"	f
eval_clear	eval.c	/^eval_clear(void)$/;"	f
eval_client_expr_to_string	main.c	/^eval_client_expr_to_string(char_u *expr)$/;"	f
eval_dict	dict.c	/^eval_dict(char_u **arg, typval_T *rettv, int evaluate, int literal)$/;"	f
eval_diff	evalvars.c	/^eval_diff($/;"	f
eval_enc_string_protect	if_ruby.c	/^eval_enc_string_protect(const char *str, int *state)$/;"	f	file:
eval_expr	eval.c	/^eval_expr(char_u *arg, char_u **nextcmd)$/;"	f
eval_expr_to_bool	eval.c	/^eval_expr_to_bool(typval_T *expr, int *error)$/;"	f
eval_expr_typval	eval.c	/^eval_expr_typval(typval_T *expr, typval_T *argv, int argc, typval_T *rettv)$/;"	f
eval_fname_script	userfunc.c	/^eval_fname_script(char_u *p)$/;"	f
eval_fname_sid	userfunc.c	/^eval_fname_sid(char_u *p)$/;"	f	file:
eval_foldexpr	eval.c	/^eval_foldexpr(char_u *arg, int *cp)$/;"	f
eval_for_line	eval.c	/^eval_for_line($/;"	f
eval_func	eval.c	/^eval_func($/;"	f	file:
eval_includeexpr	findfile.c	/^eval_includeexpr(char_u *ptr, int len)$/;"	f	file:
eval_index	eval.c	/^eval_index($/;"	f	file:
eval_init	eval.c	/^eval_init(void)$/;"	f
eval_input	if_python.c	117;"	d	file:
eval_isnamec	eval.c	/^eval_isnamec(int c)$/;"	f
eval_isnamec1	eval.c	/^eval_isnamec1(int c)$/;"	f
eval_lambda	eval.c	/^eval_lambda($/;"	f	file:
eval_lavars_used	globals.h	/^EXTERN int *eval_lavars_used INIT(= NULL);$/;"	v
eval_map_expr	map.c	/^eval_map_expr($/;"	f
eval_method	eval.c	/^eval_method($/;"	f	file:
eval_patch	evalvars.c	/^eval_patch($/;"	f
eval_printexpr	evalvars.c	/^eval_printexpr(char_u *fname, char_u *args)$/;"	f
eval_soundfold	spell.c	/^eval_soundfold(char_u *word)$/;"	f
eval_spell_expr	evalvars.c	/^eval_spell_expr(char_u *badword, char_u *expr)$/;"	f
eval_to_bool	eval.c	/^eval_to_bool($/;"	f
eval_to_number	eval.c	/^eval_to_number(char_u *expr)$/;"	f
eval_to_string	eval.c	/^eval_to_string($/;"	f
eval_to_string_safe	eval.c	/^eval_to_string_safe($/;"	f
eval_to_string_skip	eval.c	/^eval_to_string_skip($/;"	f
eval_vars	ex_docmd.c	/^eval_vars($/;"	f
eval_with_exn_handling	if_mzsch.c	/^eval_with_exn_handling(void *data, Scheme_Closed_Prim *what, Scheme_Object **ret)$/;"	f	file:
evaluate	structs.h	/^    int		evaluate;	\/\/ actually evaluate expressions$/;"	m	struct:__anon223
evaluate_const_and_or	vim9compile.c	/^evaluate_const_and_or(char_u **arg, cctx_T *cctx, char *op, typval_T *tv)$/;"	f	file:
evaluate_const_expr1	vim9compile.c	/^evaluate_const_expr1(char_u **arg, cctx_T *cctx, typval_T *tv)$/;"	f	file:
evaluate_const_expr2	vim9compile.c	/^evaluate_const_expr2(char_u **arg, cctx_T *cctx, typval_T *tv)$/;"	f	file:
evaluate_const_expr3	vim9compile.c	/^evaluate_const_expr3(char_u **arg, cctx_T *cctx, typval_T *tv)$/;"	f	file:
evaluate_const_expr7	vim9compile.c	/^evaluate_const_expr7(char_u **arg, cctx_T *cctx UNUSED, typval_T *tv)$/;"	f	file:
evalvars_clear	evalvars.c	/^evalvars_clear(void)$/;"	f
evalvars_init	evalvars.c	/^evalvars_init(void)$/;"	f
event	autocmd.c	/^    event_T	event;		\/\/ current event$/;"	m	struct:AutoPatCmd_S	file:
event	autocmd.c	/^    event_T	event;	\/\/ event number$/;"	m	struct:event_name	file:
event_T	vim.h	/^typedef enum auto_event event_T;$/;"	t	typeref:enum:auto_event
event_buffer	gui.h	/^    PhEvent_t	*event_buffer;$/;"	m	struct:Gui
event_ignored	autocmd.c	/^event_ignored(event_T event)$/;"	f	file:
event_name	autocmd.c	/^static struct event_name$/;"	s	file:
event_name2nr	autocmd.c	/^event_name2nr(char_u *start, char_u **end)$/;"	f	file:
event_names	autocmd.c	/^} event_names[] =$/;"	v	typeref:struct:event_name	file:
event_nr2name	autocmd.c	/^event_nr2name(event_T event)$/;"	f	file:
event_time	gui.h	/^    guint32	event_time;$/;"	m	struct:Gui
evim_mode	structs.h	/^    int		evim_mode;		\/\/ started as "evim"$/;"	m	struct:__anon252
ex_X	ex_docmd.c	/^ex_X(exarg_T *eap UNUSED)$/;"	f	file:
ex_X	ex_docmd.c	335;"	d	file:
ex_abbreviate	map.c	/^ex_abbreviate(exarg_T *eap)$/;"	f
ex_abclear	map.c	/^ex_abclear(exarg_T *eap)$/;"	f
ex_align	ex_cmds.c	/^ex_align(exarg_T *eap)$/;"	f
ex_all	arglist.c	/^ex_all(exarg_T *eap)$/;"	f
ex_append	ex_cmds.c	/^ex_append(exarg_T *eap)$/;"	f
ex_argadd	arglist.c	/^ex_argadd(exarg_T *eap)$/;"	f
ex_argdelete	arglist.c	/^ex_argdelete(exarg_T *eap)$/;"	f
ex_argedit	arglist.c	/^ex_argedit(exarg_T *eap)$/;"	f
ex_args	arglist.c	/^ex_args(exarg_T *eap)$/;"	f
ex_argument	arglist.c	/^ex_argument(exarg_T *eap)$/;"	f
ex_at	ex_docmd.c	/^ex_at(exarg_T *eap)$/;"	f	file:
ex_autocmd	ex_docmd.c	/^ex_autocmd(exarg_T *eap)$/;"	f	file:
ex_bang	ex_docmd.c	/^ex_bang(exarg_T *eap)$/;"	f	file:
ex_behave	ex_docmd.c	/^ex_behave(exarg_T *eap)$/;"	f	file:
ex_blast	ex_docmd.c	/^ex_blast(exarg_T *eap)$/;"	f	file:
ex_bmodified	ex_docmd.c	/^ex_bmodified(exarg_T *eap)$/;"	f	file:
ex_bnext	ex_docmd.c	/^ex_bnext(exarg_T *eap)$/;"	f	file:
ex_bprevious	ex_docmd.c	/^ex_bprevious(exarg_T *eap)$/;"	f	file:
ex_break	ex_docmd.c	265;"	d	file:
ex_break	ex_eval.c	/^ex_break(exarg_T *eap)$/;"	f
ex_breakadd	debugger.c	/^ex_breakadd(exarg_T *eap)$/;"	f
ex_breakadd	ex_docmd.c	266;"	d	file:
ex_breakdel	debugger.c	/^ex_breakdel(exarg_T *eap)$/;"	f
ex_breakdel	ex_docmd.c	267;"	d	file:
ex_breaklist	debugger.c	/^ex_breaklist(exarg_T *eap UNUSED)$/;"	f
ex_breaklist	ex_docmd.c	268;"	d	file:
ex_brewind	ex_docmd.c	/^ex_brewind(exarg_T *eap)$/;"	f	file:
ex_buffer	ex_docmd.c	/^ex_buffer(exarg_T *eap)$/;"	f	file:
ex_buffer_all	buffer.c	/^ex_buffer_all(exarg_T *eap)$/;"	f
ex_bunload	ex_docmd.c	/^ex_bunload(exarg_T *eap)$/;"	f	file:
ex_call	ex_docmd.c	269;"	d	file:
ex_call	userfunc.c	/^ex_call(exarg_T *eap)$/;"	f
ex_catch	ex_docmd.c	270;"	d	file:
ex_catch	ex_eval.c	/^ex_catch(exarg_T *eap)$/;"	f
ex_cbelow	ex_docmd.c	52;"	d	file:
ex_cbelow	quickfix.c	/^ex_cbelow(exarg_T *eap)$/;"	f
ex_cbottom	ex_docmd.c	64;"	d	file:
ex_cbottom	quickfix.c	/^ex_cbottom(exarg_T *eap)$/;"	f
ex_cbuffer	ex_docmd.c	49;"	d	file:
ex_cbuffer	quickfix.c	/^ex_cbuffer(exarg_T *eap)$/;"	f
ex_cc	ex_docmd.c	50;"	d	file:
ex_cc	quickfix.c	/^ex_cc(exarg_T *eap)$/;"	f
ex_cclose	ex_docmd.c	61;"	d	file:
ex_cclose	quickfix.c	/^ex_cclose(exarg_T *eap)$/;"	f
ex_cd	ex_docmd.c	/^ex_cd(exarg_T *eap)$/;"	f
ex_cexpr	ex_docmd.c	67;"	d	file:
ex_cexpr	quickfix.c	/^ex_cexpr(exarg_T *eap)$/;"	f
ex_cfile	ex_docmd.c	53;"	d	file:
ex_cfile	quickfix.c	/^ex_cfile(exarg_T *eap)$/;"	f
ex_change	ex_cmds.c	/^ex_change(exarg_T *eap)$/;"	f
ex_changes	ex_docmd.c	361;"	d	file:
ex_changes	mark.c	/^ex_changes(exarg_T *eap UNUSED)$/;"	f
ex_checkpath	ex_docmd.c	/^ex_checkpath(exarg_T *eap)$/;"	f	file:
ex_checkpath	ex_docmd.c	255;"	d	file:
ex_checktime	ex_cmds2.c	/^ex_checktime(exarg_T *eap)$/;"	f
ex_clearjumps	ex_docmd.c	360;"	d	file:
ex_clearjumps	mark.c	/^ex_clearjumps(exarg_T *eap UNUSED)$/;"	f
ex_close	ex_docmd.c	/^ex_close(exarg_T *eap)$/;"	f	file:
ex_cnext	ex_docmd.c	51;"	d	file:
ex_cnext	quickfix.c	/^ex_cnext(exarg_T *eap)$/;"	f
ex_colorscheme	ex_docmd.c	/^ex_colorscheme(exarg_T *eap)$/;"	f	file:
ex_comclear	usercmd.c	/^ex_comclear(exarg_T *eap UNUSED)$/;"	f
ex_command	usercmd.c	/^ex_command(exarg_T *eap)$/;"	f
ex_compiler	ex_cmds2.c	/^ex_compiler(exarg_T *eap)$/;"	f
ex_compiler	ex_docmd.c	271;"	d	file:
ex_const	evalvars.c	/^ex_const(exarg_T *eap)$/;"	f
ex_const	ex_docmd.c	272;"	d	file:
ex_continue	ex_docmd.c	273;"	d	file:
ex_continue	ex_eval.c	/^ex_continue(exarg_T *eap)$/;"	f
ex_copen	ex_docmd.c	62;"	d	file:
ex_copen	quickfix.c	/^ex_copen(exarg_T *eap)$/;"	f
ex_copy	ex_cmds.c	/^ex_copy(linenr_T line1, linenr_T line2, linenr_T n)$/;"	f
ex_copymove	ex_docmd.c	/^ex_copymove(exarg_T *eap)$/;"	f	file:
ex_cquit	ex_docmd.c	/^ex_cquit(exarg_T *eap UNUSED)$/;"	f	file:
ex_cscope	ex_docmd.c	153;"	d	file:
ex_cscope	if_cscope.c	/^ex_cscope(exarg_T *eap)$/;"	f
ex_cstag	ex_docmd.c	155;"	d	file:
ex_cstag	if_cscope.c	/^ex_cstag(exarg_T *eap)$/;"	f
ex_cwindow	ex_docmd.c	63;"	d	file:
ex_cwindow	quickfix.c	/^ex_cwindow(exarg_T *eap)$/;"	f
ex_debug	debugger.c	/^ex_debug(exarg_T *eap)$/;"	f
ex_debug	ex_docmd.c	274;"	d	file:
ex_debuggreedy	debugger.c	/^ex_debuggreedy(exarg_T *eap)$/;"	f
ex_debuggreedy	ex_docmd.c	275;"	d	file:
ex_delcommand	usercmd.c	/^ex_delcommand(exarg_T *eap)$/;"	f
ex_delfunction	ex_docmd.c	276;"	d	file:
ex_delfunction	userfunc.c	/^ex_delfunction(exarg_T *eap)$/;"	f
ex_delmarks	mark.c	/^ex_delmarks(exarg_T *eap)$/;"	f
ex_diffgetput	diff.c	/^ex_diffgetput(exarg_T *eap)$/;"	f
ex_diffgetput	ex_docmd.c	320;"	d	file:
ex_diffoff	diff.c	/^ex_diffoff(exarg_T *eap)$/;"	f
ex_diffoff	ex_docmd.c	318;"	d	file:
ex_diffpatch	diff.c	/^ex_diffpatch(exarg_T *eap)$/;"	f
ex_diffpatch	ex_docmd.c	319;"	d	file:
ex_diffsplit	diff.c	/^ex_diffsplit(exarg_T *eap)$/;"	f
ex_diffsplit	ex_docmd.c	321;"	d	file:
ex_diffthis	diff.c	/^ex_diffthis(exarg_T *eap UNUSED)$/;"	f
ex_diffthis	ex_docmd.c	322;"	d	file:
ex_diffupdate	diff.c	/^ex_diffupdate(exarg_T *eap)	\/\/ "eap" can be NULL$/;"	f
ex_diffupdate	ex_docmd.c	323;"	d	file:
ex_digraphs	ex_docmd.c	/^ex_digraphs(exarg_T *eap UNUSED)$/;"	f	file:
ex_disassemble	ex_docmd.c	277;"	d	file:
ex_disassemble	vim9execute.c	/^ex_disassemble(exarg_T *eap)$/;"	f
ex_display	register.c	/^ex_display(exarg_T *eap)$/;"	f
ex_doautoall	autocmd.c	/^ex_doautoall(exarg_T *eap)$/;"	f
ex_doautocmd	ex_docmd.c	/^ex_doautocmd(exarg_T *eap)$/;"	f	file:
ex_drop	ex_cmds.c	/^ex_drop(exarg_T *eap)$/;"	f
ex_echo	eval.c	/^ex_echo(exarg_T *eap)$/;"	f
ex_echo	ex_docmd.c	278;"	d	file:
ex_echohl	eval.c	/^ex_echohl(exarg_T *eap)$/;"	f
ex_echohl	ex_docmd.c	279;"	d	file:
ex_edit	ex_docmd.c	/^ex_edit(exarg_T *eap)$/;"	f	file:
ex_else	ex_docmd.c	280;"	d	file:
ex_else	ex_eval.c	/^ex_else(exarg_T *eap)$/;"	f
ex_emenu	ex_docmd.c	32;"	d	file:
ex_emenu	menu.c	/^ex_emenu(exarg_T *eap)$/;"	f
ex_endfunction	ex_docmd.c	281;"	d	file:
ex_endfunction	ex_eval.c	/^ex_endfunction(exarg_T *eap UNUSED)$/;"	f
ex_endif	ex_docmd.c	282;"	d	file:
ex_endif	ex_eval.c	/^ex_endif(exarg_T *eap)$/;"	f
ex_endtry	ex_docmd.c	283;"	d	file:
ex_endtry	ex_eval.c	/^ex_endtry(exarg_T *eap)$/;"	f
ex_endwhile	ex_docmd.c	284;"	d	file:
ex_endwhile	ex_eval.c	/^ex_endwhile(exarg_T *eap)$/;"	f
ex_equal	ex_docmd.c	/^ex_equal(exarg_T *eap)$/;"	f	file:
ex_eval	ex_docmd.c	285;"	d	file:
ex_eval	ex_eval.c	/^ex_eval(exarg_T *eap)$/;"	f
ex_execute	eval.c	/^ex_execute(exarg_T *eap)$/;"	f
ex_execute	ex_docmd.c	286;"	d	file:
ex_exit	ex_docmd.c	/^ex_exit(exarg_T *eap)$/;"	f	file:
ex_exitval	globals.h	/^EXTERN int	ex_exitval INIT(= 0);	    \/\/ exit value for ex mode$/;"	v
ex_export	ex_docmd.c	306;"	d	file:
ex_export	vim9script.c	/^ex_export(exarg_T *eap UNUSED)$/;"	f
ex_exusage	ex_cmds.c	/^ex_exusage(exarg_T *eap UNUSED)$/;"	f
ex_file	ex_cmds.c	/^ex_file(exarg_T *eap)$/;"	f
ex_filetype	ex_docmd.c	/^ex_filetype(exarg_T *eap)$/;"	f	file:
ex_finally	ex_docmd.c	287;"	d	file:
ex_finally	ex_eval.c	/^ex_finally(exarg_T *eap)$/;"	f
ex_find	ex_docmd.c	/^ex_find(exarg_T *eap)$/;"	f	file:
ex_findpat	ex_docmd.c	/^ex_findpat(exarg_T *eap)$/;"	f	file:
ex_findpat	ex_docmd.c	254;"	d	file:
ex_finish	ex_docmd.c	288;"	d	file:
ex_finish	scriptfile.c	/^ex_finish(exarg_T *eap)$/;"	f
ex_fold	ex_docmd.c	/^ex_fold(exarg_T *eap)$/;"	f	file:
ex_fold	ex_docmd.c	342;"	d	file:
ex_folddo	ex_docmd.c	/^ex_folddo(exarg_T *eap)$/;"	f	file:
ex_folddo	ex_docmd.c	344;"	d	file:
ex_foldopen	ex_docmd.c	/^ex_foldopen(exarg_T *eap)$/;"	f	file:
ex_foldopen	ex_docmd.c	343;"	d	file:
ex_func_T	ex_cmds.h	/^typedef void (*ex_func_T) (exarg_T *eap);$/;"	t
ex_function	ex_docmd.c	289;"	d	file:
ex_function	userfunc.c	/^ex_function(exarg_T *eap)$/;"	f
ex_global	ex_cmds.c	/^ex_global(exarg_T *eap)$/;"	f
ex_goto	ex_docmd.c	/^ex_goto(exarg_T *eap)$/;"	f	file:
ex_goto	ex_docmd.c	117;"	d	file:
ex_gui	ex_docmd.c	128;"	d	file:
ex_gui	gui.c	/^ex_gui(exarg_T *eap)$/;"	f
ex_hardcopy	ex_docmd.c	19;"	d	file:
ex_hardcopy	hardcopy.c	/^ex_hardcopy(exarg_T *eap)$/;"	f
ex_help	ex_cmds.c	/^ex_help(exarg_T *eap)$/;"	f
ex_helpclose	ex_cmds.c	/^ex_helpclose(exarg_T *eap UNUSED)$/;"	f
ex_helpfind	ex_docmd.c	150;"	d	file:
ex_helpfind	gui_gtk.c	/^ex_helpfind(exarg_T *eap UNUSED)$/;"	f
ex_helpgrep	ex_docmd.c	57;"	d	file:
ex_helpgrep	quickfix.c	/^ex_helpgrep(exarg_T *eap)$/;"	f
ex_helptags	ex_cmds.c	/^ex_helptags(exarg_T *eap)$/;"	f
ex_hide	ex_docmd.c	/^ex_hide(exarg_T *eap UNUSED)$/;"	f	file:
ex_highlight	ex_docmd.c	/^ex_highlight(exarg_T *eap)$/;"	f	file:
ex_history	cmdhist.c	/^ex_history(exarg_T *eap)$/;"	f
ex_if	ex_docmd.c	290;"	d	file:
ex_if	ex_eval.c	/^ex_if(exarg_T *eap)$/;"	f
ex_import	ex_docmd.c	305;"	d	file:
ex_import	vim9script.c	/^ex_import(exarg_T *eap)$/;"	f
ex_intro	version.c	/^ex_intro(exarg_T *eap UNUSED)$/;"	f
ex_join	ex_docmd.c	/^ex_join(exarg_T *eap)$/;"	f	file:
ex_jumps	ex_docmd.c	359;"	d	file:
ex_jumps	mark.c	/^ex_jumps(exarg_T *eap UNUSED)$/;"	f
ex_keep_indent	globals.h	/^EXTERN int	ex_keep_indent INIT(= FALSE); \/\/ getexmodeline(): keep indent$/;"	v
ex_language	ex_cmds2.c	/^ex_language(exarg_T *eap)$/;"	f
ex_language	ex_docmd.c	347;"	d	file:
ex_last	arglist.c	/^ex_last(exarg_T *eap)$/;"	f
ex_later	ex_docmd.c	/^ex_later(exarg_T *eap)$/;"	f	file:
ex_let	evalvars.c	/^ex_let(exarg_T *eap)$/;"	f
ex_let	ex_docmd.c	291;"	d	file:
ex_let_const	evalvars.c	/^ex_let_const(exarg_T *eap, int is_const)$/;"	f	file:
ex_let_one	evalvars.c	/^ex_let_one($/;"	f	file:
ex_let_vars	evalvars.c	/^ex_let_vars($/;"	f
ex_listdo	ex_cmds2.c	/^ex_listdo(exarg_T *eap)$/;"	f
ex_loadkeymap	digraph.c	/^ex_loadkeymap(exarg_T *eap)$/;"	f
ex_loadkeymap	ex_docmd.c	214;"	d	file:
ex_loadview	ex_docmd.c	309;"	d	file:
ex_loadview	session.c	/^ex_loadview(exarg_T *eap)$/;"	f
ex_lockvar	evalvars.c	/^ex_lockvar(exarg_T *eap)$/;"	f
ex_lockvar	ex_docmd.c	292;"	d	file:
ex_lua	ex_docmd.c	176;"	d	file:
ex_lua	if_lua.c	/^ex_lua(exarg_T *eap)$/;"	f
ex_luado	ex_docmd.c	177;"	d	file:
ex_luado	if_lua.c	/^ex_luado(exarg_T *eap)$/;"	f
ex_luafile	ex_docmd.c	178;"	d	file:
ex_luafile	if_lua.c	/^ex_luafile(exarg_T *eap)$/;"	f
ex_make	ex_docmd.c	48;"	d	file:
ex_make	quickfix.c	/^ex_make(exarg_T *eap)$/;"	f
ex_map	map.c	/^ex_map(exarg_T *eap)$/;"	f
ex_mapclear	map.c	/^ex_mapclear(exarg_T *eap)$/;"	f
ex_mark	ex_docmd.c	/^ex_mark(exarg_T *eap)$/;"	f	file:
ex_marks	mark.c	/^ex_marks(exarg_T *eap)$/;"	f
ex_match	ex_docmd.c	330;"	d	file:
ex_match	highlight.c	/^ex_match(exarg_T *eap)$/;"	f
ex_may_print	ex_docmd.c	/^ex_may_print(exarg_T *eap)$/;"	f
ex_menu	ex_docmd.c	33;"	d	file:
ex_menu	menu.c	/^ex_menu($/;"	f
ex_menutranslate	ex_docmd.c	34;"	d	file:
ex_menutranslate	menu.c	/^ex_menutranslate(exarg_T *eap UNUSED)$/;"	f
ex_messages	message.c	/^ex_messages(exarg_T *eap)$/;"	f
ex_mkrc	session.c	/^ex_mkrc(exarg_T	*eap)$/;"	f
ex_mkspell	ex_docmd.c	166;"	d	file:
ex_mkspell	spellfile.c	/^ex_mkspell(exarg_T *eap)$/;"	f
ex_mode	ex_docmd.c	/^ex_mode(exarg_T *eap)$/;"	f	file:
ex_mzfile	ex_docmd.c	182;"	d	file:
ex_mzfile	if_mzsch.c	/^ex_mzfile(exarg_T *eap)$/;"	f
ex_mzscheme	ex_docmd.c	181;"	d	file:
ex_mzscheme	if_mzsch.c	/^ex_mzscheme(exarg_T *eap)$/;"	f
ex_nbclose	ex_docmd.c	353;"	d	file:
ex_nbclose	netbeans.c	/^ex_nbclose(exarg_T *eap UNUSED)$/;"	f
ex_nbkey	ex_docmd.c	354;"	d	file:
ex_nbkey	netbeans.c	/^ex_nbkey(exarg_T *eap)$/;"	f
ex_nbstart	ex_docmd.c	355;"	d	file:
ex_nbstart	netbeans.c	/^ex_nbstart($/;"	f
ex_nesting_level	globals.h	/^EXTERN int	ex_nesting_level INIT(= 0);	\/\/ nesting level$/;"	v
ex_next	arglist.c	/^ex_next(exarg_T *eap)$/;"	f
ex_ni	ex_docmd.c	/^ex_ni(exarg_T *eap)$/;"	f
ex_no_reprint	globals.h	/^EXTERN int ex_no_reprint INIT(= FALSE); \/\/ no need to print after z or p$/;"	v
ex_nogui	ex_docmd.c	/^ex_nogui(exarg_T *eap)$/;"	f	file:
ex_nohlsearch	ex_docmd.c	/^ex_nohlsearch(exarg_T *eap UNUSED)$/;"	f	file:
ex_nohlsearch	ex_docmd.c	329;"	d	file:
ex_normal	ex_docmd.c	/^ex_normal(exarg_T *eap)$/;"	f
ex_normal_busy	globals.h	/^EXTERN int	ex_normal_busy INIT(= 0); \/\/ recursiveness of ex_normal()$/;"	v
ex_normal_lock	globals.h	/^EXTERN int	ex_normal_lock INIT(= 0); \/\/ forbid use of ex_normal()$/;"	v
ex_oldfiles	ex_cmds.c	/^ex_oldfiles(exarg_T *eap UNUSED)$/;"	f
ex_oldfiles	ex_docmd.c	293;"	d	file:
ex_only	ex_docmd.c	/^ex_only(exarg_T *eap)$/;"	f	file:
ex_open	ex_docmd.c	/^ex_open(exarg_T *eap)$/;"	f	file:
ex_operators	ex_docmd.c	/^ex_operators(exarg_T *eap)$/;"	f	file:
ex_options	ex_docmd.c	294;"	d	file:
ex_options	scriptfile.c	/^ex_options($/;"	f
ex_ownsyntax	ex_docmd.c	159;"	d	file:
ex_ownsyntax	syntax.c	/^ex_ownsyntax(exarg_T *eap)$/;"	f
ex_packadd	ex_docmd.c	295;"	d	file:
ex_packadd	scriptfile.c	/^ex_packadd(exarg_T *eap)$/;"	f
ex_packloadall	ex_docmd.c	296;"	d	file:
ex_packloadall	scriptfile.c	/^ex_packloadall(exarg_T *eap)$/;"	f
ex_pclose	ex_docmd.c	/^ex_pclose(exarg_T *eap)$/;"	f	file:
ex_pclose	ex_docmd.c	106;"	d	file:
ex_pedit	ex_docmd.c	/^ex_pedit(exarg_T *eap)$/;"	f	file:
ex_pedit	ex_docmd.c	108;"	d	file:
ex_perl	ex_docmd.c	185;"	d	file:
ex_perldo	ex_docmd.c	186;"	d	file:
ex_popup	ex_docmd.c	/^ex_popup(exarg_T *eap)$/;"	f	file:
ex_popup	ex_docmd.c	140;"	d	file:
ex_popupclear	ex_docmd.c	374;"	d	file:
ex_preserve	ex_docmd.c	/^ex_preserve(exarg_T *eap UNUSED)$/;"	f	file:
ex_pressedreturn	ex_docmd.c	/^static int	ex_pressedreturn = FALSE;$/;"	v	file:
ex_previous	arglist.c	/^ex_previous(exarg_T *eap)$/;"	f
ex_print	ex_docmd.c	/^ex_print(exarg_T *eap)$/;"	f	file:
ex_profile	ex_docmd.c	365;"	d	file:
ex_profile	profiler.c	/^ex_profile(exarg_T *eap)$/;"	f
ex_psearch	ex_docmd.c	/^ex_psearch(exarg_T *eap)$/;"	f	file:
ex_psearch	ex_docmd.c	260;"	d	file:
ex_ptag	ex_docmd.c	/^ex_ptag(exarg_T *eap)$/;"	f	file:
ex_ptag	ex_docmd.c	107;"	d	file:
ex_put	ex_docmd.c	/^ex_put(exarg_T *eap)$/;"	f	file:
ex_pwd	ex_docmd.c	/^ex_pwd(exarg_T *eap UNUSED)$/;"	f	file:
ex_py3	ex_docmd.c	194;"	d	file:
ex_py3	if_python3.c	/^ex_py3(exarg_T *eap)$/;"	f
ex_py3do	ex_docmd.c	195;"	d	file:
ex_py3do	if_python3.c	/^ex_py3do(exarg_T *eap)$/;"	f
ex_py3file	ex_docmd.c	196;"	d	file:
ex_py3file	if_python3.c	/^ex_py3file(exarg_T *eap)$/;"	f
ex_pydo	ex_docmd.c	190;"	d	file:
ex_pydo	if_python.c	/^ex_pydo(exarg_T *eap)$/;"	f
ex_pyfile	ex_docmd.c	191;"	d	file:
ex_pyfile	if_python.c	/^ex_pyfile(exarg_T *eap)$/;"	f
ex_python	ex_docmd.c	189;"	d	file:
ex_python	if_python.c	/^ex_python(exarg_T *eap)$/;"	f
ex_pyx	ex_cmds2.c	/^ex_pyx(exarg_T *eap)$/;"	f
ex_pyx	ex_docmd.c	199;"	d	file:
ex_pyxdo	ex_cmds2.c	/^ex_pyxdo(exarg_T *eap)$/;"	f
ex_pyxdo	ex_docmd.c	200;"	d	file:
ex_pyxfile	ex_cmds2.c	/^ex_pyxfile(exarg_T *eap)$/;"	f
ex_pyxfile	ex_docmd.c	201;"	d	file:
ex_quit	ex_docmd.c	/^ex_quit(exarg_T *eap)$/;"	f
ex_quit_all	ex_docmd.c	/^ex_quit_all(exarg_T *eap)$/;"	f	file:
ex_read	ex_docmd.c	/^ex_read(exarg_T *eap)$/;"	f	file:
ex_recover	ex_docmd.c	/^ex_recover(exarg_T *eap)$/;"	f	file:
ex_redir	ex_docmd.c	/^ex_redir(exarg_T *eap)$/;"	f	file:
ex_redo	ex_docmd.c	/^ex_redo(exarg_T *eap UNUSED)$/;"	f	file:
ex_redraw	ex_docmd.c	/^ex_redraw(exarg_T *eap)$/;"	f
ex_redrawstatus	ex_docmd.c	/^ex_redrawstatus(exarg_T *eap UNUSED)$/;"	f	file:
ex_redrawtabline	ex_docmd.c	/^ex_redrawtabline(exarg_T *eap UNUSED)$/;"	f	file:
ex_resize	ex_docmd.c	/^ex_resize(exarg_T *eap)$/;"	f	file:
ex_retab	indent.c	/^ex_retab(exarg_T *eap)$/;"	f
ex_return	ex_docmd.c	297;"	d	file:
ex_return	userfunc.c	/^ex_return(exarg_T *eap)$/;"	f
ex_rewind	arglist.c	/^ex_rewind(exarg_T *eap)$/;"	f
ex_ruby	ex_docmd.c	209;"	d	file:
ex_ruby	if_ruby.c	/^ex_ruby(exarg_T *eap)$/;"	f
ex_rubydo	ex_docmd.c	210;"	d	file:
ex_rubydo	if_ruby.c	/^ex_rubydo(exarg_T *eap)$/;"	f
ex_rubyfile	ex_docmd.c	211;"	d	file:
ex_rubyfile	if_ruby.c	/^ex_rubyfile(exarg_T *eap)$/;"	f
ex_rundo	ex_docmd.c	/^ex_rundo(exarg_T *eap)$/;"	f	file:
ex_rundo	ex_docmd.c	172;"	d	file:
ex_runtime	scriptfile.c	/^ex_runtime(exarg_T *eap)$/;"	f
ex_script_ni	ex_docmd.c	/^ex_script_ni(exarg_T *eap)$/;"	f	file:
ex_scriptencoding	scriptfile.c	/^ex_scriptencoding(exarg_T *eap)$/;"	f
ex_scriptnames	ex_docmd.c	298;"	d	file:
ex_scriptnames	scriptfile.c	/^ex_scriptnames(exarg_T *eap)$/;"	f
ex_scriptversion	scriptfile.c	/^ex_scriptversion(exarg_T *eap UNUSED)$/;"	f
ex_scscope	ex_docmd.c	154;"	d	file:
ex_scscope	if_cscope.c	/^ex_scscope(exarg_T *eap)$/;"	f
ex_set	option.c	/^ex_set(exarg_T *eap)$/;"	f
ex_setfiletype	ex_docmd.c	/^ex_setfiletype(exarg_T *eap)$/;"	f	file:
ex_shell	ex_docmd.c	/^ex_shell(exarg_T *eap UNUSED)$/;"	f	file:
ex_sign	ex_docmd.c	350;"	d	file:
ex_sign	sign.c	/^ex_sign(exarg_T *eap)$/;"	f
ex_simalt	ex_docmd.c	143;"	d	file:
ex_simalt	gui_w32.c	/^ex_simalt(exarg_T *eap)$/;"	f
ex_sleep	ex_docmd.c	/^ex_sleep(exarg_T *eap)$/;"	f	file:
ex_smile	ex_cmds.c	/^ex_smile(exarg_T *eap UNUSED)$/;"	f
ex_sort	ex_cmds.c	/^ex_sort(exarg_T *eap)$/;"	f
ex_source	scriptfile.c	/^ex_source(exarg_T *eap)$/;"	f
ex_spell	ex_docmd.c	165;"	d	file:
ex_spell	spellfile.c	/^ex_spell(exarg_T *eap)$/;"	f
ex_spelldump	ex_docmd.c	167;"	d	file:
ex_spelldump	spell.c	/^ex_spelldump(exarg_T *eap)$/;"	f
ex_spellinfo	ex_docmd.c	168;"	d	file:
ex_spellinfo	spell.c	/^ex_spellinfo(exarg_T *eap UNUSED)$/;"	f
ex_spellrepall	ex_docmd.c	169;"	d	file:
ex_spellrepall	spell.c	/^ex_spellrepall(exarg_T *eap UNUSED)$/;"	f
ex_splitview	ex_docmd.c	/^ex_splitview(exarg_T *eap)$/;"	f
ex_stag	ex_docmd.c	/^ex_stag(exarg_T *eap)$/;"	f	file:
ex_startinsert	ex_docmd.c	/^ex_startinsert(exarg_T *eap)$/;"	f	file:
ex_stop	ex_docmd.c	/^ex_stop(exarg_T *eap)$/;"	f	file:
ex_stopinsert	ex_docmd.c	/^ex_stopinsert(exarg_T *eap UNUSED)$/;"	f	file:
ex_submagic	ex_docmd.c	/^ex_submagic(exarg_T *eap)$/;"	f	file:
ex_swapname	ex_docmd.c	/^ex_swapname(exarg_T *eap UNUSED)$/;"	f	file:
ex_syncbind	ex_docmd.c	/^ex_syncbind(exarg_T *eap UNUSED)$/;"	f	file:
ex_syntax	ex_docmd.c	158;"	d	file:
ex_syntax	syntax.c	/^ex_syntax(exarg_T *eap)$/;"	f
ex_syntime	ex_docmd.c	162;"	d	file:
ex_syntime	syntax.c	/^ex_syntime(exarg_T *eap)$/;"	f
ex_tabclose	ex_docmd.c	/^ex_tabclose(exarg_T *eap)$/;"	f	file:
ex_tabmove	ex_docmd.c	/^ex_tabmove(exarg_T *eap)$/;"	f	file:
ex_tabnext	ex_docmd.c	/^ex_tabnext(exarg_T *eap)$/;"	f	file:
ex_tabonly	ex_docmd.c	/^ex_tabonly(exarg_T *eap)$/;"	f	file:
ex_tabs	ex_docmd.c	/^ex_tabs(exarg_T *eap UNUSED)$/;"	f	file:
ex_tag	ex_docmd.c	/^ex_tag(exarg_T *eap)$/;"	f	file:
ex_tag_cmd	ex_docmd.c	/^ex_tag_cmd(exarg_T *eap, char_u *name)$/;"	f	file:
ex_tcl	ex_docmd.c	204;"	d	file:
ex_tcl	if_tcl.c	/^ex_tcl(exarg_T *eap)$/;"	f
ex_tcldo	ex_docmd.c	205;"	d	file:
ex_tcldo	if_tcl.c	/^ex_tcldo(exarg_T *eap)$/;"	f
ex_tclfile	ex_docmd.c	206;"	d	file:
ex_tclfile	if_tcl.c	/^ex_tclfile(exarg_T *eap)$/;"	f
ex_tearoff	ex_docmd.c	/^ex_tearoff(exarg_T *eap)$/;"	f	file:
ex_tearoff	ex_docmd.c	134;"	d	file:
ex_terminal	ex_docmd.c	368;"	d	file:
ex_terminal	terminal.c	/^ex_terminal(exarg_T *eap)$/;"	f
ex_throw	ex_docmd.c	299;"	d	file:
ex_throw	ex_eval.c	/^ex_throw(exarg_T *eap)$/;"	f
ex_try	ex_docmd.c	300;"	d	file:
ex_try	ex_eval.c	/^ex_try(exarg_T *eap)$/;"	f
ex_undo	ex_docmd.c	/^ex_undo(exarg_T *eap)$/;"	f	file:
ex_undojoin	undo.c	/^ex_undojoin(exarg_T *eap UNUSED)$/;"	f
ex_undolist	undo.c	/^ex_undolist(exarg_T *eap UNUSED)$/;"	f
ex_unlet	evalvars.c	/^ex_unlet(exarg_T *eap)$/;"	f
ex_unlet	ex_docmd.c	301;"	d	file:
ex_unletlock	evalvars.c	/^ex_unletlock($/;"	f	file:
ex_unlockvar	ex_docmd.c	302;"	d	file:
ex_unmap	map.c	/^ex_unmap(exarg_T *eap)$/;"	f
ex_update	ex_cmds.c	/^ex_update(exarg_T *eap)$/;"	f
ex_version	version.c	/^ex_version(exarg_T *eap)$/;"	f
ex_vim9script	ex_docmd.c	303;"	d	file:
ex_vim9script	vim9script.c	/^ex_vim9script(exarg_T *eap)$/;"	f
ex_vimgrep	ex_docmd.c	58;"	d	file:
ex_vimgrep	quickfix.c	/^ex_vimgrep(exarg_T *eap)$/;"	f
ex_viminfo	ex_docmd.c	312;"	d	file:
ex_viminfo	viminfo.c	/^ex_viminfo($/;"	f
ex_viusage	ex_cmds.c	/^ex_viusage(exarg_T *eap UNUSED)$/;"	f
ex_while	ex_docmd.c	304;"	d	file:
ex_while	ex_eval.c	/^ex_while(exarg_T *eap)$/;"	f
ex_win_close	ex_docmd.c	/^ex_win_close($/;"	f	file:
ex_wincmd	ex_docmd.c	/^ex_wincmd(exarg_T *eap)$/;"	f	file:
ex_winpos	ex_docmd.c	/^ex_winpos(exarg_T *eap)$/;"	f	file:
ex_winpos	ex_docmd.c	227;"	d	file:
ex_winsize	ex_docmd.c	/^ex_winsize(exarg_T *eap)$/;"	f	file:
ex_wnext	ex_cmds.c	/^ex_wnext(exarg_T *eap)$/;"	f
ex_write	ex_cmds.c	/^ex_write(exarg_T *eap)$/;"	f
ex_wrongmodifier	ex_docmd.c	/^ex_wrongmodifier(exarg_T *eap)$/;"	f	file:
ex_wundo	ex_docmd.c	/^ex_wundo(exarg_T *eap)$/;"	f	file:
ex_wundo	ex_docmd.c	173;"	d	file:
ex_xrestore	ex_docmd.c	371;"	d	file:
ex_xrestore	os_unix.c	/^ex_xrestore(exarg_T *eap)$/;"	f
ex_z	ex_cmds.c	/^ex_z(exarg_T *eap)$/;"	f
exarg	ex_cmds.h	/^struct exarg$/;"	s
exarg_T	ex_cmds.h	/^typedef struct exarg exarg_T;$/;"	t	typeref:struct:exarg
except	structs.h	/^	except_T   *except; \/\/ exception info$/;"	m	union:__anon225::__anon226
except_T	structs.h	/^typedef struct vim_exception except_T;$/;"	t	typeref:struct:vim_exception
except_type_T	structs.h	/^} except_type_T;$/;"	t	typeref:enum:__anon194
exception	structs.h	/^    except_T *exception;	\/\/ exception value$/;"	m	struct:cleanup_stuff
excmd_get_argt	ex_docmd.c	/^excmd_get_argt(cmdidx_T idx)$/;"	f
excmd_get_cmdidx	ex_docmd.c	/^excmd_get_cmdidx(char_u *cmd, int len)$/;"	f
exe_commands	main.c	/^exe_commands(mparm_T *parmp)$/;"	f	file:
exe_name	globals.h	/^EXTERN char_u	*exe_name;		\/\/ the name of the executable$/;"	v
exe_path	os_win32.c	/^static char_u *exe_path = NULL;$/;"	v	file:
exe_pre_commands	main.c	/^exe_pre_commands(mparm_T *parmp)$/;"	f	file:
exearg	dosinst.h	/^    char	*exearg;	\/\/ argument for vim.exe or gvim.exe$/;"	m	struct:__anon141
exec_from_reg	globals.h	/^EXTERN int	exec_from_reg INIT(= FALSE);	\/\/ executing register$/;"	v
exec_normal	ex_docmd.c	/^exec_normal(int was_typed, int use_vpeekc, int may_use_terminal_loop UNUSED)$/;"	f
exec_normal_cmd	ex_docmd.c	/^exec_normal_cmd(char_u *cmd, int remap, int silent)$/;"	f
exec_on_server	main.c	/^exec_on_server(mparm_T *parmp)$/;"	f	file:
execreg_lastc	register.c	/^static int execreg_lastc = NUL;$/;"	v	file:
executable_exists	os_win32.c	/^executable_exists(char *name, char_u **path, int use_path)$/;"	f	file:
executable_file	os_unix.c	/^executable_file(char_u *name)$/;"	f	file:
execute_common	evalfunc.c	/^execute_common(typval_T *argvars, typval_T *rettv, int arg_off)$/;"	f
execute_menu	menu.c	/^execute_menu(exarg_T *eap, vimmenu_T *menu, int mode_idx)$/;"	f
execute_redir_str	evalfunc.c	/^execute_redir_str(char_u *value, int value_len)$/;"	f
exename	dosinst.h	/^    char	*exename;	\/\/ exe file name$/;"	m	struct:__anon141
exenamearg	dosinst.h	/^    char	*exenamearg;	\/\/ exe file name when using exearg$/;"	m	struct:__anon141
exit	gui_xmdlg.c	/^    Boolean	exit;		\/\/ used for program exit control$/;"	m	struct:_SharedFontSelData	file:
exit_gui_mch_update	gui_photon.c	/^exit_gui_mch_update(void *data)$/;"	f	file:
exit_scroll	os_unix.c	/^exit_scroll(void)$/;"	f	file:
exitcmd	if_tcl.c	/^exitcmd($/;"	f	file:
exiting	globals.h	/^EXTERN int	exiting INIT(= FALSE);$/;"	v
exitvalue	if_tcl.c	/^    int exitvalue;$/;"	m	struct:__anon60	file:
exmode_active	globals.h	/^EXTERN int exmode_active INIT(= 0);	\/\/ zero, EXMODE_NORMAL or EXMODE_VIM$/;"	v
exn_catching_apply	if_mzsch.c	/^static Scheme_Object *exn_catching_apply = NULL;$/;"	v	file:
exn_message	if_mzsch.c	/^static Scheme_Object *exn_message = NULL;$/;"	v	file:
exn_p	if_mzsch.c	/^static Scheme_Object *exn_p = NULL;$/;"	v	file:
expand	structs.h	/^typedef struct expand$/;"	s
expand	usercmd.c	/^    cmd_addr_T	expand;$/;"	m	struct:__anon124	file:
expand	usercmd.c	/^    int	    expand;$/;"	m	struct:__anon123	file:
expand_T	structs.h	/^} expand_T;$/;"	t	typeref:struct:expand
expand_backtick	filepath.c	/^expand_backtick($/;"	f	file:
expand_buffer	map.c	/^static int	expand_buffer = FALSE;$/;"	v	file:
expand_by_function	insexpand.c	/^expand_by_function($/;"	f	file:
expand_cmdline	cmdexpand.c	/^expand_cmdline($/;"	f
expand_emenu	menu.c	/^static int		expand_emenu;	\/\/ TRUE for ":emenu" command$/;"	v	file:
expand_env	misc1.c	/^expand_env($/;"	f
expand_env_esc	misc1.c	/^expand_env_esc($/;"	f
expand_env_save	misc1.c	/^expand_env_save(char_u *src)$/;"	f
expand_env_save_opt	misc1.c	/^expand_env_save_opt(char_u *src, int one)$/;"	f
expand_filename	ex_docmd.c	/^expand_filename($/;"	f
expand_in_path	findfile.c	/^expand_in_path($/;"	f
expand_isabbrev	map.c	/^static int	expand_isabbrev = 0;$/;"	v	file:
expand_mapmodes	map.c	/^static int	expand_mapmodes = 0;$/;"	v	file:
expand_menu	menu.c	/^static vimmenu_T	*expand_menu = NULL;$/;"	v	file:
expand_menu_alt	menu.c	/^static vimmenu_T	*expand_menu_alt = NULL;$/;"	v	file:
expand_modes	menu.c	/^static int		expand_modes = 0x0;$/;"	v	file:
expand_option_flags	option.c	/^static int expand_option_flags = 0;$/;"	v	file:
expand_option_idx	option.c	/^static int expand_option_idx = -1;$/;"	v	file:
expand_option_name	option.c	/^static char_u expand_option_name[5] = {'t', '_', NUL, NUL, NUL};$/;"	v	file:
expand_path_option	findfile.c	/^expand_path_option(char_u *curdir, garray_T *gap)$/;"	f	file:
expand_sfile	ex_docmd.c	/^expand_sfile(char_u *arg)$/;"	f
expand_shellcmd	cmdexpand.c	/^expand_shellcmd($/;"	f	file:
expand_showtail	cmdexpand.c	/^expand_showtail(expand_T *xp)$/;"	f	file:
expand_spelling	spell.c	/^expand_spelling($/;"	f
expand_tag_fname	tag.c	/^expand_tag_fname(char_u *fname, char_u *tag_fname, int expand)$/;"	f	file:
expand_tags	tag.c	/^expand_tags($/;"	f
expand_what	if_cscope.c	/^} expand_what;$/;"	v	typeref:enum:__anon49	file:
expand_what	sign.c	/^} expand_what;$/;"	v	typeref:enum:__anon109	file:
expand_what	syntax.c	/^} expand_what;$/;"	v	typeref:enum:__anon116	file:
expand_wildcards	filepath.c	/^expand_wildcards($/;"	f
expand_wildcards_eval	filepath.c	/^expand_wildcards_eval($/;"	f
expose_event	gui_gtk_x11.c	/^expose_event(GtkWidget *widget UNUSED,$/;"	f	file:
expr	regexp.h	/^    char_u	*expr;$/;"	m	struct:regengine
expr_line	register.c	/^static char_u	*expr_line = NULL;$/;"	v	file:
expr_result	os_mswin.c	/^    int		expr_result;	\/\/ 0 for REPLY, 1 for RESULT 2 for error$/;"	m	struct:__anon74	file:
exprcmd	if_tcl.c	/^exprcmd($/;"	f	file:
exptype_T	structs.h	/^} exptype_T;$/;"	t	typeref:enum:__anon251
extended	os_vms.c	/^    int		extended;$/;"	m	struct:__anon76	file:
extra_char	ex_getln.c	/^static int	extra_char = NUL;  \/\/ extra character to display when redrawing$/;"	v	file:
extra_char	structs.h	/^    int		extra_char;	\/\/ yet another character (optional)$/;"	m	struct:cmdarg_S
extra_char_shift	ex_getln.c	/^static int	extra_char_shift;$/;"	v	file:
extra_patches	version.c	/^static char *(extra_patches[]) =$/;"	v	file:
extra_shell_arg	os_unix.c	/^static char_u	*extra_shell_arg = NULL;$/;"	v	file:
extract_exn_message	if_mzsch.c	/^extract_exn_message(Scheme_Object *v)$/;"	f	file:
extract_modifiers	misc2.c	/^extract_modifiers(int key, int *modp, int simplify, int *did_simplify)$/;"	f
fAnsiKey	os_win32.c	/^    BOOL    fAnsiKey;$/;"	m	struct:__anon82	file:
f_abs	evalfunc.c	/^f_abs(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_acos	evalfunc.c	/^f_acos(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_add	list.c	/^f_add(typval_T *argvars, typval_T *rettv)$/;"	f
f_and	evalfunc.c	/^f_and(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_append	evalbuffer.c	/^f_append(typval_T *argvars, typval_T *rettv)$/;"	f
f_appendbufline	evalbuffer.c	/^f_appendbufline(typval_T *argvars, typval_T *rettv)$/;"	f
f_argc	arglist.c	/^f_argc(typval_T *argvars, typval_T *rettv)$/;"	f
f_argidx	arglist.c	/^f_argidx(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_arglistid	arglist.c	/^f_arglistid(typval_T *argvars, typval_T *rettv)$/;"	f
f_argtype	evalfunc.c	/^    char	f_argtype;	\/\/ for method: FEARG_ values$/;"	m	struct:__anon18	file:
f_argv	arglist.c	/^f_argv(typval_T *argvars, typval_T *rettv)$/;"	f
f_asin	evalfunc.c	/^f_asin(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_assert_beeps	testing.c	/^f_assert_beeps(typval_T *argvars, typval_T *rettv)$/;"	f
f_assert_equal	testing.c	/^f_assert_equal(typval_T *argvars, typval_T *rettv)$/;"	f
f_assert_equalfile	testing.c	/^f_assert_equalfile(typval_T *argvars, typval_T *rettv)$/;"	f
f_assert_exception	testing.c	/^f_assert_exception(typval_T *argvars, typval_T *rettv)$/;"	f
f_assert_fails	testing.c	/^f_assert_fails(typval_T *argvars, typval_T *rettv)$/;"	f
f_assert_false	testing.c	/^f_assert_false(typval_T *argvars, typval_T *rettv)$/;"	f
f_assert_inrange	testing.c	/^f_assert_inrange(typval_T *argvars, typval_T *rettv)$/;"	f
f_assert_match	testing.c	/^f_assert_match(typval_T *argvars, typval_T *rettv)$/;"	f
f_assert_notequal	testing.c	/^f_assert_notequal(typval_T *argvars, typval_T *rettv)$/;"	f
f_assert_notmatch	testing.c	/^f_assert_notmatch(typval_T *argvars, typval_T *rettv)$/;"	f
f_assert_report	testing.c	/^f_assert_report(typval_T *argvars, typval_T *rettv)$/;"	f
f_assert_true	testing.c	/^f_assert_true(typval_T *argvars, typval_T *rettv)$/;"	f
f_atan	evalfunc.c	/^f_atan(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_atan2	evalfunc.c	/^f_atan2(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_balloon_gettext	evalfunc.c	/^f_balloon_gettext(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_balloon_show	evalfunc.c	/^f_balloon_show(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f	file:
f_balloon_split	evalfunc.c	/^f_balloon_split(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f	file:
f_browse	filepath.c	/^f_browse(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_browsedir	filepath.c	/^f_browsedir(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_bufadd	evalbuffer.c	/^f_bufadd(typval_T *argvars, typval_T *rettv)$/;"	f
f_bufexists	evalbuffer.c	/^f_bufexists(typval_T *argvars, typval_T *rettv)$/;"	f
f_buflisted	evalbuffer.c	/^f_buflisted(typval_T *argvars, typval_T *rettv)$/;"	f
f_bufload	evalbuffer.c	/^f_bufload(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_bufloaded	evalbuffer.c	/^f_bufloaded(typval_T *argvars, typval_T *rettv)$/;"	f
f_bufname	evalbuffer.c	/^f_bufname(typval_T *argvars, typval_T *rettv)$/;"	f
f_bufnr	evalbuffer.c	/^f_bufnr(typval_T *argvars, typval_T *rettv)$/;"	f
f_bufwinid	evalbuffer.c	/^f_bufwinid(typval_T *argvars, typval_T *rettv)$/;"	f
f_bufwinnr	evalbuffer.c	/^f_bufwinnr(typval_T *argvars, typval_T *rettv)$/;"	f
f_byte2line	evalfunc.c	/^f_byte2line(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_byteidx	evalfunc.c	/^f_byteidx(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_byteidxcomp	evalfunc.c	/^f_byteidxcomp(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_call	evalfunc.c	/^f_call(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_ceil	evalfunc.c	/^f_ceil(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_ch_canread	channel.c	/^f_ch_canread(typval_T *argvars, typval_T *rettv)$/;"	f
f_ch_close	channel.c	/^f_ch_close(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_ch_close_in	channel.c	/^f_ch_close_in(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_ch_evalexpr	channel.c	/^f_ch_evalexpr(typval_T *argvars, typval_T *rettv)$/;"	f
f_ch_evalraw	channel.c	/^f_ch_evalraw(typval_T *argvars, typval_T *rettv)$/;"	f
f_ch_getbufnr	channel.c	/^f_ch_getbufnr(typval_T *argvars, typval_T *rettv)$/;"	f
f_ch_getjob	channel.c	/^f_ch_getjob(typval_T *argvars, typval_T *rettv)$/;"	f
f_ch_info	channel.c	/^f_ch_info(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_ch_log	channel.c	/^f_ch_log(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_ch_logfile	channel.c	/^f_ch_logfile(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_ch_open	channel.c	/^f_ch_open(typval_T *argvars, typval_T *rettv)$/;"	f
f_ch_read	channel.c	/^f_ch_read(typval_T *argvars, typval_T *rettv)$/;"	f
f_ch_readblob	channel.c	/^f_ch_readblob(typval_T *argvars, typval_T *rettv)$/;"	f
f_ch_readraw	channel.c	/^f_ch_readraw(typval_T *argvars, typval_T *rettv)$/;"	f
f_ch_sendexpr	channel.c	/^f_ch_sendexpr(typval_T *argvars, typval_T *rettv)$/;"	f
f_ch_sendraw	channel.c	/^f_ch_sendraw(typval_T *argvars, typval_T *rettv)$/;"	f
f_ch_setoptions	channel.c	/^f_ch_setoptions(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_ch_status	channel.c	/^f_ch_status(typval_T *argvars, typval_T *rettv)$/;"	f
f_changenr	evalfunc.c	/^f_changenr(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_char2nr	evalfunc.c	/^f_char2nr(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_chdir	filepath.c	/^f_chdir(typval_T *argvars, typval_T *rettv)$/;"	f
f_cindent	cindent.c	/^f_cindent(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_clearmatches	highlight.c	/^f_clearmatches(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_col	evalfunc.c	/^f_col(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_complete	insexpand.c	/^f_complete(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_complete_add	insexpand.c	/^f_complete_add(typval_T *argvars, typval_T *rettv)$/;"	f
f_complete_check	insexpand.c	/^f_complete_check(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_complete_info	insexpand.c	/^f_complete_info(typval_T *argvars, typval_T *rettv)$/;"	f
f_confirm	evalfunc.c	/^f_confirm(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f	file:
f_copy	evalfunc.c	/^f_copy(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_cos	evalfunc.c	/^f_cos(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_cosh	evalfunc.c	/^f_cosh(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_count	list.c	/^f_count(typval_T *argvars, typval_T *rettv)$/;"	f
f_cscope_connection	if_cscope.c	/^f_cscope_connection(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_cursor	evalfunc.c	/^f_cursor(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_debugbreak	evalfunc.c	/^f_debugbreak(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_deepcopy	evalfunc.c	/^f_deepcopy(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_delete	filepath.c	/^f_delete(typval_T *argvars, typval_T *rettv)$/;"	f
f_deletebufline	evalbuffer.c	/^f_deletebufline(typval_T *argvars, typval_T *rettv)$/;"	f
f_did_filetype	evalfunc.c	/^f_did_filetype(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f	file:
f_diff_filler	diff.c	/^f_diff_filler(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_diff_hlID	diff.c	/^f_diff_hlID(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_echoraw	evalfunc.c	/^f_echoraw(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f	file:
f_empty	evalfunc.c	/^f_empty(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_environ	evalfunc.c	/^f_environ(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_escape	evalfunc.c	/^f_escape(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_eval	evalfunc.c	/^f_eval(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_eventhandler	evalfunc.c	/^f_eventhandler(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_executable	filepath.c	/^f_executable(typval_T *argvars, typval_T *rettv)$/;"	f
f_execute	evalfunc.c	/^f_execute(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_exepath	filepath.c	/^f_exepath(typval_T *argvars, typval_T *rettv)$/;"	f
f_exists	evalfunc.c	/^f_exists(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_exp	evalfunc.c	/^f_exp(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_expand	evalfunc.c	/^f_expand(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_expandcmd	evalfunc.c	/^f_expandcmd(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_extend	list.c	/^f_extend(typval_T *argvars, typval_T *rettv)$/;"	f
f_feedkeys	evalfunc.c	/^f_feedkeys(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f	file:
f_filereadable	filepath.c	/^f_filereadable(typval_T *argvars, typval_T *rettv)$/;"	f
f_filewritable	filepath.c	/^f_filewritable(typval_T *argvars, typval_T *rettv)$/;"	f
f_filter	list.c	/^f_filter(typval_T *argvars, typval_T *rettv)$/;"	f
f_finddir	filepath.c	/^f_finddir(typval_T *argvars, typval_T *rettv)$/;"	f
f_findfile	filepath.c	/^f_findfile(typval_T *argvars, typval_T *rettv)$/;"	f
f_float2nr	evalfunc.c	/^f_float2nr(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_floor	evalfunc.c	/^f_floor(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_fmod	evalfunc.c	/^f_fmod(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_fnameescape	evalfunc.c	/^f_fnameescape(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_fnamemodify	filepath.c	/^f_fnamemodify(typval_T *argvars, typval_T *rettv)$/;"	f
f_foldclosed	fold.c	/^f_foldclosed(typval_T *argvars, typval_T *rettv)$/;"	f
f_foldclosedend	fold.c	/^f_foldclosedend(typval_T *argvars, typval_T *rettv)$/;"	f
f_foldlevel	fold.c	/^f_foldlevel(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_foldtext	fold.c	/^f_foldtext(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_foldtextresult	fold.c	/^f_foldtextresult(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_foreground	evalfunc.c	/^f_foreground(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f	file:
f_func	evalfunc.c	/^    void	(*f_func)(typval_T *args, typval_T *rvar);$/;"	m	struct:__anon18	file:
f_funcref	evalfunc.c	/^f_funcref(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_function	evalfunc.c	/^f_function(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_garbagecollect	evalfunc.c	/^f_garbagecollect(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f	file:
f_get	evalfunc.c	/^f_get(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_getbufinfo	evalbuffer.c	/^f_getbufinfo(typval_T *argvars, typval_T *rettv)$/;"	f
f_getbufline	evalbuffer.c	/^f_getbufline(typval_T *argvars, typval_T *rettv)$/;"	f
f_getbufvar	evalvars.c	/^f_getbufvar(typval_T *argvars, typval_T *rettv)$/;"	f
f_getchangelist	evalfunc.c	/^f_getchangelist(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_getchar	getchar.c	/^f_getchar(typval_T *argvars, typval_T *rettv)$/;"	f
f_getcharmod	getchar.c	/^f_getcharmod(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_getcharsearch	evalfunc.c	/^f_getcharsearch(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_getcmdline	ex_getln.c	/^f_getcmdline(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_getcmdpos	ex_getln.c	/^f_getcmdpos(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_getcmdtype	ex_getln.c	/^f_getcmdtype(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_getcmdwintype	evalwindow.c	/^f_getcmdwintype(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_getcompletion	cmdexpand.c	/^f_getcompletion(typval_T *argvars, typval_T *rettv)$/;"	f
f_getcurpos	evalfunc.c	/^f_getcurpos(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_getcwd	filepath.c	/^f_getcwd(typval_T *argvars, typval_T *rettv)$/;"	f
f_getenv	evalfunc.c	/^f_getenv(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_getfontname	evalfunc.c	/^f_getfontname(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_getfperm	filepath.c	/^f_getfperm(typval_T *argvars, typval_T *rettv)$/;"	f
f_getfsize	filepath.c	/^f_getfsize(typval_T *argvars, typval_T *rettv)$/;"	f
f_getftime	filepath.c	/^f_getftime(typval_T *argvars, typval_T *rettv)$/;"	f
f_getftype	filepath.c	/^f_getftype(typval_T *argvars, typval_T *rettv)$/;"	f
f_getimstatus	mbyte.c	/^f_getimstatus(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_getjumplist	evalfunc.c	/^f_getjumplist(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_getline	evalbuffer.c	/^f_getline(typval_T *argvars, typval_T *rettv)$/;"	f
f_getloclist	quickfix.c	/^f_getloclist(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_getmatches	highlight.c	/^f_getmatches(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_getmousepos	mouse.c	/^f_getmousepos(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_getpid	evalfunc.c	/^f_getpid(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_getpos	evalfunc.c	/^f_getpos(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_getqflist	quickfix.c	/^f_getqflist(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_getreg	evalfunc.c	/^f_getreg(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_getregtype	evalfunc.c	/^f_getregtype(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_gettabinfo	evalwindow.c	/^f_gettabinfo(typval_T *argvars, typval_T *rettv)$/;"	f
f_gettabvar	evalvars.c	/^f_gettabvar(typval_T *argvars, typval_T *rettv)$/;"	f
f_gettabwinvar	evalvars.c	/^f_gettabwinvar(typval_T *argvars, typval_T *rettv)$/;"	f
f_gettagstack	evalfunc.c	/^f_gettagstack(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_getwininfo	evalwindow.c	/^f_getwininfo(typval_T *argvars, typval_T *rettv)$/;"	f
f_getwinpos	evalwindow.c	/^f_getwinpos(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_getwinposx	evalwindow.c	/^f_getwinposx(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_getwinposy	evalwindow.c	/^f_getwinposy(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_getwinvar	evalvars.c	/^f_getwinvar(typval_T *argvars, typval_T *rettv)$/;"	f
f_glob	filepath.c	/^f_glob(typval_T *argvars, typval_T *rettv)$/;"	f
f_glob2regpat	filepath.c	/^f_glob2regpat(typval_T *argvars, typval_T *rettv)$/;"	f
f_globpath	filepath.c	/^f_globpath(typval_T *argvars, typval_T *rettv)$/;"	f
f_has	evalfunc.c	/^f_has(typval_T *argvars, typval_T *rettv)$/;"	f
f_has_key	dict.c	/^f_has_key(typval_T *argvars, typval_T *rettv)$/;"	f
f_haslocaldir	evalfunc.c	/^f_haslocaldir(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_hasmapto	evalfunc.c	/^f_hasmapto(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_histadd	cmdhist.c	/^f_histadd(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_histdel	cmdhist.c	/^f_histdel(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_histget	cmdhist.c	/^f_histget(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_histnr	cmdhist.c	/^f_histnr(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_hlID	evalfunc.c	/^f_hlID(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_hlexists	evalfunc.c	/^f_hlexists(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_hostname	evalfunc.c	/^f_hostname(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_iconv	evalfunc.c	/^f_iconv(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_indent	indent.c	/^f_indent(typval_T *argvars, typval_T *rettv)$/;"	f
f_index	evalfunc.c	/^f_index(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_input	evalfunc.c	/^f_input(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_inputdialog	evalfunc.c	/^f_inputdialog(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_inputlist	evalfunc.c	/^f_inputlist(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_inputrestore	evalfunc.c	/^f_inputrestore(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_inputsave	evalfunc.c	/^f_inputsave(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_inputsecret	evalfunc.c	/^f_inputsecret(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_insert	list.c	/^f_insert(typval_T *argvars, typval_T *rettv)$/;"	f
f_interrupt	evalfunc.c	/^f_interrupt(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f	file:
f_invert	evalfunc.c	/^f_invert(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_isdirectory	filepath.c	/^f_isdirectory(typval_T *argvars, typval_T *rettv)$/;"	f
f_isinf	evalfunc.c	/^f_isinf(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_islocked	evalfunc.c	/^f_islocked(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_isnan	evalfunc.c	/^f_isnan(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_items	dict.c	/^f_items(typval_T *argvars, typval_T *rettv)$/;"	f
f_job_getchannel	channel.c	/^f_job_getchannel(typval_T *argvars, typval_T *rettv)$/;"	f
f_job_info	channel.c	/^f_job_info(typval_T *argvars, typval_T *rettv)$/;"	f
f_job_setoptions	channel.c	/^f_job_setoptions(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_job_start	channel.c	/^f_job_start(typval_T *argvars, typval_T *rettv)$/;"	f
f_job_status	channel.c	/^f_job_status(typval_T *argvars, typval_T *rettv)$/;"	f
f_job_stop	channel.c	/^f_job_stop(typval_T *argvars, typval_T *rettv)$/;"	f
f_join	list.c	/^f_join(typval_T *argvars, typval_T *rettv)$/;"	f
f_js_decode	json.c	/^f_js_decode(typval_T *argvars, typval_T *rettv)$/;"	f
f_js_encode	json.c	/^f_js_encode(typval_T *argvars, typval_T *rettv)$/;"	f
f_json_decode	json.c	/^f_json_decode(typval_T *argvars, typval_T *rettv)$/;"	f
f_json_encode	json.c	/^f_json_encode(typval_T *argvars, typval_T *rettv)$/;"	f
f_keys	dict.c	/^f_keys(typval_T *argvars, typval_T *rettv)$/;"	f
f_last_buffer_nr	evalfunc.c	/^f_last_buffer_nr(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_len	evalfunc.c	/^f_len(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_libcall	evalfunc.c	/^f_libcall(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_libcallnr	evalfunc.c	/^f_libcallnr(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_line	evalfunc.c	/^f_line(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_line2byte	evalfunc.c	/^f_line2byte(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_lispindent	indent.c	/^f_lispindent(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_list2str	list.c	/^f_list2str(typval_T *argvars, typval_T *rettv)$/;"	f
f_listener_add	change.c	/^f_listener_add(typval_T *argvars, typval_T *rettv)$/;"	f
f_listener_flush	change.c	/^f_listener_flush(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_listener_remove	change.c	/^f_listener_remove(typval_T *argvars, typval_T *rettv)$/;"	f
f_localtime	time.c	/^f_localtime(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_log	evalfunc.c	/^f_log(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_log10	evalfunc.c	/^f_log10(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_luaeval	evalfunc.c	/^f_luaeval(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_map	list.c	/^f_map(typval_T *argvars, typval_T *rettv)$/;"	f
f_maparg	evalfunc.c	/^f_maparg(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_mapcheck	evalfunc.c	/^f_mapcheck(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_match	evalfunc.c	/^f_match(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_matchadd	highlight.c	/^f_matchadd(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_matchaddpos	highlight.c	/^f_matchaddpos(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_matcharg	highlight.c	/^f_matcharg(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_matchdelete	highlight.c	/^f_matchdelete(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_matchend	evalfunc.c	/^f_matchend(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_matchlist	evalfunc.c	/^f_matchlist(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_matchstr	evalfunc.c	/^f_matchstr(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_matchstrpos	evalfunc.c	/^f_matchstrpos(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_max	evalfunc.c	/^f_max(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_max_argc	evalfunc.c	/^    char	f_max_argc;	\/\/ maximal number of arguments$/;"	m	struct:__anon18	file:
f_min	evalfunc.c	/^f_min(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_min_argc	evalfunc.c	/^    char	f_min_argc;	\/\/ minimal number of arguments$/;"	m	struct:__anon18	file:
f_mkdir	filepath.c	/^f_mkdir(typval_T *argvars, typval_T *rettv)$/;"	f
f_mode	misc1.c	/^f_mode(typval_T *argvars, typval_T *rettv)$/;"	f
f_mzeval	evalfunc.c	/^f_mzeval(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_name	evalfunc.c	/^    char	*f_name;	\/\/ function name$/;"	m	struct:__anon18	file:
f_nextnonblank	evalfunc.c	/^f_nextnonblank(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_nop	if_ruby.c	/^f_nop(VALUE self UNUSED)$/;"	f	file:
f_nr2char	evalfunc.c	/^f_nr2char(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_or	evalfunc.c	/^f_or(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_p	if_ruby.c	/^f_p(int argc, VALUE *argv, VALUE self UNUSED)$/;"	f	file:
f_pathshorten	filepath.c	/^f_pathshorten(typval_T *argvars, typval_T *rettv)$/;"	f
f_perleval	evalfunc.c	/^f_perleval(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_popup_atcursor	popupwin.c	/^f_popup_atcursor(typval_T *argvars, typval_T *rettv)$/;"	f
f_popup_beval	popupwin.c	/^f_popup_beval(typval_T *argvars, typval_T *rettv)$/;"	f
f_popup_clear	popupwin.c	/^f_popup_clear(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_popup_close	popupwin.c	/^f_popup_close(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_popup_create	popupwin.c	/^f_popup_create(typval_T *argvars, typval_T *rettv)$/;"	f
f_popup_dialog	popupwin.c	/^f_popup_dialog(typval_T *argvars, typval_T *rettv)$/;"	f
f_popup_filter_menu	popupwin.c	/^f_popup_filter_menu(typval_T *argvars, typval_T *rettv)$/;"	f
f_popup_filter_yesno	popupwin.c	/^f_popup_filter_yesno(typval_T *argvars, typval_T *rettv)$/;"	f
f_popup_findinfo	popupwin.c	/^f_popup_findinfo(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_popup_findpreview	popupwin.c	/^f_popup_findpreview(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_popup_getoptions	popupwin.c	/^f_popup_getoptions(typval_T *argvars, typval_T *rettv)$/;"	f
f_popup_getpos	popupwin.c	/^f_popup_getpos(typval_T *argvars, typval_T *rettv)$/;"	f
f_popup_hide	popupwin.c	/^f_popup_hide(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_popup_locate	popupwin.c	/^f_popup_locate(typval_T *argvars, typval_T *rettv)$/;"	f
f_popup_menu	popupwin.c	/^f_popup_menu(typval_T *argvars, typval_T *rettv)$/;"	f
f_popup_move	popupwin.c	/^f_popup_move(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_popup_notification	popupwin.c	/^f_popup_notification(typval_T *argvars, typval_T *rettv)$/;"	f
f_popup_setoptions	popupwin.c	/^f_popup_setoptions(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_popup_settext	popupwin.c	/^f_popup_settext(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_popup_show	popupwin.c	/^f_popup_show(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_pow	evalfunc.c	/^f_pow(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_prevnonblank	evalfunc.c	/^f_prevnonblank(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_printf	evalfunc.c	/^f_printf(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_prompt_setcallback	channel.c	/^f_prompt_setcallback(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_prompt_setinterrupt	channel.c	/^f_prompt_setinterrupt(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_prompt_setprompt	channel.c	/^f_prompt_setprompt(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_prop_add	textprop.c	/^f_prop_add(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_prop_clear	textprop.c	/^f_prop_clear(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_prop_find	textprop.c	/^f_prop_find(typval_T *argvars, typval_T *rettv)$/;"	f
f_prop_list	textprop.c	/^f_prop_list(typval_T *argvars, typval_T *rettv)$/;"	f
f_prop_remove	textprop.c	/^f_prop_remove(typval_T *argvars, typval_T *rettv)$/;"	f
f_prop_type_add	textprop.c	/^f_prop_type_add(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_prop_type_change	textprop.c	/^f_prop_type_change(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_prop_type_delete	textprop.c	/^f_prop_type_delete(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_prop_type_get	textprop.c	/^f_prop_type_get(typval_T *argvars, typval_T *rettv)$/;"	f
f_prop_type_list	textprop.c	/^f_prop_type_list(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_pum_getpos	evalfunc.c	/^f_pum_getpos(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f	file:
f_pumvisible	evalfunc.c	/^f_pumvisible(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f	file:
f_py3eval	evalfunc.c	/^f_py3eval(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_pyeval	evalfunc.c	/^f_pyeval(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_pyxeval	evalfunc.c	/^f_pyxeval(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_rand	evalfunc.c	/^f_rand(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_range	evalfunc.c	/^f_range(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_readdir	filepath.c	/^f_readdir(typval_T *argvars, typval_T *rettv)$/;"	f
f_readfile	filepath.c	/^f_readfile(typval_T *argvars, typval_T *rettv)$/;"	f
f_reg_executing	evalfunc.c	/^f_reg_executing(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_reg_recording	evalfunc.c	/^f_reg_recording(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_reltime	time.c	/^f_reltime(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_reltimefloat	time.c	/^f_reltimefloat(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_reltimestr	time.c	/^f_reltimestr(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_remote_expr	evalfunc.c	/^f_remote_expr(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_remote_foreground	evalfunc.c	/^f_remote_foreground(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f	file:
f_remote_peek	evalfunc.c	/^f_remote_peek(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_remote_read	evalfunc.c	/^f_remote_read(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_remote_send	evalfunc.c	/^f_remote_send(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_remote_startserver	evalfunc.c	/^f_remote_startserver(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f	file:
f_remove	list.c	/^f_remove(typval_T *argvars, typval_T *rettv)$/;"	f
f_rename	evalfunc.c	/^f_rename(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_repeat	evalfunc.c	/^f_repeat(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_resolve	filepath.c	/^f_resolve(typval_T *argvars, typval_T *rettv)$/;"	f
f_rettype	evalfunc.c	/^    type_T	*f_rettype;	\/\/ return type$/;"	m	struct:__anon18	file:
f_reverse	list.c	/^f_reverse(typval_T *argvars, typval_T *rettv)$/;"	f
f_round	evalfunc.c	/^f_round(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_rubyeval	evalfunc.c	/^f_rubyeval(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_screenattr	evalfunc.c	/^f_screenattr(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_screenchar	evalfunc.c	/^f_screenchar(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_screenchars	evalfunc.c	/^f_screenchars(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_screencol	evalfunc.c	/^f_screencol(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_screenpos	move.c	/^f_screenpos(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_screenrow	evalfunc.c	/^f_screenrow(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_screenstring	evalfunc.c	/^f_screenstring(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_search	evalfunc.c	/^f_search(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_searchdecl	evalfunc.c	/^f_searchdecl(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_searchpair	evalfunc.c	/^f_searchpair(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_searchpairpos	evalfunc.c	/^f_searchpairpos(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_searchpos	evalfunc.c	/^f_searchpos(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_server2client	evalfunc.c	/^f_server2client(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_serverlist	evalfunc.c	/^f_serverlist(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_setbufline	evalbuffer.c	/^f_setbufline(typval_T *argvars, typval_T *rettv)$/;"	f
f_setbufvar	evalvars.c	/^f_setbufvar(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_setcharsearch	evalfunc.c	/^f_setcharsearch(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f	file:
f_setcmdpos	ex_getln.c	/^f_setcmdpos(typval_T *argvars, typval_T *rettv)$/;"	f
f_setenv	evalfunc.c	/^f_setenv(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f	file:
f_setfperm	evalfunc.c	/^f_setfperm(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_setline	evalbuffer.c	/^f_setline(typval_T *argvars, typval_T *rettv)$/;"	f
f_setloclist	quickfix.c	/^f_setloclist(typval_T *argvars, typval_T *rettv)$/;"	f
f_setmatches	highlight.c	/^f_setmatches(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_setpos	evalfunc.c	/^f_setpos(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_setqflist	quickfix.c	/^f_setqflist(typval_T *argvars, typval_T *rettv)$/;"	f
f_setreg	evalfunc.c	/^f_setreg(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_settabvar	evalvars.c	/^f_settabvar(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_settabwinvar	evalvars.c	/^f_settabwinvar(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_settagstack	evalfunc.c	/^f_settagstack(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_setwinvar	evalvars.c	/^f_setwinvar(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_sha256	evalfunc.c	/^f_sha256(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_shellescape	evalfunc.c	/^f_shellescape(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_shiftwidth	evalfunc.c	/^f_shiftwidth(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_sign_define	sign.c	/^f_sign_define(typval_T *argvars, typval_T *rettv)$/;"	f
f_sign_getdefined	sign.c	/^f_sign_getdefined(typval_T *argvars, typval_T *rettv)$/;"	f
f_sign_getplaced	sign.c	/^f_sign_getplaced(typval_T *argvars, typval_T *rettv)$/;"	f
f_sign_jump	sign.c	/^f_sign_jump(typval_T *argvars, typval_T *rettv)$/;"	f
f_sign_place	sign.c	/^f_sign_place(typval_T *argvars, typval_T *rettv)$/;"	f
f_sign_placelist	sign.c	/^f_sign_placelist(typval_T *argvars, typval_T *rettv)$/;"	f
f_sign_undefine	sign.c	/^f_sign_undefine(typval_T *argvars, typval_T *rettv)$/;"	f
f_sign_unplace	sign.c	/^f_sign_unplace(typval_T *argvars, typval_T *rettv)$/;"	f
f_sign_unplacelist	sign.c	/^f_sign_unplacelist(typval_T *argvars, typval_T *rettv)$/;"	f
f_simplify	findfile.c	/^f_simplify(typval_T *argvars, typval_T *rettv)$/;"	f
f_sin	evalfunc.c	/^f_sin(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_sinh	evalfunc.c	/^f_sinh(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_sort	list.c	/^f_sort(typval_T *argvars, typval_T *rettv)$/;"	f
f_sound_clear	sound.c	/^f_sound_clear(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_sound_playevent	sound.c	/^f_sound_playevent(typval_T *argvars, typval_T *rettv)$/;"	f
f_sound_playfile	sound.c	/^f_sound_playfile(typval_T *argvars, typval_T *rettv)$/;"	f
f_sound_stop	sound.c	/^f_sound_stop(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_soundfold	evalfunc.c	/^f_soundfold(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_spellbadword	evalfunc.c	/^f_spellbadword(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_spellsuggest	evalfunc.c	/^f_spellsuggest(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_split	evalfunc.c	/^f_split(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_sqrt	evalfunc.c	/^f_sqrt(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_srand	evalfunc.c	/^f_srand(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_state	misc1.c	/^f_state(typval_T *argvars, typval_T *rettv)$/;"	f
f_str2float	evalfunc.c	/^f_str2float(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_str2list	evalfunc.c	/^f_str2list(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_str2nr	evalfunc.c	/^f_str2nr(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_strcharpart	evalfunc.c	/^f_strcharpart(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_strchars	evalfunc.c	/^f_strchars(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_strdisplaywidth	evalfunc.c	/^f_strdisplaywidth(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_strftime	time.c	/^f_strftime(typval_T *argvars, typval_T *rettv)$/;"	f
f_strgetchar	evalfunc.c	/^f_strgetchar(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_stridx	evalfunc.c	/^f_stridx(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_string	evalfunc.c	/^f_string(typval_T *argvars, typval_T *rettv)$/;"	f
f_strlen	evalfunc.c	/^f_strlen(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_strpart	evalfunc.c	/^f_strpart(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_strptime	time.c	/^f_strptime(typval_T *argvars, typval_T *rettv)$/;"	f
f_strridx	evalfunc.c	/^f_strridx(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_strtrans	evalfunc.c	/^f_strtrans(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_strwidth	evalfunc.c	/^f_strwidth(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_submatch	evalfunc.c	/^f_submatch(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_substitute	evalfunc.c	/^f_substitute(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_swapinfo	evalfunc.c	/^f_swapinfo(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_swapname	evalfunc.c	/^f_swapname(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_synID	evalfunc.c	/^f_synID(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_synIDattr	evalfunc.c	/^f_synIDattr(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_synIDtrans	evalfunc.c	/^f_synIDtrans(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_synconcealed	evalfunc.c	/^f_synconcealed(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_synstack	evalfunc.c	/^f_synstack(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_system	misc1.c	/^f_system(typval_T *argvars, typval_T *rettv)$/;"	f
f_systemlist	misc1.c	/^f_systemlist(typval_T *argvars, typval_T *rettv)$/;"	f
f_tabpagebuflist	evalfunc.c	/^f_tabpagebuflist(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f	file:
f_tabpagenr	evalwindow.c	/^f_tabpagenr(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_tabpagewinnr	evalwindow.c	/^f_tabpagewinnr(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_tagfiles	evalfunc.c	/^f_tagfiles(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_taglist	evalfunc.c	/^f_taglist(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_tan	evalfunc.c	/^f_tan(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_tanh	evalfunc.c	/^f_tanh(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_tempname	filepath.c	/^f_tempname(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_term_dumpdiff	terminal.c	/^f_term_dumpdiff(typval_T *argvars, typval_T *rettv)$/;"	f
f_term_dumpload	terminal.c	/^f_term_dumpload(typval_T *argvars, typval_T *rettv)$/;"	f
f_term_dumpwrite	terminal.c	/^f_term_dumpwrite(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_term_getaltscreen	terminal.c	/^f_term_getaltscreen(typval_T *argvars, typval_T *rettv)$/;"	f
f_term_getansicolors	terminal.c	/^f_term_getansicolors(typval_T *argvars, typval_T *rettv)$/;"	f
f_term_getattr	terminal.c	/^f_term_getattr(typval_T *argvars, typval_T *rettv)$/;"	f
f_term_getcursor	terminal.c	/^f_term_getcursor(typval_T *argvars, typval_T *rettv)$/;"	f
f_term_getjob	terminal.c	/^f_term_getjob(typval_T *argvars, typval_T *rettv)$/;"	f
f_term_getline	terminal.c	/^f_term_getline(typval_T *argvars, typval_T *rettv)$/;"	f
f_term_getscrolled	terminal.c	/^f_term_getscrolled(typval_T *argvars, typval_T *rettv)$/;"	f
f_term_getsize	terminal.c	/^f_term_getsize(typval_T *argvars, typval_T *rettv)$/;"	f
f_term_getstatus	terminal.c	/^f_term_getstatus(typval_T *argvars, typval_T *rettv)$/;"	f
f_term_gettitle	terminal.c	/^f_term_gettitle(typval_T *argvars, typval_T *rettv)$/;"	f
f_term_gettty	terminal.c	/^f_term_gettty(typval_T *argvars, typval_T *rettv)$/;"	f
f_term_list	terminal.c	/^f_term_list(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_term_scrape	terminal.c	/^f_term_scrape(typval_T *argvars, typval_T *rettv)$/;"	f
f_term_sendkeys	terminal.c	/^f_term_sendkeys(typval_T *argvars, typval_T *rettv)$/;"	f
f_term_setansicolors	terminal.c	/^f_term_setansicolors(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_term_setapi	terminal.c	/^f_term_setapi(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_term_setkill	terminal.c	/^f_term_setkill(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_term_setrestore	terminal.c	/^f_term_setrestore(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_term_setsize	terminal.c	/^f_term_setsize(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_term_start	terminal.c	/^f_term_start(typval_T *argvars, typval_T *rettv)$/;"	f
f_term_wait	terminal.c	/^f_term_wait(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_test_alloc_fail	testing.c	/^f_test_alloc_fail(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_test_autochdir	testing.c	/^f_test_autochdir(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_test_feedinput	testing.c	/^f_test_feedinput(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_test_garbagecollect_now	testing.c	/^f_test_garbagecollect_now(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_test_garbagecollect_soon	testing.c	/^f_test_garbagecollect_soon(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_test_getvalue	testing.c	/^f_test_getvalue(typval_T *argvars, typval_T *rettv)$/;"	f
f_test_ignore_error	testing.c	/^f_test_ignore_error(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_test_null_blob	testing.c	/^f_test_null_blob(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_test_null_channel	testing.c	/^f_test_null_channel(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_test_null_dict	testing.c	/^f_test_null_dict(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_test_null_job	testing.c	/^f_test_null_job(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_test_null_list	testing.c	/^f_test_null_list(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_test_null_partial	testing.c	/^f_test_null_partial(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_test_null_string	testing.c	/^f_test_null_string(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_test_option_not_set	testing.c	/^f_test_option_not_set(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_test_override	testing.c	/^f_test_override(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_test_refcount	testing.c	/^f_test_refcount(typval_T *argvars, typval_T *rettv)$/;"	f
f_test_scrollbar	testing.c	/^f_test_scrollbar(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_test_setmouse	testing.c	/^f_test_setmouse(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_test_settime	testing.c	/^f_test_settime(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_test_srand_seed	evalfunc.c	/^f_test_srand_seed(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f	file:
f_test_unknown	testing.c	/^f_test_unknown(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_test_void	testing.c	/^f_test_void(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_timer_info	time.c	/^f_timer_info(typval_T *argvars, typval_T *rettv)$/;"	f
f_timer_pause	time.c	/^f_timer_pause(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_timer_start	time.c	/^f_timer_start(typval_T *argvars, typval_T *rettv)$/;"	f
f_timer_stop	time.c	/^f_timer_stop(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_timer_stopall	time.c	/^f_timer_stopall(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f
f_tolower	evalfunc.c	/^f_tolower(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_toupper	evalfunc.c	/^f_toupper(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_tr	evalfunc.c	/^f_tr(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_trim	evalfunc.c	/^f_trim(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_trunc	evalfunc.c	/^f_trunc(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_type	evalfunc.c	/^f_type(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_undofile	undo.c	/^f_undofile(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_undotree	undo.c	/^f_undotree(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_uniq	list.c	/^f_uniq(typval_T *argvars, typval_T *rettv)$/;"	f
f_values	dict.c	/^f_values(typval_T *argvars, typval_T *rettv)$/;"	f
f_virtcol	evalfunc.c	/^f_virtcol(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_visualmode	evalfunc.c	/^f_visualmode(typval_T *argvars, typval_T *rettv)$/;"	f	file:
f_wildmenumode	evalfunc.c	/^f_wildmenumode(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f	file:
f_win_execute	evalwindow.c	/^f_win_execute(typval_T *argvars, typval_T *rettv)$/;"	f
f_win_findbuf	evalwindow.c	/^f_win_findbuf(typval_T *argvars, typval_T *rettv)$/;"	f
f_win_getid	evalwindow.c	/^f_win_getid(typval_T *argvars, typval_T *rettv)$/;"	f
f_win_gettype	evalwindow.c	/^f_win_gettype(typval_T *argvars, typval_T *rettv)$/;"	f
f_win_gotoid	evalwindow.c	/^f_win_gotoid(typval_T *argvars, typval_T *rettv)$/;"	f
f_win_id2tabwin	evalwindow.c	/^f_win_id2tabwin(typval_T *argvars, typval_T *rettv)$/;"	f
f_win_id2win	evalwindow.c	/^f_win_id2win(typval_T *argvars, typval_T *rettv)$/;"	f
f_win_screenpos	evalwindow.c	/^f_win_screenpos(typval_T *argvars, typval_T *rettv)$/;"	f
f_win_splitmove	evalwindow.c	/^f_win_splitmove(typval_T *argvars, typval_T *rettv)$/;"	f
f_winbufnr	evalwindow.c	/^f_winbufnr(typval_T *argvars, typval_T *rettv)$/;"	f
f_wincol	evalwindow.c	/^f_wincol(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_windowsversion	evalfunc.c	/^f_windowsversion(typval_T *argvars UNUSED, typval_T *rettv UNUSED)$/;"	f	file:
f_winheight	evalwindow.c	/^f_winheight(typval_T *argvars, typval_T *rettv)$/;"	f
f_winlayout	evalwindow.c	/^f_winlayout(typval_T *argvars, typval_T *rettv)$/;"	f
f_winline	evalwindow.c	/^f_winline(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_winnr	evalwindow.c	/^f_winnr(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_winrestcmd	evalwindow.c	/^f_winrestcmd(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_winrestview	evalwindow.c	/^f_winrestview(typval_T *argvars, typval_T *rettv UNUSED)$/;"	f
f_winsaveview	evalwindow.c	/^f_winsaveview(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f
f_winwidth	evalwindow.c	/^f_winwidth(typval_T *argvars, typval_T *rettv)$/;"	f
f_wordcount	evalfunc.c	/^f_wordcount(typval_T *argvars UNUSED, typval_T *rettv)$/;"	f	file:
f_writefile	filepath.c	/^f_writefile(typval_T *argvars, typval_T *rettv)$/;"	f
f_xor	evalfunc.c	/^f_xor(typval_T *argvars, typval_T *rettv)$/;"	f	file:
failure_chance	regexp_nfa.c	/^failure_chance(nfa_state_T *state, int depth)$/;"	f	file:
family	gui_mac.c	/^    FMFontFamily family;$/;"	m	struct:__anon38	file:
fast_breakcheck	misc1.c	/^fast_breakcheck(void)$/;"	f
fc_copyID	structs.h	/^    int		fc_copyID;	\/\/ for garbage collection$/;"	m	struct:funccall_S
fc_funcs	structs.h	/^    garray_T	fc_funcs;	\/\/ list of ufunc_T* which keep a reference to$/;"	m	struct:funccall_S
fc_refcount	structs.h	/^    int		fc_refcount;	\/\/ number of user functions that reference this$/;"	m	struct:funccall_S
fcount	quickfix.c	/^    int		fcount;		\/\/ number of files$/;"	m	struct:__anon91	file:
fd	quickfix.c	/^    FILE	*fd;$/;"	m	struct:__anon89	file:
fdDump	os_mswin.c	/^FILE* fdDump = NULL;$/;"	v
fdDump	os_win32.c	/^FILE* fdDump = NULL;$/;"	v
fd_close	channel.c	/^fd_close(sock_T fd)$/;"	f	file:
fd_close	channel.c	54;"	d	file:
fd_di	structs.h	/^    dictitem_T	*fd_di;		\/\/ Dictionary item used$/;"	m	struct:__anon213
fd_dict	structs.h	/^    dict_T	*fd_dict;	\/\/ Dictionary used$/;"	m	struct:__anon213
fd_flags	fold.c	/^    char	fd_flags;	\/\/ see below$/;"	m	struct:__anon28	file:
fd_len	fold.c	/^    linenr_T	fd_len;		\/\/ number of lines in the fold$/;"	m	struct:__anon28	file:
fd_nested	fold.c	/^    garray_T	fd_nested;	\/\/ array of nested folds$/;"	m	struct:__anon28	file:
fd_newkey	structs.h	/^    char_u	*fd_newkey;	\/\/ new key in "dict" in allocated memory$/;"	m	struct:__anon213
fd_read	channel.c	/^fd_read(sock_T fd, char *buf, size_t len)$/;"	f	file:
fd_read	channel.c	52;"	d	file:
fd_small	fold.c	/^    char	fd_small;	\/\/ TRUE, FALSE or MAYBE: fold smaller than$/;"	m	struct:__anon28	file:
fd_top	fold.c	/^    linenr_T	fd_top;		\/\/ first line of fold; for nested fold$/;"	m	struct:__anon28	file:
fd_write	channel.c	/^fd_write(sock_T fd, char *buf, size_t len)$/;"	f	file:
fd_write	channel.c	53;"	d	file:
fdip_search_ctx	findfile.c	/^static void	*fdip_search_ctx = NULL;$/;"	v	file:
fdo_flags	option.h	/^EXTERN unsigned	fdo_flags;$/;"	v
fdtofh	memfile.c	/^fdtofh(int filedescriptor)$/;"	f	file:
features	version.c	/^static char *(features[]) =$/;"	v	file:
fex_format	ops.c	/^fex_format($/;"	f
ff	hardcopy.c	/^    int		ff;		    \/\/ seen form feed character$/;"	m	struct:__anon47	file:
ff_check_visited	findfile.c	/^ff_check_visited($/;"	f	file:
ff_clear	findfile.c	/^ff_clear(ff_search_ctx_T *search_ctx)$/;"	f	file:
ff_create_stack_element	findfile.c	/^ff_create_stack_element($/;"	f	file:
ff_expand_buffer	findfile.c	/^static char_u	*ff_expand_buffer = NULL; \/\/ used for expanding filenames$/;"	v	file:
ff_file_to_find	findfile.c	/^static char_u	*ff_file_to_find = NULL;$/;"	v	file:
ff_free_stack_element	findfile.c	/^ff_free_stack_element(ff_stack_T *stack_ptr)$/;"	f	file:
ff_free_visited_list	findfile.c	/^ff_free_visited_list(ff_visited_T *vl)$/;"	f	file:
ff_get_visited_list	findfile.c	/^ff_get_visited_list($/;"	f	file:
ff_path_in_stoplist	findfile.c	/^ff_path_in_stoplist(char_u *path, int path_len, char_u **stopdirs_v)$/;"	f	file:
ff_pop	findfile.c	/^ff_pop(ff_search_ctx_T *search_ctx)$/;"	f	file:
ff_push	findfile.c	/^ff_push(ff_search_ctx_T *search_ctx, ff_stack_T *stack_ptr)$/;"	f	file:
ff_search_ctx_T	findfile.c	/^typedef struct ff_search_ctx_T$/;"	s	file:
ff_search_ctx_T	findfile.c	/^} ff_search_ctx_T;$/;"	t	typeref:struct:ff_search_ctx_T	file:
ff_stack	findfile.c	/^typedef struct ff_stack$/;"	s	file:
ff_stack_T	findfile.c	/^} ff_stack_T;$/;"	t	typeref:struct:ff_stack	file:
ff_visited	findfile.c	/^typedef struct ff_visited$/;"	s	file:
ff_visited_T	findfile.c	/^} ff_visited_T;$/;"	t	typeref:struct:ff_visited	file:
ff_visited_list_hdr	findfile.c	/^typedef struct ff_visited_list_hdr$/;"	s	file:
ff_visited_list_hdr_T	findfile.c	/^} ff_visited_list_hdr_T;$/;"	t	typeref:struct:ff_visited_list_hdr	file:
ff_wc_equal	findfile.c	/^ff_wc_equal(char_u *s1, char_u *s2)$/;"	f	file:
ffs_filearray	findfile.c	/^    char_u		**ffs_filearray;$/;"	m	struct:ff_stack	file:
ffs_filearray_cur	findfile.c	/^    char_u		ffs_filearray_cur;   \/\/ needed for partly handled dirs$/;"	m	struct:ff_stack	file:
ffs_filearray_size	findfile.c	/^    int			ffs_filearray_size;$/;"	m	struct:ff_stack	file:
ffs_fix_path	findfile.c	/^    char_u		*ffs_fix_path;$/;"	m	struct:ff_stack	file:
ffs_level	findfile.c	/^    int			ffs_level;$/;"	m	struct:ff_stack	file:
ffs_prev	findfile.c	/^    struct ff_stack	*ffs_prev;$/;"	m	struct:ff_stack	typeref:struct:ff_stack::ff_stack	file:
ffs_stage	findfile.c	/^    int			ffs_stage;$/;"	m	struct:ff_stack	file:
ffs_star_star_empty	findfile.c	/^    int			ffs_star_star_empty;$/;"	m	struct:ff_stack	file:
ffs_wc_path	findfile.c	/^    char_u		*ffs_wc_path;$/;"	m	struct:ff_stack	file:
ffsc_dir_visited_list	findfile.c	/^     ff_visited_list_hdr_T	*ffsc_dir_visited_list;$/;"	m	struct:ff_search_ctx_T	file:
ffsc_dir_visited_lists_list	findfile.c	/^     ff_visited_list_hdr_T	*ffsc_dir_visited_lists_list;$/;"	m	struct:ff_search_ctx_T	file:
ffsc_file_to_search	findfile.c	/^     char_u			*ffsc_file_to_search;$/;"	m	struct:ff_search_ctx_T	file:
ffsc_find_what	findfile.c	/^     int			ffsc_find_what;$/;"	m	struct:ff_search_ctx_T	file:
ffsc_fix_path	findfile.c	/^     char_u			*ffsc_fix_path;$/;"	m	struct:ff_search_ctx_T	file:
ffsc_level	findfile.c	/^     int			ffsc_level;$/;"	m	struct:ff_search_ctx_T	file:
ffsc_stack_ptr	findfile.c	/^     ff_stack_T			*ffsc_stack_ptr;$/;"	m	struct:ff_search_ctx_T	file:
ffsc_start_dir	findfile.c	/^     char_u			*ffsc_start_dir;$/;"	m	struct:ff_search_ctx_T	file:
ffsc_stopdirs_v	findfile.c	/^     char_u			**ffsc_stopdirs_v;$/;"	m	struct:ff_search_ctx_T	file:
ffsc_tagfile	findfile.c	/^     int			ffsc_tagfile;$/;"	m	struct:ff_search_ctx_T	file:
ffsc_visited_list	findfile.c	/^     ff_visited_list_hdr_T	*ffsc_visited_list;$/;"	m	struct:ff_search_ctx_T	file:
ffsc_visited_lists_list	findfile.c	/^     ff_visited_list_hdr_T	*ffsc_visited_lists_list;$/;"	m	struct:ff_search_ctx_T	file:
ffsc_wc_path	findfile.c	/^     char_u			*ffsc_wc_path;$/;"	m	struct:ff_search_ctx_T	file:
ffv_dev	findfile.c	/^    dev_t		ffv_dev;	\/\/ device number$/;"	m	struct:ff_visited	file:
ffv_dev_valid	findfile.c	/^    int			ffv_dev_valid;	\/\/ ffv_dev and ffv_ino were set$/;"	m	struct:ff_visited	file:
ffv_fname	findfile.c	/^    char_u		ffv_fname[1];	\/\/ actually longer$/;"	m	struct:ff_visited	file:
ffv_ino	findfile.c	/^    ino_t		ffv_ino;	\/\/ inode number$/;"	m	struct:ff_visited	file:
ffv_next	findfile.c	/^    struct ff_visited	*ffv_next;$/;"	m	struct:ff_visited	typeref:struct:ff_visited::ff_visited	file:
ffv_wc_path	findfile.c	/^    char_u		*ffv_wc_path;$/;"	m	struct:ff_visited	file:
ffvl_filename	findfile.c	/^    char_u			*ffvl_filename;$/;"	m	struct:ff_visited_list_hdr	file:
ffvl_next	findfile.c	/^    struct ff_visited_list_hdr	*ffvl_next;$/;"	m	struct:ff_visited_list_hdr	typeref:struct:ff_visited_list_hdr::ff_visited_list_hdr	file:
ffvl_visited_list	findfile.c	/^    ff_visited_T		*ffvl_visited_list;$/;"	m	struct:ff_visited_list_hdr	file:
fg	terminal.c	/^  VTermColor		fg;$/;"	m	struct:__anon121	file:
fg_b	term.c	/^static int fg_b = 0;$/;"	v	file:
fg_color	structs.h	/^	    guicolor_T	    fg_color;	\/\/ foreground color handle$/;"	m	struct:attr_entry::__anon196::__anon199
fg_color	structs.h	/^	    short_u	    fg_color;	\/\/ foreground color number$/;"	m	struct:attr_entry::__anon196::__anon198
fg_color	structs.h	/^    long_u	fg_color;$/;"	m	struct:__anon246
fg_g	term.c	/^static int fg_g = 0;$/;"	v	file:
fg_r	term.c	/^static int fg_r = 0;$/;"	v	file:
fg_rgb	structs.h	/^	    guicolor_T	    fg_rgb;	\/\/ foreground color RGB$/;"	m	struct:attr_entry::__anon196::__anon198
fgcolor	gui.h	/^    GdkColor	*fgcolor;	    \/\/ GDK-styled foreground color$/;"	m	struct:Gui
fgcolor	gui.h	/^    GdkRGBA	*fgcolor;	    \/\/ GDK-styled foreground color$/;"	m	struct:Gui
fi_bi	eval.c	/^    int		fi_bi;		\/\/ index of blob$/;"	m	struct:__anon17	file:
fi_blob	eval.c	/^    blob_T	*fi_blob;	\/\/ blob being used$/;"	m	struct:__anon17	file:
fi_level	structs.h	/^    int		fi_level;	\/\/ level of the fold; when this is zero the$/;"	m	struct:foldinfo
fi_list	eval.c	/^    list_T	*fi_list;	\/\/ list being used$/;"	m	struct:__anon17	file:
fi_lnum	structs.h	/^    int		fi_lnum;	\/\/ line number where fold starts$/;"	m	struct:foldinfo
fi_low_level	structs.h	/^    int		fi_low_level;	\/\/ lowest fold level that starts in the same$/;"	m	struct:foldinfo
fi_lw	eval.c	/^    listwatch_T	fi_lw;		\/\/ keep an eye on the item used.$/;"	m	struct:__anon17	file:
fi_semicolon	eval.c	/^    int		fi_semicolon;	\/\/ TRUE if ending in '; var]'$/;"	m	struct:__anon17	file:
fi_varcount	eval.c	/^    int		fi_varcount;	\/\/ nr of variables in the list$/;"	m	struct:__anon17	file:
file_buffer	structs.h	/^struct file_buffer$/;"	s
file_ff_differs	change.c	/^file_ff_differs(buf_T *buf, int ignore_empty)$/;"	f
file_input	if_python.c	116;"	d	file:
file_line	hardcopy.c	/^    linenr_T	file_line;	    \/\/ line nr in the buffer$/;"	m	struct:__anon47	file:
file_name	gui_gtk.c	/^    const char *file_name;$/;"	m	struct:IconNames	file:
file_name_at_cursor	findfile.c	/^file_name_at_cursor(int options, long count, linenr_T *file_lnum)$/;"	f
file_name_in_line	findfile.c	/^file_name_in_line($/;"	f
file_owned	main.c	/^file_owned(char *fname)$/;"	f	file:
file_pat_to_reg_pat	fileio.c	/^file_pat_to_reg_pat($/;"	f
filedlg	gui.h	/^    GtkWidget	*filedlg;	    \/\/ file selection dialog$/;"	m	struct:Gui
fileformat	scriptfile.c	/^    int		fileformat;	\/\/ EOL_UNKNOWN, EOL_UNIX or EOL_DOS$/;"	m	struct:source_cookie	file:
fileinfo	buffer.c	/^fileinfo($/;"	f
filemark	structs.h	/^typedef struct filemark$/;"	s
filemess	fileio.c	/^filemess($/;"	f
filename	hardcopy.c	/^    char_u  filename[MAXPATHL + 1];$/;"	m	struct:prt_ps_resource_S	file:
filetype_detect	ex_docmd.c	/^static int filetype_detect = FALSE;$/;"	v	file:
filetype_indent	ex_docmd.c	/^static int filetype_indent = FALSE;$/;"	v	file:
filetype_plugin	ex_docmd.c	/^static int filetype_plugin = FALSE;$/;"	v	file:
filewritable	misc2.c	/^filewritable(char_u *fname)$/;"	f
fill	move.c	/^    int		    fill;	\/\/ filler lines$/;"	m	struct:__anon73	file:
fill_assert_error	testing.c	/^fill_assert_error($/;"	f	file:
fill_breakat_flags	option.c	/^fill_breakat_flags(void)$/;"	f
fill_culopt_flags	option.c	/^fill_culopt_flags(char_u *val, win_T *wp)$/;"	f
fill_diff	globals.h	/^EXTERN int	fill_diff INIT(= '-');$/;"	v
fill_fold	globals.h	/^EXTERN int	fill_fold INIT(= '-');$/;"	v
fill_foldcolumn	screen.c	/^fill_foldcolumn($/;"	f
fill_from_cookie	json_test.c	/^fill_from_cookie(js_read_T *reader)$/;"	f	file:
fill_input_buf	ui.c	/^fill_input_buf(int exit_on_error UNUSED)$/;"	f
fill_lists	gui_xmdlg.c	/^fill_lists(enum ListSpecifier fix, SharedFontSelData *data)$/;"	f	file:
fill_mouse_coord	gui.c	/^fill_mouse_coord(char_u *p, int col, int row)$/;"	f	file:
fill_numbuflen	json.c	/^fill_numbuflen(js_read_T *reader)$/;"	f	file:
fill_rect	gui_w32.c	/^fill_rect($/;"	f	file:
fill_stl	globals.h	/^EXTERN int	fill_stl INIT(= ' ');$/;"	v
fill_stlnc	globals.h	/^EXTERN int	fill_stlnc INIT(= ' ');$/;"	v
fill_submatch_list	regexp.c	/^fill_submatch_list(int argc UNUSED, typval_T *argv, int argskip, int argcount)$/;"	f	file:
fill_vert	globals.h	/^EXTERN int	fill_vert INIT(= ' ');$/;"	v
fillchar_status	screen.c	/^fillchar_status(int *attr, win_T *wp)$/;"	f
fillchar_vsep	screen.c	/^fillchar_vsep(int *attr)$/;"	f
filter_force	structs.h	/^    int		filter_force;		\/\/ set for :filter!$/;"	m	struct:__anon191
filter_handle_drag	popupwin.c	/^filter_handle_drag(win_T *wp, int c, typval_T *rettv)$/;"	f	file:
filter_map	list.c	/^filter_map(typval_T *argvars, typval_T *rettv, int map)$/;"	f	file:
filter_map_one	list.c	/^filter_map_one(typval_T *tv, typval_T *expr, int map, int *remp)$/;"	f	file:
filter_regmatch	structs.h	/^    regmatch_T	filter_regmatch;	\/\/ set by :filter \/pat\/$/;"	m	struct:__anon191
filter_uri_list	gui_gtk_x11.c	/^filter_uri_list(char_u **outlist, int max, char_u *src)$/;"	f	file:
final	arabic.c	/^    unsigned final;$/;"	m	struct:achar	file:
find	gui_gtk.c	/^    GtkWidget *find;	\/\/ 'Find Next' action button$/;"	m	struct:_SharedFindReplace	file:
find	gui_motif.c	/^    Widget find;	\/\/ 'Find Next' action button$/;"	m	struct:_SharedFindReplace	file:
findServer	os_mswin.c	/^findServer(char_u *name)$/;"	f	file:
find_achar	arabic.c	/^find_achar(int c)$/;"	f	file:
find_bat_exe	dosinst.c	/^find_bat_exe(int check_bat_only)$/;"	f	file:
find_buffer	evalbuffer.c	/^find_buffer(typval_T *avar)$/;"	f
find_builtin_term	term.c	/^find_builtin_term(char_u *term)$/;"	f	file:
find_cmdline_var	ex_docmd.c	/^find_cmdline_var(char_u *src, int *usedlen)$/;"	f
find_command	normal.c	/^find_command(int cmdchar)$/;"	f	file:
find_decl	normal.c	/^find_decl($/;"	f
find_directory_in_path	findfile.c	/^find_directory_in_path($/;"	f
find_end_event	autocmd.c	/^find_end_event($/;"	f	file:
find_end_of_word	mouse.c	/^find_end_of_word(pos_T *pos)$/;"	f	file:
find_endpos	syntax.c	/^find_endpos($/;"	f	file:
find_ex_command	ex_docmd.c	/^find_ex_command($/;"	f
find_executable_arg	if_tcl.c	/^static char *find_executable_arg = NULL;$/;"	v	file:
find_exported	vim9script.c	/^find_exported($/;"	f
find_extra	tag.c	/^find_extra(char_u **pp)$/;"	f	file:
find_file_in_path	findfile.c	/^find_file_in_path($/;"	f
find_file_in_path_option	findfile.c	/^find_file_in_path_option($/;"	f
find_file_name_in_path	findfile.c	/^find_file_name_in_path($/;"	f
find_first_blank	search.c	/^find_first_blank(pos_T *posp)$/;"	f	file:
find_first_tcap	term.c	/^find_first_tcap($/;"	f	file:
find_func	userfunc.c	/^find_func(char_u *name, cctx_T *cctx)$/;"	f
find_func_even_dead	userfunc.c	/^find_func_even_dead(char_u *name, cctx_T *cctx)$/;"	f	file:
find_func_with_sid	userfunc.c	/^find_func_with_sid(char_u *name, int sid)$/;"	f	file:
find_help_tags	ex_cmds.c	/^find_help_tags($/;"	f
find_hi_in_scoped_ht	userfunc.c	/^find_hi_in_scoped_ht(char_u *name, hashtab_T **pht)$/;"	f
find_ident_at_pos	normal.c	/^find_ident_at_pos($/;"	f
find_ident_under_cursor	normal.c	/^find_ident_under_cursor(char_u **text, int find_type)$/;"	f
find_imported	vim9compile.c	/^find_imported(char_u *name, size_t len, cctx_T *cctx)$/;"	f
find_imported_module_by_funcname	os_win32.c	/^find_imported_module_by_funcname(HINSTANCE hInst, const char *funcname)$/;"	f
find_internal_func	evalfunc.c	/^find_internal_func(char_u *name)$/;"	f
find_is_eval_item	normal.c	/^find_is_eval_item($/;"	f	file:
find_keepcap_word	spellsuggest.c	/^find_keepcap_word(slang_T *slang, char_u *fword, char_u *kword)$/;"	f	file:
find_key_option	option.c	/^find_key_option(char_u *arg_arg, int has_lt)$/;"	f	file:
find_key_press_event	gui_gtk.c	/^find_key_press_event($/;"	f	file:
find_last_paren	cindent.c	/^find_last_paren(char_u *l, int start, int end)$/;"	f	file:
find_line_comment	cindent.c	/^find_line_comment(void) \/\/ XXX$/;"	f	file:
find_line_end	insexpand.c	/^find_line_end(char_u *ptr)$/;"	f	file:
find_locales	ex_cmds2.c	/^find_locales(void)$/;"	f	file:
find_match	cindent.c	/^find_match(int lookfor, linenr_T ourscope)$/;"	f	file:
find_match_char	cindent.c	/^find_match_char(int c, int ind_maxparen)	\/\/ XXX$/;"	f	file:
find_match_paren	cindent.c	/^find_match_paren(int ind_maxparen)	\/\/ XXX$/;"	f	file:
find_match_paren_after_brace	cindent.c	/^find_match_paren_after_brace (int ind_maxparen)	    \/\/ XXX$/;"	f	file:
find_match_text	regexp_nfa.c	/^find_match_text(colnr_T startcol, int regstart, char_u *match_text)$/;"	f	file:
find_module	if_py_both.h	/^find_module(char *fullname, char *tail, PyObject *new_path)$/;"	f
find_mps_values	search.c	/^find_mps_values($/;"	f	file:
find_name_end	eval.c	/^find_name_end($/;"	f
find_next_popup	popupwin.c	/^find_next_popup(int lowest, int handled_flag)$/;"	f
find_next_quote	search.c	/^find_next_quote($/;"	f	file:
find_nextcmd	ex_docmd.c	/^find_nextcmd(char_u *p)$/;"	f
find_option_end	eval.c	/^find_option_end(char_u **arg, int *opt_flags)$/;"	f
find_pattern_in_path	search.c	/^find_pattern_in_path($/;"	f
find_pipe	ex_cmds.c	/^find_pipe(char_u *cmd)$/;"	f	file:
find_popup_win	popupwin.c	/^find_popup_win(int id)$/;"	f	file:
find_prefix	spell.c	/^find_prefix(matchinf_T *mip, int mode)$/;"	f	file:
find_prev_quote	search.c	/^find_prev_quote($/;"	f	file:
find_previous_pathsep	findfile.c	/^find_previous_pathsep(char_u *path, char_u **psep)$/;"	f	file:
find_prop	textprop.c	/^find_prop(char_u *name, buf_T *buf)$/;"	f	file:
find_prop_hi	textprop.c	/^find_prop_hi(char_u *name, buf_T *buf)$/;"	f	file:
find_prop_type_id	textprop.c	/^find_prop_type_id(char_u *name, buf_T *buf)$/;"	f
find_rawstring_end	search.c	/^find_rawstring_end(char_u *linep, pos_T *startpos, pos_T *endpos)$/;"	f	file:
find_region	spell.c	/^find_region(char_u *rp, char_u *region)$/;"	f	file:
find_replace_callback	gui_motif.c	/^find_replace_callback($/;"	f	file:
find_replace_cb	gui_gtk.c	/^find_replace_cb(GtkWidget *widget UNUSED, gpointer data)$/;"	f	file:
find_replace_destroy_callback	gui_motif.c	/^find_replace_destroy_callback($/;"	f	file:
find_replace_dialog_create	gui_gtk.c	/^find_replace_dialog_create(char_u *arg, int do_replace)$/;"	f	file:
find_replace_dialog_create	gui_motif.c	/^find_replace_dialog_create(char_u *arg, int do_replace)$/;"	f	file:
find_replace_dismiss_callback	gui_motif.c	/^find_replace_dismiss_callback($/;"	f	file:
find_replace_keypress	gui_motif.c	/^find_replace_keypress($/;"	f	file:
find_sign_by_typenr	sign.c	/^find_sign_by_typenr(int typenr)$/;"	f	file:
find_some_match	evalfunc.c	/^find_some_match(typval_T *argvars, typval_T *rettv, matchtype_T type)$/;"	f	file:
find_special_key	misc2.c	/^find_special_key($/;"	f
find_special_key_in_table	misc2.c	/^find_special_key_in_table(int c)$/;"	f
find_start_brace	cindent.c	/^find_start_brace(void)	    \/\/ XXX$/;"	f	file:
find_start_comment	cindent.c	/^find_start_comment(int ind_maxcomment)	\/\/ XXX$/;"	f
find_start_of_word	mouse.c	/^find_start_of_word(pos_T *pos)$/;"	f	file:
find_start_rawstring	cindent.c	/^find_start_rawstring(int ind_maxcomment)	\/\/ XXX$/;"	f	file:
find_tabpage	window.c	/^find_tabpage(int n)$/;"	f
find_tabwin	evalwindow.c	/^find_tabwin($/;"	f
find_tagfunc_tags	tag.c	/^find_tagfunc_tags($/;"	f	file:
find_tags	tag.c	/^find_tags($/;"	f
find_term_bykeys	term.c	/^find_term_bykeys(char_u *src)$/;"	f	file:
find_termcode	term.c	/^find_termcode(char_u *name)$/;"	f
find_timer	time.c	/^find_timer(long id)$/;"	f	file:
find_type_by_id	textprop.c	/^find_type_by_id(hashtab_T *ht, int id)$/;"	f	file:
find_ucmd	usercmd.c	/^find_ucmd($/;"	f
find_var	evalvars.c	/^find_var(char_u *name, hashtab_T **htp, int no_autoload)$/;"	f
find_var_ht	evalvars.c	/^find_var_ht(char_u *name, char_u **varname)$/;"	f
find_var_in_ht	evalvars.c	/^find_var_in_ht($/;"	f
find_var_in_scoped_ht	userfunc.c	/^find_var_in_scoped_ht(char_u *name, int no_autoload)$/;"	f
find_vim_var	evalvars.c	/^find_vim_var(char_u *name)$/;"	f
find_viminfo_parameter	viminfo.c	/^find_viminfo_parameter(int type)$/;"	f	file:
find_visible_prop	textprop.c	/^find_visible_prop(win_T *wp, int type_id, int id, textprop_T *prop,$/;"	f
find_widgets	gui_gtk.c	/^static SharedFindReplace find_widgets = {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL};$/;"	v	file:
find_widgets	gui_motif.c	/^static SharedFindReplace find_widgets = {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL};$/;"	v	file:
find_win_by_nr	evalwindow.c	/^find_win_by_nr($/;"	f
find_win_by_nr_or_id	evalwindow.c	/^find_win_by_nr_or_id(typval_T *vp)$/;"	f
find_win_for_buf	evalbuffer.c	/^find_win_for_buf($/;"	f	file:
find_win_for_curbuf	evalbuffer.c	/^find_win_for_curbuf(void)$/;"	f	file:
find_wininfo	buffer.c	/^find_wininfo($/;"	f	file:
find_wl_entry	fold.c	/^find_wl_entry(win_T *win, linenr_T lnum)$/;"	f
find_word	spell.c	/^find_word(matchinf_T *mip, int mode)$/;"	f	file:
find_word_end	insexpand.c	/^find_word_end(char_u *ptr)$/;"	f
find_word_start	insexpand.c	/^find_word_start(char_u *ptr)$/;"	f
find_word_under_cursor	beval.c	/^find_word_under_cursor($/;"	f
findenv	misc2.c	/^findenv(char *name)$/;"	f	file:
findfilendir	filepath.c	/^findfilendir($/;"	f	file:
findmatch	search.c	/^findmatch(oparg_T *oap, int initc)$/;"	f
findmatchlimit	search.c	/^findmatchlimit($/;"	f
findoldfile	dosinst.c	/^findoldfile(char **destination)$/;"	f	file:
findoption	option.c	/^findoption(char_u *arg)$/;"	f
findpar	search.c	/^findpar($/;"	f
findsent	search.c	/^findsent(int dir, long count)$/;"	f
findsent_forward	search.c	/^findsent_forward($/;"	f	file:
findswapname	memline.c	/^findswapname($/;"	f	file:
finish_exception	ex_eval.c	/^finish_exception(except_T *excp)$/;"	f	file:
finish_incsearch_highlighting	ex_getln.c	/^finish_incsearch_highlighting($/;"	f	file:
finish_op	globals.h	/^EXTERN int	finish_op INIT(= FALSE);\/\/ TRUE while an operator is pending$/;"	v
finish_viminfo_history	viminfo.c	/^finish_viminfo_history(vir_T *virp)$/;"	f	file:
finish_viminfo_marks	viminfo.c	/^finish_viminfo_marks(void)$/;"	f	file:
finish_viminfo_registers	viminfo.c	/^finish_viminfo_registers(void)$/;"	f	file:
finish_write_reg	register.c	/^finish_write_reg($/;"	f	file:
finished	scriptfile.c	/^    int		finished;	\/\/ ":finish" used$/;"	m	struct:source_cookie	file:
fireChanges	netbeans.c	/^    unsigned int	 fireChanges:1;$/;"	m	struct:nbbuf_struct	file:
first	mbyte.c	/^    long first;$/;"	m	struct:interval	file:
first_abbr	map.c	/^static mapblock_T	*first_abbr = NULL; \/\/ first entry in abbrlist$/;"	v	file:
first_autopat	autocmd.c	/^static AutoPat *first_autopat[NUM_EVENTS] =$/;"	v	file:
first_callback	sound.c	/^static soundcb_T    *first_callback = NULL;$/;"	v	file:
first_channel	channel.c	/^static channel_T *first_channel = NULL;$/;"	v	file:
first_dict	dict.c	/^static dict_T		*first_dict = NULL;$/;"	v	file:
first_job	channel.c	/^static job_T *first_job = NULL;$/;"	v	file:
first_lang	spell.h	/^SPELL_EXTERN slang_T	*first_lang SPELL_INIT(= NULL);$/;"	v
first_list	list.c	/^static list_T		*first_list = NULL;	\/\/ list of all lists$/;"	v	file:
first_lnum	structs.h	/^    linenr_T	first_lnum; \/\/ first lnum to search for multi-line pat$/;"	m	struct:__anon240
first_msg_hist	message.c	/^static struct msg_hist *first_msg_hist = NULL;$/;"	v	typeref:struct:msg_hist	file:
first_popupwin	globals.h	/^EXTERN win_T    *first_popupwin;		\/\/ first global popup window$/;"	v
first_sign	sign.c	/^static sign_T	*first_sign = NULL;$/;"	v	file:
first_submatch	search.c	/^first_submatch(regmmatch_T *rp)$/;"	f	file:
first_tabpage	globals.h	/^EXTERN tabpage_T    *first_tabpage;$/;"	v
first_term	terminal.c	/^static term_T *first_term = NULL;$/;"	v	file:
first_timer	time.c	/^static timer_T	*first_timer = NULL;$/;"	v	file:
firstbuf	globals.h	/^EXTERN buf_T	*firstbuf INIT(= NULL);	\/\/ first buffer$/;"	v
firstchar	os_vms.c	/^    unsigned char  firstchar;$/;"	m	struct:typeahead_st	file:
firstline	structs.h	/^    linenr_T	firstline;	\/\/ first line of range$/;"	m	struct:__anon223
firstwin	globals.h	/^EXTERN win_T	*firstwin;		\/\/ first window$/;"	v
fix_arg_enc	os_win32.c	/^fix_arg_enc(void)$/;"	f
fix_fname	buffer.c	/^fix_fname(char_u  *fname)$/;"	f
fix_help_buffer	ex_cmds.c	/^fix_help_buffer(void)$/;"	f
fix_indent	indent.c	/^fix_indent(void)$/;"	f
fix_input_buffer	getchar.c	/^fix_input_buffer(char_u *buf, int len)$/;"	f
fixthisline	indent.c	/^fixthisline(int (*get_the_indent)(void))$/;"	f
fixvar	structs.h	/^    } fixvar[FIXVAR_CNT];$/;"	m	struct:funccall_S	typeref:struct:funccall_S::__anon212
flag	syntax.c	/^    int		flag;$/;"	m	struct:name_list	file:
flag_in_afflist	spellfile.c	/^flag_in_afflist(int flagtype, char_u *afflist, unsigned flag)$/;"	f	file:
flags	ex_cmds.h	/^    int		flags;		\/\/ extra flags after count: EXFLAG_$/;"	m	struct:exarg
flags	gui_gtk_x11.c	/^    unsigned int    flags;$/;"	m	struct:__anon37	file:
flags	if_cscope.h	/^    char *	    flags;	\/\/ additional cscope flags\/options (e.g, -p2)$/;"	m	struct:csi
flags	optiondefs.h	/^    long_u	flags;		\/\/ see below$/;"	m	struct:vimoption
flags	quickfix.c	/^    char_u	    flags;	\/\/ additional flags given in prefix$/;"	m	struct:efm_S	file:
flags	quickfix.c	/^    int		flags;		\/\/ search modifier$/;"	m	struct:__anon91	file:
flags	structs.h	/^    int		flags;$/;"	m	struct:keyentry
flags	syntax.c	/^    int		flags;		\/\/ flags for contained and transparent$/;"	m	struct:__anon115	file:
fline_T	fold.c	/^} fline_T;$/;"	t	typeref:struct:__anon29	file:
floatZero	gui_at_sb.c	/^static float floatZero = 0.0;$/;"	v	file:
float_T	structs.h	/^typedef double	float_T;$/;"	t
flush_buffers	getchar.c	/^flush_buffers(flush_buffers_T flush_typeahead)$/;"	f
flush_buffers_T	vim.h	/^} flush_buffers_T;$/;"	t	typeref:enum:__anon282
fm_getname	mark.c	/^fm_getname(fmark_T *fmark, int lead_len)$/;"	f
fmark	structs.h	/^    fmark_T	fmark;		\/\/ cursor position BEFORE ":tag"$/;"	m	struct:taggy
fmark	structs.h	/^    fmark_T	fmark;$/;"	m	struct:xfilemark
fmark_T	structs.h	/^} fmark_T;$/;"	t	typeref:struct:filemark
fmarks_check_names	mark.c	/^fmarks_check_names(buf_T *buf)$/;"	f
fmarks_check_one	mark.c	/^fmarks_check_one(xfmark_T *fm, char_u *name, buf_T *buf)$/;"	f	file:
fmt_012p	message_test.c	/^char *fmt_012p = "%012p";$/;"	v
fmt_06b	message_test.c	/^char *fmt_06b  = "%06b";$/;"	v
fmt_5S	message_test.c	/^char *fmt_5S   = "%5S";$/;"	v
fmt_check_par	ops.c	/^fmt_check_par($/;"	f	file:
fmt_pat	quickfix.c	/^} fmt_pat[FMT_PATTERNS] =$/;"	v	typeref:struct:fmtpattern	file:
fmt_start	quickfix.c	/^static efm_T	*fmt_start = NULL; \/\/ cached across qf_parse_line() calls$/;"	v	file:
fmtpattern	quickfix.c	/^static struct fmtpattern$/;"	s	file:
fn	gui_xmdlg.c	/^fn(SharedFontSelData *data, int i)$/;"	f	file:
fname	autocmd.c	/^    char_u	*fname;		\/\/ fname to match with$/;"	m	struct:AutoPatCmd_S	file:
fname	if_cscope.h	/^    char *	    fname;	\/\/ cscope db name$/;"	m	struct:csi
fname	scriptfile.c	/^    char_u	*fname;		\/\/ name of sourced file$/;"	m	struct:source_cookie	file:
fname	structs.h	/^    char_u	*fname;			\/\/ first file to edit$/;"	m	struct:__anon252
fname	structs.h	/^    char_u	*fname;		\/\/ file name, used when fnum == 0$/;"	m	struct:xfilemark
fname	tag.c	/^    char_u	*fname;		\/\/ first char of file name$/;"	m	struct:tag_pointers	file:
fname2fnum	mark.c	/^fname2fnum(xfmark_T *fm)$/;"	f	file:
fname_case	os_amiga.c	/^fname_case($/;"	f
fname_case	os_unix.c	/^fname_case($/;"	f
fname_case	os_win32.c	/^fname_case($/;"	f
fname_end	tag.c	/^    char_u	*fname_end;	\/\/ char after file name$/;"	m	struct:tag_pointers	file:
fname_expand	buffer.c	/^fname_expand($/;"	f
fname_match	buffer.c	/^fname_match($/;"	f	file:
fname_trans_sid	userfunc.c	/^fname_trans_sid(char_u *name, char_u *fname_buf, char_u **tofree, int *error)$/;"	f
fnamecmp	vim.h	1714;"	d
fnamecmp_ino	memline.c	/^fnamecmp_ino($/;"	f	file:
fnamencmp	vim.h	1715;"	d
fnames	quickfix.c	/^    char_u	**fnames;	\/\/ list of files to search$/;"	m	struct:__anon91	file:
fnum	structs.h	/^    int		fnum;		\/\/ file number$/;"	m	struct:filemark
fnumber	vim9.h	/^	float_T		    fnumber;$/;"	m	union:__anon276::__anon277
focus_in_event	gui_gtk_x11.c	/^focus_in_event(GtkWidget *widget,$/;"	f	file:
focus_out_event	gui_gtk_x11.c	/^focus_out_event(GtkWidget *widget UNUSED,$/;"	f	file:
foldAddMarker	fold.c	/^foldAddMarker(linenr_T lnum, char_u *marker, int markerlen)$/;"	f	file:
foldAdjustCursor	fold.c	/^foldAdjustCursor(void)$/;"	f
foldAdjustVisual	fold.c	/^foldAdjustVisual(void)$/;"	f
foldCase	mbyte.c	/^static convertStruct foldCase[] =$/;"	v	file:
foldCheckClose	fold.c	/^foldCheckClose(void)$/;"	f
foldCreate	fold.c	/^foldCreate(linenr_T start, linenr_T end)$/;"	f
foldCreateMarkers	fold.c	/^foldCreateMarkers(linenr_T start, linenr_T end)$/;"	f	file:
foldDelMarker	fold.c	/^foldDelMarker(linenr_T lnum, char_u *marker, int markerlen)$/;"	f	file:
foldFind	fold.c	/^foldFind(garray_T *gap, linenr_T lnum, fold_T **fpp)$/;"	f	file:
foldInitWin	fold.c	/^foldInitWin(win_T *new_win)$/;"	f
foldInsert	fold.c	/^foldInsert(garray_T *gap, int i)$/;"	f	file:
foldLevel	fold.c	/^foldLevel(linenr_T lnum)$/;"	f	file:
foldLevelWin	fold.c	/^foldLevelWin(win_T *wp, linenr_T lnum)$/;"	f	file:
foldManualAllowed	fold.c	/^foldManualAllowed(int create)$/;"	f
foldMarkAdjust	fold.c	/^foldMarkAdjust($/;"	f
foldMarkAdjustRecurse	fold.c	/^foldMarkAdjustRecurse($/;"	f	file:
foldMerge	fold.c	/^foldMerge(fold_T *fp1, garray_T *gap, fold_T *fp2)$/;"	f	file:
foldMoveRange	fold.c	/^foldMoveRange(garray_T *gap, linenr_T line1, linenr_T line2, linenr_T dest)$/;"	f
foldMoveTo	fold.c	/^foldMoveTo($/;"	f
foldOpenCursor	fold.c	/^foldOpenCursor(void)$/;"	f
foldOpenNested	fold.c	/^foldOpenNested(fold_T *fpr)$/;"	f	file:
foldRemove	fold.c	/^foldRemove(garray_T *gap, linenr_T top, linenr_T bot)$/;"	f	file:
foldReverseOrder	fold.c	/^foldReverseOrder(garray_T *gap, linenr_T start_arg, linenr_T end_arg)$/;"	f	file:
foldSplit	fold.c	/^foldSplit($/;"	f	file:
foldUpdate	fold.c	/^foldUpdate(win_T *wp, linenr_T top, linenr_T bot)$/;"	f
foldUpdateAll	fold.c	/^foldUpdateAll(win_T *win)$/;"	f
foldUpdateIEMS	fold.c	/^foldUpdateIEMS(win_T *wp, linenr_T top, linenr_T bot)$/;"	f	file:
foldUpdateIEMSRecurse	fold.c	/^foldUpdateIEMSRecurse($/;"	f	file:
fold_T	fold.c	/^} fold_T;$/;"	t	typeref:struct:__anon28	file:
fold_changed	fold.c	/^static int fold_changed;$/;"	v	file:
fold_end	fold.c	3038;"	d	file:
fold_end	fold.c	3155;"	d	file:
fold_index	fold.c	3040;"	d	file:
fold_index	fold.c	3157;"	d	file:
fold_line	drawscreen.c	/^fold_line($/;"	f	file:
fold_more	spell.c	/^fold_more(matchinf_T *mip)$/;"	f	file:
foldclosed_both	fold.c	/^foldclosed_both($/;"	f	file:
foldedCount	fold.c	/^foldedCount(win_T *win, linenr_T lnum, foldinfo_T *infop)$/;"	f
foldendmarker	fold.c	/^static char_u *foldendmarker;$/;"	v	file:
foldendmarkerlen	fold.c	/^static int foldendmarkerlen;$/;"	v	file:
foldinfo	structs.h	/^typedef struct foldinfo$/;"	s
foldinfo_T	structs.h	/^} foldinfo_T;$/;"	t	typeref:struct:foldinfo
foldlevelDiff	fold.c	/^foldlevelDiff(fline_T *flp)$/;"	f	file:
foldlevelExpr	fold.c	/^foldlevelExpr(fline_T *flp)$/;"	f	file:
foldlevelIndent	fold.c	/^foldlevelIndent(fline_T *flp)$/;"	f	file:
foldlevelMarker	fold.c	/^foldlevelMarker(fline_T *flp)$/;"	f	file:
foldlevelSyntax	fold.c	/^foldlevelSyntax(fline_T *flp)$/;"	f	file:
foldmethodIsDiff	fold.c	/^foldmethodIsDiff(win_T *wp)$/;"	f
foldmethodIsExpr	fold.c	/^foldmethodIsExpr(win_T *wp)$/;"	f
foldmethodIsIndent	fold.c	/^foldmethodIsIndent(win_T *wp)$/;"	f
foldmethodIsManual	fold.c	/^foldmethodIsManual(win_T *wp)$/;"	f
foldmethodIsMarker	fold.c	/^foldmethodIsMarker(win_T *wp)$/;"	f
foldmethodIsSyntax	fold.c	/^foldmethodIsSyntax(win_T *wp)$/;"	f
foldstartmarkerlen	fold.c	/^static int foldstartmarkerlen;$/;"	v	file:
foldtext_cleanup	fold.c	/^foldtext_cleanup(char_u *str)$/;"	f	file:
font	structs.h	/^	    GuiFont	    font;	\/\/ font handle$/;"	m	struct:attr_entry::__anon196::__anon199
font_argument	globals.h	/^EXTERN char	*font_argument INIT(= NULL);$/;"	v
font_can_bold	gui.h	/^    int		font_can_bold;	    \/\/ Whether norm_font supports bold weight.$/;"	m	struct:Gui
font_enumproc	os_mswin.c	/^font_enumproc($/;"	f	file:
font_filter	gui_gtk_x11.c	/^font_filter(const PangoFontFamily *family,$/;"	f	file:
font_name	gui_xmdlg.c	/^    char	*font_name;	\/\/ current font name$/;"	m	struct:_SharedFontSelData	file:
font_name2handle	highlight.c	/^font_name2handle(char_u *name)$/;"	f	file:
fontname	gui_at_fs.c	/^    char *fontname;$/;"	m	struct:__anon34	file:
fontset	gui.h	/^    GuiFontset	fontset;	    \/\/ set of fonts for multi-byte chars$/;"	m	struct:Gui
fontset	structs.h	/^	    GuiFontset	    fontset;	\/\/ fontset handle$/;"	m	struct:attr_entry::__anon196::__anon199
fontset_ascent	gui_x11.c	/^fontset_ascent(XFontSet fs)$/;"	f	file:
fontset_height	gui_x11.c	/^fontset_height($/;"	f
fontset_height2	gui_x11.c	/^fontset_height2(XFontSet fs)$/;"	f
fontset_name2handle	highlight.c	/^fontset_name2handle(char_u *name, int fixed_width)$/;"	f	file:
fontset_width	gui_x11.c	/^fontset_width(XFontSet fs)$/;"	f	file:
footer	gui_motif.c	/^static Widget footer;$/;"	v	file:
footer_height	gui.h	/^    int		footer_height;	    \/\/ height of the message footer$/;"	m	struct:Gui
fopen_noinh_readbin	scriptfile.c	/^fopen_noinh_readbin(char *filename)$/;"	f	file:
for_end	vim9.h	/^    int	    for_end;	    \/\/ position to jump to after done$/;"	m	struct:__anon267
for_idx	vim9.h	/^    int	    for_idx;	    \/\/ loop variable index$/;"	m	struct:__anon267
force_abort	ex_docmd.c	/^    int		force_abort;$/;"	m	struct:dbg_stuff	file:
force_abort	globals.h	/^EXTERN int force_abort INIT(= FALSE);$/;"	v
force_bin	ex_cmds.h	/^    int		force_bin;	\/\/ 0, FORCE_BIN or FORCE_NOBIN$/;"	m	struct:exarg
force_enc	ex_cmds.h	/^    int		force_enc;	\/\/ ++enc= argument (index in cmd[])$/;"	m	struct:exarg
force_ff	ex_cmds.h	/^    int		force_ff;	\/\/ ++ff= argument (first char of argument)$/;"	m	struct:exarg
force_menu_update	globals.h	/^EXTERN int force_menu_update INIT(= FALSE);$/;"	v
forceit	ex_cmds.h	/^    int		forceit;	\/\/ TRUE if ! present$/;"	m	struct:exarg
foreground	gui_at_sb.h	/^    Pixel	  foreground;	\/\/ thumb foreground color$/;"	m	struct:__anon143
foreground_argument	globals.h	/^EXTERN char	*foreground_argument INIT(= NULL);$/;"	v
forinfo_T	eval.c	/^} forinfo_T;$/;"	t	typeref:struct:__anon17	file:
forloop	vim9.h	/^	forloop_T	    forloop;$/;"	m	union:__anon276::__anon277
forloop_T	vim9.h	/^} forloop_T;$/;"	t	typeref:struct:__anon267
form_configure_event	gui_gtk_x11.c	/^form_configure_event(GtkWidget *widget UNUSED,$/;"	f	file:
format	vim.h	/^    int_u	format;		\/\/ Vim's own special clipboard format$/;"	m	struct:__anon279
format_lines	ops.c	/^format_lines($/;"	f
format_raw	vim.h	/^    int_u	format_raw;	\/\/ Vim's raw text clipboard format$/;"	m	struct:__anon279
formwin	gui.h	/^    GtkWidget	*formwin;	    \/\/ manages all the windows below$/;"	m	struct:Gui
forscope_T	vim9compile.c	/^} forscope_T;$/;"	t	typeref:struct:__anon127	file:
forward_slash	fileio.c	/^forward_slash(char_u *fname)$/;"	f
found	cindent.c	/^    int	    found;$/;"	m	struct:__anon6	file:
found_iconic_arg	gui_gtk_x11.c	/^static int found_iconic_arg = FALSE;$/;"	v	file:
found_reverse_arg	globals.h	/^EXTERN int	found_reverse_arg INIT(= FALSE);$/;"	v
found_tagfile_cb	tag.c	/^found_tagfile_cb(char_u *fname, void *cookie UNUSED)$/;"	f	file:
fp	scriptfile.c	/^    FILE	*fp;		\/\/ opened file for sourcing$/;"	m	struct:source_cookie	file:
fp	search.c	/^    FILE	*fp;		\/\/ File pointer$/;"	m	struct:SearchedFile	file:
fptr_T	regexp.c	/^typedef void (*(*fptr_T)(int *, int))();$/;"	t	file:
fr_child	structs.h	/^    frame_T	*fr_child;	\/\/ first contained frame$/;"	m	struct:frame_S
fr_fp	if_cscope.h	/^    FILE *	    fr_fp;	\/\/ from cscope: FILE.$/;"	m	struct:csi
fr_height	structs.h	/^    int		fr_height;$/;"	m	struct:frame_S
fr_layout	structs.h	/^    char	fr_layout;	\/\/ FR_LEAF, FR_COL or FR_ROW$/;"	m	struct:frame_S
fr_newheight	structs.h	/^    int		fr_newheight;	\/\/ new height used in win_equal_rec()$/;"	m	struct:frame_S
fr_newwidth	structs.h	/^    int		fr_newwidth;	\/\/ new width used in win_equal_rec()$/;"	m	struct:frame_S
fr_next	structs.h	/^    frame_T	*fr_next;	\/\/ frame right or below in same parent, NULL$/;"	m	struct:frame_S
fr_parent	structs.h	/^    frame_T	*fr_parent;	\/\/ containing frame or NULL$/;"	m	struct:frame_S
fr_prev	structs.h	/^    frame_T	*fr_prev;	\/\/ frame left or above in same parent, NULL$/;"	m	struct:frame_S
fr_width	structs.h	/^    int		fr_width;$/;"	m	struct:frame_S
fr_win	structs.h	/^    win_T	*fr_win;	\/\/ window that fills this frame$/;"	m	struct:frame_S
frag	regexp_nfa.c	/^frag(nfa_state_T *start, Ptrlist *out)$/;"	f	file:
frame2win	window.c	/^frame2win(frame_T *frp)$/;"	f	file:
frame_S	structs.h	/^struct frame_S$/;"	s
frame_T	structs.h	/^typedef struct frame_S		frame_T;$/;"	t	typeref:struct:frame_S
frame_add_height	window.c	/^frame_add_height(frame_T *frp, int n)$/;"	f	file:
frame_add_statusline	window.c	/^frame_add_statusline(frame_T *frp)$/;"	f	file:
frame_add_vsep	window.c	/^frame_add_vsep(frame_T *frp)$/;"	f	file:
frame_append	window.c	/^frame_append(frame_T *after, frame_T *frp)$/;"	f	file:
frame_check_height	window.c	/^frame_check_height(frame_T *topfrp, int height)$/;"	f	file:
frame_check_width	window.c	/^frame_check_width(frame_T *topfrp, int width)$/;"	f	file:
frame_comp_pos	window.c	/^frame_comp_pos(frame_T *topfrp, int *row, int *col)$/;"	f	file:
frame_fix_height	window.c	/^frame_fix_height(win_T *wp)$/;"	f	file:
frame_fix_width	window.c	/^frame_fix_width(win_T *wp)$/;"	f	file:
frame_fixed_height	window.c	/^frame_fixed_height(frame_T *frp)$/;"	f	file:
frame_fixed_width	window.c	/^frame_fixed_width(frame_T *frp)$/;"	f	file:
frame_has_win	window.c	/^frame_has_win(frame_T *frp, win_T *wp)$/;"	f	file:
frame_insert	window.c	/^frame_insert(frame_T *before, frame_T *frp)$/;"	f	file:
frame_minheight	window.c	/^frame_minheight(frame_T *topfrp, win_T *next_curwin)$/;"	f	file:
frame_minwidth	window.c	/^frame_minwidth($/;"	f	file:
frame_new_height	window.c	/^frame_new_height($/;"	f	file:
frame_new_width	window.c	/^frame_new_width($/;"	f	file:
frame_remove	window.c	/^frame_remove(frame_T *frp)$/;"	f	file:
frame_setheight	window.c	/^frame_setheight(frame_T *curfrp, int height)$/;"	f	file:
frame_setwidth	window.c	/^frame_setwidth(frame_T *curfrp, int width)$/;"	f	file:
free_all_autocmds	autocmd.c	/^free_all_autocmds(void)$/;"	f
free_all_functions	userfunc.c	/^free_all_functions(void)$/;"	f
free_all_marks	mark.c	/^free_all_marks(void)$/;"	f
free_all_mem	misc2.c	/^free_all_mem(void)$/;"	f
free_all_options	option.c	/^free_all_options(void)$/;"	f
free_array	if_mzsch.c	/^free_array(char **array)$/;"	f	file:
free_arshape_buf	ex_getln.c	/^free_arshape_buf(void)$/;"	f
free_autoload_scriptnames	scriptfile.c	/^free_autoload_scriptnames(void)$/;"	f
free_blocks	spellfile.c	/^free_blocks(sblock_T *bl)$/;"	f	file:
free_buf_options	buffer.c	/^free_buf_options($/;"	f
free_buff	getchar.c	/^free_buff(buffheader_T *buf)$/;"	f
free_buffer	buffer.c	/^free_buffer(buf_T *buf)$/;"	f	file:
free_buffer_stuff	buffer.c	/^free_buffer_stuff($/;"	f	file:
free_callback	evalvars.c	/^free_callback(callback_T *callback)$/;"	f
free_cd_dir	ex_docmd.c	/^free_cd_dir(void)$/;"	f
free_cmd_argsW	os_win32.c	/^free_cmd_argsW(void)$/;"	f
free_cmdlines	ex_docmd.c	/^free_cmdlines(garray_T *gap)$/;"	f	file:
free_cmdmod	ex_docmd.c	/^free_cmdmod(void)$/;"	f	file:
free_def_functions	vim9compile.c	/^free_def_functions(void)$/;"	f
free_efm_list	quickfix.c	/^free_efm_list(efm_T **efm_first)$/;"	f	file:
free_fib	os_amiga.c	51;"	d	file:
free_fib	os_amiga.c	53;"	d	file:
free_findfile	findfile.c	/^free_findfile(void)$/;"	f
free_for_info	eval.c	/^free_for_info(void *fi_void)$/;"	f
free_funccal	userfunc.c	/^free_funccal(funccall_T *fc)$/;"	f	file:
free_funccal_contents	userfunc.c	/^free_funccal_contents(funccall_T *fc)$/;"	f	file:
free_global_msglist	ex_eval.c	/^free_global_msglist(void)$/;"	f
free_highlight	highlight.c	/^free_highlight(void)$/;"	f
free_highlight_fonts	highlight.c	/^free_highlight_fonts(void)$/;"	f
free_homedir	misc1.c	/^free_homedir(void)$/;"	f
free_imports	vim9script.c	/^free_imports(int sid)$/;"	f
free_insexpand_stuff	insexpand.c	/^free_insexpand_stuff(void)$/;"	f
free_job_options	channel.c	/^free_job_options(jobopt_T *opt)$/;"	f	file:
free_jobs_to_free_later	channel.c	/^free_jobs_to_free_later(void)$/;"	f	file:
free_jumplist	mark.c	/^free_jumplist(win_T *wp)$/;"	f
free_last_insert	edit.c	/^free_last_insert(void)$/;"	f
free_locales	ex_cmds2.c	/^free_locales(void)$/;"	f
free_menu	menu.c	/^free_menu(vimmenu_T **menup)$/;"	f	file:
free_menu_string	menu.c	/^free_menu_string(vimmenu_T *menu, int idx)$/;"	f	file:
free_msglist	ex_eval.c	/^free_msglist(struct msglist *l)$/;"	f	file:
free_old_sub	ex_cmds.c	/^free_old_sub(void)$/;"	f
free_one_termoption	option.c	/^free_one_termoption(char_u *var)$/;"	f
free_pixmaps	gui_xmebw.c	/^free_pixmaps(XmEnhancedButtonWidget eb)$/;"	f	file:
free_prev_shellcmd	ex_cmds.c	/^free_prev_shellcmd(void)$/;"	f
free_regexp_stuff	regexp.c	/^free_regexp_stuff(void)$/;"	f
free_register	register.c	/^free_register(void *reg)$/;"	f
free_screenlines	screen.c	/^free_screenlines(void)$/;"	f
free_scriptnames	scriptfile.c	/^free_scriptnames(void)$/;"	f
free_scrollback	terminal.c	/^free_scrollback(term_T *term)$/;"	f	file:
free_search_patterns	search.c	/^free_search_patterns(void)$/;"	f
free_set_callback	channel.c	/^free_set_callback(callback_T *cbp, callback_T *callback)$/;"	f	file:
free_signs	sign.c	/^free_signs(void)$/;"	f
free_string_option	optionstr.c	/^free_string_option(char_u *p)$/;"	f
free_tabpage	window.c	/^free_tabpage(tabpage_T *tp)$/;"	f
free_tag_stuff	tag.c	/^free_tag_stuff(void)$/;"	f
free_terminal	terminal.c	/^free_terminal(buf_T *buf)$/;"	f
free_termoptions	option.c	/^free_termoptions(void)$/;"	f
free_timer	time.c	/^free_timer(timer_T *timer)$/;"	f	file:
free_titles	buffer.c	/^free_titles(void)$/;"	f
free_tv	eval.c	/^free_tv(typval_T *varp)$/;"	f
free_typebuf	getchar.c	/^free_typebuf(void)$/;"	f	file:
free_unref_funccal	userfunc.c	/^free_unref_funccal(int copyID, int testing)$/;"	f
free_unref_items	eval.c	/^free_unref_items(int copyID)$/;"	f	file:
free_unused_channels	channel.c	/^free_unused_channels(int copyID, int mask)$/;"	f
free_unused_channels_contents	channel.c	/^free_unused_channels_contents(int copyID, int mask)$/;"	f
free_unused_jobs	channel.c	/^free_unused_jobs(int copyID, int mask)$/;"	f
free_unused_jobs_contents	channel.c	/^free_unused_jobs_contents(int copyID, int mask)$/;"	f
free_unused_terminals	terminal.c	/^free_unused_terminals()$/;"	f
free_users	misc1.c	/^free_users(void)$/;"	f
free_wordnode	spellfile.c	/^free_wordnode(spellinfo_T *spin, wordnode_T *n)$/;"	f	file:
free_yank	register.c	/^free_yank(long n)$/;"	f	file:
free_yank_all	register.c	/^free_yank_all(void)$/;"	f	file:
freeze_count	gui_gtk_f.h	/^    gint freeze_count;$/;"	m	struct:_GtkForm
from	digraph.c	/^    char_u	*from;$/;"	m	struct:__anon12	file:
from	if_py_both.h	/^    void	*from;$/;"	m	struct:__anon159
from	map.c	/^    int	    from;$/;"	m	struct:__anon66	file:
from	menu.c	/^    char_u	*from;		\/\/ English name$/;"	m	struct:__anon71	file:
fromObj	if_py_both.h	/^    PyObject	*fromObj;$/;"	m	struct:__anon159
from_noamp	menu.c	/^    char_u	*from_noamp;	\/\/ same, without '&'$/;"	m	struct:__anon71	file:
fromto_S	spell.h	/^typedef struct fromto_S$/;"	s
fromto_T	spell.h	/^} fromto_T;$/;"	t	typeref:struct:fromto_S
fs_end_label	vim9compile.c	/^    endlabel_T	*fs_end_label;	    \/\/ break instructions$/;"	m	struct:__anon127	file:
fs_top_label	vim9compile.c	/^    int		fs_top_label;	    \/\/ instruction idx at FOR$/;"	m	struct:__anon127	file:
fstatfs	memfile.c	43;"	d	file:
fstatfs	memfile.c	50;"	d	file:
ft_from	spell.h	/^    char_u	*ft_from;$/;"	m	struct:fromto_S
ft_to	spell.h	/^    char_u	*ft_to;$/;"	m	struct:fromto_S
full_path	structs.h	/^    int		full_path;		\/\/ file name argument was full path$/;"	m	struct:__anon252
full_screen	globals.h	/^EXTERN volatile sig_atomic_t full_screen INIT(= FALSE);$/;"	v
fullname	if_py_both.h	/^    char	*fullname;$/;"	m	struct:__anon151
fullname	optiondefs.h	/^    char	*fullname;	\/\/ full option name$/;"	m	struct:vimoption
fullpathcmp	filepath.c	/^fullpathcmp($/;"	f
func	ex_docmd.c	/^    char_u	*(*func)(int, void *, int, int))$/;"	f
func	if_cscope.h	/^    int     (*func)(exarg_T *eap);$/;"	m	struct:__anon147
func	if_lua.c	/^    luaV_function func;$/;"	m	struct:__anon51	file:
func	structs.h	/^    ufunc_T	*func;		\/\/ function being called$/;"	m	struct:funccall_S
func	syntax.c	/^    void    (*func)(exarg_T *, int);	\/\/ function to call$/;"	m	struct:subcommand	file:
func_breakpoint	userfunc.c	/^func_breakpoint(void *cookie)$/;"	f
func_call	userfunc.c	/^func_call($/;"	f
func_clear	userfunc.c	/^func_clear(ufunc_T *fp, int force)$/;"	f	file:
func_clear_free	userfunc.c	/^func_clear_free(ufunc_T *fp, int force)$/;"	f	file:
func_clear_items	userfunc.c	/^func_clear_items(ufunc_T *fp)$/;"	f	file:
func_dbg_tick	userfunc.c	/^func_dbg_tick(void *cookie)$/;"	f
func_do_profile	profiler.c	/^func_do_profile(ufunc_T *fp)$/;"	f
func_dump_profile	profiler.c	/^func_dump_profile(FILE *fd)$/;"	f	file:
func_equal	eval.c	/^func_equal($/;"	f	file:
func_free	userfunc.c	/^func_free(ufunc_T *fp)$/;"	f	file:
func_has_abort	userfunc.c	/^func_has_abort($/;"	f
func_has_ended	userfunc.c	/^func_has_ended(void *cookie)$/;"	f
func_hashtab	userfunc.c	/^static hashtab_T	func_hashtab;$/;"	v	file:
func_init	userfunc.c	/^func_init()$/;"	f
func_level	userfunc.c	/^func_level(void *cookie)$/;"	f
func_line_end	profiler.c	/^func_line_end(void *cookie)$/;"	f
func_line_exec	profiler.c	/^func_line_exec(void *cookie)$/;"	f
func_line_start	profiler.c	/^func_line_start(void *cookie)$/;"	f
func_name	userfunc.c	/^func_name(void *cookie)$/;"	f
func_name_refcount	userfunc.c	/^func_name_refcount(char_u *name)$/;"	f	file:
func_ptr_ref	userfunc.c	/^func_ptr_ref(ufunc_T *fp)$/;"	f
func_ptr_unref	userfunc.c	/^func_ptr_unref(ufunc_T *fp)$/;"	f
func_ref	userfunc.c	/^func_ref(char_u *name)$/;"	f
func_remove	userfunc.c	/^func_remove(ufunc_T *fp)$/;"	f	file:
func_return	vim9execute.c	/^func_return(ectx_T *ectx)$/;"	f	file:
func_tbl_get	userfunc.c	/^func_tbl_get(void)$/;"	f
func_unref	userfunc.c	/^func_unref(char_u *name)$/;"	f
funcargs	userfunc.c	/^static garray_T funcargs = GA_EMPTY;$/;"	v	file:
funccal_entry	structs.h	/^struct funccal_entry {$/;"	s
funccal_entry_T	structs.h	/^typedef struct funccal_entry funccal_entry_T;$/;"	t	typeref:struct:funccal_entry
funccal_entry_T	structs.h	/^} funccal_entry_T;$/;"	t	typeref:struct:__anon221
funccal_stack	userfunc.c	/^static funccal_entry_T *funccal_stack = NULL;$/;"	v	file:
funccal_unref	userfunc.c	/^funccal_unref(funccall_T *fc, ufunc_T *fp, int force)$/;"	f	file:
funccall_S	structs.h	/^struct funccall_S$/;"	s
funccall_T	structs.h	/^typedef struct funccall_S funccall_T;$/;"	t	typeref:struct:funccall_S
funccall_T	structs.h	/^} funccall_T;$/;"	t	typeref:struct:__anon219
funcdict_T	structs.h	/^} funcdict_T;$/;"	t	typeref:struct:__anon213
funcdict_T	structs.h	/^} funcdict_T;$/;"	t	typeref:struct:__anon220
funcentry_T	evalfunc.c	/^} funcentry_T;$/;"	t	typeref:struct:__anon18	file:
funcexe_T	structs.h	/^} funcexe_T;$/;"	t	typeref:struct:__anon223
function_exists	userfunc.c	/^function_exists(char_u *name, int no_deref)$/;"	f
fwd_word	search.c	/^fwd_word($/;"	f
fwrite_crypt	undo.c	/^fwrite_crypt(bufinfo_T *bi, char_u *ptr, size_t len)$/;"	f	file:
gDialogHotKeys	gui_mac.c	/^static short *gDialogHotKeys;$/;"	v	file:
gFontPanelInfo	gui_mac.c	/^} gFontPanelInfo = { 0, 0, 0, false };$/;"	v	typeref:struct:__anon38	file:
gFontStyle	gui_mac.c	/^ATSUStyle   gFontStyle;$/;"	v
gIsFontFallbackSet	gui_mac.c	/^Boolean	    gIsFontFallbackSet;$/;"	v
gMacSystemVersion	gui_mac.c	/^SInt32 gMacSystemVersion;$/;"	v
gPathConverter	os_mac_conv.c	/^static TECObjectRef gPathConverter;$/;"	v	file:
gScrollAction	gui_mac.c	/^ControlActionUPP gScrollAction;$/;"	v
gScrollDrag	gui_mac.c	/^ControlActionUPP gScrollDrag;$/;"	v
gTSCDefault	gui_mac.c	/^static Component	     gTSCDefault;$/;"	v	file:
gTSCInsert	gui_mac.c	/^static Component	     gTSCInsert;$/;"	v	file:
gTSCWindow	gui_mac.c	/^static Component	     gTSCWindow;$/;"	v	file:
gTSLDefault	gui_mac.c	/^static ScriptLanguageRecord gTSLDefault = { 0, 0 };$/;"	v	file:
gTSLInsert	gui_mac.c	/^static ScriptLanguageRecord gTSLInsert;$/;"	v	file:
gTSLWindow	gui_mac.c	/^static ScriptLanguageRecord gTSLWindow;$/;"	v	file:
gTSMDocument	gui_mac.c	/^static TSMDocumentID gTSMDocument;$/;"	v	file:
gUTF16ToUTF8Converter	os_mac_conv.c	/^static TECObjectRef gUTF16ToUTF8Converter;$/;"	v	file:
gWideFontStyle	gui_mac.c	/^ATSUStyle   gWideFontStyle;$/;"	v
g_attrCurrent	os_win32.c	/^static WORD  g_attrCurrent;$/;"	v	file:
g_attrDefault	os_win32.c	/^static WORD  g_attrDefault = 7;  \/\/ lightgray text on black background$/;"	v	file:
g_attrPreStandout	os_win32.c	/^static WORD g_attrPreStandout = 0;$/;"	v	file:
g_cbNonTermcap	os_win32.c	/^static ConsoleBuffer g_cbNonTermcap = { 0 };$/;"	v	file:
g_cbOrig	os_win32.c	/^static ConsoleBuffer g_cbOrig = { 0 };$/;"	v	file:
g_cbTermcap	os_win32.c	/^static ConsoleBuffer g_cbTermcap = { 0 };$/;"	v	file:
g_cci	os_win32.c	/^static CONSOLE_CURSOR_INFO g_cci;$/;"	v	file:
g_chartab	charset.c	/^static char_u	g_chartab[256];$/;"	v	file:
g_cmodein	os_win32.c	/^static DWORD g_cmodein = 0;$/;"	v	file:
g_cmodeout	os_win32.c	/^static DWORD g_cmodeout = 0;$/;"	v	file:
g_color_index_bg	os_win32.c	/^static int g_color_index_bg = 0;$/;"	v	file:
g_color_index_fg	os_win32.c	/^static int g_color_index_fg = 7;$/;"	v	file:
g_coord	os_win32.c	/^static COORD	  g_coord;  \/\/ 0-based, but external coords are 1-based$/;"	v	file:
g_do_tagpreview	globals.h	/^EXTERN int	g_do_tagpreview INIT(= 0);  \/\/ for tag preview commands:$/;"	v
g_fCBrkPressed	os_win32.c	/^static int g_fCBrkPressed = FALSE;  \/\/ set by ctrl-break interrupt$/;"	v	file:
g_fCanChangeIcon	os_win32.c	/^static BOOL g_fCanChangeIcon = FALSE;$/;"	v	file:
g_fCtrlCPressed	os_win32.c	/^static int g_fCtrlCPressed = FALSE; \/\/ set when ctrl-C or ctrl-break detected$/;"	v	file:
g_fForceExit	os_win32.c	/^static int g_fForceExit = FALSE;    \/\/ set when forcefully exiting$/;"	v	file:
g_fJustGotFocus	os_win32.c	/^static BOOL g_fJustGotFocus = FALSE;$/;"	v	file:
g_fMouseActive	os_win32.c	/^static int g_fMouseActive = FALSE;  \/\/ mouse enabled$/;"	v	file:
g_fMouseAvail	os_win32.c	/^static int g_fMouseAvail = FALSE;   \/\/ mouse present$/;"	v	file:
g_fTermcapMode	os_win32.c	/^static int g_fTermcapMode = FALSE;$/;"	v	file:
g_fWindInitCalled	os_win32.c	/^static int g_fWindInitCalled = FALSE;$/;"	v	file:
g_hConIn	os_win32.c	/^static HANDLE g_hConIn  = INVALID_HANDLE_VALUE;$/;"	v	file:
g_hConOut	os_win32.c	/^static HANDLE g_hConOut = INVALID_HANDLE_VALUE;$/;"	v	file:
g_hOrigIcon	os_win32.c	/^static HICON g_hOrigIcon = NULL;$/;"	v	file:
g_hOrigIconSmall	os_win32.c	/^static HICON g_hOrigIconSmall = NULL;$/;"	v	file:
g_hVimIcon	os_win32.c	/^static HICON g_hVimIcon = NULL;$/;"	v	file:
g_hWnd	os_win32.c	/^HWND g_hWnd = NULL;	\/\/ also used in os_mswin.c$/;"	v
g_hWndSound	sound.c	/^static HWND g_hWndSound = NULL;$/;"	v	file:
g_hinst	globals.h	/^EXTERN HINSTANCE g_hinst INIT(= NULL);$/;"	v
g_nMouseClick	os_win32.c	/^static int g_nMouseClick = -1;	    \/\/ mouse status$/;"	v	file:
g_srScrollRegion	os_win32.c	/^static SMALL_RECT g_srScrollRegion;$/;"	v	file:
g_szOrigTitle	os_win32.c	/^char g_szOrigTitle[256] = { 0 };$/;"	v
g_tag_at_cursor	globals.h	/^EXTERN int	g_tag_at_cursor INIT(= FALSE); \/\/ whether the tag command comes$/;"	v
g_xMouse	os_win32.c	/^static int g_xMouse;		    \/\/ mouse x coordinate$/;"	v	file:
g_yMouse	os_win32.c	/^static int g_yMouse;		    \/\/ mouse y coordinate$/;"	v	file:
ga_add_string	misc2.c	/^ga_add_string(garray_T *gap, char_u *p)$/;"	f
ga_append	misc2.c	/^ga_append(garray_T *gap, int c)$/;"	f
ga_clear	misc2.c	/^ga_clear(garray_T *gap)$/;"	f
ga_clear_strings	misc2.c	/^ga_clear_strings(garray_T *gap)$/;"	f
ga_concat	misc2.c	/^ga_concat(garray_T *gap, char_u *s)$/;"	f
ga_concat_esc	testing.c	/^ga_concat_esc(garray_T *gap, char_u *p, int clen)$/;"	f	file:
ga_concat_shorten_esc	testing.c	/^ga_concat_shorten_esc(garray_T *gap, char_u *str)$/;"	f	file:
ga_concat_strings	misc2.c	/^ga_concat_strings(garray_T *gap, char *sep)$/;"	f
ga_data	structs.h	/^    void    *ga_data;		    \/\/ pointer to the first item$/;"	m	struct:growarray
ga_grow	misc2.c	/^ga_grow(garray_T *gap, int n)$/;"	f
ga_growsize	structs.h	/^    int	    ga_growsize;	    \/\/ number of items to grow each time$/;"	m	struct:growarray
ga_init	misc2.c	/^ga_init(garray_T *gap)$/;"	f
ga_init2	misc2.c	/^ga_init2(garray_T *gap, int itemsize, int growsize)$/;"	f
ga_itemsize	structs.h	/^    int	    ga_itemsize;	    \/\/ sizeof(item)$/;"	m	struct:growarray
ga_len	structs.h	/^    int	    ga_len;		    \/\/ current number of items used$/;"	m	struct:growarray
ga_loaded	scriptfile.c	/^static garray_T		ga_loaded = {0, 0, sizeof(char_u *), 4, NULL};$/;"	v	file:
ga_maxlen	structs.h	/^    int	    ga_maxlen;		    \/\/ maximum number of items possible$/;"	m	struct:growarray
ga_userinput	evalfunc.c	/^static garray_T	    ga_userinput = {0, 0, sizeof(tasave_T), 4, NULL};$/;"	v	file:
ga_users	misc1.c	/^static garray_T	ga_users;$/;"	v	file:
gamma	gui_dwrite.h	/^    float gamma;$/;"	m	struct:DWriteRenderingParams
garbage_collect	eval.c	/^garbage_collect(int testing)$/;"	f
garbage_collect_at_exit	globals.h	/^EXTERN int	garbage_collect_at_exit INIT(= FALSE);$/;"	v
garbage_collect_globvars	evalvars.c	/^garbage_collect_globvars(int copyID)$/;"	f
garbage_collect_scriptvars	evalvars.c	/^garbage_collect_scriptvars(int copyID)$/;"	f
garbage_collect_vimvars	evalvars.c	/^garbage_collect_vimvars(int copyID)$/;"	f
garray_T	structs.h	/^} garray_T;$/;"	t	typeref:struct:growarray
gather_termleader	term.c	/^gather_termleader(void)$/;"	f	file:
gboolean	gui_gtk.c	96;"	d	file:
gc	gui_at_sb.h	/^    GC		  gc;		\/\/ a (shared) gc$/;"	m	struct:__anon143
gchar_cursor	misc1.c	/^gchar_cursor(void)$/;"	f
gchar_pos	misc1.c	/^gchar_pos(pos_T *pos)$/;"	f
gen64$r_quad_overlay	os_vms.c	/^    } gen64$r_quad_overlay;$/;"	m	struct:_generic_64	file:
gen_expand_wildcards	filepath.c	/^gen_expand_wildcards($/;"	f
general_beval_cb	beval.c	/^general_beval_cb(BalloonEval *beval, int state UNUSED)$/;"	f
generate_2BOOL	vim9compile.c	/^generate_2BOOL(cctx_T *cctx, int invert)$/;"	f	file:
generate_BCALL	vim9compile.c	/^generate_BCALL(cctx_T *cctx, int func_idx, int argcount)$/;"	f	file:
generate_CALL	vim9compile.c	/^generate_CALL(cctx_T *cctx, ufunc_T *ufunc, int pushed_argcount)$/;"	f	file:
generate_COMPARE	vim9compile.c	/^generate_COMPARE(cctx_T *cctx, exptype_T exptype, int ic)$/;"	f	file:
generate_ECHO	vim9compile.c	/^generate_ECHO(cctx_T *cctx, int with_white, int count)$/;"	f	file:
generate_EXEC	vim9compile.c	/^generate_EXEC(cctx_T *cctx, char_u *line)$/;"	f	file:
generate_EXECUTE	vim9compile.c	/^generate_EXECUTE(cctx_T *cctx, int count)$/;"	f	file:
generate_FOR	vim9compile.c	/^generate_FOR(cctx_T *cctx, int loop_idx)$/;"	f	file:
generate_FUNCREF	vim9compile.c	/^generate_FUNCREF(cctx_T *cctx, int dfunc_idx)$/;"	f	file:
generate_JUMP	vim9compile.c	/^generate_JUMP(cctx_T *cctx, jumpwhen_T when, int where)$/;"	f	file:
generate_LOAD	vim9compile.c	/^generate_LOAD($/;"	f	file:
generate_LOADV	vim9compile.c	/^generate_LOADV($/;"	f	file:
generate_MEMBER	vim9compile.c	/^generate_MEMBER(cctx_T *cctx, char_u *name, size_t len)$/;"	f	file:
generate_NEWDICT	vim9compile.c	/^generate_NEWDICT(cctx_T *cctx, int count)$/;"	f	file:
generate_NEWLIST	vim9compile.c	/^generate_NEWLIST(cctx_T *cctx, int count)$/;"	f	file:
generate_OLDSCRIPT	vim9compile.c	/^generate_OLDSCRIPT($/;"	f	file:
generate_PCALL	vim9compile.c	/^generate_PCALL(cctx_T *cctx, int argcount, int at_top)$/;"	f	file:
generate_PUSHBLOB	vim9compile.c	/^generate_PUSHBLOB(cctx_T *cctx, blob_T *blob)$/;"	f	file:
generate_PUSHBOOL	vim9compile.c	/^generate_PUSHBOOL(cctx_T *cctx, varnumber_T number)$/;"	f	file:
generate_PUSHF	vim9compile.c	/^generate_PUSHF(cctx_T *cctx, float_T fnumber)$/;"	f	file:
generate_PUSHNR	vim9compile.c	/^generate_PUSHNR(cctx_T *cctx, varnumber_T number)$/;"	f	file:
generate_PUSHS	vim9compile.c	/^generate_PUSHS(cctx_T *cctx, char_u *str)$/;"	f	file:
generate_PUSHSPEC	vim9compile.c	/^generate_PUSHSPEC(cctx_T *cctx, varnumber_T number)$/;"	f	file:
generate_STORE	vim9compile.c	/^generate_STORE(cctx_T *cctx, isntype_T isn_type, int idx, char_u *name)$/;"	f	file:
generate_STORENR	vim9compile.c	/^generate_STORENR(cctx_T *cctx, int idx, varnumber_T value)$/;"	f	file:
generate_STOREOPT	vim9compile.c	/^generate_STOREOPT(cctx_T *cctx, char_u *name, int opt_flags)$/;"	f	file:
generate_TYPECHECK	vim9compile.c	/^generate_TYPECHECK(cctx_T *cctx, type_T *vartype, int offset)$/;"	f	file:
generate_UCALL	vim9compile.c	/^generate_UCALL(cctx_T *cctx, char_u *name, int argcount)$/;"	f	file:
generate_VIM9SCRIPT	vim9compile.c	/^generate_VIM9SCRIPT($/;"	f	file:
generate_instr	vim9compile.c	/^generate_instr(cctx_T *cctx, isntype_T isn_type)$/;"	f	file:
generate_instr_drop	vim9compile.c	/^generate_instr_drop(cctx_T *cctx, isntype_T isn_type, int drop)$/;"	f	file:
generate_instr_type	vim9compile.c	/^generate_instr_type(cctx_T *cctx, isntype_T isn_type, type_T *type)$/;"	f	file:
generate_two_op	vim9compile.c	/^generate_two_op(cctx_T *cctx, char_u *op)$/;"	f	file:
geom	gui.h	/^    char_u	*geom;		    \/\/ Geometry, eg "80x24"$/;"	m	struct:Gui
get2c	misc2.c	/^get2c(FILE *fd)$/;"	f
get3c	misc2.c	/^get3c(FILE *fd)$/;"	f
get4c	misc2.c	/^get4c(FILE *fd)$/;"	f
get8ctime	time.c	/^get8ctime(FILE *fd)$/;"	f
getConnInfo	netbeans.c	/^getConnInfo(char *file, char **host, char **port, char **auth)$/;"	f	file:
getDeepestNesting	fold.c	/^getDeepestNesting(void)$/;"	f
getDeepestNestingRecurse	fold.c	/^getDeepestNestingRecurse(garray_T *gap)$/;"	f	file:
getTabCount	gui_mac.c	/^getTabCount(void)$/;"	f	file:
getTabLabel	gui_mac.c	/^getTabLabel(tabpage_T *page)$/;"	f	file:
getVimServerName	os_mswin.c	/^getVimServerName(HWND hwnd, char *name, int namelen)$/;"	f	file:
get_address	ex_docmd.c	/^get_address($/;"	f	file:
get_affitem	spellfile.c	/^get_affitem(int flagtype, char_u **pp)$/;"	f	file:
get_affix_flags	spellfile.c	/^get_affix_flags(afffile_T *affile, char_u *afflist)$/;"	f	file:
get_arglist	arglist.c	/^get_arglist(garray_T *gap, char_u *str, int escaped)$/;"	f	file:
get_arglist_as_rettv	arglist.c	/^get_arglist_as_rettv(aentry_T *arglist, int argcount, typval_T *rettv)$/;"	f	file:
get_arglist_exp	arglist.c	/^get_arglist_exp($/;"	f
get_arglist_name	arglist.c	/^get_arglist_name(expand_T *xp UNUSED, int idx)$/;"	f
get_attr_entry	highlight.c	/^get_attr_entry(garray_T *table, attrentry_T *aep)$/;"	f	file:
get_augroup_name	autocmd.c	/^get_augroup_name(expand_T *xp UNUSED, int idx)$/;"	f
get_b0_dict	memline.c	/^get_b0_dict(char_u *fname, dict_T *d)$/;"	f
get_bad_opt	ex_docmd.c	/^get_bad_opt(char_u *p, exarg_T *eap)$/;"	f
get_baseclass_amount	cindent.c	/^get_baseclass_amount(int col)$/;"	f	file:
get_behave_arg	cmdexpand.c	/^get_behave_arg(expand_T *xp UNUSED, int idx)$/;"	f	file:
get_beval_info	beval.c	/^get_beval_info($/;"	f
get_bkc_value	option.c	/^get_bkc_value(buf_T *buf)$/;"	f
get_borderchars	popupwin.c	/^get_borderchars(dict_T *dict, win_T *wp)$/;"	f	file:
get_borderhighlight	popupwin.c	/^get_borderhighlight(dict_T *dict, win_T *wp)$/;"	f	file:
get_breakindent_win	indent.c	/^get_breakindent_win($/;"	f
get_buf	if_ruby.c	/^get_buf(VALUE obj)$/;"	f	file:
get_buf_arg	evalfunc.c	/^get_buf_arg(typval_T *arg)$/;"	f
get_buf_maphash_list	map.c	/^get_buf_maphash_list(int state, int c)$/;"	f
get_buf_size	netbeans.c	/^get_buf_size(buf_T *bufp)$/;"	f	file:
get_buffcont	getchar.c	/^get_buffcont($/;"	f	file:
get_buffer_arg	if_mzsch.c	/^get_buffer_arg(const char *fname, int argnum, int argc, Scheme_Object **argv)$/;"	f	file:
get_buffer_by_name	if_mzsch.c	/^get_buffer_by_name(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
get_buffer_by_num	if_mzsch.c	/^get_buffer_by_num(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
get_buffer_count	if_mzsch.c	/^get_buffer_count(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:
get_buffer_info	evalbuffer.c	/^get_buffer_info(buf_T *buf)$/;"	f	file:
get_buffer_line	if_mzsch.c	/^get_buffer_line(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
get_buffer_line	if_ruby.c	/^get_buffer_line(buf_T *buf, linenr_T n)$/;"	f	file:
get_buffer_line_list	if_mzsch.c	/^get_buffer_line_list(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
get_buffer_lines	evalbuffer.c	/^get_buffer_lines($/;"	f	file:
get_buffer_name	if_mzsch.c	/^get_buffer_name(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
get_buffer_num	if_mzsch.c	/^get_buffer_num(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
get_buffer_signs	sign.c	/^get_buffer_signs(buf_T *buf, list_T *l)$/;"	f
get_buffer_size	if_mzsch.c	/^get_buffer_size(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
get_bufnr_from_arg	textprop.c	/^get_bufnr_from_arg(typval_T *arg, buf_T **buf)$/;"	f	file:
get_build_number	os_win32.c	/^get_build_number(void)$/;"	f	file:
get_bytes_from_buf	term.c	/^get_bytes_from_buf(char_u *buf, char_u *bytes, int num_bytes)$/;"	f
get_c_indent	cindent.c	/^get_c_indent(void)$/;"	f
get_callback	evalvars.c	/^get_callback(typval_T *arg)$/;"	f
get_callback_depth	userfunc.c	/^get_callback_depth(void)$/;"	f
get_can_cindent	edit.c	/^get_can_cindent(void)$/;"	f
get_ccline_ptr	ex_getln.c	/^get_ccline_ptr(void)$/;"	f	file:
get_channel_arg	channel.c	/^get_channel_arg(typval_T *tv, int check_open, int reading, ch_part_T part)$/;"	f	file:
get_char_class	regexp.c	/^get_char_class(char_u **pp)$/;"	f	file:
get_choice	dosinst.c	/^get_choice(char **table, int entries)$/;"	f	file:
get_cmd_argsW	os_win32.c	/^get_cmd_argsW(char ***argvp)$/;"	f
get_cmd_output	misc1.c	/^get_cmd_output($/;"	f
get_cmd_output_as_rettv	misc1.c	/^get_cmd_output_as_rettv($/;"	f	file:
get_cmdline_firstc	ex_getln.c	/^get_cmdline_firstc(void)$/;"	f
get_cmdline_info	ex_getln.c	/^get_cmdline_info(void)$/;"	f
get_cmdline_str	ex_getln.c	/^get_cmdline_str(void)$/;"	f	file:
get_cmdline_type	ex_getln.c	/^get_cmdline_type(void)$/;"	f
get_coll_element	regexp.c	/^get_coll_element(char_u **pp)$/;"	f	file:
get_command_name	ex_docmd.c	/^get_command_name(expand_T *xp UNUSED, int idx)$/;"	f
get_compflags	spellfile.c	/^get_compflags($/;"	f	file:
get_complete_info	insexpand.c	/^get_complete_info(list_T *what_list, dict_T *retdict)$/;"	f	file:
get_conpty_type	os_win32.c	/^get_conpty_type(void)$/;"	f
get_copyID	eval.c	/^get_copyID(void)$/;"	f
get_cpo_flags	regexp.c	/^get_cpo_flags(void)$/;"	f	file:
get_cscope_name	if_cscope.c	/^get_cscope_name(expand_T *xp UNUSED, int idx)$/;"	f
get_cterm_attr_idx	highlight.c	/^get_cterm_attr_idx(int attr, int fg, int bg)$/;"	f
get_ctime	time.c	/^get_ctime(time_t thetime, int add_newline)$/;"	f
get_curr_buffer	if_mzsch.c	/^get_curr_buffer(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:
get_curr_win	if_mzsch.c	/^get_curr_win(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:
get_current_funccal	userfunc.c	/^get_current_funccal(void)$/;"	f
get_current_funccal_dict	userfunc.c	/^get_current_funccal_dict(hashtab_T *ht)$/;"	f
get_cursor	if_mzsch.c	/^get_cursor(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
get_cursor_rel_lnum	misc2.c	/^get_cursor_rel_lnum($/;"	f
get_default_console_color	os_win32.c	/^get_default_console_color($/;"	f
get_deleted_augroup	autocmd.c	/^get_deleted_augroup(void)$/;"	f	file:
get_dialog_font_metrics	gui_w32.c	/^get_dialog_font_metrics(void)$/;"	f	file:
get_dict_type	vim9compile.c	/^get_dict_type(type_T *member_type, garray_T *type_list)$/;"	f	file:
get_digraph	digraph.c	/^get_digraph($/;"	f
get_digraph_for_char	digraph.c	/^get_digraph_for_char(int val_arg)$/;"	f
get_dll_import_func	os_win32.c	/^get_dll_import_func(HINSTANCE hInst, const char *funcname)$/;"	f
get_echo_attr	eval.c	/^get_echo_attr(void)$/;"	f
get_emsg_lnum	message.c	/^get_emsg_lnum(void)$/;"	f	file:
get_emsg_source	message.c	/^get_emsg_source(void)$/;"	f	file:
get_encoding_default	option.c	/^get_encoding_default(void)$/;"	f
get_end_emsg	ex_eval.c	/^get_end_emsg(cstack_T *cstack)$/;"	f	file:
get_env_len	eval.c	/^get_env_len(char_u **arg)$/;"	f
get_env_name	misc1.c	/^get_env_name($/;"	f
get_env_tv	eval.c	/^get_env_tv(char_u **arg, typval_T *rettv, int evaluate)$/;"	f
get_equalprg	option.c	/^get_equalprg(void)$/;"	f
get_equi_class	regexp.c	/^get_equi_class(char_u **pp)$/;"	f	file:
get_errorlist	quickfix.c	/^get_errorlist(qf_info_T *qi_arg, win_T *wp, int qf_idx, list_T *list)$/;"	f	file:
get_event_name	autocmd.c	/^get_event_name(expand_T *xp UNUSED, int idx)$/;"	f
get_exception_string	ex_eval.c	/^get_exception_string($/;"	f
get_exceptions	if_python.c	/^get_exceptions(void)$/;"	f	file:
get_exe_name	os_win32.c	/^get_exe_name(void)$/;"	f	file:
get_execreg_lastc	register.c	/^get_execreg_lastc(void)$/;"	f
get_expanded_name	userfunc.c	/^get_expanded_name(char_u *name, int check)$/;"	f
get_expr_indent	indent.c	/^get_expr_indent(void)$/;"	f
get_expr_line	register.c	/^get_expr_line(void)$/;"	f
get_expr_line_src	register.c	/^get_expr_line_src(void)$/;"	f	file:
get_expr_name	evalfunc.c	/^get_expr_name(expand_T *xp, int idx)$/;"	f
get_expr_register	register.c	/^get_expr_register(void)$/;"	f
get_extra_op_char	ops.c	/^get_extra_op_char(int optype)$/;"	f
get_fib	os_amiga.c	/^get_fib(char_u *fname)$/;"	f	file:
get_file_in_dir	memline.c	/^get_file_in_dir($/;"	f
get_fileformat	misc2.c	/^get_fileformat(buf_T *buf)$/;"	f
get_fileformat_force	misc2.c	/^get_fileformat_force($/;"	f
get_find_dialog_text	gui.c	/^get_find_dialog_text($/;"	f
get_fio_flags	fileio.c	/^get_fio_flags(char_u *ptr)$/;"	f
get_first_valid_sign	sign.c	/^get_first_valid_sign(win_T *wp)$/;"	f
get_firstwin	if_py_both.h	/^get_firstwin(TabPageObject *tabObject)$/;"	f
get_flags	ex_docmd.c	/^get_flags(exarg_T *eap)$/;"	f	file:
get_float_arg	evalfunc.c	/^get_float_arg(typval_T *argvars, float_T *f)$/;"	f	file:
get_foldtext	fold.c	/^get_foldtext($/;"	f
get_font_handle	gui_w32.c	/^get_font_handle(LOGFONTW *lf)$/;"	f	file:
get_fpos_of_mouse	mouse.c	/^get_fpos_of_mouse(pos_T *mpos)$/;"	f	file:
get_framelayout	evalwindow.c	/^get_framelayout(frame_T *fr, list_T *l, int outer)$/;"	f	file:
get_func_line	userfunc.c	/^get_func_line($/;"	f
get_func_tv	userfunc.c	/^get_func_tv($/;"	f
get_funccal	userfunc.c	/^get_funccal(void)$/;"	f	file:
get_funccal_args_ht	userfunc.c	/^get_funccal_args_ht()$/;"	f
get_funccal_args_var	userfunc.c	/^get_funccal_args_var()$/;"	f
get_funccal_local_ht	userfunc.c	/^get_funccal_local_ht()$/;"	f
get_funccal_local_var	userfunc.c	/^get_funccal_local_var()$/;"	f
get_function_args	userfunc.c	/^get_function_args($/;"	f
get_function_name	evalfunc.c	/^get_function_name(expand_T *xp, int idx)$/;"	f
get_globvar_dict	evalvars.c	/^get_globvar_dict(void)$/;"	f
get_globvar_ht	evalvars.c	/^get_globvar_ht(void)$/;"	f
get_group_name	syntax.c	/^get_group_name($/;"	f	file:
get_gui_attr_idx	highlight.c	/^get_gui_attr_idx(int attr, guicolor_T fg, guicolor_T bg)$/;"	f
get_highest_fnum	buffer.c	/^get_highest_fnum(void)$/;"	f
get_highlight_default	option.c	/^get_highlight_default(void)$/;"	f
get_highlight_name	highlight.c	/^get_highlight_name(expand_T *xp UNUSED, int idx)$/;"	f
get_highlight_name_ext	highlight.c	/^get_highlight_name_ext(expand_T *xp UNUSED, int idx, int skip_cleared)$/;"	f
get_hisidx	cmdhist.c	/^get_hisidx(int hist_type)$/;"	f
get_hislen	cmdhist.c	/^get_hislen(void)$/;"	f
get_hisnum	cmdhist.c	/^get_hisnum(int hist_type)$/;"	f
get_histentry	cmdhist.c	/^get_histentry(int hist_type)$/;"	f
get_history_arg	cmdhist.c	/^get_history_arg(expand_T *xp UNUSED, int idx)$/;"	f
get_history_entry	cmdhist.c	/^get_history_entry(int histype, int idx)$/;"	f	file:
get_history_idx	cmdhist.c	/^get_history_idx(int histype)$/;"	f	file:
get_histtype	cmdhist.c	/^get_histtype(char_u *name)$/;"	f	file:
get_id_len	eval.c	/^get_id_len(char_u **arg)$/;"	f
get_id_list	syntax.c	/^get_id_list($/;"	f	file:
get_imported_func_info	os_win32.c	/^get_imported_func_info(HINSTANCE hInst, const char *funcname, int info)$/;"	f	file:
get_indent	indent.c	/^get_indent(void)$/;"	f
get_indent_buf	indent.c	/^get_indent_buf(buf_T *buf, linenr_T lnum)$/;"	f
get_indent_lnum	indent.c	/^get_indent_lnum(linenr_T lnum)$/;"	f
get_indent_nolabel	cindent.c	/^get_indent_nolabel (linenr_T lnum)	\/\/ XXX$/;"	f	file:
get_indent_str	indent.c	/^get_indent_str($/;"	f
get_indent_str_vtab	indent.c	/^get_indent_str_vtab(char_u *ptr, int ts, int *vts, int list)$/;"	f
get_input_buf	ui.c	/^get_input_buf(void)$/;"	f
get_inserted	getchar.c	/^get_inserted(void)$/;"	f
get_isolated_shell_name	misc1.c	/^get_isolated_shell_name(void)$/;"	f
get_item_dimensions	gui_gtk_x11.c	/^get_item_dimensions(GtkWidget *widget, GtkOrientation orientation)$/;"	f	file:
get_job_arg	channel.c	/^get_job_arg(typval_T *tv)$/;"	f	file:
get_job_options	channel.c	/^get_job_options(typval_T *tv, jobopt_T *opt, int supported, int supported2)$/;"	f
get_key_name	misc2.c	/^get_key_name(int i)$/;"	f
get_keymap_str	screen.c	/^get_keymap_str($/;"	f
get_keystroke	misc1.c	/^get_keystroke(void)$/;"	f
get_lambda_tv	userfunc.c	/^get_lambda_tv(char_u **arg, typval_T *rettv, int evaluate)$/;"	f
get_lang_arg	ex_cmds2.c	/^get_lang_arg(expand_T *xp UNUSED, int idx)$/;"	f
get_last_insert	edit.c	/^get_last_insert(void)$/;"	f
get_last_insert_save	edit.c	/^get_last_insert_save(void)$/;"	f
get_last_leader_offset	misc1.c	/^get_last_leader_offset(char_u *line, char_u **flags)$/;"	f
get_leader_len	misc1.c	/^get_leader_len($/;"	f
get_lisp_indent	indent.c	/^get_lisp_indent(void)$/;"	f
get_list_line	evalfunc.c	/^get_list_line($/;"	f	file:
get_list_range	ex_getln.c	/^get_list_range(char_u **str, int *num1, int *num2)$/;"	f
get_list_tv	list.c	/^get_list_tv(char_u **arg, typval_T *rettv, int evaluate, int do_error)$/;"	f
get_list_type	vim9compile.c	/^get_list_type(type_T *member_type, garray_T *type_list)$/;"	f	file:
get_lit_string_tv	eval.c	/^get_lit_string_tv(char_u **arg, typval_T *rettv, int evaluate)$/;"	f
get_literal	edit.c	/^get_literal(void)$/;"	f
get_literal_key	dict.c	/^get_literal_key(char_u **arg, typval_T *tv)$/;"	f	file:
get_locale_val	ex_cmds2.c	/^get_locale_val(int what)$/;"	f	file:
get_locales	ex_cmds2.c	/^get_locales(expand_T *xp UNUSED, int idx)$/;"	f
get_logfont	os_mswin.c	/^get_logfont($/;"	f
get_long_from_buf	term.c	/^get_long_from_buf(char_u *buf, long_u *val)$/;"	f	file:
get_loop_line	ex_docmd.c	/^get_loop_line(int c, void *cookie, int indent, int do_concat)$/;"	f	file:
get_lval	eval.c	/^get_lval($/;"	f
get_mac_fio_flags	fileio.c	/^get_mac_fio_flags(char_u *ptr)$/;"	f
get_map_mode	map.c	/^get_map_mode(char_u **cmdp, int forceit)$/;"	f	file:
get_maparg	map.c	/^get_maparg(typval_T *argvars, typval_T *rettv, int exact)$/;"	f
get_mapclear_arg	cmdexpand.c	/^get_mapclear_arg(expand_T *xp UNUSED, int idx)$/;"	f	file:
get_maphash_list	map.c	/^get_maphash_list(int state, int c)$/;"	f
get_match	highlight.c	/^get_match(win_T *wp, int id)$/;"	f	file:
get_maxbacktrace_level	debugger.c	/^get_maxbacktrace_level(char_u *sname)$/;"	f	file:
get_mef_name	quickfix.c	/^get_mef_name(void)$/;"	f	file:
get_menu_cmd_modes	menu.c	/^get_menu_cmd_modes($/;"	f	file:
get_menu_index	menu.c	/^get_menu_index(vimmenu_T *menu, int state)$/;"	f
get_menu_mode	menu.c	/^get_menu_mode(void)$/;"	f	file:
get_menu_mode_flag	menu.c	/^get_menu_mode_flag(void)$/;"	f
get_menu_name	menu.c	/^get_menu_name(expand_T *xp UNUSED, int idx)$/;"	f
get_menu_names	menu.c	/^get_menu_names(expand_T *xp UNUSED, int idx)$/;"	f
get_menu_position	gui_gtk.c	/^get_menu_position(vimmenu_T *menu)$/;"	f	file:
get_menu_tool_height	gui_gtk_x11.c	/^get_menu_tool_height(void)$/;"	f	file:
get_menu_tool_width	gui_gtk_x11.c	/^get_menu_tool_width(void)$/;"	f	file:
get_mess_env	ex_cmds2.c	/^get_mess_env(void)$/;"	f	file:
get_mess_lang	ex_cmds2.c	/^get_mess_lang(void)$/;"	f
get_messages_arg	cmdexpand.c	/^get_messages_arg(expand_T *xp UNUSED, int idx)$/;"	f	file:
get_mouse_button	mouse.c	/^get_mouse_button(int code, int *is_click, int *is_drag)$/;"	f
get_mouse_class	mouse.c	/^get_mouse_class(char_u *p)$/;"	f	file:
get_moved_list	popupwin.c	/^get_moved_list(dict_T *dict, win_T *wp)$/;"	f	file:
get_name_len	eval.c	/^get_name_len($/;"	f
get_namedfm	mark.c	/^get_namedfm(void)$/;"	f
get_next_buffer	if_mzsch.c	/^get_next_buffer(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
get_next_valid_entry	quickfix.c	/^get_next_valid_entry($/;"	f	file:
get_nolist_virtcol	edit.c	/^get_nolist_virtcol(void)$/;"	f
get_nth_entry	quickfix.c	/^get_nth_entry(qf_list_T *qfl, int errornr, int *new_qfidx)$/;"	f	file:
get_nth_sign_group_name	sign.c	/^get_nth_sign_group_name(int idx)$/;"	f	file:
get_nth_sign_name	sign.c	/^get_nth_sign_name(int idx)$/;"	f	file:
get_nth_valid_entry	quickfix.c	/^get_nth_valid_entry($/;"	f	file:
get_number	misc1.c	/^get_number($/;"	f
get_number_arg	main.c	/^get_number_arg($/;"	f	file:
get_number_indent	indent.c	/^get_number_indent(linenr_T lnum)$/;"	f
get_number_tv	eval.c	/^get_number_tv($/;"	f
get_off_or_lnum	netbeans.c	/^get_off_or_lnum(buf_T *buf, char_u **argp)$/;"	f	file:
get_old_sub	ex_cmds.c	/^get_old_sub(void)$/;"	f
get_one_sourceline	scriptfile.c	/^get_one_sourceline(struct source_cookie *sp)$/;"	f	file:
get_op_char	ops.c	/^get_op_char(int optype)$/;"	f
get_op_type	ops.c	/^get_op_type(int char1, int char2)$/;"	f
get_op_vcol	ops.c	/^get_op_vcol($/;"	f	file:
get_option	if_mzsch.c	/^get_option(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
get_option_flags	option.c	/^get_option_flags(int opt_idx)$/;"	f
get_option_fullname	option.c	/^get_option_fullname(int opt_idx)$/;"	f
get_option_tv	eval.c	/^get_option_tv($/;"	f
get_option_value	option.c	/^get_option_value($/;"	f
get_option_value_strict	option.c	/^get_option_value_strict($/;"	f
get_option_var	option.c	/^get_option_var(int opt_idx)$/;"	f
get_option_varp_scope	option.c	/^get_option_varp_scope(int opt_idx, int opt_flags)$/;"	f
get_optional_window	evalfunc.c	/^get_optional_window(typval_T *argvars, int idx)$/;"	f
get_padding_border	popupwin.c	/^get_padding_border(dict_T *dict, int *array, char *name)$/;"	f	file:
get_part	gui_xmdlg.c	/^get_part(char *in, int pos, char *out)$/;"	f	file:
get_past_head	filepath.c	/^get_past_head(char_u *path)$/;"	f
get_path_cutoff	findfile.c	/^get_path_cutoff(char_u *fname, garray_T *gap)$/;"	f	file:
get_pfxlist	spellfile.c	/^get_pfxlist($/;"	f	file:
get_popup_entry	gui_athena.c	/^get_popup_entry(Widget w)$/;"	f	file:
get_pos_entry	popupwin.c	/^get_pos_entry(dict_T *d, int give_error)$/;"	f	file:
get_pressedreturn	ex_docmd.c	/^get_pressedreturn(void)$/;"	f
get_prev_buffer	if_mzsch.c	/^get_prev_buffer(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
get_prev_valid_entry	quickfix.c	/^get_prev_valid_entry($/;"	f	file:
get_prevcol_hl_flag	highlight.c	/^get_prevcol_hl_flag(win_T *wp, match_T *search_hl, long curcol)$/;"	f
get_profile_name	profiler.c	/^get_profile_name(expand_T *xp UNUSED, int idx)$/;"	f
get_pseudo_mouse_code	mouse.c	/^get_pseudo_mouse_code($/;"	f
get_py3_exceptions	if_python3.c	/^get_py3_exceptions(void)$/;"	f	file:
get_qf_loc_list	quickfix.c	/^get_qf_loc_list(int is_qf, win_T *wp, typval_T *what_arg, typval_T *rettv)$/;"	f	file:
get_qfline_items	quickfix.c	/^get_qfline_items(qfline_T *qfp, list_T *list)$/;"	f	file:
get_range_end	if_mzsch.c	/^get_range_end(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:
get_range_start	if_mzsch.c	/^get_range_start(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:
get_real_state	misc2.c	/^get_real_state(void)$/;"	f
get_recorded	getchar.c	/^get_recorded(void)$/;"	f
get_reg_contents	register.c	/^get_reg_contents(int regname, int flags)$/;"	f
get_reg_type	register.c	/^get_reg_type(int regname, long *reglen)$/;"	f
get_register	register.c	/^get_register($/;"	f
get_register_name	register.c	/^get_register_name(int num)$/;"	f
get_rel_pos	buffer.c	/^get_rel_pos($/;"	f
get_return_cmd	userfunc.c	/^get_return_cmd(void *rettv)$/;"	f
get_root_menu	menu.c	/^get_root_menu(char_u *name)$/;"	f	file:
get_row_number	terminal.c	/^get_row_number(typval_T *tv, term_T *term)$/;"	f	file:
get_script_item_idx	vim9compile.c	/^get_script_item_idx(int sid, char_u *name, int check_writable)$/;"	f
get_script_local_ht	evalvars.c	/^get_script_local_ht(void)$/;"	f
get_scriptname	scriptfile.c	/^get_scriptname(scid_T id)$/;"	f
get_scroll_flags	gui_w32.c	/^get_scroll_flags(void)$/;"	f	file:
get_scroll_overlap	move.c	/^get_scroll_overlap(lineoff_T *lp, int dir)$/;"	f	file:
get_scrolloff_value	option.c	/^get_scrolloff_value(void)$/;"	f
get_search_arg	evalfunc.c	/^get_search_arg(typval_T *varp, int *flagsp)$/;"	f	file:
get_search_match_hl	highlight.c	/^get_search_match_hl(win_T *wp, match_T *search_hl, long col, int *char_attr)$/;"	f
get_search_pat	search.c	/^get_search_pat(void)$/;"	f
get_separator	terminal.c	/^get_separator(int text_width, char_u *fname)$/;"	f	file:
get_shape_idx	misc2.c	/^get_shape_idx(int mouse)$/;"	f
get_shell_folder_path	dosinst.h	/^get_shell_folder_path($/;"	f
get_short_pathname	filepath.c	/^get_short_pathname(char_u **fnamep, char_u **bufp, int *fnamelen)$/;"	f	file:
get_showbreak_value	option.c	/^get_showbreak_value(win_T *win)$/;"	f
get_sidescrolloff_value	option.c	/^get_sidescrolloff_value(void)$/;"	f
get_sign_display_info	drawline.c	/^get_sign_display_info($/;"	f	file:
get_sign_name	sign.c	/^get_sign_name(expand_T *xp UNUSED, int idx)$/;"	f
get_signal_name	os_unix.c	/^get_signal_name(int sig)$/;"	f	file:
get_some_time	sha256.c	/^get_some_time(void)$/;"	f	file:
get_sound_callback	sound.c	/^get_sound_callback(typval_T *arg)$/;"	f	file:
get_spaces	popupwin.c	/^get_spaces(int len)$/;"	f	file:
get_spat	search.c	/^get_spat(int idx)$/;"	f
get_spat_last_idx	search.c	/^get_spat_last_idx(void)$/;"	f
get_spec_reg	register.c	/^get_spec_reg($/;"	f
get_special_key_code	misc2.c	/^get_special_key_code(char_u *name)$/;"	f
get_special_key_name	misc2.c	/^get_special_key_name(int c, int modifiers)$/;"	f
get_special_pty_type	misc2.c	/^get_special_pty_type(void)$/;"	f
get_spellword	evalvars.c	/^get_spellword(list_T *list, char_u **pp)$/;"	f
get_stack_limit	os_unix.c	/^get_stack_limit(void)$/;"	f	file:
get_string_tv	eval.c	/^get_string_tv(char_u **arg, typval_T *rettv, int evaluate)$/;"	f
get_sts_value	indent.c	/^get_sts_value(void)$/;"	f
get_stty	os_unix.c	/^get_stty(void)$/;"	f
get_styled_font_variants	gui_gtk_x11.c	/^get_styled_font_variants(void)$/;"	f	file:
get_sw_value	indent.c	/^get_sw_value(buf_T *buf)$/;"	f
get_sw_value_col	indent.c	/^get_sw_value_col(buf_T *buf, colnr_T col UNUSED)$/;"	f
get_sw_value_indent	indent.c	/^get_sw_value_indent(buf_T *buf)$/;"	f
get_sw_value_pos	indent.c	/^get_sw_value_pos(buf_T *buf, pos_T *pos)$/;"	f	file:
get_syn_options	syntax.c	/^get_syn_options($/;"	f	file:
get_syn_pattern	syntax.c	/^get_syn_pattern(char_u *arg, synpat_T *ci)$/;"	f	file:
get_syntax_attr	syntax.c	/^get_syntax_attr($/;"	f
get_syntax_info	syntax.c	/^get_syntax_info(int *seqnrp)$/;"	f
get_syntax_name	syntax.c	/^get_syntax_name(expand_T *xp UNUSED, int idx)$/;"	f
get_syntime_arg	syntax.c	/^get_syntime_arg(expand_T *xp UNUSED, int idx)$/;"	f
get_tab_number	window.c	/^get_tab_number(tabpage_T *tp UNUSED)$/;"	f
get_tabline_label	gui.c	/^get_tabline_label($/;"	f
get_tabpage_arg	ex_docmd.c	/^get_tabpage_arg(exarg_T *eap)$/;"	f	file:
get_tabpage_info	evalwindow.c	/^get_tabpage_info(tabpage_T *tp, int tp_idx)$/;"	f	file:
get_tag_details	tag.c	/^get_tag_details(taggy_T *tag, dict_T *retdict)$/;"	f	file:
get_tagfname	tag.c	/^get_tagfname($/;"	f
get_tags	tag.c	/^get_tags(list_T *list, char_u *pat, char_u *buf_fname)$/;"	f
get_tagstack	tag.c	/^get_tagstack(win_T *wp, dict_T *retdict)$/;"	f
get_term_code	option.c	/^get_term_code(char_u *tname)$/;"	f
get_term_entries	term.c	/^get_term_entries(int *height, int *width)$/;"	f	file:
get_term_opt_idx	option.c	/^get_term_opt_idx(char_u **p)$/;"	f
get_termcode	term.c	/^get_termcode(int i)$/;"	f
get_termcode_len	term.c	/^get_termcode_len(int idx)$/;"	f
get_text_locked_msg	ex_getln.c	/^get_text_locked_msg(void)$/;"	f
get_text_props	textprop.c	/^get_text_props(buf_T *buf, linenr_T lnum, char_u **props, int will_change)$/;"	f
get_tgc_attr_idx	highlight.c	/^get_tgc_attr_idx(int attr, guicolor_T fg, guicolor_T bg)$/;"	f
get_toolbar_bitmap	gui_w32.c	/^get_toolbar_bitmap(vimmenu_T *menu)$/;"	f	file:
get_toolbar_pixmap	gui_athena.c	/^get_toolbar_pixmap(vimmenu_T *menu, Pixmap *sen)$/;"	f	file:
get_toolbar_pixmap	gui_motif.c	/^get_toolbar_pixmap(vimmenu_T *menu, char **fname)$/;"	f	file:
get_trans_bufname	screen.c	/^get_trans_bufname(buf_T *buf)$/;"	f
get_tty	os_vms.c	/^get_tty(void)$/;"	f	file:
get_tty_fd	os_unix.c	/^get_tty_fd(int fd)$/;"	f	file:
get_tty_info	os_unix.c	/^get_tty_info(int fd, ttyinfo_T *info)$/;"	f
get_tty_part	terminal.c	/^get_tty_part(term_T *term UNUSED)$/;"	f	file:
get_undolevel	undo.c	/^get_undolevel(void)$/;"	f	file:
get_user_cmd_addr_type	usercmd.c	/^get_user_cmd_addr_type(expand_T *xp UNUSED, int idx)$/;"	f
get_user_cmd_complete	usercmd.c	/^get_user_cmd_complete(expand_T *xp UNUSED, int idx)$/;"	f
get_user_cmd_flags	usercmd.c	/^get_user_cmd_flags(expand_T *xp UNUSED, int idx)$/;"	f
get_user_cmd_nargs	usercmd.c	/^get_user_cmd_nargs(expand_T *xp UNUSED, int idx)$/;"	f
get_user_command_name	usercmd.c	/^get_user_command_name(int idx)$/;"	f
get_user_commands	usercmd.c	/^get_user_commands(expand_T *xp UNUSED, int idx)$/;"	f
get_user_func_name	userfunc.c	/^get_user_func_name(expand_T *xp, int idx)$/;"	f
get_user_input	ex_getln.c	/^get_user_input($/;"	f
get_user_name	misc2.c	/^get_user_name(char_u *buf, int len)$/;"	f
get_user_var_name	evalvars.c	/^get_user_var_name(expand_T *xp, int idx)$/;"	f
get_users	misc1.c	/^get_users(expand_T *xp UNUSED, int idx)$/;"	f
get_valid_buffer	if_mzsch.c	/^buf_T *get_valid_buffer(void *obj)$/;"	f
get_valid_window	if_mzsch.c	/^win_T *get_valid_window(void *obj)$/;"	f
get_var_special_name	evalvars.c	/^get_var_special_name(int nr)$/;"	f
get_var_tv	evalvars.c	/^get_var_tv($/;"	f
get_var_value	evalvars.c	/^get_var_value(char_u *name)$/;"	f
get_varp	option.c	/^get_varp(struct vimoption *p)$/;"	f	file:
get_varp_scope	option.c	/^get_varp_scope(struct vimoption *p, int opt_flags)$/;"	f	file:
get_view_file	session.c	/^get_view_file(int c)$/;"	f	file:
get_vim_constant	vim9compile.c	/^get_vim_constant(char_u **arg, typval_T *rettv)$/;"	f	file:
get_vim_curr_buffer	if_mzsch.c	/^get_vim_curr_buffer(void)$/;"	f	file:
get_vim_curr_window	if_mzsch.c	/^get_vim_curr_window(void)$/;"	f	file:
get_vim_env	dosinst.c	/^get_vim_env(void)$/;"	f	file:
get_vim_var_dict	evalvars.c	/^get_vim_var_dict(int idx)$/;"	f
get_vim_var_list	evalvars.c	/^get_vim_var_list(int idx)$/;"	f
get_vim_var_name	evalvars.c	/^get_vim_var_name(int idx)$/;"	f
get_vim_var_nr	evalvars.c	/^get_vim_var_nr(int idx)$/;"	f
get_vim_var_str	evalvars.c	/^get_vim_var_str(int idx)$/;"	f
get_vim_var_tv	evalvars.c	/^get_vim_var_tv(int idx)$/;"	f
get_viminfo_parameter	viminfo.c	/^get_viminfo_parameter(int type)$/;"	f
get_vimvar_dict	evalvars.c	/^get_vimvar_dict(void)$/;"	f
get_visual_text	normal.c	/^get_visual_text($/;"	f
get_was_safe_state	main.c	/^get_was_safe_state(void)$/;"	f
get_wcr_attr	screen.c	/^get_wcr_attr(win_T *wp)$/;"	f
get_win	if_ruby.c	/^get_win(VALUE obj)$/;"	f	file:
get_win_fio_flags	fileio.c	/^get_win_fio_flags(char_u *ptr)$/;"	f
get_win_info	evalwindow.c	/^get_win_info(win_T *wp, short tpnr, short winnr)$/;"	f	file:
get_win_number	window.c	/^get_win_number(win_T *wp, win_T *first_win)$/;"	f
get_winbuf_options	option.c	/^get_winbuf_options(int bufopt)$/;"	f
get_wincmd_addr_type	window.c	/^get_wincmd_addr_type(char_u *arg, exarg_T *eap)$/;"	f
get_window_arg	if_mzsch.c	/^get_window_arg(const char *fname, int argnum, int argc, Scheme_Object **argv)$/;"	f	file:
get_window_buffer	if_mzsch.c	/^get_window_buffer(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
get_window_by_num	if_mzsch.c	/^get_window_by_num(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
get_window_count	if_mzsch.c	/^get_window_count(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:
get_window_height	if_mzsch.c	/^get_window_height(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
get_window_list	if_mzsch.c	/^get_window_list(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
get_window_num	if_mzsch.c	/^get_window_num(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:
get_window_width	if_mzsch.c	/^get_window_width(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
get_winnr	evalwindow.c	/^get_winnr(tabpage_T *tp, typval_T *argvar)$/;"	f	file:
get_winopts	buffer.c	/^get_winopts(buf_T *buf)$/;"	f
get_wordnode	spellfile.c	/^get_wordnode(spellinfo_T *spin)$/;"	f	file:
get_work_area	gui_w32.c	/^get_work_area(RECT *spi_rect)$/;"	f	file:
get_x11_icon	os_unix.c	/^get_x11_icon(int test_only)$/;"	f	file:
get_x11_thing	os_unix.c	/^get_x11_thing($/;"	f	file:
get_x11_title	os_unix.c	/^get_x11_title(int test_only UNUSED)$/;"	f	file:
get_x11_title	os_unix.c	/^get_x11_title(int test_only)$/;"	f	file:
get_x11_windis	os_unix.c	/^get_x11_windis(void)$/;"	f	file:
get_y_current	register.c	/^get_y_current(void)$/;"	f
get_y_previous	register.c	/^get_y_previous(void)$/;"	f
get_y_regs	register.c	/^get_y_regs(void)$/;"	f
get_yank_register	register.c	/^get_yank_register(int regname, int writing)$/;"	f
getaltfname	buffer.c	/^getaltfname($/;"	f
getargcmd	ex_docmd.c	/^getargcmd(char_u **argp)$/;"	f	file:
getargopt	ex_docmd.c	/^getargopt(exarg_T *eap)$/;"	f	file:
getchr	regexp.c	/^getchr(void)$/;"	f	file:
getcmdline	ex_getln.c	/^getcmdline($/;"	f
getcmdline_int	ex_getln.c	/^getcmdline_int($/;"	f	file:
getcmdline_prompt	ex_getln.c	/^getcmdline_prompt($/;"	f
getdecchrs	regexp.c	/^getdecchrs(void)$/;"	f	file:
getdigits	charset.c	/^getdigits(char_u **pp)$/;"	f
getdigraph	digraph.c	/^getdigraph(int char1, int char2, int meta_char)$/;"	f
getent	termlib.c	/^getent(char *tbuf, char *term, FILE *termcap, int buflen)$/;"	f	file:
getexactdigraph	digraph.c	/^getexactdigraph(int char1, int char2, int meta_char)$/;"	f	file:
getexline	ex_getln.c	/^getexline($/;"	f
getexmodeline	ex_getln.c	/^getexmodeline($/;"	f
getfile	ex_cmds.c	/^getfile($/;"	f
gethexchrs	regexp.c	/^gethexchrs(int maxinputlen)$/;"	f	file:
gethostname	os_unix.c	2401;"	d	file:
getline	ex_cmds.h	/^    char_u	*(*getline)(int, void *, int, int);$/;"	m	struct:exarg
getline	ex_docmd.c	/^    char_u	*(*getline)(int, void *, int, int);$/;"	m	struct:loop_cookie	file:
getlinecol	term.c	/^getlinecol($/;"	f
getmark	mark.c	/^getmark(int c, int changefile)$/;"	f
getmark_buf	mark.c	/^getmark_buf(buf_T *buf, int c, int changefile)$/;"	f
getmark_buf_fnum	mark.c	/^getmark_buf_fnum($/;"	f
getnextac	autocmd.c	/^getnextac(int c UNUSED, void *cookie, int indent UNUSED, int do_concat UNUSED)$/;"	f
getnextcomp	filepath.c	/^getnextcomp(char_u *fname)$/;"	f
getnextmark	mark.c	/^getnextmark($/;"	f
getoctchrs	regexp.c	/^getoctchrs(void)$/;"	f	file:
getout	main.c	/^getout(int exitval)$/;"	f
getout_preserve_modified	main.c	/^getout_preserve_modified(int exitval)$/;"	f
getpos_both	evalfunc.c	/^getpos_both($/;"	f	file:
getreg_wrap_one_line	register.c	/^getreg_wrap_one_line(char_u *s, int flags)$/;"	f	file:
getroom	spellfile.c	/^getroom($/;"	f	file:
getroom_save	spellfile.c	/^getroom_save(spellinfo_T *spin, char_u *s)$/;"	f	file:
getsourceline	scriptfile.c	/^getsourceline(int c UNUSED, void *cookie, int indent UNUSED, int do_concat)$/;"	f
gettail	filepath.c	/^gettail(char_u *fname)$/;"	f
gettail_dir	findfile.c	/^gettail_dir(char_u *fname)$/;"	f	file:
gettail_sep	filepath.c	/^gettail_sep(char_u *fname)$/;"	f
gettext_lang	ex_cmds2.c	/^gettext_lang(char_u *name)$/;"	f	file:
gettimeofday	time.c	/^gettimeofday(struct timeval *tv, char *dummy UNUSED)$/;"	f	file:
getvcol	charset.c	/^getvcol($/;"	f
getvcol_nolist	charset.c	/^getvcol_nolist(pos_T *posp)$/;"	f
getvcols	charset.c	/^getvcols($/;"	f
getviscol	misc2.c	/^getviscol(void)$/;"	f
getviscol2	misc2.c	/^getviscol2(colnr_T col, colnr_T coladd UNUSED)$/;"	f
getvpos	misc2.c	/^getvpos(pos_T *pos, colnr_T wcol)$/;"	f
getvvcol	charset.c	/^getvvcol($/;"	f
getwhitecols	charset.c	/^getwhitecols(char_u *p)$/;"	f
getwhitecols_curline	charset.c	/^getwhitecols_curline()$/;"	f
getwinvar	evalvars.c	/^getwinvar($/;"	f	file:
gfp_setname	gui.c	/^gfp_setname(char_u *fname, void *cookie)$/;"	f	file:
gint	gui_gtk_x11.c	70;"	d	file:
give_warning	message.c	/^give_warning(char_u *message, int hl)$/;"	f
give_warning2	message.c	/^give_warning2(char_u *message, char_u *a1, int hl)$/;"	f
global_alist	globals.h	/^EXTERN alist_T	global_alist;		    \/\/ global argument list$/;"	v
global_argc	os_win32.c	/^static int	global_argc = 0;$/;"	v	file:
global_argv	os_win32.c	/^static char	**global_argv;$/;"	v	file:
global_busy	globals.h	/^EXTERN int	global_busy INIT(= 0);	    \/\/ set when :global is executing$/;"	v
global_change_count	ui.c	/^static int global_change_count = 0; \/\/ if set, inside a start_global_changes$/;"	v	file:
global_event_filter	gui_gtk_x11.c	/^global_event_filter(GdkXEvent *xev,$/;"	f	file:
global_exe	ex_cmds.c	/^global_exe(char_u *cmd)$/;"	f
global_exe_one	ex_cmds.c	/^global_exe_one(char_u *cmd, linenr_T lnum)$/;"	f	file:
global_functions	evalfunc.c	/^static funcentry_T global_functions[] =$/;"	v	file:
global_need_beginline	ex_cmds.c	/^static int	global_need_beginline;	\/\/ call beginline() after ":g"$/;"	v	file:
global_proptypes	textprop.c	/^static hashtab_T *global_proptypes = NULL;$/;"	v	file:
globaldir	globals.h	/^EXTERN char_u	*globaldir INIT(= NULL);$/;"	v
globaldir	structs.h	/^    char_u	*globaldir;	\/\/ saved value of globaldir$/;"	m	struct:__anon244
globals	if_py_both.h	/^static PyObject *globals;$/;"	v
globalsignmap	netbeans.c	/^static char **globalsignmap = NULL;$/;"	v	file:
globalsignmaplen	netbeans.c	/^static int globalsignmaplen = 0;$/;"	v	file:
globalsignmapused	netbeans.c	/^static int globalsignmapused = 0;$/;"	v	file:
globpath	cmdexpand.c	/^globpath($/;"	f
globvardict	evalvars.c	/^static dict_T		globvardict;		\/\/ Dictionary with g: variables$/;"	v	file:
globvarht	evalvars.c	20;"	d	file:
globvars_var	evalvars.c	/^static dictitem_T	globvars_var;		\/\/ variable used for g:$/;"	v	file:
go_deeper	spellsuggest.c	/^go_deeper(trystate_T *stack, int depth, int score_add)$/;"	f	file:
goodi	spellsuggest.c	/^    int		goodi;$/;"	m	struct:__anon114	file:
got_code_from_term	term.c	/^got_code_from_term(char_u *code, int len)$/;"	f	file:
got_int	ex_docmd.c	/^    int		got_int;$/;"	m	struct:dbg_stuff	file:
got_int	globals.h	/^EXTERN volatile sig_atomic_t got_int INIT(= FALSE); \/\/ set to TRUE when interrupt$/;"	v
got_x_error	if_xcmdsrv.c	/^static int	got_x_error = FALSE;$/;"	v	file:
got_x_error	os_unix.c	/^static int	got_x_error = FALSE;$/;"	v	file:
gotchars	getchar.c	/^gotchars(char_u *chars, int len)$/;"	f	file:
goto_buffer	buffer.c	/^goto_buffer($/;"	f
goto_byte	memline.c	/^goto_byte(long cnt)$/;"	f
goto_im	misc1.c	/^goto_im(void)$/;"	f
goto_tabpage	window.c	/^goto_tabpage(int n)$/;"	f
goto_tabpage_tp	window.c	/^goto_tabpage_tp($/;"	f
goto_tabpage_win	window.c	/^goto_tabpage_win(tabpage_T *tp, win_T *wp)$/;"	f
gotocmdline	ex_getln.c	/^gotocmdline(int clr)$/;"	f
gotoxy	os_win32.c	/^gotoxy($/;"	f	file:
gpm_close	os_unix.c	/^gpm_close(void)$/;"	f	file:
gpm_enabled	os_unix.c	/^gpm_enabled(void)$/;"	f
gpm_open	os_unix.c	/^gpm_open(void)$/;"	f	file:
gpointer	gui_gtk.c	89;"	d	file:
gpointer	gui_gtk_x11.c	71;"	d	file:
grab_file_name	findfile.c	/^grab_file_name(long count, linenr_T *file_lnum)$/;"	f
grep_internal	quickfix.c	/^grep_internal(cmdidx_T cmdidx)$/;"	f
grey_ramp	term.c	/^static int grey_ramp[] = {$/;"	v	file:
group	autocmd.c	/^    int		    group;		\/\/ group ID$/;"	m	struct:AutoPat	file:
group	autocmd.c	/^    int		group;		\/\/ group being used$/;"	m	struct:AutoPatCmd_S	file:
growarray	structs.h	/^typedef struct growarray$/;"	s
growbuf	quickfix.c	/^    char_u	*growbuf;$/;"	m	struct:__anon89	file:
growbufsiz	quickfix.c	/^    int		growbufsiz;$/;"	m	struct:__anon89	file:
gtk_adjustment_set_lower	vim.h	2334;"	d
gtk_adjustment_set_page_increment	vim.h	2340;"	d
gtk_adjustment_set_page_size	vim.h	2338;"	d
gtk_adjustment_set_step_increment	vim.h	2342;"	d
gtk_adjustment_set_upper	vim.h	2336;"	d
gtk_form_attach_child_window	gui_gtk_f.c	/^gtk_form_attach_child_window(GtkForm *form, GtkFormChild *child)$/;"	f	file:
gtk_form_child_map	gui_gtk_f.c	/^gtk_form_child_map(GtkWidget *widget UNUSED, gpointer user_data)$/;"	f	file:
gtk_form_child_unmap	gui_gtk_f.c	/^gtk_form_child_unmap(GtkWidget *widget UNUSED, gpointer user_data)$/;"	f	file:
gtk_form_class_init	gui_gtk_f.c	/^gtk_form_class_init(GtkFormClass *klass)$/;"	f	file:
gtk_form_draw	gui_gtk_f.c	/^gtk_form_draw(GtkWidget *widget, cairo_t *cr)$/;"	f	file:
gtk_form_expose	gui_gtk_f.c	/^gtk_form_expose(GtkWidget *widget, GdkEventExpose *event)$/;"	f	file:
gtk_form_forall	gui_gtk_f.c	/^gtk_form_forall(GtkContainer	*container,$/;"	f	file:
gtk_form_freeze	gui_gtk_f.c	/^gtk_form_freeze(GtkForm *form)$/;"	f
gtk_form_get_preferred_height	gui_gtk_f.c	/^gtk_form_get_preferred_height(GtkWidget *widget,$/;"	f	file:
gtk_form_get_preferred_width	gui_gtk_f.c	/^gtk_form_get_preferred_width(GtkWidget *widget,$/;"	f	file:
gtk_form_init	gui_gtk_f.c	/^gtk_form_init(GtkForm *form)$/;"	f	file:
gtk_form_map	gui_gtk_f.c	/^gtk_form_map(GtkWidget *widget)$/;"	f	file:
gtk_form_move	gui_gtk_f.c	/^gtk_form_move(GtkForm	*form,$/;"	f
gtk_form_move_resize	gui_gtk_f.c	/^gtk_form_move_resize(GtkForm *form, GtkWidget *widget,$/;"	f
gtk_form_new	gui_gtk_f.c	/^gtk_form_new(void)$/;"	f
gtk_form_position_child	gui_gtk_f.c	/^gtk_form_position_child(GtkForm *form, GtkFormChild *child,$/;"	f	file:
gtk_form_position_children	gui_gtk_f.c	/^gtk_form_position_children(GtkForm *form)$/;"	f	file:
gtk_form_put	gui_gtk_f.c	/^gtk_form_put(GtkForm	*form,$/;"	f
gtk_form_realize	gui_gtk_f.c	/^gtk_form_realize(GtkWidget *widget)$/;"	f	file:
gtk_form_realize_child	gui_gtk_f.c	/^gtk_form_realize_child(GtkForm *form, GtkFormChild *child)$/;"	f	file:
gtk_form_remove	gui_gtk_f.c	/^gtk_form_remove(GtkContainer *container, GtkWidget *widget)$/;"	f	file:
gtk_form_render_background	gui_gtk_f.c	/^gtk_form_render_background(GtkWidget *widget, cairo_t *cr)$/;"	f	file:
gtk_form_send_configure	gui_gtk_f.c	/^gtk_form_send_configure(GtkForm *form)$/;"	f	file:
gtk_form_size_allocate	gui_gtk_f.c	/^gtk_form_size_allocate(GtkWidget *widget, GtkAllocation *allocation)$/;"	f	file:
gtk_form_size_request	gui_gtk_f.c	/^gtk_form_size_request(GtkWidget *widget, GtkRequisition *requisition)$/;"	f	file:
gtk_form_thaw	gui_gtk_f.c	/^gtk_form_thaw(GtkForm *form)$/;"	f
gtk_form_unrealize	gui_gtk_f.c	/^gtk_form_unrealize(GtkWidget *widget)$/;"	f	file:
gtk_plug_get_socket_window	vim.h	2329;"	d
gtk_sel_atom	vim.h	/^    GdkAtom     gtk_sel_atom;	\/\/ PRIMARY\/CLIPBOARD selection ID$/;"	m	struct:__anon279
gtk_selection_data_get_data	vim.h	2330;"	d
gtk_selection_data_get_data_type	vim.h	2331;"	d
gtk_selection_data_get_format	vim.h	2332;"	d
gtk_selection_data_get_length	vim.h	2333;"	d
gtk_selection_data_get_selection	vim.h	2346;"	d
gtk_settings_xft_dpi_changed_cb	gui_gtk_x11.c	/^gtk_settings_xft_dpi_changed_cb(GtkSettings *gtk_settings UNUSED,$/;"	f	file:
gtk_socket_id	globals.h	/^EXTERN guint32	gtk_socket_id INIT(= 0);$/;"	v
gtk_widget_get_allocation	vim.h	2349;"	d
gtk_widget_get_has_window	vim.h	2353;"	d
gtk_widget_get_mapped	vim.h	2370;"	d
gtk_widget_get_realized	vim.h	2371;"	d
gtk_widget_get_sensitive	vim.h	2354;"	d
gtk_widget_get_visible	vim.h	2355;"	d
gtk_widget_get_window	vim.h	2328;"	d
gtk_widget_has_focus	vim.h	2356;"	d
gtk_widget_set_allocation	vim.h	2351;"	d
gtk_widget_set_can_default	vim.h	2359;"	d
gtk_widget_set_can_focus	vim.h	2362;"	d
gtk_widget_set_mapped	vim.h	2372;"	d
gtk_widget_set_realized	vim.h	2375;"	d
gtk_widget_set_visible	vim.h	2365;"	d
gtk_widget_set_window	vim.h	2357;"	d
guaranteed_byte_string_arg	if_mzsch.c	/^guaranteed_byte_string_arg(char *proc, int num, int argc, Scheme_Object **argv)$/;"	f	file:
gui	gui.c	/^gui_T gui;$/;"	v
gui	structs.h	/^	} gui;$/;"	m	union:attr_entry::__anon196	typeref:struct:attr_entry::__anon196::__anon199
gui_T	gui.h	/^} gui_T;$/;"	t	typeref:struct:Gui
gui_add_tearoff	menu.c	/^gui_add_tearoff(char_u *tearpath, int *pri_tab, int pri_idx)$/;"	f	file:
gui_adjust_rgb	term.c	/^gui_adjust_rgb(guicolor_T c)$/;"	f	file:
gui_adjust_rgb	term.c	6147;"	d	file:
gui_argc	gui_gtk_x11.c	/^static int    gui_argc = 0;$/;"	v	file:
gui_argc	gui_x11.c	/^static int gui_argc = 0;$/;"	v	file:
gui_argv	gui_gtk_x11.c	/^static char **gui_argv = NULL;$/;"	v	file:
gui_argv	gui_x11.c	/^static char **gui_argv = NULL;$/;"	v	file:
gui_athena_create_pullright_pixmap	gui_athena.c	/^gui_athena_create_pullright_pixmap(Widget w)$/;"	f	file:
gui_athena_delayed_arm_action	gui_athena.c	/^gui_athena_delayed_arm_action($/;"	f	file:
gui_athena_menu_colors	gui_athena.c	/^gui_athena_menu_colors(Widget id)$/;"	f	file:
gui_athena_menu_font	gui_athena.c	/^gui_athena_menu_font(Widget id)$/;"	f	file:
gui_athena_menu_has_submenus	gui_athena.c	/^gui_athena_menu_has_submenus(Widget id, Widget ignore)$/;"	f	file:
gui_athena_menu_timeout	gui_athena.c	/^gui_athena_menu_timeout($/;"	f	file:
gui_athena_popdown_submenus_action	gui_athena.c	/^gui_athena_popdown_submenus_action($/;"	f	file:
gui_athena_popup_callback	gui_athena.c	/^gui_athena_popup_callback($/;"	f	file:
gui_athena_scroll_cb_jump	gui_athena.c	/^gui_athena_scroll_cb_jump($/;"	f	file:
gui_athena_scroll_cb_scroll	gui_athena.c	/^gui_athena_scroll_cb_scroll($/;"	f	file:
gui_athena_scroll_colors	gui_athena.c	/^gui_athena_scroll_colors(Widget id)$/;"	f	file:
gui_attempt_start	gui.c	/^gui_attempt_start(void)$/;"	f	file:
gui_attr_table	highlight.c	/^static garray_T	gui_attr_table = {0, 0, 0, 0, NULL};$/;"	v	file:
gui_bg_default	gui.c	/^gui_bg_default(void)$/;"	f
gui_can_update_cursor	gui.c	/^gui_can_update_cursor(void)$/;"	f
gui_check_colors	gui.c	/^gui_check_colors(void)$/;"	f
gui_check_pos	gui.c	/^gui_check_pos(void)$/;"	f	file:
gui_clear_block	gui.c	/^gui_clear_block($/;"	f
gui_create_initial_menus	menu.c	/^gui_create_initial_menus(vimmenu_T *menu)$/;"	f
gui_create_scrollbar	gui.c	/^gui_create_scrollbar(scrollbar_T *sb, int type, win_T *wp)$/;"	f
gui_create_tearoffs_recurse	menu.c	/^gui_create_tearoffs_recurse($/;"	f	file:
gui_delete_lines	gui.c	/^gui_delete_lines(int row, int count)$/;"	f	file:
gui_destroy_tearoffs_recurse	menu.c	/^gui_destroy_tearoffs_recurse(vimmenu_T *menu)$/;"	f	file:
gui_disable_flush	gui.c	/^gui_disable_flush(void)$/;"	f
gui_do_findrepl	gui.c	/^gui_do_findrepl($/;"	f
gui_do_fork	gui.c	/^gui_do_fork(void)$/;"	f	file:
gui_do_horiz_scroll	gui.c	/^gui_do_horiz_scroll(long_u leftcol, int compute_longest_lnum)$/;"	f
gui_do_one_color	highlight.c	/^gui_do_one_color($/;"	f	file:
gui_do_scroll	gui.c	/^gui_do_scroll(void)$/;"	f
gui_do_scrollbar	gui.c	/^gui_do_scrollbar($/;"	f	file:
gui_dont_update_cursor	gui.c	/^gui_dont_update_cursor(int undraw)$/;"	f
gui_drag_scrollbar	gui.c	/^gui_drag_scrollbar(scrollbar_T *sb, long value, int still_dragging)$/;"	f
gui_enable_flush	gui.c	/^gui_enable_flush(void)$/;"	f
gui_exit	gui.c	/^gui_exit(int rc)$/;"	f
gui_find_bitmap	gui.c	/^gui_find_bitmap(char_u *name, char_u *buffer, char *ext)$/;"	f
gui_find_iconfile	gui.c	/^gui_find_iconfile(char_u *name, char_u *buffer, char *ext)$/;"	f
gui_find_longest_lnum	gui.c	/^gui_find_longest_lnum(void)$/;"	f	file:
gui_find_menu	menu.c	/^gui_find_menu(char_u *path_name)$/;"	f
gui_find_scrollbar	gui.c	/^gui_find_scrollbar(long ident)$/;"	f
gui_focus_change	gui.c	/^gui_focus_change(int in_focus)$/;"	f
gui_get_base_height	gui.c	/^gui_get_base_height(void)$/;"	f
gui_get_base_width	gui.c	/^gui_get_base_width(void)$/;"	f
gui_get_color	gui.c	/^gui_get_color(char_u *name)$/;"	f
gui_get_color_cmn	term.c	/^gui_get_color_cmn(char_u *name)$/;"	f
gui_get_lightness	gui.c	/^gui_get_lightness(guicolor_T pixel)$/;"	f
gui_get_rgb_color_cmn	term.c	/^gui_get_rgb_color_cmn(int r, int g, int b)$/;"	f
gui_get_shellsize	gui.c	/^gui_get_shellsize(void)$/;"	f
gui_get_wide_font	gui.c	/^gui_get_wide_font(void)$/;"	f
gui_get_x11_windis	gui_gtk_x11.c	/^gui_get_x11_windis(Window *win, Display **dis)$/;"	f
gui_get_x11_windis	gui_x11.c	/^gui_get_x11_windis(Window *win, Display **dis)$/;"	f
gui_gtk2_draw_string	gui_gtk_x11.c	/^gui_gtk2_draw_string(int row, int col, char_u *s, int len, int flags)$/;"	f
gui_gtk3_redraw	gui_gtk_x11.c	/^gui_gtk3_redraw(int x, int y, int width, int height)$/;"	f	file:
gui_gtk3_should_draw_cursor	gui_gtk_x11.c	/^gui_gtk3_should_draw_cursor(void)$/;"	f	file:
gui_gtk3_update_cursor	gui_gtk_x11.c	/^gui_gtk3_update_cursor(cairo_t *cr)$/;"	f	file:
gui_gtk_get_pointer	gui_gtk_x11.c	/^gui_gtk_get_pointer(GtkWidget       *widget,$/;"	f	file:
gui_gtk_get_pointer	gui_gtk_x11.c	1854;"	d	file:
gui_gtk_get_pointer_device	gui_gtk_x11.c	/^gui_gtk_get_pointer_device(GtkWidget *widget)$/;"	f	file:
gui_gtk_get_screen_geom_of_win	gui_gtk_x11.c	/^gui_gtk_get_screen_geom_of_win($/;"	f
gui_gtk_is_blink_on	gui_gtk_x11.c	/^gui_gtk_is_blink_on(void)$/;"	f	file:
gui_gtk_register_stock_icons	gui_gtk.c	/^gui_gtk_register_stock_icons(void)$/;"	f
gui_gtk_set_dnd_targets	gui_gtk_x11.c	/^gui_gtk_set_dnd_targets(void)$/;"	f
gui_gtk_set_mnemonics	gui_gtk.c	/^gui_gtk_set_mnemonics(int enable)$/;"	f
gui_gtk_set_selection_targets	gui_gtk_x11.c	/^gui_gtk_set_selection_targets(void)$/;"	f
gui_gtk_surface_copy_rect	gui_gtk_x11.c	/^gui_gtk_surface_copy_rect(int dest_x, int dest_y,$/;"	f	file:
gui_gtk_window_at_position	gui_gtk_x11.c	/^gui_gtk_window_at_position(GtkWidget *widget,$/;"	f	file:
gui_gtk_window_at_position	gui_gtk_x11.c	1856;"	d	file:
gui_gtk_window_clear	gui_gtk_x11.c	/^gui_gtk_window_clear(GdkWindow *win)$/;"	f	file:
gui_gtk_window_clear	gui_gtk_x11.c	6427;"	d	file:
gui_handle_drop	gui.c	/^gui_handle_drop($/;"	f
gui_has_tabline	gui.c	/^gui_has_tabline(void)$/;"	f	file:
gui_inchar	gui.c	/^gui_inchar($/;"	f
gui_init	gui.c	/^gui_init(void)$/;"	f
gui_init_check	gui.c	/^gui_init_check(void)$/;"	f
gui_init_font	gui.c	/^gui_init_font(char_u *font_list, int fontset UNUSED)$/;"	f
gui_init_menu_font	gui_x11.c	/^gui_init_menu_font(void)$/;"	f
gui_init_tooltip_font	gui_x11.c	/^gui_init_tooltip_font(void)$/;"	f
gui_init_which_components	gui.c	/^gui_init_which_components(char_u *oldval UNUSED)$/;"	f
gui_insert_lines	gui.c	/^gui_insert_lines(int row, int count)$/;"	f	file:
gui_is_menu_shortcut	menu.c	/^gui_is_menu_shortcut(int key)$/;"	f
gui_mac_create_atsui_style	gui_mac.c	/^gui_mac_create_atsui_style(void)$/;"	f	file:
gui_mac_dispose_atsui_style	gui_mac.c	/^gui_mac_dispose_atsui_style(void)$/;"	f	file:
gui_mac_doActivateEvent	gui_mac.c	/^gui_mac_doActivateEvent(EventRecord *event)$/;"	f
gui_mac_doInContentClick	gui_mac.c	/^gui_mac_doInContentClick(EventRecord *theEvent, WindowPtr whichWindow)$/;"	f
gui_mac_doInDragClick	gui_mac.c	/^gui_mac_doInDragClick(Point where, WindowPtr whichWindow)$/;"	f
gui_mac_doInGrowClick	gui_mac.c	/^gui_mac_doInGrowClick(Point where, WindowPtr whichWindow)$/;"	f
gui_mac_doInZoomClick	gui_mac.c	/^gui_mac_doInZoomClick(EventRecord *theEvent, WindowPtr whichWindow)$/;"	f	file:
gui_mac_doKeyEvent	gui_mac.c	/^gui_mac_doKeyEvent(EventRecord *theEvent)$/;"	f
gui_mac_doMouseDownEvent	gui_mac.c	/^gui_mac_doMouseDownEvent(EventRecord *theEvent)$/;"	f
gui_mac_doMouseMovedEvent	gui_mac.c	/^gui_mac_doMouseMovedEvent(EventRecord *event)$/;"	f
gui_mac_doMouseUpEvent	gui_mac.c	/^gui_mac_doMouseUpEvent(EventRecord *theEvent)$/;"	f
gui_mac_doSuspendEvent	gui_mac.c	/^gui_mac_doSuspendEvent(EventRecord *event)$/;"	f
gui_mac_doUpdateEvent	gui_mac.c	/^gui_mac_doUpdateEvent(EventRecord *event)$/;"	f
gui_mac_drag_thumb	gui_mac.c	/^gui_mac_drag_thumb(ControlHandle theControl, short partCode)$/;"	f
gui_mac_find_font	gui_mac.c	/^gui_mac_find_font(char_u *font_name)$/;"	f
gui_mac_get_menu_item_index	gui_mac.c	/^gui_mac_get_menu_item_index(vimmenu_T *pMenu)$/;"	f
gui_mac_get_vim_menu	gui_mac.c	/^gui_mac_get_vim_menu(short menuID, short itemIndex, vimmenu_T *pMenu)$/;"	f	file:
gui_mac_handle_event	gui_mac.c	/^gui_mac_handle_event(EventRecord *event)$/;"	f
gui_mac_handle_menu	gui_mac.c	/^gui_mac_handle_menu(long menuChoice)$/;"	f
gui_mac_handle_text_input	gui_mac.c	/^gui_mac_handle_text_input($/;"	f	file:
gui_mac_handle_window_activate	gui_mac.c	/^gui_mac_handle_window_activate($/;"	f	file:
gui_mac_mouse_wheel	gui_mac.c	/^gui_mac_mouse_wheel(EventHandlerCallRef nextHandler, EventRef theEvent,$/;"	f	file:
gui_mac_scroll_action	gui_mac.c	/^gui_mac_scroll_action(ControlHandle theControl, short partCode)$/;"	f
gui_mac_select_font	gui_mac.c	/^gui_mac_select_font(char_u *font_name)$/;"	f	file:
gui_mac_set_font_attributes	gui_mac.c	/^gui_mac_set_font_attributes(GuiFont font)$/;"	f	file:
gui_mac_unicode_key_event	gui_mac.c	/^gui_mac_unicode_key_event($/;"	f	file:
gui_mac_update_input_area	gui_mac.c	/^OSStatus gui_mac_update_input_area($/;"	f	file:
gui_make_popup	gui_gtk.c	/^gui_make_popup(char_u *path_name, int mouse_pos)$/;"	f
gui_make_popup	gui_w32.c	/^gui_make_popup(char_u *path_name, int mouse_pos)$/;"	f
gui_make_tearoff	gui_w32.c	/^gui_make_tearoff(char_u *path_name)$/;"	f
gui_may_flush	gui.c	/^gui_may_flush(void)$/;"	f
gui_may_resize_shell	gui.c	/^gui_may_resize_shell(void)$/;"	f
gui_may_update_scrollbars	gui.c	/^gui_may_update_scrollbars(void)$/;"	f
gui_mch_add_menu	gui_athena.c	/^gui_mch_add_menu(vimmenu_T *menu, int idx UNUSED)$/;"	f
gui_mch_add_menu	gui_gtk.c	/^gui_mch_add_menu(vimmenu_T *menu, int idx)$/;"	f
gui_mch_add_menu	gui_mac.c	/^gui_mch_add_menu(vimmenu_T *menu, int idx)$/;"	f
gui_mch_add_menu	gui_motif.c	/^gui_mch_add_menu(vimmenu_T *menu, int idx)$/;"	f
gui_mch_add_menu	gui_photon.c	/^gui_mch_add_menu(vimmenu_T *menu, int index)$/;"	f
gui_mch_add_menu	gui_w32.c	/^gui_mch_add_menu($/;"	f
gui_mch_add_menu_item	gui_athena.c	/^gui_mch_add_menu_item(vimmenu_T *menu, int idx UNUSED)$/;"	f
gui_mch_add_menu_item	gui_gtk.c	/^gui_mch_add_menu_item(vimmenu_T *menu, int idx)$/;"	f
gui_mch_add_menu_item	gui_mac.c	/^gui_mch_add_menu_item(vimmenu_T *menu, int idx)$/;"	f
gui_mch_add_menu_item	gui_motif.c	/^gui_mch_add_menu_item(vimmenu_T *menu, int idx)$/;"	f
gui_mch_add_menu_item	gui_photon.c	/^gui_mch_add_menu_item(vimmenu_T *menu, int index)$/;"	f
gui_mch_add_menu_item	gui_w32.c	/^gui_mch_add_menu_item($/;"	f
gui_mch_adjust_charheight	gui_gtk_x11.c	/^gui_mch_adjust_charheight(void)$/;"	f
gui_mch_adjust_charheight	gui_mac.c	/^gui_mch_adjust_charheight(void)$/;"	f
gui_mch_adjust_charheight	gui_photon.c	/^gui_mch_adjust_charheight(void)$/;"	f
gui_mch_adjust_charheight	gui_w32.c	/^gui_mch_adjust_charheight(void)$/;"	f
gui_mch_adjust_charheight	gui_x11.c	/^gui_mch_adjust_charheight(void)$/;"	f
gui_mch_beep	gui_gtk_x11.c	/^gui_mch_beep(void)$/;"	f
gui_mch_beep	gui_mac.c	/^gui_mch_beep(void)$/;"	f
gui_mch_beep	gui_photon.c	/^gui_mch_beep(void)$/;"	f
gui_mch_beep	gui_w32.c	/^gui_mch_beep(void)$/;"	f
gui_mch_beep	gui_x11.c	/^gui_mch_beep(void)$/;"	f
gui_mch_browse	gui_athena.c	/^gui_mch_browse($/;"	f
gui_mch_browse	gui_gtk.c	/^gui_mch_browse(int saving UNUSED,$/;"	f
gui_mch_browse	gui_mac.c	/^gui_mch_browse($/;"	f
gui_mch_browse	gui_motif.c	/^gui_mch_browse($/;"	f
gui_mch_browse	gui_photon.c	/^gui_mch_browse($/;"	f
gui_mch_browse	gui_w32.c	/^gui_mch_browse($/;"	f
gui_mch_browsedir	gui_gtk.c	/^gui_mch_browsedir($/;"	f
gui_mch_browsedir	gui_w32.c	/^gui_mch_browsedir(char_u *title, char_u *initdir)$/;"	f
gui_mch_clear_all	gui_gtk_x11.c	/^gui_mch_clear_all(void)$/;"	f
gui_mch_clear_all	gui_mac.c	/^gui_mch_clear_all(void)$/;"	f
gui_mch_clear_all	gui_photon.c	/^gui_mch_clear_all(void)$/;"	f
gui_mch_clear_all	gui_w32.c	/^gui_mch_clear_all(void)$/;"	f
gui_mch_clear_all	gui_x11.c	/^gui_mch_clear_all(void)$/;"	f
gui_mch_clear_block	gui_gtk_x11.c	/^gui_mch_clear_block(int row1arg, int col1arg, int row2arg, int col2arg)$/;"	f
gui_mch_clear_block	gui_mac.c	/^gui_mch_clear_block(int row1, int col1, int row2, int col2)$/;"	f
gui_mch_clear_block	gui_photon.c	/^gui_mch_clear_block(int row1, int col1, int row2, int col2)$/;"	f
gui_mch_clear_block	gui_w32.c	/^gui_mch_clear_block($/;"	f
gui_mch_clear_block	gui_x11.c	/^gui_mch_clear_block($/;"	f
gui_mch_compute_footer_height	gui_motif.c	/^gui_mch_compute_footer_height(void)$/;"	f	file:
gui_mch_compute_menu_height	gui_motif.c	/^gui_mch_compute_menu_height($/;"	f
gui_mch_compute_toolbar_height	gui_athena.c	/^gui_mch_compute_toolbar_height(void)$/;"	f
gui_mch_compute_toolbar_height	gui_motif.c	/^gui_mch_compute_toolbar_height(void)$/;"	f
gui_mch_create_beval_area	gui_beval.c	/^gui_mch_create_beval_area($/;"	f
gui_mch_create_beval_area	gui_w32.c	/^gui_mch_create_beval_area($/;"	f
gui_mch_create_scrollbar	gui_athena.c	/^gui_mch_create_scrollbar($/;"	f
gui_mch_create_scrollbar	gui_gtk.c	/^gui_mch_create_scrollbar(scrollbar_T *sb, int orient)$/;"	f
gui_mch_create_scrollbar	gui_mac.c	/^gui_mch_create_scrollbar($/;"	f
gui_mch_create_scrollbar	gui_motif.c	/^gui_mch_create_scrollbar($/;"	f
gui_mch_create_scrollbar	gui_photon.c	/^gui_mch_create_scrollbar(scrollbar_T *sb, int orient)$/;"	f
gui_mch_create_scrollbar	gui_w32.c	/^gui_mch_create_scrollbar($/;"	f
gui_mch_currently_showing_beval	gui_beval.c	/^gui_mch_currently_showing_beval(void)$/;"	f
gui_mch_def_colors	gui_athena.c	/^gui_mch_def_colors(void)$/;"	f
gui_mch_def_colors	gui_motif.c	/^gui_mch_def_colors(void)$/;"	f
gui_mch_def_colors	gui_w32.c	/^gui_mch_def_colors(void)$/;"	f
gui_mch_delete_lines	gui_gtk_x11.c	/^gui_mch_delete_lines(int row, int num_lines)$/;"	f
gui_mch_delete_lines	gui_mac.c	/^gui_mch_delete_lines(int row, int num_lines)$/;"	f
gui_mch_delete_lines	gui_photon.c	/^gui_mch_delete_lines(int row, int num_lines)$/;"	f
gui_mch_delete_lines	gui_w32.c	/^gui_mch_delete_lines($/;"	f
gui_mch_delete_lines	gui_x11.c	/^gui_mch_delete_lines(int row, int num_lines)$/;"	f
gui_mch_destroy_beval_area	gui_beval.c	/^gui_mch_destroy_beval_area(BalloonEval *beval)$/;"	f
gui_mch_destroy_beval_area	gui_w32.c	/^gui_mch_destroy_beval_area(BalloonEval *beval)$/;"	f
gui_mch_destroy_menu	gui_athena.c	/^gui_mch_destroy_menu(vimmenu_T *menu)$/;"	f
gui_mch_destroy_menu	gui_gtk.c	/^gui_mch_destroy_menu(vimmenu_T *menu)$/;"	f
gui_mch_destroy_menu	gui_mac.c	/^gui_mch_destroy_menu(vimmenu_T *menu)$/;"	f
gui_mch_destroy_menu	gui_motif.c	/^gui_mch_destroy_menu(vimmenu_T *menu)$/;"	f
gui_mch_destroy_menu	gui_photon.c	/^gui_mch_destroy_menu(vimmenu_T *menu)$/;"	f
gui_mch_destroy_menu	gui_w32.c	/^gui_mch_destroy_menu(vimmenu_T *menu)$/;"	f
gui_mch_destroy_scrollbar	gui_athena.c	/^gui_mch_destroy_scrollbar(scrollbar_T *sb)$/;"	f
gui_mch_destroy_scrollbar	gui_gtk.c	/^gui_mch_destroy_scrollbar(scrollbar_T *sb)$/;"	f
gui_mch_destroy_scrollbar	gui_mac.c	/^gui_mch_destroy_scrollbar(scrollbar_T *sb)$/;"	f
gui_mch_destroy_scrollbar	gui_motif.c	/^gui_mch_destroy_scrollbar(scrollbar_T *sb)$/;"	f
gui_mch_destroy_scrollbar	gui_photon.c	/^gui_mch_destroy_scrollbar(scrollbar_T *sb)$/;"	f
gui_mch_destroy_scrollbar	gui_w32.c	/^gui_mch_destroy_scrollbar(scrollbar_T *sb)$/;"	f
gui_mch_destroy_sign	gui_gtk_x11.c	/^gui_mch_destroy_sign(void *sign)$/;"	f
gui_mch_destroy_sign	gui_w32.c	/^gui_mch_destroy_sign(void *sign)$/;"	f
gui_mch_destroy_sign	gui_x11.c	/^gui_mch_destroy_sign(void *sign)$/;"	f
gui_mch_dialog	gui_athena.c	/^gui_mch_dialog($/;"	f
gui_mch_dialog	gui_gtk.c	/^gui_mch_dialog(int	type,	    \/\/ type of dialog$/;"	f
gui_mch_dialog	gui_mac.c	/^gui_mch_dialog($/;"	f
gui_mch_dialog	gui_motif.c	/^gui_mch_dialog($/;"	f
gui_mch_dialog	gui_photon.c	/^gui_mch_dialog($/;"	f
gui_mch_dialog	gui_w32.c	/^gui_mch_dialog($/;"	f
gui_mch_disable_beval_area	gui_beval.c	/^gui_mch_disable_beval_area(BalloonEval *beval)$/;"	f
gui_mch_disable_beval_area	gui_w32.c	/^gui_mch_disable_beval_area(BalloonEval *beval UNUSED)$/;"	f
gui_mch_do_spawn	gui_w32.c	/^gui_mch_do_spawn(char_u *arg)$/;"	f
gui_mch_draw_hollow_cursor	gui_gtk_x11.c	/^gui_mch_draw_hollow_cursor(guicolor_T color)$/;"	f
gui_mch_draw_hollow_cursor	gui_mac.c	/^gui_mch_draw_hollow_cursor(guicolor_T color)$/;"	f
gui_mch_draw_hollow_cursor	gui_photon.c	/^gui_mch_draw_hollow_cursor(guicolor_T color)$/;"	f
gui_mch_draw_hollow_cursor	gui_w32.c	/^gui_mch_draw_hollow_cursor(guicolor_T color)$/;"	f
gui_mch_draw_hollow_cursor	gui_x11.c	/^gui_mch_draw_hollow_cursor(guicolor_T color)$/;"	f
gui_mch_draw_menubar	gui_gtk_x11.c	/^gui_mch_draw_menubar(void)$/;"	f
gui_mch_draw_menubar	gui_mac.c	/^gui_mch_draw_menubar(void)$/;"	f
gui_mch_draw_menubar	gui_photon.c	/^gui_mch_draw_menubar(void)$/;"	f
gui_mch_draw_menubar	gui_w32.c	/^gui_mch_draw_menubar(void)$/;"	f
gui_mch_draw_menubar	gui_x11.c	/^gui_mch_draw_menubar(void)$/;"	f
gui_mch_draw_part_cursor	gui_gtk_x11.c	/^gui_mch_draw_part_cursor(int w, int h, guicolor_T color)$/;"	f
gui_mch_draw_part_cursor	gui_mac.c	/^gui_mch_draw_part_cursor(int w, int h, guicolor_T color)$/;"	f
gui_mch_draw_part_cursor	gui_photon.c	/^gui_mch_draw_part_cursor(int w, int h, guicolor_T color)$/;"	f
gui_mch_draw_part_cursor	gui_w32.c	/^gui_mch_draw_part_cursor($/;"	f
gui_mch_draw_part_cursor	gui_x11.c	/^gui_mch_draw_part_cursor(int w, int h, guicolor_T color)$/;"	f
gui_mch_draw_string	gui_mac.c	/^gui_mch_draw_string(int row, int col, char_u *s, int len, int flags)$/;"	f
gui_mch_draw_string	gui_photon.c	/^gui_mch_draw_string(int row, int col, char_u *s, int len, int flags)$/;"	f
gui_mch_draw_string	gui_w32.c	/^gui_mch_draw_string($/;"	f
gui_mch_draw_string	gui_x11.c	/^gui_mch_draw_string($/;"	f
gui_mch_drawsign	gui_gtk_x11.c	/^gui_mch_drawsign(int row, int col, int typenr)$/;"	f
gui_mch_drawsign	gui_w32.c	/^gui_mch_drawsign(int row, int col, int typenr)$/;"	f
gui_mch_drawsign	gui_x11.c	/^gui_mch_drawsign(int row, int col, int typenr)$/;"	f
gui_mch_early_init_check	gui_gtk_x11.c	/^gui_mch_early_init_check(int give_message)$/;"	f
gui_mch_enable_beval_area	gui_beval.c	/^gui_mch_enable_beval_area(BalloonEval *beval)$/;"	f
gui_mch_enable_beval_area	gui_w32.c	/^gui_mch_enable_beval_area(BalloonEval *beval)$/;"	f
gui_mch_enable_footer	gui_motif.c	/^gui_mch_enable_footer(int showit)$/;"	f
gui_mch_enable_menu	gui_athena.c	/^gui_mch_enable_menu(int flag)$/;"	f
gui_mch_enable_menu	gui_gtk_x11.c	/^gui_mch_enable_menu(int showit)$/;"	f
gui_mch_enable_menu	gui_mac.c	/^gui_mch_enable_menu(int flag)$/;"	f
gui_mch_enable_menu	gui_motif.c	/^gui_mch_enable_menu(int flag)$/;"	f
gui_mch_enable_menu	gui_photon.c	/^gui_mch_enable_menu(int flag)$/;"	f
gui_mch_enable_menu	gui_w32.c	/^gui_mch_enable_menu(int flag)$/;"	f
gui_mch_enable_scrollbar	gui_athena.c	/^gui_mch_enable_scrollbar(scrollbar_T *sb, int flag)$/;"	f
gui_mch_enable_scrollbar	gui_gtk_x11.c	/^gui_mch_enable_scrollbar(scrollbar_T *sb, int flag)$/;"	f
gui_mch_enable_scrollbar	gui_mac.c	/^gui_mch_enable_scrollbar($/;"	f
gui_mch_enable_scrollbar	gui_motif.c	/^gui_mch_enable_scrollbar(scrollbar_T *sb, int flag)$/;"	f
gui_mch_enable_scrollbar	gui_photon.c	/^gui_mch_enable_scrollbar(scrollbar_T *sb, int flag)$/;"	f
gui_mch_enable_scrollbar	gui_w32.c	/^gui_mch_enable_scrollbar($/;"	f
gui_mch_exit	gui_gtk_x11.c	/^gui_mch_exit(int rc UNUSED)$/;"	f
gui_mch_exit	gui_mac.c	/^gui_mch_exit(int rc)$/;"	f
gui_mch_exit	gui_photon.c	/^gui_mch_exit(int rc)$/;"	f
gui_mch_exit	gui_w32.c	/^gui_mch_exit(int rc UNUSED)$/;"	f
gui_mch_exit	gui_x11.c	/^gui_mch_exit(int rc UNUSED)$/;"	f
gui_mch_find_dialog	ex_docmd.c	146;"	d	file:
gui_mch_find_dialog	gui_gtk.c	/^gui_mch_find_dialog(exarg_T *eap)$/;"	f
gui_mch_find_dialog	gui_motif.c	/^gui_mch_find_dialog(exarg_T *eap)$/;"	f
gui_mch_find_dialog	gui_w32.c	/^gui_mch_find_dialog(exarg_T *eap)$/;"	f
gui_mch_flash	gui_gtk_x11.c	/^gui_mch_flash(int msec)$/;"	f
gui_mch_flash	gui_mac.c	/^gui_mch_flash(int msec)$/;"	f
gui_mch_flash	gui_photon.c	/^gui_mch_flash(int msec)$/;"	f
gui_mch_flash	gui_w32.c	/^gui_mch_flash(int msec)$/;"	f
gui_mch_flash	gui_x11.c	/^gui_mch_flash(int msec)$/;"	f
gui_mch_flush	gui_gtk_x11.c	/^gui_mch_flush(void)$/;"	f
gui_mch_flush	gui_mac.c	/^gui_mch_flush(void)$/;"	f
gui_mch_flush	gui_photon.c	/^gui_mch_flush(void)$/;"	f
gui_mch_flush	gui_w32.c	/^gui_mch_flush(void)$/;"	f
gui_mch_flush	gui_x11.c	/^gui_mch_flush(void)$/;"	f
gui_mch_font_dialog	gui_gtk_x11.c	/^gui_mch_font_dialog(char_u *oldval)$/;"	f
gui_mch_forked	gui_gtk_x11.c	/^gui_mch_forked(void)$/;"	f
gui_mch_free_all	gui_gtk_x11.c	/^gui_mch_free_all(void)$/;"	f
gui_mch_free_font	gui_gtk_x11.c	/^gui_mch_free_font(GuiFont font)$/;"	f
gui_mch_free_font	gui_mac.c	/^gui_mch_free_font(GuiFont font)$/;"	f
gui_mch_free_font	gui_photon.c	/^gui_mch_free_font(GuiFont font)$/;"	f
gui_mch_free_font	gui_w32.c	/^gui_mch_free_font(GuiFont font)$/;"	f
gui_mch_free_font	gui_x11.c	/^gui_mch_free_font(GuiFont font)$/;"	f
gui_mch_free_fontset	gui_x11.c	/^gui_mch_free_fontset(GuiFontset fontset)$/;"	f
gui_mch_get_color	gui_gtk_x11.c	/^gui_mch_get_color(char_u *name)$/;"	f
gui_mch_get_color	gui_mac.c	/^gui_mch_get_color(char_u *name)$/;"	f
gui_mch_get_color	gui_photon.c	/^gui_mch_get_color(char_u *name)$/;"	f
gui_mch_get_color	gui_w32.c	/^gui_mch_get_color(char_u *name)$/;"	f
gui_mch_get_color	gui_x11.c	/^gui_mch_get_color(char_u *name)$/;"	f
gui_mch_get_display	gui_gtk_x11.c	/^gui_mch_get_display(void)$/;"	f
gui_mch_get_font	gui_gtk_x11.c	/^gui_mch_get_font(char_u *name, int report_error)$/;"	f
gui_mch_get_font	gui_mac.c	/^gui_mch_get_font(char_u *name, int giveErrorIfMissing)$/;"	f
gui_mch_get_font	gui_photon.c	/^gui_mch_get_font(char_u *vim_font_name, int report_error)$/;"	f
gui_mch_get_font	gui_w32.c	/^gui_mch_get_font($/;"	f
gui_mch_get_font	gui_x11.c	/^gui_mch_get_font(char_u *name, int giveErrorIfMissing)$/;"	f
gui_mch_get_fontname	gui_gtk_x11.c	/^gui_mch_get_fontname(GuiFont font, char_u *name UNUSED)$/;"	f
gui_mch_get_fontname	gui_mac.c	/^gui_mch_get_fontname(GuiFont font, char_u *name)$/;"	f
gui_mch_get_fontname	gui_photon.c	/^gui_mch_get_fontname(GuiFont font, char_u *name)$/;"	f
gui_mch_get_fontname	gui_w32.c	/^gui_mch_get_fontname(GuiFont font UNUSED, char_u *name)$/;"	f
gui_mch_get_fontname	gui_x11.c	/^gui_mch_get_fontname(GuiFont font, char_u *name)$/;"	f
gui_mch_get_fontset	gui_x11.c	/^gui_mch_get_fontset($/;"	f
gui_mch_get_rgb	gui_gtk_x11.c	/^gui_mch_get_rgb(guicolor_T pixel)$/;"	f
gui_mch_get_rgb	gui_mac.c	/^gui_mch_get_rgb(guicolor_T pixel)$/;"	f
gui_mch_get_rgb	gui_photon.c	/^gui_mch_get_rgb(guicolor_T pixel)$/;"	f
gui_mch_get_rgb	gui_w32.c	/^gui_mch_get_rgb(guicolor_T pixel)$/;"	f
gui_mch_get_rgb	gui_x11.c	/^gui_mch_get_rgb(guicolor_T pixel)$/;"	f
gui_mch_get_rgb_color	gui_gtk_x11.c	/^gui_mch_get_rgb_color(int r, int g, int b)$/;"	f
gui_mch_get_rgb_color	gui_mac.c	/^gui_mch_get_rgb_color(int r, int g, int b)$/;"	f
gui_mch_get_rgb_color	gui_photon.c	/^gui_mch_get_rgb_color(int r, int g, int b)$/;"	f
gui_mch_get_rgb_color	gui_w32.c	/^gui_mch_get_rgb_color(int r, int g, int b)$/;"	f
gui_mch_get_rgb_color	gui_x11.c	/^gui_mch_get_rgb_color(int r, int g, int b)$/;"	f
gui_mch_get_screen_dimensions	gui_gtk_x11.c	/^gui_mch_get_screen_dimensions(int *screen_w, int *screen_h)$/;"	f
gui_mch_get_screen_dimensions	gui_mac.c	/^gui_mch_get_screen_dimensions(int *screen_w, int *screen_h)$/;"	f
gui_mch_get_screen_dimensions	gui_photon.c	/^gui_mch_get_screen_dimensions(int *screen_w, int *screen_h)$/;"	f
gui_mch_get_screen_dimensions	gui_w32.c	/^gui_mch_get_screen_dimensions(int *screen_w, int *screen_h)$/;"	f
gui_mch_get_screen_dimensions	gui_x11.c	/^gui_mch_get_screen_dimensions($/;"	f
gui_mch_get_toolbar_colors	gui_athena.c	/^gui_mch_get_toolbar_colors($/;"	f
gui_mch_get_winpos	gui_gtk_x11.c	/^gui_mch_get_winpos(int *x, int *y)$/;"	f
gui_mch_get_winpos	gui_mac.c	/^gui_mch_get_winpos(int *x, int *y)$/;"	f
gui_mch_get_winpos	gui_photon.c	/^gui_mch_get_winpos(int *x, int *y)$/;"	f
gui_mch_get_winpos	gui_w32.c	/^gui_mch_get_winpos(int *x, int *y)$/;"	f
gui_mch_get_winpos	gui_x11.c	/^gui_mch_get_winpos(int *x, int *y)$/;"	f
gui_mch_getmouse	gui_gtk_x11.c	/^gui_mch_getmouse(int *x, int *y)$/;"	f
gui_mch_getmouse	gui_mac.c	/^gui_mch_getmouse(int *x, int *y)$/;"	f
gui_mch_getmouse	gui_photon.c	/^gui_mch_getmouse(int *x, int *y)$/;"	f
gui_mch_getmouse	gui_w32.c	/^gui_mch_getmouse(int *x, int *y)$/;"	f
gui_mch_getmouse	gui_x11.c	/^gui_mch_getmouse(int *x, int *y)$/;"	f
gui_mch_haskey	gui_gtk_x11.c	/^gui_mch_haskey(char_u *name)$/;"	f
gui_mch_haskey	gui_mac.c	/^gui_mch_haskey(char_u *name)$/;"	f
gui_mch_haskey	gui_photon.c	/^gui_mch_haskey(char_u *name)$/;"	f
gui_mch_haskey	gui_w32.c	/^gui_mch_haskey(char_u *name)$/;"	f
gui_mch_haskey	gui_x11.c	/^gui_mch_haskey(char_u *name)$/;"	f
gui_mch_iconify	gui_gtk_x11.c	/^gui_mch_iconify(void)$/;"	f
gui_mch_iconify	gui_mac.c	/^gui_mch_iconify(void)$/;"	f
gui_mch_iconify	gui_photon.c	/^gui_mch_iconify(void)$/;"	f
gui_mch_iconify	gui_w32.c	/^gui_mch_iconify(void)$/;"	f
gui_mch_iconify	gui_x11.c	/^gui_mch_iconify(void)$/;"	f
gui_mch_init	gui_gtk_x11.c	/^gui_mch_init(void)$/;"	f
gui_mch_init	gui_mac.c	/^gui_mch_init(void)$/;"	f
gui_mch_init	gui_photon.c	/^gui_mch_init(void)$/;"	f
gui_mch_init	gui_w32.c	/^gui_mch_init(void)$/;"	f
gui_mch_init	gui_x11.c	/^gui_mch_init(void)$/;"	f
gui_mch_init_check	gui_gtk_x11.c	/^gui_mch_init_check(void)$/;"	f
gui_mch_init_check	gui_mac.c	/^gui_mch_init_check(void)$/;"	f
gui_mch_init_check	gui_photon.c	/^gui_mch_init_check(void)$/;"	f
gui_mch_init_check	gui_x11.c	/^gui_mch_init_check(void)$/;"	f
gui_mch_init_font	gui_gtk_x11.c	/^gui_mch_init_font(char_u *font_name, int fontset UNUSED)$/;"	f
gui_mch_init_font	gui_mac.c	/^gui_mch_init_font(char_u *font_name, int fontset)$/;"	f
gui_mch_init_font	gui_photon.c	/^gui_mch_init_font(char_u *vim_font_name, int fontset)$/;"	f
gui_mch_init_font	gui_w32.c	/^gui_mch_init_font(char_u *font_name, int fontset UNUSED)$/;"	f
gui_mch_init_font	gui_x11.c	/^gui_mch_init_font($/;"	f
gui_mch_insert_lines	gui_gtk_x11.c	/^gui_mch_insert_lines(int row, int num_lines)$/;"	f
gui_mch_insert_lines	gui_mac.c	/^gui_mch_insert_lines(int row, int num_lines)$/;"	f
gui_mch_insert_lines	gui_photon.c	/^gui_mch_insert_lines(int row, int num_lines)$/;"	f
gui_mch_insert_lines	gui_w32.c	/^gui_mch_insert_lines($/;"	f
gui_mch_insert_lines	gui_x11.c	/^gui_mch_insert_lines(int row, int num_lines)$/;"	f
gui_mch_invert_rectangle	gui_gtk_x11.c	/^gui_mch_invert_rectangle(int r, int c, int nr, int nc)$/;"	f
gui_mch_invert_rectangle	gui_mac.c	/^gui_mch_invert_rectangle(int r, int c, int nr, int nc)$/;"	f
gui_mch_invert_rectangle	gui_photon.c	/^gui_mch_invert_rectangle(int row, int col, int nr, int nc)$/;"	f
gui_mch_invert_rectangle	gui_w32.c	/^gui_mch_invert_rectangle($/;"	f
gui_mch_invert_rectangle	gui_x11.c	/^gui_mch_invert_rectangle($/;"	f
gui_mch_is_blink_off	gui_gtk_x11.c	/^gui_mch_is_blink_off(void)$/;"	f
gui_mch_is_blink_off	gui_mac.c	/^gui_mch_is_blink_off(void)$/;"	f
gui_mch_is_blink_off	gui_photon.c	/^gui_mch_is_blink_off(void)$/;"	f
gui_mch_is_blink_off	gui_w32.c	/^gui_mch_is_blink_off(void)$/;"	f
gui_mch_is_blink_off	gui_x11.c	/^gui_mch_is_blink_off(void)$/;"	f
gui_mch_is_blinking	gui_gtk_x11.c	/^gui_mch_is_blinking(void)$/;"	f
gui_mch_is_blinking	gui_mac.c	/^gui_mch_is_blinking(void)$/;"	f
gui_mch_is_blinking	gui_photon.c	/^gui_mch_is_blinking(void)$/;"	f
gui_mch_is_blinking	gui_w32.c	/^gui_mch_is_blinking(void)$/;"	f
gui_mch_is_blinking	gui_x11.c	/^gui_mch_is_blinking(void)$/;"	f
gui_mch_maximized	gui_gtk_x11.c	/^gui_mch_maximized(void)$/;"	f
gui_mch_maximized	gui_w32.c	/^gui_mch_maximized(void)$/;"	f
gui_mch_menu_grey	gui_gtk_x11.c	/^gui_mch_menu_grey(vimmenu_T *menu, int grey)$/;"	f
gui_mch_menu_grey	gui_mac.c	/^gui_mch_menu_grey(vimmenu_T *menu, int grey)$/;"	f
gui_mch_menu_grey	gui_photon.c	/^gui_mch_menu_grey(vimmenu_T *menu, int grey)$/;"	f
gui_mch_menu_grey	gui_w32.c	/^gui_mch_menu_grey($/;"	f
gui_mch_menu_grey	gui_x11.c	/^gui_mch_menu_grey(vimmenu_T *menu, int grey)$/;"	f
gui_mch_menu_hidden	gui_gtk_x11.c	/^gui_mch_menu_hidden(vimmenu_T *menu, int hidden)$/;"	f
gui_mch_menu_hidden	gui_mac.c	/^gui_mch_menu_hidden(vimmenu_T *menu, int hidden)$/;"	f
gui_mch_menu_hidden	gui_photon.c	/^gui_mch_menu_hidden(vimmenu_T *menu, int hidden)$/;"	f
gui_mch_menu_hidden	gui_w32.c	/^gui_mch_menu_hidden($/;"	f
gui_mch_menu_hidden	gui_x11.c	/^gui_mch_menu_hidden(vimmenu_T *menu, int hidden)$/;"	f
gui_mch_menu_set_tip	gui_gtk.c	/^gui_mch_menu_set_tip(vimmenu_T *menu)$/;"	f
gui_mch_menu_set_tip	gui_x11.c	/^gui_mch_menu_set_tip(vimmenu_T *menu)$/;"	f
gui_mch_mousehide	gui_gtk_x11.c	/^gui_mch_mousehide(int hide)$/;"	f
gui_mch_mousehide	gui_mac.c	/^gui_mch_mousehide(int hide)$/;"	f
gui_mch_mousehide	gui_photon.c	/^gui_mch_mousehide(int hide)$/;"	f
gui_mch_mousehide	gui_w32.c	/^gui_mch_mousehide(int hide)$/;"	f
gui_mch_mousehide	gui_x11.c	/^gui_mch_mousehide($/;"	f
gui_mch_new_colors	gui_gtk_x11.c	/^gui_mch_new_colors(void)$/;"	f
gui_mch_new_colors	gui_mac.c	/^gui_mch_new_colors(void)$/;"	f
gui_mch_new_colors	gui_photon.c	/^gui_mch_new_colors(void)$/;"	f
gui_mch_new_colors	gui_w32.c	/^gui_mch_new_colors(void)$/;"	f
gui_mch_new_colors	gui_x11.c	/^gui_mch_new_colors(void)$/;"	f
gui_mch_new_menu_colors	gui_athena.c	/^gui_mch_new_menu_colors(void)$/;"	f
gui_mch_new_menu_colors	gui_motif.c	/^gui_mch_new_menu_colors(void)$/;"	f
gui_mch_new_menu_font	gui_athena.c	/^gui_mch_new_menu_font(void)$/;"	f
gui_mch_new_menu_font	gui_motif.c	/^gui_mch_new_menu_font(void)$/;"	f
gui_mch_new_tooltip_colors	gui_athena.c	/^gui_mch_new_tooltip_colors(void)$/;"	f
gui_mch_new_tooltip_colors	gui_motif.c	/^gui_mch_new_tooltip_colors(void)$/;"	f
gui_mch_new_tooltip_font	gui_athena.c	/^gui_mch_new_tooltip_font(void)$/;"	f
gui_mch_new_tooltip_font	gui_motif.c	/^gui_mch_new_tooltip_font(void)$/;"	f
gui_mch_newfont	gui_gtk_x11.c	/^gui_mch_newfont(void)$/;"	f
gui_mch_newfont	gui_w32.c	/^gui_mch_newfont(void)$/;"	f
gui_mch_open	gui_gtk_x11.c	/^gui_mch_open(void)$/;"	f
gui_mch_open	gui_mac.c	/^gui_mch_open(void)$/;"	f
gui_mch_open	gui_photon.c	/^gui_mch_open(void)$/;"	f
gui_mch_open	gui_w32.c	/^gui_mch_open(void)$/;"	f
gui_mch_open	gui_x11.c	/^gui_mch_open(void)$/;"	f
gui_mch_post_balloon	gui_beval.c	/^gui_mch_post_balloon(BalloonEval *beval, char_u *mesg)$/;"	f
gui_mch_post_balloon	gui_w32.c	/^gui_mch_post_balloon(BalloonEval *beval, char_u *mesg)$/;"	f
gui_mch_prepare	gui_gtk_x11.c	/^gui_mch_prepare(int *argc, char **argv)$/;"	f
gui_mch_prepare	gui_mac.c	/^gui_mch_prepare(int *argc, char **argv)$/;"	f
gui_mch_prepare	gui_photon.c	/^gui_mch_prepare(int *argc, char **argv)$/;"	f
gui_mch_prepare	gui_w32.c	/^gui_mch_prepare(int *argc, char **argv)$/;"	f
gui_mch_prepare	gui_x11.c	/^gui_mch_prepare(int *argc, char **argv)$/;"	f
gui_mch_recurse_tearoffs	gui_motif.c	/^gui_mch_recurse_tearoffs(vimmenu_T *menu)$/;"	f	file:
gui_mch_register_sign	gui_gtk_x11.c	/^gui_mch_register_sign(char_u *signfile)$/;"	f
gui_mch_register_sign	gui_w32.c	/^gui_mch_register_sign(char_u *signfile)$/;"	f
gui_mch_register_sign	gui_x11.c	/^gui_mch_register_sign(char_u *signfile)$/;"	f
gui_mch_replace_dialog	ex_docmd.c	147;"	d	file:
gui_mch_replace_dialog	gui_gtk.c	/^gui_mch_replace_dialog(exarg_T *eap)$/;"	f
gui_mch_replace_dialog	gui_motif.c	/^gui_mch_replace_dialog(exarg_T *eap)$/;"	f
gui_mch_replace_dialog	gui_w32.c	/^gui_mch_replace_dialog(exarg_T *eap)$/;"	f
gui_mch_reset_focus	gui_athena.c	/^gui_mch_reset_focus(void)$/;"	f	file:
gui_mch_set_bg_color	gui_gtk_x11.c	/^gui_mch_set_bg_color(guicolor_T color)$/;"	f
gui_mch_set_bg_color	gui_mac.c	/^gui_mch_set_bg_color(guicolor_T color)$/;"	f
gui_mch_set_bg_color	gui_photon.c	/^gui_mch_set_bg_color(guicolor_T color)$/;"	f
gui_mch_set_bg_color	gui_w32.c	/^gui_mch_set_bg_color(guicolor_T color)$/;"	f
gui_mch_set_bg_color	gui_x11.c	/^gui_mch_set_bg_color(guicolor_T color)$/;"	f
gui_mch_set_blinking	gui_gtk_x11.c	/^gui_mch_set_blinking(long waittime, long on, long off)$/;"	f
gui_mch_set_blinking	gui_mac.c	/^gui_mch_set_blinking(long wait, long on, long off)$/;"	f
gui_mch_set_blinking	gui_photon.c	/^gui_mch_set_blinking(long wait, long on, long off)$/;"	f
gui_mch_set_blinking	gui_w32.c	/^gui_mch_set_blinking(long wait, long on, long off)$/;"	f
gui_mch_set_blinking	gui_x11.c	/^gui_mch_set_blinking(long waittime, long on, long off)$/;"	f
gui_mch_set_curtab	gui_gtk_x11.c	/^gui_mch_set_curtab(int nr)$/;"	f
gui_mch_set_curtab	gui_mac.c	/^gui_mch_set_curtab(int nr)$/;"	f
gui_mch_set_curtab	gui_motif.c	/^gui_mch_set_curtab(int nr)$/;"	f
gui_mch_set_curtab	gui_w32.c	/^gui_mch_set_curtab(int nr)$/;"	f
gui_mch_set_dark_theme	gui_gtk_x11.c	/^gui_mch_set_dark_theme(int dark)$/;"	f
gui_mch_set_fg_color	gui_gtk_x11.c	/^gui_mch_set_fg_color(guicolor_T color)$/;"	f
gui_mch_set_fg_color	gui_mac.c	/^gui_mch_set_fg_color(guicolor_T color)$/;"	f
gui_mch_set_fg_color	gui_photon.c	/^gui_mch_set_fg_color(guicolor_T color)$/;"	f
gui_mch_set_fg_color	gui_w32.c	/^gui_mch_set_fg_color(guicolor_T color)$/;"	f
gui_mch_set_fg_color	gui_x11.c	/^gui_mch_set_fg_color(guicolor_T color)$/;"	f
gui_mch_set_font	gui_mac.c	/^gui_mch_set_font(GuiFont font)$/;"	f
gui_mch_set_font	gui_photon.c	/^gui_mch_set_font(GuiFont font)$/;"	f
gui_mch_set_font	gui_w32.c	/^gui_mch_set_font(GuiFont font)$/;"	f
gui_mch_set_font	gui_x11.c	/^gui_mch_set_font(GuiFont font)$/;"	f
gui_mch_set_fontset	gui_x11.c	/^gui_mch_set_fontset(GuiFontset fontset)$/;"	f
gui_mch_set_footer	gui_motif.c	/^gui_mch_set_footer(char_u *s)$/;"	f
gui_mch_set_foreground	gui_gtk_x11.c	/^gui_mch_set_foreground(void)$/;"	f
gui_mch_set_foreground	gui_mac.c	/^gui_mch_set_foreground(void)$/;"	f
gui_mch_set_foreground	gui_photon.c	/^gui_mch_set_foreground(void)$/;"	f
gui_mch_set_foreground	gui_w32.c	/^gui_mch_set_foreground(void)$/;"	f
gui_mch_set_foreground	gui_x11.c	/^gui_mch_set_foreground(void)$/;"	f
gui_mch_set_menu_pos	gui_athena.c	/^gui_mch_set_menu_pos($/;"	f
gui_mch_set_menu_pos	gui_mac.c	/^gui_mch_set_menu_pos(int x, int y, int w, int h)$/;"	f
gui_mch_set_menu_pos	gui_photon.c	/^gui_mch_set_menu_pos(int x, int y, int w, int h)$/;"	f
gui_mch_set_menu_pos	gui_w32.c	/^gui_mch_set_menu_pos($/;"	f
gui_mch_set_parent	gui_w32.c	/^gui_mch_set_parent(char *title)$/;"	f
gui_mch_set_rendering_options	gui_w32.c	/^gui_mch_set_rendering_options(char_u *s)$/;"	f
gui_mch_set_scrollbar_colors	gui_athena.c	/^gui_mch_set_scrollbar_colors(scrollbar_T *sb)$/;"	f
gui_mch_set_scrollbar_colors	gui_motif.c	/^gui_mch_set_scrollbar_colors(scrollbar_T *sb)$/;"	f
gui_mch_set_scrollbar_pos	gui_athena.c	/^gui_mch_set_scrollbar_pos($/;"	f
gui_mch_set_scrollbar_pos	gui_gtk.c	/^gui_mch_set_scrollbar_pos(scrollbar_T *sb, int x, int y, int w, int h)$/;"	f
gui_mch_set_scrollbar_pos	gui_mac.c	/^gui_mch_set_scrollbar_pos($/;"	f
gui_mch_set_scrollbar_pos	gui_motif.c	/^gui_mch_set_scrollbar_pos($/;"	f
gui_mch_set_scrollbar_pos	gui_photon.c	/^gui_mch_set_scrollbar_pos(scrollbar_T *sb, int x, int y, int w, int h)$/;"	f
gui_mch_set_scrollbar_pos	gui_w32.c	/^gui_mch_set_scrollbar_pos($/;"	f
gui_mch_set_scrollbar_thumb	gui_athena.c	/^gui_mch_set_scrollbar_thumb($/;"	f
gui_mch_set_scrollbar_thumb	gui_gtk.c	/^gui_mch_set_scrollbar_thumb(scrollbar_T *sb, long val, long size, long max)$/;"	f
gui_mch_set_scrollbar_thumb	gui_mac.c	/^gui_mch_set_scrollbar_thumb($/;"	f
gui_mch_set_scrollbar_thumb	gui_motif.c	/^gui_mch_set_scrollbar_thumb($/;"	f
gui_mch_set_scrollbar_thumb	gui_photon.c	/^gui_mch_set_scrollbar_thumb(scrollbar_T *sb, int val, int size, int max)$/;"	f
gui_mch_set_scrollbar_thumb	gui_w32.c	/^gui_mch_set_scrollbar_thumb($/;"	f
gui_mch_set_shellsize	gui_gtk_x11.c	/^gui_mch_set_shellsize(int width, int height,$/;"	f
gui_mch_set_shellsize	gui_mac.c	/^gui_mch_set_shellsize($/;"	f
gui_mch_set_shellsize	gui_photon.c	/^gui_mch_set_shellsize(int width, int height,$/;"	f
gui_mch_set_shellsize	gui_w32.c	/^gui_mch_set_shellsize($/;"	f
gui_mch_set_shellsize	gui_x11.c	/^gui_mch_set_shellsize($/;"	f
gui_mch_set_sp_color	gui_gtk_x11.c	/^gui_mch_set_sp_color(guicolor_T color)$/;"	f
gui_mch_set_sp_color	gui_mac.c	/^gui_mch_set_sp_color(guicolor_T color)$/;"	f
gui_mch_set_sp_color	gui_photon.c	/^gui_mch_set_sp_color(guicolor_T color)$/;"	f
gui_mch_set_sp_color	gui_w32.c	/^gui_mch_set_sp_color(guicolor_T color)$/;"	f
gui_mch_set_sp_color	gui_x11.c	/^gui_mch_set_sp_color(guicolor_T color)$/;"	f
gui_mch_set_text_area_pos	gui_athena.c	/^gui_mch_set_text_area_pos($/;"	f
gui_mch_set_text_area_pos	gui_gtk.c	/^gui_mch_set_text_area_pos(int x, int y, int w, int h)$/;"	f
gui_mch_set_text_area_pos	gui_mac.c	/^gui_mch_set_text_area_pos(int x, int y, int w, int h)$/;"	f
gui_mch_set_text_area_pos	gui_motif.c	/^gui_mch_set_text_area_pos($/;"	f
gui_mch_set_text_area_pos	gui_photon.c	/^gui_mch_set_text_area_pos(int x, int y, int w, int h)$/;"	f
gui_mch_set_text_area_pos	gui_w32.c	/^gui_mch_set_text_area_pos(int x, int y, int w, int h)$/;"	f
gui_mch_set_toolbar_pos	gui_athena.c	/^gui_mch_set_toolbar_pos($/;"	f
gui_mch_set_winpos	gui_gtk_x11.c	/^gui_mch_set_winpos(int x, int y)$/;"	f
gui_mch_set_winpos	gui_mac.c	/^gui_mch_set_winpos(int x, int y)$/;"	f
gui_mch_set_winpos	gui_photon.c	/^gui_mch_set_winpos(int x, int y)$/;"	f
gui_mch_set_winpos	gui_w32.c	/^gui_mch_set_winpos(int x, int y)$/;"	f
gui_mch_set_winpos	gui_x11.c	/^gui_mch_set_winpos(int x, int y)$/;"	f
gui_mch_setmouse	gui_gtk_x11.c	/^gui_mch_setmouse(int x, int y)$/;"	f
gui_mch_setmouse	gui_mac.c	/^gui_mch_setmouse(int x, int y)$/;"	f
gui_mch_setmouse	gui_photon.c	/^gui_mch_setmouse(int x, int y)$/;"	f
gui_mch_setmouse	gui_w32.c	/^gui_mch_setmouse(int x, int y)$/;"	f
gui_mch_setmouse	gui_x11.c	/^gui_mch_setmouse(int x, int y)$/;"	f
gui_mch_settitle	gui_gtk_x11.c	/^gui_mch_settitle(char_u *title, char_u *icon UNUSED)$/;"	f
gui_mch_settitle	gui_mac.c	/^gui_mch_settitle(char_u *title, char_u *icon)$/;"	f
gui_mch_settitle	gui_photon.c	/^gui_mch_settitle(char_u *title,	char_u *icon)$/;"	f
gui_mch_settitle	gui_w32.c	/^gui_mch_settitle($/;"	f
gui_mch_show_popupmenu	gui_athena.c	/^gui_mch_show_popupmenu(vimmenu_T *menu)$/;"	f
gui_mch_show_popupmenu	gui_gtk.c	/^gui_mch_show_popupmenu(vimmenu_T *menu)$/;"	f
gui_mch_show_popupmenu	gui_mac.c	/^gui_mch_show_popupmenu(vimmenu_T *menu)$/;"	f
gui_mch_show_popupmenu	gui_motif.c	/^gui_mch_show_popupmenu(vimmenu_T *menu UNUSED)$/;"	f
gui_mch_show_popupmenu	gui_photon.c	/^gui_mch_show_popupmenu(vimmenu_T *menu)$/;"	f
gui_mch_show_popupmenu	gui_w32.c	/^gui_mch_show_popupmenu(vimmenu_T *menu)$/;"	f
gui_mch_show_popupmenu_at	gui_w32.c	/^gui_mch_show_popupmenu_at(vimmenu_T *menu, int x, int y)$/;"	f	file:
gui_mch_show_tabline	gui_gtk_x11.c	/^gui_mch_show_tabline(int showit)$/;"	f
gui_mch_show_tabline	gui_mac.c	/^gui_mch_show_tabline(int showit)$/;"	f
gui_mch_show_tabline	gui_motif.c	/^gui_mch_show_tabline(int showit)$/;"	f
gui_mch_show_tabline	gui_w32.c	/^gui_mch_show_tabline(int showit)$/;"	f
gui_mch_show_toolbar	gui_athena.c	/^gui_mch_show_toolbar(int showit)$/;"	f
gui_mch_show_toolbar	gui_gtk_x11.c	/^gui_mch_show_toolbar(int showit)$/;"	f
gui_mch_show_toolbar	gui_motif.c	/^gui_mch_show_toolbar(int showit)$/;"	f
gui_mch_show_toolbar	gui_photon.c	/^gui_mch_show_toolbar(int showit)$/;"	f
gui_mch_show_toolbar	gui_w32.c	/^gui_mch_show_toolbar(int showit)$/;"	f
gui_mch_showing_tabline	gui_gtk_x11.c	/^gui_mch_showing_tabline(void)$/;"	f
gui_mch_showing_tabline	gui_mac.c	/^gui_mch_showing_tabline(void)$/;"	f
gui_mch_showing_tabline	gui_motif.c	/^gui_mch_showing_tabline(void)$/;"	f
gui_mch_showing_tabline	gui_w32.c	/^gui_mch_showing_tabline(void)$/;"	f
gui_mch_start_blink	gui_gtk_x11.c	/^gui_mch_start_blink(void)$/;"	f
gui_mch_start_blink	gui_mac.c	/^gui_mch_start_blink(void)$/;"	f
gui_mch_start_blink	gui_photon.c	/^gui_mch_start_blink(void)$/;"	f
gui_mch_start_blink	gui_w32.c	/^gui_mch_start_blink(void)$/;"	f
gui_mch_start_blink	gui_x11.c	/^gui_mch_start_blink(void)$/;"	f
gui_mch_stop_blink	gui_gtk_x11.c	/^gui_mch_stop_blink(int may_call_gui_update_cursor)$/;"	f
gui_mch_stop_blink	gui_mac.c	/^gui_mch_stop_blink(int may_call_gui_update_cursor)$/;"	f
gui_mch_stop_blink	gui_photon.c	/^gui_mch_stop_blink(int may_call_gui_update_cursor)$/;"	f
gui_mch_stop_blink	gui_w32.c	/^gui_mch_stop_blink(int may_call_gui_update_cursor)$/;"	f
gui_mch_stop_blink	gui_x11.c	/^gui_mch_stop_blink(int may_call_gui_update_cursor)$/;"	f
gui_mch_submenu_change	gui_athena.c	/^gui_mch_submenu_change($/;"	f	file:
gui_mch_tearoff	gui_w32.c	/^gui_mch_tearoff($/;"	f	file:
gui_mch_text_area_extra_height	gui_motif.c	/^gui_mch_text_area_extra_height(void)$/;"	f
gui_mch_toggle_tearoffs	gui_athena.c	/^gui_mch_toggle_tearoffs(int enable UNUSED)$/;"	f
gui_mch_toggle_tearoffs	gui_gtk.c	/^gui_mch_toggle_tearoffs(int enable UNUSED)$/;"	f
gui_mch_toggle_tearoffs	gui_gtk.c	/^gui_mch_toggle_tearoffs(int enable)$/;"	f
gui_mch_toggle_tearoffs	gui_mac.c	/^gui_mch_toggle_tearoffs(int enable)$/;"	f
gui_mch_toggle_tearoffs	gui_motif.c	/^gui_mch_toggle_tearoffs(int enable)$/;"	f
gui_mch_toggle_tearoffs	gui_photon.c	/^gui_mch_toggle_tearoffs(int enable)$/;"	f
gui_mch_toggle_tearoffs	menu.c	/^gui_mch_toggle_tearoffs(int enable)$/;"	f
gui_mch_uninit	gui_x11.c	/^gui_mch_uninit(void)$/;"	f
gui_mch_unmaximize	gui_gtk_x11.c	/^gui_mch_unmaximize(void)$/;"	f
gui_mch_unpost_balloon	gui_beval.c	/^gui_mch_unpost_balloon(BalloonEval *beval)$/;"	f
gui_mch_update	gui_gtk_x11.c	/^gui_mch_update(void)$/;"	f
gui_mch_update	gui_mac.c	/^gui_mch_update(void)$/;"	f
gui_mch_update	gui_photon.c	/^gui_mch_update(void)$/;"	f
gui_mch_update	gui_w32.c	/^gui_mch_update(void)$/;"	f
gui_mch_update	gui_x11.c	/^gui_mch_update(void)$/;"	f
gui_mch_update_tabline	gui_gtk_x11.c	/^gui_mch_update_tabline(void)$/;"	f
gui_mch_update_tabline	gui_mac.c	/^gui_mch_update_tabline(void)$/;"	f
gui_mch_update_tabline	gui_motif.c	/^gui_mch_update_tabline(void)$/;"	f
gui_mch_update_tabline	gui_w32.c	/^gui_mch_update_tabline(void)$/;"	f
gui_mch_wait_for_chars	gui_gtk_x11.c	/^gui_mch_wait_for_chars(long wtime)$/;"	f
gui_mch_wait_for_chars	gui_mac.c	/^gui_mch_wait_for_chars(int wtime)$/;"	f
gui_mch_wait_for_chars	gui_photon.c	/^gui_mch_wait_for_chars(int wtime)$/;"	f
gui_mch_wait_for_chars	gui_w32.c	/^gui_mch_wait_for_chars(int wtime)$/;"	f
gui_mch_wait_for_chars	gui_x11.c	/^gui_mch_wait_for_chars(long wtime)$/;"	f
gui_mch_wide_font_changed	gui_w32.c	/^gui_mch_wide_font_changed(void)$/;"	f
gui_menu_cb	gui.c	/^gui_menu_cb(vimmenu_T *menu)$/;"	f
gui_motif_add_actext	gui_motif.c	/^gui_motif_add_actext(vimmenu_T *menu)$/;"	f	file:
gui_motif_create_fontlist	gui_motif.c	/^gui_motif_create_fontlist(XFontStruct *font)$/;"	f
gui_motif_fontset2fontlist	gui_motif.c	/^gui_motif_fontset2fontlist(XFontSet *fontset)$/;"	f
gui_motif_menu_colors	gui_motif.c	/^gui_motif_menu_colors(Widget id)$/;"	f	file:
gui_motif_menu_fontlist	gui_motif.c	/^gui_motif_menu_fontlist(Widget id UNUSED)$/;"	f
gui_motif_scroll_colors	gui_motif.c	/^gui_motif_scroll_colors(Widget id)$/;"	f	file:
gui_motif_set_mnemonics	gui_motif.c	/^gui_motif_set_mnemonics(int enable)$/;"	f
gui_motif_synch_fonts	gui_motif.c	/^gui_motif_synch_fonts(void)$/;"	f
gui_motif_update_mousemodel	gui_motif.c	/^gui_motif_update_mousemodel(vimmenu_T *menu)$/;"	f
gui_mouse_correct	gui.c	/^gui_mouse_correct(void)$/;"	f
gui_mouse_focus	gui.c	/^gui_mouse_focus(int x, int y)$/;"	f	file:
gui_mouse_moved	gui.c	/^gui_mouse_moved(int x, int y)$/;"	f
gui_mouse_window	gui.c	/^gui_mouse_window(mouse_find_T popup)$/;"	f
gui_mswin_find_menu	gui_w32.c	/^gui_mswin_find_menu($/;"	f	file:
gui_mswin_find_scrollbar	gui_w32.c	/^gui_mswin_find_scrollbar(HWND hwnd)$/;"	f	file:
gui_mswin_get_menu_height	gui_w32.c	/^gui_mswin_get_menu_height($/;"	f	file:
gui_mswin_get_valid_dimensions	gui_w32.c	/^gui_mswin_get_valid_dimensions($/;"	f	file:
gui_mswin_rm_blink_timer	gui_w32.c	/^gui_mswin_rm_blink_timer(void)$/;"	f	file:
gui_new_scrollbar_colors	gui.c	/^gui_new_scrollbar_colors(void)$/;"	f
gui_new_shellsize	gui.c	/^gui_new_shellsize(void)$/;"	f
gui_outstr	gui.c	/^gui_outstr(char_u *s, int len)$/;"	f	file:
gui_outstr_nowrap	gui.c	/^gui_outstr_nowrap($/;"	f	file:
gui_ph_dialog_close	gui_photon.c	/^gui_ph_dialog_close(int button, void *data)$/;"	f	file:
gui_ph_dialog_esc	gui_photon.c	/^gui_ph_dialog_esc(PtWidget_t *widget, void *data, PtCallbackInfo_t *info)$/;"	f	file:
gui_ph_dialog_text	gui_photon.c	/^static PtWidget_t *gui_ph_dialog_text = NULL;$/;"	v	file:
gui_ph_dialog_text_enter	gui_photon.c	/^gui_ph_dialog_text_enter(PtWidget_t *widget, void *data, PtCallbackInfo_t *info)$/;"	f	file:
gui_ph_draw_end	gui_photon.c	/^gui_ph_draw_end(void)$/;"	f	file:
gui_ph_draw_start	gui_photon.c	/^gui_ph_draw_start(void)$/;"	f	file:
gui_ph_encoding_changed	gui_photon.c	/^gui_ph_encoding_changed(int new_encoding)$/;"	f
gui_ph_find_buffer_item	gui_photon.c	/^gui_ph_find_buffer_item(char_u *name)$/;"	f	file:
gui_ph_get_font	gui_photon.c	/^gui_ph_get_font($/;"	f	file:
gui_ph_get_panelgroup_margins	gui_photon.c	/^gui_ph_get_panelgroup_margins($/;"	f	file:
gui_ph_handle_buffer_remove	gui_photon.c	/^gui_ph_handle_buffer_remove($/;"	f	file:
gui_ph_handle_focus	gui_photon.c	/^gui_ph_handle_focus(PtWidget_t *widget, void *data, PtCallbackInfo_t *info)$/;"	f	file:
gui_ph_handle_focus	gui_photon.c	/^static PtCallbackF_t gui_ph_handle_focus;	\/\/ focus change of text area$/;"	v	file:
gui_ph_handle_keyboard	gui_photon.c	/^gui_ph_handle_keyboard(PtWidget_t *widget, void *data, PtCallbackInfo_t *info)$/;"	f	file:
gui_ph_handle_keyboard	gui_photon.c	/^static PtCallbackF_t gui_ph_handle_keyboard;$/;"	v	file:
gui_ph_handle_menu	gui_photon.c	/^gui_ph_handle_menu(PtWidget_t *widget, void *data, PtCallbackInfo_t *info)$/;"	f	file:
gui_ph_handle_menu	gui_photon.c	/^static PtCallbackF_t gui_ph_handle_menu;$/;"	v	file:
gui_ph_handle_menu_resize	gui_photon.c	/^gui_ph_handle_menu_resize($/;"	f	file:
gui_ph_handle_menu_resize	gui_photon.c	/^static PtCallbackF_t gui_ph_handle_menu_resize;$/;"	v	file:
gui_ph_handle_menu_unrealized	gui_photon.c	/^gui_ph_handle_menu_unrealized($/;"	f	file:
gui_ph_handle_menu_unrealized	gui_photon.c	/^static PtCallbackF_t gui_ph_handle_menu_unrealized;$/;"	v	file:
gui_ph_handle_mouse	gui_photon.c	/^gui_ph_handle_mouse(PtWidget_t *widget, void *data, PtCallbackInfo_t *info)$/;"	f	file:
gui_ph_handle_mouse	gui_photon.c	/^static PtCallbackF_t gui_ph_handle_mouse;$/;"	v	file:
gui_ph_handle_pg_change	gui_photon.c	/^gui_ph_handle_pg_change($/;"	f	file:
gui_ph_handle_pulldown_menu	gui_photon.c	/^gui_ph_handle_pulldown_menu($/;"	f	file:
gui_ph_handle_pulldown_menu	gui_photon.c	/^static PtCallbackF_t gui_ph_handle_pulldown_menu;$/;"	v	file:
gui_ph_handle_raw_draw	gui_photon.c	/^gui_ph_handle_raw_draw(PtWidget_t *widget, PhTile_t *damage)$/;"	f	file:
gui_ph_handle_scrollbar	gui_photon.c	/^gui_ph_handle_scrollbar(PtWidget_t *widget, void *data, PtCallbackInfo_t *info)$/;"	f	file:
gui_ph_handle_scrollbar	gui_photon.c	/^static PtCallbackF_t gui_ph_handle_scrollbar;$/;"	v	file:
gui_ph_handle_timer_cursor	gui_photon.c	/^gui_ph_handle_timer_cursor($/;"	f	file:
gui_ph_handle_timer_cursor	gui_photon.c	/^static PtCallbackF_t gui_ph_handle_timer_cursor;$/;"	v	file:
gui_ph_handle_timer_timeout	gui_photon.c	/^gui_ph_handle_timer_timeout(PtWidget_t *widget, void *data, PtCallbackInfo_t *info)$/;"	f	file:
gui_ph_handle_timer_timeout	gui_photon.c	/^static PtCallbackF_t gui_ph_handle_timer_timeout;$/;"	v	file:
gui_ph_handle_window_cb	gui_photon.c	/^gui_ph_handle_window_cb(PtWidget_t *widget, void *data, PtCallbackInfo_t *info)$/;"	f	file:
gui_ph_handle_window_cb	gui_photon.c	/^static PtCallbackF_t gui_ph_handle_window_cb;$/;"	v	file:
gui_ph_handle_window_open	gui_photon.c	/^gui_ph_handle_window_open($/;"	f	file:
gui_ph_is_buffer_item	gui_photon.c	/^gui_ph_is_buffer_item(vimmenu_T *menu, vimmenu_T *parent)$/;"	f	file:
gui_ph_mouse_color	gui_photon.c	/^static PgColor_t gui_ph_mouse_color =	Pg_BLACK;$/;"	v	file:
gui_ph_pane_resize	gui_photon.c	/^gui_ph_pane_resize(PtWidget_t *widget, void *data, PtCallbackInfo_t *info)$/;"	f	file:
gui_ph_parse_font_name	gui_photon.c	/^gui_ph_parse_font_name($/;"	f	file:
gui_ph_pg_add_buffer	gui_photon.c	/^gui_ph_pg_add_buffer(char *name)$/;"	f	file:
gui_ph_pg_remove_buffer	gui_photon.c	/^gui_ph_pg_remove_buffer(char *name)$/;"	f	file:
gui_ph_pg_set_buffer_num	gui_photon.c	/^gui_ph_pg_set_buffer_num(int_u buf_num)$/;"	f	file:
gui_ph_position_menu	gui_photon.c	/^gui_ph_position_menu(PtWidget_t *widget, int priority)$/;"	f	file:
gui_ph_raw_offset	gui_photon.c	/^static PhPoint_t    gui_ph_raw_offset;$/;"	v	file:
gui_ph_resize_container	gui_photon.c	/^gui_ph_resize_container(void)$/;"	f	file:
gui_ph_show_tooltip	gui_photon.c	/^static PtWidget_t * gui_ph_show_tooltip(PtWidget_t *window,$/;"	f	file:
gui_ph_timer_cursor	gui_photon.c	/^static PtWidget_t   *gui_ph_timer_cursor;   \/\/ handle cursor blinking$/;"	v	file:
gui_ph_timer_timeout	gui_photon.c	/^static PtWidget_t   *gui_ph_timer_timeout;  \/\/ used in gui_mch_wait_for_chars$/;"	v	file:
gui_ph_toolbar_find_icon	gui_photon.c	/^gui_ph_toolbar_find_icon(vimmenu_T *menu)$/;"	f	file:
gui_ph_toolbar_images	gui_photon.c	/^static PhImage_t *gui_ph_toolbar_images[] = {$/;"	v	file:
gui_ph_toolbar_load_icon	gui_photon.c	/^gui_ph_toolbar_load_icon(char_u *iconfile)$/;"	f	file:
gui_position_components	gui.c	/^gui_position_components(int total_width UNUSED)$/;"	f	file:
gui_position_menu	gui.c	/^gui_position_menu(void)$/;"	f
gui_prepare	gui.c	/^gui_prepare(int *argc, char **argv)$/;"	f
gui_prev_topfill	globals.h	/^EXTERN int	gui_prev_topfill INIT(= 0);$/;"	v
gui_prev_topline	globals.h	/^EXTERN linenr_T gui_prev_topline INIT(= 0);$/;"	v
gui_read_child_pipe	gui.c	/^gui_read_child_pipe(int fd)$/;"	f	file:
gui_redraw	gui.c	/^gui_redraw($/;"	f
gui_redraw_block	gui.c	/^gui_redraw_block($/;"	f
gui_remove_scrollbars	gui.c	/^gui_remove_scrollbars(void)$/;"	f
gui_reset_scroll_region	gui.c	/^gui_reset_scroll_region(void)$/;"	f	file:
gui_resize_shell	gui.c	/^gui_resize_shell(int pixel_width, int pixel_height)$/;"	f
gui_screenchar	gui.c	/^gui_screenchar($/;"	f	file:
gui_screenstr	gui.c	/^gui_screenstr($/;"	f	file:
gui_send_mouse_event	gui.c	/^gui_send_mouse_event($/;"	f
gui_set_bg_color	gui.c	/^gui_set_bg_color(char_u *name)$/;"	f	file:
gui_set_cursor	gui.c	/^gui_set_cursor(int row, int col)$/;"	f	file:
gui_set_fg_color	gui.c	/^gui_set_fg_color(char_u *name)$/;"	f	file:
gui_set_shellsize	gui.c	/^gui_set_shellsize($/;"	f
gui_shell_closed	gui.c	/^gui_shell_closed(void)$/;"	f
gui_start	gui.c	/^gui_start(char_u *arg UNUSED)$/;"	f
gui_start_highlight	gui.c	/^gui_start_highlight(int mask)$/;"	f	file:
gui_stop_highlight	gui.c	/^gui_stop_highlight(int mask)$/;"	f
gui_undraw_cursor	gui.c	/^gui_undraw_cursor(void)$/;"	f
gui_update_cursor	gui.c	/^gui_update_cursor($/;"	f
gui_update_cursor_later	gui.c	/^gui_update_cursor_later(void)$/;"	f
gui_update_horiz_scrollbar	gui.c	/^gui_update_horiz_scrollbar(int force)$/;"	f	file:
gui_update_menus	menu.c	/^gui_update_menus(int modes)$/;"	f
gui_update_menus_recurse	menu.c	/^gui_update_menus_recurse(vimmenu_T *menu, int mode)$/;"	f	file:
gui_update_screen	gui.c	/^gui_update_screen(void)$/;"	f
gui_update_scrollbars	gui.c	/^gui_update_scrollbars($/;"	f
gui_update_tabline	gui.c	/^gui_update_tabline(void)$/;"	f
gui_use_tabline	gui.c	/^gui_use_tabline(void)$/;"	f
gui_w32_get_menu_font	gui_w32.c	/^gui_w32_get_menu_font(LOGFONTW *lf)$/;"	f	file:
gui_wait_for_chars	gui.c	/^gui_wait_for_chars(long wtime, int tb_change_cnt)$/;"	f
gui_wait_for_chars_3	gui.c	/^gui_wait_for_chars_3($/;"	f	file:
gui_wait_for_chars_buf	gui.c	/^gui_wait_for_chars_buf($/;"	f	file:
gui_wait_for_chars_or_timer	gui.c	/^gui_wait_for_chars_or_timer($/;"	f	file:
gui_win_pos_T	gui.h	/^} gui_win_pos_T;$/;"	t	typeref:enum:__anon145
gui_win_x	globals.h	/^EXTERN int	gui_win_x INIT(= -1);$/;"	v
gui_win_y	globals.h	/^EXTERN int	gui_win_y INIT(= -1);$/;"	v
gui_wingoto_xy	gui.c	/^gui_wingoto_xy(int x, int y)$/;"	f	file:
gui_write	gui.c	/^gui_write($/;"	f
gui_x11_blink_cb	gui_x11.c	/^gui_x11_blink_cb($/;"	f	file:
gui_x11_callbacks	gui_x11.c	/^gui_x11_callbacks(Widget textArea, Widget vimForm)$/;"	f
gui_x11_check_copy_area	gui_x11.c	/^gui_x11_check_copy_area(void)$/;"	f	file:
gui_x11_create_blank_mouse	gui_x11.c	/^gui_x11_create_blank_mouse(void)$/;"	f	file:
gui_x11_create_widgets	gui_athena.c	/^gui_x11_create_widgets(void)$/;"	f
gui_x11_create_widgets	gui_motif.c	/^gui_x11_create_widgets(void)$/;"	f
gui_x11_destroy_widgets	gui_athena.c	/^gui_x11_destroy_widgets(void)$/;"	f
gui_x11_destroy_widgets	gui_motif.c	/^gui_x11_destroy_widgets(void)$/;"	f
gui_x11_enter_cb	gui_x11.c	/^gui_x11_enter_cb($/;"	f	file:
gui_x11_expose_cb	gui_x11.c	/^gui_x11_expose_cb($/;"	f	file:
gui_x11_focus_change_cb	gui_x11.c	/^gui_x11_focus_change_cb($/;"	f	file:
gui_x11_get_last_mouse_event	gui_x11.c	/^gui_x11_get_last_mouse_event(void)$/;"	f
gui_x11_get_wid	gui_athena.c	/^gui_x11_get_wid(void)$/;"	f
gui_x11_get_wid	gui_motif.c	/^gui_x11_get_wid(void)$/;"	f
gui_x11_key_hit_cb	gui_x11.c	/^gui_x11_key_hit_cb($/;"	f
gui_x11_leave_cb	gui_x11.c	/^gui_x11_leave_cb($/;"	f	file:
gui_x11_menu_cb	gui_x11.c	/^gui_x11_menu_cb($/;"	f
gui_x11_mouse_cb	gui_x11.c	/^gui_x11_mouse_cb($/;"	f	file:
gui_x11_resize_window_cb	gui_x11.c	/^gui_x11_resize_window_cb($/;"	f	file:
gui_x11_send_event_handler	gui_x11.c	/^gui_x11_send_event_handler($/;"	f	file:
gui_x11_set_back_color	gui_athena.c	/^gui_x11_set_back_color(void)$/;"	f
gui_x11_set_back_color	gui_motif.c	/^gui_x11_set_back_color(void)$/;"	f
gui_x11_timer_cb	gui_x11.c	/^gui_x11_timer_cb($/;"	f	file:
gui_x11_visibility_cb	gui_x11.c	/^gui_x11_visibility_cb($/;"	f	file:
gui_x11_wm_protocol_handler	gui_x11.c	/^gui_x11_wm_protocol_handler($/;"	f	file:
gui_xm_select_font	gui_xmdlg.c	/^gui_xm_select_font(char_u *current)$/;"	f
gui_xy2colrow	gui.c	/^gui_xy2colrow(int x, int y, int *colp)$/;"	f	file:
guicolor_T	gui.h	/^typedef long	    guicolor_T;	\/\/ handle for a GUI color; for X11 this should$/;"	t
guicolor_T	structs.h	115;"	d
guint	gui_gtk_x11.c	72;"	d	file:
guint8	gui_gtk.c	90;"	d	file:
gvim_error	gui_w32.c	/^gvim_error(void)$/;"	f	file:
hDlgPrint	os_mswin.c	/^static HWND		hDlgPrint;$/;"	v	file:
hIconvDLL	mbyte.c	/^static HINSTANCE hIconvDLL = 0;$/;"	v	file:
hImage	gui_w32.c	/^    HANDLE	hImage;$/;"	m	struct:_signicon_t	file:
hLibImm	gui_w32.c	/^static HINSTANCE hLibImm = NULL;$/;"	v	file:
hLibintlDLL	os_win32.c	/^static HINSTANCE hLibintlDLL = NULL;$/;"	v	file:
hMsvcrtDLL	mbyte.c	/^static HINSTANCE hMsvcrtDLL = 0;$/;"	v	file:
hMzGC	if_mzsch.c	/^static HINSTANCE hMzGC = 0;$/;"	v	file:
hMzSch	if_mzsch.c	/^static HINSTANCE hMzSch = 0;$/;"	v	file:
hOrigin	gui_at_fs.c	/^    int		hOrigin;$/;"	m	struct:__anon32	file:
hProc	if_cscope.h	/^    HANDLE	    hProc;	\/\/ cscope process handle$/;"	m	struct:csi
hShape	gui_w32.c	/^    HANDLE	hShape;	\/\/ Mask bitmap handle$/;"	m	struct:_signicon_t	file:
hTclLib	if_tcl.c	/^static HANDLE hTclLib = NULL;$/;"	v	file:
hWinPtyDLL	terminal.c	/^static HINSTANCE hWinPtyDLL = NULL;$/;"	v	file:
had_end	fold.c	/^    int		had_end;	\/\/ level of fold that is forced to end above$/;"	m	struct:__anon29	file:
had_endbrace	regexp_bt.c	/^static char_u	had_endbrace[NSUBEXP];	\/\/ flags, TRUE if end of () found$/;"	v	file:
had_eol	regexp.c	/^static int	had_eol;	\/\/ TRUE when EOL found by vim_regcomp()$/;"	v	file:
halfpage	move.c	/^halfpage(int flag, linenr_T Prenum)$/;"	f
handle_any_postponed_drop	ex_docmd.c	/^handle_any_postponed_drop(void)$/;"	f
handle_call_command	terminal.c	/^handle_call_command(term_T *term, channel_T *channel, listitem_T *item)$/;"	f	file:
handle_damage	terminal.c	/^handle_damage(VTermRect rect, void *user)$/;"	f	file:
handle_drop	ex_docmd.c	/^handle_drop($/;"	f
handle_drop_command	terminal.c	/^handle_drop_command(listitem_T *item)$/;"	f	file:
handle_drop_internal	ex_docmd.c	/^handle_drop_internal(void)$/;"	f	file:
handle_focus_event	os_win32.c	/^handle_focus_event(INPUT_RECORD ir)$/;"	f	file:
handle_import	vim9script.c	/^handle_import(char_u *arg_start, garray_T *gap, int import_sid)$/;"	f
handle_io	channel.c	/^handle_io(typval_T *item, ch_part_T part, jobopt_T *opt)$/;"	f	file:
handle_key_queue	netbeans.c	/^handle_key_queue(void)$/;"	f	file:
handle_mapping	getchar.c	/^handle_mapping($/;"	f	file:
handle_mode	channel.c	/^handle_mode(typval_T *item, jobopt_T *opt, ch_mode_T *modep, int jo)$/;"	f	file:
handle_movecursor	terminal.c	/^handle_movecursor($/;"	f	file:
handle_moved_argument	popupwin.c	/^handle_moved_argument(win_T *wp, dictitem_T *di, int mousemoved)$/;"	f	file:
handle_moverect	terminal.c	/^handle_moverect(VTermRect dest, VTermRect src, void *user)$/;"	f	file:
handle_postponed_scrollback	terminal.c	/^handle_postponed_scrollback(term_T *term)$/;"	f	file:
handle_pushline	terminal.c	/^handle_pushline(int cols, const VTermScreenCell *cells, void *user)$/;"	f	file:
handle_resize	os_unix.c	/^handle_resize(void)$/;"	f	file:
handle_resize	terminal.c	/^handle_resize(int rows, int cols, void *user)$/;"	f	file:
handle_settermprop	terminal.c	/^handle_settermprop($/;"	f	file:
handle_subscript	eval.c	/^handle_subscript($/;"	f
handle_swap_exists	buffer.c	/^handle_swap_exists(bufref_T *old_curbuf)$/;"	f
handle_tabmenu	normal.c	/^handle_tabmenu(void)$/;"	f
handle_viminfo_history	viminfo.c	/^handle_viminfo_history($/;"	f	file:
handle_viminfo_mark	viminfo.c	/^handle_viminfo_mark(garray_T *values, int force)$/;"	f	file:
handle_viminfo_register	viminfo.c	/^handle_viminfo_register(garray_T *values, int force)$/;"	f	file:
handle_x_keys	misc2.c	/^handle_x_keys(int key)$/;"	f
handler_id	gui.h	/^    unsigned long handler_id;   \/\/ Id of "value_changed" signal handler$/;"	m	struct:GuiScrollbar
handler_routine	os_win32.c	/^handler_routine($/;"	f	file:
hardcopy_line	hardcopy.c	/^hardcopy_line($/;"	f	file:
hasAnyFolding	fold.c	/^hasAnyFolding(win_T *win)$/;"	f
hasFolding	fold.c	/^hasFolding(linenr_T lnum, linenr_T *firstp, linenr_T *lastp)$/;"	f
hasFoldingWin	fold.c	/^hasFoldingWin($/;"	f
has_any_channel	channel.c	/^has_any_channel(void)$/;"	f
has_any_sound_callback	sound.c	/^has_any_sound_callback(void)$/;"	f
has_autocmd	autocmd.c	/^has_autocmd(event_T event, char_u *sfname, buf_T *buf)$/;"	f
has_backref	regexp.h	/^    int			has_backref;	\/\/ pattern contains \\1 .. \\9$/;"	m	struct:__anon174
has_charset	hardcopy.c	/^    int		has_charset;$/;"	m	struct:prt_ps_charset_S	file:
has_cmdundefined	autocmd.c	/^has_cmdundefined(void)$/;"	f
has_color	structs.h	/^    int		has_color;$/;"	m	struct:__anon247
has_compl_option	insexpand.c	/^has_compl_option(int dict_opt)$/;"	f
has_completechanged	autocmd.c	/^has_completechanged(void)$/;"	f
has_conpty	terminal.c	/^static BOOL has_conpty = FALSE;$/;"	v	file:
has_conpty_working	os_win32.c	/^has_conpty_working(void)$/;"	f
has_cont_list	syntax.c	/^    char	has_cont_list;	\/\/ TRUE if "cont_list" can be used$/;"	m	struct:__anon115	file:
has_count	ex_docmd.c	/^    int		has_count;  \/\/ :123verbose  :3tab$/;"	m	struct:cmdmod	file:
has_csbiex	os_win32.c	/^static BOOL has_csbiex = FALSE;$/;"	v	file:
has_cursorhold	autocmd.c	/^has_cursorhold(void)$/;"	f	file:
has_cursormoved	autocmd.c	/^has_cursormoved(void)$/;"	f
has_cursormovedI	autocmd.c	/^has_cursormovedI(void)$/;"	f
has_dash_c_arg	main.c	/^static int has_dash_c_arg = FALSE;$/;"	v	file:
has_env_var	filepath.c	/^has_env_var(char_u *p)$/;"	f	file:
has_format_option	option.c	/^has_format_option(int x)$/;"	f
has_funcundefined	autocmd.c	/^has_funcundefined(void)$/;"	f
has_gvim	dosinst.c	/^int	has_gvim = 0;		\/\/ installable gvim.exe exists$/;"	v
has_insertcharpre	autocmd.c	/^has_insertcharpre(void)$/;"	f
has_internal_func	evalfunc.c	/^has_internal_func(char_u *name)$/;"	f
has_loop_cmd	ex_eval.c	/^has_loop_cmd(char_u *p)$/;"	f
has_mbyte	globals.h	/^EXTERN int	has_mbyte INIT(= 0);		\/\/ any multi-byte encoding$/;"	v
has_mouse_termcode	mouse.c	/^static int has_mouse_termcode = 0;$/;"	v	file:
has_non_ascii	misc2.c	/^has_non_ascii(char_u *s)$/;"	f
has_patch	version.c	/^has_patch(int n)$/;"	f
has_pending_job	channel.c	/^has_pending_job(void)$/;"	f
has_pim	regexp_nfa.c	/^    int		    has_pim;	\/\/ TRUE when any state has a PIM$/;"	m	struct:__anon108	file:
has_profiling	debugger.c	/^has_profiling($/;"	f
has_sound_callback_in_queue	sound.c	/^has_sound_callback_in_queue(void)$/;"	f
has_special_wildchar	filepath.c	/^has_special_wildchar(char_u *p)$/;"	f	file:
has_state_with_pos	regexp_nfa.c	/^has_state_with_pos($/;"	f	file:
has_submenu	gui_athena.c	/^has_submenu(Widget widget)$/;"	f	file:
has_textchanged	autocmd.c	/^has_textchanged(void)$/;"	f
has_textchangedI	autocmd.c	/^has_textchangedI(void)$/;"	f
has_textchangedP	autocmd.c	/^has_textchangedP(void)$/;"	f
has_textyankpost	autocmd.c	/^has_textyankpost(void)$/;"	f
has_varargs	userfunc.c	/^has_varargs(ufunc_T *ufunc)$/;"	f
has_vim	dosinst.c	/^int	has_vim = 0;		\/\/ installable vim.exe exists$/;"	v
has_vtp_working	os_win32.c	/^has_vtp_working(void)$/;"	f
has_watchexpr	debugger.c	/^has_watchexpr(void)$/;"	f
has_winpty	terminal.c	/^static BOOL has_winpty = FALSE;$/;"	v	file:
has_zend	regexp.h	/^    int			has_zend;	\/\/ pattern contains \\ze$/;"	m	struct:__anon174
hash_T	structs.h	/^typedef long_u hash_T;		\/\/ Type for hi_hash$/;"	t
hash_add	hashtab.c	/^hash_add(hashtab_T *ht, char_u *key)$/;"	f
hash_add_item	hashtab.c	/^hash_add_item($/;"	f
hash_clear	hashtab.c	/^hash_clear(hashtab_T *ht)$/;"	f
hash_clear_all	hashtab.c	/^hash_clear_all(hashtab_T *ht, int off)$/;"	f
hash_debug_results	hashtab.c	/^hash_debug_results(void)$/;"	f
hash_find	hashtab.c	/^hash_find(hashtab_T *ht, char_u *key)$/;"	f
hash_hash	hashtab.c	/^hash_hash(char_u *key)$/;"	f
hash_init	hashtab.c	/^hash_init(hashtab_T *ht)$/;"	f
hash_lock	hashtab.c	/^hash_lock(hashtab_T *ht)$/;"	f
hash_lock_size	hashtab.c	/^hash_lock_size(hashtab_T *ht, int size)$/;"	f
hash_lookup	hashtab.c	/^hash_lookup(hashtab_T *ht, char_u *key, hash_T hash)$/;"	f
hash_may_resize	hashtab.c	/^hash_may_resize($/;"	f	file:
hash_remove	hashtab.c	/^hash_remove(hashtab_T *ht, hashitem_T *hi)$/;"	f
hash_removed	globals.h	/^EXTERN char_u	hash_removed;$/;"	v
hash_unlock	hashtab.c	/^hash_unlock(hashtab_T *ht)$/;"	f
hashitem_S	structs.h	/^typedef struct hashitem_S$/;"	s
hashitem_T	structs.h	/^} hashitem_T;$/;"	t	typeref:struct:hashitem_S
hashkey	spellfile.c	/^	char_u	hashkey[6];	\/\/ the hash key, only used while compressing$/;"	m	union:wordnode_S::__anon110	file:
hashtab_T	structs.h	/^} hashtab_T;$/;"	t	typeref:struct:hashtable_S
hashtable_S	structs.h	/^typedef struct hashtable_S$/;"	s
hasnum	structs.h	/^    int		hasnum;$/;"	m	struct:__anon245
have_dollars	os_unix.c	/^have_dollars(int num, char_u **file)$/;"	f	file:
have_wildcard	os_unix.c	/^have_wildcard(int num, char_u **file)$/;"	f	file:
hdr	gui_w32.c	/^    NMHDR	hdr;$/;"	m	struct:tagNMTTDISPINFOA	file:
hdr	gui_w32.c	/^    NMHDR	hdr;$/;"	m	struct:tagNMTTDISPINFOW	file:
hdr	gui_w32.c	/^    NMHDR      hdr;$/;"	m	struct:tagNMTTDISPINFOW_NEW	file:
hdr	gui_w32.c	/^    NMHDR      hdr;$/;"	m	struct:tagNMTTDISPINFO_NEW	file:
head	if_xcmdsrv.c	/^static x_queue_T head = {NULL, 0, NULL, NULL};$/;"	v	file:
head	tag.c	/^    char_u	*head;		\/\/ start of pattern head$/;"	m	struct:__anon118	file:
header_count	undo.c	/^static int header_count;$/;"	v	file:
header_table	digraph.c	/^} header_table[] = {$/;"	v	typeref:struct:dg_header_entry	file:
headlen	tag.c	/^    int		headlen;	\/\/ length of head[]$/;"	m	struct:__anon118	file:
height	gui.h	/^    int		height;		\/\/ Current height of scroll bar in rows$/;"	m	struct:GuiScrollbar
height	hardcopy.c	/^    float	height;$/;"	m	struct:prt_mediasize_S	file:
height	move.c	/^    int		    height;	\/\/ height of added line$/;"	m	struct:__anon73	file:
help	if_cscope.h	/^    char *  help;$/;"	m	struct:__anon147
help_compare	ex_cmds.c	/^help_compare(const void *s1, const void *s2)$/;"	f	file:
help_heuristic	ex_cmds.c	/^help_heuristic($/;"	f
helptags_cb	ex_cmds.c	/^helptags_cb(char_u *fname, void *cookie)$/;"	f	file:
helptags_one	ex_cmds.c	/^helptags_one($/;"	f	file:
heredoc_get	evalvars.c	/^heredoc_get(exarg_T *eap, char_u *cmd)$/;"	f
heredoc_getline	vim9compile.c	/^heredoc_getline($/;"	f	file:
hex2nr	charset.c	/^hex2nr(int c)$/;"	f
hex_digit	term.c	/^hex_digit(int c)$/;"	f	file:
hexhex2nr	charset.c	/^hexhex2nr(char_u *p)$/;"	f
hgr_get_ll	quickfix.c	/^hgr_get_ll(int *new_ll)$/;"	f	file:
hgr_search_file	quickfix.c	/^hgr_search_file($/;"	f	file:
hgr_search_files_in_dir	quickfix.c	/^hgr_search_files_in_dir($/;"	f	file:
hgr_search_in_rtp	quickfix.c	/^hgr_search_in_rtp(qf_list_T *qfl, regmatch_T *p_regmatch, char_u *lang)$/;"	f	file:
hi	if_py_both.h	/^    hashitem_T	*hi;$/;"	m	struct:__anon155
hi_hash	structs.h	/^    long_u	hi_hash;	\/\/ cached hash number of hi_key$/;"	m	struct:hashitem_S
hi_key	structs.h	/^    char_u	*hi_key;$/;"	m	struct:hashitem_S
hi_to_py	if_py_both.h	/^typedef PyObject *(*hi_to_py)(hashitem_T *);$/;"	t
hide	structs.h	/^    int		hide;			\/\/ TRUE when ":hide" was used$/;"	m	struct:__anon191
highest_patch	version.c	/^highest_patch(void)$/;"	f
highlight_attr	globals.h	/^EXTERN int	highlight_attr[HLF_COUNT];  \/\/ Highl. attr for each context.$/;"	v
highlight_changed	highlight.c	/^highlight_changed(void)$/;"	f
highlight_clear	highlight.c	/^highlight_clear(int idx)$/;"	f	file:
highlight_color	highlight.c	/^highlight_color($/;"	f
highlight_exists	highlight.c	/^highlight_exists(char_u *name)$/;"	f
highlight_ga	highlight.c	/^static garray_T highlight_ga;$/;"	v	file:
highlight_group_name	highlight.c	/^highlight_group_name(int id)$/;"	f
highlight_gui_color_rgb	highlight.c	/^highlight_gui_color_rgb($/;"	f
highlight_gui_started	highlight.c	/^highlight_gui_started(void)$/;"	f
highlight_has_attr	highlight.c	/^highlight_has_attr($/;"	f
highlight_init_both	highlight.c	/^static char *(highlight_init_both[]) = {$/;"	v	file:
highlight_init_dark	highlight.c	/^static char *(highlight_init_dark[]) = {$/;"	v	file:
highlight_init_light	highlight.c	/^static char *(highlight_init_light[]) = {$/;"	v	file:
highlight_link_id	highlight.c	/^highlight_link_id(int id)$/;"	f
highlight_list	highlight.c	/^highlight_list(void)$/;"	f	file:
highlight_list_arg	highlight.c	/^highlight_list_arg($/;"	f	file:
highlight_list_one	highlight.c	/^highlight_list_one(int id)$/;"	f	file:
highlight_list_two	highlight.c	/^highlight_list_two(int cnt, int attr)$/;"	f	file:
highlight_mask	gui.h	/^    int		highlight_mask;	    \/\/ Highlight attribute mask$/;"	m	struct:Gui
highlight_match	globals.h	/^EXTERN int	highlight_match INIT(= FALSE);	\/\/ show search match pos$/;"	v
highlight_num_groups	highlight.c	/^highlight_num_groups(void)$/;"	f
highlight_pixmap	gui_xmebwp.h	/^    Pixmap highlight_pixmap;$/;"	m	struct:_XmEnhancedButtonPart
highlight_stlnc	globals.h	/^EXTERN int	highlight_stlnc[9];		\/\/ On top of user$/;"	v
highlight_stlterm	globals.h	/^EXTERN int	highlight_stlterm[9];		\/\/ On top of user$/;"	v
highlight_stltermnc	globals.h	/^EXTERN int	highlight_stltermnc[9];		\/\/ On top of user$/;"	v
highlight_user	globals.h	/^EXTERN int	highlight_user[9];		\/\/ User[1-9] attributes$/;"	v
hinst	gui_w32.c	/^    HINSTANCE	hinst;$/;"	m	struct:tagNMTTDISPINFOA	file:
hinst	gui_w32.c	/^    HINSTANCE	hinst;$/;"	m	struct:tagNMTTDISPINFOW	file:
hinst	gui_w32.c	/^    HINSTANCE  hinst;$/;"	m	struct:tagNMTTDISPINFOW_NEW	file:
hinst	gui_w32.c	/^    HINSTANCE  hinst;$/;"	m	struct:tagNMTTDISPINFO_NEW	file:
hinst	gui_w32.c	/^    HINSTANCE  hinst;$/;"	m	struct:tagTOOLINFOA_NEW	file:
hinst	gui_w32.c	/^    HINSTANCE  hinst;$/;"	m	struct:tagTOOLINFOW_NEW	file:
hinstLua	if_lua.c	/^static HANDLE hinstLua = NULL;$/;"	v	file:
hinstPy3	if_python3.c	/^static HINSTANCE hinstPy3 = 0; \/\/ Instance of python.dll$/;"	v	file:
hinstPython	if_python.c	/^static HINSTANCE hinstPython = 0; \/\/ Instance of python.dll$/;"	v	file:
hinstRuby	if_ruby.c	/^static HINSTANCE hinstRuby = NULL; \/\/ Instance of ruby.dll$/;"	v	file:
hisidx	cmdhist.c	/^static int	hisidx[HIST_COUNT] = {-1, -1, -1, -1, -1};  \/\/ lastused entry$/;"	v	file:
hislen	cmdhist.c	/^static int	hislen = 0;		\/\/ actual length of history tables$/;"	v	file:
hisnum	cmdhist.c	/^static int	hisnum[HIST_COUNT] = {0, 0, 0, 0, 0};$/;"	v	file:
hisnum	structs.h	/^    int		hisnum;		\/\/ identifying number$/;"	m	struct:hist_entry
hisstr	structs.h	/^    char_u	*hisstr;	\/\/ actual entry, separator char after the NUL$/;"	m	struct:hist_entry
hist_char2type	cmdhist.c	/^hist_char2type(int c)$/;"	f
hist_entry	structs.h	/^typedef struct hist_entry$/;"	s
hist_type2char	viminfo.c	/^hist_type2char($/;"	f	file:
histentry_T	structs.h	/^} histentry_T;$/;"	t	typeref:struct:hist_entry
history	cmdhist.c	/^static histentry_T *(history[HIST_COUNT]) = {NULL, NULL, NULL, NULL, NULL};$/;"	v	file:
history_names	cmdhist.c	/^static char *(history_names[]) =$/;"	v	file:
hit_return_msg	message.c	/^hit_return_msg(void)$/;"	f	file:
hkmap	edit.c	/^hkmap(int c)$/;"	f
hl	structs.h	/^    match_T	hl;	    \/\/ struct for doing the actual highlighting$/;"	m	struct:matchitem
hl2vtermAttr	terminal.c	/^hl2vtermAttr(int attr, cellattr_T *cell)$/;"	f	file:
hl_attr_table	highlight.c	/^static int hl_attr_table[] =$/;"	v	file:
hl_combine_attr	highlight.c	/^hl_combine_attr(int char_attr, int prim_attr)$/;"	f
hl_do_font	highlight.c	/^hl_do_font($/;"	f	file:
hl_get_font_name	highlight.c	/^hl_get_font_name(void)$/;"	f
hl_group_T	highlight.c	/^} hl_group_T;$/;"	t	typeref:struct:__anon48	file:
hl_has_settings	highlight.c	/^hl_has_settings(int idx, int check_link)$/;"	f	file:
hl_name_table	highlight.c	/^static char *(hl_name_table[]) =$/;"	v	file:
hl_set_bg_color_name	highlight.c	/^hl_set_bg_color_name($/;"	f
hl_set_fg_color_name	highlight.c	/^hl_set_fg_color_name($/;"	f
hl_set_font_name	highlight.c	/^hl_set_font_name(char_u *font_name)$/;"	f
hlf_T	vim.h	/^} hlf_T;$/;"	t	typeref:enum:__anon278
hlg_id	structs.h	/^    int		hlg_id;	    \/\/ highlight group ID$/;"	m	struct:matchitem
hold_gui_events	globals.h	/^EXTERN volatile sig_atomic_t hold_gui_events INIT(= 0);$/;"	v
home_replace	filepath.c	/^home_replace($/;"	f
home_replace_save	filepath.c	/^home_replace_save($/;"	f
homedir	dosinst.c	/^static char *homedir = NULL;$/;"	v	file:
homedir	globals.h	/^EXTERN char_u	*homedir INIT(= NULL);$/;"	v
hpux	pty.c	113;"	d	file:
ht	if_py_both.h	/^    hashtab_T	*ht;$/;"	m	struct:__anon155
ht	structs.h	/^    hashtab_T		*ht;$/;"	m	struct:ht_stack_S
ht_array	if_py_both.h	/^    hashitem_T	*ht_array;$/;"	m	struct:__anon155
ht_array	structs.h	/^    hashitem_T	*ht_array;	\/\/ points to the array, allocated when it's$/;"	m	struct:hashtable_S
ht_error	structs.h	/^    int		ht_error;	\/\/ when set growing failed, can't add more$/;"	m	struct:hashtable_S
ht_filled	structs.h	/^    long_u	ht_filled;	\/\/ number of items used + removed$/;"	m	struct:hashtable_S
ht_locked	structs.h	/^    int		ht_locked;	\/\/ counter for hash_lock()$/;"	m	struct:hashtable_S
ht_mask	structs.h	/^    long_u	ht_mask;	\/\/ mask used for hash value (nr of items in$/;"	m	struct:hashtable_S
ht_smallarray	structs.h	/^    hashitem_T	ht_smallarray[HT_INIT_SIZE];   \/\/ initial array$/;"	m	struct:hashtable_S
ht_stack_S	structs.h	/^typedef struct ht_stack_S$/;"	s
ht_stack_T	structs.h	/^} ht_stack_T;$/;"	t	typeref:struct:ht_stack_S
ht_used	if_py_both.h	/^    long_u	ht_used;$/;"	m	struct:__anon155
ht_used	structs.h	/^    long_u	ht_used;	\/\/ number of items used$/;"	m	struct:hashtable_S
html_atom	gui_gtk_x11.c	/^static GdkAtom html_atom = GDK_NONE;$/;"	v	file:
htonl2	blowfish.c	371;"	d	file:
htonl2	blowfish.c	375;"	d	file:
hwnd	gui_w32.c	/^    HWND       hwnd;$/;"	m	struct:tagTOOLINFOA_NEW	file:
hwnd	gui_w32.c	/^    HWND       hwnd;$/;"	m	struct:tagTOOLINFOW_NEW	file:
hwnd	os_mswin.c	/^    HWND hwnd;$/;"	m	struct:server_id	file:
i_acute	regexp_nfa.c	739;"	d	file:
i_circumflex	regexp_nfa.c	740;"	d	file:
i_diaeresis	regexp_nfa.c	741;"	d	file:
i_grave	regexp_nfa.c	738;"	d	file:
iceconn	os_unix.c	/^    IceConn iceconn;	    \/\/ The ICE connection ID$/;"	m	struct:__anon75	file:
icon_builtin	structs.h	/^    int		icon_builtin;	    \/\/ icon names is BuiltIn{nr}$/;"	m	struct:VimMenu
icon_link_names	dosinst.h	/^char *(icon_link_names[ICON_COUNT]) =$/;"	v
icon_name	gui_gtk.c	/^    const char *icon_name;$/;"	m	struct:IconNames	file:
icon_names	dosinst.h	/^char *(icon_names[ICON_COUNT]) =$/;"	v
icon_size_changed_foreach	gui_gtk_x11.c	/^icon_size_changed_foreach(GtkWidget *widget, gpointer user_data)$/;"	f	file:
iconfile	structs.h	/^    char_u	*iconfile;	    \/\/ name of file for icon or NULL$/;"	m	struct:VimMenu
iconidx	structs.h	/^    int		iconidx;	    \/\/ icon index (-1 if not set)$/;"	m	struct:VimMenu
iconv	globals.h	/^EXTERN size_t (*iconv) (iconv_t cd, const char **inbuf, size_t *inbytesleft, char **outbuf, size_t *outbytesleft);$/;"	v
iconv_close	globals.h	/^EXTERN int (*iconv_close) (iconv_t cd);$/;"	v
iconv_enabled	mbyte.c	/^iconv_enabled(int verbose)$/;"	f
iconv_end	mbyte.c	/^iconv_end(void)$/;"	f
iconv_errno	globals.h	/^EXTERN int* (*iconv_errno) (void);$/;"	v
iconv_open	globals.h	/^EXTERN iconv_t (*iconv_open) (const char *tocode, const char *fromcode);$/;"	v
iconv_string	mbyte.c	/^iconv_string($/;"	f	file:
iconv_t	structs.h	/^typedef struct _iconv_t *iconv_t;$/;"	t	typeref:struct:_iconv_t
iconv_t	structs.h	/^typedef void *iconv_t;$/;"	t
iconvctl	globals.h	/^EXTERN int (*iconvctl) (iconv_t cd, int request, void *argument);$/;"	v
id	gui.h	/^    ControlHandle id;		\/\/ A handle to the scrollbar$/;"	m	struct:GuiScrollbar
id	gui.h	/^    GtkWidget *id;		\/\/ Id of real scroll bar$/;"	m	struct:GuiScrollbar
id	gui.h	/^    HWND	id;		\/\/ Id of real scroll bar$/;"	m	struct:GuiScrollbar
id	gui.h	/^    PtWidget_t	*id;$/;"	m	struct:GuiScrollbar
id	gui.h	/^    VimScrollBar *id;		\/\/ Pointer to real scroll bar$/;"	m	struct:GuiScrollbar
id	gui.h	/^    Widget	id;		\/\/ Id of real scroll bar$/;"	m	struct:GuiScrollbar
id	gui_motif.c	/^    int	    id;$/;"	m	struct:dialog_callback_arg	file:
id	if_xcmdsrv.c	/^    Window  id;$/;"	m	struct:ServerReply	file:
id	regexp.h	/^    int			id;$/;"	m	struct:nfa_state
id	regexp_nfa.c	/^    int		    id;		\/\/ ID of the list$/;"	m	struct:__anon108	file:
id	structs.h	/^    BMenuItem  *id;		    \/\/ Id of menu item$/;"	m	struct:VimMenu
id	structs.h	/^    GtkWidget	*id;		    \/\/ Manage this to enable item$/;"	m	struct:VimMenu
id	structs.h	/^    PtWidget_t	*id;$/;"	m	struct:VimMenu
id	structs.h	/^    UINT	id;		    \/\/ Id of menu item$/;"	m	struct:VimMenu
id	structs.h	/^    Widget	id;		    \/\/ Manage this to enable item$/;"	m	struct:VimMenu
id	structs.h	/^    int		id;		\/\/ highlight group ID$/;"	m	struct:cursor_entry
id	structs.h	/^    int		id;		\/\/ id of this arglist$/;"	m	struct:arglist
id	structs.h	/^    int		id;	    \/\/ match ID$/;"	m	struct:matchitem
id	structs.h	/^    short	id;		\/\/ highlight group ID of item$/;"	m	struct:sp_syn
id	syntax.c	/^    int		id;$/;"	m	struct:__anon117	file:
id1_codes	memline.c	/^static int id1_codes[] = {$/;"	v	file:
id_lm	structs.h	/^    int		id_lm;		\/\/ highlight group ID for :lmap mode$/;"	m	struct:cursor_entry
ident	gui.h	/^    long	ident;		\/\/ Unique identifier for each scrollbar$/;"	m	struct:GuiScrollbar
idopt_T	optiondefs.h	/^} idopt_T;$/;"	t	typeref:enum:__anon170
idx	gui_mac.c	/^    short   idx;$/;"	m	struct:__anon40	file:
idx	list.c	/^    int		idx;$/;"	m	struct:__anon64	file:
idx_T	spell.h	/^typedef int idx_T;$/;"	t
iemsg	message.c	/^iemsg(char *s)$/;"	f
if_level	ex_docmd.c	/^static int	if_level = 0;		\/\/ depth in :if$/;"	v	file:
ifscope_T	vim9compile.c	/^} ifscope_T;$/;"	t	typeref:struct:__anon125	file:
ignore_enter	gui_gtk.c	/^    int		ignore_enter;	    \/\/ no default button, ignore "Enter"$/;"	m	struct:_DialogInfo	file:
ignore_error	message.c	/^ignore_error(char_u *msg)$/;"	f	file:
ignore_error_for_testing	message.c	/^ignore_error_for_testing(char_u *error)$/;"	f
ignore_error_list	message.c	/^static garray_T ignore_error_list = GA_EMPTY;$/;"	v	file:
ignore_redraw_flag_for_testing	globals.h	/^EXTERN int  ignore_redraw_flag_for_testing INIT(= FALSE);$/;"	v
ignore_script	globals.h	/^EXTERN int	ignore_script INIT(= FALSE);  \/\/ ignore script input$/;"	v
ignore_tabline_evt	gui_gtk_x11.c	/^static int ignore_tabline_evt = FALSE;$/;"	v	file:
ignorecase	search.c	/^ignorecase(char_u *pat)$/;"	f
ignorecase_opt	search.c	/^ignorecase_opt(char_u *pat, int ic_in, int scs)$/;"	f
illegal_char	optionstr.c	/^illegal_char(char *errbuf, int c)$/;"	f	file:
illegal_slash	misc2.c	/^illegal_slash(const char *name)$/;"	f	file:
im_activatekey_keyval	mbyte.c	/^static unsigned int  im_activatekey_keyval = GDK_VoidSymbol;$/;"	v	file:
im_activatekey_state	mbyte.c	/^static unsigned int  im_activatekey_state  = 0;$/;"	v	file:
im_add_to_input	mbyte.c	/^im_add_to_input(char_u *str, int len)$/;"	f	file:
im_commit_cb	mbyte.c	/^im_commit_cb(GtkIMContext *context UNUSED,$/;"	f	file:
im_commit_handler_id	mbyte.c	/^static unsigned long im_commit_handler_id  = 0;$/;"	v	file:
im_correct_cursor	mbyte.c	/^im_correct_cursor(int num_move_back)$/;"	f	file:
im_delete_preedit	mbyte.c	/^im_delete_preedit(void)$/;"	f	file:
im_get_feedback_attr	mbyte.c	/^im_get_feedback_attr(int col)$/;"	f
im_get_status	gui_mac.c	/^im_get_status(void)$/;"	f
im_get_status	gui_w32.c	/^im_get_status(void)$/;"	f
im_get_status	mbyte.c	/^im_get_status(void)$/;"	f
im_initialized	gui_mac.c	/^static int		     im_initialized = 0;$/;"	v	file:
im_is_active	gui_mac.c	/^static int im_is_active = FALSE;$/;"	v	file:
im_is_active	mbyte.c	/^static int im_is_active	       = FALSE;	\/\/ IM is enabled for current mode$/;"	v	file:
im_is_preediting	mbyte.c	/^im_is_preediting(void)$/;"	f
im_on_window_switch	gui_mac.c	/^im_on_window_switch(int active)$/;"	f	file:
im_preedit_changed_cb	mbyte.c	/^im_preedit_changed_cb(GtkIMContext *context, gpointer data UNUSED)$/;"	f	file:
im_preedit_cursor	mbyte.c	/^static int im_preedit_cursor   = 0;	\/\/ cursor offset in characters$/;"	v	file:
im_preedit_end_cb	mbyte.c	/^im_preedit_end_cb(GtkIMContext *context UNUSED, gpointer data UNUSED)$/;"	f	file:
im_preedit_start_cb	mbyte.c	/^im_preedit_start_cb(GtkIMContext *context UNUSED, gpointer data UNUSED)$/;"	f	file:
im_preedit_trailing	mbyte.c	/^static int im_preedit_trailing = 0;	\/\/ number of characters after cursor$/;"	v	file:
im_preedit_window_close	mbyte.c	/^im_preedit_window_close()$/;"	f	file:
im_preedit_window_open	mbyte.c	/^im_preedit_window_open()$/;"	f	file:
im_preedit_window_set_position	mbyte.c	/^im_preedit_window_set_position(void)$/;"	f	file:
im_save_status	ui.c	/^im_save_status(long *psave)$/;"	f
im_set_active	gui_mac.c	/^im_set_active(int active)$/;"	f
im_set_active	gui_w32.c	/^im_set_active(int active)$/;"	f
im_set_active	mbyte.c	/^im_set_active(int active)$/;"	f
im_set_active	mbyte.c	/^im_set_active(int active_arg)$/;"	f
im_set_font	gui_w32.c	/^im_set_font(LOGFONTW *lf)$/;"	f
im_set_position	gui_mac.c	/^im_set_position(int row, int col)$/;"	f
im_set_position	gui_w32.c	/^im_set_position(int row, int col)$/;"	f
im_set_position	mbyte.c	/^im_set_position(int row UNUSED, int col UNUSED)$/;"	f
im_set_position	mbyte.c	/^im_set_position(int row, int col)$/;"	f
im_show_info	mbyte.c	/^im_show_info(void)$/;"	f	file:
im_show_preedit	mbyte.c	/^im_show_preedit()$/;"	f	file:
im_shutdown	mbyte.c	/^im_shutdown(void)$/;"	f
im_string_to_keyval	mbyte.c	/^im_string_to_keyval(const char *str, unsigned int *keyval, unsigned int *state)$/;"	f	file:
im_synthesize_keypress	mbyte.c	/^im_synthesize_keypress(unsigned int keyval, unsigned int state)$/;"	f	file:
im_was_set_active	mbyte.c	/^static int im_was_set_active = FALSE;$/;"	v	file:
im_xim_isvalid_imactivate	mbyte.c	/^im_xim_isvalid_imactivate(void)$/;"	f
image	structs.h	/^    Pixmap	image;		    \/\/ Toolbar image$/;"	m	struct:VimMenu
imp_PyExc_AttributeError	if_python.c	/^static PyObject *imp_PyExc_AttributeError;$/;"	v	file:
imp_PyExc_ImportError	if_python.c	/^static PyObject *imp_PyExc_ImportError;$/;"	v	file:
imp_PyExc_IndexError	if_python.c	/^static PyObject *imp_PyExc_IndexError;$/;"	v	file:
imp_PyExc_KeyError	if_python.c	/^static PyObject *imp_PyExc_KeyError;$/;"	v	file:
imp_PyExc_KeyboardInterrupt	if_python.c	/^static PyObject *imp_PyExc_KeyboardInterrupt;$/;"	v	file:
imp_PyExc_OverflowError	if_python.c	/^static PyObject *imp_PyExc_OverflowError;$/;"	v	file:
imp_PyExc_RuntimeError	if_python.c	/^static PyObject *imp_PyExc_RuntimeError;$/;"	v	file:
imp_PyExc_SystemExit	if_python.c	/^static PyObject *imp_PyExc_SystemExit;$/;"	v	file:
imp_PyExc_TypeError	if_python.c	/^static PyObject *imp_PyExc_TypeError;$/;"	v	file:
imp_PyExc_ValueError	if_python.c	/^static PyObject *imp_PyExc_ValueError;$/;"	v	file:
imp_all	structs.h	/^    int		imp_all;$/;"	m	struct:__anon216
imp_funcname	structs.h	/^    char_u	*imp_funcname;	    \/\/ user func name (NOT allocated)$/;"	m	struct:__anon216
imp_name	structs.h	/^    char_u	*imp_name;	    \/\/ name imported as (allocated)$/;"	m	struct:__anon216
imp_sid	structs.h	/^    int		imp_sid;	    \/\/ script ID of "from"$/;"	m	struct:__anon216
imp_type	structs.h	/^    type_T	*imp_type;$/;"	m	struct:__anon216
imp_var_vals_idx	structs.h	/^    int		imp_var_vals_idx;   \/\/ index in sn_var_vals of "from"$/;"	m	struct:__anon216
imported_T	structs.h	/^} imported_T;$/;"	t	typeref:struct:__anon216
inAtomic	netbeans.c	/^static int inAtomic = 0;$/;"	v	file:
in_cinkeys	cindent.c	/^in_cinkeys($/;"	f
in_focus	gui.h	/^    int		in_focus;	    \/\/ Vim has input focus$/;"	m	struct:Gui
in_free_unref_items	globals.h	/^EXTERN int  in_free_unref_items INIT(= FALSE);$/;"	v
in_history	cmdhist.c	/^in_history($/;"	f
in_html_tag	search.c	/^in_html_tag($/;"	f	file:
in_id_list	syntax.c	/^in_id_list($/;"	f	file:
in_mch_delay	os_unix.c	/^static volatile sig_atomic_t in_mch_delay = FALSE; \/\/ sleeping in mch_delay()$/;"	v	file:
in_mch_suspend	os_unix.c	/^static volatile sig_atomic_t in_mch_suspend = FALSE;$/;"	v	file:
in_pixels	gui_xmdlg.c	/^    Boolean	in_pixels;	\/\/ toggle state - size in pixels$/;"	m	struct:_SharedFontSelData	file:
in_selection_clear_event	gui_gtk_x11.c	/^static int in_selection_clear_event = FALSE;$/;"	v	file:
in_terminal_loop	terminal.c	/^static term_T *in_terminal_loop = NULL;$/;"	v	file:
in_use	gui.h	/^    int		in_use;		    \/\/ Is the GUI being used?$/;"	m	struct:Gui
in_use	regexp_nfa.c	/^    int	    in_use; \/\/ number of subexpr with useful info$/;"	m	struct:__anon103	file:
in_vim9script	vim9script.c	/^in_vim9script(void)$/;"	f
in_win_border	charset.c	/^in_win_border(win_T *wp, colnr_T vcol)$/;"	f	file:
inbuf	ui.c	/^static char_u	inbuf[INBUFLEN + MAX_KEY_CODE_LEN];$/;"	v	file:
inbufcount	ui.c	/^static int	inbufcount = 0;	    \/\/ number of chars in inbuf[]$/;"	v	file:
inc	misc2.c	/^inc(pos_T *lp)$/;"	f
inc_cursor	misc2.c	/^inc_cursor(void)$/;"	f
inc_msg_scrolled	message.c	/^inc_msg_scrolled(void)$/;"	f	file:
inc_tag	structs.h	/^    int		inc_tag;	\/\/ ":syn include" unique tag$/;"	m	struct:sp_syn
inchar	getchar.c	/^inchar($/;"	f	file:
inchar_loop	ui.c	/^inchar_loop($/;"	f
inchar_time	profiler.c	/^static proftime_T inchar_time;$/;"	v	file:
incl	misc2.c	/^incl(pos_T *lp)$/;"	f
include_default	globals.h	/^EXTERN int include_default INIT(= 0);	\/\/ when 1 include "default"$/;"	v
include_groups	autocmd.c	/^static int include_groups = FALSE;$/;"	v	file:
include_link	globals.h	/^EXTERN int include_link INIT(= 0);	\/\/ when 2 include "link" and "clear"$/;"	v
include_none	globals.h	/^EXTERN int include_none INIT(= 0);	\/\/ when 1 include "None"$/;"	v
included_patches	version.c	/^static int included_patches[] =$/;"	v	file:
inclusive	structs.h	/^    int		inclusive;	\/\/ TRUE if char motion is inclusive (only$/;"	m	struct:oparg_S
incr_quickfix_busy	quickfix.c	/^incr_quickfix_busy(void)$/;"	f	file:
incsearch_postponed	ex_getln.c	/^    int		incsearch_postponed;$/;"	m	struct:__anon27	file:
incsearch_state_T	ex_getln.c	/^} incsearch_state_T;$/;"	t	typeref:struct:__anon27	file:
ind_find_start_CORS	cindent.c	/^ind_find_start_CORS(linenr_T *is_raw)	    \/\/ XXX$/;"	f	file:
ind_find_start_comment	cindent.c	/^ind_find_start_comment(void)	    \/\/ XXX$/;"	f	file:
indent	popupmenu.c	/^    int		indent;$/;"	m	struct:__anon83	file:
index	os_vms.c	/^    ITEM	index;$/;"	m	struct:__anon81	file:
index	spellfile.c	/^	int	index;		\/\/ index in written nodes (valid after first$/;"	m	union:wordnode_S::__anon110	file:
index_to_key	memfile_test.c	25;"	d	file:
indir	optiondefs.h	/^    idopt_T	indir;		\/\/ global option: PV_NONE;$/;"	m	struct:vimoption
infinity_str	message.c	/^infinity_str(int positive,$/;"	f	file:
info_message	globals.h	/^EXTERN int	info_message INIT(= FALSE); \/\/ printing informative message$/;"	v
info_pointer	structs.h	/^typedef struct info_pointer$/;"	s
infoptr_T	structs.h	/^} infoptr_T;	\/\/ block\/index pair$/;"	t	typeref:struct:info_pointer
inindent	indent.c	/^inindent(int extra)$/;"	f
initDone	netbeans.c	/^    unsigned int	 initDone:1;$/;"	m	struct:nbbuf_struct	file:
init_bat_choice	dosinst.c	/^init_bat_choice(int target)$/;"	f	file:
init_bat_choices	dosinst.c	/^init_bat_choices(void)$/;"	f	file:
init_buf_opt_idx	option.c	/^init_buf_opt_idx(void)$/;"	f	file:
init_changedtick	buffer.c	/^init_changedtick(buf_T *buf)$/;"	f	file:
init_chartab	charset.c	/^init_chartab(void)$/;"	f
init_class_tab	regexp.c	/^init_class_tab(void)$/;"	f	file:
init_default_colors	terminal.c	/^init_default_colors(term_T *term, win_T *wp)$/;"	f	file:
init_directories_choice	dosinst.c	/^init_directories_choice(void)$/;"	f	file:
init_exn_catching_apply	if_mzsch.c	/^init_exn_catching_apply(void)$/;"	f	file:
init_fn	crypt.c	/^    int (* init_fn)(cryptstate_T *state, char_u *key,$/;"	m	struct:__anon7	file:
init_gui_options	gui.c	/^init_gui_options(void)$/;"	f
init_highlight	highlight.c	/^init_highlight($/;"	f
init_history	cmdhist.c	/^init_history(void)$/;"	f
init_homedir	dosinst.c	/^init_homedir(void)$/;"	f
init_homedir	misc1.c	/^init_homedir(void)$/;"	f
init_incsearch_state	ex_getln.c	/^init_incsearch_state(incsearch_state_T *is_state)$/;"	f	file:
init_instr_idx	vim9execute.c	/^init_instr_idx(ufunc_T *ufunc, int argcount, ectx_T *ectx)$/;"	f	file:
init_job_options	terminal.c	/^init_job_options(jobopt_T *opt)$/;"	f
init_locale	main.c	/^init_locale(void)$/;"	f	file:
init_locales	ex_cmds2.c	/^init_locales(void)$/;"	f	file:
init_logfont	os_mswin.c	/^init_logfont(LOGFONTW *lf)$/;"	f	file:
init_longVersion	version.c	/^init_longVersion(void)$/;"	f
init_mappings	map.c	/^init_mappings(void)$/;"	f
init_mouse_wheel	gui_w32.c	/^init_mouse_wheel(void)$/;"	f	file:
init_normal_cmds	normal.c	/^init_normal_cmds(void)$/;"	f
init_openwith_choice	dosinst.c	/^init_openwith_choice(void)$/;"	f	file:
init_popup_choice	dosinst.c	/^init_popup_choice(void)$/;"	f	file:
init_preedit_start_col	mbyte.c	/^init_preedit_start_col(void)$/;"	f	file:
init_prompt	edit.c	/^init_prompt(int cmdchar_todo)$/;"	f	file:
init_pyxversion	ex_cmds2.c	/^init_pyxversion(void)$/;"	f
init_range_cmd	if_py_both.h	/^init_range_cmd(exarg_T *eap)$/;"	f
init_range_eval	if_py_both.h	/^init_range_eval(typval_T *rettv UNUSED)$/;"	f
init_regexec_multi	regexp.c	/^init_regexec_multi($/;"	f	file:
init_search_hl	highlight.c	/^init_search_hl(win_T *wp, match_T *search_hl)$/;"	f
init_shortcut_choices	dosinst.c	/^init_shortcut_choices(void)$/;"	f	file:
init_signal_stack	os_unix.c	/^init_signal_stack(void)$/;"	f	file:
init_signs	sign.c	/^init_signs(void)$/;"	f
init_spell_chartab	spell.c	/^init_spell_chartab(void)$/;"	f
init_spellfile	spellfile.c	/^init_spellfile(void)$/;"	f	file:
init_srand	evalfunc.c	/^init_srand(UINT32_T *x)$/;"	f	file:
init_startmenu_choice	dosinst.c	/^init_startmenu_choice(void)$/;"	f	file:
init_static_list	list.c	/^init_static_list(staticList10_T *sl)$/;"	f
init_structs	if_py_both.h	/^init_structs(void)$/;"	f
init_syl_tab	spell.c	/^init_syl_tab(slang_T *slang)$/;"	f
init_syn_patterns	syntax.c	/^init_syn_patterns(void)$/;"	f	file:
init_sys_path	if_py_both.h	/^init_sys_path(void)$/;"	f
init_tv	eval.c	/^init_tv(typval_T *varp)$/;"	f
init_typebuf	getchar.c	/^init_typebuf(void)$/;"	f	file:
init_types	if_py_both.h	/^init_types(void)$/;"	f
init_users	misc1.c	/^init_users(void)$/;"	f	file:
init_var_dict	evalvars.c	/^init_var_dict(dict_T *dict, dictitem_T *dict_var, int scope)$/;"	f
init_viewstate	ex_getln.c	/^    viewstate_T	init_viewstate;$/;"	m	struct:__anon27	file:
init_vimrc_choices	dosinst.c	/^init_vimrc_choices(void)$/;"	f	file:
init_vterm_ansi_colors	terminal.c	/^init_vterm_ansi_colors(VTerm *vterm)$/;"	f	file:
init_window_hints_state	gui_gtk_x11.c	/^static int init_window_hints_state = 0;$/;"	v	file:
init_write_reg	register.c	/^init_write_reg($/;"	f	file:
init_yank	register.c	/^init_yank(void)$/;"	f
initchr	regexp.c	/^initchr(char_u *str)$/;"	f	file:
initial	arabic.c	/^    unsigned initial;$/;"	m	struct:achar	file:
initial_cursor_blink	term.c	/^static int initial_cursor_blink = FALSE;$/;"	v	file:
initial_cursor_shape	term.c	/^static int initial_cursor_shape = 0;$/;"	v	file:
initial_cursor_shape_blink	term.c	/^static int initial_cursor_shape_blink = FALSE;$/;"	v	file:
initialise_findrep	gui_w32.c	/^initialise_findrep(char_u *initial_string)$/;"	f	file:
initialise_tabline	gui_mac.c	/^initialise_tabline(void)$/;"	f	file:
initialise_tabline	gui_w32.c	/^initialise_tabline(void)$/;"	f	file:
initialise_toolbar	gui_w32.c	/^initialise_toolbar(void)$/;"	f	file:
initialised	if_python.c	/^static int initialised = 0;$/;"	v	file:
initialized	if_mzsch.c	/^static int initialized = FALSE;$/;"	v	file:
initmap	map.c	/^struct initmap$/;"	s	file:
initmappings	map.c	/^static struct initmap initmappings[] =$/;"	v	typeref:struct:initmap	file:
initmaster	pty.c	/^initmaster(int f UNUSED)$/;"	f	file:
inmacro	search.c	/^inmacro(char_u *opt, char_u *s)$/;"	f	file:
input	regexp.c	/^    char_u	*input;		\/\/ current input, points into "regline"$/;"	m	struct:__anon99	file:
input_available	getchar.c	/^input_available(void)$/;"	f
input_conv	globals.h	/^EXTERN vimconv_T input_conv;			\/\/ type of input conversion$/;"	v
input_fn	structs.h	/^    int		input_fn;	\/\/ when TRUE Invoked for input() function$/;"	m	struct:__anon190
input_style	mbyte.c	/^static XIMStyle	input_style;$/;"	v	file:
input_timer_cb	gui_gtk_x11.c	/^input_timer_cb(gpointer data)$/;"	f	file:
inputsecret_flag	evalfunc.c	/^static int inputsecret_flag = 0;$/;"	v	file:
ins_apply_autocmds	edit.c	/^ins_apply_autocmds(event_T event)$/;"	f
ins_at_eol	globals.h	/^EXTERN int	ins_at_eol INIT(= FALSE); \/\/ put cursor after eol when$/;"	v
ins_bs	edit.c	/^ins_bs($/;"	f	file:
ins_bs_one	edit.c	/^ins_bs_one(colnr_T *vcolp)$/;"	f	file:
ins_bytes	change.c	/^ins_bytes(char_u *p)$/;"	f
ins_bytes_len	change.c	/^ins_bytes_len(char_u *p, int len)$/;"	f
ins_char	change.c	/^ins_char(int c)$/;"	f
ins_char_bytes	change.c	/^ins_char_bytes(char_u *buf, int charlen)$/;"	f
ins_char_typebuf	getchar.c	/^ins_char_typebuf(int c)$/;"	f
ins_compl_accept_char	insexpand.c	/^ins_compl_accept_char(int c)$/;"	f
ins_compl_active	insexpand.c	/^ins_compl_active(void)$/;"	f
ins_compl_add	insexpand.c	/^ins_compl_add($/;"	f	file:
ins_compl_add_dict	insexpand.c	/^ins_compl_add_dict(dict_T *dict)$/;"	f	file:
ins_compl_add_infercase	insexpand.c	/^ins_compl_add_infercase($/;"	f
ins_compl_add_list	insexpand.c	/^ins_compl_add_list(list_T *list)$/;"	f	file:
ins_compl_add_matches	insexpand.c	/^ins_compl_add_matches($/;"	f	file:
ins_compl_add_tv	insexpand.c	/^ins_compl_add_tv(typval_T *tv, int dir)$/;"	f	file:
ins_compl_addfrommatch	insexpand.c	/^ins_compl_addfrommatch(void)$/;"	f
ins_compl_addleader	insexpand.c	/^ins_compl_addleader(int c)$/;"	f
ins_compl_bs	insexpand.c	/^ins_compl_bs(void)$/;"	f
ins_compl_check_keys	insexpand.c	/^ins_compl_check_keys(int frequency, int in_compl_func)$/;"	f
ins_compl_clear	insexpand.c	/^ins_compl_clear(void)$/;"	f
ins_compl_col	insexpand.c	/^ins_compl_col(void)$/;"	f
ins_compl_del_pum	insexpand.c	/^ins_compl_del_pum(void)$/;"	f	file:
ins_compl_delete	insexpand.c	/^ins_compl_delete(void)$/;"	f
ins_compl_dict_alloc	insexpand.c	/^ins_compl_dict_alloc(compl_T *match)$/;"	f	file:
ins_compl_dictionaries	insexpand.c	/^ins_compl_dictionaries($/;"	f	file:
ins_compl_enter_selects	insexpand.c	/^ins_compl_enter_selects(void)$/;"	f
ins_compl_equal	insexpand.c	/^ins_compl_equal(compl_T *match, char_u *str, int len)$/;"	f	file:
ins_compl_files	insexpand.c	/^ins_compl_files($/;"	f	file:
ins_compl_fixRedoBufForLeader	insexpand.c	/^ins_compl_fixRedoBufForLeader(char_u *ptr_arg)$/;"	f	file:
ins_compl_free	insexpand.c	/^ins_compl_free(void)$/;"	f	file:
ins_compl_get_exp	insexpand.c	/^ins_compl_get_exp(pos_T *ini)$/;"	f	file:
ins_compl_has_shown_match	insexpand.c	/^ins_compl_has_shown_match(void)$/;"	f
ins_compl_init_get_longest	insexpand.c	/^ins_compl_init_get_longest(void)$/;"	f
ins_compl_insert	insexpand.c	/^ins_compl_insert(int in_compl_func)$/;"	f
ins_compl_interrupted	insexpand.c	/^ins_compl_interrupted(void)$/;"	f
ins_compl_key2count	insexpand.c	/^ins_compl_key2count(int c)$/;"	f	file:
ins_compl_key2dir	insexpand.c	/^ins_compl_key2dir(int c)$/;"	f	file:
ins_compl_len	insexpand.c	/^ins_compl_len(void)$/;"	f	file:
ins_compl_long_shown_match	insexpand.c	/^ins_compl_long_shown_match(void)$/;"	f
ins_compl_longest_match	insexpand.c	/^ins_compl_longest_match(compl_T *match)$/;"	f	file:
ins_compl_make_cyclic	insexpand.c	/^ins_compl_make_cyclic(void)$/;"	f	file:
ins_compl_mode	insexpand.c	/^ins_compl_mode(void)$/;"	f	file:
ins_compl_need_restart	insexpand.c	/^ins_compl_need_restart(void)$/;"	f	file:
ins_compl_new_leader	insexpand.c	/^ins_compl_new_leader(void)$/;"	f	file:
ins_compl_next	insexpand.c	/^ins_compl_next($/;"	f	file:
ins_compl_next_buf	insexpand.c	/^ins_compl_next_buf(buf_T *buf, int flag)$/;"	f	file:
ins_compl_prep	insexpand.c	/^ins_compl_prep(int c)$/;"	f
ins_compl_pum_key	insexpand.c	/^ins_compl_pum_key(int c)$/;"	f	file:
ins_compl_restart	insexpand.c	/^ins_compl_restart(void)$/;"	f	file:
ins_compl_set_original_text	insexpand.c	/^ins_compl_set_original_text(char_u *str)$/;"	f	file:
ins_compl_show_pum	insexpand.c	/^ins_compl_show_pum(void)$/;"	f
ins_compl_upd_pum	insexpand.c	/^ins_compl_upd_pum(void)$/;"	f	file:
ins_compl_use_match	insexpand.c	/^ins_compl_use_match(int c)$/;"	f	file:
ins_compl_used_match	insexpand.c	/^ins_compl_used_match(void)$/;"	f
ins_complete	insexpand.c	/^ins_complete(int c, int enable_pum)$/;"	f
ins_copychar	edit.c	/^ins_copychar(linenr_T lnum)$/;"	f
ins_ctrl_	edit.c	/^ins_ctrl_(void)$/;"	f	file:
ins_ctrl_ey	edit.c	/^ins_ctrl_ey(int tc)$/;"	f	file:
ins_ctrl_g	edit.c	/^ins_ctrl_g(void)$/;"	f	file:
ins_ctrl_hat	edit.c	/^ins_ctrl_hat(void)$/;"	f	file:
ins_ctrl_o	edit.c	/^ins_ctrl_o(void)$/;"	f	file:
ins_ctrl_v	edit.c	/^ins_ctrl_v(void)$/;"	f	file:
ins_ctrl_x	insexpand.c	/^ins_ctrl_x(void)$/;"	f
ins_del	edit.c	/^ins_del(void)$/;"	f	file:
ins_digraph	edit.c	/^ins_digraph(void)$/;"	f	file:
ins_down	edit.c	/^ins_down($/;"	f	file:
ins_drop	edit.c	/^ins_drop(void)$/;"	f	file:
ins_end	edit.c	/^ins_end(int c)$/;"	f	file:
ins_eol	edit.c	/^ins_eol(int c)$/;"	f
ins_esc	edit.c	/^ins_esc($/;"	f	file:
ins_home	edit.c	/^ins_home(int c)$/;"	f	file:
ins_horscroll	edit.c	/^ins_horscroll(void)$/;"	f
ins_insert	edit.c	/^ins_insert(int replaceState)$/;"	f	file:
ins_left	edit.c	/^ins_left(void)$/;"	f	file:
ins_mouse	mouse.c	/^ins_mouse(int c)$/;"	f
ins_mousescroll	mouse.c	/^ins_mousescroll(int dir)$/;"	f
ins_need_undo	edit.c	/^static int	ins_need_undo;		\/\/ call u_save() before inserting a$/;"	v	file:
ins_need_undo_get	edit.c	/^ins_need_undo_get(void)$/;"	f
ins_pagedown	edit.c	/^ins_pagedown(void)$/;"	f	file:
ins_pageup	edit.c	/^ins_pageup(void)$/;"	f	file:
ins_redraw	edit.c	/^ins_redraw(int ready)	    \/\/ not busy with something$/;"	f
ins_reg	edit.c	/^ins_reg(void)$/;"	f	file:
ins_right	edit.c	/^ins_right(void)$/;"	f	file:
ins_s_left	edit.c	/^ins_s_left()$/;"	f	file:
ins_s_right	edit.c	/^ins_s_right()$/;"	f	file:
ins_scroll	edit.c	/^ins_scroll(void)$/;"	f
ins_shift	edit.c	/^ins_shift(int c, int lastc)$/;"	f	file:
ins_start_select	edit.c	/^ins_start_select(int c)$/;"	f	file:
ins_str	change.c	/^ins_str(char_u *s)$/;"	f
ins_tab	edit.c	/^ins_tab(void)$/;"	f	file:
ins_tabline	edit.c	/^ins_tabline(int c)$/;"	f	file:
ins_try_si	indent.c	/^ins_try_si(int c)$/;"	f
ins_typebuf	getchar.c	/^ins_typebuf($/;"	f
ins_up	edit.c	/^ins_up($/;"	f	file:
insecure_flag	option.c	/^insecure_flag(int opt_idx, int opt_flags)$/;"	f	file:
insecure_flag	option.c	46;"	d	file:
insensitive_pixmap	gui_xmebwp.h	/^    Pixmap insensitive_pixmap;$/;"	m	struct:_XmEnhancedButtonPart
insertDone	netbeans.c	/^    unsigned int	 insertDone:1;$/;"	m	struct:nbbuf_struct	file:
insert_buffer_line_list	if_mzsch.c	/^insert_buffer_line_list(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
insert_lines	os_win32.c	/^insert_lines(unsigned cLines)$/;"	f	file:
insert_reg	register.c	/^insert_reg($/;"	f
insert_sign	sign.c	/^insert_sign($/;"	f	file:
insert_sign_by_lnum_prio	sign.c	/^insert_sign_by_lnum_prio($/;"	f	file:
insert_special	edit.c	/^insert_special($/;"	f	file:
insert_timer	time.c	/^insert_timer(timer_T *timer)$/;"	f	file:
insertchar	edit.c	/^insertchar($/;"	f
inserted_bytes	change.c	/^inserted_bytes(linenr_T lnum, colnr_T col, int added UNUSED)$/;"	f	file:
inspect_system	dosinst.c	/^inspect_system(void)$/;"	f	file:
install	dosinst.c	/^install(void)$/;"	f	file:
install_OLE_register	dosinst.c	/^install_OLE_register(void)$/;"	f	file:
install_bat_choice	dosinst.c	/^install_bat_choice(int idx)$/;"	f	file:
install_openwith	dosinst.c	/^static int	install_openwith = 0;$/;"	v	file:
install_popup	dosinst.c	/^static int	install_popup = 0;$/;"	v	file:
install_registry	dosinst.c	/^install_registry(void)$/;"	f	file:
install_shortcut_evim	dosinst.c	/^install_shortcut_evim(int idx)$/;"	f
install_shortcut_gview	dosinst.c	/^install_shortcut_gview(int idx)$/;"	f
install_shortcut_gvim	dosinst.c	/^install_shortcut_gvim(int idx)$/;"	f
install_start_menu	dosinst.c	/^install_start_menu(int idx)$/;"	f	file:
install_vimfilesdir	dosinst.c	/^install_vimfilesdir(int idx)$/;"	f	file:
install_vimrc	dosinst.c	/^install_vimrc(int idx)$/;"	f	file:
installdir	dosinst.h	/^char	installdir[MAX_PATH-9];	\/\/ top of the installation dir, where the$/;"	v
installfunc	dosinst.c	/^    void    (*installfunc)(int idx);	\/\/ function to install this choice$/;"	m	struct:choice	file:
instr	vim.h	2417;"	d
int_cmp	window.c	/^int_cmp(const void *a, const void *b)$/;"	f	file:
int_u	vim.h	/^typedef unsigned int	int_u;$/;"	t
int_wordlist	spell.h	/^SPELL_EXTERN char_u	*int_wordlist SPELL_INIT(= NULL);$/;"	v
int_wordlist_spl	spell.c	/^int_wordlist_spl(char_u *fname)$/;"	f	file:
intable	mbyte.c	/^intable(struct interval *table, size_t size, int c)$/;"	f	file:
intel_gpu_workaround	gui_w32.c	/^intel_gpu_workaround(void)$/;"	f	file:
interactive	dosinst.h	/^int	interactive;		\/\/ non-zero when running interactively$/;"	v
internal_error	message.c	/^internal_error(char *where)$/;"	f
internal_format	edit.c	/^internal_format($/;"	f	file:
internal_func_name	evalfunc.c	/^internal_func_name(int idx)$/;"	f
internal_func_ret_type	evalfunc.c	/^internal_func_ret_type(int idx, int argcount)$/;"	f
interp	if_tcl.c	/^    Tcl_Interp	*interp;$/;"	m	struct:ref	file:
interp	if_tcl.c	/^    Tcl_Interp *interp;$/;"	m	struct:__anon60	file:
interrupt	structs.h	/^    int interrupt;	\/\/ interrupt character$/;"	m	struct:__anon227
interval	mbyte.c	/^struct interval$/;"	s	file:
intr_char	globals.h	/^EXTERN int	intr_char INIT(= 0);	    \/\/ extra interrupt character$/;"	v
intro_message	version.c	/^intro_message($/;"	f
invalid_bot	fold.c	/^static linenr_T invalid_bot = (linenr_T)0;$/;"	v	file:
invalid_range	ex_docmd.c	/^invalid_range(exarg_T *eap)$/;"	f	file:
invalid_top	fold.c	/^static linenr_T invalid_top = (linenr_T)0;$/;"	v	file:
invalidate_botline	move.c	/^invalidate_botline(void)$/;"	f
invalidate_botline_win	move.c	/^invalidate_botline_win(win_T *wp)$/;"	f
invalidate_current_state	syntax.c	/^invalidate_current_state(void)$/;"	f	file:
invert_gc	gui.h	/^    GC		invert_gc;$/;"	m	struct:Gui
invoke_callback	channel.c	/^invoke_callback(channel_T *channel, callback_T *callback, typval_T *argv)$/;"	f	file:
invoke_edit	normal.c	/^invoke_edit($/;"	f	file:
invoke_listeners	change.c	/^invoke_listeners(buf_T *buf)$/;"	f
invoke_one_time_callback	channel.c	/^invoke_one_time_callback($/;"	f	file:
invoke_popup_callback	popupwin.c	/^invoke_popup_callback(win_T *wp, typval_T *result)$/;"	f	file:
invoke_popup_filter	popupwin.c	/^invoke_popup_filter(win_T *wp, int c)$/;"	f	file:
invoke_prompt_callback	channel.c	/^invoke_prompt_callback(void)$/;"	f
invoke_prompt_interrupt	channel.c	/^invoke_prompt_interrupt(void)$/;"	f
invoke_sound_callback	sound.c	/^invoke_sound_callback(void)$/;"	f
io_ga	if_py_both.h	/^static garray_T io_ga = {0, 0, 1, 80, NULL};$/;"	v
iochan	os_vms.c	/^static short	iochan;			\/\/ TTY I\/O channel$/;"	v	file:
iosb	os_vms.c	/^static short	iosb[4];		\/\/ IO status block$/;"	v	file:
ip_bnum	structs.h	/^    blocknr_T	ip_bnum;	\/\/ block number$/;"	m	struct:info_pointer
ip_high	structs.h	/^    linenr_T	ip_high;	\/\/ highest lnum in this block$/;"	m	struct:info_pointer
ip_index	structs.h	/^    int		ip_index;	\/\/ index for block with current lnum$/;"	m	struct:info_pointer
ip_low	structs.h	/^    linenr_T	ip_low;		\/\/ lowest lnum in this block$/;"	m	struct:info_pointer
isNetbeansBuffer	netbeans.c	/^isNetbeansBuffer(buf_T *bufp)$/;"	f
isNetbeansModified	netbeans.c	/^isNetbeansModified(buf_T *bufp)$/;"	f
isPanelVisible	gui_mac.c	/^    Boolean isPanelVisible;$/;"	m	struct:__anon38	file:
is_64bit_os	dosinst.h	/^is_64bit_os(void)$/;"	f
is_MAX	structs.h	/^    int		is_MAX;		\/\/ TRUE if curswant==MAXCOL when starting$/;"	m	struct:block_def
is_Magic	regexp.c	30;"	d	file:
is_VIsual	structs.h	/^    int		is_VIsual;	\/\/ operator on Visual area$/;"	m	struct:oparg_S
is_acl_inherited	os_win32.c	/^is_acl_inherited(PACL acl)$/;"	f	file:
is_addpos	structs.h	/^    int		is_addpos;  \/\/ position specified directly by$/;"	m	struct:__anon240
is_aff_rule	spellfile.c	/^is_aff_rule($/;"	f	file:
is_autocmd_blocked	autocmd.c	/^is_autocmd_blocked(void)$/;"	f
is_cjk_font	gui_gtk_x11.c	/^is_cjk_font(PangoFontDescription *font_desc)$/;"	f	file:
is_click	mouse.c	/^    int	    is_click;		\/\/ Is it a mouse button click event?$/;"	m	struct:mousetable	file:
is_clipboard_needs_update	ui.c	/^is_clipboard_needs_update()$/;"	f
is_conpty_stable	os_win32.c	/^is_conpty_stable(void)$/;"	f
is_crypt_key_option	option.c	/^is_crypt_key_option(int opt_idx)$/;"	f
is_cygpty	iscygpty.c	/^int is_cygpty(int fd)$/;"	f
is_cygpty	iscygpty.h	37;"	d
is_cygpty_used	iscygpty.c	/^int is_cygpty_used(void)$/;"	f
is_cygpty_used	iscygpty.h	38;"	d
is_dev_fd_file	fileio.c	/^is_dev_fd_file(char_u *fname)$/;"	f
is_drag	mouse.c	/^    int	    is_drag;		\/\/ Is it a mouse drag event?$/;"	m	struct:mousetable	file:
is_end_label	vim9compile.c	/^    endlabel_T	*is_end_label;	    \/\/ instructions to set end label$/;"	m	struct:__anon125	file:
is_etag	tag.c	/^    int		is_etag;	\/\/ TRUE for emacs tag$/;"	m	struct:tag_pointers	file:
is_export	globals.h	/^EXTERN int	is_export INIT(= FALSE);    \/\/ :export {cmd}$/;"	v
is_global_local_option	option.c	/^is_global_local_option(int opt_idx)$/;"	f
is_global_option	option.c	/^is_global_option(int opt_idx)$/;"	f
is_hidden_option	option.c	/^is_hidden_option(int opt_idx)$/;"	f
is_ident	normal.c	/^is_ident(char_u *line, int offset)$/;"	f	file:
is_if_label	vim9compile.c	/^    int		is_if_label;	    \/\/ instruction idx at IF or ELSEIF$/;"	m	struct:__anon125	file:
is_ignore_draw	gui_photon.c	/^static int is_ignore_draw = FALSE;$/;"	v	file:
is_key_pressed	gui_gtk_x11.c	/^static gboolean is_key_pressed = FALSE;$/;"	v	file:
is_loclist_cmd	ex_docmd.c	/^is_loclist_cmd(int cmdidx)$/;"	f
is_mac_terminal	globals.h	/^EXTERN int	is_mac_terminal INIT(= FALSE);  \/\/ recognized Terminal.app$/;"	v
is_maphash_valid	map.c	/^is_maphash_valid(void)$/;"	f
is_mouse_key	mouse.c	/^is_mouse_key(int c)$/;"	f
is_mouse_topline	term.c	/^is_mouse_topline(win_T *wp)$/;"	f
is_not_a_term	main.c	/^is_not_a_term()$/;"	f
is_not_xterm	term.c	/^static int	is_not_xterm = FALSE;	    \/\/ recognized not-really-xterm$/;"	v	file:
is_number	ex_cmds.c	/^	    int is_number;		\/\/ TRUE when line contains a number$/;"	m	struct:__anon20::__anon21::__anon23	file:
is_oneChar	structs.h	/^    int		is_oneChar;	\/\/ TRUE if block within one character$/;"	m	struct:block_def
is_path_sep	os_mswin.c	1701;"	d	file:
is_permitted_term_api	terminal.c	/^is_permitted_term_api(char_u *func, char_u *pat)$/;"	f	file:
is_photon_available	os_qnx.c	/^int is_photon_available;$/;"	v
is_qf_entry_present	quickfix.c	/^is_qf_entry_present(qf_list_T *qfl, qfline_T *qf_ptr)$/;"	f	file:
is_qf_win	quickfix.c	/^is_qf_win(win_T *win, qf_info_T *qi)$/;"	f	file:
is_reparse_point_included	os_mswin.c	/^is_reparse_point_included(LPCWSTR fname)$/;"	f	file:
is_safe_now	main.c	/^is_safe_now(void)$/;"	f	file:
is_short	structs.h	/^    int		is_short;	\/\/ TRUE if line is too short to fit in block$/;"	m	struct:block_def
is_simple_key	json.c	/^is_simple_key(char_u *key)$/;"	f	file:
is_term_win32	os_win32.c	/^is_term_win32(void)$/;"	f
is_timeout	gui_photon.c	/^static short	    is_timeout;		    \/\/ Has the timeout occurred?$/;"	v	file:
is_unique	findfile.c	/^is_unique(char_u *maybe_unique, garray_T *gap, int i)$/;"	f	file:
is_valid_mess_lang	ex_cmds2.c	/^is_valid_mess_lang(char_u *lang)$/;"	f	file:
is_window_local_option	option.c	/^is_window_local_option(int opt_idx)$/;"	f
is_wprefix	iscygpty.c	104;"	d	file:
is_zero_width	search.c	/^is_zero_width(char_u *pattern, int move, pos_T *cur, int direction)$/;"	f	file:
isinf	macros.h	/^     static __inline int isinf(double x) { return !_finite(x) && !_isnan(x); }$/;"	f
isinf	macros.h	/^     static inline int isinf(double x) { return !isnan(x) && isnan(x - x); }$/;"	f
isn_T	vim9.h	/^} isn_T;$/;"	t	typeref:struct:__anon276
isn_arg	vim9.h	/^    } isn_arg;$/;"	m	struct:__anon276	typeref:union:__anon276::__anon277
isn_lnum	vim9.h	/^    int		isn_lnum;$/;"	m	struct:__anon276
isn_type	vim9.h	/^    isntype_T	isn_type;$/;"	m	struct:__anon276
isnan	macros.h	/^     static inline int isnan(double x) { return x != x; }$/;"	f
isnan	macros.h	274;"	d
isntype_T	vim9.h	/^} isntype_T;$/;"	t	typeref:enum:__anon260
isolated	arabic.c	/^    unsigned isolated;$/;"	m	struct:achar	file:
istate	regexp_nfa.c	/^static int istate;	\/\/ Index in the state vector, used in alloc_state()$/;"	v	file:
istermoption	option.c	/^istermoption(struct vimoption *p)$/;"	f	file:
istermoption_idx	option.c	/^istermoption_idx(int opt_idx)$/;"	f
ital_font	gui.h	/^    GuiFont	ital_font;	    \/\/ Italic font$/;"	m	struct:Gui
italic	structs.h	/^    int		italic;$/;"	m	struct:__anon246
item	list.c	/^    listitem_T	*item;$/;"	m	struct:__anon64	file:
item_compare	list.c	/^item_compare(const void *s1, const void *s2)$/;"	f	file:
item_compare2	list.c	/^item_compare2(const void *s1, const void *s2)$/;"	f	file:
item_compare_float	list.c	/^    int		item_compare_float;$/;"	m	struct:__anon65	file:
item_compare_func	list.c	/^    char_u	*item_compare_func;$/;"	m	struct:__anon65	file:
item_compare_func_err	list.c	/^    int		item_compare_func_err;$/;"	m	struct:__anon65	file:
item_compare_ic	list.c	/^    int		item_compare_ic;$/;"	m	struct:__anon65	file:
item_compare_keep_zero	list.c	/^    int		item_compare_keep_zero;$/;"	m	struct:__anon65	file:
item_compare_numbers	list.c	/^    int		item_compare_numbers;$/;"	m	struct:__anon65	file:
item_compare_numeric	list.c	/^    int		item_compare_numeric;$/;"	m	struct:__anon65	file:
item_compare_partial	list.c	/^    partial_T	*item_compare_partial;$/;"	m	struct:__anon65	file:
item_compare_selfdict	list.c	/^    dict_T	*item_compare_selfdict;$/;"	m	struct:__anon65	file:
item_copy	eval.c	/^item_copy($/;"	f
item_lock	evalvars.c	/^item_lock(typval_T *tv, int deep, int lock)$/;"	f	file:
itemcode	os_vms.c	/^    short	itemcode;$/;"	m	struct:__anon79	file:
j_charsets	hardcopy.c	/^static struct prt_ps_charset_S j_charsets[] =$/;"	v	typeref:struct:prt_ps_charset_S	file:
j_encodings	hardcopy.c	/^static struct prt_ps_encoding_S j_encodings[] =$/;"	v	typeref:struct:prt_ps_encoding_S	file:
jd_key	json.c	/^    char_u	  *jd_key;$/;"	m	struct:__anon63	file:
jd_key_tv	json.c	/^    typval_T	  jd_key_tv;$/;"	m	struct:__anon63	file:
jd_tv	json.c	/^    typval_T	  jd_tv;	\/\/ the list or dict$/;"	m	struct:__anon63	file:
jd_type	json.c	/^    json_decode_T jd_type;$/;"	m	struct:__anon63	file:
jo_ansi_colors	structs.h	/^    long_u	jo_ansi_colors[16];$/;"	m	struct:__anon233
jo_block_write	structs.h	/^    int		jo_block_write;	\/\/ for testing only$/;"	m	struct:__anon233
jo_bufnr_buf	structs.h	/^    buf_T	*jo_bufnr_buf;$/;"	m	struct:__anon233
jo_callback	structs.h	/^    callback_T	jo_callback;$/;"	m	struct:__anon233
jo_channel	structs.h	/^    channel_T	*jo_channel;$/;"	m	struct:__anon233
jo_close_cb	structs.h	/^    callback_T	jo_close_cb;$/;"	m	struct:__anon233
jo_curwin	structs.h	/^    int		jo_curwin;$/;"	m	struct:__anon233
jo_cwd	structs.h	/^    char_u	*jo_cwd;$/;"	m	struct:__anon233
jo_cwd_buf	structs.h	/^    char_u	jo_cwd_buf[NUMBUFLEN];$/;"	m	struct:__anon233
jo_drop_never	structs.h	/^    int		jo_drop_never;$/;"	m	struct:__anon233
jo_env	structs.h	/^    dict_T	*jo_env;	\/\/ environment variables$/;"	m	struct:__anon233
jo_eof_chars	structs.h	/^    char_u	*jo_eof_chars;$/;"	m	struct:__anon233
jo_eof_chars_buf	structs.h	/^    char_u	jo_eof_chars_buf[NUMBUFLEN];$/;"	m	struct:__anon233
jo_err_cb	structs.h	/^    callback_T	jo_err_cb;$/;"	m	struct:__anon233
jo_err_mode	structs.h	/^    ch_mode_T	jo_err_mode;$/;"	m	struct:__anon233
jo_err_timeout	structs.h	/^    int		jo_err_timeout;$/;"	m	struct:__anon233
jo_exit_cb	structs.h	/^    callback_T	jo_exit_cb;$/;"	m	struct:__anon233
jo_hidden	structs.h	/^    int		jo_hidden;$/;"	m	struct:__anon233
jo_id	structs.h	/^    int		jo_id;$/;"	m	struct:__anon233
jo_in_bot	structs.h	/^    linenr_T	jo_in_bot;$/;"	m	struct:__anon233
jo_in_mode	structs.h	/^    ch_mode_T	jo_in_mode;$/;"	m	struct:__anon233
jo_in_top	structs.h	/^    linenr_T	jo_in_top;$/;"	m	struct:__anon233
jo_io	structs.h	/^    job_io_T	jo_io[4];	\/\/ PART_OUT, PART_ERR, PART_IN$/;"	m	struct:__anon233
jo_io_buf	structs.h	/^    int		jo_io_buf[4];$/;"	m	struct:__anon233
jo_io_name	structs.h	/^    char_u	*jo_io_name[4];	\/\/ not allocated!$/;"	m	struct:__anon233
jo_io_name_buf	structs.h	/^    char_u	jo_io_name_buf[4][NUMBUFLEN];$/;"	m	struct:__anon233
jo_message	structs.h	/^    int		jo_message[4];$/;"	m	struct:__anon233
jo_mode	structs.h	/^    ch_mode_T	jo_mode;$/;"	m	struct:__anon233
jo_modifiable	structs.h	/^    int		jo_modifiable[4];$/;"	m	struct:__anon233
jo_noblock	structs.h	/^    int		jo_noblock;$/;"	m	struct:__anon233
jo_out_cb	structs.h	/^    callback_T	jo_out_cb;$/;"	m	struct:__anon233
jo_out_mode	structs.h	/^    ch_mode_T	jo_out_mode;$/;"	m	struct:__anon233
jo_out_timeout	structs.h	/^    int		jo_out_timeout;$/;"	m	struct:__anon233
jo_part	structs.h	/^    int		jo_part;$/;"	m	struct:__anon233
jo_pty	structs.h	/^    int		jo_pty;$/;"	m	struct:__anon233
jo_set	structs.h	/^    int		jo_set;		\/\/ JO_ bits for values that were set$/;"	m	struct:__anon233
jo_set2	structs.h	/^    int		jo_set2;	\/\/ JO2_ bits for values that were set$/;"	m	struct:__anon233
jo_stoponexit	structs.h	/^    char_u	*jo_stoponexit;$/;"	m	struct:__anon233
jo_stoponexit_buf	structs.h	/^    char_u	jo_stoponexit_buf[NUMBUFLEN];$/;"	m	struct:__anon233
jo_term_api	structs.h	/^    char_u	*jo_term_api;$/;"	m	struct:__anon233
jo_term_api_buf	structs.h	/^    char_u	jo_term_api_buf[NUMBUFLEN];$/;"	m	struct:__anon233
jo_term_cols	structs.h	/^    int		jo_term_cols;$/;"	m	struct:__anon233
jo_term_finish	structs.h	/^    int		jo_term_finish;$/;"	m	struct:__anon233
jo_term_kill	structs.h	/^    char_u	*jo_term_kill;$/;"	m	struct:__anon233
jo_term_kill_buf	structs.h	/^    char_u	jo_term_kill_buf[NUMBUFLEN];$/;"	m	struct:__anon233
jo_term_name	structs.h	/^    char_u	*jo_term_name;$/;"	m	struct:__anon233
jo_term_name_buf	structs.h	/^    char_u	jo_term_name_buf[NUMBUFLEN];$/;"	m	struct:__anon233
jo_term_norestore	structs.h	/^    int		jo_term_norestore;$/;"	m	struct:__anon233
jo_term_opencmd	structs.h	/^    char_u	*jo_term_opencmd;$/;"	m	struct:__anon233
jo_term_opencmd_buf	structs.h	/^    char_u	jo_term_opencmd_buf[NUMBUFLEN];$/;"	m	struct:__anon233
jo_term_rows	structs.h	/^    int		jo_term_rows;$/;"	m	struct:__anon233
jo_timeout	structs.h	/^    int		jo_timeout;$/;"	m	struct:__anon233
jo_tty_type	structs.h	/^    int		jo_tty_type;	    \/\/ first character of "tty_type"$/;"	m	struct:__anon233
jo_vertical	structs.h	/^    int		jo_vertical;$/;"	m	struct:__anon233
jo_waittime	structs.h	/^    int		jo_waittime;$/;"	m	struct:__anon233
job_T	structs.h	/^typedef struct jobvar_S job_T;$/;"	t	typeref:struct:jobvar_S
job_alloc	channel.c	/^job_alloc(void)$/;"	f
job_any_running	channel.c	/^job_any_running()$/;"	f
job_channel_can_close	channel.c	/^job_channel_can_close(job_T *job)$/;"	f	file:
job_channel_still_useful	channel.c	/^job_channel_still_useful(job_T *job)$/;"	f	file:
job_check_ended	channel.c	/^job_check_ended(void)$/;"	f
job_cleanup	channel.c	/^job_cleanup(job_T *job)$/;"	f
job_free	channel.c	/^job_free(job_T *job)$/;"	f	file:
job_free_all	channel.c	/^job_free_all(void)$/;"	f
job_free_contents	channel.c	/^job_free_contents(job_T *job)$/;"	f	file:
job_free_job	channel.c	/^job_free_job(job_T *job)$/;"	f	file:
job_free_later	channel.c	/^job_free_later(job_T *job)$/;"	f	file:
job_info	channel.c	/^job_info(job_T *job, dict_T *dict)$/;"	f	file:
job_info_all	channel.c	/^job_info_all(list_T *l)$/;"	f	file:
job_io_T	structs.h	/^} job_io_T;$/;"	t	typeref:enum:__anon230
job_io_file_open	os_win32.c	/^job_io_file_open($/;"	f	file:
job_need_end_check	channel.c	/^job_need_end_check(job_T *job)$/;"	f	file:
job_set_options	channel.c	/^job_set_options(job_T *job, jobopt_T *opt)$/;"	f
job_start	channel.c	/^job_start($/;"	f
job_status	channel.c	/^job_status(job_T *job)$/;"	f
job_still_useful	channel.c	/^job_still_useful(job_T *job)$/;"	f	file:
job_stop	channel.c	/^job_stop(job_T *job, typval_T *argvars, char *type)$/;"	f
job_stop_on_exit	channel.c	/^job_stop_on_exit(void)$/;"	f
job_unlink	channel.c	/^job_unlink(job_T *job)$/;"	f	file:
job_unref	channel.c	/^job_unref(job_T *job)$/;"	f
jobname	structs.h	/^    char_u	*jobname;$/;"	m	struct:__anon247
jobopt_T	structs.h	/^} jobopt_T;$/;"	t	typeref:struct:__anon233
jobs_to_free	channel.c	/^static job_T *jobs_to_free = NULL;$/;"	v	file:
jobstatus_T	structs.h	/^} jobstatus_T;$/;"	t	typeref:enum:__anon228
jobvar_S	structs.h	/^struct jobvar_S$/;"	s
join_S	list.c	/^typedef struct join_S {$/;"	s	file:
join_T	list.c	/^} join_T;$/;"	t	typeref:struct:join_S	file:
join_prop_lines	textprop.c	/^join_prop_lines($/;"	f
jq_next	structs.h	/^    jsonq_T	*jq_next;$/;"	m	struct:jsonq_S
jq_no_callback	structs.h	/^    int		jq_no_callback; \/\/ TRUE when no callback was found$/;"	m	struct:jsonq_S
jq_prev	structs.h	/^    jsonq_T	*jq_prev;$/;"	m	struct:jsonq_S
jq_value	structs.h	/^    typval_T	*jq_value;$/;"	m	struct:jsonq_S
js_buf	structs.h	/^    char_u	*js_buf;	\/\/ text to be decoded$/;"	m	struct:js_reader
js_cookie	structs.h	/^    void	*js_cookie;	\/\/ can be used by js_fill$/;"	m	struct:js_reader
js_cookie_arg	structs.h	/^    int		js_cookie_arg;	\/\/ can be used by js_fill$/;"	m	struct:js_reader
js_end	structs.h	/^    char_u	*js_end;	\/\/ NUL in js_buf$/;"	m	struct:js_reader
js_fill	structs.h	/^    int		(*js_fill)(struct js_reader *);$/;"	m	struct:js_reader
js_read_T	structs.h	/^typedef struct js_reader js_read_T;$/;"	t	typeref:struct:js_reader
js_reader	structs.h	/^struct js_reader$/;"	s
js_used	structs.h	/^    int		js_used;	\/\/ bytes used from js_buf$/;"	m	struct:js_reader
json_dec_item_T	json.c	/^} json_dec_item_T;$/;"	t	typeref:struct:__anon63	file:
json_decode	json.c	/^json_decode(js_read_T *reader, typval_T *res, int options)$/;"	f
json_decode_T	json.c	/^} json_decode_T;$/;"	t	typeref:enum:__anon62	file:
json_decode_all	json.c	/^json_decode_all(js_read_T *reader, typval_T *res, int options)$/;"	f	file:
json_decode_item	json.c	/^json_decode_item(js_read_T *reader, typval_T *res, int options)$/;"	f	file:
json_decode_string	json.c	/^json_decode_string(js_read_T *reader, typval_T *res, int quote)$/;"	f	file:
json_encode	json.c	/^json_encode(typval_T *val, int options)$/;"	f
json_encode_gap	json.c	/^json_encode_gap(garray_T *gap, typval_T *val, int options)$/;"	f	file:
json_encode_item	json.c	/^json_encode_item(garray_T *gap, typval_T *val, int copyID, int options)$/;"	f	file:
json_encode_nr_expr	json.c	/^json_encode_nr_expr(int nr, typval_T *val, int options)$/;"	f
json_find_end	json.c	/^json_find_end(js_read_T *reader, int options)$/;"	f
json_skip_white	json.c	/^json_skip_white(js_read_T *reader)$/;"	f	file:
jsonq_S	structs.h	/^struct jsonq_S$/;"	s
jsonq_T	structs.h	/^typedef struct jsonq_S jsonq_T;$/;"	t	typeref:struct:jsonq_S
jump	vim9.h	/^	jump_T		    jump;$/;"	m	union:__anon276::__anon277
jumpProc	gui_at_sb.h	/^    XtCallbackList jumpProc;	\/\/ same as thumbProc but pass data by ref$/;"	m	struct:__anon143
jump_T	vim9.h	/^} jump_T;$/;"	t	typeref:struct:__anon266
jump_to_help_window	quickfix.c	/^jump_to_help_window(qf_info_T *qi, int newwin, int *opened_window)$/;"	f	file:
jump_to_mouse	mouse.c	/^jump_to_mouse($/;"	f
jump_when	vim9.h	/^    jumpwhen_T	jump_when;$/;"	m	struct:__anon266
jump_where	vim9.h	/^    int		jump_where;	    \/\/ position to jump to$/;"	m	struct:__anon266
jumpto_tag	tag.c	/^jumpto_tag($/;"	f	file:
jumpwhen_T	vim9.h	/^} jumpwhen_T;$/;"	t	typeref:enum:__anon265
jv_argv	structs.h	/^    char	**jv_argv;	\/\/ command line used to start the job$/;"	m	struct:jobvar_S
jv_channel	structs.h	/^    channel_T	*jv_channel;	\/\/ channel for I\/O, reference counted$/;"	m	struct:jobvar_S
jv_copyID	structs.h	/^    int		jv_copyID;$/;"	m	struct:jobvar_S
jv_exit_cb	structs.h	/^    callback_T	jv_exit_cb;$/;"	m	struct:jobvar_S
jv_exitval	structs.h	/^    int		jv_exitval;$/;"	m	struct:jobvar_S
jv_in_buf	structs.h	/^    buf_T	*jv_in_buf;	\/\/ buffer from "in-name"$/;"	m	struct:jobvar_S
jv_job_object	structs.h	/^    HANDLE		jv_job_object;$/;"	m	struct:jobvar_S
jv_next	structs.h	/^    job_T	*jv_next;$/;"	m	struct:jobvar_S
jv_pid	structs.h	/^    pid_t	jv_pid;$/;"	m	struct:jobvar_S
jv_prev	structs.h	/^    job_T	*jv_prev;$/;"	m	struct:jobvar_S
jv_proc_info	structs.h	/^    PROCESS_INFORMATION	jv_proc_info;$/;"	m	struct:jobvar_S
jv_refcount	structs.h	/^    int		jv_refcount;	\/\/ reference count$/;"	m	struct:jobvar_S
jv_status	structs.h	/^    jobstatus_T	jv_status;$/;"	m	struct:jobvar_S
jv_stoponexit	structs.h	/^    char_u	*jv_stoponexit;	\/\/ allocated$/;"	m	struct:jobvar_S
jv_termsig	structs.h	/^    char_u	*jv_termsig;	\/\/ allocated$/;"	m	struct:jobvar_S
jv_tty_in	structs.h	/^    char_u	*jv_tty_in;	\/\/ controlling tty input, allocated$/;"	m	struct:jobvar_S
jv_tty_out	structs.h	/^    char_u	*jv_tty_out;	\/\/ controlling tty output, allocated$/;"	m	struct:jobvar_S
jv_tty_type	structs.h	/^    char_u	*jv_tty_type;	\/\/ allocated$/;"	m	struct:jobvar_S
kCreateEmpty	gui_mac.c	116;"	d	file:
kCreateRect	gui_mac.c	117;"	d	file:
kDestroy	gui_mac.c	118;"	d	file:
kMyDataBrowserAttributeListViewAlternatingRowColors	gui_mac.c	/^enum { kMyDataBrowserAttributeListViewAlternatingRowColors = (1 << 1) };$/;"	e	enum:__anon43	file:
kNothing	gui_mac.c	115;"	d	file:
kTabContextMenuId	gui_mac.c	/^    kTabContextMenuId = 42$/;"	e	enum:__anon41	file:
kTabsColumn	gui_mac.c	/^    kTabsColumn = 'Tabs'$/;"	e	enum:__anon42	file:
k_char	structs.h	/^    int		k_char;		\/\/ conceal substitute character$/;"	m	struct:keyentry
k_charsets	hardcopy.c	/^static struct prt_ps_charset_S k_charsets[] =$/;"	v	typeref:struct:prt_ps_charset_S	file:
k_encodings	hardcopy.c	/^static struct prt_ps_encoding_S k_encodings[] =$/;"	v	typeref:struct:prt_ps_encoding_S	file:
k_syn	structs.h	/^    struct sp_syn k_syn;	\/\/ struct passed to in_id_list()$/;"	m	struct:keyentry	typeref:struct:keyentry::sp_syn
ke_next	structs.h	/^    keyentry_T	*ke_next;	\/\/ next entry with identical "keyword[]"$/;"	m	struct:keyentry
keep_filetype	globals.h	/^EXTERN int	keep_filetype INIT(= FALSE);	\/\/ value for did_filetype when$/;"	v
keep_help_flag	globals.h	/^EXTERN int	keep_help_flag INIT(= FALSE); \/\/ doing :ta from help file$/;"	v
keep_msg	globals.h	/^EXTERN char_u	*keep_msg INIT(= NULL);	    \/\/ msg to be shown after redraw$/;"	v
keep_msg_attr	globals.h	/^EXTERN int	keep_msg_attr INIT(= 0);    \/\/ highlight attr for keep_msg$/;"	v
keep_msg_more	globals.h	/^EXTERN int	keep_msg_more INIT(= FALSE); \/\/ keep_msg was set by msgmore()$/;"	v
keepalt	structs.h	/^    int		keepalt;		\/\/ TRUE when ":keepalt" was used$/;"	m	struct:__anon191
keepend_level	syntax.c	/^static int keepend_level = -1;$/;"	v	file:
keepjumps	structs.h	/^    int		keepjumps;		\/\/ TRUE when ":keepjumps" was used$/;"	m	struct:__anon191
keepmarks	structs.h	/^    int		keepmarks;		\/\/ TRUE when ":keepmarks" was used$/;"	m	struct:__anon191
keeppatterns	structs.h	/^    int		keeppatterns;		\/\/ TRUE when ":keeppatterns" was used$/;"	m	struct:__anon191
key	misc2.c	/^    int	    key;	\/\/ Special key code or ascii value$/;"	m	struct:key_name_entry	file:
keyEventHandlerUPP	gui_mac.c	/^static EventHandlerUPP keyEventHandlerUPP = NULL;$/;"	v	file:
keyHead	netbeans.c	/^static keyQ_T keyHead; \/\/ dummy node, header for circular queue$/;"	v	file:
keyQ_T	netbeans.c	/^typedef struct keyqueue keyQ_T;$/;"	t	typeref:struct:keyqueue	file:
key_event	gui_beval.c	/^key_event(BalloonEval *beval, unsigned keyval, int is_keypress)$/;"	f	file:
key_extra	keymap.h	/^enum key_extra$/;"	g
key_name_entry	misc2.c	/^static struct key_name_entry$/;"	s	file:
key_names	term.c	/^static char *(key_names[]) =$/;"	v	file:
key_names_table	misc2.c	/^} key_names_table[] =$/;"	v	typeref:struct:key_name_entry	file:
key_press_event	gui_gtk_x11.c	/^key_press_event(GtkWidget *widget UNUSED,$/;"	f	file:
key_release_event	gui_gtk_x11.c	/^key_release_event(GtkWidget *widget UNUSED,$/;"	f	file:
key_sym	gui_gtk_x11.c	/^    guint key_sym;$/;"	m	struct:special_key	file:
key_sym	gui_mac.c	/^    KeySym  key_sym;$/;"	m	struct:__anon39	file:
key_sym	gui_photon.c	/^    int	    key_sym;$/;"	m	struct:__anon45	file:
key_sym	gui_w32.c	/^    UINT    key_sym;$/;"	m	struct:__anon46	file:
key_sym	gui_x11.c	/^    KeySym  key_sym;$/;"	m	struct:specialkey	file:
keyentry	structs.h	/^struct keyentry$/;"	s
keyentry_T	structs.h	/^typedef struct keyentry keyentry_T;$/;"	t	typeref:struct:keyentry
keyhit_callback	gui_athena.c	/^keyhit_callback($/;"	f	file:
keyhit_callback	gui_motif.c	/^keyhit_callback($/;"	f	file:
keymap_clear	digraph.c	/^keymap_clear(garray_T *kmap)$/;"	f
keymap_init	digraph.c	/^keymap_init(void)$/;"	f
keymap_unload	digraph.c	/^keymap_unload(void)$/;"	f	file:
keyqueue	netbeans.c	/^struct keyqueue$/;"	s	file:
keys	crypt_zip.c	/^    u32_T keys[3];$/;"	m	struct:__anon8	file:
keystr	netbeans.c	/^    char_u	    *keystr;$/;"	m	struct:keyqueue	file:
keysum	blowfish.c	/^    UINT32_T keysum;$/;"	m	struct:__anon3	file:
keyval_to_string	gui_gtk_x11.c	/^keyval_to_string(unsigned int keyval, unsigned int state, char_u *string)$/;"	f	file:
keyword	structs.h	/^    char_u	keyword[1];	\/\/ actually longer$/;"	m	struct:keyentry
keyword	syntax.c	/^    int		keyword;	\/\/ TRUE for ":syn keyword"$/;"	m	struct:__anon115	file:
km_startsel	globals.h	/^EXTERN int	km_startsel INIT(= FALSE);$/;"	v
km_stopsel	globals.h	/^EXTERN int	km_stopsel INIT(= FALSE);$/;"	v
kmap_T	digraph.c	/^} kmap_T;$/;"	t	typeref:struct:__anon12	file:
ks_tbl	term.c	/^static struct ks_tbl_s ks_tbl[] =$/;"	v	typeref:struct:ks_tbl_s	file:
ks_tbl_s	term.c	/^struct ks_tbl_s$/;"	s	file:
ksmd_str	term.c	/^static char ksmd_str[20];$/;"	v	file:
ksme_str	term.c	/^static char ksme_str[20];$/;"	v	file:
ksmr_str	term.c	/^static char ksmr_str[20];$/;"	v	file:
lParam	gui_w32.c	/^    LPARAM	lParam;$/;"	m	struct:tagNMTTDISPINFOA	file:
lParam	gui_w32.c	/^    LPARAM	lParam;$/;"	m	struct:tagNMTTDISPINFOW	file:
lParam	gui_w32.c	/^    LPARAM     lParam;$/;"	m	struct:tagNMTTDISPINFOW_NEW	file:
lParam	gui_w32.c	/^    LPARAM     lParam;$/;"	m	struct:tagNMTTDISPINFO_NEW	file:
lParam	gui_w32.c	/^    LPARAM     lParam;$/;"	m	struct:tagTOOLINFOA_NEW	file:
lParam	gui_w32.c	/^    LPARAM     lParam;$/;"	m	struct:tagTOOLINFOW_NEW	file:
lParam	os_mswin.c	/^    LPARAM      lParam;$/;"	m	struct:enum_windows_s	file:
l_avars	structs.h	/^    dict_T	l_avars;	\/\/ a: argument variables$/;"	m	struct:funccall_S
l_avars_var	structs.h	/^    dictitem_T	l_avars_var;	\/\/ variable for a: scope$/;"	m	struct:funccall_S
l_listitems	structs.h	/^    listitem_T	l_listitems[MAX_FUNC_ARGS];	\/\/ listitems for a:000$/;"	m	struct:funccall_S
l_varlist	structs.h	/^    list_T	l_varlist;	\/\/ list for a:000$/;"	m	struct:funccall_S
l_vars	structs.h	/^    dict_T	l_vars;		\/\/ l: local function variables$/;"	m	struct:funccall_S
l_vars_var	structs.h	/^    dictitem_T	l_vars_var;	\/\/ variable for l: scope$/;"	m	struct:funccall_S
label	gui_xmebwp.h	/^    XmLabelPart label;$/;"	m	struct:_XmEnhancedButtonRec
label	structs.h	/^    GtkWidget   *label;		    \/\/ Used by "set wak=" code.$/;"	m	struct:VimMenu
label_class	gui_xmebwp.h	/^    XmLabelClassPart label_class;$/;"	m	struct:__anon146
label_expose	gui_motif.c	/^label_expose(Widget _w, XEvent *_event, Region _region)$/;"	f	file:
label_location	gui_xmebwp.h	/^    int label_location;$/;"	m	struct:_XmEnhancedButtonPart
lalloc	misc2.c	/^lalloc(size_t size, int message)$/;"	f
lalloc_clear	misc2.c	/^lalloc_clear(size_t size, int message)$/;"	f
lalloc_id	misc2.c	/^lalloc_id(size_t size, int message, alloc_id_T id UNUSED)$/;"	f
langmap_adjust_mb	map.c	/^langmap_adjust_mb(int c)$/;"	f
langmap_entry_T	map.c	/^} langmap_entry_T;$/;"	t	typeref:struct:__anon66	file:
langmap_init	map.c	/^langmap_init(void)$/;"	f
langmap_mapchar	globals.h	/^EXTERN char_u	langmap_mapchar[256];	\/\/ mapping for language keys$/;"	v
langmap_mapga	map.c	/^static garray_T langmap_mapga;$/;"	v	file:
langmap_set	map.c	/^langmap_set(void)$/;"	f
langmap_set_entry	map.c	/^langmap_set_entry(int from, int to)$/;"	f	file:
langp_S	spell.h	/^typedef struct langp_S$/;"	s
langp_T	spell.h	/^} langp_T;$/;"	t	typeref:struct:langp_S
last	autocmd.c	/^    char	    last;		\/\/ last command in list$/;"	m	struct:AutoCmd	file:
last	autocmd.c	/^    char	    last;		\/\/ last pattern for apply_autocmds()$/;"	m	struct:AutoPat	file:
last	mbyte.c	/^    long last;$/;"	m	struct:interval	file:
lastMouseTick	gui_mac.c	/^static long lastMouseTick = 0;$/;"	v	file:
last_autopat	autocmd.c	/^static AutoPat *last_autopat[NUM_EVENTS] =$/;"	v	file:
last_breakp	debugger.c	/^static int last_breakp = 0;	\/\/ nr of last defined breakpoint$/;"	v	file:
last_cmdline	globals.h	/^EXTERN char_u	*last_cmdline INIT(= NULL); \/\/ last command line (for ":)$/;"	v
last_csearch	search.c	/^last_csearch(void)$/;"	f
last_csearch_forward	search.c	/^last_csearch_forward(void)$/;"	f
last_csearch_until	search.c	/^last_csearch_until(void)$/;"	f
last_cursormoved	globals.h	/^EXTERN pos_T	last_cursormoved	      \/\/ for CursorMoved event$/;"	v
last_event	autocmd.c	/^static event_T	last_event;$/;"	v	file:
last_group	autocmd.c	/^static int	last_group;$/;"	v	file:
last_idx	search.c	/^static int last_idx = 0;	\/\/ index in spats[] for RE_LAST$/;"	v	file:
last_insert	edit.c	/^static char_u	*last_insert = NULL;	\/\/ the text of the previous insert,$/;"	v	file:
last_insert_skip	edit.c	/^static int	last_insert_skip; \/\/ nr of chars in front of previous insert$/;"	v	file:
last_maptick	cmdhist.c	/^static int	last_maptick = -1;	\/\/ last seen maptick$/;"	v	file:
last_matchgroup	syntax.c	/^static int  last_matchgroup;$/;"	v	file:
last_mouse_event	gui_x11.c	/^static XButtonPressedEvent last_mouse_event;$/;"	v	file:
last_msg_hist	message.c	/^static struct msg_hist *last_msg_hist = NULL;$/;"	v	typeref:struct:msg_hist	file:
last_msgchunk	message.c	/^static msgchunk_T *last_msgchunk = NULL; \/\/ last displayed text$/;"	v	file:
last_pat_prog	search.c	/^last_pat_prog(regmmatch_T *regmatch)$/;"	f
last_qf_id	quickfix.c	/^static int_u last_qf_id = 0;	\/\/ Last used quickfix list id$/;"	v	file:
last_recorded_len	getchar.c	/^static int	last_recorded_len = 0;	\/\/ number of last recorded chars$/;"	v	file:
last_search_pat	search.c	/^last_search_pat(void)$/;"	f
last_search_pattern	search.c	/^last_search_pattern(void)$/;"	f
last_set_cursor_blink	terminal.c	/^static int	last_set_cursor_blink = -1;$/;"	v	file:
last_set_cursor_color	terminal.c	/^static char_u	*last_set_cursor_color = NULL;$/;"	v	file:
last_set_cursor_shape	terminal.c	/^static int	last_set_cursor_shape = -1;$/;"	v	file:
last_set_msg	eval.c	/^last_set_msg(sctx_T script_ctx)$/;"	f
last_shape	gui_gtk_x11.c	/^static int last_shape = 0;$/;"	v	file:
last_shape	gui_photon.c	/^static int last_shape = 0;$/;"	v	file:
last_shape	gui_x11.c	/^static int last_shape = 0;$/;"	v	file:
last_sourcing_lnum	message.c	/^static int	last_sourcing_lnum = 0;$/;"	v	file:
last_sourcing_name	message.c	/^static char_u   *last_sourcing_name = NULL;$/;"	v	file:
last_status	window.c	/^last_status($/;"	f
last_status_rec	window.c	/^last_status_rec(frame_T *fr, int statusline)$/;"	f	file:
last_t_cmd	search.c	/^static int last_t_cmd = TRUE;		\/\/ last search t_cmd$/;"	v	file:
last_timer_id	time.c	/^static long	last_timer_id = 0;$/;"	v	file:
last_win_id	window.c	/^static int last_win_id = LOWEST_WIN_ID - 1;$/;"	v	file:
last_window	window.c	/^last_window(void)$/;"	f	file:
lastbuf	globals.h	/^EXTERN buf_T	*lastbuf INIT(= NULL);	\/\/ last buffer$/;"	v
lastc	search.c	/^static char_u lastc[2] = {NUL, NUL};	\/\/ last character searched for$/;"	v	file:
lastc_bytelen	search.c	/^static int	lastc_bytelen = 1;	\/\/ >1 for multi-byte char$/;"	v	file:
lastc_bytes	search.c	/^static char_u	lastc_bytes[MB_MAXBYTES + 1];$/;"	v	file:
lastcdir	search.c	/^static int lastcdir = FORWARD;		\/\/ last direction of character search$/;"	v	file:
lastdict	if_py_both.h	/^static pylinkedlist_T *lastdict = NULL;$/;"	v
lastfunc	if_py_both.h	/^static pylinkedlist_T *lastfunc = NULL;$/;"	v
lasticon	buffer.c	/^static char_u *lasticon = NULL;$/;"	v	file:
lastline	structs.h	/^    linenr_T	lastline;	\/\/ last line of range$/;"	m	struct:__anon223
lastlist	if_py_both.h	/^static pylinkedlist_T *lastlist = NULL;$/;"	v
lastlist	regexp.h	/^    int			lastlist[2]; \/\/ 0: normal, 1: recursive$/;"	m	struct:nfa_state
lastmark	undo.c	/^static int	lastmark = 0;$/;"	v	file:
lastoption	if_py_both.h	/^    void	*lastoption;$/;"	m	struct:__anon160
lasttitle	buffer.c	/^static char_u *lasttitle = NULL;$/;"	v	file:
lastwin	globals.h	/^EXTERN win_T	*lastwin;		\/\/ last window$/;"	v
latin1flags	charset.c	/^static char_u latin1flags[257] = "                                                                 UUUUUUUUUUUUUUUUUUUUUUUUUU      llllllllllllllllllllllllll                                                                     UUUUUUUUUUUUUUUUUUUUUUU UUUUUUUllllllllllllllllllllllll llllllll";$/;"	v	file:
latin1lower	charset.c	/^static char_u latin1lower[257] = "                                 !\\"#$%&'()*+,-.\/0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\\x7f\\x80\\x81\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xb0\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xd7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\\xdf\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\\xff";$/;"	v	file:
latin1upper	charset.c	/^static char_u latin1upper[257] = "                                 !\\"#$%&'()*+,-.\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~\\x7f\\x80\\x81\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xb0\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf\\xc0\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd1\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xdf\\xc0\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd1\\xd2\\xd3\\xd4\\xd5\\xd6\\xf7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xff";$/;"	v	file:
latin9_to_ucs	gui_w32.c	/^latin9_to_ucs(char_u *text, int len, WCHAR *unicodebuf)$/;"	f	file:
latin_char2bytes	mbyte.c	/^latin_char2bytes(int c, char_u *buf)$/;"	f
latin_char2cells	mbyte.c	/^latin_char2cells(int c UNUSED)$/;"	f
latin_char2len	mbyte.c	/^latin_char2len(int c UNUSED)$/;"	f
latin_head_off	mbyte.c	/^latin_head_off(char_u *base UNUSED, char_u *p UNUSED)$/;"	f
latin_off2cells	mbyte.c	/^latin_off2cells(unsigned off UNUSED, unsigned max_off UNUSED)$/;"	f
latin_ptr2cells	mbyte.c	/^latin_ptr2cells(char_u *p UNUSED)$/;"	f
latin_ptr2cells_len	mbyte.c	/^latin_ptr2cells_len(char_u *p UNUSED, int size UNUSED)$/;"	f
latin_ptr2char	mbyte.c	/^latin_ptr2char(char_u *p)$/;"	f
latin_ptr2len	mbyte.c	/^latin_ptr2len(char_u *p)$/;"	f
latin_ptr2len_len	mbyte.c	/^latin_ptr2len_len(char_u *p, int size)$/;"	f
lbase	if_tcl.c	/^    int lbase;$/;"	m	struct:__anon60	file:
lbr_chartabsize	charset.c	/^lbr_chartabsize($/;"	f
lbr_chartabsize_adv	charset.c	/^lbr_chartabsize_adv($/;"	f
lc_active	os_unix.c	/^static volatile sig_atomic_t lc_active INIT(= FALSE);$/;"	v	file:
lc_jump_env	os_unix.c	/^static JMP_BUF lc_jump_env;$/;"	v	file:
lc_signal	os_unix.c	/^static volatile sig_atomic_t lc_signal;$/;"	v	file:
lcs_conceal	globals.h	/^EXTERN int	lcs_conceal INIT(= ' ');$/;"	v
lcs_eol	globals.h	/^EXTERN int	lcs_eol INIT(= '$');$/;"	v
lcs_ext	globals.h	/^EXTERN int	lcs_ext INIT(= NUL);$/;"	v
lcs_nbsp	globals.h	/^EXTERN int	lcs_nbsp INIT(= NUL);$/;"	v
lcs_prec	globals.h	/^EXTERN int	lcs_prec INIT(= NUL);$/;"	v
lcs_space	globals.h	/^EXTERN int	lcs_space INIT(= NUL);$/;"	v
lcs_tab1	globals.h	/^EXTERN int	lcs_tab1 INIT(= NUL);$/;"	v
lcs_tab2	globals.h	/^EXTERN int	lcs_tab2 INIT(= NUL);$/;"	v
lcs_tab3	globals.h	/^EXTERN int	lcs_tab3 INIT(= NUL);$/;"	v
lcs_trail	globals.h	/^EXTERN int	lcs_trail INIT(= NUL);$/;"	v
lead_spaces	hardcopy.c	/^    int		lead_spaces;	    \/\/ remaining spaces for a TAB$/;"	m	struct:__anon47	file:
leave_cleanup	ex_eval.c	/^leave_cleanup(cleanup_T *csp)$/;"	f
leave_notify_event	gui_gtk_x11.c	/^leave_notify_event(GtkWidget *widget UNUSED,$/;"	f	file:
leave_tabpage	window.c	/^leave_tabpage($/;"	f	file:
leaving_window	window.c	/^leaving_window(win_T *win)$/;"	f	file:
left_sbar_x	gui.h	/^    int		left_sbar_x;	    \/\/ Calculated x coord for left scrollbar$/;"	m	struct:Gui
leftcol_changed	misc2.c	/^leftcol_changed(void)$/;"	f
len	hardcopy.c	/^    int		len;$/;"	m	struct:prt_dsc_comment_S	file:
len	hardcopy.c	/^    int		len;$/;"	m	struct:prt_dsc_line_S	file:
len	hardcopy.c	/^    int     len;$/;"	m	struct:prt_resfile_buffer_S	file:
len	if_xcmdsrv.c	/^    long_u		len;$/;"	m	struct:x_cmdqueue	file:
len	regexp_nfa.c	/^    int		    len;	\/\/ max nr of states in "t"$/;"	m	struct:__anon108	file:
len	structs.h	/^    int		len;	\/\/ length: 0 - to the end of line$/;"	m	struct:__anon241
len	tag.c	/^    int		len;		\/\/ length of pat[]$/;"	m	struct:__anon118	file:
len	term.c	/^    int	    len;	    \/\/ STRLEN(code)$/;"	m	struct:termcode	file:
lenfunc	if_python.c	104;"	d	file:
length	gui_at_sb.h	/^    Dimension	  length;	\/\/ either height or width$/;"	m	struct:__anon143
length	os_vms.c	/^	    char	length;$/;"	m	struct:__anon76::__anon77::__anon78	file:
level	scriptfile.c	/^    int		level;		\/\/ top nesting level of sourced file$/;"	m	struct:source_cookie	file:
level	structs.h	/^    int		level;		\/\/ top nesting level of executed function$/;"	m	struct:funccall_S
li_next	structs.h	/^    listitem_T	*li_next;	\/\/ next item in list$/;"	m	struct:listitem_S
li_prev	structs.h	/^    listitem_T	*li_prev;	\/\/ previous item in list$/;"	m	struct:listitem_S
li_tv	structs.h	/^    typval_T	li_tv;		\/\/ type and value of the variable$/;"	m	struct:listitem_S
libcall_common	evalfunc.c	/^libcall_common(typval_T *argvars UNUSED, typval_T *rettv, int type)$/;"	f	file:
libintl_wputenv	vim.h	545;"	d
limit_pos	syntax.c	/^limit_pos(lpos_T *pos, lpos_T *limit)$/;"	f	file:
limit_pos_zero	syntax.c	/^limit_pos_zero($/;"	f	file:
limit_screen_size	term.c	/^limit_screen_size(void)$/;"	f
limit_scrollback	terminal.c	/^limit_scrollback(term_T *term, garray_T *gap, int update_buffer)$/;"	f	file:
limit_thumb	gui_at_sb.h	/^    Bool	limit_thumb;	\/\/ limit thumb to inside scrollbar$/;"	m	struct:__anon143
limitscore_T	spellsuggest.c	/^} limitscore_T;$/;"	t	typeref:struct:__anon114	file:
line	ex_cmds.c	/^	} line;$/;"	m	union:__anon20::__anon21	typeref:struct:__anon20::__anon21::__anon22	file:
line	ex_docmd.c	/^    char_u	*line;		\/\/ command line$/;"	m	struct:__anon25	file:
line	regexp.c	/^    char_u	*line;		\/\/ start of current line$/;"	m	struct:__anon99	file:
line	regexp_nfa.c	/^	} line[NSUBEXP];$/;"	m	union:__anon103::__anon104	typeref:struct:__anon103::__anon104::linepos	file:
line	structs.h	/^    int		line;		\/\/ search has line offset$/;"	m	struct:soffset
line1	ex_cmds.h	/^    linenr_T	line1;		\/\/ the first line number$/;"	m	struct:exarg
line1	spellfile.c	/^static char line1[PRINTLINESIZE];$/;"	v	file:
line2	ex_cmds.h	/^    linenr_T	line2;		\/\/ the second line number or count$/;"	m	struct:exarg
line2	spellfile.c	/^static char line2[PRINTLINESIZE];$/;"	v	file:
line3	spellfile.c	/^static char line3[PRINTLINESIZE];$/;"	v	file:
lineFolded	fold.c	/^lineFolded(win_T *win, linenr_T lnum)$/;"	f
lineNum	gui_mac.c	/^    short lineNum; \/\/ line to select (<0 to specify range)$/;"	m	struct:SelectionRange	file:
line_breakcheck	misc1.c	/^line_breakcheck(void)$/;"	f
line_count	structs.h	/^    long	line_count;	\/\/ number of lines from op_start to op_end$/;"	m	struct:oparg_S
line_count_info	ops.c	/^line_count_info($/;"	f	file:
line_end	hardcopy.c	/^    int     line_end;$/;"	m	struct:prt_resfile_buffer_S	file:
line_in_range	if_mzsch.c	/^line_in_range(linenr_T lnum, buf_T *buf)$/;"	f	file:
line_msg	globals.h	/^EXTERN char line_msg[]		INIT(= N_(" line "));$/;"	v
line_s_current	if_ruby.c	/^line_s_current(void)$/;"	f	file:
line_start	hardcopy.c	/^    int     line_start;$/;"	m	struct:prt_resfile_buffer_S	file:
linebuf	quickfix.c	/^    char_u	*linebuf;$/;"	m	struct:__anon89	file:
lineclear	screen.c	/^lineclear(unsigned off, int width, int attr)$/;"	f	file:
linecopy	screen.c	/^linecopy(int to, int from, win_T *wp)$/;"	f	file:
lineinvalid	screen.c	/^lineinvalid(unsigned off, int width)$/;"	f	file:
linelen	ex_cmds.c	/^linelen(int *has_tab)$/;"	f	file:
linelen	quickfix.c	/^    int		linelen;$/;"	m	struct:__anon89	file:
linenr	structs.h	/^    int		linenr;		\/\/ next line to be executed$/;"	m	struct:funccall_S
linenr_T	structs.h	/^typedef long		linenr_T;$/;"	t
linenr_T	vim.h	/^typedef long	linenr_T;		\/\/ line number type$/;"	t
lineoff_T	move.c	/^} lineoff_T;$/;"	t	typeref:struct:__anon73	file:
linepos	regexp_nfa.c	/^	struct linepos$/;"	s	union:__anon103::__anon104	file:
lines_gap	ex_docmd.c	/^    garray_T	*lines_gap;		\/\/ growarray with line info$/;"	m	struct:loop_cookie	file:
lines_left	globals.h	/^EXTERN int	lines_left INIT(= -1);	    \/\/ lines left for listing$/;"	v
lines_per_page	structs.h	/^    int		lines_per_page;$/;"	m	struct:__anon247
linetabsize	charset.c	/^linetabsize(char_u *s)$/;"	f
linetabsize_col	charset.c	/^linetabsize_col(int startcol, char_u *s)$/;"	f
linewhite	search.c	/^linewhite(linenr_T lnum)$/;"	f
lisp_match	indent.c	/^lisp_match(char_u *p)$/;"	f	file:
list	gui_xmdlg.c	/^    Widget	list[NONE];$/;"	m	struct:_SharedFontSelData	file:
list	if_py_both.h	/^    list_T	*list;$/;"	m	struct:__anon156
list	if_py_both.h	/^    list_T	*list;$/;"	m	struct:__anon157
list	regexp_nfa.c	/^    } list;$/;"	m	struct:__anon103	typeref:union:__anon103::__anon104	file:
list	structs.h	/^    list_T		*list;$/;"	m	struct:list_stack_S
list1	regexp_nfa.c	/^list1($/;"	f	file:
list2fpos	eval.c	/^list2fpos($/;"	f
list2proftime	time.c	/^list2proftime(typval_T *arg, proftime_T *tm)$/;"	f	file:
list2string	list.c	/^list2string(typval_T *tv, int copyID, int restore_copyID)$/;"	f
list_T	structs.h	/^typedef struct listvar_S list_T;$/;"	t	typeref:struct:listvar_S
list_add_watch	list.c	/^list_add_watch(list_T *l, listwatch_T *lw)$/;"	f
list_alloc	list.c	/^list_alloc(void)$/;"	f
list_alloc_id	list.c	/^list_alloc_id(alloc_id_T id UNUSED)$/;"	f
list_alloc_with_items	list.c	/^list_alloc_with_items(int count)$/;"	f
list_append	list.c	/^list_append(list_T *l, listitem_T *item)$/;"	f
list_append_dict	list.c	/^list_append_dict(list_T *list, dict_T *dict)$/;"	f
list_append_list	list.c	/^list_append_list(list_T *list1, list_T *list2)$/;"	f
list_append_number	list.c	/^list_append_number(list_T *l, varnumber_T n)$/;"	f
list_append_string	list.c	/^list_append_string(list_T *l, char_u *str, int len)$/;"	f
list_append_tv	list.c	/^list_append_tv(list_T *l, typval_T *tv)$/;"	f
list_append_tv_move	list.c	/^list_append_tv_move(list_T *l, typval_T *tv)$/;"	f
list_arg_vars	evalvars.c	/^list_arg_vars(exarg_T *eap, char_u *arg, int *first)$/;"	f	file:
list_buf_vars	evalvars.c	/^list_buf_vars(int *first)$/;"	f	file:
list_concat	list.c	/^list_concat(list_T *l1, list_T *l2, typval_T *tv)$/;"	f
list_copy	list.c	/^list_copy(list_T *orig, int deep, int copyID)$/;"	f
list_equal	list.c	/^list_equal($/;"	f
list_extend	list.c	/^list_extend(list_T *l1, list_T *l2, listitem_T *bef)$/;"	f
list_features	version.c	/^list_features(void)$/;"	f	file:
list_find	list.c	/^list_find(list_T *l, long n)$/;"	f
list_find_nr	list.c	/^list_find_nr($/;"	f
list_find_str	list.c	/^list_find_str(list_T *l, long idx)$/;"	f
list_fix_watch	list.c	/^list_fix_watch(list_T *l, listitem_T *item)$/;"	f	file:
list_free	list.c	/^list_free(list_T *l)$/;"	f
list_free_contents	list.c	/^list_free_contents(list_T *l)$/;"	f	file:
list_free_item	list.c	/^list_free_item(list_T *l, listitem_T *item)$/;"	f
list_free_items	list.c	/^list_free_items(int copyID)$/;"	f
list_free_list	list.c	/^list_free_list(list_T  *l)$/;"	f	file:
list_free_nonref	list.c	/^list_free_nonref(int copyID)$/;"	f
list_func_head	userfunc.c	/^list_func_head(ufunc_T *fp, int indent)$/;"	f	file:
list_func_vars	userfunc.c	/^list_func_vars(int *first)$/;"	f
list_glob_vars	evalvars.c	/^list_glob_vars(int *first)$/;"	f	file:
list_hashtable_vars	evalvars.c	/^list_hashtable_vars($/;"	f
list_idx_of_item	list.c	/^list_idx_of_item(list_T *l, listitem_T *item)$/;"	f
list_in_columns	version.c	/^list_in_columns(char_u **items, int size, int current)$/;"	f
list_init	list.c	/^list_init(list_T *l)$/;"	f	file:
list_insert	list.c	/^list_insert(list_T *l, listitem_T *ni, listitem_T *item)$/;"	f
list_insert_tv	list.c	/^list_insert_tv(list_T *l, typval_T *tv, listitem_T *item)$/;"	f
list_join	list.c	/^list_join($/;"	f
list_join_inner	list.c	/^list_join_inner($/;"	f	file:
list_len	list.c	/^list_len(list_T *l)$/;"	f
list_one_var	evalvars.c	/^list_one_var(dictitem_T *v, char *prefix, int *first)$/;"	f	file:
list_one_var_a	evalvars.c	/^list_one_var_a($/;"	f	file:
list_py_concat	if_py_both.h	/^list_py_concat(list_T *l, PyObject *obj, PyObject *lookup_dict)$/;"	f
list_rem_watch	list.c	/^list_rem_watch(list_T *l, listwatch_T *lwrem)$/;"	f
list_remove	list.c	/^list_remove(typval_T *argvars, typval_T *rettv, char_u *arg_errmsg)$/;"	f
list_restore	if_py_both.h	/^list_restore(Py_ssize_t numadded, Py_ssize_t numreplaced, Py_ssize_t slicelen,$/;"	f
list_script_vars	evalvars.c	/^list_script_vars(int *first)$/;"	f	file:
list_set_item	list.c	/^list_set_item(list_T *l, int idx, typval_T *tv)$/;"	f
list_stack_S	structs.h	/^typedef struct list_stack_S$/;"	s
list_stack_T	structs.h	/^} list_stack_T;$/;"	t	typeref:struct:list_stack_S
list_tab_vars	evalvars.c	/^list_tab_vars(int *first)$/;"	f	file:
list_types	textprop.c	/^list_types(hashtab_T *ht, list_T *l)$/;"	f	file:
list_unref	list.c	/^list_unref(list_T *l)$/;"	f
list_version	version.c	/^list_version(void)$/;"	f
list_vim_vars	evalvars.c	/^list_vim_vars(int *first)$/;"	f	file:
list_win_vars	evalvars.c	/^list_win_vars(int *first)$/;"	f	file:
listcmd_busy	globals.h	/^EXTERN int	listcmd_busy INIT(= FALSE); \/\/ set when :argdo, :windo or$/;"	v
listdigraphs	digraph.c	/^listdigraphs(int use_headers)$/;"	f
listener_S	structs.h	/^struct listener_S$/;"	s
listener_T	structs.h	/^typedef struct listener_S listener_T;$/;"	t	typeref:struct:listener_S
listitem_S	structs.h	/^struct listitem_S$/;"	s
listitem_T	structs.h	/^typedef struct listitem_S listitem_T;$/;"	t	typeref:struct:listitem_S
listitem_alloc	list.c	/^listitem_alloc(void)$/;"	f
listitem_free	list.c	/^listitem_free(list_T *l, listitem_T *item)$/;"	f
listitem_remove	list.c	/^listitem_remove(list_T *l, listitem_T *item)$/;"	f
listiterinfo_T	if_py_both.h	/^} listiterinfo_T;$/;"	t	typeref:struct:__anon157
listvar_S	structs.h	/^struct listvar_S$/;"	s
listwatch_S	structs.h	/^struct listwatch_S$/;"	s
listwatch_T	structs.h	/^typedef struct listwatch_S listwatch_T;$/;"	t	typeref:struct:listwatch_S
literal	structs.h	/^    int		literal;		\/\/ don't expand file names$/;"	m	struct:__anon252
ll_blob	structs.h	/^    blob_T	*ll_blob;	\/\/ The Blob or NULL$/;"	m	struct:lval_S
ll_di	structs.h	/^    dictitem_T	*ll_di;		\/\/ The dictitem or NULL$/;"	m	struct:lval_S
ll_dict	structs.h	/^    dict_T	*ll_dict;	\/\/ The Dictionary or NULL$/;"	m	struct:lval_S
ll_empty2	structs.h	/^    int		ll_empty2;	\/\/ Second index is empty: [i:]$/;"	m	struct:lval_S
ll_exp_name	structs.h	/^    char_u	*ll_exp_name;	\/\/ NULL or expanded name in allocated memory.$/;"	m	struct:lval_S
ll_free_all	quickfix.c	/^ll_free_all(qf_info_T **pqi)$/;"	f	file:
ll_get_or_alloc_list	quickfix.c	/^ll_get_or_alloc_list(win_T *wp)$/;"	f	file:
ll_li	structs.h	/^    listitem_T	*ll_li;		\/\/ The list item or NULL.$/;"	m	struct:lval_S
ll_list	structs.h	/^    list_T	*ll_list;	\/\/ The list or NULL.$/;"	m	struct:lval_S
ll_n1	structs.h	/^    long	ll_n1;		\/\/ First index for list$/;"	m	struct:lval_S
ll_n2	structs.h	/^    long	ll_n2;		\/\/ Second index for list range$/;"	m	struct:lval_S
ll_name	structs.h	/^    char_u	*ll_name;	\/\/ start of variable name (can be NULL)$/;"	m	struct:lval_S
ll_name_end	structs.h	/^    char_u	*ll_name_end;	\/\/ end of variable name (can be NULL)$/;"	m	struct:lval_S
ll_newkey	structs.h	/^    char_u	*ll_newkey;	\/\/ New key for Dict in alloc. mem or NULL.$/;"	m	struct:lval_S
ll_range	structs.h	/^    int		ll_range;	\/\/ TRUE when a [i:j] range was used$/;"	m	struct:lval_S
ll_tv	structs.h	/^    typval_T	*ll_tv;		\/\/ Typeval of item being used.  If "newkey"$/;"	m	struct:lval_S
ll_type	structs.h	/^    type_T	*ll_type;	\/\/ type of variable (can be NULL)$/;"	m	struct:lval_S
llpos_T	structs.h	/^} llpos_T;$/;"	t	typeref:struct:__anon241
lnkname	dosinst.h	/^    char	*lnkname;	\/\/ shortcut file name$/;"	m	struct:__anon141
lnum	ex_cmds.c	/^    linenr_T	lnum;			\/\/ line number$/;"	m	struct:__anon20	file:
lnum	ex_docmd.c	/^    linenr_T	lnum;		\/\/ sourcing_lnum of the line$/;"	m	struct:__anon25	file:
lnum	fold.c	/^    linenr_T	lnum;		\/\/ current line number$/;"	m	struct:__anon29	file:
lnum	move.c	/^    linenr_T	    lnum;	\/\/ line number$/;"	m	struct:__anon73	file:
lnum	quickfix.c	/^    long	lnum;$/;"	m	struct:__anon90	file:
lnum	regexp.c	/^    linenr_T	lnum;		\/\/ line number, relative to first line$/;"	m	struct:__anon99	file:
lnum	search.c	/^    linenr_T	lnum;		\/\/ Line we were up to in file$/;"	m	struct:SearchedFile	file:
lnum	structs.h	/^    linenr_T	lnum;	    \/\/ the line to search for a match$/;"	m	struct:__anon240
lnum	structs.h	/^    linenr_T	lnum;	\/\/ line number$/;"	m	struct:__anon178
lnum	structs.h	/^    linenr_T	lnum;	\/\/ line number$/;"	m	struct:__anon179
lnum	structs.h	/^    linenr_T	lnum;	\/\/ line number$/;"	m	struct:__anon241
lnum_save	fold.c	/^    linenr_T	lnum_save;	\/\/ line nr used by foldUpdateIEMSRecurse()$/;"	m	struct:__anon29	file:
lnumlast	quickfix.c	/^    linenr_T	lnumlast;$/;"	m	struct:__anon89	file:
load_base_module	if_mzsch.c	/^load_base_module(void *data)$/;"	f	file:
load_base_module_failed	if_mzsch.c	/^static int load_base_module_failed = FALSE;$/;"	v	file:
load_base_module_on_error	if_mzsch.c	/^load_base_module_on_error(void *data UNUSED)$/;"	f	file:
load_colors	highlight.c	/^load_colors(char_u *name)$/;"	f
load_current_state	syntax.c	/^load_current_state(synstate_T *from)$/;"	f	file:
load_dll	if_lua.c	88;"	d	file:
load_dll	if_lua.c	92;"	d	file:
load_dll	if_python.c	134;"	d	file:
load_dll	if_python.c	136;"	d	file:
load_dll	if_python.c	141;"	d	file:
load_dll	if_python3.c	119;"	d	file:
load_dll	if_python3.c	121;"	d	file:
load_dll	if_python3.c	126;"	d	file:
load_dll	if_ruby.c	165;"	d	file:
load_dll	if_ruby.c	170;"	d	file:
load_dll	if_tcl.c	167;"	d	file:
load_dll	if_tcl.c	172;"	d	file:
load_dummy_buffer	quickfix.c	/^load_dummy_buffer($/;"	f	file:
load_menu_iconfile	gui_gtk.c	/^load_menu_iconfile(char_u *name, GtkIconSize icon_size)$/;"	f	file:
load_pack_plugin	scriptfile.c	/^load_pack_plugin(char_u *fname)$/;"	f	file:
load_start_packages	scriptfile.c	/^load_start_packages(void)$/;"	f
loadstore	vim9.h	/^	loadstore_T	    loadstore;$/;"	m	union:__anon276::__anon277
loadstore_T	vim9.h	/^} loadstore_T;$/;"	t	typeref:struct:__anon274
local_xsmp_handle_requests	gui_gtk_x11.c	/^local_xsmp_handle_requests($/;"	f	file:
local_xsmp_handle_requests	gui_x11.c	/^local_xsmp_handle_requests($/;"	f	file:
locales	ex_cmds2.c	/^static char_u	**locales = NULL;	\/\/ Array of all available locales$/;"	v	file:
lock2name	os_amiga.c	/^lock2name(BPTR lock, char_u *buf, long len)$/;"	f	file:
lockmarks	structs.h	/^    int		lockmarks;		\/\/ TRUE when ":lockmarks" was used$/;"	m	struct:__anon191
locstack_queue_delreq	quickfix.c	/^locstack_queue_delreq(qf_info_T *qi)$/;"	f	file:
log_fd	channel.c	/^static FILE *log_fd = NULL;$/;"	v	file:
log_fd	regexp_nfa.c	/^static FILE *log_fd;$/;"	v	file:
log_frame_layout	window.c	/^log_frame_layout(frame_T *frame)$/;"	f	file:
log_start	channel.c	/^static proftime_T log_start;$/;"	v	file:
log_subexpr	regexp_nfa.c	/^log_subexpr(regsub_T *sub)$/;"	f	file:
log_subsexpr	regexp_nfa.c	/^log_subsexpr(regsubs_T *subs)$/;"	f	file:
log_tr	term.c	/^log_tr(const char *fmt, ...)$/;"	f	file:
logfont2name	gui_w32.c	/^logfont2name(LOGFONTW lf)$/;"	f	file:
longVersion	globals.h	/^EXTERN char *longVersion;$/;"	v
longVersion	version.c	/^char	*longVersion = VIM_VERSION_LONG;$/;"	v
longVersion	version.c	/^char	longVersion[sizeof(VIM_VERSION_LONG_DATE) + sizeof(__DATE__)$/;"	v
long_i	vim.h	/^typedef		 __int64	long_i;$/;"	t
long_i	vim.h	/^typedef		 long __w64     long_i;$/;"	t
long_to_char	memline.c	/^long_to_char(long n, char_u *s)$/;"	f	file:
long_u	vim.h	/^typedef unsigned __int64	long_u;$/;"	t
long_u	vim.h	/^typedef unsigned long __w64	long_u;$/;"	t
longest_lnum	gui.c	/^static linenr_T longest_lnum = 0;$/;"	v	file:
lookup	nbdebug.c	/^lookup(char *file)$/;"	f	file:
lookup_arg	vim9compile.c	/^lookup_arg(char_u *name, size_t len, cctx_T *cctx)$/;"	f	file:
lookup_color	highlight.c	/^lookup_color(int idx, int foreground, int *boldp)$/;"	f
lookup_local	vim9compile.c	/^lookup_local(char_u *name, size_t len, cctx_T *cctx)$/;"	f	file:
lookup_menu_iconfile	gui_gtk.c	/^lookup_menu_iconfile(char_u *iconfile, char_u *dest)$/;"	f	file:
lookup_prop_type	textprop.c	/^lookup_prop_type(char_u *name, buf_T *buf)$/;"	f	file:
lookup_script	vim9compile.c	/^lookup_script(char_u *name, size_t len)$/;"	f	file:
lookup_scriptvar	evalvars.c	/^lookup_scriptvar(char_u *name, size_t len, cctx_T *dummy UNUSED)$/;"	f
lookup_vararg	vim9compile.c	/^lookup_vararg(char_u *name, size_t len, cctx_T *cctx)$/;"	f	file:
loop_cookie	ex_docmd.c	/^struct loop_cookie$/;"	s	file:
loose_clipboard	os_unix.c	/^loose_clipboard(void)$/;"	f	file:
lowest_marked	memline.c	/^static linenr_T	lowest_marked = 0;$/;"	v	file:
lpAttributeList	terminal.c	/^    LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList;$/;"	m	struct:_DYN_STARTUPINFOEXW	file:
lpEnumFunc	os_mswin.c	/^    WNDENUMPROC lpEnumFunc;$/;"	m	struct:enum_windows_s	file:
lpReserved	gui_w32.c	/^    void       *lpReserved;$/;"	m	struct:tagTOOLINFOW_NEW	file:
lp_region	spell.h	/^    int		lp_region;	\/\/ bitmask for region or REGION_ALL$/;"	m	struct:langp_S
lp_replang	spell.h	/^    slang_T	*lp_replang;	\/\/ language used for REP items or NULL$/;"	m	struct:langp_S
lp_sallang	spell.h	/^    slang_T	*lp_sallang;	\/\/ language used for sound folding or NULL$/;"	m	struct:langp_S
lp_slang	spell.h	/^    slang_T	*lp_slang;	\/\/ info for this language$/;"	m	struct:langp_S
lpos	cindent.c	/^    lpos_T  lpos;$/;"	m	struct:__anon6	file:
lpos_T	structs.h	/^} lpos_T;$/;"	t	typeref:struct:__anon179
lpszText	gui_w32.c	/^    LPSTR	lpszText;$/;"	m	struct:tagNMTTDISPINFOA	file:
lpszText	gui_w32.c	/^    LPSTR      lpszText;$/;"	m	struct:tagNMTTDISPINFO_NEW	file:
lpszText	gui_w32.c	/^    LPSTR      lpszText;$/;"	m	struct:tagTOOLINFOA_NEW	file:
lpszText	gui_w32.c	/^    LPWSTR	lpszText;$/;"	m	struct:tagNMTTDISPINFOW	file:
lpszText	gui_w32.c	/^    LPWSTR     lpszText;$/;"	m	struct:tagNMTTDISPINFOW_NEW	file:
lpszText	gui_w32.c	/^    LPWSTR     lpszText;$/;"	m	struct:tagTOOLINFOW_NEW	file:
lpwAlign	gui_w32.c	/^lpwAlign($/;"	f	file:
lr_callback	structs.h	/^    callback_T	lr_callback;$/;"	m	struct:listener_S
lr_id	structs.h	/^    int		lr_id;$/;"	m	struct:listener_S
lr_next	structs.h	/^    listener_T	*lr_next;$/;"	m	struct:listener_S
ls_name	vim9.h	/^    char_u	*ls_name;	\/\/ variable name$/;"	m	struct:__anon274
ls_sid	vim9.h	/^    int		ls_sid;		\/\/ script ID$/;"	m	struct:__anon274
luaL_addlstring	if_lua.c	120;"	d	file:
luaL_argerror	if_lua.c	110;"	d	file:
luaL_buffinit	if_lua.c	119;"	d	file:
luaL_checkany	if_lua.c	112;"	d	file:
luaL_checkinteger	if_lua.c	114;"	d	file:
luaL_checklstring	if_lua.c	113;"	d	file:
luaL_checktype	if_lua.c	116;"	d	file:
luaL_error	if_lua.c	117;"	d	file:
luaL_loadbuffer	if_lua.c	104;"	d	file:
luaL_loadbufferx	if_lua.c	109;"	d	file:
luaL_loadfile	if_lua.c	103;"	d	file:
luaL_loadfilex	if_lua.c	108;"	d	file:
luaL_newstate	if_lua.c	118;"	d	file:
luaL_openlib	if_lua.c	101;"	d	file:
luaL_openlibs	if_lua.c	189;"	d	file:
luaL_optinteger	if_lua.c	115;"	d	file:
luaL_prepbuffer	if_lua.c	100;"	d	file:
luaL_prepbuffsize	if_lua.c	106;"	d	file:
luaL_pushresult	if_lua.c	121;"	d	file:
luaL_register	if_lua.c	99;"	d	file:
luaL_setfuncs	if_lua.c	107;"	d	file:
luaL_typeerror	if_lua.c	/^luaL_typeerror(lua_State *L, int narg, const char *tname)$/;"	f	file:
luaL_typeerror	if_lua.c	78;"	d	file:
luaL_typerror	if_lua.c	102;"	d	file:
luaV_Blob	if_lua.c	/^typedef blob_T *luaV_Blob;$/;"	t	file:
luaV_Blob_mt	if_lua.c	/^static const luaL_Reg luaV_Blob_mt[] = {$/;"	v	file:
luaV_Buffer	if_lua.c	/^typedef buf_T *luaV_Buffer;$/;"	t	file:
luaV_Buffer_mt	if_lua.c	/^static const luaL_Reg luaV_Buffer_mt[] = {$/;"	v	file:
luaV_Dict	if_lua.c	/^typedef dict_T *luaV_Dict;$/;"	t	file:
luaV_Dict_mt	if_lua.c	/^static const luaL_Reg luaV_Dict_mt[] = {$/;"	v	file:
luaV_Funcref	if_lua.c	/^} luaV_Funcref;$/;"	t	typeref:struct:__anon50	file:
luaV_Funcref_mt	if_lua.c	/^static const luaL_Reg luaV_Funcref_mt[] = {$/;"	v	file:
luaV_List	if_lua.c	/^typedef list_T *luaV_List;$/;"	t	file:
luaV_List_mt	if_lua.c	/^static const luaL_Reg luaV_List_mt[] = {$/;"	v	file:
luaV_Reg	if_lua.c	/^} luaV_Reg;$/;"	t	typeref:struct:__anon51	file:
luaV_Window	if_lua.c	/^typedef win_T *luaV_Window;$/;"	t	file:
luaV_Window_mt	if_lua.c	/^static const luaL_Reg luaV_Window_mt[] = {$/;"	v	file:
luaV_addlstring	if_lua.c	/^luaV_addlstring(luaL_Buffer *b, const char *s, size_t l, int toline)$/;"	f	file:
luaV_beep	if_lua.c	/^luaV_beep(lua_State *L UNUSED)$/;"	f	file:
luaV_blob	if_lua.c	/^luaV_blob(lua_State *L)$/;"	f	file:
luaV_blob_add	if_lua.c	/^luaV_blob_add(lua_State *L)$/;"	f	file:
luaV_blob_gc	if_lua.c	/^luaV_blob_gc(lua_State *L)$/;"	f	file:
luaV_blob_index	if_lua.c	/^luaV_blob_index(lua_State *L)$/;"	f	file:
luaV_blob_len	if_lua.c	/^luaV_blob_len(lua_State *L)$/;"	f	file:
luaV_blob_newindex	if_lua.c	/^luaV_blob_newindex(lua_State *L)$/;"	f	file:
luaV_buffer	if_lua.c	/^luaV_buffer(lua_State *L)$/;"	f	file:
luaV_buffer_call	if_lua.c	/^luaV_buffer_call(lua_State *L)$/;"	f	file:
luaV_buffer_index	if_lua.c	/^luaV_buffer_index(lua_State *L)$/;"	f	file:
luaV_buffer_insert	if_lua.c	/^luaV_buffer_insert(lua_State *L)$/;"	f	file:
luaV_buffer_isvalid	if_lua.c	/^luaV_buffer_isvalid(lua_State *L)$/;"	f	file:
luaV_buffer_len	if_lua.c	/^luaV_buffer_len(lua_State *L)$/;"	f	file:
luaV_buffer_newindex	if_lua.c	/^luaV_buffer_newindex(lua_State *L)$/;"	f	file:
luaV_buffer_next	if_lua.c	/^luaV_buffer_next(lua_State *L)$/;"	f	file:
luaV_buffer_previous	if_lua.c	/^luaV_buffer_previous(lua_State *L)$/;"	f	file:
luaV_checkcache	if_lua.c	/^luaV_checkcache(lua_State *L, void *p)$/;"	f	file:
luaV_checksandbox	if_lua.c	61;"	d	file:
luaV_checktypval	if_lua.c	65;"	d	file:
luaV_checkudata	if_lua.c	/^luaV_checkudata(lua_State *L, int ud, const char *tname)$/;"	f	file:
luaV_checkvalid	if_lua.c	499;"	d	file:
luaV_command	if_lua.c	/^luaV_command(lua_State *L)$/;"	f	file:
luaV_debug	if_lua.c	/^luaV_debug(lua_State *L)$/;"	f	file:
luaV_dict	if_lua.c	/^luaV_dict(lua_State *L)$/;"	f	file:
luaV_dict_call	if_lua.c	/^luaV_dict_call(lua_State *L)$/;"	f	file:
luaV_dict_index	if_lua.c	/^luaV_dict_index(lua_State *L)$/;"	f	file:
luaV_dict_iter	if_lua.c	/^luaV_dict_iter(lua_State *L UNUSED)$/;"	f	file:
luaV_dict_len	if_lua.c	/^luaV_dict_len(lua_State *L)$/;"	f	file:
luaV_dict_newindex	if_lua.c	/^luaV_dict_newindex(lua_State *L)$/;"	f	file:
luaV_dll	if_lua.c	/^static const luaV_Reg luaV_dll[] = {$/;"	v	file:
luaV_emsg	if_lua.c	64;"	d	file:
luaV_eval	if_lua.c	/^luaV_eval(lua_State *L)$/;"	f	file:
luaV_free	if_lua.c	/^luaV_free(lua_State *L)$/;"	f	file:
luaV_freetype	if_lua.c	/^luaV_freetype(buf_T, buffer)$/;"	f
luaV_freetype	if_lua.c	2226;"	d	file:
luaV_funcref	if_lua.c	/^luaV_funcref(lua_State *L)$/;"	f	file:
luaV_funcref_call	if_lua.c	/^luaV_funcref_call(lua_State *L)$/;"	f	file:
luaV_funcref_gc	if_lua.c	/^luaV_funcref_gc(lua_State *L)$/;"	f	file:
luaV_funcref_len	if_lua.c	/^luaV_funcref_len(lua_State *L)$/;"	f	file:
luaV_function	if_lua.c	/^typedef void **luaV_function;$/;"	t	file:
luaV_getfield	if_lua.c	58;"	d	file:
luaV_getudata	if_lua.c	51;"	d	file:
luaV_line	if_lua.c	/^luaV_line(lua_State *L)$/;"	f	file:
luaV_list	if_lua.c	/^luaV_list(lua_State *L)$/;"	f	file:
luaV_list_add	if_lua.c	/^luaV_list_add(lua_State *L)$/;"	f	file:
luaV_list_call	if_lua.c	/^luaV_list_call(lua_State *L)$/;"	f	file:
luaV_list_index	if_lua.c	/^luaV_list_index(lua_State *L)$/;"	f	file:
luaV_list_insert	if_lua.c	/^luaV_list_insert(lua_State *L)$/;"	f	file:
luaV_list_iter	if_lua.c	/^luaV_list_iter(lua_State *L)$/;"	f	file:
luaV_list_len	if_lua.c	/^luaV_list_len(lua_State *L)$/;"	f	file:
luaV_list_newindex	if_lua.c	/^luaV_list_newindex(lua_State *L)$/;"	f	file:
luaV_luaeval	if_lua.c	/^luaV_luaeval(lua_State *L)$/;"	f	file:
luaV_module	if_lua.c	/^static const luaL_Reg luaV_module[] = {$/;"	v	file:
luaV_msg	if_lua.c	63;"	d	file:
luaV_msgfunc	if_lua.c	/^luaV_msgfunc(lua_State *L, msgfunc_T mf)$/;"	f	file:
luaV_newblob	if_lua.c	/^luaV_newblob(lua_State *L, blob_T *blo)$/;"	f	file:
luaV_newdict	if_lua.c	/^luaV_newdict(lua_State *L, dict_T *dic)$/;"	f	file:
luaV_newfuncref	if_lua.c	/^luaV_newfuncref(lua_State *L, char_u *name)$/;"	f	file:
luaV_newlist	if_lua.c	/^luaV_newlist(lua_State *L, list_T *lis)$/;"	f	file:
luaV_newmetatable	if_lua.c	/^luaV_newmetatable(lua_State *L, const char *tname)$/;"	f	file:
luaV_newstate	if_lua.c	/^luaV_newstate(void)$/;"	f	file:
luaV_newtype	if_lua.c	716;"	d	file:
luaV_open	if_lua.c	/^luaV_open(lua_State *L)$/;"	f	file:
luaV_openlib	if_lua.c	77;"	d	file:
luaV_openlib	if_lua.c	80;"	d	file:
luaV_print	if_lua.c	/^luaV_print(lua_State *L)$/;"	f	file:
luaV_pushfuncref	if_lua.c	/^luaV_pushfuncref(lua_State *L, char_u *name)$/;"	f	file:
luaV_pushline	if_lua.c	/^luaV_pushline(lua_State *L, buf_T *buf, linenr_T n)$/;"	f	file:
luaV_pushtype	if_lua.c	728;"	d	file:
luaV_pushtypval	if_lua.c	/^luaV_pushtypval(lua_State *L, typval_T *tv)$/;"	f	file:
luaV_setrange	if_lua.c	/^luaV_setrange(lua_State *L, int line1, int line2)$/;"	f	file:
luaV_setref	if_lua.c	/^luaV_setref(lua_State *L)$/;"	f	file:
luaV_setudata	if_lua.c	54;"	d	file:
luaV_toline	if_lua.c	/^luaV_toline(lua_State *L, int pos)$/;"	f	file:
luaV_totypval	if_lua.c	/^luaV_totypval(lua_State *L, int pos, typval_T *tv)$/;"	f	file:
luaV_toudata	if_lua.c	/^luaV_toudata(lua_State *L, int ud, const char *tname)$/;"	f	file:
luaV_type	if_lua.c	/^luaV_type(lua_State *L)$/;"	f	file:
luaV_type_tostring	if_lua.c	748;"	d	file:
luaV_unbox	if_lua.c	497;"	d	file:
luaV_window	if_lua.c	/^luaV_window(lua_State *L)$/;"	f	file:
luaV_window_call	if_lua.c	/^luaV_window_call(lua_State *L)$/;"	f	file:
luaV_window_index	if_lua.c	/^luaV_window_index(lua_State *L)$/;"	f	file:
luaV_window_isvalid	if_lua.c	/^luaV_window_isvalid(lua_State *L)$/;"	f	file:
luaV_window_newindex	if_lua.c	/^luaV_window_newindex(lua_State *L)$/;"	f	file:
luaV_window_next	if_lua.c	/^luaV_window_next(lua_State *L)$/;"	f	file:
luaV_window_previous	if_lua.c	/^luaV_window_previous(lua_State *L)$/;"	f	file:
lua_call	if_lua.c	126;"	d	file:
lua_callk	if_lua.c	131;"	d	file:
lua_close	if_lua.c	145;"	d	file:
lua_copy	if_lua.c	142;"	d	file:
lua_createtable	if_lua.c	168;"	d	file:
lua_enabled	if_lua.c	/^lua_enabled(int verbose)$/;"	f
lua_end	if_lua.c	/^lua_end(void)$/;"	f
lua_getfield	if_lua.c	165;"	d	file:
lua_getglobal	if_lua.c	133;"	d	file:
lua_getmetatable	if_lua.c	174;"	d	file:
lua_gettop	if_lua.c	146;"	d	file:
lua_init	if_lua.c	/^lua_init(void)$/;"	f	file:
lua_isnumber	if_lua.c	149;"	d	file:
lua_isopen	if_lua.c	/^lua_isopen(void)$/;"	f	file:
lua_isstring	if_lua.c	150;"	d	file:
lua_link_init	if_lua.c	/^lua_link_init(char *libname, int verbose)$/;"	f	file:
lua_newuserdata	if_lua.c	172;"	d	file:
lua_newuserdatauv	if_lua.c	170;"	d	file:
lua_next	if_lua.c	179;"	d	file:
lua_pcall	if_lua.c	127;"	d	file:
lua_pcallk	if_lua.c	132;"	d	file:
lua_pushboolean	if_lua.c	163;"	d	file:
lua_pushcclosure	if_lua.c	162;"	d	file:
lua_pushfstring	if_lua.c	161;"	d	file:
lua_pushinteger	if_lua.c	158;"	d	file:
lua_pushlightuserdata	if_lua.c	164;"	d	file:
lua_pushlstring	if_lua.c	159;"	d	file:
lua_pushnil	if_lua.c	156;"	d	file:
lua_pushnumber	if_lua.c	157;"	d	file:
lua_pushstring	if_lua.c	160;"	d	file:
lua_pushvalue	if_lua.c	148;"	d	file:
lua_rawequal	if_lua.c	152;"	d	file:
lua_rawget	if_lua.c	166;"	d	file:
lua_rawgeti	if_lua.c	167;"	d	file:
lua_rawset	if_lua.c	176;"	d	file:
lua_rawseti	if_lua.c	177;"	d	file:
lua_remove	if_lua.c	138;"	d	file:
lua_replace	if_lua.c	137;"	d	file:
lua_rotate	if_lua.c	141;"	d	file:
lua_setfield	if_lua.c	175;"	d	file:
lua_setglobal	if_lua.c	134;"	d	file:
lua_setmetatable	if_lua.c	178;"	d	file:
lua_settop	if_lua.c	147;"	d	file:
lua_toboolean	if_lua.c	153;"	d	file:
lua_tointeger	if_lua.c	125;"	d	file:
lua_tointegerx	if_lua.c	130;"	d	file:
lua_tolstring	if_lua.c	154;"	d	file:
lua_tonumber	if_lua.c	124;"	d	file:
lua_tonumberx	if_lua.c	129;"	d	file:
lua_touserdata	if_lua.c	155;"	d	file:
lua_type	if_lua.c	151;"	d	file:
lua_typename	if_lua.c	144;"	d	file:
luaopen_base	if_lua.c	181;"	d	file:
luaopen_debug	if_lua.c	188;"	d	file:
luaopen_io	if_lua.c	185;"	d	file:
luaopen_math	if_lua.c	184;"	d	file:
luaopen_os	if_lua.c	186;"	d	file:
luaopen_package	if_lua.c	187;"	d	file:
luaopen_string	if_lua.c	183;"	d	file:
luaopen_table	if_lua.c	182;"	d	file:
luaopen_vim	if_lua.c	/^luaopen_vim(lua_State *L)$/;"	f	file:
lv_arg	vim9compile.c	/^    int		lv_arg;	    \/\/ when TRUE this is an argument$/;"	m	struct:__anon131	file:
lv_const	vim9compile.c	/^    int		lv_const;   \/\/ when TRUE cannot be assigned to$/;"	m	struct:__anon131	file:
lv_copyID	structs.h	/^    int		lv_copyID;	\/\/ ID used by deepcopy()$/;"	m	struct:listvar_S
lv_copylist	structs.h	/^    list_T	*lv_copylist;	\/\/ copied list used by deepcopy()$/;"	m	struct:listvar_S
lv_end	structs.h	/^	    varnumber_T lv_end;$/;"	m	struct:listvar_S::__anon207::__anon208
lv_first	structs.h	/^    listitem_T	*lv_first;	\/\/ first item, NULL if none$/;"	m	struct:listvar_S
lv_idx	structs.h	/^	    int		lv_idx;		\/\/ cached index of an item$/;"	m	struct:listvar_S::__anon207::__anon209
lv_idx_item	structs.h	/^	    listitem_T	*lv_idx_item;	\/\/ when not NULL item at index "lv_idx"$/;"	m	struct:listvar_S::__anon207::__anon209
lv_last	structs.h	/^	    listitem_T	*lv_last;	\/\/ last item, NULL if none$/;"	m	struct:listvar_S::__anon207::__anon209
lv_len	structs.h	/^    int		lv_len;		\/\/ number of items$/;"	m	struct:listvar_S
lv_lock	structs.h	/^    char	lv_lock;	\/\/ zero, VAR_LOCKED, VAR_FIXED$/;"	m	struct:listvar_S
lv_name	vim9compile.c	/^    char_u	*lv_name;$/;"	m	struct:__anon131	file:
lv_refcount	structs.h	/^    int		lv_refcount;	\/\/ reference count$/;"	m	struct:listvar_S
lv_start	structs.h	/^	    varnumber_T lv_start;$/;"	m	struct:listvar_S::__anon207::__anon208
lv_stride	structs.h	/^	    int		lv_stride;$/;"	m	struct:listvar_S::__anon207::__anon208
lv_type	vim9compile.c	/^    type_T	*lv_type;$/;"	m	struct:__anon131	file:
lv_u	structs.h	/^    } lv_u;$/;"	m	struct:listvar_S	typeref:union:listvar_S::__anon207
lv_used_next	structs.h	/^    list_T	*lv_used_next;	\/\/ next list in used lists list$/;"	m	struct:listvar_S
lv_used_prev	structs.h	/^    list_T	*lv_used_prev;	\/\/ previous list in used lists list$/;"	m	struct:listvar_S
lv_watch	structs.h	/^    listwatch_T	*lv_watch;	\/\/ first watcher, NULL if none$/;"	m	struct:listvar_S
lv_with_items	structs.h	/^    int		lv_with_items;	\/\/ number of items following this struct that$/;"	m	struct:listvar_S
lval_S	structs.h	/^typedef struct lval_S$/;"	s
lval_T	structs.h	/^} lval_T;$/;"	t	typeref:struct:lval_S
lvar_T	vim9compile.c	/^} lvar_T;$/;"	t	typeref:struct:__anon131	file:
lvl	fold.c	/^    int		lvl;		\/\/ current level (-1 for undefined)$/;"	m	struct:__anon29	file:
lvl_next	fold.c	/^    int		lvl_next;	\/\/ level used for next line$/;"	m	struct:__anon29	file:
lw	if_py_both.h	/^    listwatch_T	lw;$/;"	m	struct:__anon157
lw_item	structs.h	/^    listitem_T		*lw_item;	\/\/ item being watched$/;"	m	struct:listwatch_S
lw_next	structs.h	/^    listwatch_T		*lw_next;	\/\/ next watcher$/;"	m	struct:listwatch_S
mVIM	if_ruby.c	/^static VALUE mVIM;$/;"	v	file:
m_expr	structs.h	/^    char	m_expr;		\/\/ <expr> used, m_str is an expression$/;"	m	struct:mapblock
m_info	structs.h	/^struct m_info$/;"	s
m_keylen	structs.h	/^    int		m_keylen;	\/\/ strlen(m_keys)$/;"	m	struct:mapblock
m_keys	structs.h	/^    char_u	*m_keys;	\/\/ mapped from, lhs$/;"	m	struct:mapblock
m_mode	structs.h	/^    int		m_mode;		\/\/ valid mode$/;"	m	struct:mapblock
m_next	structs.h	/^    mapblock_T	*m_next;	\/\/ next mapblock in list$/;"	m	struct:mapblock
m_next	structs.h	/^    minfo_T	*m_next;	\/\/ pointer to next free chunk in the list$/;"	m	struct:m_info
m_noremap	structs.h	/^    int		m_noremap;	\/\/ if non-zero no re-mapping for m_str$/;"	m	struct:mapblock
m_nowait	structs.h	/^    char	m_nowait;	\/\/ <nowait> used$/;"	m	struct:mapblock
m_onlyone	window.c	/^static char *m_onlyone = N_("Already only one window");$/;"	v	file:
m_orig_str	structs.h	/^    char_u	*m_orig_str;	\/\/ rhs as entered by the user$/;"	m	struct:mapblock
m_script_ctx	structs.h	/^    sctx_T	m_script_ctx;	\/\/ SCTX where map was defined$/;"	m	struct:mapblock
m_silent	structs.h	/^    char	m_silent;	\/\/ <silent> used, don't echo commands$/;"	m	struct:mapblock
m_simplified	structs.h	/^    int		m_simplified;	\/\/ m_keys was simplified, do not use this map$/;"	m	struct:mapblock
m_size	structs.h	/^    long_u	m_size;		\/\/ size of the chunk (including m_info)$/;"	m	struct:m_info
m_str	structs.h	/^    char_u	*m_str;		\/\/ mapped to, rhs$/;"	m	struct:mapblock
macMoveDialogItem	gui_mac.c	/^macMoveDialogItem($/;"	f	file:
macSetDialogItemText	gui_mac.c	/^macSetDialogItemText($/;"	f	file:
macSizeDialogItem	gui_mac.c	/^macSizeDialogItem($/;"	f	file:
mac_conv_cleanup	os_mac_conv.c	/^mac_conv_cleanup(void)$/;"	f
mac_conv_init	os_mac_conv.c	/^mac_conv_init(void)$/;"	f
mac_enc_to_cfstring	os_mac_conv.c	/^mac_enc_to_cfstring($/;"	f
mac_enc_to_utf16	os_mac_conv.c	/^mac_enc_to_utf16($/;"	f
mac_lang_init	os_mac_conv.c	/^mac_lang_init(void)$/;"	f
mac_precompose_path	os_mac_conv.c	/^mac_precompose_path($/;"	f
mac_string_convert	os_mac_conv.c	/^mac_string_convert($/;"	f
mac_utf16_to_enc	os_mac_conv.c	/^mac_utf16_to_enc($/;"	f
mac_utf16_to_utf8	os_mac_conv.c	/^mac_utf16_to_utf8($/;"	f	file:
mac_utf8_to_utf16	os_mac_conv.c	/^mac_utf8_to_utf16($/;"	f	file:
macroman2enc	os_mac_conv.c	/^macroman2enc($/;"	f
magic	crypt.c	/^    char    *magic;	\/\/ magic bytes stored in file header$/;"	m	struct:__anon7	file:
magic	structs.h	/^    int		    magic;	\/\/ magicness of the pattern$/;"	m	struct:spat
magic_save	ex_getln.c	/^    int		magic_save;$/;"	m	struct:__anon27	file:
magick	gui_gtk_x11.c	2576;"	d	file:
magick	gui_gtk_x11.c	2580;"	d	file:
magick	gui_gtk_x11.c	2582;"	d	file:
magick	gui_gtk_x11.c	2583;"	d	file:
magick	gui_gtk_x11.c	2585;"	d	file:
magick	gui_gtk_x11.c	2586;"	d	file:
magick	gui_gtk_x11.c	2588;"	d	file:
main	dosinst.c	/^main(int argc, char **argv)$/;"	f
main	if_python.c	72;"	d	file:
main	if_python3.c	71;"	d	file:
main	json_test.c	/^main(void)$/;"	f
main	kword_test.c	/^main(void)$/;"	f
main	memfile_test.c	/^main(void)$/;"	f
main	message_test.c	/^main(int argc, char **argv)$/;"	f
main	os_vms_mms.c	/^int main(int argc, char *argv[])$/;"	f
main	uninstall.c	/^main(int argc, char *argv[])$/;"	f
main	vimrun.c	/^main(void)$/;"	f
main_errors	main.c	/^static char *(main_errors[]) =$/;"	v	file:
main_loop	main.c	/^main_loop($/;"	f
main_msg	main.c	/^main_msg(char *s)$/;"	f	file:
main_start_gui	main.c	/^main_start_gui(void)$/;"	f	file:
mainerr	main.c	/^mainerr($/;"	f	file:
mainerr_arg_missing	main.c	/^mainerr_arg_missing(char_u *str)$/;"	f
mainwin	gui.h	/^    GtkWidget	*mainwin;	    \/\/ top level GTK window$/;"	m	struct:Gui
mainwin_destroy_cb	gui_gtk_x11.c	/^mainwin_destroy_cb(GObject *object UNUSED, gpointer data UNUSED)$/;"	f	file:
mainwin_event_cb	gui_beval.c	/^mainwin_event_cb(GtkWidget *widget UNUSED, GdkEvent *event, gpointer data)$/;"	f	file:
mainwin_realize	gui_gtk_x11.c	/^mainwin_realize(GtkWidget *widget UNUSED, gpointer data UNUSED)$/;"	f	file:
mainwin_screen_changed_cb	gui_gtk_x11.c	/^mainwin_screen_changed_cb(GtkWidget  *widget,$/;"	f	file:
make_bom	bufwrite.c	/^make_bom(char_u *buf, char_u *name)$/;"	f	file:
make_case_word	spell.c	/^make_case_word(char_u *fword, char_u *cword, int flags)$/;"	f
make_connection	evalfunc.c	/^make_connection(void)$/;"	f	file:
make_crc_tab	crypt_zip.c	/^make_crc_tab(void)$/;"	f	file:
make_expanded_name	eval.c	/^make_expanded_name($/;"	f	file:
make_extmatch	regexp.c	/^make_extmatch(void)$/;"	f	file:
make_filter_cmd	ex_cmds.c	/^make_filter_cmd($/;"	f
make_get_auname	quickfix.c	/^make_get_auname(cmdidx_T cmdidx)$/;"	f	file:
make_get_fullcmd	quickfix.c	/^make_get_fullcmd(char_u *makecmd, char_u *fname)$/;"	f	file:
make_modules	if_mzsch.c	/^make_modules(void)$/;"	f	file:
make_partial	userfunc.c	/^make_partial(dict_T *selfdict_in, typval_T *rettv)$/;"	f
make_percent_swname	memline.c	/^make_percent_swname(char_u *dir, char_u *name)$/;"	f
make_pull_name	gui_athena.c	/^make_pull_name(char_u * name)$/;"	f	file:
make_snapshot	window.c	/^make_snapshot(int idx)$/;"	f
make_snapshot_rec	window.c	/^make_snapshot_rec(frame_T *fr, frame_T **frp)$/;"	f	file:
make_tabpages	window.c	/^make_tabpages(int maxcount)$/;"	f
make_tooltip	gui_w32.c	/^make_tooltip(BalloonEval *beval, char *text, POINT pt)$/;"	f	file:
make_windows	window.c	/^make_windows($/;"	f
makefoldset	option.c	/^makefoldset(FILE *fd)$/;"	f
makemap	map.c	/^makemap($/;"	f
makeopens	session.c	/^makeopens($/;"	f	file:
makeset	option.c	/^makeset(FILE *fd, int opt_flags, int local_only)$/;"	f
makeswapname	memline.c	/^makeswapname($/;"	f
maketitle	buffer.c	/^maketitle(void)$/;"	f
manage_centered	gui_motif.c	/^manage_centered(Widget dialog_child)$/;"	f
map_clear	map.c	/^map_clear($/;"	f	file:
map_clear_int	map.c	/^map_clear_int($/;"	f
map_finder_callback	if_py_both.h	/^map_finder_callback(char_u *path, void *_data)$/;"	f
map_free	map.c	/^map_free(mapblock_T **mpp)$/;"	f	file:
map_mode_to_chars	map.c	/^map_mode_to_chars(int mode)$/;"	f	file:
map_result_T	getchar.c	/^} map_result_T;$/;"	t	typeref:enum:__anon30	file:
map_result_fail	getchar.c	/^    map_result_fail,    \/\/ failed, break loop$/;"	e	enum:__anon30	file:
map_result_get	getchar.c	/^    map_result_get,     \/\/ get a character from typeahead$/;"	e	enum:__anon30	file:
map_result_nomatch	getchar.c	/^    map_result_nomatch  \/\/ no matching mapping, get char$/;"	e	enum:__anon30	file:
map_result_retry	getchar.c	/^    map_result_retry,   \/\/ try to map again$/;"	e	enum:__anon30	file:
map_rtp_callback	if_py_both.h	/^map_rtp_callback(char_u *path, void *_data)$/;"	f
map_rtp_data	if_py_both.h	/^} map_rtp_data;$/;"	t	typeref:struct:__anon152
map_to_exists	map.c	/^map_to_exists(char_u *str, char_u *modechars, int abbr)$/;"	f
map_to_exists_mode	map.c	/^map_to_exists_mode(char_u *rhs, int mode, int abbr)$/;"	f
mapblock	structs.h	/^struct mapblock$/;"	s
mapblock_T	structs.h	/^typedef struct mapblock mapblock_T;$/;"	t	typeref:struct:mapblock
maphash	map.c	/^static mapblock_T	*(maphash[256]);$/;"	v	file:
maphash_valid	map.c	/^static int		maphash_valid = FALSE;$/;"	v	file:
mapped	gui_gtk_f.c	/^    gint mapped;$/;"	m	struct:_GtkFormChild	file:
mapped_ctrl_c	globals.h	/^EXTERN int	mapped_ctrl_c INIT(= FALSE); \/\/ modes where CTRL-C is mapped$/;"	v
mapsigntype	netbeans.c	/^mapsigntype(nbbuf_T *buf, int localsigntype)$/;"	f	file:
maptick	globals.h	/^EXTERN int	maptick INIT(= 0);	\/\/ tick for each non-mapped char$/;"	v
margin_columns_win	drawline.c	/^margin_columns_win(win_T *wp, int *left_col, int *right_col)$/;"	f	file:
mark	structs.h	/^    pos_T	mark;		\/\/ cursor position$/;"	m	struct:filemark
mark_adjust	mark.c	/^mark_adjust($/;"	f
mark_adjust_internal	mark.c	/^mark_adjust_internal($/;"	f	file:
mark_adjust_nofold	mark.c	/^mark_adjust_nofold($/;"	f
mark_col_adjust	mark.c	/^mark_col_adjust($/;"	f
mark_line	mark.c	/^mark_line(pos_T *mp, int lead_len)$/;"	f	file:
mark_quickfix_ctx	quickfix.c	/^mark_quickfix_ctx(qf_info_T *qi, int copyID)$/;"	f	file:
mat	structs.h	/^	} mat;$/;"	m	union:listvar_S::__anon207	typeref:struct:listvar_S::__anon207::__anon209
match	buffer.c	/^    char_u  *match;$/;"	m	struct:__anon4	file:
match	gui_xmdlg.c	/^match(SharedFontSelData *data, enum ListSpecifier l, int i)$/;"	f	file:
match	structs.h	/^    long	match;		\/\/ nr of times matched$/;"	m	struct:__anon235
match	structs.h	/^    regmmatch_T	match;	    \/\/ regexp program for pattern$/;"	m	struct:matchitem
match	syntax.c	/^    int		match;$/;"	m	struct:__anon117	file:
match_T	structs.h	/^} match_T;$/;"	t	typeref:struct:__anon240
match_add	highlight.c	/^match_add($/;"	f	file:
match_backref	regexp_nfa.c	/^match_backref($/;"	f	file:
match_checkcompoundpattern	spell.c	/^match_checkcompoundpattern($/;"	f
match_compoundrule	spell.c	/^match_compoundrule(slang_T *slang, char_u *compflags)$/;"	f
match_delete	highlight.c	/^match_delete(win_T *wp, int id, int perr)$/;"	f	file:
match_end	ex_getln.c	/^    pos_T	match_end;$/;"	m	struct:__anon27	file:
match_file_list	fileio.c	/^match_file_list(char_u *list, char_u *sfname, char_u *ffname)$/;"	f
match_file_pat	fileio.c	/^match_file_pat($/;"	f
match_follows	regexp_nfa.c	/^match_follows(nfa_state_T *startstate, int depth)$/;"	f	file:
match_start	ex_getln.c	/^    pos_T	match_start;$/;"	m	struct:__anon27	file:
match_suffix	filepath.c	/^match_suffix(char_u *fname)$/;"	f
match_text	regexp.h	/^    char_u		*match_text;	\/\/ plain text to match with$/;"	m	struct:__anon174
match_user	misc1.c	/^match_user(char_u *name)$/;"	f
match_with_backref	regexp.c	/^match_with_backref($/;"	f	file:
match_zref	regexp_nfa.c	/^match_zref($/;"	f	file:
matchadd_dict_arg	highlight.c	/^matchadd_dict_arg(typval_T *tv, char_u **conceal_char, win_T **win)$/;"	f	file:
matched	search.c	/^    int		matched;	\/\/ Found a match in this file$/;"	m	struct:SearchedFile	file:
matches	regexp.h	/^    char_u		*matches[NSUBEXP];$/;"	m	struct:__anon177
matchinf_S	spell.c	/^typedef struct matchinf_S$/;"	s	file:
matchinf_T	spell.c	/^} matchinf_T;$/;"	t	typeref:struct:matchinf_S	file:
matching_line_len	tag.c	/^matching_line_len(char_u *lbuf)$/;"	f	file:
matchitem	structs.h	/^struct matchitem$/;"	s
matchitem_T	structs.h	/^typedef struct matchitem matchitem_T;$/;"	t	typeref:struct:matchitem
matchtype_T	evalfunc.c	/^} matchtype_T;$/;"	t	typeref:enum:__anon19	file:
max	gui.h	/^    long	max;		\/\/ Number of lines in buffer$/;"	m	struct:GuiScrollbar
max	gui_at_sb.h	/^    float	  max;		\/\/ Maximum value for top$/;"	m	struct:__anon143
max_alist_id	globals.h	/^EXTERN int	max_alist_id INIT(= 0);	    \/\/ the previous argument list id$/;"	v
max_col	vim.h	/^    short_u	max_col;$/;"	m	struct:__anon279
max_min	evalfunc.c	/^max_min(typval_T *argvars, typval_T *rettv, int domax)$/;"	f	file:
max_row	vim.h	/^    short_u	max_row;$/;"	m	struct:__anon279
max_topfill	move.c	/^max_topfill(void)$/;"	f	file:
maxa	if_mzsch.c	/^    int		maxa;$/;"	m	struct:__anon54	file:
maxval	regexp_bt.c	/^    long	maxval;$/;"	m	struct:regstar_S	file:
may_add_char_to_search	ex_getln.c	/^may_add_char_to_search(int firstc, int *c, incsearch_state_T *is_state)$/;"	f	file:
may_add_state_char	misc1.c	/^may_add_state_char(garray_T *gap, char_u *include, int c)$/;"	f	file:
may_adjust_color_count	term.c	/^may_adjust_color_count(int val)$/;"	f	file:
may_adjust_incsearch_highlighting	ex_getln.c	/^may_adjust_incsearch_highlighting($/;"	f	file:
may_clear_cmdline	normal.c	/^may_clear_cmdline(void)$/;"	f
may_clear_sb_text	message.c	/^may_clear_sb_text(void)$/;"	f
may_close_term_popup	terminal.c	/^may_close_term_popup(void)$/;"	f
may_core_dump	os_unix.c	/^may_core_dump(void)$/;"	f	file:
may_do_incsearch_highlighting	ex_getln.c	/^may_do_incsearch_highlighting($/;"	f	file:
may_force_numberwidth_recompute	sign.c	/^may_force_numberwidth_recompute(buf_T *buf, int unplace)$/;"	f	file:
may_garbage_collect	globals.h	/^EXTERN int	may_garbage_collect INIT(= FALSE);$/;"	v
may_generate_2STRING	vim9compile.c	/^may_generate_2STRING(int offset, cctx_T *cctx)$/;"	f	file:
may_get_selection	register.c	/^may_get_selection(int regname)$/;"	f
may_invoke_callback	channel.c	/^may_invoke_callback(channel_T *channel, ch_part_T part)$/;"	f	file:
may_invoke_listeners	change.c	/^may_invoke_listeners(buf_T *buf, linenr_T lnum, linenr_T lnume, int added)$/;"	f
may_move_terminal_to_buffer	terminal.c	/^may_move_terminal_to_buffer(term_T *term, int redraw)$/;"	f	file:
may_open_tabpage	window.c	/^may_open_tabpage(void)$/;"	f	file:
may_output_cursor_props	terminal.c	/^may_output_cursor_props(void)$/;"	f	file:
may_record_change	change.c	/^may_record_change($/;"	f	file:
may_req_ambiguous_char_width	term.c	/^may_req_ambiguous_char_width(void)$/;"	f
may_req_bg_color	term.c	/^may_req_bg_color(void)$/;"	f
may_req_termresponse	term.c	/^may_req_termresponse(void)$/;"	f
may_restore_clipboard	os_unix.c	/^may_restore_clipboard(void)$/;"	f	file:
may_send_sigint	os_unix.c	/^may_send_sigint(int c UNUSED, pid_t pid UNUSED, pid_t wpid UNUSED)$/;"	f	file:
may_set_cursor_props	terminal.c	/^may_set_cursor_props(term_T *term)$/;"	f	file:
may_set_selection	register.c	/^may_set_selection(void)$/;"	f	file:
may_start_select	normal.c	/^may_start_select(int c)$/;"	f
may_sync_undo	getchar.c	/^may_sync_undo(void)$/;"	f	file:
may_toggle_cursor	terminal.c	/^may_toggle_cursor(term_T *term)$/;"	f	file:
may_trigger_safestate	main.c	/^may_trigger_safestate(int safe)$/;"	f
may_trigger_safestateagain	main.c	/^may_trigger_safestateagain(void)$/;"	f
may_update_popup_mask	popupwin.c	/^may_update_popup_mask(int type)$/;"	f
maybe_intro_message	version.c	/^maybe_intro_message(void)$/;"	f
mb_adjust_cursor	mbyte.c	/^mb_adjust_cursor(void)$/;"	f
mb_adjust_opend	ops.c	/^mb_adjust_opend(oparg_T *oap)$/;"	f	file:
mb_adjustpos	mbyte.c	/^mb_adjustpos(buf_T *buf, pos_T *lp)$/;"	f
mb_bytelen_tab	globals.h	/^EXTERN char	mb_bytelen_tab[256];$/;"	v
mb_charlen	mbyte.c	/^mb_charlen(char_u *str)$/;"	f
mb_charlen_len	mbyte.c	/^mb_charlen_len(char_u *str, int len)$/;"	f
mb_copy_char	mbyte.c	/^mb_copy_char(char_u **fp, char_u **tp)$/;"	f
mb_cptr2char_adv	mbyte.c	/^mb_cptr2char_adv(char_u **pp)$/;"	f
mb_decompose	regexp.c	/^mb_decompose(int c, int *c1, int *c2, int *c3)$/;"	f	file:
mb_fix_col	mbyte.c	/^mb_fix_col(int col, int row)$/;"	f
mb_get_class	mbyte.c	/^mb_get_class(char_u *p)$/;"	f
mb_get_class_buf	mbyte.c	/^mb_get_class_buf(char_u *p, buf_T *buf)$/;"	f
mb_init	mbyte.c	/^mb_init(void)$/;"	f
mb_lefthalve	mbyte.c	/^mb_lefthalve(int row, int col)$/;"	f
mb_off_next	mbyte.c	/^mb_off_next(char_u *base, char_u *p)$/;"	f
mb_prevptr	mbyte.c	/^mb_prevptr($/;"	f
mb_ptr2char_adv	mbyte.c	/^mb_ptr2char_adv(char_u **pp)$/;"	f
mb_replace_pop_ins	edit.c	/^mb_replace_pop_ins(int cc)$/;"	f	file:
mb_str2wide	spellfile.c	/^mb_str2wide(char_u *s)$/;"	f	file:
mb_string2cells	mbyte.c	/^mb_string2cells(char_u *p, int len)$/;"	f
mb_strnicmp	mbyte.c	/^mb_strnicmp(char_u *s1, char_u *s2, size_t nn)$/;"	f
mb_tail_off	mbyte.c	/^mb_tail_off(char_u *base, char_u *p)$/;"	f
mb_unescape	mbyte.c	/^mb_unescape(char_u **pp)$/;"	f
mbfont_opts	hardcopy.c	/^static option_table_T mbfont_opts[OPT_MBFONT_NUM_OPTIONS] =$/;"	v	file:
mblen	mbyte.c	110;"	d	file:
mbyte_im_get_status	mbyte.c	/^mbyte_im_get_status(void)$/;"	f
mbyte_im_set_active	mbyte.c	/^mbyte_im_set_active(int active_arg)$/;"	f
mcase	gui_gtk.c	/^    GtkWidget *mcase;	\/\/ 'Match case' check button$/;"	m	struct:_SharedFindReplace	file:
mcase	gui_motif.c	/^    Widget mcase;	\/\/ 'match case' check button$/;"	m	struct:_SharedFindReplace	file:
mch_FullName	os_amiga.c	/^mch_FullName($/;"	f
mch_FullName	os_mswin.c	/^mch_FullName($/;"	f
mch_FullName	os_unix.c	/^mch_FullName($/;"	f
mch_access	macros.h	155;"	d
mch_access	macros.h	164;"	d
mch_access	os_win32.c	/^mch_access(char *n, int p)$/;"	f
mch_avail_mem	os_amiga.c	/^mch_avail_mem(int special)$/;"	f
mch_bevalterm_changed	os_unix.c	/^mch_bevalterm_changed(void)$/;"	f
mch_bevalterm_changed	os_win32.c	/^mch_bevalterm_changed(void)$/;"	f
mch_breakcheck	os_amiga.c	/^mch_breakcheck(int force)$/;"	f
mch_breakcheck	os_unix.c	/^mch_breakcheck(int force)$/;"	f
mch_breakcheck	os_win32.c	/^mch_breakcheck(int force UNUSED)$/;"	f
mch_call_shell	os_amiga.c	/^mch_call_shell($/;"	f
mch_call_shell	os_unix.c	/^mch_call_shell($/;"	f
mch_call_shell	os_win32.c	/^mch_call_shell($/;"	f
mch_call_shell_fork	os_unix.c	/^mch_call_shell_fork($/;"	f	file:
mch_call_shell_system	os_unix.c	/^mch_call_shell_system($/;"	f	file:
mch_call_shell_terminal	os_unix.c	/^mch_call_shell_terminal($/;"	f	file:
mch_call_shell_terminal	os_win32.c	/^mch_call_shell_terminal($/;"	f	file:
mch_can_exe	os_amiga.c	/^mch_can_exe(char_u *name, char_u **path, int use_path)$/;"	f
mch_can_exe	os_unix.c	/^mch_can_exe(char_u *name, char_u **path, int use_path)$/;"	f
mch_can_exe	os_win32.c	/^mch_can_exe(char_u *name, char_u **path, int use_path)$/;"	f
mch_can_restore_icon	os_amiga.c	/^mch_can_restore_icon(void)$/;"	f
mch_can_restore_icon	os_mswin.c	/^mch_can_restore_icon(void)$/;"	f
mch_can_restore_icon	os_unix.c	/^mch_can_restore_icon(void)$/;"	f
mch_can_restore_title	os_amiga.c	/^mch_can_restore_title(void)$/;"	f
mch_can_restore_title	os_mswin.c	/^mch_can_restore_title(void)$/;"	f
mch_can_restore_title	os_unix.c	/^mch_can_restore_title(void)$/;"	f
mch_char_avail	os_amiga.c	/^mch_char_avail(void)$/;"	f
mch_char_avail	os_mswin.c	/^mch_char_avail(void)$/;"	f
mch_char_avail	os_unix.c	/^mch_char_avail(void)$/;"	f
mch_char_avail	os_win32.c	/^mch_char_avail(void)$/;"	f
mch_chdir	dosinst.h	/^mch_chdir(char *path)$/;"	f
mch_chdir	os_amiga.h	235;"	d
mch_chdir	os_mswin.c	/^mch_chdir(char *path)$/;"	f
mch_chdir	os_unix.c	/^mch_chdir(char *path)$/;"	f
mch_check_messages	os_mswin.c	/^mch_check_messages(void)$/;"	f
mch_check_messages	os_unix.c	/^mch_check_messages(void)$/;"	f
mch_check_messages	os_win32.c	/^mch_check_messages(void)$/;"	f
mch_check_win	os_amiga.c	/^mch_check_win(int argc, char **argv)$/;"	f
mch_check_win	os_unix.c	/^mch_check_win(int argc UNUSED, char **argv UNUSED)$/;"	f
mch_check_win	os_win32.c	/^mch_check_win($/;"	f
mch_clear_job	os_unix.c	/^mch_clear_job(job_T *job)$/;"	f
mch_clear_job	os_win32.c	/^mch_clear_job(job_T *job)$/;"	f
mch_copy_file_attribute	os_win32.c	/^mch_copy_file_attribute(char_u *from, char_u *to)$/;"	f
mch_copy_sec	os_unix.c	/^mch_copy_sec(char_u *from_file, char_u *to_file)$/;"	f
mch_create_pty_channel	os_unix.c	/^mch_create_pty_channel(job_T *job, jobopt_T *options)$/;"	f
mch_delay	os_amiga.c	/^mch_delay(long msec, int ignoreinput)$/;"	f
mch_delay	os_unix.c	/^mch_delay(long msec, int ignoreinput)$/;"	f
mch_delay	os_win32.c	/^mch_delay($/;"	f
mch_detect_ended_job	os_unix.c	/^mch_detect_ended_job(job_T *job_list)$/;"	f
mch_detect_ended_job	os_win32.c	/^mch_detect_ended_job(job_T *job_list)$/;"	f
mch_didjmp	os_unix.c	/^mch_didjmp(void)$/;"	f	file:
mch_dirname	os_amiga.c	/^mch_dirname(char_u *buf, int len)$/;"	f
mch_dirname	os_unix.c	/^mch_dirname(char_u *buf, int len)$/;"	f
mch_dirname	os_win32.c	/^mch_dirname($/;"	f
mch_disable_flush	macros.h	325;"	d
mch_disable_flush	macros.h	328;"	d
mch_early_init	os_amiga.c	/^mch_early_init(void)$/;"	f
mch_early_init	os_mswin.c	/^mch_early_init(void)$/;"	f
mch_early_init	os_unix.c	/^mch_early_init(void)$/;"	f
mch_enable_flush	macros.h	324;"	d
mch_enable_flush	macros.h	327;"	d
mch_endjmp	os_unix.c	/^mch_endjmp(void)$/;"	f	file:
mch_errmsg	message.c	/^mch_errmsg(char *str)$/;"	f
mch_errmsg	message.c	2978;"	d	file:
mch_errmsg	vim.h	2150;"	d
mch_errmsg_c	message.c	/^mch_errmsg_c(char *str)$/;"	f	file:
mch_exit	os_amiga.c	/^mch_exit(int r)$/;"	f
mch_exit	os_unix.c	/^mch_exit(int r)$/;"	f
mch_exit	os_win32.c	/^mch_exit(int r)$/;"	f
mch_exit_c	os_win32.c	/^mch_exit_c(int r)$/;"	f	file:
mch_exit_g	os_mswin.c	/^mch_exit_g(int r)$/;"	f
mch_expand_wildcards	os_unix.c	/^mch_expand_wildcards($/;"	f
mch_expand_wildcards	os_vms.c	/^mch_expand_wildcards(int num_pat, char_u **pat, int *num_file, char_u ***file, int flags)$/;"	f
mch_expandpath	filepath.c	/^mch_expandpath($/;"	f
mch_expandpath	os_amiga.c	/^mch_expandpath($/;"	f
mch_expandpath	os_unix.c	/^mch_expandpath($/;"	f
mch_expandpath	os_vms.c	/^mch_expandpath(garray_T *gap, char_u *path, int flags)$/;"	f
mch_fopen	macros.h	157;"	d
mch_fopen	os_win32.c	/^mch_fopen(const char *name, const char *mode)$/;"	f
mch_fopen	vim.h	2186;"	d
mch_free_acl	os_unix.c	/^mch_free_acl(vim_acl_T aclent)$/;"	f
mch_free_acl	os_win32.c	/^mch_free_acl(vim_acl_T acl)$/;"	f
mch_free_mem	os_unix.c	/^mch_free_mem(void)$/;"	f
mch_fsetperm	os_unix.c	/^mch_fsetperm(int fd, long perm)$/;"	f
mch_fstat	macros.h	158;"	d
mch_fstat	macros.h	166;"	d
mch_get_acl	os_unix.c	/^mch_get_acl(char_u *fname UNUSED)$/;"	f
mch_get_acl	os_win32.c	/^mch_get_acl(char_u *fname)$/;"	f
mch_get_host_name	os_amiga.c	/^mch_get_host_name(char_u *s, int len)$/;"	f
mch_get_host_name	os_unix.c	/^mch_get_host_name(char_u *s, int len)$/;"	f
mch_get_host_name	os_win32.c	/^mch_get_host_name($/;"	f
mch_get_pid	os_amiga.c	/^mch_get_pid(void)$/;"	f
mch_get_pid	os_unix.c	/^mch_get_pid(void)$/;"	f
mch_get_pid	os_win32.c	/^mch_get_pid(void)$/;"	f
mch_get_shellsize	os_amiga.c	/^mch_get_shellsize(void)$/;"	f
mch_get_shellsize	os_mswin.c	/^mch_get_shellsize(void)$/;"	f
mch_get_shellsize	os_unix.c	/^mch_get_shellsize(void)$/;"	f
mch_get_shellsize	os_vms.c	/^mch_get_shellsize(void)$/;"	f
mch_get_shellsize	os_win32.c	/^mch_get_shellsize(void)$/;"	f
mch_get_uname	os_unix.c	/^mch_get_uname(uid_t uid, char_u *s, int len)$/;"	f
mch_get_user_name	os_amiga.c	/^mch_get_user_name(char_u *s, int len)$/;"	f
mch_get_user_name	os_unix.c	/^mch_get_user_name(char_u *s, int len)$/;"	f
mch_get_user_name	os_win32.c	/^mch_get_user_name($/;"	f
mch_get_winpos	os_mswin.c	/^mch_get_winpos(int *x, int *y)$/;"	f
mch_getenv	os_amiga.c	/^mch_getenv(char_u *var)$/;"	f
mch_getenv	os_mac.h	237;"	d
mch_getenv	os_mac.h	242;"	d
mch_getenv	os_unix.h	458;"	d
mch_getenv	os_unix.h	460;"	d
mch_getenv	os_vms.c	/^mch_getenv(char_u *lognam)$/;"	f
mch_getenv	os_win32.h	200;"	d
mch_getperm	os_amiga.c	/^mch_getperm(char_u *name)$/;"	f
mch_getperm	os_unix.c	/^mch_getperm(char_u *name)$/;"	f
mch_getperm	os_win32.c	/^mch_getperm(char_u *name)$/;"	f
mch_gpm_process	os_unix.c	/^mch_gpm_process(void)$/;"	f	file:
mch_has_exp_wildcard	os_amiga.c	/^mch_has_exp_wildcard(char_u *p)$/;"	f
mch_has_exp_wildcard	os_mswin.c	/^mch_has_exp_wildcard(char_u *p)$/;"	f
mch_has_exp_wildcard	os_unix.c	/^mch_has_exp_wildcard(char_u *p)$/;"	f
mch_has_wildcard	os_amiga.c	/^mch_has_wildcard(char_u *p)$/;"	f
mch_has_wildcard	os_mswin.c	/^mch_has_wildcard(char_u *p)$/;"	f
mch_has_wildcard	os_unix.c	/^mch_has_wildcard(char_u *p)$/;"	f
mch_hide	os_amiga.c	/^mch_hide(char_u *name)$/;"	f
mch_hide	os_unix.c	/^mch_hide(char_u *name UNUSED)$/;"	f
mch_hide	os_win32.c	/^mch_hide(char_u *name)$/;"	f
mch_icon_load	os_mswin.c	/^mch_icon_load(HANDLE *iconp)$/;"	f
mch_icon_load_cb	os_mswin.c	/^mch_icon_load_cb(char_u *fname, void *cookie)$/;"	f	file:
mch_inchar	os_amiga.c	/^mch_inchar($/;"	f
mch_inchar	os_unix.c	/^mch_inchar($/;"	f
mch_inchar	os_win32.c	/^mch_inchar($/;"	f
mch_init	os_amiga.c	/^mch_init(void)$/;"	f
mch_init	os_unix.c	/^mch_init(void)$/;"	f
mch_init	os_win32.c	/^mch_init(void)$/;"	f
mch_init_c	os_win32.c	/^mch_init_c(void)$/;"	f	file:
mch_init_g	os_win32.c	/^mch_init_g(void)$/;"	f	file:
mch_input_isatty	os_amiga.c	/^mch_input_isatty(void)$/;"	f
mch_input_isatty	os_mswin.c	/^mch_input_isatty(void)$/;"	f
mch_input_isatty	os_unix.c	/^mch_input_isatty(void)$/;"	f
mch_isFullName	os_amiga.c	/^mch_isFullName(char_u *fname)$/;"	f
mch_isFullName	os_mswin.c	/^mch_isFullName(char_u *fname)$/;"	f
mch_isFullName	os_unix.c	/^mch_isFullName(char_u *fname)$/;"	f
mch_is_gui_executable	os_win32.c	/^mch_is_gui_executable(void)$/;"	f
mch_is_hard_link	os_win32.c	/^mch_is_hard_link(char_u *fname)$/;"	f
mch_is_linked	os_win32.c	/^mch_is_linked(char_u *fname)$/;"	f
mch_is_symbolic_link	os_win32.c	/^mch_is_symbolic_link(char_u *name)$/;"	f
mch_isatty	pty.c	/^mch_isatty(int fd)$/;"	f
mch_isdir	os_amiga.c	/^mch_isdir(char_u *name)$/;"	f
mch_isdir	os_unix.c	/^mch_isdir(char_u *name)$/;"	f
mch_isdir	os_win32.c	/^mch_isdir(char_u *name)$/;"	f
mch_ishidden	os_win32.c	/^mch_ishidden(char_u *name)$/;"	f
mch_isrealdir	os_unix.c	/^mch_isrealdir(char_u *name)$/;"	f
mch_isrealdir	os_win32.c	/^mch_isrealdir(char_u *name)$/;"	f
mch_job_start	os_unix.c	/^mch_job_start(char **argv, job_T *job, jobopt_T *options, int is_terminal)$/;"	f
mch_job_start	os_win32.c	/^mch_job_start(char *cmd, job_T *job, jobopt_T *options)$/;"	f
mch_job_status	os_unix.c	/^mch_job_status(job_T *job)$/;"	f
mch_job_status	os_win32.c	/^mch_job_status(job_T *job)$/;"	f
mch_libcall	os_mswin.c	/^mch_libcall($/;"	f
mch_libcall	os_unix.c	/^mch_libcall($/;"	f
mch_lstat	macros.h	179;"	d
mch_lstat	macros.h	181;"	d
mch_memmove	os_unix.h	438;"	d
mch_memmove	os_unix.h	441;"	d
mch_memmove	os_unix.h	444;"	d
mch_memmove	vim.h	1705;"	d
mch_mkdir	os_amiga.c	/^mch_mkdir(char_u *name)$/;"	f
mch_mkdir	os_win32.c	/^mch_mkdir(char_u *name)$/;"	f
mch_msg	message.c	/^mch_msg(char *str)$/;"	f
mch_msg	message.c	2981;"	d	file:
mch_msg	vim.h	2152;"	d
mch_msg_c	message.c	/^mch_msg_c(char *str)$/;"	f	file:
mch_new_shellsize	os_amiga.c	/^mch_new_shellsize(void)$/;"	f
mch_new_shellsize	os_mswin.c	/^mch_new_shellsize(void)$/;"	f
mch_new_shellsize	os_unix.c	/^mch_new_shellsize(void)$/;"	f
mch_new_shellsize	os_win32.c	/^mch_new_shellsize(void)$/;"	f
mch_nodetype	os_amiga.c	/^mch_nodetype(char_u *name)$/;"	f
mch_nodetype	os_unix.c	/^mch_nodetype(char_u *name)$/;"	f
mch_nodetype	os_win32.c	/^mch_nodetype(char_u *name)$/;"	f
mch_open	macros.h	190;"	d
mch_open	os_win32.c	/^mch_open(const char *name, int flags, int mode)$/;"	f
mch_open	vim.h	2185;"	d
mch_open_rw	macros.h	195;"	d
mch_open_rw	macros.h	198;"	d
mch_open_rw	macros.h	200;"	d
mch_openpty	pty.c	/^mch_openpty(char **ttyn)$/;"	f
mch_parse_cmd	misc2.c	/^mch_parse_cmd(char_u *cmd, int use_shcf, char ***argv, int *argc)$/;"	f
mch_post_buffer_write	gui_mac.c	/^mch_post_buffer_write(buf_T *buf)$/;"	f
mch_print_begin	hardcopy.c	/^mch_print_begin(prt_settings_T *psettings)$/;"	f
mch_print_begin	os_mswin.c	/^mch_print_begin(prt_settings_T *psettings)$/;"	f
mch_print_begin_page	hardcopy.c	/^mch_print_begin_page(char_u *str UNUSED)$/;"	f
mch_print_begin_page	os_mswin.c	/^mch_print_begin_page(char_u *msg)$/;"	f
mch_print_blank_page	hardcopy.c	/^mch_print_blank_page(void)$/;"	f
mch_print_blank_page	os_mswin.c	/^mch_print_blank_page(void)$/;"	f
mch_print_cleanup	hardcopy.c	/^mch_print_cleanup(void)$/;"	f
mch_print_cleanup	os_mswin.c	/^mch_print_cleanup(void)$/;"	f
mch_print_end	hardcopy.c	/^mch_print_end(prt_settings_T *psettings)$/;"	f
mch_print_end	os_mswin.c	/^mch_print_end(prt_settings_T *psettings UNUSED)$/;"	f
mch_print_end_page	hardcopy.c	/^mch_print_end_page(void)$/;"	f
mch_print_end_page	os_mswin.c	/^mch_print_end_page(void)$/;"	f
mch_print_init	hardcopy.c	/^mch_print_init($/;"	f
mch_print_init	os_mswin.c	/^mch_print_init(prt_settings_T *psettings, char_u *jobname, int forceit)$/;"	f
mch_print_set_bg	hardcopy.c	/^mch_print_set_bg(long_u bgcol)$/;"	f
mch_print_set_bg	os_mswin.c	/^mch_print_set_bg(long_u bgcol)$/;"	f
mch_print_set_fg	hardcopy.c	/^mch_print_set_fg(long_u fgcol)$/;"	f
mch_print_set_fg	os_mswin.c	/^mch_print_set_fg(long_u fgcol)$/;"	f
mch_print_set_font	hardcopy.c	/^mch_print_set_font(int iBold, int iItalic, int iUnderline)$/;"	f
mch_print_set_font	os_mswin.c	/^mch_print_set_font(int iBold, int iItalic, int iUnderline)$/;"	f
mch_print_start_line	hardcopy.c	/^mch_print_start_line(int margin, int page_line)$/;"	f
mch_print_start_line	os_mswin.c	/^mch_print_start_line(int margin, int page_line)$/;"	f
mch_print_text_out	hardcopy.c	/^mch_print_text_out(char_u *textp, int len UNUSED)$/;"	f
mch_print_text_out	os_mswin.c	/^mch_print_text_out(char_u *p, int len)$/;"	f
mch_process_running	os_unix.c	/^mch_process_running(long pid)$/;"	f
mch_process_running	os_win32.c	/^mch_process_running(long pid)$/;"	f
mch_remove	os_amiga.h	233;"	d
mch_remove	os_mac.h	234;"	d
mch_remove	os_unix.h	76;"	d
mch_remove	os_unix.h	81;"	d
mch_remove	os_win32.c	/^mch_remove(char_u *name)$/;"	f
mch_rename	os_amiga.h	234;"	d
mch_rename	os_mac.h	233;"	d
mch_rename	os_unix.c	/^mch_rename(const char *src, const char *dest)$/;"	f
mch_rename	os_unix.h	450;"	d
mch_rename	os_win32.c	/^mch_rename($/;"	f
mch_report_winsize	os_unix.c	/^mch_report_winsize(int fd, int rows, int cols)$/;"	f
mch_resolve_path	os_mswin.c	/^mch_resolve_path(char_u *fname, int reparse_point)$/;"	f
mch_restore_title	os_amiga.c	/^mch_restore_title(int which)$/;"	f
mch_restore_title	os_mswin.c	/^mch_restore_title(int which UNUSED)$/;"	f
mch_restore_title	os_unix.c	/^mch_restore_title(int which)$/;"	f
mch_rmdir	macros.h	161;"	d
mch_rmdir	os_unix.h	80;"	d
mch_rmdir	os_win32.c	/^mch_rmdir(char_u *name)$/;"	f
mch_set_acl	os_unix.c	/^mch_set_acl(char_u *fname UNUSED, vim_acl_T aclent)$/;"	f
mch_set_acl	os_win32.c	/^mch_set_acl(char_u *fname, vim_acl_T acl)$/;"	f
mch_set_cursor_shape	os_win32.c	/^mch_set_cursor_shape(int thickness)$/;"	f	file:
mch_set_mouse_shape	gui_gtk_x11.c	/^mch_set_mouse_shape(int shape)$/;"	f
mch_set_mouse_shape	gui_photon.c	/^mch_set_mouse_shape(int shape)$/;"	f
mch_set_mouse_shape	gui_w32.c	/^mch_set_mouse_shape(int shape)$/;"	f
mch_set_mouse_shape	gui_x11.c	/^mch_set_mouse_shape(int shape)$/;"	f
mch_set_normal_colors	os_win32.c	/^mch_set_normal_colors(void)$/;"	f
mch_set_shellsize	os_amiga.c	/^mch_set_shellsize(void)$/;"	f
mch_set_shellsize	os_mswin.c	/^mch_set_shellsize(void)$/;"	f
mch_set_shellsize	os_unix.c	/^mch_set_shellsize(void)$/;"	f
mch_set_shellsize	os_vms.c	/^mch_set_shellsize(void)$/;"	f
mch_set_shellsize	os_win32.c	/^mch_set_shellsize(void)$/;"	f
mch_set_winpos	os_mswin.c	/^mch_set_winpos(int x, int y)$/;"	f
mch_set_winsize_now	os_win32.c	/^mch_set_winsize_now(void)$/;"	f
mch_setenv	os_amiga.c	/^mch_setenv(char *var, char *value, int x)$/;"	f
mch_setenv	os_mac.h	238;"	d
mch_setenv	os_mac.h	243;"	d
mch_setenv	os_unix.h	462;"	d
mch_setenv	os_vms.c	/^mch_setenv(char *var, char *value, int x)$/;"	f
mch_setenv	os_win32.c	/^mch_setenv(char *var, char *value, int x UNUSED)$/;"	f
mch_setmouse	os_amiga.c	/^mch_setmouse(int on UNUSED)$/;"	f
mch_setmouse	os_unix.c	/^mch_setmouse(int on)$/;"	f
mch_setmouse	os_win32.c	/^mch_setmouse(int on UNUSED)$/;"	f
mch_setmouse	os_win32.c	/^mch_setmouse(int on)$/;"	f
mch_setperm	os_amiga.c	/^mch_setperm(char_u *name, long perm)$/;"	f
mch_setperm	os_unix.c	/^mch_setperm(char_u *name, long perm)$/;"	f
mch_setperm	os_win32.c	/^mch_setperm(char_u *name, long perm)$/;"	f
mch_settitle	os_amiga.c	/^mch_settitle(char_u *title, char_u *icon)$/;"	f
mch_settitle	os_mswin.c	/^mch_settitle($/;"	f
mch_settitle	os_unix.c	/^mch_settitle(char_u *title, char_u *icon)$/;"	f
mch_settmode	os_amiga.c	/^mch_settmode(int tmode)$/;"	f
mch_settmode	os_mswin.c	/^mch_settmode(int tmode UNUSED)$/;"	f
mch_settmode	os_unix.c	/^mch_settmode(int tmode)$/;"	f
mch_settmode	os_vms.c	/^mch_settmode(int tmode)$/;"	f
mch_settmode	os_win32.c	/^mch_settmode(int tmode)$/;"	f
mch_signal_job	os_unix.c	/^mch_signal_job(job_T *job, char_u *how)$/;"	f
mch_signal_job	os_win32.c	/^mch_signal_job(job_T *job, char_u *how)$/;"	f
mch_stackcheck	os_unix.c	/^mch_stackcheck(char *p)$/;"	f
mch_startjmp	os_unix.c	/^mch_startjmp(void)$/;"	f	file:
mch_stat	macros.h	160;"	d
mch_stat	macros.h	168;"	d
mch_stat	macros.h	171;"	d
mch_stat	macros.h	173;"	d
mch_suspend	os_amiga.c	/^mch_suspend(void)$/;"	f
mch_suspend	os_mswin.c	/^mch_suspend(void)$/;"	f
mch_suspend	os_unix.c	/^mch_suspend(void)$/;"	f
mch_system	os_win32.c	/^mch_system(char *cmd, int options)$/;"	f	file:
mch_system_c	os_win32.c	/^mch_system_c(char *cmd, int options UNUSED)$/;"	f	file:
mch_system_classic	os_win32.c	/^mch_system_classic(char *cmd, int options)$/;"	f	file:
mch_system_g	os_win32.c	/^mch_system_g(char *cmd, int options)$/;"	f	file:
mch_system_piped	os_win32.c	/^mch_system_piped(char *cmd, int options)$/;"	f	file:
mch_tcgetattr	os_unix.c	/^mch_tcgetattr(int fd, void *term)$/;"	f	file:
mch_total_mem	os_unix.c	/^mch_total_mem(int special UNUSED)$/;"	f
mch_total_mem	os_win32.c	/^mch_total_mem(int special UNUSED)$/;"	f
mch_update_cursor	os_win32.c	/^mch_update_cursor(void)$/;"	f
mch_wrename	os_win32.c	/^mch_wrename(WCHAR *wold, WCHAR *wnew)$/;"	f
mch_writable	os_win32.c	/^mch_writable(char_u *name)$/;"	f
mch_write	os_amiga.c	/^mch_write(char_u *p, int len)$/;"	f
mch_write	os_unix.c	/^mch_write(char_u *s, int len)$/;"	f
mch_write	os_win32.c	/^mch_write($/;"	f
mcmd_e	if_cscope.h	/^} mcmd_e;$/;"	t	typeref:enum:__anon149
medial	arabic.c	/^    unsigned medial;$/;"	m	struct:achar	file:
mediumVersion	version.c	/^static char	*mediumVersion = VIM_VERSION_MEDIUM;$/;"	v	file:
mem_allocated	misc2.c	/^static long_u mem_allocated;$/;"	v	file:
mem_allocs	misc2.c	/^static long_u mem_allocs[MEM_SIZES];$/;"	v	file:
mem_freed	misc2.c	/^static long_u mem_freed;$/;"	v	file:
mem_frees	misc2.c	/^static long_u mem_frees[MEM_SIZES];$/;"	v	file:
mem_peak	misc2.c	/^static long_u mem_peak;$/;"	v	file:
mem_post_alloc	misc2.c	/^mem_post_alloc($/;"	f	file:
mem_pre_alloc_l	misc2.c	/^mem_pre_alloc_l(size_t *sizep)$/;"	f	file:
mem_pre_alloc_s	misc2.c	/^mem_pre_alloc_s(size_t *sizep)$/;"	f	file:
mem_pre_free	misc2.c	/^mem_pre_free(void **pp)$/;"	f	file:
mem_realloc	misc2.c	/^mem_realloc(void *ptr, size_t size)$/;"	f
memfile	structs.h	/^struct memfile$/;"	s
memfile_T	structs.h	/^typedef struct memfile	    memfile_T;$/;"	t	typeref:struct:memfile
memline	structs.h	/^typedef struct memline$/;"	s
memline_T	structs.h	/^} memline_T;$/;"	t	typeref:struct:memline
menuBar	gui_athena.c	/^static Widget menuBar = (Widget)0;$/;"	v	file:
menuBar	gui_motif.c	/^static Widget menuBar;$/;"	v	file:
menuTrans	gui_athena.c	/^static XtTranslations	popupTrans, parentTrans, menuTrans, supermenuTrans;$/;"	v	file:
menu_bg_pixel	gui.h	/^    guicolor_T	menu_bg_pixel;		\/\/ Same in Pixel format$/;"	m	struct:Gui
menu_def_bg_pixel	gui.h	/^    guicolor_T	menu_def_bg_pixel;  \/\/ Default menu background$/;"	m	struct:Gui
menu_def_fg_pixel	gui.h	/^    guicolor_T	menu_def_fg_pixel;  \/\/ Default menu foreground$/;"	m	struct:Gui
menu_enabled	gui_motif.c	/^static int menu_enabled = TRUE;$/;"	v	file:
menu_fg_pixel	gui.h	/^    guicolor_T	menu_fg_pixel;		\/\/ Same in Pixel format$/;"	m	struct:Gui
menu_font	gui.h	/^    GuiFont	menu_font;	    \/\/ menu item font$/;"	m	struct:Gui
menu_fontset	gui.h	/^    GuiFontset	menu_fontset;	    \/\/ set of fonts for multi-byte chars$/;"	m	struct:Gui
menu_handle	structs.h	/^    MenuHandle	menu_handle;$/;"	m	struct:VimMenu
menu_height	gui.h	/^    int		menu_height;	    \/\/ Height of the menu bar$/;"	m	struct:Gui
menu_height_fixed	gui.h	/^    char	menu_height_fixed;  \/\/ TRUE if menu height fixed$/;"	m	struct:Gui
menu_id	structs.h	/^    short	menu_id;	    \/\/ the menu id to which this item belongs$/;"	m	struct:VimMenu
menu_is_active	gui.h	/^    char	menu_is_active;	    \/\/ TRUE if menu is present$/;"	m	struct:Gui
menu_is_child_of_popup	menu.c	/^menu_is_child_of_popup(vimmenu_T *menu)$/;"	f
menu_is_hidden	menu.c	/^menu_is_hidden(char_u *name)$/;"	f	file:
menu_is_menubar	menu.c	/^menu_is_menubar(char_u *name)$/;"	f
menu_is_popup	menu.c	/^menu_is_popup(char_u *name)$/;"	f
menu_is_separator	menu.c	/^menu_is_separator(char_u *name)$/;"	f
menu_is_tearoff	menu.c	/^menu_is_tearoff(char_u *name UNUSED)$/;"	f	file:
menu_is_toolbar	menu.c	/^menu_is_toolbar(char_u *name)$/;"	f
menu_is_winbar	menu.c	/^menu_is_winbar(char_u *name)$/;"	f	file:
menu_item_activate	gui_gtk.c	/^menu_item_activate(GtkWidget *widget UNUSED, gpointer data)$/;"	f	file:
menu_item_new	gui_gtk.c	/^menu_item_new(vimmenu_T *menu, GtkWidget *parent_widget)$/;"	f	file:
menu_mode_chars	menu.c	/^static char *menu_mode_chars[] = {"n", "v", "s", "o", "i", "c", "tl", "t"};$/;"	v	file:
menu_nable_recurse	menu.c	/^menu_nable_recurse($/;"	f	file:
menu_name_equal	menu.c	/^menu_name_equal(char_u *name, vimmenu_T *menu)$/;"	f	file:
menu_name_skip	menu.c	/^menu_name_skip(char_u *name)$/;"	f	file:
menu_namecmp	menu.c	/^menu_namecmp(char_u *name, char_u *mname)$/;"	f	file:
menu_skip_part	menu.c	/^menu_skip_part(char_u *p)$/;"	f	file:
menu_stock_ids	gui_gtk.c	/^static const char * const menu_stock_ids[] =$/;"	v	file:
menu_text	menu.c	/^menu_text(char_u *str, int *mnemonic, char_u **actext)$/;"	f	file:
menu_themed_names	gui_gtk.c	/^static const char * const menu_themed_names[] =$/;"	v	file:
menu_title_removing_mnemonic	gui_mac.c	/^menu_title_removing_mnemonic(vimmenu_T *menu)$/;"	f	file:
menu_translate_tab_and_shift	menu.c	/^menu_translate_tab_and_shift(char_u *arg_start)$/;"	f	file:
menu_unescape_name	menu.c	/^menu_unescape_name(char_u *name)$/;"	f	file:
menu_width	gui.h	/^    int		menu_width;	    \/\/ Width of the menu bar$/;"	m	struct:Gui
menubar	gui.h	/^    GtkWidget	*menubar;	    \/\/ menubar$/;"	m	struct:Gui
menubar_h	gui.h	/^    GtkWidget	*menubar_h;	    \/\/ menubar handle$/;"	m	struct:Gui
menutrans_T	menu.c	/^} menutrans_T;$/;"	t	typeref:struct:__anon71	file:
menutrans_ga	menu.c	/^static garray_T menutrans_ga = {0, 0, 0, 0, NULL};$/;"	v	file:
menutrans_lookup	menu.c	/^menutrans_lookup(char_u *name, int len)$/;"	f	file:
merge_history	viminfo.c	/^merge_history(int type)$/;"	f	file:
merge_modifyOtherKeys	getchar.c	/^merge_modifyOtherKeys(int c_arg)$/;"	f
messageFromServerGtk2	channel.c	/^messageFromServerGtk2(gpointer clientData,$/;"	f	file:
messageFromServerGtk3	channel.c	/^messageFromServerGtk3(GIOChannel *unused1 UNUSED,$/;"	f	file:
messageFromServerX11	channel.c	/^messageFromServerX11(XtPointer clientData,$/;"	f	file:
message_filtered	message.c	/^message_filtered(char_u *msg)$/;"	f
message_window	os_mswin.c	/^HWND message_window = 0;	    \/\/ window that's handling messages$/;"	v
messages	structs.h	/^    struct msglist	*messages;	\/\/ message(s) causing error exception$/;"	m	struct:vim_exception	typeref:struct:vim_exception::msglist
messaging	screen.c	/^messaging(void)$/;"	f
method_nr	structs.h	/^    int	    method_nr;$/;"	m	struct:__anon236
method_state	structs.h	/^    void    *method_state;  \/\/ method-specific state information$/;"	m	struct:__anon236
mf_alloc_bhdr	memfile.c	/^mf_alloc_bhdr(memfile_T *mfp, int page_count)$/;"	f	file:
mf_blocknr_max	structs.h	/^    blocknr_T	mf_blocknr_max;		\/\/ highest positive block number + 1$/;"	m	struct:memfile
mf_blocknr_min	structs.h	/^    blocknr_T	mf_blocknr_min;		\/\/ lowest negative block number - 1$/;"	m	struct:memfile
mf_buffer	structs.h	/^    buf_T	*mf_buffer;		\/\/ buffer this memfile is for$/;"	m	struct:memfile
mf_close	memfile.c	/^mf_close(memfile_T *mfp, int del_file)$/;"	f
mf_close_file	memfile.c	/^mf_close_file($/;"	f
mf_dirty	structs.h	/^    int		mf_dirty;		\/\/ TRUE if there are dirty blocks$/;"	m	struct:memfile
mf_do_open	memfile.c	/^mf_do_open($/;"	f	file:
mf_dont_release	globals.h	/^EXTERN int	mf_dont_release INIT(= FALSE);	\/\/ don't release blocks$/;"	v
mf_fd	structs.h	/^    int		mf_fd;			\/\/ file descriptor$/;"	m	struct:memfile
mf_ffname	structs.h	/^    char_u	*mf_ffname;		\/\/ idem, full path$/;"	m	struct:memfile
mf_find_hash	memfile.c	/^mf_find_hash(memfile_T *mfp, blocknr_T nr)$/;"	f	file:
mf_flags	structs.h	/^    int		mf_flags;		\/\/ flags used when opening this memfile$/;"	m	struct:memfile
mf_fname	structs.h	/^    char_u	*mf_fname;		\/\/ name of the file$/;"	m	struct:memfile
mf_free	memfile.c	/^mf_free(memfile_T *mfp, bhdr_T *hp)$/;"	f
mf_free_bhdr	memfile.c	/^mf_free_bhdr(bhdr_T *hp)$/;"	f	file:
mf_free_first	structs.h	/^    bhdr_T	*mf_free_first;		\/\/ first block_hdr in free list$/;"	m	struct:memfile
mf_fullname	memfile.c	/^mf_fullname(memfile_T *mfp)$/;"	f
mf_get	memfile.c	/^mf_get(memfile_T *mfp, blocknr_T nr, int page_count)$/;"	f
mf_hash	structs.h	/^    mf_hashtab_T mf_hash;		\/\/ hash lists$/;"	m	struct:memfile
mf_hash_add_item	memfile.c	/^mf_hash_add_item(mf_hashtab_T *mht, mf_hashitem_T *mhi)$/;"	f	file:
mf_hash_find	memfile.c	/^mf_hash_find(mf_hashtab_T *mht, blocknr_T key)$/;"	f	file:
mf_hash_free	memfile.c	/^mf_hash_free(mf_hashtab_T *mht)$/;"	f	file:
mf_hash_free_all	memfile.c	/^mf_hash_free_all(mf_hashtab_T *mht)$/;"	f	file:
mf_hash_grow	memfile.c	/^mf_hash_grow(mf_hashtab_T *mht)$/;"	f	file:
mf_hash_init	memfile.c	/^mf_hash_init(mf_hashtab_T *mht)$/;"	f	file:
mf_hash_rem_item	memfile.c	/^mf_hash_rem_item(mf_hashtab_T *mht, mf_hashitem_T *mhi)$/;"	f	file:
mf_hashitem_S	structs.h	/^struct mf_hashitem_S$/;"	s
mf_hashitem_T	structs.h	/^typedef struct mf_hashitem_S mf_hashitem_T;$/;"	t	typeref:struct:mf_hashitem_S
mf_hashtab_S	structs.h	/^typedef struct mf_hashtab_S$/;"	s
mf_hashtab_T	structs.h	/^} mf_hashtab_T;$/;"	t	typeref:struct:mf_hashtab_S
mf_infile_count	structs.h	/^    blocknr_T	mf_infile_count;	\/\/ number of pages in the file$/;"	m	struct:memfile
mf_ins_free	memfile.c	/^mf_ins_free(memfile_T *mfp, bhdr_T *hp)$/;"	f	file:
mf_ins_hash	memfile.c	/^mf_ins_hash(memfile_T *mfp, bhdr_T *hp)$/;"	f	file:
mf_ins_used	memfile.c	/^mf_ins_used(memfile_T *mfp, bhdr_T *hp)$/;"	f	file:
mf_need_trans	memfile.c	/^mf_need_trans(memfile_T *mfp)$/;"	f
mf_neg_count	structs.h	/^    blocknr_T	mf_neg_count;		\/\/ number of negative blocks numbers$/;"	m	struct:memfile
mf_new	memfile.c	/^mf_new(memfile_T *mfp, int negative, int page_count)$/;"	f
mf_new_page_size	memfile.c	/^mf_new_page_size(memfile_T *mfp, unsigned new_size)$/;"	f
mf_old_cm	structs.h	/^    int		mf_old_cm;$/;"	m	struct:memfile
mf_old_key	structs.h	/^    char_u	*mf_old_key;$/;"	m	struct:memfile
mf_old_seed	structs.h	/^    char_u	mf_old_seed[MF_SEED_LEN];$/;"	m	struct:memfile
mf_open	memfile.c	/^mf_open(char_u *fname, int flags)$/;"	f
mf_open_file	memfile.c	/^mf_open_file(memfile_T *mfp, char_u *fname)$/;"	f
mf_page_size	structs.h	/^    unsigned	mf_page_size;		\/\/ number of bytes in a page$/;"	m	struct:memfile
mf_put	memfile.c	/^mf_put($/;"	f
mf_read	memfile.c	/^mf_read(memfile_T *mfp, bhdr_T *hp)$/;"	f	file:
mf_release	memfile.c	/^mf_release(memfile_T *mfp, int page_count)$/;"	f	file:
mf_release_all	memfile.c	/^mf_release_all(void)$/;"	f
mf_rem_free	memfile.c	/^mf_rem_free(memfile_T *mfp)$/;"	f	file:
mf_rem_hash	memfile.c	/^mf_rem_hash(memfile_T *mfp, bhdr_T *hp)$/;"	f	file:
mf_rem_used	memfile.c	/^mf_rem_used(memfile_T *mfp, bhdr_T *hp)$/;"	f	file:
mf_reopen	structs.h	/^    int		mf_reopen;		\/\/ mf_fd was closed, retry opening$/;"	m	struct:memfile
mf_seed	structs.h	/^    char_u	mf_seed[MF_SEED_LEN];	\/\/ seed for encryption$/;"	m	struct:memfile
mf_set_dirty	memfile.c	/^mf_set_dirty(memfile_T *mfp)$/;"	f
mf_set_ffname	memfile.c	/^mf_set_ffname(memfile_T *mfp)$/;"	f
mf_sync	memfile.c	/^mf_sync(memfile_T *mfp, int flags)$/;"	f
mf_trans	structs.h	/^    mf_hashtab_T mf_trans;		\/\/ trans lists$/;"	m	struct:memfile
mf_trans_add	memfile.c	/^mf_trans_add(memfile_T *mfp, bhdr_T *hp)$/;"	f	file:
mf_trans_del	memfile.c	/^mf_trans_del(memfile_T *mfp, blocknr_T old_nr)$/;"	f
mf_used_count	structs.h	/^    unsigned	mf_used_count;		\/\/ number of pages in used list$/;"	m	struct:memfile
mf_used_count_max	structs.h	/^    unsigned	mf_used_count_max;	\/\/ maximum number of pages in memory$/;"	m	struct:memfile
mf_used_first	structs.h	/^    bhdr_T	*mf_used_first;		\/\/ mru block_hdr in used list$/;"	m	struct:memfile
mf_used_last	structs.h	/^    bhdr_T	*mf_used_last;		\/\/ lru block_hdr in used list$/;"	m	struct:memfile
mf_write	memfile.c	/^mf_write(memfile_T *mfp, bhdr_T *hp)$/;"	f	file:
mf_write_block	memfile.c	/^mf_write_block($/;"	f	file:
mhi_key	structs.h	/^    blocknr_T	    mhi_key;$/;"	m	struct:mf_hashitem_S
mhi_next	structs.h	/^    mf_hashitem_T   *mhi_next;$/;"	m	struct:mf_hashitem_S
mhi_prev	structs.h	/^    mf_hashitem_T   *mhi_prev;$/;"	m	struct:mf_hashitem_S
mht_buckets	structs.h	/^    mf_hashitem_T   **mht_buckets;  \/\/ points to mht_small_buckets or$/;"	m	struct:mf_hashtab_S
mht_count	structs.h	/^    long_u	    mht_count;	    \/\/ nr of items inserted into hashtable$/;"	m	struct:mf_hashtab_S
mht_fixed	structs.h	/^    char	    mht_fixed;	    \/\/ non-zero value forbids growth$/;"	m	struct:mf_hashtab_S
mht_mask	structs.h	/^    long_u	    mht_mask;	    \/\/ mask used for hash value (nr of items$/;"	m	struct:mf_hashtab_S
mht_small_buckets	structs.h	/^    mf_hashitem_T   *mht_small_buckets[MHT_INIT_SIZE];   \/\/ initial buckets$/;"	m	struct:mf_hashtab_S
mi_capflags	spell.c	/^    int		mi_capflags;		\/\/ WF_ONECAP WF_ALLCAP WF_KEEPCAP$/;"	m	struct:matchinf_S	file:
mi_cend	spell.c	/^    char_u	*mi_cend;		\/\/ char after what was used for$/;"	m	struct:matchinf_S	file:
mi_compextra	spell.c	/^    int		mi_compextra;		\/\/ nr of COMPOUNDROOT words$/;"	m	struct:matchinf_S	file:
mi_compflags	spell.c	/^    char_u	mi_compflags[MAXWLEN];	\/\/ flags for compound words used$/;"	m	struct:matchinf_S	file:
mi_complen	spell.c	/^    int		mi_complen;		\/\/ nr of compound words used$/;"	m	struct:matchinf_S	file:
mi_compoff	spell.c	/^    int		mi_compoff;		\/\/ start of following word offset$/;"	m	struct:matchinf_S	file:
mi_cprefixlen	spell.c	/^    int		mi_cprefixlen;		\/\/ byte length of prefix in original$/;"	m	struct:matchinf_S	file:
mi_end	spell.c	/^    char_u	*mi_end;		\/\/ end of matching word so far$/;"	m	struct:matchinf_S	file:
mi_end2	spell.c	/^    char_u	*mi_end2;		\/\/ "mi_end" without following word$/;"	m	struct:matchinf_S	file:
mi_fend	spell.c	/^    char_u	*mi_fend;		\/\/ next char to be added to mi_fword$/;"	m	struct:matchinf_S	file:
mi_fword	spell.c	/^    char_u	mi_fword[MAXWLEN + 1];	\/\/ mi_word case-folded$/;"	m	struct:matchinf_S	file:
mi_fwordlen	spell.c	/^    int		mi_fwordlen;		\/\/ nr of valid bytes in mi_fword$/;"	m	struct:matchinf_S	file:
mi_lp	spell.c	/^    langp_T	*mi_lp;			\/\/ info for language and region$/;"	m	struct:matchinf_S	file:
mi_prefarridx	spell.c	/^    int		mi_prefarridx;		\/\/ index in sl_pidxs with list of$/;"	m	struct:matchinf_S	file:
mi_prefcnt	spell.c	/^    int		mi_prefcnt;		\/\/ number of entries at mi_prefarridx$/;"	m	struct:matchinf_S	file:
mi_prefixlen	spell.c	/^    int		mi_prefixlen;		\/\/ byte length of prefix$/;"	m	struct:matchinf_S	file:
mi_result	spell.c	/^    int		mi_result;		\/\/ result so far: SP_BAD, SP_OK, etc.$/;"	m	struct:matchinf_S	file:
mi_result2	spell.c	/^    int		mi_result2;		\/\/ "mi_resul" without following word$/;"	m	struct:matchinf_S	file:
mi_win	spell.c	/^    win_T	*mi_win;		\/\/ buffer being checked$/;"	m	struct:matchinf_S	file:
mi_word	spell.c	/^    char_u	*mi_word;		\/\/ start of word being checked$/;"	m	struct:matchinf_S	file:
min_col	vim.h	/^    short_u	min_col;$/;"	m	struct:__anon279
min_row	vim.h	/^    short_u	min_row;$/;"	m	struct:__anon279
min_rows	window.c	/^min_rows(void)$/;"	f
min_thumb	gui_at_sb.h	/^    Dimension	  min_thumb;	\/\/ minimum size for the thumb.$/;"	m	struct:__anon143
mina	if_mzsch.c	/^    int		mina;	\/\/ arity information$/;"	m	struct:__anon54	file:
minfo_T	structs.h	/^typedef struct m_info minfo_T;$/;"	t	typeref:struct:m_info
minlen	ex_docmd.c	/^    int		minlen;$/;"	m	struct:cmdmod	file:
minval	regexp_bt.c	/^    long	minval;$/;"	m	struct:regstar_S	file:
mkdir_recurse	filepath.c	/^mkdir_recurse(char_u *dir, int prot)$/;"	f	file:
mksession_nl	session.c	/^static int mksession_nl = FALSE;    \/\/ use NL only in put_eol()$/;"	v	file:
mkspell	spellfile.c	/^mkspell($/;"	f
ml_add_stack	memline.c	/^ml_add_stack(buf_T *buf)$/;"	f	file:
ml_append	memline.c	/^ml_append($/;"	f
ml_append_buf	memline.c	/^ml_append_buf($/;"	f
ml_append_flush	memline.c	/^ml_append_flush($/;"	f	file:
ml_append_int	memline.c	/^ml_append_int($/;"	f	file:
ml_check_b0_id	memline.c	/^ml_check_b0_id(ZERO_BL *b0p)$/;"	f	file:
ml_chunksize	structs.h	/^    chunksize_T *ml_chunksize;$/;"	m	struct:memline
ml_chunksize	structs.h	/^typedef struct ml_chunksize$/;"	s
ml_clearmarked	memline.c	/^ml_clearmarked(void)$/;"	f
ml_close	memline.c	/^ml_close(buf_T *buf, int del_file)$/;"	f
ml_close_all	memline.c	/^ml_close_all(int del_file)$/;"	f
ml_close_notmod	memline.c	/^ml_close_notmod(void)$/;"	f
ml_crypt_prepare	memline.c	/^ml_crypt_prepare(memfile_T *mfp, off_T offset, int reading)$/;"	f	file:
ml_decrypt_data	memline.c	/^ml_decrypt_data($/;"	f
ml_delete	memline.c	/^ml_delete(linenr_T lnum, int message)$/;"	f
ml_delete_int	memline.c	/^ml_delete_int(buf_T *buf, linenr_T lnum, int message)$/;"	f	file:
ml_encrypt_data	memline.c	/^ml_encrypt_data($/;"	f
ml_find_line	memline.c	/^ml_find_line(buf_T *buf, linenr_T lnum, int action)$/;"	f	file:
ml_find_line_or_offset	memline.c	/^ml_find_line_or_offset(buf_T *buf, linenr_T lnum, long *offp)$/;"	f
ml_firstmarked	memline.c	/^ml_firstmarked(void)$/;"	f
ml_flags	structs.h	/^    int		ml_flags;$/;"	m	struct:memline
ml_flush_line	memline.c	/^ml_flush_line(buf_T *buf)$/;"	f	file:
ml_get	memline.c	/^ml_get(linenr_T lnum)$/;"	f
ml_get_buf	memline.c	/^ml_get_buf($/;"	f
ml_get_curline	memline.c	/^ml_get_curline(void)$/;"	f
ml_get_cursor	memline.c	/^ml_get_cursor(void)$/;"	f
ml_get_pos	memline.c	/^ml_get_pos(pos_T *pos)$/;"	f
ml_line_alloced	memline.c	/^ml_line_alloced(void)$/;"	f
ml_line_count	structs.h	/^    linenr_T	ml_line_count;	\/\/ number of lines in the buffer$/;"	m	struct:memline
ml_line_len	structs.h	/^    colnr_T	ml_line_len;	\/\/ length of the cached line, including NUL$/;"	m	struct:memline
ml_line_lnum	structs.h	/^    linenr_T	ml_line_lnum;	\/\/ line number of cached line, 0 if not valid$/;"	m	struct:memline
ml_line_ptr	structs.h	/^    char_u	*ml_line_ptr;	\/\/ pointer to cached line$/;"	m	struct:memline
ml_lineadd	memline.c	/^ml_lineadd(buf_T *buf, int count)$/;"	f	file:
ml_locked	structs.h	/^    bhdr_T	*ml_locked;	\/\/ block used by last ml_get$/;"	m	struct:memline
ml_locked_high	structs.h	/^    linenr_T	ml_locked_high;	\/\/ last line in ml_locked$/;"	m	struct:memline
ml_locked_lineadd	structs.h	/^    int		ml_locked_lineadd;  \/\/ number of lines inserted in ml_locked$/;"	m	struct:memline
ml_locked_low	structs.h	/^    linenr_T	ml_locked_low;	\/\/ first line in ml_locked$/;"	m	struct:memline
ml_mfp	structs.h	/^    memfile_T	*ml_mfp;	\/\/ pointer to associated memfile$/;"	m	struct:memline
ml_new_data	memline.c	/^ml_new_data(memfile_T *mfp, int negative, int page_count)$/;"	f	file:
ml_new_ptr	memline.c	/^ml_new_ptr(memfile_T *mfp)$/;"	f	file:
ml_numchunks	structs.h	/^    int		ml_numchunks;$/;"	m	struct:memline
ml_open	memline.c	/^ml_open(buf_T *buf)$/;"	f
ml_open_file	memline.c	/^ml_open_file(buf_T *buf)$/;"	f
ml_open_files	memline.c	/^ml_open_files(void)$/;"	f
ml_preserve	memline.c	/^ml_preserve(buf_T *buf, int message)$/;"	f
ml_recover	memline.c	/^ml_recover(int checkext)$/;"	f
ml_replace	memline.c	/^ml_replace(linenr_T lnum, char_u *line, int copy)$/;"	f
ml_replace_len	memline.c	/^ml_replace_len($/;"	f
ml_set_b0_crypt	memline.c	/^ml_set_b0_crypt(buf_T *buf, ZERO_BL *b0p)$/;"	f	file:
ml_set_crypt_key	memline.c	/^ml_set_crypt_key($/;"	f
ml_set_mfp_crypt	memline.c	/^ml_set_mfp_crypt(buf_T *buf)$/;"	f	file:
ml_setflags	memline.c	/^ml_setflags(buf_T *buf)$/;"	f
ml_setmarked	memline.c	/^ml_setmarked(linenr_T lnum)$/;"	f
ml_setname	memline.c	/^ml_setname(buf_T *buf)$/;"	f
ml_stack	structs.h	/^    infoptr_T	*ml_stack;	\/\/ stack of pointer blocks (array of IPTRs)$/;"	m	struct:memline
ml_stack_size	structs.h	/^    int		ml_stack_size;	\/\/ total number of entries in ml_stack$/;"	m	struct:memline
ml_stack_top	structs.h	/^    int		ml_stack_top;	\/\/ current top of ml_stack$/;"	m	struct:memline
ml_sync_all	memline.c	/^ml_sync_all(int check_file, int check_char)$/;"	f
ml_timestamp	memline.c	/^ml_timestamp(buf_T *buf)$/;"	f
ml_upd_block0	memline.c	/^ml_upd_block0(buf_T *buf, upd_block0_T what)$/;"	f	file:
ml_updatechunk	memline.c	/^ml_updatechunk($/;"	f	file:
ml_usedchunks	structs.h	/^    int		ml_usedchunks;$/;"	m	struct:memline
mlcs_numlines	structs.h	/^    int		mlcs_numlines;$/;"	m	struct:ml_chunksize
mlcs_totalsize	structs.h	/^    long	mlcs_totalsize;$/;"	m	struct:ml_chunksize
mnemonic	structs.h	/^    int		mnemonic;	    \/\/ mnemonic key (after '&')$/;"	m	struct:VimMenu
mnemonic_event	gui_motif.c	/^mnemonic_event(Widget w, XtPointer call_data UNUSED, XKeyEvent *event)$/;"	f	file:
mod_flag	misc2.c	/^    short	mod_flag;	\/\/ Bit(s) for particular key modifier$/;"	m	struct:modmasktable	file:
mod_mask	globals.h	/^EXTERN int	mod_mask INIT(= 0x0);		\/\/ current key modifiers$/;"	v
mod_mask	misc2.c	/^    short	mod_mask;	\/\/ Bit-mask for particular key modifier$/;"	m	struct:modmasktable	file:
mod_mask_table	misc2.c	/^} mod_mask_table[] =$/;"	v	typeref:struct:modmasktable	file:
mode	map.c	/^    int		mode;$/;"	m	struct:initmap	file:
mode	vim.h	/^    short_u	mode;		\/\/ Select by char, word, or line.$/;"	m	struct:__anon279
mode_displayed	globals.h	/^EXTERN int	mode_displayed INIT(= FALSE);	\/\/ mode is being displayed$/;"	v
mode_str2flags	map.c	/^mode_str2flags(char_u *modechars)$/;"	f
modec	structs.h	/^    int		modec;$/;"	m	struct:__anon247
modes	structs.h	/^    int		modes;		    \/\/ Which modes is this menu visible for?$/;"	m	struct:VimMenu
modified	netbeans.c	/^    unsigned int	 modified:1;$/;"	m	struct:nbbuf_struct	file:
modified_was_set	globals.h	/^EXTERN int	modified_was_set;		\/\/ did ":set modified"$/;"	v
modifier_keys_table	misc2.c	/^static char_u modifier_keys_table[] =$/;"	v	file:
modifier_len	ex_docmd.c	/^modifier_len(char_u *cmd)$/;"	f
modifiers2keycode	term.c	/^modifiers2keycode(int modifiers, int *key, char_u *string)$/;"	f	file:
modifiers_gdk2mouse	gui_gtk_x11.c	/^modifiers_gdk2mouse(guint state)$/;"	f	file:
modifiers_gdk2vim	gui_gtk_x11.c	/^modifiers_gdk2vim(guint state)$/;"	f	file:
modify_fname	filepath.c	/^modify_fname($/;"	f
modlen	term.c	/^    int	    modlen;	    \/\/ length of part before ";*~".$/;"	m	struct:termcode	file:
modmasktable	misc2.c	/^static struct modmasktable$/;"	s	file:
modname	fileio.c	/^modname($/;"	f
module	quickfix.c	/^    char_u	*module;$/;"	m	struct:__anon90	file:
moreenv	misc2.c	/^moreenv(void)$/;"	f	file:
mostly_ignore	os_beos.c	/^mostly_ignore(int sig)$/;"	f	file:
motif_get_toolbar_colors	gui_motif.c	/^motif_get_toolbar_colors($/;"	f
motif_tabline_timer_cb	gui_motif.c	/^motif_tabline_timer_cb ($/;"	f	file:
motion_force	globals.h	/^EXTERN int	motion_force INIT(= 0); \/\/ motion force for pending operator$/;"	v
motion_force	structs.h	/^    int		motion_force;	\/\/ force motion type: 'v', 'V' or CTRL-V$/;"	m	struct:oparg_S
motion_notify_event	gui_gtk_x11.c	/^motion_notify_event(GtkWidget *widget,$/;"	f	file:
motion_repeat_offset	gui_gtk_x11.c	/^static int		motion_repeat_offset = FALSE;$/;"	v	file:
motion_repeat_timer	gui_gtk_x11.c	/^static guint		motion_repeat_timer  = 0;$/;"	v	file:
motion_repeat_timer_cb	gui_gtk_x11.c	/^motion_repeat_timer_cb(gpointer data UNUSED)$/;"	f	file:
motion_type	structs.h	/^    int		motion_type;	\/\/ type of the current cursor motion$/;"	m	struct:oparg_S
mouseWheelHandlerUPP	gui_mac.c	/^static EventHandlerUPP mouseWheelHandlerUPP = NULL;$/;"	v	file:
mouse_choice	dosinst.c	/^int	mouse_choice = (int)mouse_default;$/;"	v
mouse_choices	dosinst.c	/^char	*(mouse_choices[]) =$/;"	v
mouse_click_timer	gui_gtk_x11.c	/^static guint mouse_click_timer = 0;$/;"	v	file:
mouse_click_timer_cb	gui_gtk_x11.c	/^mouse_click_timer_cb(gpointer data)$/;"	f	file:
mouse_col	globals.h	/^EXTERN int	mouse_col;$/;"	v
mouse_comp_pos	mouse.c	/^mouse_comp_pos($/;"	f
mouse_default	dosinst.c	/^    mouse_default$/;"	e	enum:__anon15	file:
mouse_dragging	globals.h	/^EXTERN int	mouse_dragging INIT(= 0);	\/\/ extending Visual area with$/;"	v
mouse_find_T	structs.h	/^} mouse_find_T;$/;"	t	typeref:enum:__anon257
mouse_find_win	mouse.c	/^mouse_find_win(int *rowp, int *colp, mouse_find_T popup UNUSED)$/;"	f
mouse_has	mouse.c	/^mouse_has(int c)$/;"	f
mouse_ison	os_unix.c	/^static int	mouse_ison = FALSE;$/;"	v	file:
mouse_model_popup	mouse.c	/^mouse_model_popup(void)$/;"	f
mouse_mswin	dosinst.c	/^    mouse_mswin,$/;"	e	enum:__anon15	file:
mouse_past_bottom	globals.h	/^EXTERN int	mouse_past_bottom INIT(= FALSE);\/\/ mouse below last line$/;"	v
mouse_past_eol	globals.h	/^EXTERN int	mouse_past_eol INIT(= FALSE);	\/\/ mouse right of line$/;"	v
mouse_row	globals.h	/^EXTERN int	mouse_row;$/;"	v
mouse_scroll_lines	gui_w32.c	/^static int mouse_scroll_lines = 0;$/;"	v	file:
mouse_table	mouse.c	/^} mouse_table[] =$/;"	v	typeref:struct:mousetable	file:
mouse_text	dosinst.c	/^char	*mouse_text = "- The mouse %s";$/;"	v
mouse_timed_out	gui_gtk_x11.c	/^static int mouse_timed_out = TRUE;$/;"	v	file:
mouse_was_outside	terminal.c	/^static int	mouse_was_outside = FALSE;$/;"	v	file:
mouse_xterm	dosinst.c	/^    mouse_xterm = 1,$/;"	e	enum:__anon15	file:
mousetable	mouse.c	/^static struct mousetable$/;"	s	file:
move_lines	fileio.c	/^move_lines(buf_T *frombuf, buf_T *tobuf)$/;"	f	file:
movechangelist	mark.c	/^movechangelist(int count)$/;"	f
movemark	mark.c	/^movemark(int count)$/;"	f
mparm_T	structs.h	/^} mparm_T;$/;"	t	typeref:struct:__anon252
mr_pattern	search.c	/^static char_u	    *mr_pattern = NULL;	\/\/ pattern used by search_regcomp()$/;"	v	file:
mr_pattern_alloced	search.c	/^static int	    mr_pattern_alloced = FALSE; \/\/ mr_pattern was allocated$/;"	v	file:
msg	beval.h	/^    char_u		*msg;		\/\/ allocated: current text$/;"	m	struct:BalloonEvalStruct
msg	message.c	/^    char_u		*msg;$/;"	m	struct:msg_hist	file:
msg	message.c	/^msg(char *s)$/;"	f
msg	structs.h	/^    char		*msg;		\/\/ original message$/;"	m	struct:msglist
msgCB	beval.h	/^    void		(*msgCB)(struct BalloonEvalStruct *, int);$/;"	m	struct:BalloonEvalStruct
msg_add_eol	fileio.c	/^msg_add_eol(void)$/;"	f
msg_add_fileformat	fileio.c	/^msg_add_fileformat(int eol_type)$/;"	f
msg_add_fname	fileio.c	/^msg_add_fname(buf_T *buf, char_u *fname)$/;"	f
msg_add_lines	fileio.c	/^msg_add_lines($/;"	f
msg_advance	message.c	/^msg_advance(int col)$/;"	f
msg_attr	message.c	/^msg_attr(char *s, int attr)$/;"	f
msg_attr_keep	message.c	/^msg_attr_keep($/;"	f
msg_buf	globals.h	/^EXTERN char	msg_buf[MSG_BUF_LEN];	\/\/ small buffer for messages$/;"	v
msg_check	message.c	/^msg_check(void)$/;"	f
msg_check_screen	message.c	/^msg_check_screen(void)$/;"	f	file:
msg_clr_cmdline	message.c	/^msg_clr_cmdline(void)$/;"	f
msg_clr_eos	message.c	/^msg_clr_eos(void)$/;"	f
msg_clr_eos_force	message.c	/^msg_clr_eos_force(void)$/;"	f
msg_col	globals.h	/^EXTERN int	msg_col;$/;"	v
msg_compressing	spellfile.c	/^static char *msg_compressing = N_("Compressing word tree...");$/;"	v	file:
msg_didany	globals.h	/^EXTERN int	msg_didany INIT(= FALSE);   \/\/ msg_outstr() was used at all$/;"	v
msg_didout	globals.h	/^EXTERN int	msg_didout INIT(= FALSE);   \/\/ msg_outstr() was used in line$/;"	v
msg_end	message.c	/^msg_end(void)$/;"	f
msg_end_prompt	message.c	/^msg_end_prompt(void)$/;"	f
msg_hist	message.c	/^struct msg_hist$/;"	s	file:
msg_hist_len	message.c	/^static int msg_hist_len = 0;$/;"	v	file:
msg_hist_off	globals.h	/^EXTERN int      msg_hist_off INIT(= FALSE); \/\/ don't add messages to history$/;"	v
msg_home_replace	message.c	/^msg_home_replace(char_u *fname)$/;"	f
msg_home_replace_attr	message.c	/^msg_home_replace_attr(char_u *fname, int attr)$/;"	f	file:
msg_home_replace_hl	message.c	/^msg_home_replace_hl(char_u *fname)$/;"	f
msg_list	globals.h	/^EXTERN struct msglist **msg_list INIT(= NULL);$/;"	v	typeref:struct:
msg_loclist	buffer.c	/^static char *msg_loclist = N_("[Location List]");$/;"	v	file:
msg_make	message.c	/^msg_make(char_u *arg)$/;"	f
msg_may_trunc	message.c	/^msg_may_trunc(int force, char_u *s)$/;"	f
msg_moremsg	message.c	/^msg_moremsg(int full)$/;"	f	file:
msg_no_items	syntax.c	/^static char msg_no_items[] = N_("No Syntax items defined for this buffer");$/;"	v	file:
msg_no_more	globals.h	/^EXTERN int	msg_no_more INIT(= FALSE);  \/\/ don't use more prompt, truncate$/;"	v
msg_nowait	globals.h	/^EXTERN int	msg_nowait INIT(= FALSE);   \/\/ don't wait for this msg$/;"	v
msg_outnum	message.c	/^msg_outnum(long n)$/;"	f
msg_outtrans	message.c	/^msg_outtrans(char_u *str)$/;"	f
msg_outtrans_attr	message.c	/^msg_outtrans_attr(char_u *str, int attr)$/;"	f
msg_outtrans_len	message.c	/^msg_outtrans_len(char_u *str, int len)$/;"	f
msg_outtrans_len_attr	message.c	/^msg_outtrans_len_attr(char_u *msgstr, int len, int attr)$/;"	f
msg_outtrans_long_attr	message.c	/^msg_outtrans_long_attr(char_u *longstr, int attr)$/;"	f
msg_outtrans_long_len_attr	message.c	/^msg_outtrans_long_len_attr(char_u *longstr, int len, int attr)$/;"	f	file:
msg_outtrans_one	message.c	/^msg_outtrans_one(char_u *p, int attr)$/;"	f
msg_outtrans_special	message.c	/^msg_outtrans_special($/;"	f
msg_pos_mode	screen.c	/^msg_pos_mode(void)$/;"	f	file:
msg_prt_line	message.c	/^msg_prt_line(char_u *s, int list)$/;"	f
msg_putchar	message.c	/^msg_putchar(int c)$/;"	f
msg_putchar_attr	message.c	/^msg_putchar_attr(int c, int attr)$/;"	f
msg_puts	message.c	/^msg_puts(char *s)$/;"	f
msg_puts_attr	message.c	/^msg_puts_attr(char *s, int attr)$/;"	f
msg_puts_attr_len	message.c	/^msg_puts_attr_len(char *str, int maxlen, int attr)$/;"	f	file:
msg_puts_display	message.c	/^msg_puts_display($/;"	f	file:
msg_puts_printf	message.c	/^msg_puts_printf(char_u *str, int maxlen)$/;"	f	file:
msg_puts_title	message.c	/^msg_puts_title(char *s)$/;"	f
msg_qflist	buffer.c	/^static char *msg_qflist = N_("[Quickfix List]");$/;"	v	file:
msg_row	globals.h	/^EXTERN int	msg_row;$/;"	v
msg_sb_eol	message.c	/^msg_sb_eol(void)$/;"	f
msg_sb_start	message.c	/^msg_sb_start(msgchunk_T *mps)$/;"	f	file:
msg_screen_putchar	message.c	/^msg_screen_putchar(int c, int attr)$/;"	f	file:
msg_scroll	globals.h	/^EXTERN int	msg_scroll INIT(= FALSE);   \/\/ msg_start() will scroll$/;"	v
msg_scroll_up	message.c	/^msg_scroll_up(void)$/;"	f	file:
msg_scrolled	globals.h	/^EXTERN int	msg_scrolled;	\/\/ Number of screen lines that windows have$/;"	v
msg_scrolled_ign	globals.h	/^EXTERN int	msg_scrolled_ign INIT(= FALSE);$/;"	v
msg_show_console_dialog	message.c	/^msg_show_console_dialog($/;"	f	file:
msg_silent	globals.h	/^EXTERN int	msg_silent INIT(= 0);	\/\/ don't print messages$/;"	v
msg_source	message.c	/^msg_source(int attr)$/;"	f
msg_start	message.c	/^msg_start(void)$/;"	f
msg_starthere	message.c	/^msg_starthere(void)$/;"	f
msg_strtrunc	message.c	/^msg_strtrunc($/;"	f
msg_trunc_attr	message.c	/^msg_trunc_attr(char *s, int force, int attr)$/;"	f
msg_use_printf	message.c	/^msg_use_printf(void)$/;"	f
msg_verbose_cmd	ex_docmd.c	/^msg_verbose_cmd(linenr_T lnum, char_u *cmd)$/;"	f	file:
msg_wait_for_multiple_objects	os_win32.c	/^msg_wait_for_multiple_objects($/;"	f	file:
msgchunk_S	message.c	/^struct msgchunk_S$/;"	s	file:
msgchunk_T	message.c	/^typedef struct msgchunk_S msgchunk_T;$/;"	t	typeref:struct:msgchunk_S	file:
msgfunc_T	if_lua.c	/^typedef void (*msgfunc_T)(char_u *);$/;"	t	file:
msglist	structs.h	/^struct msglist$/;"	s
msgmore	misc1.c	/^msgmore(long n)$/;"	f
mshape	structs.h	/^    int		mshape;		\/\/ one of the MSHAPE defines$/;"	m	struct:cursor_entry
mshape_idcs	gui_w32.c	/^static LPCSTR mshape_idcs[] =$/;"	v	file:
mshape_ids	gui_gtk_x11.c	/^static const int mshape_ids[] =$/;"	v	file:
mshape_ids	gui_photon.c	/^static int mshape_ids[] =$/;"	v	file:
mshape_ids	gui_x11.c	/^static int mshape_ids[] =$/;"	v	file:
mshape_names	misc2.c	/^static char * mshape_names[] =$/;"	v	file:
mt_names	tag.c	/^static char	*mt_names[MT_COUNT\/2] =$/;"	v	file:
mtime	gui_at_fs.c	/^    time_t	mtime;$/;"	m	struct:__anon32	file:
multi	regexp_nfa.c	/^	} multi[NSUBEXP];$/;"	m	union:__anon103::__anon104	typeref:struct:__anon103::__anon104::multipos	file:
multiline_balloon_available	gui_w32.c	/^multiline_balloon_available(void)$/;"	f
multipos	regexp_nfa.c	/^	struct multipos$/;"	s	union:__anon103::__anon104	file:
must_redraw	globals.h	/^EXTERN int	must_redraw INIT(= 0);	    \/\/ type of redraw necessary$/;"	v
myDataBrowserChangeAttributes	gui_mac.c	/^myDataBrowserChangeAttributes(ControlRef inDataBrowser,$/;"	f	file:
my_acl	os_win32.c	/^struct my_acl$/;"	s	file:
my_fullpath	dosinst.h	/^my_fullpath(char *buf, char *fname, int len)$/;"	f
my_iconv_open	mbyte.c	/^my_iconv_open(char_u *to, char_u *from)$/;"	f
myexit	dosinst.h	/^myexit(int n)$/;"	f
myresetstkoflw	os_win32.c	/^myresetstkoflw(void)$/;"	f
mytoupper	dosinst.h	/^mytoupper(int c)$/;"	f
mz_buffer_type	if_mzsch.c	/^static Scheme_Type mz_buffer_type;$/;"	v	file:
mz_fix_cursor	if_mzsch.c	/^mz_fix_cursor(int lo, int hi, int extra)$/;"	f	file:
mz_threads_allow	if_mzsch.c	/^static int mz_threads_allow = 0;$/;"	v	file:
mz_window_type	if_mzsch.c	/^static Scheme_Type mz_window_type;$/;"	v	file:
mzgc_imports	if_mzsch.c	/^static Thunk_Info mzgc_imports[] = {$/;"	v	file:
mzsch_imports	if_mzsch.c	/^static Thunk_Info mzsch_imports[] = {$/;"	v	file:
mzscheme_beep	if_mzsch.c	/^mzscheme_beep(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:
mzscheme_buffer_free	if_mzsch.c	/^mzscheme_buffer_free(buf_T *buf)$/;"	f
mzscheme_call_vim	evalfunc.c	/^mzscheme_call_vim(char_u *name, typval_T *args, typval_T *rettv)$/;"	f
mzscheme_enabled	if_mzsch.c	/^mzscheme_enabled(int verbose)$/;"	f
mzscheme_end	if_mzsch.c	/^mzscheme_end(void)$/;"	f
mzscheme_env_main	if_mzsch.c	/^mzscheme_env_main(Scheme_Env *env, int argc UNUSED, char **argv UNUSED)$/;"	f	file:
mzscheme_init	if_mzsch.c	/^mzscheme_init(void)$/;"	f	file:
mzscheme_main	if_mzsch.c	/^mzscheme_main(void)$/;"	f
mzscheme_open_buffer	if_mzsch.c	/^mzscheme_open_buffer(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
mzscheme_runtime_link_init	if_mzsch.c	/^mzscheme_runtime_link_init(char *sch_dll, char *gc_dll, int verbose)$/;"	f	file:
mzscheme_to_vim	if_mzsch.c	/^mzscheme_to_vim(Scheme_Object *obj, typval_T *tv)$/;"	f	file:
mzscheme_to_vim_impl	if_mzsch.c	/^mzscheme_to_vim_impl(Scheme_Object *obj, typval_T *tv, int depth,$/;"	f	file:
mzscheme_window_free	if_mzsch.c	/^mzscheme_window_free(win_T *win)$/;"	f
mzshort	if_mzsch.c	/^typedef int mzshort;$/;"	t	file:
mzthreads_allowed	if_mzsch.c	/^mzthreads_allowed(void)$/;"	f
mzvim_check_threads	if_mzsch.c	/^mzvim_check_threads(void)$/;"	f
mzvim_reset_timer	if_mzsch.c	/^mzvim_reset_timer(void)$/;"	f
n	regexp_nfa.c	/^    int		    n;		\/\/ nr of states currently in "t"$/;"	m	struct:__anon108	file:
nArgsW	os_win32.c	/^static int	nArgsW = 0;$/;"	v	file:
nChars	gui_at_fs.c	/^    int		nChars;$/;"	m	struct:__anon32	file:
nCopyAnsiToWideChar	gui_w32.c	/^nCopyAnsiToWideChar($/;"	f	file:
nEntries	gui_at_fs.c	/^    int		nEntries;$/;"	m	struct:__anon32	file:
nIndexHigh	if_cscope.h	/^    DWORD	    nIndexHigh;	\/\/ st_ino has no meaning in the Windows$/;"	m	struct:csi
nIndexLow	if_cscope.h	/^    DWORD	    nIndexLow;$/;"	m	struct:csi
nVolume	if_cscope.h	/^    DWORD	    nVolume;	\/\/ Volume serial number, instead of st_dev$/;"	m	struct:csi
n_collated_copies	structs.h	/^    int		n_collated_copies;$/;"	m	struct:__anon247
n_commands	structs.h	/^    int		n_commands;		     \/\/ no. of commands from + or -c$/;"	m	struct:__anon252
n_opencmd	normal.c	/^n_opencmd(cmdarg_T *cap)$/;"	f	file:
n_pre_commands	structs.h	/^    int		n_pre_commands;		     \/\/ no. of commands from --cmd$/;"	m	struct:__anon252
n_start_visual_mode	normal.c	/^n_start_visual_mode(int c)$/;"	f	file:
n_swapchar	normal.c	/^n_swapchar(cmdarg_T *cap)$/;"	f	file:
n_uncollated_copies	structs.h	/^    int		n_uncollated_copies;$/;"	m	struct:__anon247
n_virguilla	regexp_nfa.c	742;"	d	file:
name	autocmd.c	/^    char	*name;	\/\/ event name$/;"	m	struct:event_name	file:
name	crypt.c	/^    char    *name;	\/\/ encryption name as used in 'cryptmethod'$/;"	m	struct:__anon7	file:
name	dosinst.h	/^    char	*name;		\/\/ Vim exe name (without .exe)$/;"	m	struct:__anon141
name	ex_docmd.c	/^    char	*name;$/;"	m	struct:cmdmod	file:
name	gui_at_fs.c	/^    char	*name;$/;"	m	struct:__anon33	file:
name	gui_gtk_x11.c	/^    const char	    *name;$/;"	m	struct:__anon37	file:
name	gui_xmdlg.c	/^    Widget	name;$/;"	m	struct:_SharedFontSelData	file:
name	hardcopy.c	/^    char	*name;$/;"	m	struct:prt_mediasize_S	file:
name	hardcopy.c	/^    char_u  name[64];$/;"	m	struct:prt_ps_resource_S	file:
name	if_cscope.h	/^    char *  name;$/;"	m	struct:__anon147
name	if_lua.c	/^    char_u	*name;	\/\/ funcref$/;"	m	struct:__anon50	file:
name	if_lua.c	/^    const char *name;$/;"	m	struct:__anon51	file:
name	if_mzsch.c	/^    char	    *name;$/;"	m	struct:__anon55	file:
name	if_mzsch.c	/^    char	*name;$/;"	m	struct:__anon54	file:
name	if_mzsch.c	/^    char    *name;$/;"	m	struct:__anon56	file:
name	if_py_both.h	/^    char	*name;$/;"	m	struct:numeric_constant
name	if_py_both.h	/^    char	*name;$/;"	m	struct:object_constant
name	if_py_both.h	/^    char_u	*name;$/;"	m	struct:__anon158
name	if_python.c	/^    char *name;$/;"	m	struct:__anon58	file:
name	if_python3.c	/^    char *name;$/;"	m	struct:__anon57	file:
name	if_ruby.c	/^    char *name;$/;"	m	struct:__anon59	file:
name	if_tcl.c	/^    char* name;$/;"	m	struct:__anon61	file:
name	mbyte.c	/^{   char *name;		int canon;}$/;"	m	struct:__anon68	file:
name	mbyte.c	/^{   char *name;		int prop;		int codepage;}$/;"	m	struct:__anon67	file:
name	misc2.c	/^    char_u	name;		\/\/ Single letter name of modifier$/;"	m	struct:modmasktable	file:
name	misc2.c	/^    char_u  *name;	\/\/ Name of key$/;"	m	struct:key_name_entry	file:
name	os_mswin.c	/^    char	*name;$/;"	m	struct:charset_pair	file:
name	os_mswin.c	/^    char	*name;$/;"	m	struct:quality_pair	file:
name	os_mswin.c	/^    char_u *name;$/;"	m	struct:server_id	file:
name	os_unix.c	/^    char    *name;	\/\/ Signal name (not char_u!).$/;"	m	struct:signalinfo	file:
name	search.c	/^    char_u	*name;		\/\/ Full name of file$/;"	m	struct:SearchedFile	file:
name	structs.h	/^    char	*name;		\/\/ mode name (fixed)$/;"	m	struct:cursor_entry
name	structs.h	/^    char_u	*name;		    \/\/ Name of menu, possibly translated$/;"	m	struct:VimMenu
name	structs.h	/^    const char	*name;$/;"	m	struct:__anon245
name	syntax.c	/^    char	*name;$/;"	m	struct:name_list	file:
name	syntax.c	/^    char    *name;			\/\/ subcommand name$/;"	m	struct:subcommand	file:
name	term.c	/^    char_u  name[2];	    \/\/ termcap name of entry$/;"	m	struct:termcode	file:
name	usercmd.c	/^    char	*name;$/;"	m	struct:__anon124	file:
name	usercmd.c	/^    char    *name;$/;"	m	struct:__anon123	file:
name_callback	gui_xmdlg.c	/^name_callback(Widget w,$/;"	f	file:
name_list	syntax.c	/^struct name_list$/;"	s	file:
name_part	gui_xmdlg.c	/^name_part(char *font, char *buf)$/;"	f	file:
name_to_mod_mask	misc2.c	/^name_to_mod_mask(int c)$/;"	f	file:
namebuf	quickfix.c	/^    char_u	*namebuf;$/;"	m	struct:__anon90	file:
namedfm	mark.c	/^static xfmark_T namedfm[NMARKS + EXTRA_MARKS];		\/\/ marks with file nr$/;"	v	file:
names	gui_xmdlg.c	/^    char	**names;	\/\/ font name array of arrays$/;"	m	struct:_SharedFontSelData	file:
nb_bufp2nbbuf_fire	netbeans.c	/^nb_bufp2nbbuf_fire(buf_T *bufp, int *bufnop)$/;"	f	file:
nb_channel	netbeans.c	/^static channel_T *nb_channel = NULL;$/;"	v	file:
nb_channel_closed	netbeans.c	/^nb_channel_closed(void)$/;"	f	file:
nb_debug	nbdebug.c	/^FILE		*nb_debug = NULL;$/;"	v
nb_dlevel	nbdebug.c	/^u_int		 nb_dlevel = 0;		\/\/ nb_debug verbosity level$/;"	v
nb_do_cmd	netbeans.c	/^nb_do_cmd($/;"	f	file:
nb_free	netbeans.c	/^nb_free(void)$/;"	f	file:
nb_get_buf	netbeans.c	/^nb_get_buf(int bufno)$/;"	f	file:
nb_getbufno	netbeans.c	/^nb_getbufno(buf_T *bufp)$/;"	f	file:
nb_init_graphics	netbeans.c	/^nb_init_graphics(void)$/;"	f	file:
nb_joinlines	netbeans.c	/^nb_joinlines(linenr_T first, linenr_T other)$/;"	f	file:
nb_parse_cmd	netbeans.c	/^nb_parse_cmd(char_u *cmd)$/;"	f	file:
nb_partialremove	netbeans.c	/^nb_partialremove(linenr_T lnum, colnr_T first, colnr_T last)$/;"	f	file:
nb_quote	netbeans.c	/^nb_quote(char_u *txt)$/;"	f	file:
nb_reply_nil	netbeans.c	/^nb_reply_nil(int cmdno)$/;"	f	file:
nb_reply_nr	netbeans.c	/^nb_reply_nr(int cmdno, long result)$/;"	f	file:
nb_reply_text	netbeans.c	/^nb_reply_text(int cmdno, char_u *result)$/;"	f	file:
nb_send	netbeans.c	/^nb_send(char *buf, char *fun)$/;"	f	file:
nb_set_curbuf	netbeans.c	/^nb_set_curbuf(buf_T *buf)$/;"	f	file:
nb_unquote	netbeans.c	/^nb_unquote(char_u *p, char_u **endp)$/;"	f	file:
nbbuf_T	netbeans.c	/^typedef struct nbbuf_struct nbbuf_T;$/;"	t	typeref:struct:nbbuf_struct	file:
nbbuf_number	netbeans.c	/^    int			 nbbuf_number;$/;"	m	struct:nbbuf_struct	file:
nbbuf_struct	netbeans.c	/^struct nbbuf_struct$/;"	s	file:
nbdbg	nbdebug.c	/^nbdbg(char *fmt, ...)$/;"	f
nbdbg	nbdebug.h	/^nbdbg($/;"	f
nbdebug	nbdebug.h	26;"	d
nbdebug	vim.h	2387;"	d
nbdebug_log_init	nbdebug.c	/^nbdebug_log_init($/;"	f
nbdebug_wait	nbdebug.c	/^nbdebug_wait($/;"	f
nchar	structs.h	/^    int		nchar;		\/\/ next command character (optional)$/;"	m	struct:cmdarg_S
ncharC1	structs.h	/^    int		ncharC1;	\/\/ first composing character (optional)$/;"	m	struct:cmdarg_S
ncharC2	structs.h	/^    int		ncharC2;	\/\/ second composing character (optional)$/;"	m	struct:cmdarg_S
need_check_timestamps	globals.h	/^EXTERN int	need_check_timestamps INIT(= FALSE); \/\/ need to check file$/;"	v
need_clear_subexpr	regexp.c	/^    int	need_clear_subexpr;	\/\/ subexpressions still need to be cleared$/;"	m	struct:__anon99	file:
need_clear_zsubexpr	regexp.c	/^    int	need_clear_zsubexpr;	\/\/ extmatch subexpressions still need to be$/;"	m	struct:__anon99	file:
need_clr_eos	globals.h	/^EXTERN int	need_clr_eos INIT(= FALSE); \/\/ need to clear text before$/;"	v
need_conversion	fileio.c	/^need_conversion(char_u *fenc)$/;"	f
need_cursor_line_redraw	globals.h	/^EXTERN int		need_cursor_line_redraw INIT(= FALSE);$/;"	v
need_diff_redraw	globals.h	/^EXTERN int	need_diff_redraw INIT(= 0); \/\/ need to call diff_redraw()$/;"	v
need_fileinfo	globals.h	/^EXTERN int	need_fileinfo INIT(= FALSE);\/\/ do fileinfo() after redraw$/;"	v
need_gather	term.c	/^static int	need_gather = FALSE;	    \/\/ need to fill termleader[]$/;"	v	file:
need_highlight_changed	globals.h	/^EXTERN int	need_highlight_changed INIT(= TRUE);$/;"	v
need_key_msg	globals.h	/^EXTERN char need_key_msg[] INIT(= N_("Need encryption key for \\"%s\\""));$/;"	v
need_maketitle	globals.h	/^EXTERN int	need_maketitle INIT(= TRUE); \/\/ call maketitle() soon$/;"	v
need_mouse_correct	globals.h	/^EXTERN int	need_mouse_correct INIT(= FALSE);$/;"	v
need_rb_str_new_cstr	if_ruby.c	297;"	d	file:
need_rethrow	ex_docmd.c	/^    int		need_rethrow;$/;"	m	struct:dbg_stuff	file:
need_rethrow	globals.h	/^EXTERN int need_rethrow INIT(= FALSE);$/;"	v
need_start_insertmode	globals.h	/^EXTERN int	need_start_insertmode INIT(= FALSE);$/;"	v
need_type	vim9compile.c	/^need_type(type_T *actual, type_T *expected, int offset, cctx_T *cctx)$/;"	f	file:
need_uninstall_entry	dosinst.c	/^static int	need_uninstall_entry = 0;$/;"	v	file:
need_vimrun_warning	os_win32.c	/^static int need_vimrun_warning = FALSE;$/;"	v	file:
need_wait_return	globals.h	/^EXTERN int	need_wait_return INIT(= 0); \/\/ need to wait for return later$/;"	v
needs_charset	hardcopy.c	/^    int		needs_charset;$/;"	m	struct:prt_ps_encoding_S	file:
needupdate	netbeans.c	/^static int needupdate = 0;$/;"	v	file:
nested	autocmd.c	/^    char	    nested;		\/\/ If autocommands nest here.$/;"	m	struct:AutoCmd	file:
netbeansArg	globals.h	/^EXTERN char *netbeansArg INIT(= NULL);	\/\/ the -nb[:host:port:passwd] arg$/;"	v
netbeansFireChanges	globals.h	/^EXTERN int netbeansFireChanges INIT(= 1); \/\/ send buffer changes if != 0$/;"	v
netbeansForcedQuit	globals.h	/^EXTERN int netbeansForcedQuit INIT(= 0);\/\/ don't write modified files$/;"	v
netbeansReadFile	globals.h	/^EXTERN int netbeansReadFile INIT(= 1);	\/\/ OK to read from disk if != 0$/;"	v
netbeansSuppressNoLines	globals.h	/^EXTERN int netbeansSuppressNoLines INIT(= 0); \/\/ skip "No lines in buffer"$/;"	v
netbeans_active	netbeans.c	/^netbeans_active(void)$/;"	f
netbeans_beval_cb	netbeans.c	/^netbeans_beval_cb($/;"	f
netbeans_button_release	netbeans.c	/^netbeans_button_release(int button)$/;"	f
netbeans_close	netbeans.c	/^netbeans_close(void)$/;"	f	file:
netbeans_connect	netbeans.c	/^netbeans_connect(char *params, int doabort)$/;"	f	file:
netbeans_deleted_all_lines	netbeans.c	/^netbeans_deleted_all_lines(buf_T *bufp)$/;"	f
netbeans_draw_multisign_indicator	gui_w32.c	/^netbeans_draw_multisign_indicator(int row)$/;"	f
netbeans_draw_multisign_indicator	netbeans.c	/^netbeans_draw_multisign_indicator(int row)$/;"	f
netbeans_end	netbeans.c	/^netbeans_end(void)$/;"	f
netbeans_file_activated	netbeans.c	/^netbeans_file_activated(buf_T *bufp)$/;"	f
netbeans_file_killed	netbeans.c	/^netbeans_file_killed(buf_T *bufp)$/;"	f
netbeans_file_opened	netbeans.c	/^netbeans_file_opened(buf_T *bufp)$/;"	f
netbeans_frame_moved	netbeans.c	/^netbeans_frame_moved(int new_x, int new_y)$/;"	f
netbeans_gutter_click	netbeans.c	/^netbeans_gutter_click(linenr_T lnum)$/;"	f
netbeans_inserted	netbeans.c	/^netbeans_inserted($/;"	f
netbeans_is_guarded	netbeans.c	/^netbeans_is_guarded(linenr_T top, linenr_T bot)$/;"	f
netbeans_keycommand	netbeans.c	/^netbeans_keycommand(int key)$/;"	f
netbeans_keyname	netbeans.c	/^netbeans_keyname(int key, char *buf)$/;"	f	file:
netbeans_keystring	netbeans.c	/^netbeans_keystring(char_u *keyName)$/;"	f	file:
netbeans_open	netbeans.c	/^netbeans_open(char *params, int doabort)$/;"	f
netbeans_parse_messages	netbeans.c	/^netbeans_parse_messages(void)$/;"	f
netbeans_removed	netbeans.c	/^netbeans_removed($/;"	f
netbeans_save_buffer	netbeans.c	/^netbeans_save_buffer(buf_T *bufp)$/;"	f
netbeans_send_disconnect	netbeans.c	/^netbeans_send_disconnect(void)$/;"	f
netbeans_unmodified	netbeans.c	/^netbeans_unmodified(buf_T *bufp UNUSED)$/;"	f
newFoldLevel	fold.c	/^newFoldLevel(void)$/;"	f
newFoldLevelWin	fold.c	/^newFoldLevelWin(win_T *wp)$/;"	f	file:
new_cmdpos	ex_getln.c	/^static int	new_cmdpos;	\/\/ position set by set_cmdline_pos()$/;"	v	file:
new_curbuf	structs.h	/^    bufref_T	new_curbuf;	\/\/ new curbuf$/;"	m	struct:__anon244
new_curwin	structs.h	/^    win_T	*new_curwin;	\/\/ new curwin$/;"	m	struct:__anon244
new_fnames_from_AEDesc	gui_mac.c	/^new_fnames_from_AEDesc(AEDesc *theList, long *numFiles, OSErr *error)$/;"	f
new_frame	window.c	/^new_frame(win_T *wp)$/;"	f	file:
new_imported	vim9script.c	/^new_imported(garray_T *gap)$/;"	f	file:
new_insert_skip	edit.c	/^static int	new_insert_skip;  \/\/ nr of chars in front of current insert$/;"	v	file:
new_last_cmdline	globals.h	/^EXTERN char_u	*new_last_cmdline INIT(= NULL);	\/\/ new value for last_cmdline$/;"	v
new_pixel_height	globals.h	/^EXTERN int	new_pixel_height INIT(= 0);$/;"	v
new_pixel_width	globals.h	/^EXTERN int	new_pixel_width INIT(= 0);$/;"	v
new_scope	vim9compile.c	/^new_scope(cctx_T *cctx, scopetype_T type)$/;"	f	file:
new_script_vars	evalvars.c	/^new_script_vars(scid_T id)$/;"	f
newenv	misc2.c	/^newenv(void)$/;"	f	file:
newline_on_exit	globals.h	/^EXTERN int	newline_on_exit INIT(= FALSE);	\/\/ did msg in altern. screen$/;"	v
next	autocmd.c	/^    AutoPatCmd   *next;		\/\/ chain of active apc-s for auto-invalidation$/;"	m	struct:AutoPatCmd_S	file:
next	autocmd.c	/^    struct AutoCmd  *next;		\/\/ next AutoCmd in list$/;"	m	struct:AutoCmd	typeref:struct:AutoCmd::AutoCmd	file:
next	autocmd.c	/^    struct AutoPat  *next;		\/\/ Next AutoPat in AutoPat list; MUST$/;"	m	struct:AutoPat	typeref:struct:AutoPat::AutoPat	file:
next	if_py_both.h	/^    nextfun next;$/;"	m	struct:__anon153
next	if_tcl.c	/^    struct ref	*next;$/;"	m	struct:ref	typeref:struct:ref::ref	file:
next	if_xcmdsrv.c	/^    struct x_cmdqueue	*next;$/;"	m	struct:x_cmdqueue	typeref:struct:x_cmdqueue::x_cmdqueue	file:
next	message.c	/^    struct msg_hist	*next;$/;"	m	struct:msg_hist	typeref:struct:msg_hist::msg_hist	file:
next	netbeans.c	/^    struct keyqueue *next;$/;"	m	struct:keyqueue	typeref:struct:keyqueue::keyqueue	file:
next	quickfix.c	/^    efm_T	    *next;	\/\/ pointer to next (NULL if last)$/;"	m	struct:efm_S	file:
next	quickfix.c	/^    struct dir_stack_T	*next;$/;"	m	struct:dir_stack_T	typeref:struct:dir_stack_T::dir_stack_T	file:
next	quickfix.c	/^    struct qf_delq_S	*next;$/;"	m	struct:qf_delq_S	typeref:struct:qf_delq_S::qf_delq_S	file:
next	regexp_nfa.c	/^    Ptrlist	*next;$/;"	m	union:Ptrlist	file:
next	spellfile.c	/^	wordnode_T *next;	\/\/ next node with same hash key$/;"	m	union:wordnode_S::__anon111	file:
next	structs.h	/^    eslist_T	*next;			\/\/ next element on the list$/;"	m	struct:eslist_elem
next	structs.h	/^    funccal_entry_T *next;$/;"	m	struct:funccal_entry
next	structs.h	/^    matchitem_T	*next;$/;"	m	struct:matchitem
next	structs.h	/^    struct msglist	*next;		\/\/ next of several messages in a row$/;"	m	struct:msglist	typeref:struct:msglist::msglist
next	structs.h	/^    vimmenu_T	*next;		    \/\/ Next item in menu$/;"	m	struct:VimMenu
nextPtr	if_xcmdsrv.c	/^    struct PendingCommand *nextPtr;$/;"	m	struct:PendingCommand	typeref:struct:PendingCommand::PendingCommand	file:
next_ch_id	channel.c	/^static int next_ch_id = 0;$/;"	v	file:
next_fenc	fileio.c	/^next_fenc(char_u **pp, int *alloced)$/;"	f	file:
next_for_item	eval.c	/^next_for_item(void *fi_void, char_u *arg)$/;"	f
next_list	structs.h	/^    short	*next_list;	\/\/ ID list for next match (if non-zero)$/;"	m	struct:keyentry
next_list	syntax.c	/^    short	*next_list;	\/\/ group IDs for "nextgroup" argument$/;"	m	struct:__anon115	file:
next_listener_id	change.c	/^static long next_listener_id = 0;$/;"	v	file:
next_match_col	syntax.c	/^static int next_match_col;		\/\/ column for start of next match$/;"	v	file:
next_match_end_idx	syntax.c	/^static int next_match_end_idx;		\/\/ ID of group for end pattn or zero$/;"	v	file:
next_match_eoe_pos	syntax.c	/^static lpos_T next_match_eoe_pos;	\/\/ pos. for end of end pattern$/;"	v	file:
next_match_eos_pos	syntax.c	/^static lpos_T next_match_eos_pos;	\/\/ end of start pattn (start region)$/;"	v	file:
next_match_extmatch	syntax.c	/^static reg_extmatch_T *next_match_extmatch = NULL;$/;"	v	file:
next_match_flags	syntax.c	/^static long next_match_flags;		\/\/ flags for next match$/;"	v	file:
next_match_h_endpos	syntax.c	/^static lpos_T next_match_h_endpos;	\/\/ pos. for highl. end of next match$/;"	v	file:
next_match_h_startpos	syntax.c	/^static lpos_T next_match_h_startpos;	\/\/ pos. for highl. start of next match$/;"	v	file:
next_match_idx	syntax.c	/^static int next_match_idx;		\/\/ index of matched item$/;"	v	file:
next_match_m_endpos	syntax.c	/^static lpos_T next_match_m_endpos;	\/\/ position for end of next match$/;"	v	file:
next_search_hl	highlight.c	/^next_search_hl($/;"	f	file:
next_search_hl_pos	highlight.c	/^next_search_hl_pos($/;"	f	file:
next_seqnr	syntax.c	/^static int next_seqnr = 1;		\/\/ value to use for si_seqnr$/;"	v	file:
next_sign_id	sign.c	/^static int		next_sign_id = 1; \/\/ next sign id in the global group$/;"	v	file:
next_sign_typenr	sign.c	/^static int	next_sign_typenr = 1;$/;"	v	file:
nextb	regexp_bt.c	/^    int		nextb;		\/\/ next byte$/;"	m	struct:regstar_S	file:
nextb_ic	regexp_bt.c	/^    int		nextb_ic;	\/\/ next byte reverse case$/;"	m	struct:regstar_S	file:
nextchr	regexp.c	/^     int	nextchr;$/;"	m	struct:__anon98	file:
nextchr	regexp.c	/^static int	nextchr;	\/\/ used for ungetchr()$/;"	v	file:
nextcmd	autocmd.c	/^    AutoCmd	*nextcmd;	\/\/ next AutoCmd to execute$/;"	m	struct:AutoPatCmd_S	file:
nextcmd	ex_cmds.h	/^    char_u	*nextcmd;	\/\/ next command (NULL if none)$/;"	m	struct:exarg
nextent	termlib.c	/^nextent(char *tbuf, FILE *termcap, int buflen)$/;"	f	file:
nextfun	if_py_both.h	/^typedef PyObject *(*nextfun)(void **);$/;"	t
nextline	scriptfile.c	/^    char_u	*nextline;	\/\/ if not NULL: line that was read ahead$/;"	m	struct:source_cookie	file:
nextwild	cmdexpand.c	/^nextwild($/;"	f
nfa_alt_listid	regexp.c	/^    int nfa_alt_listid;$/;"	m	struct:__anon99	file:
nfa_classcodes	regexp_nfa.c	/^static int nfa_classcodes[] = {$/;"	v	file:
nfa_did_time_out	regexp_nfa.c	/^nfa_did_time_out()$/;"	f	file:
nfa_dump	regexp_nfa.c	/^nfa_dump(nfa_regprog_T *prog)$/;"	f	file:
nfa_emit_equi_class	regexp_nfa.c	/^nfa_emit_equi_class(int c)$/;"	f	file:
nfa_endp	regexp_nfa.c	/^static save_se_T *nfa_endp = NULL;$/;"	v	file:
nfa_fail_for_testing	globals.h	/^EXTERN int  nfa_fail_for_testing INIT(= FALSE);$/;"	v
nfa_get_match_text	regexp_nfa.c	/^nfa_get_match_text(nfa_state_T *start)$/;"	f	file:
nfa_get_reganch	regexp_nfa.c	/^nfa_get_reganch(nfa_state_T *start, int depth)$/;"	f	file:
nfa_get_regstart	regexp_nfa.c	/^nfa_get_regstart(nfa_state_T *start, int depth)$/;"	f	file:
nfa_has_backref	regexp.c	/^    int nfa_has_backref;    \/\/ NFA regexp \\1 .. \\9 encountered.$/;"	m	struct:__anon99	file:
nfa_has_zend	regexp.c	/^    int nfa_has_zend;	    \/\/ NFA regexp \\ze operator encountered.$/;"	m	struct:__anon99	file:
nfa_has_zsubexpr	regexp.c	/^    int nfa_has_zsubexpr;   \/\/ NFA regexp has \\z( ), set zsubexpr.$/;"	m	struct:__anon99	file:
nfa_list_T	regexp_nfa.c	/^} nfa_list_T;$/;"	t	typeref:struct:__anon108	file:
nfa_listid	regexp.c	/^    int nfa_listid;$/;"	m	struct:__anon99	file:
nfa_ll_index	regexp_nfa.c	/^static int nfa_ll_index = 0;$/;"	v	file:
nfa_match	regexp_nfa.c	/^static int	    nfa_match;$/;"	v	file:
nfa_max_width	regexp_nfa.c	/^nfa_max_width(nfa_state_T *startstate, int depth)$/;"	f	file:
nfa_nsubexpr	regexp.c	/^    int nfa_nsubexpr;	    \/\/ Number of sub expressions actually being used$/;"	m	struct:__anon99	file:
nfa_pim_S	regexp_nfa.c	/^struct nfa_pim_S$/;"	s	file:
nfa_pim_T	regexp_nfa.c	/^typedef struct nfa_pim_S nfa_pim_T;$/;"	t	typeref:struct:nfa_pim_S	file:
nfa_postfix_dump	regexp_nfa.c	/^nfa_postfix_dump(char_u *expr, int retval)$/;"	f	file:
nfa_postprocess	regexp_nfa.c	/^nfa_postprocess(nfa_regprog_T *prog)$/;"	f	file:
nfa_print_state	regexp_nfa.c	/^nfa_print_state(FILE *debugf, nfa_state_T *state)$/;"	f	file:
nfa_print_state2	regexp_nfa.c	/^nfa_print_state2(FILE *debugf, nfa_state_T *state, garray_T *indent)$/;"	f	file:
nfa_re_flags	regexp_nfa.c	/^static int nfa_re_flags; \/\/ re_flags passed to nfa_regcomp()$/;"	v	file:
nfa_re_num_cmp	regexp_nfa.c	/^nfa_re_num_cmp(long_u val, int op, long_u pos)$/;"	f	file:
nfa_recognize_char_class	regexp_nfa.c	/^nfa_recognize_char_class(char_u *start, char_u *end, int extra_newl)$/;"	f	file:
nfa_reg	regexp_nfa.c	/^nfa_reg($/;"	f	file:
nfa_regatom	regexp_nfa.c	/^nfa_regatom(void)$/;"	f	file:
nfa_regbranch	regexp_nfa.c	/^nfa_regbranch(void)$/;"	f	file:
nfa_regcomp	regexp_nfa.c	/^nfa_regcomp(char_u *expr, int re_flags)$/;"	f	file:
nfa_regcomp_start	regexp_nfa.c	/^nfa_regcomp_start($/;"	f	file:
nfa_regconcat	regexp_nfa.c	/^nfa_regconcat(void)$/;"	f	file:
nfa_regengine	regexp.c	/^static regengine_T nfa_regengine =$/;"	v	file:
nfa_regengine	regexp.c	/^static regengine_T nfa_regengine;$/;"	v	file:
nfa_regexec_both	regexp_nfa.c	/^nfa_regexec_both($/;"	f	file:
nfa_regexec_multi	regexp_nfa.c	/^nfa_regexec_multi($/;"	f	file:
nfa_regexec_nl	regexp_nfa.c	/^nfa_regexec_nl($/;"	f	file:
nfa_regfree	regexp_nfa.c	/^nfa_regfree(regprog_T *prog)$/;"	f	file:
nfa_regmatch	regexp_nfa.c	/^nfa_regmatch($/;"	f	file:
nfa_regpiece	regexp_nfa.c	/^nfa_regpiece(void)$/;"	f	file:
nfa_regprog_T	regexp.h	/^} nfa_regprog_T;$/;"	t	typeref:struct:__anon174
nfa_regtry	regexp_nfa.c	/^nfa_regtry($/;"	f	file:
nfa_restore_listids	regexp_nfa.c	/^nfa_restore_listids(nfa_regprog_T *prog, int *list)$/;"	f	file:
nfa_save_listids	regexp_nfa.c	/^nfa_save_listids(nfa_regprog_T *prog, int *list)$/;"	f	file:
nfa_set_code	regexp_nfa.c	/^nfa_set_code(int c)$/;"	f	file:
nfa_state	regexp.h	/^struct nfa_state$/;"	s
nfa_state_T	regexp.h	/^typedef struct nfa_state nfa_state_T;$/;"	t	typeref:struct:nfa_state
nfa_thread_T	regexp_nfa.c	/^} nfa_thread_T;$/;"	t	typeref:struct:__anon107	file:
nfa_time_count	regexp_nfa.c	/^static int	    nfa_time_count;$/;"	v	file:
nfa_time_limit	regexp_nfa.c	/^static proftime_T  *nfa_time_limit;$/;"	v	file:
nfa_timed_out	regexp_nfa.c	/^static int	   *nfa_timed_out;$/;"	v	file:
nl_does_cr	structs.h	/^    int nl_does_cr;	\/\/ TRUE when a NL is expanded to CR-NL on output$/;"	m	struct:__anon227
no_Magic	regexp.c	/^no_Magic(int x)$/;"	f	file:
no_abbr	globals.h	/^EXTERN int	no_abbr INIT(= TRUE);	\/\/ TRUE when no abbreviations loaded$/;"	v
no_check_timestamps	globals.h	/^EXTERN int	no_check_timestamps INIT(= 0);	\/\/ Don't check timestamps$/;"	v
no_console_input	gui.c	/^no_console_input(void)$/;"	f
no_hlsearch	globals.h	/^EXTERN int	no_hlsearch INIT(= FALSE);$/;"	v
no_lines_msg	globals.h	/^EXTERN char_u no_lines_msg[]	INIT(= N_("--No lines in buffer--"));$/;"	v
no_mapping	globals.h	/^EXTERN int no_mapping INIT(= FALSE);	\/\/ currently no mapping allowed$/;"	v
no_query_mouse_for_testing	globals.h	/^EXTERN int  no_query_mouse_for_testing INIT(= FALSE);$/;"	v
no_reduce_keys	globals.h	/^EXTERN int no_reduce_keys INIT(= FALSE);  \/\/ do not apply Ctrl, Shift and Alt$/;"	v
no_scs	structs.h	/^    int		    no_scs;	\/\/ no smartcase for this pattern$/;"	m	struct:spat
no_smartcase	globals.h	/^EXTERN int	no_smartcase INIT(= FALSE);	\/\/ don't use 'smartcase' once$/;"	v
no_spell_checking	spell.c	/^no_spell_checking(win_T *wp)$/;"	f
no_swap_file	structs.h	/^    int		no_swap_file;		\/\/ "-n" argument used$/;"	m	struct:__anon252
no_u_sync	globals.h	/^EXTERN int no_u_sync INIT(= 0);		\/\/ Don't call u_sync()$/;"	v
no_viminfo	viminfo.c	/^no_viminfo(void)$/;"	f	file:
no_wait_return	globals.h	/^EXTERN int	no_wait_return INIT(= 0);   \/\/ don't wait for return for now$/;"	v
no_win_do_lines_ins	globals.h	/^EXTERN int	no_win_do_lines_ins INIT(= FALSE); \/\/ don't insert lines$/;"	v
no_write_message	buffer.c	/^no_write_message(void)$/;"	f
no_write_message_nobang	buffer.c	/^no_write_message_nobang(buf_T *buf UNUSED)$/;"	f
no_zero_mapping	globals.h	/^EXTERN int no_zero_mapping INIT(= 0);	\/\/ mapping zero not allowed$/;"	v
noalt	gui_gtk.c	/^    int		noalt;		    \/\/ accept accelerators without Alt$/;"	m	struct:_DialogInfo	file:
node_compress	spellfile.c	/^node_compress($/;"	f	file:
node_equal	spellfile.c	/^node_equal(wordnode_T *n1, wordnode_T *n2)$/;"	f	file:
nofile_fname	tag.c	/^static char_u	*nofile_fname = NULL;	\/\/ fname for NOTAGFILE error$/;"	v	file:
nofold_len	spell.c	/^nofold_len(char_u *fword, int flen, char_u *word)$/;"	f
non_zero_arg	evalfunc.c	/^non_zero_arg(typval_T *argvars)$/;"	f
nonmat	structs.h	/^	} nonmat;$/;"	m	union:listvar_S::__anon207	typeref:struct:listvar_S::__anon207::__anon208
noremap	structs.h	/^    int		noremap[MENU_MODES]; \/\/ A REMAP_ flag for each mode$/;"	m	struct:VimMenu
noremap_keys	getchar.c	/^noremap_keys(void)$/;"	f
noremapbuf_init	getchar.c	/^static char_u	noremapbuf_init[TYPELEN_INIT];	\/\/ initial typebuf.tb_noremap$/;"	v	file:
norm	regexp_nfa.c	/^    regsub_T	norm; \/\/ \\( .. \\) matches$/;"	m	struct:__anon105	file:
norm_font	gui.h	/^    GuiFont	norm_font;	    \/\/ Normal font$/;"	m	struct:Gui
norm_logfont	gui_w32.c	/^static LOGFONTW norm_logfont;$/;"	v	file:
norm_pixel	gui.h	/^    guicolor_T	norm_pixel;	    \/\/ Color of normal text$/;"	m	struct:Gui
normal_cmd	normal.c	/^normal_cmd($/;"	f
normal_pixmap	gui_xmebwp.h	/^    Pixmap normal_pixmap;$/;"	m	struct:_XmEnhancedButtonPart
normal_search	normal.c	/^normal_search($/;"	f	file:
normvideo	os_win32.c	/^normvideo(void)$/;"	f	file:
noswapfile	structs.h	/^    int		noswapfile;		\/\/ TRUE when ":noswapfile" was used$/;"	m	struct:__anon191
not_a_term	structs.h	/^    int		not_a_term;		\/\/ no warning for missing term?$/;"	m	struct:__anon252
not_exiting	ex_docmd.c	/^not_exiting(void)$/;"	f
not_writing	ex_cmds.c	/^not_writing(void)$/;"	f	file:
notify_multithread	if_mzsch.c	/^notify_multithread(int on)$/;"	f	file:
nr2hex	charset.c	/^nr2hex(unsigned c)$/;"	f	file:
nr_trans	structs.h	/^struct nr_trans$/;"	s
nstate	regexp.h	/^    int			nstate;$/;"	m	struct:__anon174
nstate	regexp_nfa.c	/^static int nstate;	\/\/ Number of states in the NFA.$/;"	v	file:
nsubexp	regexp.h	/^    int			nsubexp;	\/\/ number of ()$/;"	m	struct:__anon174
nt_hashitem	structs.h	/^    mf_hashitem_T nt_hashitem;		\/\/ header for hash table and key$/;"	m	struct:nr_trans
nt_new_bnum	structs.h	/^    blocknr_T	nt_new_bnum;		\/\/ new, positive, number$/;"	m	struct:nr_trans
nt_old_bnum	structs.h	526;"	d
nul	os_vms.c	/^    int		nul;$/;"	m	struct:__anon80	file:
nul	os_vms.c	/^    int	nul;$/;"	m	struct:__anon81	file:
null_libintl_bind_textdomain_codeset	os_win32.c	/^null_libintl_bind_textdomain_codeset($/;"	f	file:
null_libintl_bindtextdomain	os_win32.c	/^null_libintl_bindtextdomain($/;"	f	file:
null_libintl_gettext	os_win32.c	/^null_libintl_gettext(const char *msgid)$/;"	f	file:
null_libintl_ngettext	os_win32.c	/^null_libintl_ngettext($/;"	f	file:
null_libintl_textdomain	os_win32.c	/^null_libintl_textdomain(const char *domainname UNUSED)$/;"	f	file:
null_libintl_wputenv	os_win32.c	/^null_libintl_wputenv(const wchar_t *envstring UNUSED)$/;"	f	file:
num	ex_cmds.c	/^	} num;$/;"	m	union:__anon20::__anon21	typeref:struct:__anon20::__anon21::__anon23	file:
num	gui_xmdlg.c	/^    int		num;		\/\/ number of font names$/;"	m	struct:_SharedFontSelData	file:
num_alloc	misc2.c	/^static long_u num_alloc;$/;"	v	file:
num_charsets	hardcopy.c	/^    int				num_charsets;$/;"	m	struct:prt_ps_mbfont_S	file:
num_cols	gui.h	/^    int		num_cols;	    \/\/ Number of columns$/;"	m	struct:Gui
num_complex_braces	regexp_bt.c	/^static int	num_complex_braces; \/\/ Complex \\{...} count$/;"	v	file:
num_divide	eval.c	/^num_divide(varnumber_T n1, varnumber_T n2)$/;"	f
num_encodings	hardcopy.c	/^    int				num_encodings;$/;"	m	struct:prt_ps_mbfont_S	file:
num_freed	misc2.c	/^static long_u num_freed;$/;"	v	file:
num_modulus	eval.c	/^num_modulus(varnumber_T n1, varnumber_T n2)$/;"	f
num_panels	gui_photon.c	/^static ushort_t	num_panels = 0;$/;"	v	file:
num_rows	gui.h	/^    int		num_rows;	    \/\/ Number of rows$/;"	m	struct:Gui
num_windows	dosinst.c	/^static int num_windows;$/;"	v	file:
number	structs.h	/^    long	number;$/;"	m	struct:__anon245
number	structs.h	/^    prt_text_attr_T number;$/;"	m	struct:__anon247
number	vim9.h	/^	varnumber_T	    number;$/;"	m	union:__anon276::__anon277
number_width	screen.c	/^number_width(win_T *wp)$/;"	f
number_width	vim.h	2179;"	d
numchars	os_vms.c	/^    unsigned short numchars;$/;"	m	struct:typeahead_st	file:
numeric_constant	if_py_both.h	/^static struct numeric_constant {$/;"	s
numeric_constants	if_py_both.h	/^} numeric_constants[] = {$/;"	v	typeref:struct:numeric_constant
nv_Replace	normal.c	/^nv_Replace(cmdarg_T *cap)$/;"	f	file:
nv_Undo	normal.c	/^nv_Undo(cmdarg_T *cap)$/;"	f	file:
nv_Zet	normal.c	/^nv_Zet(cmdarg_T *cap)$/;"	f	file:
nv_abbrev	normal.c	/^nv_abbrev(cmdarg_T *cap)$/;"	f	file:
nv_addsub	normal.c	/^nv_addsub(cmdarg_T *cap)$/;"	f	file:
nv_at	normal.c	/^nv_at(cmdarg_T *cap)$/;"	f	file:
nv_bck_word	normal.c	/^nv_bck_word(cmdarg_T *cap)$/;"	f	file:
nv_beginline	normal.c	/^nv_beginline(cmdarg_T *cap)$/;"	f	file:
nv_brace	normal.c	/^nv_brace(cmdarg_T *cap)$/;"	f	file:
nv_brackets	normal.c	/^nv_brackets(cmdarg_T *cap)$/;"	f	file:
nv_clear	normal.c	/^nv_clear(cmdarg_T *cap)$/;"	f	file:
nv_cmd	normal.c	/^static const struct nv_cmd$/;"	s	file:
nv_cmd_idx	normal.c	/^static short nv_cmd_idx[NV_CMDS_SIZE];$/;"	v	file:
nv_cmds	normal.c	/^} nv_cmds[] =$/;"	v	typeref:struct:nv_cmd	file:
nv_colon	normal.c	/^nv_colon(cmdarg_T *cap)$/;"	f	file:
nv_compare	normal.c	/^nv_compare(const void *s1, const void *s2)$/;"	f	file:
nv_csearch	normal.c	/^nv_csearch(cmdarg_T *cap)$/;"	f	file:
nv_ctrlg	normal.c	/^nv_ctrlg(cmdarg_T *cap)$/;"	f	file:
nv_ctrlh	normal.c	/^nv_ctrlh(cmdarg_T *cap)$/;"	f	file:
nv_ctrlo	normal.c	/^nv_ctrlo(cmdarg_T *cap)$/;"	f	file:
nv_cursorhold	normal.c	/^nv_cursorhold(cmdarg_T *cap)$/;"	f	file:
nv_cursormark	normal.c	/^nv_cursormark(cmdarg_T *cap, int flag, pos_T *pos)$/;"	f	file:
nv_diffgetput	diff.c	/^nv_diffgetput(int put, long count)$/;"	f
nv_dollar	normal.c	/^nv_dollar(cmdarg_T *cap)$/;"	f	file:
nv_dot	normal.c	/^nv_dot(cmdarg_T *cap)$/;"	f	file:
nv_down	normal.c	/^nv_down(cmdarg_T *cap)$/;"	f	file:
nv_drop	normal.c	/^nv_drop(cmdarg_T *cap UNUSED)$/;"	f	file:
nv_edit	normal.c	/^nv_edit(cmdarg_T *cap)$/;"	f	file:
nv_end	normal.c	/^nv_end(cmdarg_T *cap)$/;"	f	file:
nv_error	normal.c	/^nv_error(cmdarg_T *cap)$/;"	f	file:
nv_esc	normal.c	/^nv_esc(cmdarg_T *cap)$/;"	f	file:
nv_exmode	normal.c	/^nv_exmode(cmdarg_T *cap)$/;"	f	file:
nv_findpar	normal.c	/^nv_findpar(cmdarg_T *cap)$/;"	f	file:
nv_func_T	normal.c	/^typedef void (*nv_func_T)(cmdarg_T *cap);$/;"	t	file:
nv_g_cmd	normal.c	/^nv_g_cmd(cmdarg_T *cap)$/;"	f	file:
nv_gd	normal.c	/^nv_gd($/;"	f	file:
nv_gomark	normal.c	/^nv_gomark(cmdarg_T *cap)$/;"	f	file:
nv_goto	normal.c	/^nv_goto(cmdarg_T *cap)$/;"	f	file:
nv_gotofile	normal.c	/^nv_gotofile(cmdarg_T *cap)$/;"	f	file:
nv_halfpage	normal.c	/^nv_halfpage(cmdarg_T *cap)$/;"	f	file:
nv_hat	normal.c	/^nv_hat(cmdarg_T *cap)$/;"	f	file:
nv_help	normal.c	/^nv_help(cmdarg_T *cap)$/;"	f	file:
nv_home	normal.c	/^nv_home(cmdarg_T *cap)$/;"	f	file:
nv_hor_scrollbar	normal.c	/^nv_hor_scrollbar(cmdarg_T *cap)$/;"	f	file:
nv_ident	normal.c	/^nv_ident(cmdarg_T *cap)$/;"	f	file:
nv_ignore	normal.c	/^nv_ignore(cmdarg_T *cap)$/;"	f	file:
nv_join	normal.c	/^nv_join(cmdarg_T *cap)$/;"	f	file:
nv_kundo	normal.c	/^nv_kundo(cmdarg_T *cap)$/;"	f	file:
nv_left	normal.c	/^nv_left(cmdarg_T *cap)$/;"	f	file:
nv_lineop	normal.c	/^nv_lineop(cmdarg_T *cap)$/;"	f	file:
nv_mark	normal.c	/^nv_mark(cmdarg_T *cap)$/;"	f	file:
nv_max_linear	normal.c	/^static int nv_max_linear;$/;"	v	file:
nv_mouse	mouse.c	/^nv_mouse(cmdarg_T *cap)$/;"	f
nv_mousescroll	mouse.c	/^nv_mousescroll(cmdarg_T *cap)$/;"	f
nv_nbcmd	normal.c	/^nv_nbcmd(cmdarg_T *cap)$/;"	f	file:
nv_next	normal.c	/^nv_next(cmdarg_T *cap)$/;"	f	file:
nv_nop	normal.c	/^nv_nop(cmdarg_T *cap UNUSED)$/;"	f	file:
nv_normal	normal.c	/^nv_normal(cmdarg_T *cap)$/;"	f	file:
nv_object	normal.c	/^nv_object($/;"	f	file:
nv_open	normal.c	/^nv_open(cmdarg_T *cap)$/;"	f	file:
nv_operator	normal.c	/^nv_operator(cmdarg_T *cap)$/;"	f	file:
nv_optrans	normal.c	/^nv_optrans(cmdarg_T *cap)$/;"	f	file:
nv_page	normal.c	/^nv_page(cmdarg_T *cap)$/;"	f	file:
nv_pcmark	normal.c	/^nv_pcmark(cmdarg_T *cap)$/;"	f	file:
nv_percent	normal.c	/^nv_percent(cmdarg_T *cap)$/;"	f	file:
nv_pipe	normal.c	/^nv_pipe(cmdarg_T *cap)$/;"	f	file:
nv_put	normal.c	/^nv_put(cmdarg_T *cap)$/;"	f	file:
nv_put_opt	normal.c	/^nv_put_opt(cmdarg_T *cap, int fix_indent)$/;"	f	file:
nv_record	normal.c	/^nv_record(cmdarg_T *cap)$/;"	f	file:
nv_redo	normal.c	/^nv_redo(cmdarg_T *cap)$/;"	f	file:
nv_regname	normal.c	/^nv_regname(cmdarg_T *cap)$/;"	f	file:
nv_replace	normal.c	/^nv_replace(cmdarg_T *cap)$/;"	f	file:
nv_right	normal.c	/^nv_right(cmdarg_T *cap)$/;"	f	file:
nv_screengo	normal.c	/^nv_screengo(oparg_T *oap, int dir, long dist)$/;"	f	file:
nv_scroll	normal.c	/^nv_scroll(cmdarg_T *cap)$/;"	f	file:
nv_scroll_line	normal.c	/^nv_scroll_line(cmdarg_T *cap)$/;"	f
nv_search	normal.c	/^nv_search(cmdarg_T *cap)$/;"	f	file:
nv_select	normal.c	/^nv_select(cmdarg_T *cap)$/;"	f	file:
nv_subst	normal.c	/^nv_subst(cmdarg_T *cap)$/;"	f	file:
nv_suspend	normal.c	/^nv_suspend(cmdarg_T *cap)$/;"	f	file:
nv_tabline	normal.c	/^nv_tabline(cmdarg_T *cap)$/;"	f	file:
nv_tabmenu	normal.c	/^nv_tabmenu(cmdarg_T *cap)$/;"	f	file:
nv_tagpop	normal.c	/^nv_tagpop(cmdarg_T *cap)$/;"	f	file:
nv_tilde	normal.c	/^nv_tilde(cmdarg_T *cap)$/;"	f	file:
nv_undo	normal.c	/^nv_undo(cmdarg_T *cap)$/;"	f	file:
nv_up	normal.c	/^nv_up(cmdarg_T *cap)$/;"	f	file:
nv_ver_scrollbar	normal.c	/^nv_ver_scrollbar(cmdarg_T *cap)$/;"	f	file:
nv_visual	normal.c	/^nv_visual(cmdarg_T *cap)$/;"	f	file:
nv_vreplace	normal.c	/^nv_vreplace(cmdarg_T *cap)$/;"	f	file:
nv_window	normal.c	/^nv_window(cmdarg_T *cap)$/;"	f	file:
nv_wordcmd	normal.c	/^nv_wordcmd(cmdarg_T *cap)$/;"	f	file:
nv_zet	normal.c	/^nv_zet(cmdarg_T *cap)$/;"	f	file:
o_acute	regexp_nfa.c	744;"	d	file:
o_circumflex	regexp_nfa.c	745;"	d	file:
o_diaeresis	regexp_nfa.c	747;"	d	file:
o_grave	regexp_nfa.c	743;"	d	file:
o_slash	regexp_nfa.c	748;"	d	file:
o_virguilla	regexp_nfa.c	746;"	d	file:
oap	structs.h	/^    oparg_T	*oap;		\/\/ Operator arguments$/;"	m	struct:cmdarg_S
object_constant	if_py_both.h	/^static struct object_constant {$/;"	s
object_constants	if_py_both.h	/^} object_constants[] = {$/;"	v	typeref:struct:object_constant
objtbl	if_ruby.c	/^static VALUE objtbl;$/;"	v	file:
off	fold.c	/^    linenr_T	off;		\/\/ offset between lnum and real line number$/;"	m	struct:__anon29	file:
off	structs.h	/^    long	off;		\/\/ line or char offset$/;"	m	struct:soffset
off	structs.h	/^    soffset_T	    off;$/;"	m	struct:spat
off2pos	netbeans.c	/^off2pos(buf_T *buf, long offset)$/;"	f	file:
off_T	vim.h	/^typedef __int64 off_T;$/;"	t
off_T	vim.h	/^typedef long off_T;$/;"	t
off_T	vim.h	/^typedef off_t off_T;$/;"	t
off_t	if_ruby.c	110;"	d	file:
off_t	os_amiga.h	/^typedef long off_t;$/;"	t
offset	mbyte.c	/^    int offset;$/;"	m	struct:__anon69	file:
offset2bytes	spellfile.c	/^offset2bytes(int nr, char_u *buf)$/;"	f	file:
ok	gui_xmdlg.c	/^    Widget	ok;$/;"	m	struct:_SharedFontSelData	file:
ok_callback	gui_xmdlg.c	/^ok_callback(Widget w UNUSED,$/;"	f	file:
old	gui_xmdlg.c	/^    XFontStruct	*old;		\/\/ font data structure for sample display$/;"	m	struct:_SharedFontSelData	file:
oldEvent	gui_at_sb.c	/^    XEvent *oldEvent;$/;"	m	struct:EventData	file:
old_char	getchar.c	/^static int old_char = -1;	\/\/ character put back by vungetc()$/;"	v	file:
old_char	structs.h	/^    int			old_char;$/;"	m	struct:__anon201
old_fn	if_py_both.h	/^static writefn old_fn = NULL;$/;"	v
old_indent	globals.h	/^EXTERN int	old_indent INIT(= 0);	\/\/ for ^^D command in insert mode$/;"	v
old_label_expose	gui_motif.c	/^static XtExposeProc old_label_expose = NULL;$/;"	v	file:
old_list	gui_xmdlg.c	/^    XmFontList	old_list;	\/\/ font data structure for sample display$/;"	m	struct:_SharedFontSelData	file:
old_mod_mask	getchar.c	/^static int old_mod_mask;	\/\/ mod_mask for ungotten character$/;"	v	file:
old_mod_mask	structs.h	/^    int			old_mod_mask;$/;"	m	struct:__anon201
old_mouse_col	getchar.c	/^static int old_mouse_col;	\/\/ mouse_col related to old_char$/;"	v	file:
old_mouse_row	getchar.c	/^static int old_mouse_row;	\/\/ mouse_row related to old_char$/;"	v	file:
old_mouse_shape	misc2.c	/^static int old_mouse_shape = 0;$/;"	v	file:
old_redobuff	getchar.c	/^static buffheader_T old_redobuff = {{NULL, {NUL}}, NULL, 0, 0};$/;"	v	file:
old_showcmd_buf	normal.c	/^static char_u	old_showcmd_buf[SHOWCMD_BUFLEN];  \/\/ For push_showcmd()$/;"	v	file:
old_sub	ex_cmds.c	/^static char_u	*old_sub = NULL;	\/\/ previous substitute pattern$/;"	v	file:
old_termresponse	autocmd.c	/^static char_u	*old_termresponse = NULL;$/;"	v	file:
old_viewstate	ex_getln.c	/^    viewstate_T	old_viewstate;$/;"	m	struct:__anon27	file:
oldbat	dosinst.h	/^    char	*oldbat;	\/\/ path to existing xxx.bat or NULL$/;"	m	struct:__anon141
oldexe	dosinst.h	/^    char	*oldexe;	\/\/ path to existing xxx.exe or NULL$/;"	m	struct:__anon141
oldicon	os_unix.c	/^static char_u	*oldicon = NULL;$/;"	v	file:
oldtitle	os_unix.c	/^static char_u	*oldtitle = NULL;$/;"	v	file:
oldtitle_outdated	os_unix.c	/^static volatile sig_atomic_t oldtitle_outdated = FALSE;$/;"	v	file:
oldvimrc	dosinst.c	/^char	oldvimrc[BUFSIZE];	\/\/ name of existing vimrc file$/;"	v
oldwindowtitle	os_amiga.c	/^static char_u		*oldwindowtitle = NULL;$/;"	v	file:
ole_error	gui_w32.c	/^ole_error(char *arg)$/;"	f	file:
on_select_tab	gui_gtk_x11.c	/^on_select_tab($/;"	f	file:
on_tab_reordered	gui_gtk_x11.c	/^on_tab_reordered($/;"	f	file:
on_tabline_menu	gui_gtk_x11.c	/^on_tabline_menu(GtkWidget *widget, GdkEvent *event)$/;"	f	file:
once	autocmd.c	/^    char	    once;		\/\/ "One shot": removed after execution$/;"	m	struct:AutoCmd	file:
oneLineTextEditTranslations	gui_at_fs.c	/^static char *oneLineTextEditTranslations = "\\$/;"	v	file:
one_adjust	mark.c	983;"	d	file:
one_adjust_nodel	mark.c	998;"	d	file:
one_exactly	regexp_bt.c	/^static int	one_exactly = FALSE;	\/\/ only do one char for EXACTLY$/;"	v	file:
one_function_arg	userfunc.c	/^one_function_arg(char_u *arg, garray_T *newargs, garray_T *argtypes, int skip)$/;"	f	file:
one_window	window.c	/^one_window(void)$/;"	f
onecap_copy	spell.c	/^onecap_copy($/;"	f
oneleft	edit.c	/^oneleft(void)$/;"	f
onepage	move.c	/^onepage(int dir, long count)$/;"	f
oneright	edit.c	/^oneright(void)$/;"	f
only_one_window	window.c	/^only_one_window(void)$/;"	f
op	vim9.h	/^	opexpr_T	    op;$/;"	m	union:__anon276::__anon277
opFoldRange	fold.c	/^opFoldRange($/;"	f
op_addsub	ops.c	/^op_addsub($/;"	f
op_change	ops.c	/^op_change(oparg_T *oap)$/;"	f
op_colon	ops.c	/^op_colon(oparg_T *oap)$/;"	f	file:
op_delete	ops.c	/^op_delete(oparg_T *oap)$/;"	f
op_format	ops.c	/^op_format($/;"	f	file:
op_formatexpr	ops.c	/^op_formatexpr(oparg_T *oap)$/;"	f	file:
op_function	ops.c	/^op_function(oparg_T *oap UNUSED)$/;"	f	file:
op_ic	vim9.h	/^    int		op_ic;	    \/\/ TRUE with '#', FALSE with '?', else MAYBE$/;"	m	struct:__anon270
op_insert	ops.c	/^op_insert(oparg_T *oap, long count1)$/;"	f
op_is_change	ops.c	/^op_is_change(int op)$/;"	f
op_on_lines	ops.c	/^op_on_lines(int op)$/;"	f	file:
op_pending	main.c	/^op_pending(void)$/;"	f
op_reindent	indent.c	/^op_reindent(oparg_T *oap, int (*how)(void))$/;"	f
op_replace	ops.c	/^op_replace(oparg_T *oap, int c)$/;"	f
op_shift	ops.c	/^op_shift(oparg_T *oap, int curs_top, int amount)$/;"	f
op_tilde	ops.c	/^op_tilde(oparg_T *oap)$/;"	f	file:
op_type	structs.h	/^    int		op_type;	\/\/ current pending operator type$/;"	m	struct:oparg_S
op_type	vim9.h	/^    exptype_T	op_type;$/;"	m	struct:__anon270
op_yank	register.c	/^op_yank(oparg_T *oap, int deleting, int mess)$/;"	f
oparg_S	structs.h	/^typedef struct oparg_S$/;"	s
oparg_T	structs.h	/^} oparg_T;$/;"	t	typeref:struct:oparg_S
opchars	ops.c	/^static char opchars[][3] =$/;"	v	file:
opcount	globals.h	/^EXTERN long	opcount INIT(= 0);	\/\/ count for pending operator$/;"	v
opcount	structs.h	/^    long	opcount;	\/\/ count before an operator$/;"	m	struct:cmdarg_S
openFold	fold.c	/^openFold(linenr_T lnum, long count)$/;"	f
openFoldRecurse	fold.c	/^openFoldRecurse(linenr_T lnum)$/;"	f
open_app_context	ui.c	/^open_app_context(void)$/;"	f
open_buffer	buffer.c	/^open_buffer($/;"	f
open_cmdwin	ex_getln.c	/^open_cmdwin(void)$/;"	f	file:
open_exfile	ex_docmd.c	/^open_exfile($/;"	f
open_line	change.c	/^open_line($/;"	f
open_pty	os_unix.c	/^open_pty(int *pty_master_fd, int *pty_slave_fd, char_u **name1, char_u **name2)$/;"	f	file:
open_spellbuf	spell.c	/^open_spellbuf(void)$/;"	f
openscript	getchar.c	/^openscript($/;"	f
openwith_gvim_path	uninstall.c	/^openwith_gvim_path(char *buf, DWORD bufsize)$/;"	f	file:
opexpr_T	vim9.h	/^} opexpr_T;$/;"	t	typeref:struct:__anon270
opt_strings_flags	optionstr.c	/^opt_strings_flags($/;"	f	file:
opt_type	if_py_both.h	/^    int		opt_type;$/;"	m	struct:__anon159
opt_type	if_py_both.h	/^    int		opt_type;$/;"	m	struct:__anon160
option_expand	option.c	/^option_expand(int opt_idx, char_u *val)$/;"	f	file:
option_iter_next	option.c	/^option_iter_next(void **option, int opt_type)$/;"	f
option_table_T	structs.h	/^} option_table_T;$/;"	t	typeref:struct:__anon245
option_value2string	option.c	/^option_value2string($/;"	f	file:
option_was_set	option.c	/^option_was_set(char_u *name)$/;"	f
optioncmd	if_tcl.c	/^optioncmd($/;"	f	file:
options	optiondefs.h	/^static struct vimoption options[] =$/;"	v	typeref:struct:vimoption
optiterinfo_T	if_py_both.h	/^} optiterinfo_T;$/;"	t	typeref:struct:__anon160
optval_default	option.c	/^optval_default(struct vimoption *p, char_u *varp, int compatible)$/;"	f	file:
orgmode	os_vms.c	/^static TT_MODE	orgmode;$/;"	v	file:
orientation	gui_at_sb.h	/^    XtOrientation orientation;	\/\/ horizontal or vertical$/;"	m	struct:__anon143
orig_line_count	globals.h	/^EXTERN int	orig_line_count INIT(= 0);  \/\/ Line count when "gR" started$/;"	v
orig_topfill	term.c	/^static int orig_topfill = 0;$/;"	v	file:
orig_topline	term.c	/^static linenr_T orig_topline = 0;$/;"	v	file:
origin_end_col	vim.h	/^    short_u	origin_end_col;$/;"	m	struct:__anon279
origin_row	vim.h	/^    short_u	origin_row;$/;"	m	struct:__anon279
origin_start_col	vim.h	/^    short_u	origin_start_col;$/;"	m	struct:__anon279
ospeed	os_mac.h	54;"	d
ospeed	term.c	/^short ospeed;$/;"	v
ospeed	termlib.c	/^short	ospeed;		      \/\/ Baud rate (1-16, 1=300, 16=19200), as in stty$/;"	v
other_sourcing_name	message.c	/^other_sourcing_name(void)$/;"	f	file:
otherfile	buffer.c	/^otherfile(char_u *ffname)$/;"	f
otherfile_buf	buffer.c	/^otherfile_buf($/;"	f	file:
out	regexp.h	/^    nfa_state_T		*out;$/;"	m	struct:nfa_state
out	regexp_nfa.c	/^    Ptrlist	*out;$/;"	m	struct:Frag	file:
out1	regexp.h	/^    nfa_state_T		*out1;$/;"	m	struct:nfa_state
out_buf	term.c	/^static char_u		out_buf[OUT_SIZE + 1];$/;"	v	file:
out_char	term.c	/^out_char(unsigned c)$/;"	f
out_char_nf	term.c	/^out_char_nf(unsigned c)$/;"	f	file:
out_flush	term.c	/^out_flush(void)$/;"	f
out_flush_check	term.c	/^out_flush_check(void)$/;"	f
out_flush_cursor	term.c	/^out_flush_cursor($/;"	f
out_num	os_amiga.c	/^out_num(long n)$/;"	f	file:
out_pos	term.c	/^static int		out_pos = 0;	\/\/ number of chars in out_buf$/;"	v	file:
out_str	term.c	/^out_str(char_u *s)$/;"	f
out_str_cf	term.c	/^out_str_cf(char_u *s)$/;"	f
out_str_nf	term.c	/^out_str_nf(char_u *s)$/;"	f
out_trash	term.c	/^out_trash(void)$/;"	f
outfile	structs.h	/^    char_u	*outfile;$/;"	m	struct:__anon247
outputDeadKey_rePost	gui_w32.c	/^outputDeadKey_rePost(MSG originalMsg)$/;"	f	file:
output_conv	globals.h	/^EXTERN vimconv_T output_conv;			\/\/ type of output conversion$/;"	v
overrideShellWidgetClass	gui_gtk_vms.h	669;"	d
overstrike	structs.h	/^    int		overstrike;	\/\/ Typing mode on the command line.  Shared by$/;"	m	struct:__anon190
owned	vim.h	/^    int		owned;		\/\/ Flag: do we own the selection?$/;"	m	struct:__anon279
p3imp_PyExc_AttributeError	if_python3.c	/^static PyObject *p3imp_PyExc_AttributeError;$/;"	v	file:
p3imp_PyExc_ImportError	if_python3.c	/^static PyObject *p3imp_PyExc_ImportError;$/;"	v	file:
p3imp_PyExc_IndexError	if_python3.c	/^static PyObject *p3imp_PyExc_IndexError;$/;"	v	file:
p3imp_PyExc_KeyError	if_python3.c	/^static PyObject *p3imp_PyExc_KeyError;$/;"	v	file:
p3imp_PyExc_KeyboardInterrupt	if_python3.c	/^static PyObject *p3imp_PyExc_KeyboardInterrupt;$/;"	v	file:
p3imp_PyExc_OverflowError	if_python3.c	/^static PyObject *p3imp_PyExc_OverflowError;$/;"	v	file:
p3imp_PyExc_RuntimeError	if_python3.c	/^static PyObject *p3imp_PyExc_RuntimeError;$/;"	v	file:
p3imp_PyExc_SystemExit	if_python3.c	/^static PyObject *p3imp_PyExc_SystemExit;$/;"	v	file:
p3imp_PyExc_TypeError	if_python3.c	/^static PyObject *p3imp_PyExc_TypeError;$/;"	v	file:
p3imp_PyExc_ValueError	if_python3.c	/^static PyObject *p3imp_PyExc_ValueError;$/;"	v	file:
pClosePseudoConsole	terminal.c	/^HRESULT (WINAPI *pClosePseudoConsole)(HPCON);$/;"	v
pCreatePseudoConsole	terminal.c	/^HRESULT (WINAPI *pCreatePseudoConsole)(COORD, HANDLE, HANDLE, DWORD, HPCON*);$/;"	v
pDacl	os_win32.c	/^    PACL		    pDacl;$/;"	m	struct:my_acl	file:
pDeleteProcThreadAttributeList	terminal.c	/^void (WINAPI *pDeleteProcThreadAttributeList)(LPPROC_THREAD_ATTRIBUTE_LIST);$/;"	v
pDispatchMessage	os_win32.h	204;"	d
pGetConsoleScreenBufferInfoEx	os_win32.c	/^static PfnGetConsoleScreenBufferInfoEx pGetConsoleScreenBufferInfoEx;$/;"	v	file:
pGetFileInformationByHandleEx	iscygpty.c	/^static pfnGetFileInformationByHandleEx pGetFileInformationByHandleEx = NULL;$/;"	v	file:
pGetFileInformationByHandleEx	iscygpty.c	99;"	d	file:
pGetFinalPathNameByHandleW	os_mswin.c	/^static pfnGetFinalPathNameByHandleW pGetFinalPathNameByHandleW = NULL;$/;"	v	file:
pGetMessage	os_win32.h	205;"	d
pImmAssociateContext	gui_w32.c	/^static HIMC (WINAPI *pImmAssociateContext)(HWND, HIMC);$/;"	v	file:
pImmAssociateContext	gui_w32.c	4147;"	d	file:
pImmGetCompositionFontW	gui_w32.c	/^static BOOL (WINAPI *pImmGetCompositionFontW)(HIMC, LPLOGFONTW);$/;"	v	file:
pImmGetCompositionFontW	gui_w32.c	4151;"	d	file:
pImmGetCompositionStringA	gui_w32.c	/^static LONG (WINAPI *pImmGetCompositionStringA)(HIMC, DWORD, LPVOID, DWORD);$/;"	v	file:
pImmGetCompositionStringA	gui_w32.c	4144;"	d	file:
pImmGetCompositionStringW	gui_w32.c	/^static LONG (WINAPI *pImmGetCompositionStringW)(HIMC, DWORD, LPVOID, DWORD);$/;"	v	file:
pImmGetCompositionStringW	gui_w32.c	4145;"	d	file:
pImmGetContext	gui_w32.c	/^static HIMC (WINAPI *pImmGetContext)(HWND);$/;"	v	file:
pImmGetContext	gui_w32.c	4146;"	d	file:
pImmGetConversionStatus	gui_w32.c	/^static BOOL (WINAPI *pImmGetConversionStatus)(HIMC, LPDWORD, LPDWORD);$/;"	v	file:
pImmGetConversionStatus	gui_w32.c	4154;"	d	file:
pImmGetOpenStatus	gui_w32.c	/^static BOOL (WINAPI *pImmGetOpenStatus)(HIMC);$/;"	v	file:
pImmGetOpenStatus	gui_w32.c	4149;"	d	file:
pImmReleaseContext	gui_w32.c	/^static BOOL (WINAPI *pImmReleaseContext)(HWND, HIMC);$/;"	v	file:
pImmReleaseContext	gui_w32.c	4148;"	d	file:
pImmSetCompositionFontW	gui_w32.c	/^static BOOL (WINAPI *pImmSetCompositionFontW)(HIMC, LPLOGFONTW);$/;"	v	file:
pImmSetCompositionFontW	gui_w32.c	4152;"	d	file:
pImmSetCompositionWindow	gui_w32.c	/^static BOOL (WINAPI *pImmSetCompositionWindow)(HIMC, LPCOMPOSITIONFORM);$/;"	v	file:
pImmSetCompositionWindow	gui_w32.c	4153;"	d	file:
pImmSetConversionStatus	gui_w32.c	/^static BOOL (WINAPI *pImmSetConversionStatus)(HIMC, DWORD, DWORD);$/;"	v	file:
pImmSetConversionStatus	gui_w32.c	4155;"	d	file:
pImmSetOpenStatus	gui_w32.c	/^static BOOL (WINAPI *pImmSetOpenStatus)(HIMC, BOOL);$/;"	v	file:
pImmSetOpenStatus	gui_w32.c	4150;"	d	file:
pInitializeProcThreadAttributeList	terminal.c	/^BOOL (WINAPI *pInitializeProcThreadAttributeList)(LPPROC_THREAD_ATTRIBUTE_LIST, DWORD, DWORD, PSIZE_T);$/;"	v
pIsDialogMessage	os_win32.h	206;"	d
pPeekMessage	os_win32.h	207;"	d
pResizePseudoConsole	terminal.c	/^HRESULT (WINAPI *pResizePseudoConsole)(HPCON, COORD);$/;"	v
pSacl	os_win32.c	/^    PACL		    pSacl;$/;"	m	struct:my_acl	file:
pSecurityDescriptor	os_win32.c	/^    PSECURITY_DESCRIPTOR    pSecurityDescriptor;$/;"	m	struct:my_acl	file:
pSetConsoleScreenBufferInfoEx	os_win32.c	/^static PfnSetConsoleScreenBufferInfoEx pSetConsoleScreenBufferInfoEx;$/;"	v	file:
pSidGroup	os_win32.c	/^    PSID		    pSidGroup;$/;"	m	struct:my_acl	file:
pSidOwner	os_win32.c	/^    PSID		    pSidOwner;$/;"	m	struct:my_acl	file:
pUpdateProcThreadAttribute	terminal.c	/^BOOL (WINAPI *pUpdateProcThreadAttribute)(LPPROC_THREAD_ATTRIBUTE_LIST, DWORD, DWORD_PTR, PVOID, SIZE_T, PVOID, PSIZE_T);$/;"	v
p_acd	option.h	/^EXTERN int	p_acd;		\/\/ 'autochdir'$/;"	v
p_ai	option.h	/^EXTERN int	p_ai;		\/\/ 'autoindent'$/;"	v
p_ai_nopaste	optiondefs.h	/^static int	p_ai_nopaste;$/;"	v
p_aleph	option.h	/^EXTERN long	p_aleph;	\/\/ 'aleph'$/;"	v
p_ambw	option.h	/^EXTERN char_u	*p_ambw;	\/\/ 'ambiwidth'$/;"	v
p_ambw_values	optionstr.c	/^static char *(p_ambw_values[]) = {"single", "double", NULL};$/;"	v	file:
p_antialias	option.h	/^EXTERN int	*p_antialias;	\/\/ 'antialias'$/;"	v
p_ar	option.h	/^EXTERN int	p_ar;		\/\/ 'autoread'$/;"	v
p_ari	option.h	/^EXTERN int	p_ari;		\/\/ 'allowrevins'$/;"	v
p_arshape	option.h	/^EXTERN int	p_arshape;	\/\/ 'arabicshape'$/;"	v
p_aw	option.h	/^EXTERN int	p_aw;		\/\/ 'autowrite'$/;"	v
p_awa	option.h	/^EXTERN int	p_awa;		\/\/ 'autowriteall'$/;"	v
p_bdir	option.h	/^EXTERN char_u	*p_bdir;	\/\/ 'backupdir'$/;"	v
p_bdlay	option.h	/^EXTERN long	p_bdlay;	\/\/ 'balloondelay'$/;"	v
p_beval	option.h	/^EXTERN int	p_beval;	\/\/ 'ballooneval'$/;"	v
p_bevalterm	option.h	/^EXTERN int	p_bevalterm;	\/\/ 'balloonevalterm'$/;"	v
p_bex	option.h	/^EXTERN char_u	*p_bex;		\/\/ 'backupext'$/;"	v
p_bexpr	option.h	/^EXTERN char_u	*p_bexpr;$/;"	v
p_bg	option.h	/^EXTERN char_u	*p_bg;		\/\/ 'background'$/;"	v
p_bg_values	optionstr.c	/^static char *(p_bg_values[]) = {"light", "dark", NULL};$/;"	v	file:
p_bh	option.h	/^EXTERN char_u	*p_bh;		\/\/ 'bufhidden'$/;"	v
p_bin	option.h	/^EXTERN int	p_bin;		\/\/ 'binary'$/;"	v
p_bk	option.h	/^EXTERN int	p_bk;		\/\/ 'backup'$/;"	v
p_bkc	option.h	/^EXTERN char_u	*p_bkc;		\/\/ 'backupcopy'$/;"	v
p_bkc_values	optionstr.c	/^static char *(p_bkc_values[]) = {"yes", "auto", "no", "breaksymlink", "breakhardlink", NULL};$/;"	v	file:
p_bl	option.h	/^EXTERN int	p_bl;		\/\/ 'buflisted'$/;"	v
p_bo	option.h	/^EXTERN char_u	*p_bo;		\/\/ 'belloff'$/;"	v
p_bo_values	optionstr.c	/^static char *(p_bo_values[]) = {"all", "backspace", "cursor", "complete",$/;"	v	file:
p_bomb	option.h	/^EXTERN int	p_bomb;		\/\/ 'bomb'$/;"	v
p_breakat	option.h	/^EXTERN char_u	*p_breakat;	\/\/ 'breakat'$/;"	v
p_bs	option.h	/^EXTERN char_u	*p_bs;		\/\/ 'backspace'$/;"	v
p_bs_values	optionstr.c	/^static char *(p_bs_values[]) = {"indent", "eol", "start", NULL};$/;"	v	file:
p_bsdir	option.h	/^EXTERN char_u	*p_bsdir;	\/\/ 'browsedir'$/;"	v
p_bsdir_values	optionstr.c	/^static char *(p_bsdir_values[]) = {"current", "last", "buffer", NULL};$/;"	v	file:
p_bsk	option.h	/^EXTERN char_u	*p_bsk;		\/\/ 'backupskip'$/;"	v
p_bt	option.h	/^EXTERN char_u	*p_bt;		\/\/ 'buftype'$/;"	v
p_bufhidden_values	optionstr.c	/^static char *(p_bufhidden_values[]) = {"hide", "unload", "delete", "wipe", NULL};$/;"	v	file:
p_buftype_values	optionstr.c	/^static char *(p_buftype_values[]) = {"nofile", "nowrite", "quickfix", "help", "terminal", "acwrite", "prompt", "popup", NULL};$/;"	v	file:
p_cb	option.h	/^EXTERN char_u	*p_cb;		\/\/ 'clipboard'$/;"	v
p_cc	option.h	/^EXTERN char_u   *p_cc;		\/\/ 'colorcolumn'$/;"	v
p_cc_cols	option.h	/^EXTERN int      p_cc_cols[256]; \/\/ array for 'colorcolumn' columns$/;"	v
p_ccv	option.h	/^EXTERN char_u	*p_ccv;		\/\/ 'charconvert'$/;"	v
p_cdpath	option.h	/^EXTERN char_u	*p_cdpath;	\/\/ 'cdpath'$/;"	v
p_cedit	option.h	/^EXTERN char_u	*p_cedit;	\/\/ 'cedit'$/;"	v
p_cfu	option.h	/^EXTERN char_u	*p_cfu;		\/\/ 'completefunc'$/;"	v
p_ch	option.h	/^EXTERN long	p_ch;		\/\/ 'cmdheight'$/;"	v
p_ci	option.h	/^EXTERN int	p_ci;		\/\/ 'copyindent'$/;"	v
p_cin	option.h	/^EXTERN int	p_cin;		\/\/ 'cindent'$/;"	v
p_cink	option.h	/^EXTERN char_u	*p_cink;	\/\/ 'cinkeys'$/;"	v
p_cino	option.h	/^EXTERN char_u	*p_cino;	\/\/ 'cinoptions'$/;"	v
p_cinw	option.h	/^EXTERN char_u	*p_cinw;	\/\/ 'cinwords'$/;"	v
p_cm	option.h	/^EXTERN char_u	*p_cm;		\/\/ 'cryptmethod'$/;"	v
p_cm_values	optionstr.c	/^static char *(p_cm_values[]) = {"zip", "blowfish", "blowfish2", NULL};$/;"	v	file:
p_cmp	option.h	/^EXTERN char_u	*p_cmp;		\/\/ 'casemap'$/;"	v
p_cmp_values	optionstr.c	/^static char *(p_cmp_values[]) = {"internal", "keepascii", NULL};$/;"	v	file:
p_cms	option.h	/^EXTERN char_u	*p_cms;		\/\/ 'commentstring'$/;"	v
p_com	option.h	/^EXTERN char_u	*p_com;		\/\/ 'comments'$/;"	v
p_confirm	option.h	/^EXTERN int	p_confirm;	\/\/ 'confirm'$/;"	v
p_cot	option.h	/^EXTERN char_u	*p_cot;		\/\/ 'completeopt'$/;"	v
p_cot_values	optionstr.c	/^static char *(p_cot_values[]) = {"menu", "menuone", "longest", "preview", "popup", "popuphidden", "noinsert", "noselect", NULL};$/;"	v	file:
p_cp	option.h	/^EXTERN int	p_cp;		\/\/ 'compatible'$/;"	v
p_cpo	option.h	/^EXTERN char_u	*p_cpo;		\/\/ 'cpoptions'$/;"	v
p_cpp	option.h	/^EXTERN char_u	*p_cpp;		\/\/ 'completepopup'$/;"	v
p_cpt	option.h	/^EXTERN char_u	*p_cpt;		\/\/ 'complete'$/;"	v
p_csl	option.h	/^EXTERN char_u	*p_csl;		\/\/ 'completeslash'$/;"	v
p_csl_values	optionstr.c	/^static char *(p_csl_values[]) = {"slash", "backslash", NULL};$/;"	v	file:
p_cspc	option.h	/^EXTERN long	p_cspc;		\/\/ 'cscopepathcomp'$/;"	v
p_csprg	option.h	/^EXTERN char_u	*p_csprg;	\/\/ 'cscopeprg'$/;"	v
p_csqf	option.h	/^EXTERN char_u	*p_csqf;	\/\/ 'cscopequickfix'$/;"	v
p_csre	option.h	/^EXTERN int	p_csre;		\/\/ 'cscoperelative'$/;"	v
p_cst	option.h	/^EXTERN int	p_cst;		\/\/ 'cscopetag'$/;"	v
p_csto	option.h	/^EXTERN long	p_csto;		\/\/ 'cscopetagorder'$/;"	v
p_csverbose	option.h	/^EXTERN int	p_csverbose;	\/\/ 'cscopeverbose'$/;"	v
p_cwh	option.h	/^EXTERN long	p_cwh;		\/\/ 'cmdwinheight'$/;"	v
p_debug	option.h	/^EXTERN char_u	*p_debug;	\/\/ 'debug'$/;"	v
p_debug_values	optionstr.c	/^static char *(p_debug_values[]) = {"msg", "throw", "beep", NULL};$/;"	v	file:
p_deco	option.h	/^EXTERN int	p_deco;		\/\/ 'delcombine'$/;"	v
p_def	option.h	/^EXTERN char_u	*p_def;		\/\/ 'define'$/;"	v
p_dex	option.h	/^EXTERN char_u	*p_dex;		\/\/ 'diffexpr'$/;"	v
p_dg	option.h	/^EXTERN int	p_dg;		\/\/ 'digraph'$/;"	v
p_dict	option.h	/^EXTERN char_u	*p_dict;	\/\/ 'dictionary'$/;"	v
p_dip	option.h	/^EXTERN char_u	*p_dip;		\/\/ 'diffopt'$/;"	v
p_dir	option.h	/^EXTERN char_u	*p_dir;		\/\/ 'directory'$/;"	v
p_dy	option.h	/^EXTERN char_u	*p_dy;		\/\/ 'display'$/;"	v
p_dy_values	optionstr.c	/^static char *(p_dy_values[]) = {"lastline", "truncate", "uhex", NULL};$/;"	v	file:
p_ea	option.h	/^EXTERN int	p_ea;		\/\/ 'equalalways'$/;"	v
p_ead	option.h	/^EXTERN char_u	*p_ead;		\/\/ 'eadirection'$/;"	v
p_ead_values	optionstr.c	/^static char *(p_ead_values[]) = {"both", "ver", "hor", NULL};$/;"	v	file:
p_eb	option.h	/^EXTERN int	p_eb;		\/\/ 'errorbells'$/;"	v
p_ed	option.h	/^EXTERN int	p_ed;		\/\/ 'edcompatible'$/;"	v
p_ef	option.h	/^EXTERN char_u	*p_ef;		\/\/ 'errorfile'$/;"	v
p_efm	option.h	/^EXTERN char_u	*p_efm;		\/\/ 'errorformat'$/;"	v
p_ei	option.h	/^EXTERN char_u	*p_ei;		\/\/ 'eventignore'$/;"	v
p_ek	option.h	/^EXTERN int	p_ek;		\/\/ 'esckeys'$/;"	v
p_emoji	option.h	/^EXTERN char_u	*p_emoji;	\/\/ 'emoji'$/;"	v
p_enc	option.h	/^EXTERN char_u	*p_enc;		\/\/ 'encoding'$/;"	v
p_eol	option.h	/^EXTERN int	p_eol;		\/\/ 'endofline'$/;"	v
p_ep	option.h	/^EXTERN char_u	*p_ep;		\/\/ 'equalprg'$/;"	v
p_et	option.h	/^EXTERN int	p_et;		\/\/ 'expandtab'$/;"	v
p_et_nobin	optiondefs.h	/^static int	p_et_nobin;$/;"	v
p_et_nopaste	optiondefs.h	/^static int	p_et_nopaste;$/;"	v
p_exrc	option.h	/^EXTERN int	p_exrc;		\/\/ 'exrc'$/;"	v
p_fcl	option.h	/^EXTERN char_u	*p_fcl;		\/\/ 'foldclose'$/;"	v
p_fcl_values	optionstr.c	/^static char *(p_fcl_values[]) = {"all", NULL};$/;"	v	file:
p_fcs	option.h	/^EXTERN char_u	*p_fcs;		\/\/ 'fillchar'$/;"	v
p_fdls	option.h	/^EXTERN long	p_fdls;		\/\/ 'foldlevelstart'$/;"	v
p_fdm_values	optionstr.c	/^static char *(p_fdm_values[]) = {"manual", "expr", "marker", "indent", "syntax",$/;"	v	file:
p_fdo	option.h	/^EXTERN char_u	*p_fdo;		\/\/ 'foldopen'$/;"	v
p_fdo_values	optionstr.c	/^static char *(p_fdo_values[]) = {"all", "block", "hor", "mark", "percent",$/;"	v	file:
p_fenc	option.h	/^EXTERN char_u	*p_fenc;	\/\/ 'fileencoding'$/;"	v
p_fencs	option.h	/^EXTERN char_u	*p_fencs;	\/\/ 'fileencodings'$/;"	v
p_fex	option.h	/^EXTERN char_u	*p_fex;		\/\/ 'formatexpr'$/;"	v
p_ff	option.h	/^EXTERN char_u	*p_ff;		\/\/ 'fileformat'$/;"	v
p_ff_values	optionstr.c	/^static char *(p_ff_values[]) = {FF_UNIX, FF_DOS, FF_MAC, NULL};$/;"	v	file:
p_ffs	option.h	/^EXTERN char_u	*p_ffs;		\/\/ 'fileformats'$/;"	v
p_fic	option.h	/^EXTERN long	p_fic;		\/\/ 'fileignorecase'$/;"	v
p_fixeol	option.h	/^EXTERN int	p_fixeol;	\/\/ 'fixendofline'$/;"	v
p_flp	option.h	/^EXTERN char_u	*p_flp;		\/\/ 'formatlistpat'$/;"	v
p_fo	option.h	/^EXTERN char_u	*p_fo;		\/\/ 'formatoptions'$/;"	v
p_fp	option.h	/^EXTERN char_u	*p_fp;		\/\/ 'formatprg'$/;"	v
p_fs	option.h	/^EXTERN int	p_fs;		\/\/ 'fsync'$/;"	v
p_ft	option.h	/^EXTERN char_u	*p_ft;		\/\/ 'filetype'$/;"	v
p_gd	option.h	/^EXTERN int	p_gd;		\/\/ 'gdefault'$/;"	v
p_gefm	option.h	/^EXTERN char_u	*p_gefm;	\/\/ 'grepformat'$/;"	v
p_ghr	option.h	/^EXTERN long	p_ghr;		\/\/ 'guiheadroom'$/;"	v
p_go	option.h	/^EXTERN char_u	*p_go;		\/\/ 'guioptions'$/;"	v
p_gp	option.h	/^EXTERN char_u	*p_gp;		\/\/ 'grepprg'$/;"	v
p_gtl	option.h	/^EXTERN char_u	*p_gtl;		\/\/ 'guitablabel'$/;"	v
p_gtt	option.h	/^EXTERN char_u	*p_gtt;		\/\/ 'guitabtooltip'$/;"	v
p_guicursor	option.h	/^EXTERN char_u	*p_guicursor;	\/\/ 'guicursor'$/;"	v
p_guifont	option.h	/^EXTERN char_u	*p_guifont;	\/\/ 'guifont'$/;"	v
p_guifontset	option.h	/^EXTERN char_u	*p_guifontset;	\/\/ 'guifontset'$/;"	v
p_guifontwide	option.h	/^EXTERN char_u	*p_guifontwide;	\/\/ 'guifontwide'$/;"	v
p_guipty	option.h	/^EXTERN int	p_guipty;	\/\/ 'guipty'$/;"	v
p_header	option.h	/^EXTERN char_u	*p_header;	\/\/ 'printheader'$/;"	v
p_hf	option.h	/^EXTERN char_u	*p_hf;		\/\/ 'helpfile'$/;"	v
p_hh	option.h	/^EXTERN long	p_hh;		\/\/ 'helpheight'$/;"	v
p_hi	option.h	/^EXTERN long	p_hi;		\/\/ 'history'$/;"	v
p_hid	option.h	/^EXTERN int	p_hid;		\/\/ 'hidden'$/;"	v
p_hkmap	option.h	/^EXTERN int	p_hkmap;	\/\/ 'hkmap'$/;"	v
p_hkmapp	option.h	/^EXTERN int	p_hkmapp;	\/\/ 'hkmapp'$/;"	v
p_hl	option.h	/^EXTERN char_u	*p_hl;		\/\/ 'highlight'$/;"	v
p_hlg	option.h	/^EXTERN char_u	*p_hlg;		\/\/ 'helplang'$/;"	v
p_hls	option.h	/^EXTERN int	p_hls;		\/\/ 'hlsearch'$/;"	v
p_ic	option.h	/^EXTERN int	p_ic;		\/\/ 'ignorecase'$/;"	v
p_icon	option.h	/^EXTERN int	p_icon;		\/\/ 'icon'$/;"	v
p_iconstring	option.h	/^EXTERN char_u	*p_iconstring;	\/\/ 'iconstring'$/;"	v
p_im	option.h	/^EXTERN int	p_im;		\/\/ 'insertmode'$/;"	v
p_imaf	option.h	/^EXTERN char_u	*p_imaf;	\/\/ 'imactivatefunc'$/;"	v
p_imak	option.h	/^EXTERN char_u	*p_imak;	\/\/ 'imactivatekey'$/;"	v
p_imcmdline	option.h	/^EXTERN int	p_imcmdline;	\/\/ 'imcmdline'$/;"	v
p_imdisable	option.h	/^EXTERN int	p_imdisable;	\/\/ 'imdisable'$/;"	v
p_iminsert	option.h	/^EXTERN long	p_iminsert;	\/\/ 'iminsert'$/;"	v
p_imsearch	option.h	/^EXTERN long	p_imsearch;	\/\/ 'imsearch'$/;"	v
p_imsf	option.h	/^EXTERN char_u	*p_imsf;	\/\/ 'imstatusfunc'$/;"	v
p_imst	option.h	/^EXTERN long	p_imst;		\/\/ 'imstyle'$/;"	v
p_inc	option.h	/^EXTERN char_u	*p_inc;$/;"	v
p_inde	option.h	/^EXTERN char_u	*p_inde;	\/\/ 'indentexpr'$/;"	v
p_indk	option.h	/^EXTERN char_u	*p_indk;	\/\/ 'indentkeys'$/;"	v
p_inex	option.h	/^EXTERN char_u	*p_inex;	\/\/ 'includeexpr'$/;"	v
p_inf	option.h	/^EXTERN int	p_inf;		\/\/ 'infercase'$/;"	v
p_is	option.h	/^EXTERN int	p_is;		\/\/ 'incsearch'$/;"	v
p_isf	option.h	/^EXTERN char_u	*p_isf;		\/\/ 'isfname'$/;"	v
p_isi	option.h	/^EXTERN char_u	*p_isi;		\/\/ 'isident'$/;"	v
p_isk	option.h	/^EXTERN char_u	*p_isk;		\/\/ 'iskeyword'$/;"	v
p_isp	option.h	/^EXTERN char_u	*p_isp;		\/\/ 'isprint'$/;"	v
p_js	option.h	/^EXTERN int	p_js;		\/\/ 'joinspaces'$/;"	v
p_key	option.h	/^EXTERN char_u	*p_key;		\/\/ 'key'$/;"	v
p_keymap	option.h	/^EXTERN char_u	*p_keymap;	\/\/ 'keymap'$/;"	v
p_km	option.h	/^EXTERN char_u	*p_km;		\/\/ 'keymodel'$/;"	v
p_km_values	optionstr.c	/^static char *(p_km_values[]) = {"startsel", "stopsel", NULL};$/;"	v	file:
p_kp	option.h	/^EXTERN char_u	*p_kp;		\/\/ 'keywordprg'$/;"	v
p_langmap	option.h	/^EXTERN char_u	*p_langmap;	\/\/ 'langmap'$/;"	v
p_lcs	option.h	/^EXTERN char_u	*p_lcs;		\/\/ 'listchars'$/;"	v
p_li	quickfix.c	/^    listitem_T	*p_li;$/;"	m	struct:__anon89	file:
p_linespace	option.h	/^EXTERN long	p_linespace;	\/\/ 'linespace'$/;"	v
p_lisp	option.h	/^EXTERN int	p_lisp;		\/\/ 'lisp'$/;"	v
p_lispwords	option.h	/^EXTERN char_u	*p_lispwords;	\/\/ 'lispwords'$/;"	v
p_lm	option.h	/^EXTERN char_u	*p_lm;		\/\/ 'langmenu'$/;"	v
p_lnr	option.h	/^EXTERN int	p_lnr;		\/\/ 'langnoremap'$/;"	v
p_lpl	option.h	/^EXTERN int	p_lpl;		\/\/ 'loadplugins'$/;"	v
p_lrm	option.h	/^EXTERN int	p_lrm;		\/\/ 'langremap'$/;"	v
p_ls	option.h	/^EXTERN long	p_ls;		\/\/ 'laststatus'$/;"	v
p_luadll	option.h	/^EXTERN char_u	*p_luadll;	\/\/ 'luadll'$/;"	v
p_lz	option.h	/^EXTERN int	p_lz;		\/\/ 'lazyredraw'$/;"	v
p_ma	option.h	/^EXTERN int	p_ma;		\/\/ 'modifiable'$/;"	v
p_macatsui	option.h	/^EXTERN int	p_macatsui;	\/\/ 'macatsui'$/;"	v
p_macatsui_last	gui_mac.c	/^int	    p_macatsui_last;$/;"	v
p_magic	option.h	/^EXTERN int	p_magic;	\/\/ 'magic'$/;"	v
p_mat	option.h	/^EXTERN long	p_mat;		\/\/ 'matchtime'$/;"	v
p_mco	option.h	/^EXTERN long	p_mco;		\/\/ 'maxcombine'$/;"	v
p_mef	option.h	/^EXTERN char_u	*p_mef;		\/\/ 'makeef'$/;"	v
p_menc	option.h	/^EXTERN char_u	*p_menc;	\/\/ 'makeencoding'$/;"	v
p_mfd	option.h	/^EXTERN long	p_mfd;		\/\/ 'maxfuncdepth'$/;"	v
p_mh	option.h	/^EXTERN int	p_mh;		\/\/ 'mousehide'$/;"	v
p_mis	option.h	/^EXTERN long	p_mis;		\/\/ 'menuitems'$/;"	v
p_ml	option.h	/^EXTERN int	p_ml;		\/\/ 'modeline'$/;"	v
p_ml_nobin	optiondefs.h	/^static int	p_ml_nobin;$/;"	v
p_mle	option.h	/^EXTERN long	p_mle;		\/\/ 'modelineexpr'$/;"	v
p_mls	option.h	/^EXTERN long	p_mls;		\/\/ 'modelines'$/;"	v
p_mm	option.h	/^EXTERN long	p_mm;		\/\/ 'maxmem'$/;"	v
p_mmd	option.h	/^EXTERN long	p_mmd;		\/\/ 'maxmapdepth'$/;"	v
p_mmp	option.h	/^EXTERN long	p_mmp;		\/\/ 'maxmempattern'$/;"	v
p_mmt	option.h	/^EXTERN long	p_mmt;		\/\/ 'maxmemtot'$/;"	v
p_mod	option.h	/^EXTERN int	p_mod;		\/\/ 'modified'$/;"	v
p_more	option.h	/^EXTERN int	p_more;		\/\/ 'more'$/;"	v
p_mouse	option.h	/^EXTERN char_u	*p_mouse;	\/\/ 'mouse'$/;"	v
p_mousef	option.h	/^EXTERN int	p_mousef;	\/\/ 'mousefocus'$/;"	v
p_mousem	option.h	/^EXTERN char_u	*p_mousem;	\/\/ 'mousemodel'$/;"	v
p_mousem_values	optionstr.c	/^static char *(p_mousem_values[]) = {"extend", "popup", "popup_setpos", "mac", NULL};$/;"	v	file:
p_mouseshape	option.h	/^EXTERN char_u	*p_mouseshape;	\/\/ 'mouseshape'$/;"	v
p_mouset	option.h	/^EXTERN long	p_mouset;	\/\/ 'mousetime'$/;"	v
p_mp	option.h	/^EXTERN char_u	*p_mp;		\/\/ 'makeprg'$/;"	v
p_mps	option.h	/^EXTERN char_u	*p_mps;		\/\/ 'matchpairs'$/;"	v
p_msm	option.h	/^EXTERN char_u	*p_msm;		\/\/ 'mkspellmem'$/;"	v
p_mzq	option.h	/^EXTERN long	p_mzq;		\/\/ 'mzquantum$/;"	v
p_mzschemedll	option.h	/^EXTERN char_u	*p_mzschemedll;	\/\/ 'mzschemedll'$/;"	v
p_mzschemegcdll	option.h	/^EXTERN char_u	*p_mzschemegcdll; \/\/ 'mzschemegcdll'$/;"	v
p_nf	option.h	/^EXTERN char_u	*p_nf;		\/\/ 'nrformats'$/;"	v
p_nf_values	optionstr.c	/^static char *(p_nf_values[]) = {"bin", "octal", "hex", "alpha", NULL};$/;"	v	file:
p_odev	option.h	/^EXTERN int	p_odev;		\/\/ 'opendevice'$/;"	v
p_ofu	option.h	/^EXTERN char_u	*p_ofu;		\/\/ 'omnifunc'$/;"	v
p_opfunc	option.h	/^EXTERN char_u	*p_opfunc;	\/\/ 'operatorfunc'$/;"	v
p_para	option.h	/^EXTERN char_u	*p_para;	\/\/ 'paragraphs'$/;"	v
p_paste	option.h	/^EXTERN int	p_paste;	\/\/ 'paste'$/;"	v
p_path	option.h	/^EXTERN char_u	*p_path;	\/\/ 'path'$/;"	v
p_pdev	option.h	/^EXTERN char_u	*p_pdev;	\/\/ 'printdevice'$/;"	v
p_penc	option.h	/^EXTERN char_u	*p_penc;	\/\/ 'printencoding'$/;"	v
p_perldll	option.h	/^EXTERN char_u	*p_perldll;	\/\/ 'perldll'$/;"	v
p_pex	option.h	/^EXTERN char_u	*p_pex;		\/\/ 'patchexpr'$/;"	v
p_pexpr	option.h	/^EXTERN char_u	*p_pexpr;	\/\/ 'printexpr'$/;"	v
p_pfn	option.h	/^EXTERN char_u	*p_pfn;		\/\/ 'printfont'$/;"	v
p_ph	option.h	/^EXTERN long	p_ph;		\/\/ 'pumheight'$/;"	v
p_pi	option.h	/^EXTERN int	p_pi;		\/\/ 'preserveindent'$/;"	v
p_pm	option.h	/^EXTERN char_u	*p_pm;		\/\/ 'patchmode'$/;"	v
p_pmcs	option.h	/^EXTERN char_u	*p_pmcs;	\/\/ 'printmbcharset'$/;"	v
p_pmfn	option.h	/^EXTERN char_u	*p_pmfn;	\/\/ 'printmbfont'$/;"	v
p_popt	option.h	/^EXTERN char_u	*p_popt;	\/\/ 'printoptions'$/;"	v
p_pp	option.h	/^EXTERN char_u	*p_pp;		\/\/ 'packpath'$/;"	v
p_prompt	option.h	/^EXTERN int	p_prompt;	\/\/ 'prompt'$/;"	v
p_pt	option.h	/^EXTERN char_u	*p_pt;		\/\/ 'pastetoggle'$/;"	v
p_pvh	option.h	/^EXTERN long	p_pvh;		\/\/ 'previewheight'$/;"	v
p_pvp	option.h	/^EXTERN char_u	*p_pvp;		\/\/ 'previewpopup'$/;"	v
p_pw	option.h	/^EXTERN long	p_pw;		\/\/ 'pumwidth'$/;"	v
p_py3dll	option.h	/^EXTERN char_u	*p_py3dll;	\/\/ 'pythonthreedll'$/;"	v
p_py3home	option.h	/^EXTERN char_u	*p_py3home;	\/\/ 'pythonthreehome'$/;"	v
p_pydll	option.h	/^EXTERN char_u	*p_pydll;	\/\/ 'pythondll'$/;"	v
p_pyhome	option.h	/^EXTERN char_u	*p_pyhome;	\/\/ 'pythonhome'$/;"	v
p_pyx	option.h	/^EXTERN long	p_pyx;		\/\/ 'pyxversion'$/;"	v
p_qe	option.h	/^EXTERN char_u	*p_qe;		\/\/ 'quoteescape'$/;"	v
p_rdt	option.h	/^EXTERN long	p_rdt;		\/\/ 'redrawtime'$/;"	v
p_re	option.h	/^EXTERN long	p_re;		\/\/ 'regexpengine'$/;"	v
p_remap	option.h	/^EXTERN int	p_remap;	\/\/ 'remap'$/;"	v
p_report	option.h	/^EXTERN long	p_report;	\/\/ 'report'$/;"	v
p_ri	option.h	/^EXTERN int	p_ri;		\/\/ 'revins'$/;"	v
p_ro	option.h	/^EXTERN int	p_ro;		\/\/ 'readonly'$/;"	v
p_rop	option.h	/^EXTERN char_u	*p_rop;		\/\/ 'renderoptions'$/;"	v
p_rs	option.h	/^EXTERN int	p_rs;		\/\/ 'restorescreen'$/;"	v
p_rtp	option.h	/^EXTERN char_u	*p_rtp;		\/\/ 'runtimepath'$/;"	v
p_ru	option.h	/^EXTERN int	p_ru;		\/\/ 'ruler'$/;"	v
p_rubydll	option.h	/^EXTERN char_u	*p_rubydll;	\/\/ 'rubydll'$/;"	v
p_ruf	option.h	/^EXTERN char_u	*p_ruf;		\/\/ 'rulerformat'$/;"	v
p_sb	option.h	/^EXTERN int	p_sb;		\/\/ 'splitbelow'$/;"	v
p_sbo	option.h	/^EXTERN char_u	*p_sbo;		\/\/ 'scrollopt'$/;"	v
p_sbr	option.h	/^EXTERN char_u	*p_sbr;		\/\/ 'showbreak'$/;"	v
p_sc	option.h	/^EXTERN int	p_sc;		\/\/ 'showcmd'$/;"	v
p_scbopt_values	optionstr.c	/^static char *(p_scbopt_values[]) = {"ver", "hor", "jump", NULL};$/;"	v	file:
p_scf	option.h	/^EXTERN int	p_scf;		\/\/ 'scrollfocus'$/;"	v
p_scl	option.h	/^EXTERN char_u  *p_scl;		\/\/ signcolumn$/;"	v
p_scl_values	optionstr.c	/^static char *(p_scl_values[]) = {"yes", "no", "auto", "number", NULL};$/;"	v	file:
p_scs	option.h	/^EXTERN int	p_scs;		\/\/ 'smartcase'$/;"	v
p_sections	option.h	/^EXTERN char_u	*p_sections;	\/\/ 'sections'$/;"	v
p_secure	option.h	/^EXTERN int	p_secure;	\/\/ 'secure'$/;"	v
p_sel	option.h	/^EXTERN char_u	*p_sel;		\/\/ 'selection'$/;"	v
p_sel_values	optionstr.c	/^static char *(p_sel_values[]) = {"inclusive", "exclusive", "old", NULL};$/;"	v	file:
p_sft	option.h	/^EXTERN int	p_sft;		\/\/ 'showfulltag'$/;"	v
p_sh	option.h	/^EXTERN char_u	*p_sh;		\/\/ 'shell'$/;"	v
p_shcf	option.h	/^EXTERN char_u	*p_shcf;	\/\/ 'shellcmdflag'$/;"	v
p_shm	option.h	/^EXTERN char_u	*p_shm;		\/\/ 'shortmess'$/;"	v
p_shq	option.h	/^EXTERN char_u	*p_shq;		\/\/ 'shellquote'$/;"	v
p_si	option.h	/^EXTERN int	p_si;		\/\/ 'smartindent'$/;"	v
p_siso	option.h	/^EXTERN long	p_siso;		\/\/ 'sidescrolloff'$/;"	v
p_sj	option.h	/^EXTERN long	p_sj;		\/\/ 'scrolljump'$/;"	v
p_slm	option.h	/^EXTERN char_u	*p_slm;		\/\/ 'selectmode'$/;"	v
p_slm_values	optionstr.c	/^static char *(p_slm_values[]) = {"mouse", "key", "cmd", NULL};$/;"	v	file:
p_sm	option.h	/^EXTERN int	p_sm;		\/\/ 'showmatch'$/;"	v
p_smc	option.h	/^EXTERN long	p_smc;		\/\/ 'synmaxcol'$/;"	v
p_smd	option.h	/^EXTERN int	p_smd;		\/\/ 'showmode'$/;"	v
p_sn	option.h	/^EXTERN int	p_sn;		\/\/ 'shortname'$/;"	v
p_so	option.h	/^EXTERN long	p_so;		\/\/ 'scrolloff'$/;"	v
p_sol	option.h	/^EXTERN int	p_sol;		\/\/ 'startofline'$/;"	v
p_sp	option.h	/^EXTERN char_u	*p_sp;		\/\/ 'shellpipe'$/;"	v
p_spc	option.h	/^EXTERN char_u	*p_spc;		\/\/ 'spellcapcheck'$/;"	v
p_spf	option.h	/^EXTERN char_u	*p_spf;		\/\/ 'spellfile'$/;"	v
p_spl	option.h	/^EXTERN char_u	*p_spl;		\/\/ 'spelllang'$/;"	v
p_spr	option.h	/^EXTERN int	p_spr;		\/\/ 'splitright'$/;"	v
p_sps	option.h	/^EXTERN char_u	*p_sps;		\/\/ 'spellsuggest'$/;"	v
p_sr	option.h	/^EXTERN int	p_sr;		\/\/ 'shiftround'$/;"	v
p_srr	option.h	/^EXTERN char_u	*p_srr;		\/\/ 'shellredir'$/;"	v
p_ss	option.h	/^EXTERN long	p_ss;		\/\/ 'sidescroll'$/;"	v
p_ssl	option.h	/^EXTERN int	p_ssl;		\/\/ 'shellslash'$/;"	v
p_ssop	option.h	/^EXTERN char_u	*p_ssop;	\/\/ 'sessionoptions'$/;"	v
p_ssop_values	optionstr.c	/^static char *(p_ssop_values[]) = {"buffers", "winpos", "resize", "winsize",$/;"	v	file:
p_st	option.h	/^EXTERN long	p_st;		\/\/ 'shelltype'$/;"	v
p_sta	option.h	/^EXTERN int	p_sta;		\/\/ 'smarttab'$/;"	v
p_stal	option.h	/^EXTERN long	p_stal;		\/\/ 'showtabline'$/;"	v
p_stl	option.h	/^EXTERN char_u	*p_stl;		\/\/ 'statusline'$/;"	v
p_stmp	option.h	/^EXTERN int	p_stmp;		\/\/ 'shelltemp'$/;"	v
p_str	quickfix.c	/^    char_u	*p_str;$/;"	m	struct:__anon89	file:
p_sts	option.h	/^EXTERN long	p_sts;		\/\/ 'softtabstop'$/;"	v
p_sts_nopaste	optiondefs.h	/^static long	p_sts_nopaste;$/;"	v
p_su	option.h	/^EXTERN char_u	*p_su;		\/\/ 'suffixes'$/;"	v
p_sua	option.h	/^EXTERN char_u	*p_sua;		\/\/ 'suffixesadd'$/;"	v
p_sw	option.h	/^EXTERN long	p_sw;		\/\/ 'shiftwidth'$/;"	v
p_swb	option.h	/^EXTERN char_u	*p_swb;		\/\/ 'switchbuf'$/;"	v
p_swb_values	optionstr.c	/^static char *(p_swb_values[]) = {"useopen", "usetab", "split", "newtab", "vsplit", "uselast", NULL};$/;"	v	file:
p_swf	option.h	/^EXTERN int	p_swf;		\/\/ 'swapfile'$/;"	v
p_sws	option.h	/^EXTERN char_u	*p_sws;		\/\/ 'swapsync'$/;"	v
p_sxe	option.h	/^EXTERN char_u	*p_sxe;		\/\/ 'shellxescape'$/;"	v
p_sxq	option.h	/^EXTERN char_u	*p_sxq;		\/\/ 'shellxquote'$/;"	v
p_syn	option.h	/^EXTERN char_u	*p_syn;		\/\/ 'syntax'$/;"	v
p_ta	option.h	/^EXTERN int	p_ta;		\/\/ 'textauto'$/;"	v
p_tags	option.h	/^EXTERN char_u	*p_tags;	\/\/ 'tags'$/;"	v
p_tal	option.h	/^EXTERN char_u	*p_tal;		\/\/ 'tabline'$/;"	v
p_tbi	option.h	/^EXTERN int	p_tbi;		\/\/ 'ttybuiltin'$/;"	v
p_tbidi	option.h	/^EXTERN int	p_tbidi;	\/\/ 'termbidi'$/;"	v
p_tbis	option.h	/^EXTERN char_u	*p_tbis;	\/\/ 'toolbariconsize'$/;"	v
p_tbis_values	optionstr.c	/^static char *(p_tbis_values[]) = {"tiny", "small", "medium", "large", "huge", "giant", NULL};$/;"	v	file:
p_tbs	option.h	/^EXTERN int	p_tbs;		\/\/ 'tagbsearch'$/;"	v
p_tc	option.h	/^EXTERN char_u	*p_tc;		\/\/ 'tagcase'$/;"	v
p_tc_values	optionstr.c	/^static char *(p_tc_values[]) = {"followic", "ignore", "match", "followscs", "smart", NULL};$/;"	v	file:
p_tcldll	option.h	/^EXTERN char_u	*p_tcldll;	\/\/ 'tcldll'$/;"	v
p_tenc	option.h	/^EXTERN char_u	*p_tenc;	\/\/ 'termencoding'$/;"	v
p_term	optiondefs.h	2921;"	d
p_terse	option.h	/^EXTERN int	p_terse;	\/\/ 'terse'$/;"	v
p_tf	option.h	/^EXTERN int	p_tf;		\/\/ 'ttyfast'$/;"	v
p_tfu	option.h	/^EXTERN char_u	*p_tfu;		\/\/ 'tagfunc'$/;"	v
p_tgc	option.h	/^EXTERN int	p_tgc;		\/\/ 'termguicolors'$/;"	v
p_tgst	option.h	/^EXTERN int	p_tgst;		\/\/ 'tagstack'$/;"	v
p_timeout	option.h	/^EXTERN int	p_timeout;	\/\/ 'timeout'$/;"	v
p_title	option.h	/^EXTERN int	p_title;	\/\/ 'title'$/;"	v
p_titlelen	option.h	/^EXTERN long	p_titlelen;	\/\/ 'titlelen'$/;"	v
p_titleold	option.h	/^EXTERN char_u	*p_titleold;	\/\/ 'titleold'$/;"	v
p_titlestring	option.h	/^EXTERN char_u	*p_titlestring;	\/\/ 'titlestring'$/;"	v
p_tl	option.h	/^EXTERN long	p_tl;		\/\/ 'taglength'$/;"	v
p_tm	option.h	/^EXTERN long	p_tm;		\/\/ 'timeoutlen'$/;"	v
p_to	option.h	/^EXTERN int	p_to;		\/\/ 'tildeop'$/;"	v
p_toolbar	option.h	/^EXTERN char_u	*p_toolbar;	\/\/ 'toolbar'$/;"	v
p_toolbar_values	optionstr.c	/^static char *(p_toolbar_values[]) = {"text", "icons", "tooltips", "horiz", NULL};$/;"	v	file:
p_tpm	option.h	/^EXTERN long	p_tpm;		\/\/ 'tabpagemax'$/;"	v
p_tr	option.h	/^EXTERN int	p_tr;		\/\/ 'tagrelative'$/;"	v
p_ts	option.h	/^EXTERN long	p_ts;		\/\/ 'tabstop'$/;"	v
p_tsr	option.h	/^EXTERN char_u	*p_tsr;		\/\/ 'thesaurus'$/;"	v
p_ttimeout	option.h	/^EXTERN int	p_ttimeout;	\/\/ 'ttimeout'$/;"	v
p_ttm	option.h	/^EXTERN long	p_ttm;		\/\/ 'ttimeoutlen'$/;"	v
p_ttym	option.h	/^EXTERN char_u	*p_ttym;	\/\/ 'ttymouse'$/;"	v
p_ttym_values	optionstr.c	/^static char *(p_ttym_values[]) = {"xterm", "xterm2", "dec", "netterm", "jsbterm", "pterm", "urxvt", "sgr", NULL};$/;"	v	file:
p_ttyscroll	option.h	/^EXTERN long	p_ttyscroll;	\/\/ 'ttyscroll'$/;"	v
p_tw	option.h	/^EXTERN long	p_tw;		\/\/ 'textwidth'$/;"	v
p_tw_nobin	optiondefs.h	/^static long	p_tw_nobin;$/;"	v
p_tw_nopaste	optiondefs.h	/^static long	p_tw_nopaste;$/;"	v
p_twsl	option.h	/^EXTERN long	p_twsl;		\/\/ 'termwinscroll'$/;"	v
p_twt	option.h	/^EXTERN char_u	*p_twt;		\/\/ 'termwintype'$/;"	v
p_twt_values	optionstr.c	/^static char *(p_twt_values[]) = {"winpty", "conpty", "", NULL};$/;"	v	file:
p_tx	option.h	/^EXTERN int	p_tx;		\/\/ 'textmode'$/;"	v
p_uc	option.h	/^EXTERN long	p_uc;		\/\/ 'updatecount'$/;"	v
p_udf	option.h	/^EXTERN int	p_udf;		\/\/ 'undofile'$/;"	v
p_udir	option.h	/^EXTERN char_u	*p_udir;	\/\/ 'undodir'$/;"	v
p_ul	option.h	/^EXTERN long	p_ul;		\/\/ 'undolevels'$/;"	v
p_ur	option.h	/^EXTERN long	p_ur;		\/\/ 'undoreload'$/;"	v
p_ut	option.h	/^EXTERN long	p_ut;		\/\/ 'updatetime'$/;"	v
p_vb	option.h	/^EXTERN int	p_vb;		\/\/ 'visualbell'$/;"	v
p_vdir	option.h	/^EXTERN char_u	*p_vdir;	\/\/ 'viewdir'$/;"	v
p_ve	option.h	/^EXTERN char_u	*p_ve;		\/\/ 'virtualedit'$/;"	v
p_ve_values	optionstr.c	/^static char *(p_ve_values[]) = {"block", "insert", "all", "onemore", NULL};$/;"	v	file:
p_verbose	option.h	/^EXTERN long	p_verbose;	\/\/ 'verbose'$/;"	v
p_vfile	option.h	/^char_u	*p_vfile = (char_u *)""; \/\/ used before options are initialized$/;"	v
p_viminfo	option.h	/^EXTERN char_u	*p_viminfo;	\/\/ 'viminfo'$/;"	v
p_viminfofile	option.h	/^EXTERN char_u	*p_viminfofile;	\/\/ 'viminfofile'$/;"	v
p_vop	option.h	/^EXTERN char_u	*p_vop;		\/\/ 'viewoptions'$/;"	v
p_vsts	option.h	/^EXTERN char_u	*p_vsts;	\/\/ 'varsofttabstop'$/;"	v
p_vsts_nopaste	optiondefs.h	/^static char_u	*p_vsts_nopaste;$/;"	v
p_vts	option.h	/^EXTERN char_u	*p_vts;		\/\/ 'vartabstop'$/;"	v
p_wa	option.h	/^EXTERN int	p_wa;		\/\/ 'writeany'$/;"	v
p_wak	option.h	/^EXTERN char_u	*p_wak;		\/\/ 'winaltkeys'$/;"	v
p_wak_values	optionstr.c	/^static char *(p_wak_values[]) = {"yes", "menu", "no", NULL};$/;"	v	file:
p_warn	option.h	/^EXTERN int	p_warn;		\/\/ 'warn'$/;"	v
p_wb	option.h	/^EXTERN int	p_wb;		\/\/ 'writebackup'$/;"	v
p_wc	option.h	/^EXTERN long	p_wc;		\/\/ 'wildchar'$/;"	v
p_wcm	option.h	/^EXTERN long	p_wcm;		\/\/ 'wildcharm'$/;"	v
p_wd	option.h	/^EXTERN long	p_wd;		\/\/ 'writedelay'$/;"	v
p_wh	option.h	/^EXTERN long	p_wh;		\/\/ 'winheight'$/;"	v
p_wic	option.h	/^EXTERN long	p_wic;		\/\/ 'wildignorecase'$/;"	v
p_wig	option.h	/^EXTERN char_u	*p_wig;		\/\/ 'wildignore'$/;"	v
p_wim	option.h	/^EXTERN char_u	*p_wim;		\/\/ 'wildmode'$/;"	v
p_window	option.h	/^EXTERN long	p_window;	\/\/ 'window'$/;"	v
p_winptydll	option.h	/^EXTERN char_u	*p_winptydll;	\/\/ 'winptydll'$/;"	v
p_wiv	option.h	/^EXTERN int	p_wiv;		\/\/ 'weirdinvert'$/;"	v
p_wiw	option.h	/^EXTERN long	p_wiw;		\/\/ 'winwidth'$/;"	v
p_wm	option.h	/^EXTERN long	p_wm;		\/\/ 'wrapmargin'$/;"	v
p_wm_nobin	optiondefs.h	/^static long	p_wm_nobin;$/;"	v
p_wm_nopaste	optiondefs.h	/^static long	p_wm_nopaste;$/;"	v
p_wmh	option.h	/^EXTERN long	p_wmh;		\/\/ 'winminheight'$/;"	v
p_wmnu	option.h	/^EXTERN int	p_wmnu;		\/\/ 'wildmenu'$/;"	v
p_wmw	option.h	/^EXTERN long	p_wmw;		\/\/ 'winminwidth'$/;"	v
p_wop	option.h	/^EXTERN char_u	*p_wop;		\/\/ 'wildoptions'$/;"	v
p_wop_values	optionstr.c	/^static char *(p_wop_values[]) = {"tagfile", NULL};$/;"	v	file:
p_write	option.h	/^EXTERN int	p_write;	\/\/ 'write'$/;"	v
p_ws	option.h	/^EXTERN int	p_ws;		\/\/ 'wrapscan'$/;"	v
p_ww	option.h	/^EXTERN char_u	*p_ww;		\/\/ 'whichwrap'$/;"	v
page_count	hardcopy.c	/^static int	page_count;$/;"	v	file:
panel_titles	gui_photon.c	/^static char	**panel_titles = NULL;$/;"	v	file:
paragraph_start	ops.c	/^paragraph_start(linenr_T lnum)$/;"	f
params	main.c	/^static mparm_T	params;$/;"	v	file:
parent	structs.h	/^    vimmenu_T	*parent;	    \/\/ Parent of menu$/;"	m	struct:VimMenu
parentTrans	gui_athena.c	/^static XtTranslations	popupTrans, parentTrans, menuTrans, supermenuTrans;$/;"	v	file:
parent_class	gui_gtk_f.c	/^static GtkWidgetClass *parent_class = NULL;$/;"	v	file:
parent_class	gui_gtk_f.h	/^    GtkContainerClass parent_class;$/;"	m	struct:_GtkFormClass
parseMarker	fold.c	/^parseMarker(win_T *wp)$/;"	f	file:
parse_addr_type_arg	usercmd.c	/^parse_addr_type_arg($/;"	f	file:
parse_builtin_tcap	term.c	/^parse_builtin_tcap(char_u *term)$/;"	f	file:
parse_cino	cindent.c	/^parse_cino(buf_T *buf)$/;"	f
parse_cmd_address	ex_docmd.c	/^parse_cmd_address(exarg_T *eap, char **errormsg, int silent)$/;"	f
parse_command_modifiers	ex_docmd.c	/^parse_command_modifiers(exarg_T *eap, char **errormsg, int skip_only)$/;"	f
parse_command_name	main.c	/^parse_command_name(mparm_T *parmp)$/;"	f	file:
parse_compl_arg	usercmd.c	/^parse_compl_arg($/;"	f
parse_completepopup	popupwin.c	/^parse_completepopup(win_T *wp)$/;"	f
parse_csi	terminal.c	/^parse_csi($/;"	f	file:
parse_diff_ed	diff.c	/^parse_diff_ed($/;"	f	file:
parse_diff_unified	diff.c	/^parse_diff_unified($/;"	f	file:
parse_efm_option	quickfix.c	/^parse_efm_option(char_u *efm)$/;"	f	file:
parse_list_options	hardcopy.c	/^parse_list_options($/;"	f	file:
parse_match	tag.c	/^parse_match($/;"	f	file:
parse_osc	terminal.c	/^parse_osc(const char *command, size_t cmdlen, void *user)$/;"	f	file:
parse_popup_option	popupwin.c	/^parse_popup_option(win_T *wp, int is_preview)$/;"	f	file:
parse_previewpopup	popupwin.c	/^parse_previewpopup(win_T *wp)$/;"	f
parse_printmbfont	hardcopy.c	/^parse_printmbfont(void)$/;"	f
parse_printoptions	hardcopy.c	/^parse_printoptions(void)$/;"	f
parse_queued_messages	getchar.c	/^parse_queued_messages(void)$/;"	f
parse_shape_opt	misc2.c	/^parse_shape_opt(int what)$/;"	f
parse_sign_cmd_args	sign.c	/^parse_sign_cmd_args($/;"	f	file:
parse_state_T	regexp.c	/^} parse_state_T;$/;"	t	typeref:struct:__anon98	file:
parse_tag_line	tag.c	/^parse_tag_line($/;"	f	file:
parse_termwinsize	terminal.c	/^parse_termwinsize(win_T *wp, int *rows, int *cols)$/;"	f	file:
parse_type	vim9compile.c	/^parse_type(char_u **arg, garray_T *type_list)$/;"	f
parse_type_member	vim9compile.c	/^parse_type_member(char_u **arg, type_T *type, garray_T *type_list)$/;"	f	file:
parse_uri_list	gui_gtk_x11.c	/^parse_uri_list(int *count, char_u *data, int len)$/;"	f	file:
parser_fallbacks	terminal.c	/^static VTermParserCallbacks parser_fallbacks = {$/;"	v	file:
part_from_char	channel.c	/^part_from_char(int c)$/;"	f	file:
part_names	channel.c	/^static char *part_names[] = {"sock", "out", "err", "in"};$/;"	v	file:
partial	structs.h	/^    partial_T	*partial;	\/\/ for extra arguments$/;"	m	struct:__anon223
partial_S	structs.h	/^struct partial_S$/;"	s
partial_T	structs.h	/^typedef struct partial_S partial_T;$/;"	t	typeref:struct:partial_S
partial_free	eval.c	/^partial_free(partial_T *pt)$/;"	f	file:
partial_name	eval.c	/^partial_name(partial_T *pt)$/;"	f
partial_unref	eval.c	/^partial_unref(partial_T *pt)$/;"	f
password	blowfish.c	/^    char_u   password[64];$/;"	m	struct:__anon3	file:
paste_mode_T	vim.h	/^} paste_mode_T;$/;"	t	typeref:enum:__anon281
paste_option_changed	option.c	/^paste_option_changed(void)$/;"	f	file:
pat	autocmd.c	/^    char_u	    *pat;		\/\/ pattern as typed (NULL when pattern$/;"	m	struct:AutoPat	file:
pat	structs.h	/^    char_u	    *pat;	\/\/ the pattern (in allocated memory) or NULL$/;"	m	struct:spat
pat	tag.c	/^    char_u	*pat;		\/\/ the pattern$/;"	m	struct:__anon118	file:
pat_T	tag.c	/^} pat_T;$/;"	t	typeref:struct:__anon118	file:
pat_has_uppercase	search.c	/^pat_has_uppercase(char_u *pat)$/;"	f
patch	regexp_nfa.c	/^patch(Ptrlist *l, nfa_state_T *s)$/;"	f	file:
path	gui_at_fs.c	/^    char	*path;$/;"	m	struct:__anon32	file:
path_is_url	misc1.c	/^path_is_url(char_u *p)$/;"	f
path_with_url	misc1.c	/^path_with_url(char_u *fname)$/;"	f
pathcmp	dosinst.c	/^pathcmp(char *p, int plen, char *q, int qlen)$/;"	f	file:
pathcmp	filepath.c	/^pathcmp(const char *p, const char *q, int maxlen)$/;"	f
patlen	autocmd.c	/^    int		    patlen;		\/\/ strlen() of pat$/;"	m	struct:AutoPat	file:
pattern	quickfix.c	/^    char	*pattern;$/;"	m	struct:fmtpattern	file:
pattern	quickfix.c	/^    char_u	*pattern;$/;"	m	struct:__anon90	file:
pattern	regexp.h	/^    char_u		*pattern;$/;"	m	struct:__anon174
pattern	structs.h	/^    char_u	*pattern;   \/\/ pattern to highlight$/;"	m	struct:matchitem
pattern	syntax.c	/^    char_u	*pattern;$/;"	m	struct:__anon117	file:
pattern_match	eval.c	/^pattern_match(char_u *pat, char_u *text, int ic)$/;"	f
pause_time	profiler.c	/^static proftime_T pause_time;$/;"	v	file:
pax	blowfish.c	/^    UINT32_T	pax[18];	    \/\/ P-array$/;"	m	struct:__anon2	file:
pax_init	blowfish.c	/^static UINT32_T pax_init[18] = {$/;"	v	file:
pb_count	memline.c	/^    short_u	pb_count;	\/\/ number of pointers in this block$/;"	m	struct:pointer_block	file:
pb_count_max	memline.c	/^    short_u	pb_count_max;	\/\/ maximum value for pb_count$/;"	m	struct:pointer_block	file:
pb_id	memline.c	/^    short_u	pb_id;		\/\/ ID for pointer block: PTR_ID$/;"	m	struct:pointer_block	file:
pb_pointer	memline.c	/^    PTR_EN	pb_pointer[1];	\/\/ list of pointers to blocks (actually longer)$/;"	m	struct:pointer_block	file:
pc_attr	edit.c	/^static int  pc_attr;$/;"	v	file:
pc_bytes	edit.c	/^static char_u pc_bytes[MB_MAXBYTES + 1]; \/\/ saved bytes$/;"	v	file:
pc_col	edit.c	/^static int  pc_col;$/;"	v	file:
pc_row	edit.c	/^static int  pc_row;$/;"	v	file:
pc_status	edit.c	/^static int  pc_status;$/;"	v	file:
pchar_cursor	misc1.c	/^pchar_cursor(int c)$/;"	f
pe_bnum	memline.c	/^    blocknr_T	pe_bnum;	\/\/ block number$/;"	m	struct:pointer_entry	file:
pe_line_count	memline.c	/^    linenr_T	pe_line_count;	\/\/ number of lines in this branch$/;"	m	struct:pointer_entry	file:
pe_old_lnum	memline.c	/^    linenr_T	pe_old_lnum;	\/\/ lnum for this block (for recovery)$/;"	m	struct:pointer_entry	file:
pe_page_count	memline.c	/^    int		pe_page_count;	\/\/ number of pages in block pe_bnum$/;"	m	struct:pointer_entry	file:
peek_console_input	os_win32.c	/^peek_console_input($/;"	f	file:
peekchr	regexp.c	/^peekchr(void)$/;"	f	file:
pending	structs.h	/^    int pending;		\/\/ error\/interrupt\/exception state$/;"	m	struct:cleanup_stuff
pendingCommands	if_xcmdsrv.c	/^static PendingCommand *pendingCommands = NULL;$/;"	v	file:
pending_exmode_active	globals.h	/^EXTERN int pending_exmode_active INIT(= FALSE);$/;"	v
percentage	structs.h	/^    int		percentage;	\/\/ percentage of cell for bar$/;"	m	struct:cursor_entry
pexpand_cmds	profiler.c	/^static char *pexpand_cmds[] = {$/;"	v	file:
pexpand_what	profiler.c	/^} pexpand_what;$/;"	v	typeref:enum:__anon86	file:
pfnGetFileInformationByHandleEx	iscygpty.c	/^typedef BOOL (WINAPI *pfnGetFileInformationByHandleEx)($/;"	t	file:
pfnGetFinalPathNameByHandleW	os_mswin.c	/^typedef BOOL (WINAPI *pfnGetFinalPathNameByHandleW)($/;"	t	file:
pfunc	vim9.h	/^	cpfunc_T	    pfunc;$/;"	m	union:__anon276::__anon277
pg_margin_bottom	gui_photon.c	/^static short pg_margin_left, pg_margin_right, pg_margin_top, pg_margin_bottom;$/;"	v	file:
pg_margin_left	gui_photon.c	/^static short pg_margin_left, pg_margin_right, pg_margin_top, pg_margin_bottom;$/;"	v	file:
pg_margin_right	gui_photon.c	/^static short pg_margin_left, pg_margin_right, pg_margin_top, pg_margin_bottom;$/;"	v	file:
pg_margin_top	gui_photon.c	/^static short pg_margin_left, pg_margin_right, pg_margin_top, pg_margin_bottom;$/;"	v	file:
pid	if_cscope.h	/^    DWORD	    pid;	\/\/ PID of the connected cscope process.$/;"	m	struct:csi
pid	if_cscope.h	/^    pid_t	    pid;	\/\/ PID of the connected cscope process.$/;"	m	struct:csi
pim	regexp_nfa.c	/^    nfa_pim_T	pim;		\/\/ if pim.result != NFA_PIM_UNUSED: postponed$/;"	m	struct:__anon107	file:
pim_equal	regexp_nfa.c	/^pim_equal(nfa_pim_T *one, nfa_pim_T *two)$/;"	f	file:
pim_info	regexp_nfa.c	/^pim_info(nfa_pim_T *pim)$/;"	f	file:
pixelGeometry	gui_dwrite.h	/^    int pixelGeometry;$/;"	m	struct:DWriteRenderingParams
pixels_to_points	gui_w32.c	/^pixels_to_points(int pixels, int vertical)$/;"	f	file:
pixmap_data	gui_xmebwp.h	/^    String pixmap_data;$/;"	m	struct:_XmEnhancedButtonPart
pixmap_depth	gui_xmebwp.h	/^    int pixmap_depth;$/;"	m	struct:_XmEnhancedButtonPart
pixmap_file	gui_xmebwp.h	/^    String pixmap_file;$/;"	m	struct:_XmEnhancedButtonPart
pixmap_height	gui_xmebwp.h	/^    Dimension pixmap_height;$/;"	m	struct:_XmEnhancedButtonPart
pixmap_width	gui_xmebwp.h	/^    Dimension pixmap_width;$/;"	m	struct:_XmEnhancedButtonPart
pixval	gui.h	/^    int		pixval;		\/\/ pixel count of value$/;"	m	struct:GuiScrollbar
plain_vgetc	getchar.c	/^plain_vgetc(void)$/;"	f
plaintxt	blowfish.c	/^    char_u   plaintxt[9];$/;"	m	struct:__anon3	file:
plines	misc1.c	/^plines(linenr_T lnum)$/;"	f
plines_m_win	misc1.c	/^plines_m_win(win_T *wp, linenr_T first, linenr_T last)$/;"	f
plines_nofill	misc1.c	/^plines_nofill(linenr_T lnum)$/;"	f
plines_win	misc1.c	/^plines_win($/;"	f
plines_win_col	misc1.c	/^plines_win_col(win_T *wp, linenr_T lnum, long column)$/;"	f
plines_win_nofill	misc1.c	/^plines_win_nofill($/;"	f
plines_win_nofold	misc1.c	/^plines_win_nofold(win_T *wp, linenr_T lnum)$/;"	f
pll_next	if_py_both.h	/^    struct pylinkedlist_S	*pll_next;$/;"	m	struct:pylinkedlist_S	typeref:struct:pylinkedlist_S::pylinkedlist_S
pll_obj	if_py_both.h	/^    PyObject			*pll_obj;$/;"	m	struct:pylinkedlist_S
pll_prev	if_py_both.h	/^    struct pylinkedlist_S	*pll_prev;$/;"	m	struct:pylinkedlist_S	typeref:struct:pylinkedlist_S::pylinkedlist_S
pointerEvent	gui_beval.c	/^pointerEvent(BalloonEval *beval, XEvent *event)$/;"	f	file:
pointerEventEH	gui_beval.c	/^pointerEventEH($/;"	f	file:
pointer_block	memline.c	/^struct pointer_block$/;"	s	file:
pointer_entry	memline.c	/^struct pointer_entry$/;"	s	file:
pointer_event	gui_beval.c	/^pointer_event(BalloonEval *beval, int x, int y, unsigned state)$/;"	f	file:
pointer_hidden	gui.h	/^    int		pointer_hidden;	    \/\/ Is the mouse pointer hidden?$/;"	m	struct:Gui
points_to_pixels	gui_mac.c	/^points_to_pixels(char_u *str, char_u **end, int vertical)$/;"	f	file:
points_to_pixels	os_mswin.c	/^points_to_pixels(WCHAR *str, WCHAR **end, int vertical, long_i pprinter_dc)$/;"	f	file:
pop_current_state	syntax.c	/^pop_current_state(void)$/;"	f	file:
pop_showcmd	normal.c	/^pop_showcmd(void)$/;"	f
popclose_T	structs.h	/^} popclose_T;$/;"	t	typeref:enum:__anon238
poppos_T	structs.h	/^} poppos_T;$/;"	t	typeref:enum:__anon237
poppos_entries	popupwin.c	/^static poppos_entry_T poppos_entries[] = {$/;"	v	file:
poppos_entry_T	popupwin.c	/^} poppos_entry_T;$/;"	t	typeref:struct:__anon84	file:
populate_module	if_py_both.h	/^populate_module(PyObject *m)$/;"	f
popupTrans	gui_athena.c	/^static XtTranslations	popupTrans, parentTrans, menuTrans, supermenuTrans;$/;"	v	file:
popup_add_timeout	popupwin.c	/^popup_add_timeout(win_T *wp, int time)$/;"	f	file:
popup_adjust_position	popupwin.c	/^popup_adjust_position(win_T *wp)$/;"	f	file:
popup_check_cursor_pos	popupwin.c	/^popup_check_cursor_pos()$/;"	f
popup_close	popupwin.c	/^popup_close(int id)$/;"	f
popup_close_and_callback	popupwin.c	/^popup_close_and_callback(win_T *wp, typval_T *arg)$/;"	f	file:
popup_close_for_mouse_click	popupwin.c	/^popup_close_for_mouse_click(win_T *wp)$/;"	f
popup_close_if_on_X	popupwin.c	/^popup_close_if_on_X(win_T *wp, int row, int col)$/;"	f
popup_close_preview	popupwin.c	/^popup_close_preview(void)$/;"	f
popup_close_tabpage	popupwin.c	/^popup_close_tabpage(tabpage_T *tp, int id)$/;"	f
popup_close_with_retval	popupwin.c	/^popup_close_with_retval(win_T *wp, int retval)$/;"	f
popup_create	popupwin.c	/^popup_create(typval_T *argvars, typval_T *rettv, create_type_T type)$/;"	f	file:
popup_create_preview_window	popupwin.c	/^popup_create_preview_window(int info)$/;"	f
popup_do_filter	popupwin.c	/^popup_do_filter(int c)$/;"	f
popup_drag	popupwin.c	/^popup_drag(win_T *wp)$/;"	f
popup_dragwin	globals.h	/^EXTERN win_T	*popup_dragwin INIT(= NULL);	\/\/ popup window being dragged$/;"	v
popup_extra_width	popupwin.c	/^popup_extra_width(win_T *wp)$/;"	f
popup_find_info_window	popupwin.c	/^popup_find_info_window(void)$/;"	f
popup_find_preview_window	popupwin.c	/^popup_find_preview_window(void)$/;"	f
popup_free	popupwin.c	/^popup_free(win_T *wp)$/;"	f	file:
popup_get_sign_name	popupwin.c	/^popup_get_sign_name(win_T *wp)$/;"	f	file:
popup_gvim_path	uninstall.c	/^popup_gvim_path(char *buf, DWORD bufsize)$/;"	f	file:
popup_handle_mouse_moved	popupwin.c	/^popup_handle_mouse_moved(void)$/;"	f
popup_handle_scrollbar_click	popupwin.c	/^popup_handle_scrollbar_click(win_T *wp, int row, int col)$/;"	f
popup_height	popupwin.c	/^popup_height(win_T *wp)$/;"	f
popup_hide	popupwin.c	/^popup_hide(win_T *wp)$/;"	f
popup_hide_info	popupwin.c	/^popup_hide_info(void)$/;"	f
popup_highlight_curline	popupwin.c	/^popup_highlight_curline(win_T *wp)$/;"	f	file:
popup_is_in_scrollbar	popupwin.c	/^popup_is_in_scrollbar(win_T *wp, int row, int col)$/;"	f
popup_is_popup	popupwin.c	/^popup_is_popup(win_T *wp)$/;"	f
popup_left_extra	popupwin.c	/^popup_left_extra(win_T *wp)$/;"	f
popup_mask	globals.h	/^EXTERN short	*popup_mask INIT(= NULL);$/;"	v
popup_mask_next	globals.h	/^EXTERN short	*popup_mask_next INIT(= NULL);$/;"	v
popup_mask_refresh	globals.h	/^EXTERN int	popup_mask_refresh INIT(= TRUE);$/;"	v
popup_mask_tab	globals.h	/^EXTERN tabpage_T *popup_mask_tab INIT(= NULL);$/;"	v
popup_masked	popupwin.c	/^popup_masked(win_T *wp, int width, int height, int screencol, int screenline)$/;"	f	file:
popup_menu_position_func	gui_gtk.c	/^popup_menu_position_func(GtkMenu *menu UNUSED,$/;"	f	file:
popup_mode_name	menu.c	/^popup_mode_name(char_u *name, int idx)$/;"	f	file:
popup_mouse_pos	gui_gtk.c	/^static int popup_mouse_pos;$/;"	v	file:
popup_need_position_adjust	popupwin.c	/^popup_need_position_adjust(win_T *wp)$/;"	f	file:
popup_no_mapping	popupwin.c	/^popup_no_mapping(void)$/;"	f
popup_on_border	popupwin.c	/^popup_on_border(win_T *wp, int row, int col)$/;"	f
popup_options_one	popupwin.c	/^popup_options_one(dict_T *dict, char_u *key)$/;"	f	file:
popup_reset_handled	popupwin.c	/^popup_reset_handled(int handled_flag)$/;"	f
popup_set_buffer_text	popupwin.c	/^popup_set_buffer_text(buf_T *buf, typval_T text)$/;"	f	file:
popup_set_firstline	popupwin.c	/^popup_set_firstline(win_T *wp)$/;"	f
popup_set_title	popupwin.c	/^popup_set_title(win_T *wp)$/;"	f
popup_set_wantpos_cursor	popupwin.c	/^popup_set_wantpos_cursor(win_T *wp, int width, dict_T *d)$/;"	f
popup_set_wantpos_rowcol	popupwin.c	/^popup_set_wantpos_rowcol(win_T *wp, int row, int col)$/;"	f
popup_show	popupwin.c	/^popup_show(win_T *wp)$/;"	f
popup_show_curline	popupwin.c	/^popup_show_curline(win_T *wp)$/;"	f	file:
popup_start_drag	popupwin.c	/^popup_start_drag(win_T *wp, int row, int col)$/;"	f
popup_top_extra	popupwin.c	/^popup_top_extra(win_T *wp)$/;"	f
popup_transparent	globals.h	/^EXTERN char	*popup_transparent INIT(= NULL);$/;"	v
popup_update_mask	popupwin.c	/^popup_update_mask(win_T *wp, int width, int height)$/;"	f	file:
popup_update_preview_title	popupwin.c	/^popup_update_preview_title(void)$/;"	f
popup_visible	globals.h	/^EXTERN int	popup_visible INIT(= FALSE);$/;"	v
popup_width	popupwin.c	/^popup_width(win_T *wp)$/;"	f
popup_win_closed	popupwin.c	/^popup_win_closed(win_T *win)$/;"	f
port	if_mzsch.c	/^    Scheme_Object   *port;$/;"	m	struct:__anon55	file:
pos	regexp_bt.c	/^	lpos_T	pos;	\/\/ rex.input pos, for multi-line regexp$/;"	m	union:__anon93::__anon94	file:
pos	regexp_bt.c	/^	lpos_T	pos;$/;"	m	union:__anon95::__anon96	file:
pos	regexp_nfa.c	/^	lpos_T	pos;$/;"	m	union:nfa_pim_S::__anon106	file:
pos	structs.h	/^    llpos_T	pos[MAXPOSMATCH];	\/\/ array of positions$/;"	m	struct:posmatch
pos	structs.h	/^    posmatch_T	pos;	    \/\/ position matches$/;"	m	struct:matchitem
pos2off	netbeans.c	/^pos2off(buf_T *buf, pos_T *pos)$/;"	f	file:
pos_T	structs.h	/^} pos_T;$/;"	t	typeref:struct:__anon178
pos_save_T	structs.h	/^} pos_save_T;$/;"	t	typeref:struct:__anon242
position_cursor	terminal.c	/^position_cursor(win_T *wp, VTermPos *pos, int add_off UNUSED)$/;"	f	file:
posmatch	structs.h	/^struct posmatch$/;"	s
posmatch_T	structs.h	/^typedef struct posmatch posmatch_T;$/;"	t	typeref:struct:posmatch
post2nfa	regexp_nfa.c	/^post2nfa(int *postfix, int *end, int nfa_calc_size)$/;"	f	file:
post_balloon	beval.c	/^post_balloon(BalloonEval *beval UNUSED, char_u *mesg, list_T *list UNUSED)$/;"	f
post_chdir	ex_docmd.c	/^post_chdir(cdscope_T scope)$/;"	f
post_end	regexp_nfa.c	/^static int *post_end;$/;"	v	file:
post_ptr	regexp_nfa.c	/^static int *post_ptr;$/;"	v	file:
post_start	regexp_nfa.c	/^static int *post_start;  \/\/ holds the postfix form of r.e.$/;"	v	file:
postpone_keycommand	netbeans.c	/^postpone_keycommand(char_u *keystr)$/;"	f	file:
postponed_mouseshape	globals.h	/^EXTERN int	postponed_mouseshape INIT(= FALSE); \/\/ postponed updating the$/;"	v
postponed_split	globals.h	/^EXTERN int	postponed_split INIT(= 0);  \/\/ for CTRL-W CTRL-] command$/;"	v
postponed_split_flags	globals.h	/^EXTERN int	postponed_split_flags INIT(= 0);  \/\/ args for win_split()$/;"	v
postponed_split_tab	globals.h	/^EXTERN int	postponed_split_tab INIT(= 0);  \/\/ cmdmod.tab$/;"	v
pp_name	popupwin.c	/^    char	*pp_name;$/;"	m	struct:__anon84	file:
pp_val	popupwin.c	/^    poppos_T	pp_val;$/;"	m	struct:__anon84	file:
ppath	if_cscope.h	/^    char *	    ppath;	\/\/ path to prepend (the -P option)$/;"	m	struct:csi
pre_commands	structs.h	/^    char_u	*pre_commands[MAX_ARG_CMDS]; \/\/ commands from --cmd argument$/;"	m	struct:__anon252
pre_whitesp	structs.h	/^    int		pre_whitesp;	\/\/ screen cols of ws before block$/;"	m	struct:block_def
pre_whitesp_c	structs.h	/^    int		pre_whitesp_c;	\/\/ chars of ws before block$/;"	m	struct:block_def
prechar	structs.h	/^    int		prechar;	\/\/ prefix character (optional, always 'g')$/;"	m	struct:cmdarg_S
preedit_end_col	globals.h	/^EXTERN colnr_T		preedit_end_col INIT(= MAXCOL);$/;"	v
preedit_get_status	mbyte.c	/^preedit_get_status(void)$/;"	f
preedit_is_active	mbyte.c	/^static int preedit_is_active   = FALSE;$/;"	v	file:
preedit_label	mbyte.c	/^static GtkWidget *preedit_label = NULL;$/;"	v	file:
preedit_start_col	globals.h	/^EXTERN colnr_T		preedit_start_col INIT(= MAXCOL);$/;"	v
preedit_window	mbyte.c	/^static GtkWidget *preedit_window = NULL;$/;"	v	file:
prefix	quickfix.c	/^    char_u	    prefix;	\/\/ prefix of this format line:$/;"	m	struct:efm_S	file:
prep_exarg	fileio.c	/^prep_exarg(exarg_T *eap, buf_T *buf)$/;"	f
prep_redo	normal.c	/^prep_redo($/;"	f
prep_redo_cmd	normal.c	/^prep_redo_cmd(cmdarg_T *cap)$/;"	f	file:
prepare_assert_error	testing.c	/^prepare_assert_error(garray_T *gap)$/;"	f	file:
prepare_buffer	channel.c	/^prepare_buffer(buf_T *buf)$/;"	f	file:
prepare_help_buffer	ex_cmds.c	/^prepare_help_buffer(void)$/;"	f	file:
prepare_pats	tag.c	/^prepare_pats(pat_T *pats, int has_re)$/;"	f	file:
prepare_restore_cursor_props	terminal.c	/^prepare_restore_cursor_props(void)$/;"	f	file:
prepare_search_hl	highlight.c	/^prepare_search_hl(win_T *wp, match_T *search_hl, linenr_T lnum)$/;"	f
prepare_search_hl_line	highlight.c	/^prepare_search_hl_line($/;"	f
prepare_server	main.c	/^prepare_server(mparm_T *parmp)$/;"	f	file:
prepare_tagpreview	ex_cmds.c	/^prepare_tagpreview($/;"	f
prepare_to_exit	misc1.c	/^prepare_to_exit(void)$/;"	f	file:
prepare_viminfo_history	viminfo.c	/^prepare_viminfo_history(int asklen, int writing)$/;"	f	file:
prepare_viminfo_marks	viminfo.c	/^prepare_viminfo_marks(void)$/;"	f	file:
prepare_viminfo_registers	viminfo.c	/^prepare_viminfo_registers(void)$/;"	f	file:
prepare_vimvar	evalvars.c	/^prepare_vimvar(int idx, typval_T *save_tv)$/;"	f
preprocs_left	indent.c	/^preprocs_left(void)$/;"	f
present	structs.h	/^    int		present;$/;"	m	struct:__anon245
preserve_exit	misc1.c	/^preserve_exit(void)$/;"	f
prev	if_xcmdsrv.c	/^    struct x_cmdqueue	*prev;$/;"	m	struct:x_cmdqueue	typeref:struct:x_cmdqueue::x_cmdqueue	file:
prev	netbeans.c	/^    struct keyqueue *prev;$/;"	m	struct:keyqueue	typeref:struct:keyqueue::keyqueue	file:
prev	structs.h	/^    struct ht_stack_S	*prev;$/;"	m	struct:ht_stack_S	typeref:struct:ht_stack_S::ht_stack_S
prev	structs.h	/^    struct list_stack_S	*prev;$/;"	m	struct:list_stack_S	typeref:struct:list_stack_S::list_stack_S
prev	vim.h	/^    pos_T	prev;		\/\/ Previous position$/;"	m	struct:__anon279
prev_at_start	regexp.c	/^     int	prev_at_start;$/;"	m	struct:__anon98	file:
prev_at_start	regexp.c	/^static int	prev_at_start;  \/\/ True when on the second character$/;"	v	file:
prev_bg_color	gui_x11.c	/^static guicolor_T	prev_bg_color = INVALCOLOR;$/;"	v	file:
prev_ccline	ex_getln.c	/^static cmdline_info_T	prev_ccline;$/;"	v	file:
prev_ccline_used	ex_getln.c	/^static int		prev_ccline_used = FALSE;$/;"	v	file:
prev_count0	structs.h	/^    long	prev_count0;	\/\/ ca.count0 saved for K_CURSORHOLD$/;"	m	struct:oparg_S
prev_dir	ex_docmd.c	/^static char_u	*prev_dir = NULL;$/;"	v	file:
prev_fg_color	gui_x11.c	/^static guicolor_T	prev_fg_color = INVALCOLOR;$/;"	v	file:
prev_lnum	fold.c	/^static linenr_T prev_lnum = 0;$/;"	v	file:
prev_lnum_lvl	fold.c	/^static int prev_lnum_lvl = -1;$/;"	v	file:
prev_opcount	structs.h	/^    long	prev_opcount;	\/\/ ca.opcount saved for K_CURSORHOLD$/;"	m	struct:oparg_S
prev_sp_color	gui_x11.c	/^static guicolor_T	prev_sp_color = INVALCOLOR;$/;"	v	file:
prev_timeval	time.c	/^static struct timeval	prev_timeval;$/;"	v	typeref:struct:timeval	file:
prev_which_scrollbars	gui.c	/^static int	prev_which_scrollbars[3];$/;"	v	file:
prev_wrap	gui.h	/^    int		prev_wrap;	    \/\/ For updating the horizontal scrollbar$/;"	m	struct:Gui
prevchr	regexp.c	/^     int	prevchr;$/;"	m	struct:__anon98	file:
prevchr	regexp.c	/^static int	prevchr;$/;"	v	file:
prevchr_len	regexp.c	/^     int	prevchr_len;$/;"	m	struct:__anon98	file:
prevchr_len	regexp.c	/^static int	prevchr_len;	\/\/ byte length of previous char$/;"	v	file:
prevcmd	ex_cmds.c	/^static char_u	*prevcmd = NULL;	\/\/ the previous command$/;"	v	file:
previous_funccal	userfunc.c	/^static funccall_T *previous_funccal = NULL;$/;"	v	file:
prevprevchr	regexp.c	/^     int	prevprevchr;$/;"	m	struct:__anon98	file:
prevprevchr	regexp.c	/^static int	prevprevchr;	\/\/ previous-previous character$/;"	v	file:
prevwin	globals.h	/^EXTERN win_T	*prevwin INIT(= NULL);	\/\/ previous window$/;"	v
prim	if_mzsch.c	/^    Scheme_Closed_Prim	*prim;$/;"	m	struct:__anon54	file:
primitive	gui_xmebwp.h	/^    XmPrimitivePart primitive;$/;"	m	struct:_XmEnhancedButtonRec
primitive_class	gui_xmebwp.h	/^    XmPrimitiveClassPart primitive_class;$/;"	m	struct:__anon146
prims	if_mzsch.c	/^static Vim_Prim prims[]=$/;"	v	file:
print_cmd_line_help	dosinst.c	/^print_cmd_line_help(void)$/;"	f	file:
print_line	ex_cmds.c	/^print_line(linenr_T lnum, int use_number, int list)$/;"	f
print_line_no_prefix	ex_cmds.c	/^print_line_no_prefix($/;"	f
print_pos	hardcopy.c	/^    int		print_pos;	    \/\/ virtual column for computing TABs$/;"	m	struct:__anon47	file:
print_read_msg	netbeans.c	/^print_read_msg(nbbuf_T *buf)$/;"	f	file:
print_save_msg	netbeans.c	/^print_save_msg(nbbuf_T *buf, off_T nchars)$/;"	f	file:
print_tag_list	tag.c	/^print_tag_list($/;"	f	file:
print_windows_error	gui_w32.c	/^print_windows_error(void)$/;"	f	file:
printable_func_name	userfunc.c	/^printable_func_name(ufunc_T *fp)$/;"	f	file:
printdigraph	digraph.c	/^printdigraph(digr_T *dp, result_T *previous)$/;"	f	file:
printer_opts	globals.h	/^EXTERN option_table_T printer_opts[OPT_PRINT_NUM_OPTIONS]$/;"	v
printer_page_num	globals.h	/^EXTERN linenr_T printer_page_num;$/;"	v
priority	structs.h	/^    int		priority;	    \/\/ Menu order priority$/;"	m	struct:VimMenu
priority	structs.h	/^    int		priority;   \/\/ match priority$/;"	m	struct:matchitem
process_compflags	spellfile.c	/^process_compflags($/;"	f	file:
process_env	main.c	/^process_env($/;"	f
process_message	gui_w32.c	/^process_message(void)$/;"	f	file:
process_motion_notify	gui_gtk_x11.c	/^process_motion_notify(int x, int y, GdkModifierType state)$/;"	f	file:
process_still_running	memline.c	/^static int process_still_running;$/;"	v	file:
prof_child	structs.h	/^    proftime_T	prof_child;	\/\/ time spent in a child$/;"	m	struct:funccall_S
prof_child_enter	profiler.c	/^prof_child_enter($/;"	f
prof_child_exit	profiler.c	/^prof_child_exit($/;"	f
prof_def_func	profiler.c	/^prof_def_func(void)$/;"	f
prof_func_line	profiler.c	/^prof_func_line($/;"	f	file:
prof_ga	debugger.c	/^static garray_T prof_ga = {0, 0, sizeof(struct debuggy), 4, NULL};$/;"	v	file:
prof_inchar_enter	profiler.c	/^prof_inchar_enter(void)$/;"	f
prof_inchar_exit	profiler.c	/^prof_inchar_exit(void)$/;"	f
prof_self_cmp	profiler.c	/^prof_self_cmp(const void *s1, const void *s2)$/;"	f	file:
prof_sort_list	profiler.c	/^prof_sort_list($/;"	f	file:
prof_total_cmp	profiler.c	/^prof_total_cmp(const void *s1, const void *s2)$/;"	f	file:
prof_wait_time	profiler.c	/^static proftime_T prof_wait_time;$/;"	v	file:
profile_add	profiler.c	/^profile_add(proftime_T *tm, proftime_T *tm2)$/;"	f
profile_cmp	profiler.c	/^profile_cmp(const proftime_T *tm1, const proftime_T *tm2)$/;"	f
profile_divide	profiler.c	/^profile_divide(proftime_T *tm, int count, proftime_T *tm2)$/;"	f
profile_dump	profiler.c	/^profile_dump(void)$/;"	f
profile_end	profiler.c	/^profile_end(proftime_T *tm)$/;"	f
profile_equal	profiler.c	/^profile_equal(proftime_T *tm1, proftime_T *tm2)$/;"	f	file:
profile_float	profiler.c	/^profile_float(proftime_T *tm)$/;"	f
profile_fname	profiler.c	/^static char_u	*profile_fname = NULL;$/;"	v	file:
profile_get_wait	profiler.c	/^profile_get_wait(proftime_T *tm)$/;"	f	file:
profile_msg	profiler.c	/^profile_msg(proftime_T *tm)$/;"	f
profile_passed_limit	profiler.c	/^profile_passed_limit(proftime_T *tm)$/;"	f
profile_self	profiler.c	/^profile_self(proftime_T *self, proftime_T *total, proftime_T *children)$/;"	f
profile_setlimit	profiler.c	/^profile_setlimit(long msec, proftime_T *tm)$/;"	f
profile_start	profiler.c	/^profile_start(proftime_T *tm)$/;"	f
profile_sub	profiler.c	/^profile_sub(proftime_T *tm, proftime_T *tm2)$/;"	f
profile_sub_wait	profiler.c	/^profile_sub_wait(proftime_T *tm, proftime_T *tma)$/;"	f
profile_zero	profiler.c	/^profile_zero(proftime_T *tm)$/;"	f
proftime_T	vim.h	/^typedef LARGE_INTEGER proftime_T;$/;"	t
proftime_T	vim.h	/^typedef int proftime_T;	    \/\/ dummy for function prototypes$/;"	t
proftime_T	vim.h	/^typedef struct timeval proftime_T;$/;"	t	typeref:struct:timeval
proftime_time_left	time.c	/^proftime_time_left(proftime_T *due, proftime_T *now)$/;"	f
prog	quickfix.c	/^    regprog_T	    *prog;	\/\/ pre-formatted part of 'errorformat'$/;"	m	struct:efm_S	file:
prog_magic_wrong	regexp.c	/^prog_magic_wrong(void)$/;"	f	file:
program	regexp.h	/^    char_u		program[1];	\/\/ actually longer..$/;"	m	struct:__anon173
prompt_curpos_editable	edit.c	/^prompt_curpos_editable()$/;"	f
prompt_for_number	misc1.c	/^prompt_for_number(int *mouse_used)$/;"	f
prompt_text	edit.c	/^prompt_text(void)$/;"	f
prop	mbyte.c	/^{   char *name;		int prop;		int codepage;}$/;"	m	struct:__anon67	file:
propInfo	if_xcmdsrv.c	/^    char_u		*propInfo;$/;"	m	struct:x_cmdqueue	file:
prop_add_common	textprop.c	/^prop_add_common($/;"	f
prop_fill_dict	textprop.c	/^prop_fill_dict(dict_T *dict, textprop_T *prop, buf_T *buf)$/;"	f	file:
prop_type_set	textprop.c	/^prop_type_set(typval_T *argvars, int add)$/;"	f	file:
property_event	gui_gtk_x11.c	/^property_event(GtkWidget *widget,$/;"	f	file:
proportional	gui_xmdlg.c	/^proportional(char *font)$/;"	f	file:
proptype_S	structs.h	/^typedef struct proptype_S$/;"	s
proptype_T	structs.h	/^} proptype_T;$/;"	t	typeref:struct:proptype_S
proptype_id	textprop.c	/^static int proptype_id = 0;$/;"	v	file:
prt_add_resource	hardcopy.c	/^prt_add_resource(struct prt_ps_resource_S *resource)$/;"	f	file:
prt_ascii_encoding	hardcopy.c	/^static char *prt_ascii_encoding;$/;"	v	file:
prt_attribute_change	hardcopy.c	/^static int prt_attribute_change;$/;"	v	file:
prt_bgcol	hardcopy.c	/^static int prt_bgcol;$/;"	v	file:
prt_bgcol_offset	hardcopy.c	/^static float prt_bgcol_offset;$/;"	v	file:
prt_bottom_margin	hardcopy.c	/^static float prt_bottom_margin;$/;"	v	file:
prt_bufsiz	hardcopy.c	/^static int prt_bufsiz;$/;"	v	file:
prt_build_cid_fontname	hardcopy.c	/^prt_build_cid_fontname(int font, char_u *name, int name_len)$/;"	f	file:
prt_char_width	hardcopy.c	/^static float prt_char_width;$/;"	v	file:
prt_check_resource	hardcopy.c	/^prt_check_resource(struct prt_ps_resource_S *resource, char_u *version)$/;"	f	file:
prt_cmap	hardcopy.c	/^static char prt_cmap[80];$/;"	v	file:
prt_collate	hardcopy.c	/^static int prt_collate;$/;"	v	file:
prt_conv	hardcopy.c	/^static vimconv_T prt_conv;$/;"	v	file:
prt_custom_cmap	hardcopy.c	/^static int prt_custom_cmap;$/;"	v	file:
prt_def_cidfont	hardcopy.c	/^prt_def_cidfont(char *new_name, int height, char *cidfont)$/;"	f	file:
prt_def_font	hardcopy.c	/^prt_def_font($/;"	f	file:
prt_def_var	hardcopy.c	/^prt_def_var(char *name, double value, int prec)$/;"	f	file:
prt_dlg	os_mswin.c	/^static PRINTDLGW	prt_dlg;$/;"	v	file:
prt_do_bgcol	hardcopy.c	/^static int prt_do_bgcol;$/;"	v	file:
prt_do_conv	hardcopy.c	/^static int prt_do_conv;$/;"	v	file:
prt_do_moveto	hardcopy.c	/^static int prt_do_moveto;$/;"	v	file:
prt_do_underline	hardcopy.c	/^static int prt_do_underline;$/;"	v	file:
prt_dsc_atend	hardcopy.c	2002;"	d	file:
prt_dsc_comment_S	hardcopy.c	/^struct prt_dsc_comment_S$/;"	s	file:
prt_dsc_docmedia	hardcopy.c	/^prt_dsc_docmedia($/;"	f	file:
prt_dsc_font_resource	hardcopy.c	/^prt_dsc_font_resource(char *resource, struct prt_ps_font_S *ps_font)$/;"	f	file:
prt_dsc_ints	hardcopy.c	/^prt_dsc_ints(char *comment, int count, int *ints)$/;"	f	file:
prt_dsc_line_S	hardcopy.c	/^struct prt_dsc_line_S$/;"	s	file:
prt_dsc_noarg	hardcopy.c	/^prt_dsc_noarg(char *comment)$/;"	f	file:
prt_dsc_requirements	hardcopy.c	/^prt_dsc_requirements($/;"	f	file:
prt_dsc_resources	hardcopy.c	/^prt_dsc_resources($/;"	f	file:
prt_dsc_start	hardcopy.c	/^prt_dsc_start(void)$/;"	f	file:
prt_dsc_table	hardcopy.c	/^static struct prt_dsc_comment_S prt_dsc_table[] =$/;"	v	typeref:struct:prt_dsc_comment_S	file:
prt_dsc_text	hardcopy.c	/^prt_dsc_text(char *comment, char *text)$/;"	f	file:
prt_dsc_textline	hardcopy.c	/^prt_dsc_textline(char *comment, char *text)$/;"	f	file:
prt_dup_cidfont	hardcopy.c	/^prt_dup_cidfont(char *original_name, char *new_name)$/;"	f	file:
prt_duplex	hardcopy.c	/^static int prt_duplex;$/;"	v	file:
prt_fgcol	hardcopy.c	/^static int prt_fgcol;$/;"	v	file:
prt_file_error	hardcopy.c	/^static int prt_file_error;$/;"	v	file:
prt_find_resource	hardcopy.c	/^prt_find_resource(char *name, struct prt_ps_resource_S *resource)$/;"	f	file:
prt_first_line_height	hardcopy.c	/^static float prt_first_line_height;$/;"	v	file:
prt_flush_buffer	hardcopy.c	/^prt_flush_buffer(void)$/;"	f	file:
prt_font	hardcopy.c	/^static int prt_font;$/;"	v	file:
prt_font_handles	os_mswin.c	/^static HFONT		prt_font_handles[2][2][2];$/;"	v	file:
prt_font_metrics	hardcopy.c	/^prt_font_metrics(int font_scale)$/;"	f	file:
prt_get_attr	hardcopy.c	/^prt_get_attr($/;"	f	file:
prt_get_cpl	hardcopy.c	/^prt_get_cpl(void)$/;"	f	file:
prt_get_cpl	os_mswin.c	/^prt_get_cpl(void)$/;"	f	file:
prt_get_lpp	hardcopy.c	/^prt_get_lpp(void)$/;"	f	file:
prt_get_lpp	os_mswin.c	/^prt_get_lpp(void)$/;"	f	file:
prt_get_term_color	hardcopy.c	/^prt_get_term_color(int colorindex)$/;"	f	file:
prt_get_unit	hardcopy.c	/^prt_get_unit(int idx)$/;"	f
prt_half_width	hardcopy.c	/^static int prt_half_width;$/;"	v	file:
prt_header	hardcopy.c	/^prt_header($/;"	f	file:
prt_header_height	hardcopy.c	/^prt_header_height(void)$/;"	f
prt_hexchar	hardcopy.c	/^static char_u prt_hexchar[] = "0123456789abcdef";$/;"	v	file:
prt_in_ascii	hardcopy.c	/^static int prt_in_ascii;$/;"	v	file:
prt_left_margin	hardcopy.c	/^static float prt_left_margin;$/;"	v	file:
prt_left_margin	os_mswin.c	/^static int		prt_left_margin;$/;"	v	file:
prt_line_buffer	hardcopy.c	/^static char_u prt_line_buffer[257];$/;"	v	file:
prt_line_height	hardcopy.c	/^static float prt_line_height;$/;"	v	file:
prt_line_height	os_mswin.c	/^static int		prt_line_height;$/;"	v	file:
prt_line_number	hardcopy.c	/^prt_line_number($/;"	f	file:
prt_match_charset	hardcopy.c	/^prt_match_charset($/;"	f	file:
prt_match_encoding	hardcopy.c	/^prt_match_encoding($/;"	f	file:
prt_media	hardcopy.c	/^static int prt_media;$/;"	v	file:
prt_mediasize	hardcopy.c	/^static struct prt_mediasize_S prt_mediasize[] =$/;"	v	typeref:struct:prt_mediasize_S	file:
prt_mediasize_S	hardcopy.c	/^struct prt_mediasize_S$/;"	s	file:
prt_message	hardcopy.c	/^prt_message(char_u *s)$/;"	f	file:
prt_name	os_mswin.c	/^static char_u		*prt_name = NULL;$/;"	v	file:
prt_need_bgcol	hardcopy.c	/^static int prt_need_bgcol;$/;"	v	file:
prt_need_fgcol	hardcopy.c	/^static int prt_need_fgcol;$/;"	v	file:
prt_need_font	hardcopy.c	/^static int prt_need_font;$/;"	v	file:
prt_need_moveto	hardcopy.c	/^static int prt_need_moveto;$/;"	v	file:
prt_need_underline	hardcopy.c	/^static int prt_need_underline;$/;"	v	file:
prt_new_bgcol	hardcopy.c	/^static int prt_new_bgcol;$/;"	v	file:
prt_next_dsc	hardcopy.c	/^prt_next_dsc(struct prt_dsc_line_S *p_dsc_line)$/;"	f	file:
prt_num_copies	hardcopy.c	/^static int prt_num_copies;$/;"	v	file:
prt_number_width	hardcopy.c	/^static float prt_number_width;$/;"	v	file:
prt_number_width	os_mswin.c	/^static int		prt_number_width;$/;"	v	file:
prt_open_resource	hardcopy.c	/^prt_open_resource(struct prt_ps_resource_S *resource)$/;"	f	file:
prt_out_mbyte	hardcopy.c	/^static int prt_out_mbyte;$/;"	v	file:
prt_page_height	hardcopy.c	/^static float prt_page_height;$/;"	v	file:
prt_page_margins	hardcopy.c	/^prt_page_margins($/;"	f	file:
prt_page_num	hardcopy.c	/^static int prt_page_num;$/;"	v	file:
prt_page_width	hardcopy.c	/^static float prt_page_width;$/;"	v	file:
prt_portrait	hardcopy.c	/^static int prt_portrait;$/;"	v	file:
prt_pos_T	hardcopy.c	/^} prt_pos_T;$/;"	t	typeref:struct:__anon47	file:
prt_pos_x	hardcopy.c	/^static float prt_pos_x = 0;$/;"	v	file:
prt_pos_x	os_mswin.c	/^static int prt_pos_x = 0;$/;"	v	file:
prt_pos_x_moveto	hardcopy.c	/^static float prt_pos_x_moveto = 0.0;$/;"	v	file:
prt_pos_y	hardcopy.c	/^static float prt_pos_y = 0;$/;"	v	file:
prt_pos_y	os_mswin.c	/^static int prt_pos_y = 0;$/;"	v	file:
prt_pos_y_moveto	hardcopy.c	/^static float prt_pos_y_moveto = 0.0;$/;"	v	file:
prt_ps_buffer	hardcopy.c	/^static garray_T prt_ps_buffer;$/;"	v	file:
prt_ps_charset_S	hardcopy.c	/^struct prt_ps_charset_S$/;"	s	file:
prt_ps_courier_font	hardcopy.c	/^static struct prt_ps_font_S prt_ps_courier_font =$/;"	v	typeref:struct:prt_ps_font_S	file:
prt_ps_encoding_S	hardcopy.c	/^struct prt_ps_encoding_S$/;"	s	file:
prt_ps_fd	hardcopy.c	/^static FILE *prt_ps_fd;$/;"	v	file:
prt_ps_file_name	hardcopy.c	/^static char_u *prt_ps_file_name = NULL;$/;"	v	file:
prt_ps_font	hardcopy.c	/^static struct prt_ps_font_S* prt_ps_font;$/;"	v	typeref:struct:prt_ps_font_S	file:
prt_ps_font_S	hardcopy.c	/^struct prt_ps_font_S$/;"	s	file:
prt_ps_mb_font	hardcopy.c	/^static struct prt_ps_font_S prt_ps_mb_font =$/;"	v	typeref:struct:prt_ps_font_S	file:
prt_ps_mbfont_S	hardcopy.c	/^struct prt_ps_mbfont_S$/;"	s	file:
prt_ps_mbfonts	hardcopy.c	/^static struct prt_ps_mbfont_S prt_ps_mbfonts[] =$/;"	v	typeref:struct:prt_ps_mbfont_S	file:
prt_ps_resource_S	hardcopy.c	/^struct prt_ps_resource_S$/;"	s	file:
prt_real_bits	hardcopy.c	/^prt_real_bits($/;"	f	file:
prt_resfile	hardcopy.c	/^static struct prt_resfile_buffer_S prt_resfile;$/;"	v	typeref:struct:prt_resfile_buffer_S	file:
prt_resfile_buffer_S	hardcopy.c	/^struct prt_resfile_buffer_S$/;"	s	file:
prt_resfile_next_line	hardcopy.c	/^prt_resfile_next_line(void)$/;"	f	file:
prt_resfile_skip_nonws	hardcopy.c	/^prt_resfile_skip_nonws(int offset)$/;"	f	file:
prt_resfile_skip_ws	hardcopy.c	/^prt_resfile_skip_ws(int offset)$/;"	f	file:
prt_resfile_strncmp	hardcopy.c	/^prt_resfile_strncmp(int offset, char *string, int len)$/;"	f	file:
prt_resource_name	hardcopy.c	/^prt_resource_name(char_u *filename, void *cookie)$/;"	f	file:
prt_resource_types	hardcopy.c	/^static char *prt_resource_types[] =$/;"	v	file:
prt_right_margin	hardcopy.c	/^static float prt_right_margin;$/;"	v	file:
prt_right_margin	os_mswin.c	/^static int		prt_right_margin;$/;"	v	file:
prt_set_bg	hardcopy.c	/^prt_set_bg(long_u bg)$/;"	f	file:
prt_set_fg	hardcopy.c	/^prt_set_fg(long_u fg)$/;"	f	file:
prt_set_font	hardcopy.c	/^prt_set_font(int bold, int italic, int underline)$/;"	f	file:
prt_settings_T	structs.h	/^} prt_settings_T;$/;"	t	typeref:struct:__anon247
prt_text_attr_T	structs.h	/^} prt_text_attr_T;$/;"	t	typeref:struct:__anon246
prt_text_run	hardcopy.c	/^static float prt_text_run;$/;"	v	file:
prt_tm	os_mswin.c	/^static TEXTMETRIC	prt_tm;$/;"	v	file:
prt_top_margin	hardcopy.c	/^static float prt_top_margin;$/;"	v	file:
prt_top_margin	os_mswin.c	/^static int		prt_top_margin;$/;"	v	file:
prt_tumble	hardcopy.c	/^static int prt_tumble;$/;"	v	file:
prt_underline	hardcopy.c	/^static int prt_underline;$/;"	v	file:
prt_use_courier	hardcopy.c	/^static int prt_use_courier;$/;"	v	file:
prt_use_number	hardcopy.c	/^prt_use_number(void)$/;"	f
prt_write_boolean	hardcopy.c	/^prt_write_boolean(int b)$/;"	f	file:
prt_write_file	hardcopy.c	/^prt_write_file(char_u *buffer)$/;"	f	file:
prt_write_file_len	hardcopy.c	/^prt_write_file_len(char_u *buffer, int bytes)$/;"	f	file:
prt_write_file_raw_len	hardcopy.c	/^prt_write_file_raw_len(char_u *buffer, int bytes)$/;"	f	file:
prt_write_int	hardcopy.c	/^prt_write_int(int i)$/;"	f	file:
prt_write_real	hardcopy.c	/^prt_write_real(double val, int prec)$/;"	f	file:
prt_write_string	hardcopy.c	/^prt_write_string(char *s)$/;"	f	file:
ps_fontname	hardcopy.c	/^    char	*(ps_fontname[4]);$/;"	m	struct:prt_ps_font_S	file:
psepc	globals.h	/^EXTERN char	psepc INIT(= '\\\\');	\/\/ normal path separator character$/;"	v
psepcN	globals.h	/^EXTERN char	psepcN INIT(= '\/');	\/\/ abnormal path separator character$/;"	v
pseudo_code	mouse.c	/^    int	    pseudo_code;	\/\/ Code for pseudo mouse event$/;"	m	struct:mousetable	file:
pstrcmp	filepath.c	/^pstrcmp(const void *a, const void *b)$/;"	f	file:
ptCurrentPos	gui_w32.c	/^    POINT ptCurrentPos;$/;"	m	struct:tagCOMPOSITIONFORM	file:
pt_argc	structs.h	/^    int		pt_argc;	\/\/ number of arguments$/;"	m	struct:partial_S
pt_argv	structs.h	/^    typval_T	*pt_argv;	\/\/ arguments in allocated array$/;"	m	struct:partial_S
pt_auto	structs.h	/^    int		pt_auto;	\/\/ when TRUE the partial was created for using$/;"	m	struct:partial_S
pt_dict	structs.h	/^    dict_T	*pt_dict;	\/\/ dict for "self"$/;"	m	struct:partial_S
pt_flags	structs.h	/^    int		pt_flags;	\/\/ PT_FLAG_ values$/;"	m	struct:proptype_S
pt_func	structs.h	/^    ufunc_T	*pt_func;	\/\/ function pointer; when NULL lookup function$/;"	m	struct:partial_S
pt_hl_id	structs.h	/^    int		pt_hl_id;	\/\/ highlighting$/;"	m	struct:proptype_S
pt_id	structs.h	/^    int		pt_id;		\/\/ value used for tp_id$/;"	m	struct:proptype_S
pt_name	structs.h	/^    char_u	*pt_name;	\/\/ function name; when NULL use$/;"	m	struct:partial_S
pt_name	structs.h	/^    char_u	pt_name[1];	\/\/ property type name, actually longer$/;"	m	struct:proptype_S
pt_priority	structs.h	/^    int		pt_priority;	\/\/ priority$/;"	m	struct:proptype_S
pt_refcount	structs.h	/^    int		pt_refcount;	\/\/ reference count$/;"	m	struct:partial_S
pt_type	structs.h	/^    int		pt_type;	\/\/ number used for tp_type$/;"	m	struct:proptype_S
ptag_entry	tag.c	/^static taggy_T ptag_entry = {NULL, {{0, 0, 0}, 0}, 0, 0, NULL};$/;"	v	file:
ptr	if_mzsch.c	/^    void    **ptr;$/;"	m	struct:__anon56	file:
ptr	if_python.c	/^    PYTHON_PROC *ptr;$/;"	m	struct:__anon58	file:
ptr	if_python3.c	/^    PYTHON_PROC *ptr;$/;"	m	struct:__anon57	file:
ptr	if_ruby.c	/^    RUBY_PROC *ptr;$/;"	m	struct:__anon59	file:
ptr	if_tcl.c	/^    TCL_PROC* ptr;$/;"	m	struct:__anon61	file:
ptr	regexp_bt.c	/^	char_u	*ptr;	\/\/ rex.input pointer, for single-line regexp$/;"	m	union:__anon93::__anon94	file:
ptr	regexp_bt.c	/^	char_u	*ptr;$/;"	m	union:__anon95::__anon96	file:
ptr	regexp_nfa.c	/^	char_u	*ptr;$/;"	m	union:nfa_pim_S::__anon106	file:
ptr	structs.h	/^	u_header_T *ptr;	\/\/ pointer to next header for alt. redo$/;"	m	union:u_header::__anon187
ptr	structs.h	/^	u_header_T *ptr;	\/\/ pointer to next undo header in list$/;"	m	union:u_header::__anon185
ptr	structs.h	/^	u_header_T *ptr;	\/\/ pointer to previous header for alt. redo$/;"	m	union:u_header::__anon188
ptr	structs.h	/^	u_header_T *ptr;	\/\/ pointer to previous header in list$/;"	m	union:u_header::__anon186
ptr2cells	charset.c	/^ptr2cells(char_u *p)$/;"	f
pullAction	gui_athena.c	/^static XtActionsRec	pullAction[2] = {$/;"	v	file:
pullerBitmap	gui_athena.c	/^static Pixmap		pullerBitmap = None;$/;"	v	file:
puller_width	gui_athena.c	/^static int		puller_width = 0;$/;"	v	file:
pum_array	popupmenu.c	/^static pumitem_T *pum_array = NULL;	\/\/ items of displayed pum$/;"	v	file:
pum_base_width	popupmenu.c	/^static int pum_base_width;		\/\/ width of pum items base$/;"	v	file:
pum_call_update_screen	popupmenu.c	/^pum_call_update_screen()$/;"	f
pum_clear	popupmenu.c	/^pum_clear(void)$/;"	f
pum_col	popupmenu.c	/^static int pum_col;			\/\/ left column of pum$/;"	v	file:
pum_compute_size	popupmenu.c	/^pum_compute_size(void)$/;"	f	file:
pum_display	popupmenu.c	/^pum_display($/;"	f
pum_enough_matches	insexpand.c	/^pum_enough_matches(void)$/;"	f	file:
pum_execute_menu	popupmenu.c	/^pum_execute_menu(vimmenu_T *menu, int mode)$/;"	f	file:
pum_extra	structs.h	/^    char_u	*pum_extra;	\/\/ extra menu text (may be truncated)$/;"	m	struct:__anon248
pum_extra_width	popupmenu.c	/^static int pum_extra_width;		\/\/ width of extra stuff$/;"	v	file:
pum_first	popupmenu.c	/^static int pum_first = 0;		\/\/ index of top item$/;"	v	file:
pum_get_height	popupmenu.c	/^pum_get_height(void)$/;"	f
pum_height	popupmenu.c	/^static int pum_height;			\/\/ nr of displayed pum items$/;"	v	file:
pum_info	structs.h	/^    char_u	*pum_info;	\/\/ extra info$/;"	m	struct:__anon248
pum_kind	structs.h	/^    char_u	*pum_kind;	\/\/ extra kind text (may be truncated)$/;"	m	struct:__anon248
pum_kind_width	popupmenu.c	/^static int pum_kind_width;		\/\/ width of pum items kind column$/;"	v	file:
pum_make_popup	popupmenu.c	/^pum_make_popup(char_u *path_name, int use_mouse_pos)$/;"	f
pum_may_redraw	popupmenu.c	/^pum_may_redraw(void)$/;"	f
pum_position_at_mouse	popupmenu.c	/^pum_position_at_mouse(int min_width)$/;"	f	file:
pum_position_info_popup	popupmenu.c	/^pum_position_info_popup(win_T *wp)$/;"	f
pum_pretend_not_visible	popupmenu.c	/^static int pum_pretend_not_visible = FALSE;$/;"	v	file:
pum_redraw	popupmenu.c	/^pum_redraw(void)$/;"	f
pum_row	popupmenu.c	/^static int pum_row;			\/\/ top row of pum$/;"	v	file:
pum_scrollbar	popupmenu.c	/^static int pum_scrollbar;		\/\/ TRUE when scrollbar present$/;"	v	file:
pum_select_mouse_pos	popupmenu.c	/^pum_select_mouse_pos(void)$/;"	f	file:
pum_selected	popupmenu.c	/^static int pum_selected;		\/\/ index of selected item or -1$/;"	v	file:
pum_set_event_info	popupmenu.c	/^pum_set_event_info(dict_T *dict)$/;"	f
pum_set_selected	popupmenu.c	/^pum_set_selected(int n, int repeat UNUSED)$/;"	f	file:
pum_show_popupmenu	popupmenu.c	/^pum_show_popupmenu(vimmenu_T *menu)$/;"	f
pum_size	popupmenu.c	/^static int pum_size;			\/\/ nr of items in "pum_array"$/;"	v	file:
pum_text	structs.h	/^    char_u	*pum_text;	\/\/ main menu text$/;"	m	struct:__anon248
pum_under_menu	popupmenu.c	/^pum_under_menu(int row, int col)$/;"	f
pum_undisplay	popupmenu.c	/^pum_undisplay(void)$/;"	f
pum_visible	popupmenu.c	/^pum_visible(void)$/;"	f
pum_wanted	insexpand.c	/^pum_wanted(void)$/;"	f
pum_width	popupmenu.c	/^static int pum_width;			\/\/ width of displayed pum items$/;"	v	file:
pum_will_redraw	popupmenu.c	/^static int pum_will_redraw = FALSE;$/;"	v	file:
pum_win_col	popupmenu.c	/^static int pum_win_col;$/;"	v	file:
pum_win_height	popupmenu.c	/^static int pum_win_height;$/;"	v	file:
pum_win_row	popupmenu.c	/^static int pum_win_row;$/;"	v	file:
pum_win_wcol	popupmenu.c	/^static int pum_win_wcol;$/;"	v	file:
pum_win_width	popupmenu.c	/^static int pum_win_width;$/;"	v	file:
pum_window	popupmenu.c	/^static win_T *pum_window = NULL;$/;"	v	file:
pumitem_T	structs.h	/^} pumitem_T;$/;"	t	typeref:struct:__anon248
push_current_state	syntax.c	/^push_current_state(int idx)$/;"	f	file:
push_next_match	syntax.c	/^push_next_match(stateitem_T *cur_si)$/;"	f	file:
push_showcmd	normal.c	/^push_showcmd(void)$/;"	f
pushbutton	gui_xmebwp.h	/^    XmPushButtonPart pushbutton;$/;"	m	struct:_XmEnhancedButtonRec
pushbutton_class	gui_xmebwp.h	/^    XmPushButtonClassPart pushbutton_class;$/;"	m	struct:__anon146
put_bytes	misc2.c	/^put_bytes(FILE *fd, long_u nr, int len)$/;"	f
put_callback	evalvars.c	/^put_callback(callback_T *cb, typval_T *tv)$/;"	f
put_eol	session.c	/^put_eol(FILE *fd)$/;"	f
put_escstr	map.c	/^put_escstr(FILE *fd, char_u *strstart, int what)$/;"	f
put_fold_open_close	fold.c	/^put_fold_open_close(FILE *fd, fold_T *fp, linenr_T off)$/;"	f	file:
put_foldopen_recurse	fold.c	/^put_foldopen_recurse($/;"	f	file:
put_folds	fold.c	/^put_folds(FILE *fd, win_T *wp)$/;"	f
put_folds_recurse	fold.c	/^put_folds_recurse(FILE *fd, garray_T *gap, linenr_T off)$/;"	f	file:
put_header_ptr	undo.c	/^put_header_ptr(bufinfo_T *bi, u_header_T *uhp)$/;"	f	file:
put_id_list	syntax.c	/^put_id_list(char_u *name, short *list, int attr)$/;"	f	file:
put_in_typebuf	register.c	/^put_in_typebuf($/;"	f	file:
put_line	session.c	/^put_line(FILE *fd, char *s)$/;"	f
put_node	spellfile.c	/^put_node($/;"	f	file:
put_on_cmdline	ex_getln.c	/^put_on_cmdline(char_u *str, int len, int redraw)$/;"	f
put_pattern	syntax.c	/^put_pattern($/;"	f	file:
put_reedit_in_typebuf	register.c	/^put_reedit_in_typebuf(int silent)$/;"	f	file:
put_register	register.c	/^put_register(int name, void *reg)$/;"	f
put_setbool	option.c	/^put_setbool($/;"	f	file:
put_setnum	option.c	/^put_setnum($/;"	f	file:
put_setstring	option.c	/^put_setstring($/;"	f	file:
put_string_in_typebuf	term.c	/^put_string_in_typebuf($/;"	f	file:
put_time	time.c	/^put_time(FILE *fd, time_T the_time)$/;"	f
put_view	session.c	/^put_view($/;"	f	file:
put_view_curpos	session.c	/^put_view_curpos(FILE *fd, win_T *wp, char *spaces)$/;"	f	file:
putcmdline	ex_getln.c	/^putcmdline(int c, int shift)$/;"	f
putdigraph	digraph.c	/^putdigraph(char_u *str)$/;"	f
putenv	misc2.c	/^putenv(const char *string)$/;"	f
py3_PyArg_Parse	if_python3.c	/^static int (*py3_PyArg_Parse)(PyObject *, char *, ...);$/;"	v	file:
py3_PyArg_ParseTuple	if_python3.c	/^static int (*py3_PyArg_ParseTuple)(PyObject *, char *, ...);$/;"	v	file:
py3_PyBool_Type	if_python3.c	/^static PyTypeObject* py3_PyBool_Type;$/;"	v	file:
py3_PyBytes_AsString	if_python3.c	/^static char* (*py3_PyBytes_AsString)(PyObject *bytes);$/;"	v	file:
py3_PyBytes_AsStringAndSize	if_python3.c	/^static int (*py3_PyBytes_AsStringAndSize)(PyObject *bytes, char **buffer, Py_ssize_t *length);$/;"	v	file:
py3_PyBytes_FromString	if_python3.c	/^static PyObject* (*py3_PyBytes_FromString)(char *str);$/;"	v	file:
py3_PyBytes_FromStringAndSize	if_python3.c	/^static PyObject* (*py3_PyBytes_FromStringAndSize)(char *str, Py_ssize_t length);$/;"	v	file:
py3_PyCapsule_GetPointer	if_python3.c	/^static void* (*py3_PyCapsule_GetPointer)(PyObject *, char *);$/;"	v	file:
py3_PyCapsule_New	if_python3.c	/^static PyObject* (*py3_PyCapsule_New)(void *, char *, PyCapsule_Destructor);$/;"	v	file:
py3_PyDict_GetItemString	if_python3.c	/^static PyObject* (*py3_PyDict_GetItemString)(PyObject *, const char *);$/;"	v	file:
py3_PyDict_New	if_python3.c	/^static PyObject* (*py3_PyDict_New)(void);$/;"	v	file:
py3_PyDict_Next	if_python3.c	/^static int (*py3_PyDict_Next)(PyObject *, Py_ssize_t *, PyObject **, PyObject **);$/;"	v	file:
py3_PyDict_SetItemString	if_python3.c	/^static int (*py3_PyDict_SetItemString)(PyObject *dp, char *key, PyObject *item);$/;"	v	file:
py3_PyErr_BadArgument	if_python3.c	/^static int (*py3_PyErr_BadArgument)(void);$/;"	v	file:
py3_PyErr_Clear	if_python3.c	/^static void (*py3_PyErr_Clear)(void);$/;"	v	file:
py3_PyErr_ExceptionMatches	if_python3.c	/^static int (*py3_PyErr_ExceptionMatches)(PyObject *);$/;"	v	file:
py3_PyErr_Format	if_python3.c	/^static PyObject* (*py3_PyErr_Format)(PyObject *, const char *, ...);$/;"	v	file:
py3_PyErr_NewException	if_python3.c	/^static PyObject* (*py3_PyErr_NewException)(char *name, PyObject *base, PyObject *dict);$/;"	v	file:
py3_PyErr_NoMemory	if_python3.c	/^static PyObject* (*py3_PyErr_NoMemory)(void);$/;"	v	file:
py3_PyErr_Occurred	if_python3.c	/^static PyObject* (*py3_PyErr_Occurred)(void);$/;"	v	file:
py3_PyErr_PrintEx	if_python3.c	/^static void (*py3_PyErr_PrintEx)(int);$/;"	v	file:
py3_PyErr_SetNone	if_python3.c	/^static void (*py3_PyErr_SetNone)(PyObject *);$/;"	v	file:
py3_PyErr_SetObject	if_python3.c	/^static void (*py3_PyErr_SetObject)(PyObject *, PyObject *);$/;"	v	file:
py3_PyErr_SetString	if_python3.c	/^static void (*py3_PyErr_SetString)(PyObject *, const char *);$/;"	v	file:
py3_PyEval_GetGlobals	if_python3.c	/^static PyObject* (*py3_PyEval_GetGlobals)();$/;"	v	file:
py3_PyEval_GetLocals	if_python3.c	/^static PyObject* (*py3_PyEval_GetLocals)();$/;"	v	file:
py3_PyEval_InitThreads	if_python3.c	/^static void (*py3_PyEval_InitThreads)(void);$/;"	v	file:
py3_PyEval_RestoreThread	if_python3.c	/^static void(*py3_PyEval_RestoreThread)(PyThreadState *);$/;"	v	file:
py3_PyEval_SaveThread	if_python3.c	/^static PyThreadState*(*py3_PyEval_SaveThread)(void);$/;"	v	file:
py3_PyFloat_AsDouble	if_python3.c	/^static double (*py3_PyFloat_AsDouble)(PyObject *);$/;"	v	file:
py3_PyFloat_FromDouble	if_python3.c	/^static PyObject* (*py3_PyFloat_FromDouble)(double num);$/;"	v	file:
py3_PyFloat_Type	if_python3.c	/^static PyTypeObject* py3_PyFloat_Type;$/;"	v	file:
py3_PyGILState_Ensure	if_python3.c	/^static PyGILState_STATE (*py3_PyGILState_Ensure)(void);$/;"	v	file:
py3_PyGILState_Release	if_python3.c	/^static void (*py3_PyGILState_Release)(PyGILState_STATE);$/;"	v	file:
py3_PyImport_AddModule	if_python3.c	/^static PyObject* (*py3_PyImport_AddModule)(const char *);$/;"	v	file:
py3_PyImport_AppendInittab	if_python3.c	/^static int (*py3_PyImport_AppendInittab)(const char *name, PyObject* (*initfunc)(void));$/;"	v	file:
py3_PyImport_ImportModule	if_python3.c	/^static PyObject* (*py3_PyImport_ImportModule)(const char *);$/;"	v	file:
py3_PyIter_Next	if_python3.c	/^static PyObject* (*py3_PyIter_Next)(PyObject *);$/;"	v	file:
py3_PyList_Append	if_python3.c	/^static int (*py3_PyList_Append)(PyObject *, PyObject *);$/;"	v	file:
py3_PyList_GetItem	if_python3.c	/^static PyObject* (*py3_PyList_GetItem)(PyObject *, Py_ssize_t);$/;"	v	file:
py3_PyList_Insert	if_python3.c	/^static int (*py3_PyList_Insert)(PyObject *, int, PyObject *);$/;"	v	file:
py3_PyList_New	if_python3.c	/^static PyObject* (*py3_PyList_New)(Py_ssize_t size);$/;"	v	file:
py3_PyList_SetItem	if_python3.c	/^static int (*py3_PyList_SetItem)(PyObject *, Py_ssize_t, PyObject *);$/;"	v	file:
py3_PyList_Size	if_python3.c	/^static Py_ssize_t (*py3_PyList_Size)(PyObject *);$/;"	v	file:
py3_PyLong_AsLong	if_python3.c	/^static long (*py3_PyLong_AsLong)(PyObject *);$/;"	v	file:
py3_PyLong_FromLong	if_python3.c	/^static PyObject* (*py3_PyLong_FromLong)(long);$/;"	v	file:
py3_PyMapping_Check	if_python3.c	/^static int (*py3_PyMapping_Check)(PyObject *);$/;"	v	file:
py3_PyMapping_Keys	if_python3.c	/^static PyObject* (*py3_PyMapping_Keys)(PyObject *);$/;"	v	file:
py3_PyMem_Free	if_python3.c	/^static int (*py3_PyMem_Free)(void *);$/;"	v	file:
py3_PyMem_Malloc	if_python3.c	/^static void* (*py3_PyMem_Malloc)(size_t);$/;"	v	file:
py3_PyModule_AddObject	if_python3.c	/^static int (*py3_PyModule_AddObject)(PyObject *m, const char *name, PyObject *o);$/;"	v	file:
py3_PyModule_Create2	if_python3.c	/^static PyObject* (*py3_PyModule_Create2)(struct PyModuleDef* module, int module_api_version);$/;"	v	file:
py3_PyModule_Create2TraceRefs	if_python3.c	/^static PyObject* (*py3_PyModule_Create2TraceRefs)(struct PyModuleDef* module, int module_api_version);$/;"	v	file:
py3_PyModule_GetDict	if_python3.c	/^static PyObject* (*py3_PyModule_GetDict)(PyObject *);$/;"	v	file:
py3_PyNumber_Check	if_python3.c	/^static int (*py3_PyNumber_Check)(PyObject *);$/;"	v	file:
py3_PyNumber_Long	if_python3.c	/^static PyObject* (*py3_PyNumber_Long)(PyObject *);$/;"	v	file:
py3_PyObject_Call	if_python3.c	/^static PyObject* (*py3_PyObject_Call)(PyObject *, PyObject *, PyObject *);$/;"	v	file:
py3_PyObject_CallFunctionObjArgs	if_python3.c	/^static PyObject* (*py3_PyObject_CallFunctionObjArgs)(PyObject *, ...);$/;"	v	file:
py3_PyObject_Free	if_python3.c	/^static void (*py3_PyObject_Free)(void*);$/;"	v	file:
py3_PyObject_GC_Del	if_python3.c	/^static void(*py3_PyObject_GC_Del)(void *);$/;"	v	file:
py3_PyObject_GC_UnTrack	if_python3.c	/^static void(*py3_PyObject_GC_UnTrack)(void *);$/;"	v	file:
py3_PyObject_GenericGetAttr	if_python3.c	/^static PyObject* (*py3_PyObject_GenericGetAttr)(PyObject *obj, PyObject *name);$/;"	v	file:
py3_PyObject_GetAttrString	if_python3.c	/^static PyObject* (*py3_PyObject_GetAttrString)(PyObject *, const char *);$/;"	v	file:
py3_PyObject_GetItem	if_python3.c	/^static PyObject* (*py3_PyObject_GetItem)(PyObject *, PyObject *);$/;"	v	file:
py3_PyObject_GetIter	if_python3.c	/^static PyObject* (*py3_PyObject_GetIter)(PyObject *);$/;"	v	file:
py3_PyObject_HasAttrString	if_python3.c	/^static int (*py3_PyObject_HasAttrString)(PyObject *, const char *);$/;"	v	file:
py3_PyObject_IsTrue	if_python3.c	/^static int (*py3_PyObject_IsTrue)(PyObject *);$/;"	v	file:
py3_PyObject_Malloc	if_python3.c	/^static void* (*py3_PyObject_Malloc)(size_t);$/;"	v	file:
py3_PyObject_Repr	if_python3.c	/^static PyObject* (*py3_PyObject_Repr)(PyObject *);$/;"	v	file:
py3_PyObject_SetAttrString	if_python3.c	/^static int (*py3_PyObject_SetAttrString)(PyObject *, const char *, PyObject *);$/;"	v	file:
py3_PyRun_SimpleString	if_python3.c	/^static int (*py3_PyRun_SimpleString)(char *);$/;"	v	file:
py3_PyRun_String	if_python3.c	/^static PyObject* (*py3_PyRun_String)(char *, int, PyObject *, PyObject *);$/;"	v	file:
py3_PySequence_Check	if_python3.c	/^static int (*py3_PySequence_Check)(PyObject *);$/;"	v	file:
py3_PySequence_Fast	if_python3.c	/^static PyObject* (*py3_PySequence_Fast)(PyObject *, const char *);$/;"	v	file:
py3_PySequence_GetItem	if_python3.c	/^static PyObject* (*py3_PySequence_GetItem)(PyObject *, Py_ssize_t);$/;"	v	file:
py3_PySequence_Size	if_python3.c	/^static Py_ssize_t (*py3_PySequence_Size)(PyObject *);$/;"	v	file:
py3_PySlice_AdjustIndices	if_python3.c	/^static int (*py3_PySlice_AdjustIndices)(Py_ssize_t length,$/;"	v	file:
py3_PySlice_GetIndicesEx	if_python3.c	/^static int (*py3_PySlice_GetIndicesEx)(PySliceObject_T *r, Py_ssize_t length,$/;"	v	file:
py3_PySlice_Type	if_python3.c	/^static PyTypeObject* py3_PySlice_Type;$/;"	v	file:
py3_PySlice_Unpack	if_python3.c	/^static int (*py3_PySlice_Unpack)(PyObject *slice,$/;"	v	file:
py3_PyStdPrinter_Type	if_python3.c	/^static PyTypeObject* py3_PyStdPrinter_Type;$/;"	v	file:
py3_PySys_GetObject	if_python3.c	/^static PyObject* (*py3_PySys_GetObject)(char *);$/;"	v	file:
py3_PySys_SetArgv	if_python3.c	/^static int (*py3_PySys_SetArgv)(int, wchar_t **);$/;"	v	file:
py3_PySys_SetObject	if_python3.c	/^static int (*py3_PySys_SetObject)(char *, PyObject *);$/;"	v	file:
py3_PyTuple_GetItem	if_python3.c	/^static PyObject* (*py3_PyTuple_GetItem)(PyObject *, Py_ssize_t);$/;"	v	file:
py3_PyTuple_Size	if_python3.c	/^static Py_ssize_t (*py3_PyTuple_Size)(PyObject *);$/;"	v	file:
py3_PyType_GenericAlloc	if_python3.c	/^static PyObject* (*py3_PyType_GenericAlloc)(PyTypeObject *type, Py_ssize_t nitems);$/;"	v	file:
py3_PyType_GenericNew	if_python3.c	/^static PyObject* (*py3_PyType_GenericNew)(PyTypeObject *type, PyObject *args, PyObject *kwds);$/;"	v	file:
py3_PyType_IsSubtype	if_python3.c	/^static int (*py3_PyType_IsSubtype)(PyTypeObject *, PyTypeObject *);$/;"	v	file:
py3_PyType_Ready	if_python3.c	/^static int (*py3_PyType_Ready)(PyTypeObject *type);$/;"	v	file:
py3_PyType_Type	if_python3.c	/^static PyTypeObject* py3_PyType_Type;$/;"	v	file:
py3_PyUnicodeUCS2_FromFormat	if_python3.c	/^static PyObject* (*py3_PyUnicodeUCS2_FromFormat)(const char *u, ...);$/;"	v	file:
py3_PyUnicodeUCS4_FromFormat	if_python3.c	/^static PyObject* (*py3_PyUnicodeUCS4_FromFormat)(const char *u, ...);$/;"	v	file:
py3_PyUnicode_AsEncodedString	if_python3.c	/^static PyObject* (*py3_PyUnicode_AsEncodedString)(PyObject *unicode, const char* encoding, const char* errors);$/;"	v	file:
py3_PyUnicode_AsUTF8	if_python3.c	/^static char* (*py3_PyUnicode_AsUTF8)(PyObject *unicode);$/;"	v	file:
py3_PyUnicode_Decode	if_python3.c	/^static PyObject* (*py3_PyUnicode_Decode)(const char *u, Py_ssize_t size,$/;"	v	file:
py3_PyUnicode_FromFormat	if_python3.c	/^static PyObject* (*py3_PyUnicode_FromFormat)(const char *u, ...);$/;"	v	file:
py3_PyUnicode_FromString	if_python3.c	/^static PyObject* (*py3_PyUnicode_FromString)(const char *u);$/;"	v	file:
py3_Py_BuildValue	if_python3.c	/^static PyObject* (*py3_Py_BuildValue)(char *, ...);$/;"	v	file:
py3_Py_Finalize	if_python3.c	/^static void (*py3_Py_Finalize)(void);$/;"	v	file:
py3_Py_Initialize	if_python3.c	/^static void (*py3_Py_Initialize)(void);$/;"	v	file:
py3_Py_IsInitialized	if_python3.c	/^static int (*py3_Py_IsInitialized)(void);$/;"	v	file:
py3_Py_SetPythonHome	if_python3.c	/^static void (*py3_Py_SetPythonHome)(wchar_t *home);$/;"	v	file:
py3__PyObject_CallFunction_SizeT	if_python3.c	/^static PyObject* (*py3__PyObject_CallFunction_SizeT)(PyObject *, char *, ...);$/;"	v	file:
py3__PyObject_DebugFree	if_python3.c	/^static void (*py3__PyObject_DebugFree)(void*);$/;"	v	file:
py3__PyObject_DebugMalloc	if_python3.c	/^static void* (*py3__PyObject_DebugMalloc)(size_t);$/;"	v	file:
py3__PyObject_GC_New	if_python3.c	/^static PyObject*(*py3__PyObject_GC_New)(PyTypeObject *);$/;"	v	file:
py3__PyObject_Init	if_python3.c	/^static PyObject*(*py3__PyObject_Init)(PyObject *, PyTypeObject *);$/;"	v	file:
py3__PyObject_NextNotImplemented	if_python3.c	/^static iternextfunc py3__PyObject_NextNotImplemented;$/;"	v	file:
py3__PyUnicode_AsString	if_python3.c	/^static char* (*py3__PyUnicode_AsString)(PyObject *unicode);$/;"	v	file:
py3__Py_DECREF	if_python3.c	/^py3__Py_DECREF(const char *filename UNUSED, int lineno UNUSED, PyObject *op)$/;"	f	file:
py3__Py_Dealloc	if_python3.c	/^static void (*py3__Py_Dealloc)(PyObject *obj);$/;"	v	file:
py3__Py_FalseStruct	if_python3.c	/^static PyObject* py3__Py_FalseStruct;$/;"	v	file:
py3__Py_NegativeRefcount	if_python3.c	/^static void (*py3__Py_NegativeRefcount)(const char *fname, int lineno, PyObject *op);$/;"	v	file:
py3__Py_NoneStruct	if_python3.c	/^static PyObject* py3__Py_NoneStruct;$/;"	v	file:
py3__Py_RefTotal	if_python3.c	/^static Py_ssize_t* py3__Py_RefTotal;$/;"	v	file:
py3__Py_TrueStruct	if_python3.c	/^static PyObject* py3__Py_TrueStruct;$/;"	v	file:
py3__Py_XDECREF	if_python3.c	/^py3__Py_XDECREF(PyObject *op)$/;"	f	file:
py3_funcname_table	if_python3.c	/^} py3_funcname_table[] =$/;"	v	typeref:struct:__anon57	file:
py3_runtime_link_init	if_python3.c	/^py3_runtime_link_init(char *libname, int verbose)$/;"	f	file:
py3initialised	if_python3.c	/^static int py3initialised = 0;$/;"	v	file:
py_PyUnicode_AsEncodedString	if_python.c	/^static PyObject *(*py_PyUnicode_AsEncodedString)(PyObject *, char *, char *);$/;"	v	file:
py_chdir	if_py_both.h	/^static PyObject *py_chdir;$/;"	v
py_dict_alloc	if_py_both.h	/^py_dict_alloc(void)$/;"	f
py_fchdir	if_py_both.h	/^static PyObject *py_fchdir;$/;"	v
py_find_module	if_py_both.h	/^static PyObject *py_find_module;$/;"	v
py_find_spec	if_py_both.h	/^static PyObject *py_find_spec;$/;"	v
py_fix_cursor	if_py_both.h	/^py_fix_cursor(linenr_T lo, linenr_T hi, linenr_T extra)$/;"	f
py_getcwd	if_py_both.h	/^static PyObject *py_getcwd;$/;"	v
py_home_buf	if_python.c	/^static char *py_home_buf = NULL;$/;"	v	file:
py_home_buf	if_python3.c	/^static wchar_t *py_home_buf = NULL;$/;"	v	file:
py_list_alloc	if_py_both.h	/^py_list_alloc(void)$/;"	f
py_load_module	if_py_both.h	/^static PyObject *py_load_module;$/;"	v
py_memsave	if_python.c	/^py_memsave(void *p, size_t len)$/;"	f	file:
pydict_to_tv	if_py_both.h	/^pydict_to_tv(PyObject *obj, typval_T *tv, PyObject *lookup_dict)$/;"	f
pylinkedlist_S	if_py_both.h	/^typedef struct pylinkedlist_S {$/;"	s
pylinkedlist_T	if_py_both.h	/^} pylinkedlist_T;$/;"	t	typeref:struct:pylinkedlist_S
pyll_add	if_py_both.h	/^pyll_add(PyObject *self, pylinkedlist_T *ref, pylinkedlist_T **last)$/;"	f
pyll_remove	if_py_both.h	/^pyll_remove(pylinkedlist_T *ref, pylinkedlist_T **last)$/;"	f
pymap_to_tv	if_py_both.h	/^pymap_to_tv(PyObject *obj, typval_T *tv, PyObject *lookup_dict)$/;"	f
pyseq_to_tv	if_py_both.h	/^pyseq_to_tv(PyObject *obj, typval_T *tv, PyObject *lookup_dict)$/;"	f
python3_buffer_free	if_python3.c	/^python3_buffer_free(buf_T *buf)$/;"	f
python3_enabled	if_python3.c	/^python3_enabled(int verbose)$/;"	f
python3_end	if_python3.c	/^python3_end(void)$/;"	f
python3_loaded	if_python3.c	/^python3_loaded(void)$/;"	f
python3_tabpage_free	if_python3.c	/^python3_tabpage_free(tabpage_T *tab)$/;"	f
python3_window_free	if_python3.c	/^python3_window_free(win_T *win)$/;"	f
python_buffer_free	if_python.c	/^python_buffer_free(buf_T *buf)$/;"	f
python_enabled	if_python.c	/^python_enabled(int verbose)$/;"	f
python_end	if_python.c	/^python_end(void)$/;"	f
python_end_called	if_python.c	/^static int python_end_called = FALSE;$/;"	v	file:
python_end_called	if_python3.c	/^static int python_end_called = FALSE;$/;"	v	file:
python_funcname_table	if_python.c	/^} python_funcname_table[] =$/;"	v	typeref:struct:__anon58	file:
python_loaded	if_python.c	/^python_loaded(void)$/;"	f
python_runtime_link_init	if_python.c	/^python_runtime_link_init(char *libname, int verbose)$/;"	f	file:
python_tabpage_free	if_python.c	/^python_tabpage_free(tabpage_T *tab)$/;"	f
python_window_free	if_python.c	/^python_window_free(win_T *win)$/;"	f
pytotvfunc	if_py_both.h	/^typedef int (*pytotvfunc)(PyObject *, typval_T *, PyObject *);$/;"	t
qfFileAttr	quickfix.c	/^static int	qfFileAttr;$/;"	v	file:
qfLineAttr	quickfix.c	/^static int	qfLineAttr;$/;"	v	file:
qfSepAttr	quickfix.c	/^static int	qfSepAttr;$/;"	v	file:
qf_add_entries	quickfix.c	/^qf_add_entries($/;"	f	file:
qf_add_entry	quickfix.c	/^qf_add_entry($/;"	f	file:
qf_add_entry_from_dict	quickfix.c	/^qf_add_entry_from_dict($/;"	f	file:
qf_age	ex_docmd.c	55;"	d	file:
qf_age	quickfix.c	/^qf_age(exarg_T *eap)$/;"	f
qf_alloc_fields	quickfix.c	/^qf_alloc_fields(qffields_T *pfields)$/;"	f	file:
qf_alloc_stack	quickfix.c	/^qf_alloc_stack(qfltype_T qfltype)$/;"	f	file:
qf_buf_add_line	quickfix.c	/^qf_buf_add_line(buf_T *buf, linenr_T lnum, qfline_T *qfp, char_u *dirname)$/;"	f	file:
qf_bufnr	quickfix.c	/^    int		qf_bufnr;	    \/\/ quickfix window buffer number$/;"	m	struct:qf_info_S	file:
qf_changedtick	quickfix.c	/^    long		qf_changedtick;$/;"	m	struct:qf_list_S	file:
qf_clean_dir_stack	quickfix.c	/^qf_clean_dir_stack(struct dir_stack_T **stackptr)$/;"	f	file:
qf_cleanup_state	quickfix.c	/^qf_cleanup_state(qfstate_T *pstate)$/;"	f	file:
qf_cleared	quickfix.c	/^    char_u	qf_cleared;	\/\/ set to TRUE if line has been deleted$/;"	m	struct:qfline_S	file:
qf_cmd_get_or_alloc_stack	quickfix.c	/^qf_cmd_get_or_alloc_stack(exarg_T *eap, win_T **pwinp)$/;"	f	file:
qf_cmd_get_stack	quickfix.c	/^qf_cmd_get_stack(exarg_T *eap, int print_emsg)$/;"	f	file:
qf_cmdtitle	quickfix.c	/^qf_cmdtitle(char_u *cmd)$/;"	f	file:
qf_col	quickfix.c	/^    int		qf_col;		\/\/ column where the error occurred$/;"	m	struct:qfline_S	file:
qf_count	quickfix.c	/^    int		qf_count;	\/\/ number of errors (0 means empty list)$/;"	m	struct:qf_list_S	file:
qf_ctx	quickfix.c	/^    typval_T	*qf_ctx;	\/\/ context set by setqflist\/setloclist$/;"	m	struct:qf_list_S	file:
qf_curlist	quickfix.c	/^    int		qf_curlist;	    \/\/ current error list$/;"	m	struct:qf_info_S	file:
qf_current_entry	quickfix.c	/^qf_current_entry(win_T *wp)$/;"	f
qf_currfile	quickfix.c	/^    char_u		*qf_currfile;$/;"	m	struct:qf_list_S	file:
qf_delq_S	quickfix.c	/^typedef struct qf_delq_S$/;"	s	file:
qf_delq_T	quickfix.c	/^} qf_delq_T;$/;"	t	typeref:struct:qf_delq_S	file:
qf_delq_head	quickfix.c	/^static qf_delq_T *qf_delq_head = NULL;$/;"	v	file:
qf_dir_stack	quickfix.c	/^    struct dir_stack_T	*qf_dir_stack;$/;"	m	struct:qf_list_S	typeref:struct:qf_list_S::dir_stack_T	file:
qf_directory	quickfix.c	/^    char_u		*qf_directory;$/;"	m	struct:qf_list_S	file:
qf_entry_after_pos	quickfix.c	/^qf_entry_after_pos(qfline_T *qfp, pos_T *pos, int linewise)$/;"	f	file:
qf_entry_before_pos	quickfix.c	/^qf_entry_before_pos(qfline_T *qfp, pos_T *pos, int linewise)$/;"	f	file:
qf_entry_on_or_after_pos	quickfix.c	/^qf_entry_on_or_after_pos(qfline_T *qfp, pos_T *pos, int linewise)$/;"	f	file:
qf_entry_on_or_before_pos	quickfix.c	/^qf_entry_on_or_before_pos(qfline_T *qfp, pos_T *pos, int linewise)$/;"	f	file:
qf_file_stack	quickfix.c	/^    struct dir_stack_T	*qf_file_stack;$/;"	m	struct:qf_list_S	typeref:struct:qf_list_S::dir_stack_T	file:
qf_fill_buffer	quickfix.c	/^qf_fill_buffer(qf_list_T *qfl, buf_T *buf, qfline_T *old_last)$/;"	f	file:
qf_find_buf	quickfix.c	/^qf_find_buf(qf_info_T *qi)$/;"	f	file:
qf_find_closest_entry	quickfix.c	/^qf_find_closest_entry($/;"	f	file:
qf_find_entry_after_pos	quickfix.c	/^qf_find_entry_after_pos($/;"	f	file:
qf_find_entry_before_pos	quickfix.c	/^qf_find_entry_before_pos($/;"	f	file:
qf_find_first_entry_in_buf	quickfix.c	/^qf_find_first_entry_in_buf(qf_list_T *qfl, int bnr, int *errornr)$/;"	f	file:
qf_find_first_entry_on_line	quickfix.c	/^qf_find_first_entry_on_line(qfline_T *entry, int *errornr)$/;"	f	file:
qf_find_help_win	quickfix.c	/^qf_find_help_win(void)$/;"	f	file:
qf_find_last_entry_on_line	quickfix.c	/^qf_find_last_entry_on_line(qfline_T *entry, int *errornr)$/;"	f	file:
qf_find_nth_adj_entry	quickfix.c	/^qf_find_nth_adj_entry($/;"	f	file:
qf_find_win	quickfix.c	/^qf_find_win(qf_info_T *qi)$/;"	f	file:
qf_find_win_with_loclist	quickfix.c	/^qf_find_win_with_loclist(qf_info_T *ll)$/;"	f	file:
qf_find_win_with_normal_buf	quickfix.c	/^qf_find_win_with_normal_buf(void)$/;"	f	file:
qf_fmt_text	quickfix.c	/^qf_fmt_text(char_u *text, char_u *buf, int bufsize)$/;"	f	file:
qf_fnum	quickfix.c	/^    int		qf_fnum;	\/\/ file number for the line$/;"	m	struct:qfline_S	file:
qf_free	quickfix.c	/^qf_free(qf_list_T *qfl)$/;"	f	file:
qf_free_all	quickfix.c	/^qf_free_all(win_T *wp)$/;"	f
qf_free_fields	quickfix.c	/^qf_free_fields(qffields_T *pfields)$/;"	f	file:
qf_free_items	quickfix.c	/^qf_free_items(qf_list_T *qfl)$/;"	f	file:
qf_free_stack	quickfix.c	/^qf_free_stack(win_T *wp, qf_info_T *qi)$/;"	f	file:
qf_get_cur_idx	quickfix.c	/^qf_get_cur_idx(exarg_T *eap)$/;"	f
qf_get_cur_valid_idx	quickfix.c	/^qf_get_cur_valid_idx(exarg_T *eap)$/;"	f
qf_get_curlist	quickfix.c	/^qf_get_curlist(qf_info_T *qi)$/;"	f	file:
qf_get_entry	quickfix.c	/^qf_get_entry($/;"	f	file:
qf_get_fnum	quickfix.c	/^qf_get_fnum(qf_list_T *qfl, char_u *directory, char_u *fname)$/;"	f	file:
qf_get_list	quickfix.c	/^qf_get_list(qf_info_T *qi, int idx)$/;"	f	file:
qf_get_list_from_lines	quickfix.c	/^qf_get_list_from_lines(dict_T *what, dictitem_T *di, dict_T *retdict)$/;"	f	file:
qf_get_next_buf_line	quickfix.c	/^qf_get_next_buf_line(qfstate_T *state)$/;"	f	file:
qf_get_next_file_line	quickfix.c	/^qf_get_next_file_line(qfstate_T *state)$/;"	f	file:
qf_get_next_list_line	quickfix.c	/^qf_get_next_list_line(qfstate_T *state)$/;"	f	file:
qf_get_next_str_line	quickfix.c	/^qf_get_next_str_line(qfstate_T *state)$/;"	f	file:
qf_get_nextline	quickfix.c	/^qf_get_nextline(qfstate_T *state)$/;"	f	file:
qf_get_nth_above_entry	quickfix.c	/^qf_get_nth_above_entry(qfline_T *entry, int n, int linewise, int *errornr)$/;"	f	file:
qf_get_nth_below_entry	quickfix.c	/^qf_get_nth_below_entry(qfline_T *entry_arg, int n, int linewise, int *errornr)$/;"	f	file:
qf_get_nth_valid_entry	quickfix.c	/^qf_get_nth_valid_entry(qf_list_T *qfl, int n, int fdo)$/;"	f	file:
qf_get_properties	quickfix.c	/^qf_get_properties(win_T *wp, dict_T *what, dict_T *retdict)$/;"	f	file:
qf_get_size	quickfix.c	/^qf_get_size(exarg_T *eap)$/;"	f
qf_get_valid_size	quickfix.c	/^qf_get_valid_size(exarg_T *eap)$/;"	f
qf_getprop_ctx	quickfix.c	/^qf_getprop_ctx(qf_list_T *qfl, dict_T *retdict)$/;"	f	file:
qf_getprop_defaults	quickfix.c	/^qf_getprop_defaults(qf_info_T *qi, int flags, int locstack, dict_T *retdict)$/;"	f	file:
qf_getprop_filewinid	quickfix.c	/^qf_getprop_filewinid(win_T *wp, qf_info_T *qi, dict_T *retdict)$/;"	f	file:
qf_getprop_idx	quickfix.c	/^qf_getprop_idx(qf_list_T *qfl, dict_T *retdict)$/;"	f	file:
qf_getprop_items	quickfix.c	/^qf_getprop_items(qf_info_T *qi, int qf_idx, dict_T *retdict)$/;"	f	file:
qf_getprop_keys2flags	quickfix.c	/^qf_getprop_keys2flags(dict_T *what, int loclist)$/;"	f	file:
qf_getprop_qfbufnr	quickfix.c	/^qf_getprop_qfbufnr(qf_info_T *qi, dict_T *retdict)$/;"	f	file:
qf_getprop_qfidx	quickfix.c	/^qf_getprop_qfidx(qf_info_T *qi, dict_T *what)$/;"	f	file:
qf_getprop_title	quickfix.c	/^qf_getprop_title(qf_list_T *qfl, dict_T *retdict)$/;"	f	file:
qf_goto_cwindow	quickfix.c	/^qf_goto_cwindow(qf_info_T *qi, int resize, int sz, int vertsplit)$/;"	f	file:
qf_goto_tabwin_with_file	quickfix.c	/^qf_goto_tabwin_with_file(int fnum)$/;"	f	file:
qf_goto_win_with_ll_file	quickfix.c	/^qf_goto_win_with_ll_file(win_T *use_win, int qf_fnum, qf_info_T *ll_ref)$/;"	f	file:
qf_goto_win_with_qfl_file	quickfix.c	/^qf_goto_win_with_qfl_file(int qf_fnum)$/;"	f	file:
qf_grow_linebuf	quickfix.c	/^qf_grow_linebuf(qfstate_T *state, int newsz)$/;"	f	file:
qf_guess_filepath	quickfix.c	/^qf_guess_filepath(qf_list_T *qfl, char_u *filename)$/;"	f	file:
qf_history	ex_docmd.c	56;"	d	file:
qf_history	quickfix.c	/^qf_history(exarg_T *eap)$/;"	f
qf_id	quickfix.c	/^    int_u	qf_id;		\/\/ Unique identifier for this list$/;"	m	struct:qf_list_S	file:
qf_id2nr	quickfix.c	/^qf_id2nr(qf_info_T *qi, int_u qfid)$/;"	f	file:
qf_index	quickfix.c	/^    int		qf_index;	\/\/ current index in the error list$/;"	m	struct:qf_list_S	file:
qf_info_S	quickfix.c	/^struct qf_info_S$/;"	s	file:
qf_info_T	structs.h	/^typedef struct qf_info_S qf_info_T;$/;"	t	typeref:struct:qf_info_S
qf_init	quickfix.c	/^qf_init(win_T	    *wp,$/;"	f
qf_init_ext	quickfix.c	/^qf_init_ext($/;"	f	file:
qf_init_process_nextline	quickfix.c	/^qf_init_process_nextline($/;"	f	file:
qf_jump	quickfix.c	/^qf_jump(qf_info_T	*qi,$/;"	f
qf_jump_edit_buffer	quickfix.c	/^qf_jump_edit_buffer($/;"	f	file:
qf_jump_first	quickfix.c	/^qf_jump_first(qf_info_T *qi, int_u save_qfid, int forceit)$/;"	f	file:
qf_jump_goto_line	quickfix.c	/^qf_jump_goto_line($/;"	f	file:
qf_jump_newwin	quickfix.c	/^qf_jump_newwin(qf_info_T	*qi,$/;"	f	file:
qf_jump_open_window	quickfix.c	/^qf_jump_open_window($/;"	f	file:
qf_jump_print_msg	quickfix.c	/^qf_jump_print_msg($/;"	f	file:
qf_jump_to_buffer	quickfix.c	/^qf_jump_to_buffer($/;"	f	file:
qf_jump_to_usable_window	quickfix.c	/^qf_jump_to_usable_window(int qf_fnum, int newwin, int *opened_window)$/;"	f	file:
qf_last	quickfix.c	/^    qfline_T	*qf_last;	\/\/ pointer to the last error$/;"	m	struct:qf_list_S	file:
qf_last_bufname	quickfix.c	/^static char_u   *qf_last_bufname = NULL;$/;"	v	file:
qf_last_bufref	quickfix.c	/^static bufref_T  qf_last_bufref = {NULL, 0, 0};$/;"	v	file:
qf_list	ex_docmd.c	54;"	d	file:
qf_list	quickfix.c	/^qf_list(exarg_T *eap)$/;"	f
qf_list_S	quickfix.c	/^typedef struct qf_list_S$/;"	s	file:
qf_list_T	quickfix.c	/^} qf_list_T;$/;"	t	typeref:struct:qf_list_S	file:
qf_list_changed	quickfix.c	/^qf_list_changed(qf_list_T *qfl)$/;"	f	file:
qf_list_empty	quickfix.c	/^qf_list_empty(qf_list_T *qfl)$/;"	f	file:
qf_list_entry	quickfix.c	/^qf_list_entry(qfline_T *qfp, int qf_idx, int cursel)$/;"	f	file:
qf_list_has_valid_entries	quickfix.c	/^qf_list_has_valid_entries(qf_list_T *qfl)$/;"	f	file:
qf_listcount	quickfix.c	/^    int		qf_listcount;	    \/\/ current number of lists$/;"	m	struct:qf_info_S	file:
qf_lists	quickfix.c	/^    qf_list_T	qf_lists[LISTCOUNT];$/;"	m	struct:qf_info_S	file:
qf_lnum	quickfix.c	/^    linenr_T	qf_lnum;	\/\/ line number where the error occurred$/;"	m	struct:qfline_S	file:
qf_mark_adjust	quickfix.c	/^qf_mark_adjust($/;"	f
qf_module	quickfix.c	/^    char_u	*qf_module;	\/\/ module name for this error$/;"	m	struct:qfline_S	file:
qf_msg	quickfix.c	/^qf_msg(qf_info_T *qi, int which, char *lead)$/;"	f	file:
qf_multiignore	quickfix.c	/^    int			qf_multiignore;$/;"	m	struct:qf_list_S	file:
qf_multiline	quickfix.c	/^    int			qf_multiline;$/;"	m	struct:qf_list_S	file:
qf_multiscan	quickfix.c	/^    int			qf_multiscan;$/;"	m	struct:qf_list_S	file:
qf_new_list	quickfix.c	/^qf_new_list(qf_info_T *qi, char_u *qf_title)$/;"	f	file:
qf_next	quickfix.c	/^    qfline_T	*qf_next;	\/\/ pointer to next error in the list$/;"	m	struct:qfline_S	file:
qf_nonevalid	quickfix.c	/^    int		qf_nonevalid;	\/\/ TRUE if not a single valid entry found$/;"	m	struct:qf_list_S	file:
qf_nr	quickfix.c	/^    int		qf_nr;		\/\/ error number$/;"	m	struct:qfline_S	file:
qf_open_new_cwindow	quickfix.c	/^qf_open_new_cwindow(qf_info_T *qi, int height)$/;"	f	file:
qf_open_new_file_win	quickfix.c	/^qf_open_new_file_win(qf_info_T *ll_ref)$/;"	f	file:
qf_parse_dir_pfx	quickfix.c	/^qf_parse_dir_pfx(int idx, qffields_T *fields, qf_list_T *qfl)$/;"	f	file:
qf_parse_file_pfx	quickfix.c	/^qf_parse_file_pfx($/;"	f	file:
qf_parse_fmt	quickfix.c	/^static int (*qf_parse_fmt[FMT_PATTERNS])(regmatch_T *, int, qffields_T *) =$/;"	v	file:
qf_parse_fmt_c	quickfix.c	/^qf_parse_fmt_c(regmatch_T *rmp, int midx, qffields_T *fields)$/;"	f	file:
qf_parse_fmt_f	quickfix.c	/^qf_parse_fmt_f(regmatch_T *rmp, int midx, qffields_T *fields, int prefix)$/;"	f	file:
qf_parse_fmt_l	quickfix.c	/^qf_parse_fmt_l(regmatch_T *rmp, int midx, qffields_T *fields)$/;"	f	file:
qf_parse_fmt_m	quickfix.c	/^qf_parse_fmt_m(regmatch_T *rmp, int midx, qffields_T *fields)$/;"	f	file:
qf_parse_fmt_n	quickfix.c	/^qf_parse_fmt_n(regmatch_T *rmp, int midx, qffields_T *fields)$/;"	f	file:
qf_parse_fmt_o	quickfix.c	/^qf_parse_fmt_o(regmatch_T *rmp, int midx, qffields_T *fields)$/;"	f	file:
qf_parse_fmt_p	quickfix.c	/^qf_parse_fmt_p(regmatch_T *rmp, int midx, qffields_T *fields)$/;"	f	file:
qf_parse_fmt_r	quickfix.c	/^qf_parse_fmt_r(regmatch_T *rmp, int midx, char_u **tail)$/;"	f	file:
qf_parse_fmt_s	quickfix.c	/^qf_parse_fmt_s(regmatch_T *rmp, int midx, qffields_T *fields)$/;"	f	file:
qf_parse_fmt_t	quickfix.c	/^qf_parse_fmt_t(regmatch_T *rmp, int midx, qffields_T *fields)$/;"	f	file:
qf_parse_fmt_v	quickfix.c	/^qf_parse_fmt_v(regmatch_T *rmp, int midx, qffields_T *fields)$/;"	f	file:
qf_parse_get_fields	quickfix.c	/^qf_parse_get_fields($/;"	f	file:
qf_parse_line	quickfix.c	/^qf_parse_line($/;"	f	file:
qf_parse_line_nomatch	quickfix.c	/^qf_parse_line_nomatch(char_u *linebuf, int linelen, qffields_T *fields)$/;"	f	file:
qf_parse_match	quickfix.c	/^qf_parse_match($/;"	f	file:
qf_parse_multiline_pfx	quickfix.c	/^qf_parse_multiline_pfx($/;"	f	file:
qf_pattern	quickfix.c	/^    char_u	*qf_pattern;	\/\/ search pattern for the error$/;"	m	struct:qfline_S	file:
qf_pop_dir	quickfix.c	/^qf_pop_dir(struct dir_stack_T **stackptr)$/;"	f	file:
qf_prev	quickfix.c	/^    qfline_T	*qf_prev;	\/\/ pointer to previous error in the list$/;"	m	struct:qfline_S	file:
qf_ptr	quickfix.c	/^    qfline_T	*qf_ptr;	\/\/ pointer to the current error$/;"	m	struct:qf_list_S	file:
qf_push_dir	quickfix.c	/^qf_push_dir(char_u *dirbuf, struct dir_stack_T **stackptr, int is_file_stack)$/;"	f	file:
qf_refcount	quickfix.c	/^    int		qf_refcount;$/;"	m	struct:qf_info_S	file:
qf_restore_list	quickfix.c	/^qf_restore_list(qf_info_T *qi, int_u save_qfid)$/;"	f	file:
qf_set_cwindow_options	quickfix.c	/^qf_set_cwindow_options(void)$/;"	f	file:
qf_set_properties	quickfix.c	/^qf_set_properties(qf_info_T *qi, dict_T *what, int action, char_u *title)$/;"	f	file:
qf_set_title_var	quickfix.c	/^qf_set_title_var(qf_list_T *qfl)$/;"	f	file:
qf_setprop_context	quickfix.c	/^qf_setprop_context(qf_list_T *qfl, dictitem_T *di)$/;"	f	file:
qf_setprop_curidx	quickfix.c	/^qf_setprop_curidx(qf_info_T *qi, qf_list_T *qfl, dictitem_T *di)$/;"	f	file:
qf_setprop_get_qfidx	quickfix.c	/^qf_setprop_get_qfidx($/;"	f	file:
qf_setprop_items	quickfix.c	/^qf_setprop_items(qf_info_T *qi, int qf_idx, dictitem_T *di, int action)$/;"	f	file:
qf_setprop_items_from_lines	quickfix.c	/^qf_setprop_items_from_lines($/;"	f	file:
qf_setprop_title	quickfix.c	/^qf_setprop_title(qf_info_T *qi, int qf_idx, dict_T *what, dictitem_T *di)$/;"	f	file:
qf_setup_state	quickfix.c	/^qf_setup_state($/;"	f	file:
qf_stack_empty	quickfix.c	/^qf_stack_empty(qf_info_T *qi)$/;"	f	file:
qf_stack_get_bufnr	quickfix.c	/^qf_stack_get_bufnr(void)$/;"	f
qf_start	quickfix.c	/^    qfline_T	*qf_start;	\/\/ pointer to the first error$/;"	m	struct:qf_list_S	file:
qf_store_title	quickfix.c	/^qf_store_title(qf_list_T *qfl, char_u *title)$/;"	f	file:
qf_text	quickfix.c	/^    char_u	*qf_text;	\/\/ description of the error$/;"	m	struct:qfline_S	file:
qf_title	quickfix.c	/^    char_u	*qf_title;	\/\/ quickfix list title$/;"	m	struct:__anon91	file:
qf_title	quickfix.c	/^    char_u	*qf_title;	\/\/ title derived from the command that created$/;"	m	struct:qf_list_S	file:
qf_type	quickfix.c	/^    char_u	qf_type;	\/\/ type of the error (mostly 'E'); 1 for$/;"	m	struct:qfline_S	file:
qf_types	quickfix.c	/^qf_types(int c, int nr)$/;"	f	file:
qf_update_buffer	quickfix.c	/^qf_update_buffer(qf_info_T *qi, qfline_T *old_last)$/;"	f	file:
qf_update_win_titlevar	quickfix.c	/^qf_update_win_titlevar(qf_info_T *qi)$/;"	f	file:
qf_valid	quickfix.c	/^    char_u	qf_valid;	\/\/ valid error message detected$/;"	m	struct:qfline_S	file:
qf_view_result	quickfix.c	/^qf_view_result(int split)$/;"	f
qf_viscol	quickfix.c	/^    char_u	qf_viscol;	\/\/ set to TRUE if qf_col is screen column$/;"	m	struct:qfline_S	file:
qf_win_goto	quickfix.c	/^qf_win_goto(win_T *win, linenr_T lnum)$/;"	f	file:
qf_win_pos_update	quickfix.c	/^qf_win_pos_update($/;"	f	file:
qf_winid	quickfix.c	/^qf_winid(qf_info_T *qi)$/;"	f	file:
qffields_T	quickfix.c	/^} qffields_T;$/;"	t	typeref:struct:__anon90	file:
qfl_type	quickfix.c	/^    qfltype_T	qfl_type;	    \/\/ type of list$/;"	m	struct:qf_info_S	file:
qfl_type	quickfix.c	/^    qfltype_T	qfl_type;$/;"	m	struct:qf_list_S	file:
qfline_S	quickfix.c	/^struct qfline_S$/;"	s	file:
qfline_T	quickfix.c	/^typedef struct qfline_S qfline_T;$/;"	t	typeref:struct:qfline_S	file:
qflist_valid	quickfix.c	/^qflist_valid(win_T *wp, int_u qf_id)$/;"	f	file:
qfltype_T	quickfix.c	/^} qfltype_T;$/;"	t	typeref:enum:__anon87	file:
qfstate_T	quickfix.c	/^} qfstate_T;$/;"	t	typeref:struct:__anon89	file:
qi	quickfix.c	/^    qf_info_T		*qi;$/;"	m	struct:qf_delq_S	file:
ql_info	quickfix.c	/^static qf_info_T ql_info;	\/\/ global quickfix list$/;"	v	file:
qnx_clip_init	os_qnx.c	/^void qnx_clip_init(void)$/;"	f
qnx_init	os_qnx.c	/^void qnx_init(void)$/;"	f
qsort	misc2.c	/^qsort($/;"	f
quality	os_mswin.c	/^    DWORD	quality;$/;"	m	struct:quality_pair	file:
quality_id2name	os_mswin.c	/^quality_id2name(DWORD id)$/;"	f
quality_pair	os_mswin.c	/^struct quality_pair$/;"	s	file:
quality_pairs	os_mswin.c	/^quality_pairs[] = {$/;"	v	typeref:struct:quality_pair	file:
quickfix_busy	quickfix.c	/^static int	quickfix_busy = 0;$/;"	v	file:
quit_more	globals.h	/^EXTERN int	quit_more INIT(= FALSE);    \/\/ 'q' hit at "--more--" msg$/;"	v
quitmore	ex_docmd.c	/^static int	quitmore = 0;$/;"	v	file:
quote_meta	insexpand.c	/^quote_meta(char_u *dest, char_u *src, int len)$/;"	f	file:
r_cmdno	netbeans.c	/^static int r_cmdno;			\/\/ current command number for reply$/;"	v	file:
raise_if_error	if_mzsch.c	/^raise_if_error(void)$/;"	f
raise_vim_exn	if_mzsch.c	/^raise_vim_exn(const char *add_info)$/;"	f
randbyte_offset	blowfish.c	/^    int		randbyte_offset;$/;"	m	struct:__anon2	file:
rangeEnd	mbyte.c	/^    int rangeEnd;$/;"	m	struct:__anon69	file:
rangeStart	mbyte.c	/^    int rangeStart;$/;"	m	struct:__anon69	file:
range_end	if_mzsch.c	/^static long range_end;$/;"	v	file:
range_end	if_tcl.c	/^    int range_start, range_end;$/;"	m	struct:__anon60	file:
range_list_item	globals.h	/^EXTERN listitem_T range_list_item;$/;"	v
range_list_materialize	evalfunc.c	/^range_list_materialize(list_T *list)$/;"	f
range_start	if_mzsch.c	/^static long range_start;$/;"	v	file:
range_start	if_tcl.c	/^    int range_start, range_end;$/;"	m	struct:__anon60	file:
rangeinitializer	if_py_both.h	/^typedef void (*rangeinitializer)(void *);$/;"	t
raw_c_to_ctrl	terminal.c	/^raw_c_to_ctrl(int c)$/;"	f	file:
raw_in	os_amiga.c	/^static BPTR		raw_in = (BPTR)NULL;$/;"	v	file:
raw_out	os_amiga.c	/^static BPTR		raw_out = (BPTR)NULL;$/;"	v	file:
rawlen	winclip.c	/^    int rawlen;		\/\/ length of clip_star.format_raw, including encoding,$/;"	m	struct:__anon138	file:
rb_ary_detransient	if_ruby.c	99;"	d	file:
rb_ary_detransient_stub	if_ruby.c	/^rb_ary_detransient_stub(VALUE x)$/;"	f
rb_ary_new	if_ruby.c	309;"	d	file:
rb_ary_new4	if_ruby.c	312;"	d	file:
rb_ary_new4	if_ruby.c	314;"	d	file:
rb_ary_push	if_ruby.c	315;"	d	file:
rb_assoc_new	if_ruby.c	220;"	d	file:
rb_cFalseClass	if_ruby.c	45;"	d	file:
rb_cFixnum	if_ruby.c	46;"	d	file:
rb_cFloat	if_ruby.c	51;"	d	file:
rb_cInteger	if_ruby.c	48;"	d	file:
rb_cNilClass	if_ruby.c	53;"	d	file:
rb_cObject	if_ruby.c	221;"	d	file:
rb_cString	if_ruby.c	54;"	d	file:
rb_cSymbol	if_ruby.c	55;"	d	file:
rb_cTrueClass	if_ruby.c	56;"	d	file:
rb_check_type	if_ruby.c	223;"	d	file:
rb_check_typeddata	if_ruby.c	225;"	d	file:
rb_class_new_instance	if_ruby.c	222;"	d	file:
rb_class_path	if_ruby.c	227;"	d	file:
rb_data_object_alloc	if_ruby.c	235;"	d	file:
rb_data_typed_object_alloc	if_ruby.c	232;"	d	file:
rb_data_typed_object_wrap	if_ruby.c	230;"	d	file:
rb_define_class_under	if_ruby.c	237;"	d	file:
rb_define_const	if_ruby.c	238;"	d	file:
rb_define_global_function	if_ruby.c	214;"	d	file:
rb_define_global_function	if_ruby.c	239;"	d	file:
rb_define_method	if_ruby.c	215;"	d	file:
rb_define_method	if_ruby.c	240;"	d	file:
rb_define_module	if_ruby.c	241;"	d	file:
rb_define_module_function	if_ruby.c	216;"	d	file:
rb_define_module_function	if_ruby.c	242;"	d	file:
rb_define_singleton_method	if_ruby.c	217;"	d	file:
rb_define_singleton_method	if_ruby.c	243;"	d	file:
rb_define_virtual_variable	if_ruby.c	244;"	d	file:
rb_eArgError	if_ruby.c	247;"	d	file:
rb_eIndexError	if_ruby.c	248;"	d	file:
rb_eRuntimeError	if_ruby.c	249;"	d	file:
rb_eStandardError	if_ruby.c	250;"	d	file:
rb_enc_find	if_ruby.c	349;"	d	file:
rb_enc_find_index	if_ruby.c	348;"	d	file:
rb_enc_str_new	if_ruby.c	350;"	d	file:
rb_enc_str_new	if_ruby.c	351;"	d	file:
rb_errinfo	if_ruby.c	329;"	d	file:
rb_eval_string_protect	if_ruby.c	251;"	d	file:
rb_fix2int	if_ruby.c	271;"	d	file:
rb_fix2int	if_ruby.c	85;"	d	file:
rb_fix2int_stub	if_ruby.c	/^rb_fix2int_stub(VALUE x)$/;"	f
rb_float_new	if_ruby.c	308;"	d	file:
rb_float_new_in_heap	if_ruby.c	/^rb_float_new_in_heap(double d)$/;"	f
rb_funcall2	if_ruby.c	255;"	d	file:
rb_funcallv	if_ruby.c	253;"	d	file:
rb_gc_writebarrier_unprotect	if_ruby.c	95;"	d	file:
rb_gc_writebarrier_unprotect_promoted	if_ruby.c	92;"	d	file:
rb_gc_writebarrier_unprotect_promoted_stub	if_ruby.c	/^rb_gc_writebarrier_unprotect_promoted_stub(VALUE obj)$/;"	f
rb_gc_writebarrier_unprotect_stub	if_ruby.c	/^rb_gc_writebarrier_unprotect_stub(VALUE obj)$/;"	f
rb_global_variable	if_ruby.c	257;"	d	file:
rb_hash_aset	if_ruby.c	258;"	d	file:
rb_hash_foreach	if_ruby.c	259;"	d	file:
rb_hash_new	if_ruby.c	260;"	d	file:
rb_ia64_bsp	if_ruby.c	318;"	d	file:
rb_inspect	if_ruby.c	261;"	d	file:
rb_int2big	if_ruby.c	78;"	d	file:
rb_int2big_stub	if_ruby.c	/^rb_int2big_stub(intptr_t x)$/;"	f
rb_int2inum	if_ruby.c	262;"	d	file:
rb_intern	if_ruby.c	266;"	d	file:
rb_intern	if_ruby.c	267;"	d	file:
rb_lastline_get	if_ruby.c	277;"	d	file:
rb_lastline_set	if_ruby.c	278;"	d	file:
rb_load	if_ruby.c	280;"	d	file:
rb_load_wrap	if_ruby.c	/^rb_load_wrap(VALUE file_to_load)$/;"	f	file:
rb_num2dbl	if_ruby.c	276;"	d	file:
rb_num2int	if_ruby.c	272;"	d	file:
rb_num2int	if_ruby.c	86;"	d	file:
rb_num2int_stub	if_ruby.c	/^rb_num2int_stub(VALUE x)$/;"	f
rb_num2long	if_ruby.c	282;"	d	file:
rb_num2long	if_ruby.c	77;"	d	file:
rb_num2long_stub	if_ruby.c	/^rb_num2long_stub(VALUE x)$/;"	f
rb_num2uint	if_ruby.c	274;"	d	file:
rb_num2ulong	if_ruby.c	/^rb_num2ulong(VALUE x)$/;"	f
rb_num2ulong	if_ruby.c	285;"	d	file:
rb_obj_alloc	if_ruby.c	287;"	d	file:
rb_obj_as_string	if_ruby.c	288;"	d	file:
rb_obj_id	if_ruby.c	289;"	d	file:
rb_protect	if_ruby.c	279;"	d	file:
rb_raise	if_ruby.c	290;"	d	file:
rb_require	if_ruby.c	353;"	d	file:
rb_sprintf	if_ruby.c	352;"	d	file:
rb_stderr	if_ruby.c	246;"	d	file:
rb_stdout	if_ruby.c	245;"	d	file:
rb_str2cstr	if_ruby.c	326;"	d	file:
rb_str_cat	if_ruby.c	291;"	d	file:
rb_str_concat	if_ruby.c	292;"	d	file:
rb_str_new	if_ruby.c	293;"	d	file:
rb_str_new	if_ruby.c	294;"	d	file:
rb_str_new2	if_ruby.c	303;"	d	file:
rb_str_new_cstr	if_ruby.c	300;"	d	file:
rb_str_new_cstr	if_ruby.c	301;"	d	file:
rb_string_value	if_ruby.c	306;"	d	file:
rb_string_value_ptr	if_ruby.c	307;"	d	file:
rb_w32_snprintf	if_ruby.c	342;"	d	file:
rbg_status	term.c	/^static termrequest_T rbg_status = TERMREQUEST_INIT;$/;"	v	file:
rbm_status	term.c	/^static termrequest_T rbm_status = TERMREQUEST_INIT;$/;"	v	file:
rcArea	gui_w32.c	/^    RECT  rcArea;$/;"	m	struct:tagCOMPOSITIONFORM	file:
rc_did_emsg	globals.h	/^EXTERN int	rc_did_emsg INIT(= FALSE);  \/\/ vim_regcomp() called emsg()$/;"	v
rcs_status	term.c	/^static termrequest_T rcs_status = TERMREQUEST_INIT;$/;"	v	file:
re2post	regexp_nfa.c	/^re2post(void)$/;"	f	file:
re_engine	regexp.h	/^    unsigned		re_engine;   \/\/ automatic, backtracking or nfa engine$/;"	m	struct:regprog
re_engine	regexp.h	/^    unsigned		re_engine;$/;"	m	struct:__anon173
re_engine	regexp.h	/^    unsigned		re_engine;$/;"	m	struct:__anon174
re_extmatch_in	globals.h	/^EXTERN reg_extmatch_T *re_extmatch_in INIT(= NULL); \/\/ Used by vim_regexec():$/;"	v
re_extmatch_out	globals.h	/^EXTERN reg_extmatch_T *re_extmatch_out INIT(= NULL); \/\/ Set by vim_regexec()$/;"	v
re_flags	regexp.h	/^    unsigned		re_flags;    \/\/ second argument for vim_regcomp()$/;"	m	struct:regprog
re_flags	regexp.h	/^    unsigned		re_flags;$/;"	m	struct:__anon173
re_flags	regexp.h	/^    unsigned		re_flags;$/;"	m	struct:__anon174
re_has_z	regexp.c	/^static int	re_has_z;	\/\/ \\z item detected$/;"	v	file:
re_in_use	regexp.h	/^    int			re_in_use;   \/\/ prog is being executed$/;"	m	struct:regprog
re_in_use	regexp.h	/^    int			re_in_use;$/;"	m	struct:__anon173
re_in_use	regexp.h	/^    int			re_in_use;$/;"	m	struct:__anon174
re_mult_next	regexp.c	/^re_mult_next(char *what)$/;"	f	file:
re_multi_type	regexp.c	/^re_multi_type(int c)$/;"	f	file:
re_multiline	regexp.c	/^re_multiline(regprog_T *prog)$/;"	f
re_num_cmp	regexp_bt.c	/^re_num_cmp(long_u val, char_u *scan)$/;"	f	file:
re_put_long	regexp_bt.c	/^re_put_long(char_u *p, long_u val)$/;"	f	file:
read_blob	blob.c	/^read_blob(FILE *fd, blob_T *blob)$/;"	f
read_buffer	buffer.c	/^read_buffer($/;"	f	file:
read_charflags_section	spellfile.c	/^read_charflags_section(FILE *fd)$/;"	f	file:
read_cmd_fd	globals.h	/^EXTERN int	read_cmd_fd INIT(= 0);	    \/\/ fd to read commands from$/;"	v
read_cnt_string	spellfile.c	/^read_cnt_string(FILE *fd, int cnt_bytes, int *cntp)$/;"	f	file:
read_compound	spellfile.c	/^read_compound(FILE *fd, slang_T *slang, int len)$/;"	f	file:
read_console_input	os_win32.c	/^read_console_input($/;"	f	file:
read_dump_file	terminal.c	/^read_dump_file(FILE *fd, VTermPos *cursor_pos)$/;"	f	file:
read_edit	ex_cmds.h	/^    int		read_edit;	\/\/ ++edit argument$/;"	m	struct:exarg
read_eintr	fileio.c	/^read_eintr(int fd, void *buf, size_t bufsize)$/;"	f
read_eintr	vim.h	1729;"	d
read_error_exit	ui.c	/^read_error_exit(void)$/;"	f
read_from_input_buf	ui.c	/^read_from_input_buf(char_u *buf, long maxlen)$/;"	f
read_limits	regexp.c	/^read_limits(long *minval, long *maxval)$/;"	f	file:
read_prefcond_section	spellfile.c	/^read_prefcond_section(FILE *fd, slang_T *lp)$/;"	f	file:
read_readbuf	getchar.c	/^read_readbuf(buffheader_T *buf, int advance)$/;"	f	file:
read_readbuffers	getchar.c	/^read_readbuffers(int advance)$/;"	f	file:
read_redo	getchar.c	/^read_redo(int init, int old_redo)$/;"	f	file:
read_region_section	spellfile.c	/^read_region_section(FILE *fd, slang_T *lp, int len)$/;"	f	file:
read_rep_section	spellfile.c	/^read_rep_section(FILE *fd, garray_T *gap, short *first)$/;"	f	file:
read_sal_section	spellfile.c	/^read_sal_section(FILE *fd, slang_T *slang)$/;"	f	file:
read_sofo_section	spellfile.c	/^read_sofo_section(FILE *fd, slang_T *slang)$/;"	f	file:
read_stdin	main.c	/^read_stdin(void)$/;"	f	file:
read_string	misc2.c	/^read_string(FILE *fd, int cnt)$/;"	f
read_string_decrypt	undo.c	/^read_string_decrypt(bufinfo_T *bi, int len)$/;"	f	file:
read_thread	os_beos.c	/^read_thread(void *dummy)$/;"	f	file:
read_thread_id	os_beos.c	/^thread_id read_thread_id;$/;"	v
read_tree_node	spellfile.c	/^read_tree_node($/;"	f	file:
read_viminfo	viminfo.c	/^read_viminfo($/;"	f
read_viminfo_barline	viminfo.c	/^read_viminfo_barline(vir_T *virp, int got_encoding, int force, int writing)$/;"	f	file:
read_viminfo_bufferlist	viminfo.c	/^read_viminfo_bufferlist($/;"	f	file:
read_viminfo_filemark	viminfo.c	/^read_viminfo_filemark(vir_T *virp, int force)$/;"	f	file:
read_viminfo_history	viminfo.c	/^read_viminfo_history(vir_T *virp, int writing)$/;"	f	file:
read_viminfo_register	viminfo.c	/^read_viminfo_register(vir_T *virp, int force)$/;"	f	file:
read_viminfo_search_pattern	viminfo.c	/^read_viminfo_search_pattern(vir_T *virp, int force)$/;"	f	file:
read_viminfo_sub_string	viminfo.c	/^read_viminfo_sub_string(vir_T *virp, int force)$/;"	f	file:
read_viminfo_up_to_marks	viminfo.c	/^read_viminfo_up_to_marks($/;"	f	file:
read_viminfo_varlist	viminfo.c	/^read_viminfo_varlist(vir_T *virp, int writing)$/;"	f	file:
read_words_section	spellfile.c	/^read_words_section(FILE *fd, slang_T *lp, int len)$/;"	f	file:
readbuf1	getchar.c	/^static buffheader_T readbuf1 = {{NULL, {NUL}}, NULL, 0, 0};$/;"	v	file:
readbuf1_empty	getchar.c	/^readbuf1_empty(void)$/;"	f
readbuf2	getchar.c	/^static buffheader_T readbuf2 = {{NULL, {NUL}}, NULL, 0, 0};$/;"	v	file:
readdir_checkitem	filepath.c	/^readdir_checkitem(void *context, char_u *name)$/;"	f	file:
readdir_core	fileio.c	/^readdir_core($/;"	f
readfile	fileio.c	/^readfile($/;"	f
readfile_charconvert	fileio.c	/^readfile_charconvert($/;"	f	file:
readfile_linenr	fileio.c	/^readfile_linenr($/;"	f	file:
readonlymode	globals.h	/^EXTERN int	readonlymode INIT(= FALSE); \/\/ Set to TRUE for "view"$/;"	v
readq_S	structs.h	/^struct readq_S$/;"	s
readq_T	structs.h	/^typedef struct readq_S readq_T;$/;"	t	typeref:struct:readq_S
real	gui_at_fs.c	/^    char	*real;$/;"	m	struct:__anon31	file:
realloc_cmdbuff	ex_getln.c	/^realloc_cmdbuff(int len)$/;"	f
realloc_post_list	regexp_nfa.c	/^realloc_post_list(void)$/;"	f	file:
really_exiting	globals.h	/^EXTERN int	really_exiting INIT(= FALSE);$/;"	v
rebuild_tearoff	gui_w32.c	/^rebuild_tearoff(vimmenu_T *menu)$/;"	f	file:
receiveHandler	gui_mac.c	/^receiveHandler(WindowRef theWindow, void *handlerRefCon, DragRef theDrag)$/;"	f	file:
received_selection	gui_gtk_x11.c	/^static int received_selection = RS_NONE;$/;"	v	file:
recent_func_log_func	gui_gtk.c	/^recent_func_log_func(const gchar *log_domain UNUSED,$/;"	f	file:
recordbuff	getchar.c	/^static buffheader_T recordbuff = {{NULL, {NUL}}, NULL, 0, 0};$/;"	v	file:
recording_mode	screen.c	/^recording_mode(int attr)$/;"	f	file:
recov_file_names	memline.c	/^recov_file_names(char_u **names, char_u *path, int prepend_dot)$/;"	f	file:
recover_names	memline.c	/^recover_names($/;"	f
recoverymode	globals.h	/^EXTERN int	recoverymode INIT(= FALSE); \/\/ Set to TRUE for "-r" option$/;"	v
rect	gui_w32.c	/^    RECT       rect;$/;"	m	struct:tagTOOLINFOA_NEW	file:
rect	gui_w32.c	/^    RECT       rect;$/;"	m	struct:tagTOOLINFOW_NEW	file:
recurmsg	tag.c	/^static char_u *recurmsg = (char_u *)N_("E986: cannot modify the tag stack within tagfunc");$/;"	v	file:
recurse_tearoffs	gui_gtk.c	/^recurse_tearoffs(vimmenu_T *menu, int val)$/;"	f	file:
recursive_regmatch	regexp_nfa.c	/^recursive_regmatch($/;"	f	file:
redir_endp	evalvars.c	/^static char_u	*redir_endp = NULL;$/;"	v	file:
redir_execute	globals.h	/^EXTERN int  redir_execute INIT(= 0);	\/\/ execute() redirection$/;"	v
redir_execute_ga	evalfunc.c	/^static garray_T	redir_execute_ga;$/;"	v	file:
redir_fd	globals.h	/^EXTERN FILE *redir_fd INIT(= NULL);	\/\/ message redirection file$/;"	v
redir_ga	evalvars.c	/^static garray_T redir_ga;	\/\/ only valid when redir_lval is not NULL$/;"	v	file:
redir_lval	evalvars.c	/^static lval_T	*redir_lval = NULL;$/;"	v	file:
redir_off	globals.h	/^EXTERN int  redir_off INIT(= FALSE);	\/\/ no redirection for a moment$/;"	v
redir_reg	globals.h	/^EXTERN int  redir_reg INIT(= 0);	\/\/ message redirection register$/;"	v
redir_varname	evalvars.c	/^static char_u	*redir_varname = NULL;$/;"	v	file:
redir_vname	globals.h	/^EXTERN int  redir_vname INIT(= 0);	\/\/ message redirection variable$/;"	v
redir_write	message.c	/^redir_write(char_u *str, int maxlen)$/;"	f	file:
redirecting	message.c	/^redirecting(void)$/;"	f
redo_VIsual_busy	globals.h	/^EXTERN int	redo_VIsual_busy INIT(= FALSE);$/;"	v
redo_literal	edit.c	/^redo_literal(int c)$/;"	f	file:
redobuff	getchar.c	/^static buffheader_T redobuff = {{NULL, {NUL}}, NULL, 0, 0};$/;"	v	file:
redrawWinline	drawscreen.c	/^redrawWinline($/;"	f
redraw_after_callback	drawscreen.c	/^redraw_after_callback(int call_update_screen)$/;"	f
redraw_all_later	drawscreen.c	/^redraw_all_later(int type)$/;"	f
redraw_asap	drawscreen.c	/^redraw_asap(int type)$/;"	f
redraw_block	screen.c	/^redraw_block(int row, int end, win_T *wp)$/;"	f	file:
redraw_buf_and_status_later	drawscreen.c	/^redraw_buf_and_status_later(buf_T *buf, int type)$/;"	f
redraw_buf_later	drawscreen.c	/^redraw_buf_later(buf_T *buf, int type)$/;"	f
redraw_buf_line_later	drawscreen.c	/^redraw_buf_line_later(buf_T *buf, linenr_T lnum)$/;"	f
redraw_cmdline	globals.h	/^EXTERN int	redraw_cmdline INIT(= FALSE);	\/\/ cmdline must be redrawn$/;"	v
redraw_curbuf_later	drawscreen.c	/^redraw_curbuf_later(int type)$/;"	f
redraw_custom_statusline	drawscreen.c	/^redraw_custom_statusline(win_T *wp)$/;"	f	file:
redraw_for_cursorline	move.c	/^redraw_for_cursorline(win_T *wp)$/;"	f
redraw_later	drawscreen.c	/^redraw_later(int type)$/;"	f
redraw_later_clear	drawscreen.c	/^redraw_later_clear(void)$/;"	f
redraw_mode	globals.h	/^EXTERN int	redraw_mode INIT(= FALSE);	\/\/ mode must be redrawn$/;"	v
redraw_statuslines	drawscreen.c	/^redraw_statuslines(void)$/;"	f
redraw_tabline	globals.h	/^EXTERN int	    redraw_tabline INIT(= FALSE);  \/\/ need to redraw tabline$/;"	v
redraw_titles	option.c	/^void redraw_titles(void)$/;"	f
redraw_win_later	drawscreen.c	/^redraw_win_later($/;"	f
redraw_win_toolbar	drawscreen.c	/^redraw_win_toolbar(win_T *wp)$/;"	f	file:
redrawcmd	ex_getln.c	/^redrawcmd(void)$/;"	f
redrawcmd_preedit	ex_getln.c	/^redrawcmd_preedit(void)$/;"	f	file:
redrawcmdline	ex_getln.c	/^redrawcmdline(void)$/;"	f
redrawcmdline_ex	ex_getln.c	/^redrawcmdline_ex(int do_compute_cmdrow)$/;"	f
redrawcmdprompt	ex_getln.c	/^redrawcmdprompt(void)$/;"	f	file:
redrawing	screen.c	/^redrawing(void)$/;"	f
redrawing_for_callback	globals.h	/^EXTERN int redrawing_for_callback INIT(= 0);$/;"	v
ref	if_py_both.h	/^    pylinkedlist_T	ref;$/;"	m	struct:__anon154
ref	if_py_both.h	/^    pylinkedlist_T	ref;$/;"	m	struct:__anon156
ref	if_py_both.h	/^    pylinkedlist_T	ref;$/;"	m	struct:__anon158
ref	if_tcl.c	/^struct ref$/;"	s	file:
ref_extmatch	regexp.c	/^ref_extmatch(reg_extmatch_T *em)$/;"	f
refcnt	regexp.h	/^    short		refcnt;$/;"	m	struct:__anon177
refsdeleted	if_tcl.c	/^static struct ref refsdeleted;	\/\/ dummy object for deleted ref list$/;"	v	typeref:struct:ref	file:
reg	os_mac.h	53;"	d
reg	regexp_bt.c	/^reg($/;"	f	file:
reg_buf	regexp.c	/^    buf_T		*reg_buf;$/;"	m	struct:__anon99	file:
reg_cpo_bsl	regexp.c	/^static int reg_cpo_bsl; \/\/ 'cpoptions' contains '\\' flag$/;"	v	file:
reg_cpo_lit	regexp.c	/^static int reg_cpo_lit; \/\/ 'cpoptions' contains 'l' flag$/;"	v	file:
reg_create_key	dosinst.c	/^reg_create_key($/;"	f	file:
reg_create_key_and_value	dosinst.c	/^reg_create_key_and_value($/;"	f	file:
reg_delete_key	uninstall.c	/^reg_delete_key(HKEY hRootKey, const char *key, DWORD flag)$/;"	f	file:
reg_do_extmatch	globals.h	/^EXTERN int	reg_do_extmatch INIT(= 0);  \/\/ Used when compiling regexp:$/;"	v
reg_endp	regexp.c	/^    char_u		**reg_endp;$/;"	m	struct:__anon99	file:
reg_endpos	regexp.c	/^    lpos_T		*reg_endpos;$/;"	m	struct:__anon99	file:
reg_endzp	regexp.c	/^static char_u	*reg_endzp[NSUBEXP];	\/\/   and end of \\z(...\\) matches$/;"	v	file:
reg_endzpos	regexp.c	/^static lpos_T	reg_endzpos[NSUBEXP];	\/\/ idem, end pos$/;"	v	file:
reg_equi_class	regexp_bt.c	/^reg_equi_class(int c)$/;"	f	file:
reg_executing	globals.h	/^EXTERN int reg_executing INIT(= 0);	\/\/ register being executed or zero$/;"	v
reg_extmatch_T	regexp.h	/^} reg_extmatch_T;$/;"	t	typeref:struct:__anon177
reg_firstlnum	regexp.c	/^    linenr_T		reg_firstlnum;$/;"	m	struct:__anon99	file:
reg_getline	regexp.c	/^reg_getline(linenr_T lnum)$/;"	f	file:
reg_getline_submatch	regexp.c	/^reg_getline_submatch(linenr_T lnum)$/;"	f	file:
reg_ic	regexp.c	/^    int			reg_ic;$/;"	m	struct:__anon99	file:
reg_icombine	regexp.c	/^    int			reg_icombine;$/;"	m	struct:__anon99	file:
reg_iswordc	regexp.c	/^reg_iswordc(int c)$/;"	f	file:
reg_line_lbr	regexp.c	/^    int			reg_line_lbr;	\/\/ "\\n" in string is line break$/;"	m	struct:__anon99	file:
reg_magic	regexp.c	/^static int	reg_magic;	\/\/ magicness of the pattern:$/;"	v	file:
reg_match	regexp.c	/^    regmatch_T		*reg_match;$/;"	m	struct:__anon99	file:
reg_match_visual	regexp.c	/^reg_match_visual(void)$/;"	f	file:
reg_maxcol	regexp.c	/^    colnr_T		reg_maxcol;$/;"	m	struct:__anon99	file:
reg_maxline	regexp.c	/^    linenr_T		reg_maxline;$/;"	m	struct:__anon99	file:
reg_mmatch	regexp.c	/^    regmmatch_T		*reg_mmatch;$/;"	m	struct:__anon99	file:
reg_nextline	regexp.c	/^reg_nextline(void)$/;"	f	file:
reg_prev_class	regexp.c	/^reg_prev_class(void)$/;"	f	file:
reg_prev_sub	regexp.c	/^static char_u		*reg_prev_sub = NULL;$/;"	v	file:
reg_prog	autocmd.c	/^    regprog_T	    *reg_prog;		\/\/ compiled regprog for pattern$/;"	m	struct:AutoPat	file:
reg_recording	globals.h	/^EXTERN int reg_recording INIT(= 0);	\/\/ register for recording  or zero$/;"	v
reg_restore	regexp_bt.c	/^reg_restore(regsave_T *save, garray_T *gap)$/;"	f	file:
reg_save	regexp_bt.c	/^reg_save(regsave_T *save, garray_T *gap)$/;"	f	file:
reg_save_equal	regexp_bt.c	/^reg_save_equal(regsave_T *save)$/;"	f	file:
reg_set_string_value	dosinst.c	/^reg_set_string_value($/;"	f	file:
reg_startp	regexp.c	/^    char_u		**reg_startp;$/;"	m	struct:__anon99	file:
reg_startpos	regexp.c	/^    lpos_T		*reg_startpos;$/;"	m	struct:__anon99	file:
reg_startzp	regexp.c	/^static char_u	*reg_startzp[NSUBEXP];	\/\/ Workspace to mark beginning$/;"	v	file:
reg_startzpos	regexp.c	/^static lpos_T	reg_startzpos[NSUBEXP];	\/\/ idem, beginning pos$/;"	v	file:
reg_strict	regexp.c	/^static int	reg_strict;	\/\/ "[abc" is illegal$/;"	v	file:
reg_string	regexp.c	/^static int	reg_string;	\/\/ matching with a string instead of a buffer$/;"	v	file:
reg_submatch	regexp.c	/^reg_submatch(int no)$/;"	f
reg_submatch_list	regexp.c	/^reg_submatch_list(int no)$/;"	f
reg_tofree	regexp.c	/^static char_u	*reg_tofree = NULL;$/;"	v	file:
reg_tofreelen	regexp.c	/^static unsigned	reg_tofreelen;$/;"	v	file:
reg_toolong	regexp_bt.c	/^static int	reg_toolong;	\/\/ TRUE when offset out of range$/;"	v	file:
reg_win	regexp.c	/^    win_T		*reg_win;$/;"	m	struct:__anon99	file:
reganch	regexp.h	/^    char_u		reganch;$/;"	m	struct:__anon173
reganch	regexp.h	/^    int			reganch;	\/\/ pattern starts with ^$/;"	m	struct:__anon174
regatom	regexp_bt.c	/^regatom(int *flagp)$/;"	f	file:
regbehind_S	regexp_bt.c	/^typedef struct regbehind_S$/;"	s	file:
regbehind_T	regexp_bt.c	/^} regbehind_T;$/;"	t	typeref:struct:regbehind_S	file:
regbranch	regexp_bt.c	/^regbranch(int *flagp)$/;"	f	file:
regc	regexp_bt.c	/^regc(int b)$/;"	f	file:
regcode	regexp_bt.c	/^static char_u	*regcode;	\/\/ Code-emit pointer, or JUST_CALC_SIZE$/;"	v	file:
regcomp	regexp.h	/^    regprog_T	*(*regcomp)(char_u*, int);$/;"	m	struct:regengine
regcomp_start	regexp_bt.c	/^regcomp_start($/;"	f	file:
regconcat	regexp_bt.c	/^regconcat(int *flagp)$/;"	f	file:
regdump	regexp_bt.c	/^regdump(char_u *pattern, bt_regprog_T *r)$/;"	f	file:
regengine	regexp.h	/^struct regengine$/;"	s
regengine_T	regexp.h	/^typedef struct regengine regengine_T;$/;"	t	typeref:struct:regengine
regexec_T	regexp.c	/^} regexec_T;$/;"	t	typeref:struct:__anon99	file:
regexec_multi	regexp.h	/^    long	(*regexec_multi)(regmmatch_T *, win_T *, buf_T *, linenr_T, colnr_T, proftime_T *, int *);$/;"	m	struct:regengine
regexec_nl	regexp.h	/^    int		(*regexec_nl)(regmatch_T *, char_u *, colnr_T, int);$/;"	m	struct:regengine
regexp_engine	regexp.c	/^static int regexp_engine = 0;$/;"	v	file:
regflags	regexp.c	/^static unsigned	regflags;	\/\/ RF_ flags for prog$/;"	v	file:
regflags	regexp.h	/^    unsigned		regflags;$/;"	m	struct:__anon173
regflags	regexp.h	/^    unsigned		regflags;$/;"	m	struct:__anon174
regflags	regexp.h	/^    unsigned		regflags;$/;"	m	struct:regprog
regfree	regexp.h	/^    void	(*regfree)(regprog_T *);$/;"	m	struct:regengine
reghasz	regexp.h	/^    char_u		reghasz;$/;"	m	struct:__anon173
reghasz	regexp.h	/^    int			reghasz;$/;"	m	struct:__anon174
reginsert	regexp_bt.c	/^reginsert(int op, char_u *opnd)$/;"	f	file:
reginsert_limits	regexp_bt.c	/^reginsert_limits($/;"	f	file:
reginsert_nr	regexp_bt.c	/^reginsert_nr(int op, long val, char_u *opnd)$/;"	f	file:
register_closure	userfunc.c	/^register_closure(ufunc_T *fp)$/;"	f	file:
register_inproc_server	dosinst.c	/^register_inproc_server($/;"	f	file:
register_openwith	dosinst.c	/^register_openwith($/;"	f	file:
register_shellex	dosinst.c	/^register_shellex($/;"	f	file:
register_uninstall	dosinst.c	/^register_uninstall($/;"	f	file:
register_vim_exn	if_mzsch.c	/^register_vim_exn(void)$/;"	f	file:
registryProperty	if_xcmdsrv.c	/^static Atom	registryProperty = None;$/;"	v	file:
regitem_S	regexp_bt.c	/^typedef struct regitem_S$/;"	s	file:
regitem_T	regexp_bt.c	/^} regitem_T;$/;"	t	typeref:struct:regitem_S	file:
regmatch	quickfix.c	/^    regmmatch_T	regmatch;	\/\/ compiled search pattern$/;"	m	struct:__anon91	file:
regmatch	regexp_bt.c	/^regmatch($/;"	f	file:
regmatch	tag.c	/^    regmatch_T	regmatch;	\/\/ regexp program, may be NULL$/;"	m	struct:__anon118	file:
regmatch_T	regexp.h	/^} regmatch_T;$/;"	t	typeref:struct:__anon175
regmbc	regexp_bt.c	/^regmbc(int c)$/;"	f	file:
regmlen	regexp.h	/^    int			regmlen;$/;"	m	struct:__anon173
regmmatch_T	regexp.h	/^} regmmatch_T;$/;"	t	typeref:struct:__anon176
regmust	regexp.h	/^    char_u		*regmust;$/;"	m	struct:__anon173
regname	ex_cmds.h	/^    int		regname;	\/\/ register name (NUL if none)$/;"	m	struct:exarg
regname	regexp.c	/^static char_u regname[][30] = {$/;"	v	file:
regname	structs.h	/^    int		regname;	\/\/ register to use for the operator$/;"	m	struct:oparg_S
regnarrate	regexp_bt.c	/^static int	regnarrate = 0;$/;"	v	file:
regnext	regexp_bt.c	/^regnext(char_u *p)$/;"	f	file:
regnode	regexp_bt.c	/^regnode(int op)$/;"	f	file:
regnpar	regexp.c	/^     int	regnpar;$/;"	m	struct:__anon98	file:
regnpar	regexp.c	/^static int	regnpar;	\/\/ () count.$/;"	v	file:
regnzpar	regexp.c	/^static int	regnzpar;	\/\/ \\z() count.$/;"	v	file:
regoptail	regexp_bt.c	/^regoptail(char_u *p, char_u *val)$/;"	f	file:
regparse	regexp.c	/^     char_u	*regparse;$/;"	m	struct:__anon98	file:
regparse	regexp.c	/^static char_u	*regparse;	\/\/ Input-scan pointer.$/;"	v	file:
regpiece	regexp_bt.c	/^regpiece(int *flagp)$/;"	f	file:
regprog	regexp.h	/^    regprog_T		*regprog;$/;"	m	struct:__anon175
regprog	regexp.h	/^    regprog_T		*regprog;$/;"	m	struct:__anon176
regprog	regexp.h	/^typedef struct regprog$/;"	s
regprog_T	regexp.h	/^} regprog_T;$/;"	t	typeref:struct:regprog
regprog_in_use	regexp.c	/^regprog_in_use(regprog_T *prog)$/;"	f
regprop	regexp_bt.c	/^regprop(char_u *op)$/;"	f	file:
regrepeat	regexp_bt.c	/^regrepeat($/;"	f	file:
regsave	regexp_bt.c	/^	regsave_T  regsave;$/;"	m	union:regitem_S::__anon97	file:
regsave_T	regexp_bt.c	/^} regsave_T;$/;"	t	typeref:struct:__anon93	file:
regsize	regexp_bt.c	/^static long	regsize;	\/\/ Code size.$/;"	v	file:
regstack	regexp_bt.c	/^static garray_T	regstack = {0, 0, 0, 0, NULL};$/;"	v	file:
regstack_pop	regexp_bt.c	/^regstack_pop(char_u **scan)$/;"	f	file:
regstack_push	regexp_bt.c	/^regstack_push(regstate_T state, char_u *scan)$/;"	f	file:
regstar_S	regexp_bt.c	/^typedef struct regstar_S$/;"	s	file:
regstar_T	regexp_bt.c	/^} regstar_T;$/;"	t	typeref:struct:regstar_S	file:
regstart	regexp.h	/^    int			regstart;	\/\/ char at start of pattern$/;"	m	struct:__anon174
regstart	regexp.h	/^    int			regstart;$/;"	m	struct:__anon173
regstate_E	regexp_bt.c	/^typedef enum regstate_E$/;"	g	file:
regstate_T	regexp_bt.c	/^} regstate_T;$/;"	t	typeref:enum:regstate_E	file:
regsub_T	regexp_nfa.c	/^} regsub_T;$/;"	t	typeref:struct:__anon103	file:
regsubmatch_T	regexp.c	/^} regsubmatch_T;$/;"	t	typeref:struct:__anon101	file:
regsubs_T	regexp_nfa.c	/^} regsubs_T;$/;"	t	typeref:struct:__anon105	file:
regtail	regexp_bt.c	/^regtail(char_u *p, char_u *val)$/;"	f	file:
regtilde	regexp.c	/^regtilde(char_u *source, int magic)$/;"	f
regtry	regexp_bt.c	/^regtry($/;"	f	file:
rem_backslash	charset.c	/^rem_backslash(char_u *str)$/;"	f
remap_choice	dosinst.c	/^int	remap_choice = (int)remap_no;$/;"	v
remap_choices	dosinst.c	/^char	*(remap_choices[]) =$/;"	v
remap_no	dosinst.c	/^    remap_no = 1,$/;"	e	enum:__anon14	file:
remap_text	dosinst.c	/^char	*remap_text = "- %s";$/;"	v
remap_win	dosinst.c	/^    remap_win$/;"	e	enum:__anon14	file:
remote_common	evalfunc.c	/^remote_common(typval_T *argvars, typval_T *rettv, int expr)$/;"	f	file:
removable	viminfo.c	/^removable(char_u *name)$/;"	f	file:
removeEventHandler	gui_beval.c	/^removeEventHandler(BalloonEval *beval)$/;"	f	file:
remove_any_timer	gui_w32.c	/^remove_any_timer(void)$/;"	f	file:
remove_batfiles	uninstall.c	/^remove_batfiles(int doit)$/;"	f	file:
remove_bom	mbyte.c	/^remove_bom(char_u *s)$/;"	f
remove_cb_node	channel.c	/^remove_cb_node(cbq_T *head, cbq_T *node)$/;"	f	file:
remove_duplicates	scriptfile.c	/^remove_duplicates(garray_T *gap)$/;"	f
remove_from_writeque	channel.c	/^remove_from_writeque(writeq_T *wq, writeq_T *entry)$/;"	f	file:
remove_icons	uninstall.c	/^remove_icons(void)$/;"	f	file:
remove_if_exists	uninstall.c	/^remove_if_exists(char *path, char *filename)$/;"	f	file:
remove_json_node	channel.c	/^remove_json_node(jsonq_T *head, jsonq_T *node)$/;"	f	file:
remove_key_from_history	cmdhist.c	/^remove_key_from_history(void)$/;"	f
remove_listeners	change.c	/^remove_listeners(buf_T *buf)$/;"	f
remove_menu	menu.c	/^remove_menu($/;"	f	file:
remove_openwith	uninstall.c	/^remove_openwith(void)$/;"	f	file:
remove_popup	uninstall.c	/^remove_popup(void)$/;"	f	file:
remove_start_menu	uninstall.c	/^remove_start_menu(void)$/;"	f	file:
remove_tail	dosinst.h	/^remove_tail(char *path)$/;"	f
remove_tail	misc1.c	/^remove_tail(char_u *p, char_u *pend, char_u *name)$/;"	f	file:
remove_timer	if_mzsch.c	/^remove_timer(void)$/;"	f	file:
remove_timer	time.c	/^remove_timer(timer_T *timer)$/;"	f	file:
remove_winbar	menu.c	/^remove_winbar(win_T *wp)$/;"	f
rename_buffer	ex_cmds.c	/^rename_buffer(char_u *new_fname)$/;"	f
renderingMode	gui_dwrite.h	/^    int renderingMode;$/;"	m	struct:DWriteRenderingParams
rep_compare	spellfile.c	/^rep_compare(const void *s1, const void *s2)$/;"	f	file:
repeat_cmdline	globals.h	/^EXTERN char_u	*repeat_cmdline INIT(= NULL); \/\/ command line for "."$/;"	v
repeat_message	message.c	/^repeat_message(void)$/;"	f
repeating	ex_docmd.c	/^    int		repeating;		\/\/ TRUE when looping a second time$/;"	m	struct:loop_cookie	file:
repl_cmdline	ex_docmd.c	/^repl_cmdline($/;"	f	file:
repl_from	spell.h	/^SPELL_EXTERN char_u	*repl_from SPELL_INIT(= NULL);$/;"	v
repl_to	spell.h	/^SPELL_EXTERN char_u	*repl_to SPELL_INIT(= NULL);$/;"	v
repl_widgets	gui_gtk.c	/^static SharedFindReplace repl_widgets = {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL};$/;"	v	file:
repl_widgets	gui_motif.c	/^static SharedFindReplace repl_widgets = {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL};$/;"	v	file:
replace	gui_gtk.c	/^    GtkWidget *replace;	\/\/ 'Replace With' action button$/;"	m	struct:_SharedFindReplace	file:
replace	gui_motif.c	/^    Widget replace;	\/\/ 'Replace With' action button$/;"	m	struct:_SharedFindReplace	file:
replace_character	ops.c	/^replace_character(int c)$/;"	f	file:
replace_do_bs	edit.c	/^replace_do_bs(int limit_col)$/;"	f	file:
replace_flush	edit.c	/^replace_flush(void)$/;"	f	file:
replace_join	edit.c	/^replace_join($/;"	f
replace_makeprg	ex_docmd.c	/^replace_makeprg(exarg_T *eap, char_u *p, char_u **cmdlinep)$/;"	f	file:
replace_offset	globals.h	/^EXTERN int	replace_offset INIT(= 0);   \/\/ offset for replace_push()$/;"	v
replace_pop	edit.c	/^replace_pop(void)$/;"	f	file:
replace_pop_ins	edit.c	/^replace_pop_ins(void)$/;"	f	file:
replace_push	edit.c	/^replace_push($/;"	f
replace_push_mb	edit.c	/^replace_push_mb(char_u *p)$/;"	f
replace_stack	edit.c	/^static char_u	*replace_stack = NULL;$/;"	v	file:
replace_stack_len	edit.c	/^static long	replace_stack_len = 0;	    \/\/ max. number of entries$/;"	v	file:
replace_stack_nr	edit.c	/^static long	replace_stack_nr = 0;	    \/\/ next entry in replace stack$/;"	v	file:
replace_termcodes	term.c	/^replace_termcodes($/;"	f
reply	os_mswin.c	/^    char_u	*reply;		\/\/ reply string$/;"	m	struct:__anon74	file:
reply_T	os_mswin.c	/^} reply_T;$/;"	t	typeref:struct:__anon74	file:
reply_list	os_mswin.c	/^static garray_T reply_list = {0, 0, sizeof(reply_T), 5, 0};$/;"	v	file:
reply_received	os_mswin.c	/^static int reply_received = 0;$/;"	v	file:
report_default_term	term.c	/^report_default_term(char_u *term)$/;"	f	file:
report_discard_pending	ex_eval.c	/^report_discard_pending(int pending, void *value)$/;"	f	file:
report_make_pending	ex_eval.c	/^report_make_pending(int pending, void *value)$/;"	f
report_pending	ex_eval.c	/^report_pending(int action, int pending, void *value)$/;"	f	file:
report_re_switch	regexp.c	/^report_re_switch(char_u *pat)$/;"	f	file:
report_resume_pending	ex_eval.c	/^report_resume_pending(int pending, void *value)$/;"	f	file:
report_state	regexp_nfa.c	/^report_state(char *action,$/;"	f	file:
report_term_error	term.c	/^report_term_error(char *error_msg, char_u *term)$/;"	f	file:
req_codes_from_term	term.c	/^req_codes_from_term(void)$/;"	f	file:
req_more_codes_from_term	term.c	/^req_more_codes_from_term(void)$/;"	f	file:
requestBalloon	gui_beval.c	/^requestBalloon(BalloonEval *beval)$/;"	f	file:
request_choice	dosinst.c	/^request_choice(void)$/;"	f	file:
request_progress_T	term.c	/^} request_progress_T;$/;"	t	typeref:enum:__anon119	file:
requires_py_version	ex_cmds2.c	/^requires_py_version(char_u *filename)$/;"	f	file:
rescore_one	spellsuggest.c	/^rescore_one(suginfo_T *su, suggest_T *stp)$/;"	f	file:
rescore_suggestions	spellsuggest.c	/^rescore_suggestions(suginfo_T *su)$/;"	f	file:
resel_VIsual_line_count	globals.h	/^EXTERN linenr_T	resel_VIsual_line_count;	\/\/ number of lines$/;"	v
resel_VIsual_mode	globals.h	/^EXTERN int	resel_VIsual_mode INIT(= NUL);	\/\/ 'v', 'V', or Ctrl-V$/;"	v
resel_VIsual_vcol	globals.h	/^EXTERN colnr_T	resel_VIsual_vcol;		\/\/ nr of cols or end col$/;"	v
reserve_local	vim9compile.c	/^reserve_local(cctx_T *cctx, char_u *name, size_t len, int isConst, type_T *type)$/;"	f	file:
reserved	vim9compile.c	/^static char *reserved[] = {$/;"	v	file:
reserved0	os_vms.c	/^    unsigned char  reserved0;$/;"	m	struct:typeahead_st	file:
reserved1	os_vms.c	/^    unsigned long  reserved1;$/;"	m	struct:typeahead_st	file:
reset_VIsual	normal.c	/^reset_VIsual(void)$/;"	f
reset_VIsual_and_resel	normal.c	/^reset_VIsual_and_resel(void)$/;"	f
reset_console_color_rgb	os_win32.c	/^reset_console_color_rgb(void)$/;"	f	file:
reset_cterm_colors	screen.c	/^reset_cterm_colors(void)$/;"	f
reset_cursorline	move.c	/^reset_cursorline(void)$/;"	f
reset_expand_highlight	syntax.c	/^reset_expand_highlight(void)$/;"	f
reset_focus	gui_motif.c	/^reset_focus(void)$/;"	f	file:
reset_last_sourcing	message.c	/^reset_last_sourcing(void)$/;"	f
reset_lnums	window.c	/^reset_lnums()$/;"	f
reset_modifiable	option.c	/^reset_modifiable(void)$/;"	f
reset_option_was_set	option.c	/^reset_option_was_set(char_u *name)$/;"	f
reset_screen_attr	screen.c	/^reset_screen_attr(void)$/;"	f
reset_search_dir	search.c	/^reset_search_dir(void)$/;"	f
reset_signals	os_unix.c	/^reset_signals(void)$/;"	f
reset_synblock	syntax.c	/^reset_synblock(win_T *wp)$/;"	f
reset_v_option_vars	evalvars.c	/^reset_v_option_vars(void)$/;"	f
resettitle	buffer.c	/^resettitle(void)$/;"	f
resize_console_buf	os_win32.c	/^resize_console_buf(void)$/;"	f
resize_func	os_unix.c	/^resize_func(int check_only)$/;"	f	file:
resolve_reparse_point	os_mswin.c	/^resolve_reparse_point(char_u *fname)$/;"	f	file:
resolve_shortcut	os_mswin.c	/^resolve_shortcut(char_u *fname)$/;"	f	file:
resolve_symlink	memline.c	/^resolve_symlink(char_u *fname, char_u *buf)$/;"	f
resources	gui_at_sb.c	/^static XtResource resources[] =$/;"	v	file:
resources	gui_xmebw.c	/^static XtResource resources[] =$/;"	v	file:
restart_VIsual_select	normal.c	/^static int	restart_VIsual_select = 0;$/;"	v	file:
restart_command	gui_gtk_x11.c	/^static const char *restart_command = NULL;$/;"	v	file:
restart_edit	globals.h	/^EXTERN int restart_edit INIT(= 0);	\/\/ call edit when next cmd finished$/;"	v
restoreRedobuff	getchar.c	/^restoreRedobuff(save_redo_T *save_redo)$/;"	f
restore_buffer	evalbuffer.c	/^restore_buffer(bufref_T *save_curbuf)$/;"	f
restore_chartab	syntax.c	/^restore_chartab(char_u *chartab)$/;"	f	file:
restore_clipboard	os_unix.c	/^restore_clipboard(void)$/;"	f	file:
restore_cmdline	ex_getln.c	/^restore_cmdline(cmdline_info_T *ccp)$/;"	f	file:
restore_console_color_rgb	os_win32.c	/^restore_console_color_rgb(void)$/;"	f	file:
restore_cterm_colors	highlight.c	/^restore_cterm_colors(void)$/;"	f
restore_current_state	ex_docmd.c	/^restore_current_state(save_state_T *sst)$/;"	f
restore_dbg_stuff	ex_docmd.c	/^restore_dbg_stuff(struct dbg_stuff *dsp)$/;"	f	file:
restore_funccal	userfunc.c	/^restore_funccal(void)$/;"	f
restore_last_search_pattern	search.c	/^restore_last_search_pattern(void)$/;"	f
restore_parse_state	regexp.c	/^restore_parse_state(parse_state_T *ps)$/;"	f	file:
restore_se	regexp_bt.c	2515;"	d	file:
restore_search_patterns	search.c	/^restore_search_patterns(void)$/;"	f
restore_snapshot	window.c	/^restore_snapshot($/;"	f
restore_snapshot_rec	window.c	/^restore_snapshot_rec(frame_T *sn, frame_T *fr)$/;"	f	file:
restore_start_dir	quickfix.c	/^restore_start_dir(char_u *dirname_start)$/;"	f	file:
restore_subexpr	regexp_bt.c	/^restore_subexpr(regbehind_T *bp)$/;"	f	file:
restore_typeahead	getchar.c	/^restore_typeahead(tasave_T *tp)$/;"	f
restore_viewstate	ex_getln.c	/^restore_viewstate(viewstate_T *vs)$/;"	f	file:
restore_vimvar	evalvars.c	/^restore_vimvar(int idx, typval_T *save_tv)$/;"	f
restore_vimvars	evalvars.c	/^restore_vimvars(vimvars_save_T *vvsave)$/;"	f
restore_visual_mode	normal.c	/^restore_visual_mode(void)$/;"	f
restore_win	evalwindow.c	/^restore_win($/;"	f
restore_win_for_buf	evalbuffer.c	/^restore_win_for_buf($/;"	f
restore_win_noblock	evalwindow.c	/^restore_win_noblock($/;"	f
restricted	globals.h	/^EXTERN int	restricted INIT(= FALSE);$/;"	v
result	digraph.c	/^    result_T	result;$/;"	m	struct:digraph	file:
result	if_py_both.h	/^    PyObject	*result;$/;"	m	struct:__anon151
result	if_py_both.h	/^    PyObject	*result;$/;"	m	struct:__anon152
result	if_xcmdsrv.c	/^    char_u  *result;	\/\/ String result for command (malloc'ed).$/;"	m	struct:PendingCommand	file:
result	regexp_nfa.c	/^    int		result;		\/\/ NFA_PIM_*, see below$/;"	m	struct:nfa_pim_S	file:
result_T	digraph.c	/^typedef int result_T;$/;"	t	file:
retlen	os_vms.c	/^    int		*retlen;$/;"	m	struct:__anon79	file:
rettv	structs.h	/^    typval_T	*rettv;		\/\/ return value$/;"	m	struct:funccall_S
rettv_blob_alloc	blob.c	/^rettv_blob_alloc(typval_T *rettv)$/;"	f
rettv_blob_set	blob.c	/^rettv_blob_set(typval_T *rettv, blob_T *b)$/;"	f
rettv_dict_alloc	dict.c	/^rettv_dict_alloc(typval_T *rettv)$/;"	f
rettv_dict_set	dict.c	/^rettv_dict_set(typval_T *rettv, dict_T *d)$/;"	f
rettv_list_alloc	list.c	/^rettv_list_alloc(typval_T *rettv)$/;"	f
rettv_list_alloc_id	list.c	/^rettv_list_alloc_id(typval_T *rettv, alloc_id_T id UNUSED)$/;"	f
rettv_list_set	list.c	/^rettv_list_set(typval_T *rettv, list_T *l)$/;"	f
return_register	evalfunc.c	/^return_register(int regname, typval_T *rettv)$/;"	f	file:
returned	structs.h	/^    int		returned;	\/\/ ":return" used$/;"	m	struct:funccall_S
retval	structs.h	/^    int		retval;		\/\/ return: CA_* values$/;"	m	struct:cmdarg_S
reverse_text	search.c	/^reverse_text(char_u *s)$/;"	f
revins_chars	edit.c	/^static int	revins_chars;		\/\/ how much to skip after edit$/;"	v	file:
revins_legal	edit.c	/^static int	revins_legal;		\/\/ was the last char 'legal'?$/;"	v	file:
revins_on	edit.c	/^static int	revins_on;		\/\/ reverse insert mode on$/;"	v	file:
revins_scol	edit.c	/^static int	revins_scol;		\/\/ start column of revins session$/;"	v	file:
rewind_conditionals	ex_eval.c	/^rewind_conditionals($/;"	f
rex	regexp.c	/^static regexec_T	rex;$/;"	v	file:
rex_in_use	regexp.c	/^static int		rex_in_use = FALSE;$/;"	v	file:
rfg_status	term.c	/^static termrequest_T rfg_status = TERMREQUEST_INIT;$/;"	v	file:
ri_alpha	regexp.c	279;"	d	file:
ri_digit	regexp.c	274;"	d	file:
ri_head	regexp.c	278;"	d	file:
ri_hex	regexp.c	275;"	d	file:
ri_lower	regexp.c	280;"	d	file:
ri_octal	regexp.c	276;"	d	file:
ri_upper	regexp.c	281;"	d	file:
ri_white	regexp.c	282;"	d	file:
ri_word	regexp.c	277;"	d	file:
right_sbar_x	gui.h	/^    int		right_sbar_x;	    \/\/ Calculated x coord for right scrollbar$/;"	m	struct:Gui
rl_mirror	screen.c	/^rl_mirror(char_u *str)$/;"	f
rm	structs.h	/^    regmmatch_T	rm;	    \/\/ points to the regexp program; contains last$/;"	m	struct:__anon240
rm_ic	regexp.h	/^    int			rm_ic;$/;"	m	struct:__anon175
rmm_ic	regexp.h	/^    int			rmm_ic;$/;"	m	struct:__anon176
rmm_maxcol	regexp.h	/^    colnr_T		rmm_maxcol;	\/\/ when not zero: maximum column$/;"	m	struct:__anon176
role_argument	gui_gtk_x11.c	/^static const char *role_argument = NULL;$/;"	v	file:
room	structs.h	/^	char_u	room[VAR_SHORT_LEN];	\/\/ room for the name$/;"	m	struct:funccall_S::__anon212
root_menu	globals.h	/^EXTERN vimmenu_T	*root_menu INIT(= NULL);$/;"	v
row	gui.h	/^    int		row;		    \/\/ Current cursor row in GUI display$/;"	m	struct:Gui
row2tcl	if_tcl.c	100;"	d	file:
row2vim	if_tcl.c	101;"	d	file:
rq_buffer	structs.h	/^    char_u	*rq_buffer;$/;"	m	struct:readq_S
rq_buflen	structs.h	/^    long_u	rq_buflen;$/;"	m	struct:readq_S
rq_next	structs.h	/^    readq_T	*rq_next;$/;"	m	struct:readq_S
rq_prev	structs.h	/^    readq_T	*rq_prev;$/;"	m	struct:readq_S
rs_len	regexp_bt.c	/^    int		rs_len;$/;"	m	struct:__anon93	file:
rs_no	regexp_bt.c	/^    short	rs_no;		\/\/ submatch nr or BEHIND\/NOBEHIND$/;"	m	struct:regitem_S	file:
rs_scan	regexp_bt.c	/^    char_u	*rs_scan;	\/\/ current node in program$/;"	m	struct:regitem_S	file:
rs_state	regexp_bt.c	/^    regstate_T	rs_state;	\/\/ what we are doing, one of RS_ above$/;"	m	struct:regitem_S	file:
rs_u	regexp_bt.c	/^    } rs_u;$/;"	m	struct:__anon93	typeref:union:__anon93::__anon94	file:
rs_un	regexp_bt.c	/^    } rs_un;			\/\/ room for saving rex.input$/;"	m	struct:regitem_S	typeref:union:regitem_S::__anon97	file:
rsm	regexp.c	/^static regsubmatch_T rsm;  \/\/ can only be used when can_f_submatch is TRUE$/;"	v	file:
rsrc_bold_font_name	gui.h	/^    char_u	*rsrc_bold_font_name; \/\/ Resource bold font name$/;"	m	struct:Gui
rsrc_boldital_font_name	gui.h	/^    char_u	*rsrc_boldital_font_name;  \/\/ Resource bold-italic font name$/;"	m	struct:Gui
rsrc_font_name	gui.h	/^    char_u	*rsrc_font_name;    \/\/ Resource font name, used if 'guifont'$/;"	m	struct:Gui
rsrc_input_method	gui.h	/^    char	*rsrc_input_method;$/;"	m	struct:Gui
rsrc_ital_font_name	gui.h	/^    char_u	*rsrc_ital_font_name; \/\/ Resource italic font name$/;"	m	struct:Gui
rsrc_menu_bg_name	gui.h	/^    char	*rsrc_menu_bg_name;	\/\/ Color of menu & dialog background$/;"	m	struct:Gui
rsrc_menu_fg_name	gui.h	/^    char	*rsrc_menu_fg_name;	\/\/ Color of menu & dialog foreground$/;"	m	struct:Gui
rsrc_menu_font_name	gui.h	/^    char_u	*rsrc_menu_font_name;    \/\/ Resource menu Font name$/;"	m	struct:Gui
rsrc_preedit_type_name	gui.h	/^    char	*rsrc_preedit_type_name;$/;"	m	struct:Gui
rsrc_rev_video	gui.h	/^    Bool	rsrc_rev_video;	    \/\/ Use reverse video?$/;"	m	struct:Gui
rsrc_scroll_bg_name	gui.h	/^    char	*rsrc_scroll_bg_name;	\/\/ Color of scrollbar background$/;"	m	struct:Gui
rsrc_scroll_fg_name	gui.h	/^    char	*rsrc_scroll_fg_name;	\/\/ Color of scrollbar foreground$/;"	m	struct:Gui
rsrc_tooltip_bg_name	gui.h	/^    char	*rsrc_tooltip_bg_name;	\/\/ tooltip background color name$/;"	m	struct:Gui
rsrc_tooltip_fg_name	gui.h	/^    char	*rsrc_tooltip_fg_name;	\/\/ tooltip foreground color name$/;"	m	struct:Gui
rsrc_tooltip_font_name	gui.h	/^    char_u	*rsrc_tooltip_font_name; \/\/ tooltip font name$/;"	m	struct:Gui
ru_col	globals.h	/^EXTERN int	ru_col;		\/\/ column for ruler$/;"	v
ru_wid	globals.h	/^EXTERN int	ru_wid;		\/\/ 'rulerfmt' width of ruler when non-zero$/;"	v
ruby_buffer_free	if_ruby.c	/^ruby_buffer_free(buf_T *buf)$/;"	f
ruby_convert_to_vim_value	if_ruby.c	/^ruby_convert_to_vim_value(VALUE val, typval_T *rettv)$/;"	f	file:
ruby_enabled	if_ruby.c	/^ruby_enabled(int verbose)$/;"	f
ruby_end	if_ruby.c	/^ruby_end(void)$/;"	f
ruby_errinfo	if_ruby.c	331;"	d	file:
ruby_funcname_table	if_ruby.c	/^} ruby_funcname_table[] =$/;"	v	typeref:struct:__anon59	file:
ruby_init	if_ruby.c	333;"	d	file:
ruby_init_loadpath	if_ruby.c	334;"	d	file:
ruby_init_stack	if_ruby.c	200;"	d	file:
ruby_init_stack	if_ruby.c	319;"	d	file:
ruby_init_stack	if_ruby.c	320;"	d	file:
ruby_init_stack	if_ruby.c	322;"	d	file:
ruby_initialized	if_ruby.c	/^static int ruby_initialized = 0;$/;"	v	file:
ruby_io_init	if_ruby.c	/^ruby_io_init(void)$/;"	f	file:
ruby_options	if_ruby.c	/^static void* (*ruby_options)(int, char**);$/;"	v	file:
ruby_options	if_ruby.c	354;"	d	file:
ruby_runtime_link_init	if_ruby.c	/^ruby_runtime_link_init(char *libname, int verbose)$/;"	f	file:
ruby_script	if_ruby.c	347;"	d	file:
ruby_stack_start	if_ruby.c	/^static void *ruby_stack_start;$/;"	v	file:
ruby_sysinit	if_ruby.c	337;"	d	file:
ruby_vim_init	if_ruby.c	/^ruby_vim_init(void)$/;"	f	file:
ruby_window_free	if_ruby.c	/^ruby_window_free(win_T *win)$/;"	f
run_cmd	if_py_both.h	/^run_cmd(const char *cmd, void *arg UNUSED$/;"	f
run_command	dosinst.h	/^run_command(char *cmd)$/;"	f
run_do	if_py_both.h	/^run_do(const char *cmd, void *arg UNUSED$/;"	f
run_eval	if_py_both.h	/^run_eval(const char *cmd, typval_T *rettv$/;"	f
run_silent_uninstall	dosinst.c	/^run_silent_uninstall(char *uninst_exe)$/;"	f	file:
runner	if_py_both.h	/^typedef void (*runner)(const char *, void *$/;"	t
running_syn_inc_tag	syntax.c	/^static int running_syn_inc_tag = 0;$/;"	v	file:
runtimeidx	dosinst.h	/^int	runtimeidx;		\/\/ index in installdir[] where "vim60" starts$/;"	v
s	list.c	/^    char_u	*s;$/;"	m	struct:join_S	file:
s	regexp_nfa.c	/^    nfa_state_T	*s;$/;"	m	union:Ptrlist	file:
s1	iid_ole.c	/^    unsigned short s1;$/;"	m	struct:_IID	file:
s2	iid_ole.c	/^    unsigned short s2;$/;"	m	struct:_IID	file:
s_brush	gui_w32.c	/^static HBRUSH		s_brush = NULL;$/;"	v	file:
s_busy_processing	gui_w32.c	/^static int		s_busy_processing = FALSE;$/;"	v	file:
s_button_pending	gui_w32.c	/^static int	s_button_pending = -1;$/;"	v	file:
s_cursor_visible	os_win32.c	/^static int s_cursor_visible = TRUE;$/;"	v	file:
s_directx_enabled	gui_w32.c	/^static int s_directx_enabled = 0;$/;"	v	file:
s_directx_load_attempted	gui_w32.c	/^static int s_directx_load_attempted = 0;$/;"	v	file:
s_dlgfntheight	gui_w32.c	/^static WORD		s_dlgfntheight;		\/\/ height of the dialog font$/;"	v	file:
s_dlgfntwidth	gui_w32.c	/^static WORD		s_dlgfntwidth;		\/\/ width of the dialog font$/;"	v	file:
s_dont_use_vimrun	os_win32.c	/^static int s_dont_use_vimrun = TRUE;$/;"	v	file:
s_dwc	gui_w32.c	/^static DWriteContext *s_dwc = NULL;$/;"	v	file:
s_findrep_hwnd	gui_w32.c	/^static HWND		s_findrep_hwnd = NULL;$/;"	v	file:
s_findrep_is_find	gui_w32.c	/^static int		s_findrep_is_find;	\/\/ TRUE for find dialog, FALSE$/;"	v	file:
s_findrep_msg	gui_w32.c	/^static UINT		s_findrep_msg = 0;	\/\/ set in gui_w[16\/32].c$/;"	v	file:
s_findrep_struct	gui_w32.c	/^static FINDREPLACEW	s_findrep_struct;$/;"	v	file:
s_getting_focus	gui_w32.c	/^static int	s_getting_focus = FALSE;$/;"	v	file:
s_hCursor	gui_w32.c	/^static HCURSOR      s_hCursor = NULL;$/;"	v	file:
s_hdc	gui_w32.c	/^static HDC		s_hdc = NULL;$/;"	v	file:
s_htearbitmap	gui_w32.c	/^static HBITMAP	s_htearbitmap;	    \/\/ bitmap used to indicate tearoff$/;"	v	file:
s_hwnd	gui_w32.c	/^HWND			s_hwnd = NULL;$/;"	v	file:
s_hwnd	os_mswin.c	/^static HWND s_hwnd = 0;	    \/\/ console window handle, set by GetConsoleHwnd()$/;"	v	file:
s_kFlags_pending	gui_w32.c	/^static UINT	s_kFlags_pending;$/;"	v	file:
s_lParam	gui_w32.c	/^static LPARAM		s_lParam = 0;$/;"	v	file:
s_lfDefault	os_mswin.c	/^static const LOGFONTW s_lfDefault =$/;"	v	file:
s_menuBar	gui_w32.c	/^static HMENU		s_menuBar = NULL;$/;"	v	file:
s_menu_id	gui_w32.c	/^static UINT	s_menu_id = 100;$/;"	v	file:
s_need_activate	gui_w32.c	/^static int		s_need_activate = FALSE;$/;"	v	file:
s_pt	gui_w32.c	/^static POINT	    s_pt = {0, 0};$/;"	v	file:
s_tabhwnd	gui_w32.c	/^static HWND		s_tabhwnd = NULL;$/;"	v	file:
s_tabline_wndproc	gui_w32.c	/^static WNDPROC		s_tabline_wndproc = NULL;$/;"	v	file:
s_tearoffs	menu.c	/^static int s_tearoffs = FALSE;$/;"	v	file:
s_textArea	gui_w32.c	/^static HWND		s_textArea = NULL;$/;"	v	file:
s_textfield	gui_w32.c	/^static char_u		*s_textfield; \/\/ Used by dialogs to pass back strings$/;"	v	file:
s_timed_out	gui_w32.c	/^static int	s_timed_out = FALSE;$/;"	v	file:
s_toolbar_wndproc	gui_w32.c	/^static WNDPROC		s_toolbar_wndproc = NULL;$/;"	v	file:
s_toolbarhwnd	gui_w32.c	/^static HWND		s_toolbarhwnd = NULL;$/;"	v	file:
s_uMsg	gui_w32.c	/^static UINT		s_uMsg = 0;$/;"	v	file:
s_usenewlook	gui_w32.c	/^static int	s_usenewlook;	    \/\/ emulate W95\/NT4 non-bold dialogs$/;"	v	file:
s_wParam	gui_w32.c	/^static WPARAM		s_wParam = 0;$/;"	v	file:
s_wait_timer	gui_w32.c	/^static UINT	s_wait_timer = 0;	  \/\/ Timer for get char from user$/;"	v	file:
s_x_pending	gui_w32.c	/^static int	s_x_pending;$/;"	v	file:
s_y_pending	gui_w32.c	/^static int	s_y_pending;$/;"	v	file:
sa_stop_lnum	structs.h	/^    linenr_T	sa_stop_lnum;	\/\/ stop after this line number when != 0$/;"	m	struct:__anon259
sa_timed_out	structs.h	/^    int		sa_timed_out;	\/\/ set when timed out$/;"	m	struct:__anon259
sa_tm	structs.h	/^    proftime_T	*sa_tm;		\/\/ timeout limit or NULL$/;"	m	struct:__anon259
sa_wrapped	structs.h	/^    int		sa_wrapped;	\/\/ search wrapped around$/;"	m	struct:__anon259
safe_to_invoke_callback	channel.c	/^static int safe_to_invoke_callback = 0;$/;"	v	file:
safe_vgetc	getchar.c	/^safe_vgetc(void)$/;"	f
sal_to_bool	spellfile.c	/^sal_to_bool(char_u *s)$/;"	f	file:
salfirst_T	spell.h	/^typedef int salfirst_T;$/;"	t
salitem_S	spell.h	/^typedef struct salitem_S$/;"	s
salitem_T	spell.h	/^} salitem_T;$/;"	t	typeref:struct:salitem_S
salt	blowfish.c	/^    char_u   salt[9];$/;"	m	struct:__anon3	file:
salt_len	crypt.c	/^    int	    salt_len;	\/\/ length of salt, or 0 when not using salt$/;"	m	struct:__anon7	file:
same_color	terminal.c	/^same_color(VTermColor *a, VTermColor *b)$/;"	f	file:
same_directory	misc2.c	/^same_directory(char_u *f1, char_u *f2)$/;"	f
same_leader	ops.c	/^same_leader($/;"	f	file:
sample	gui_xmdlg.c	/^    Widget	sample;$/;"	m	struct:_SharedFontSelData	file:
sandbox	globals.h	/^EXTERN int	sandbox INIT(= 0);$/;"	v
sandbox_check	if_mzsch.c	/^sandbox_check(void)$/;"	f	file:
sandbox_file_guard	if_mzsch.c	/^sandbox_file_guard(int argc UNUSED, Scheme_Object **argv)$/;"	f	file:
sandbox_network_guard	if_mzsch.c	/^sandbox_network_guard(int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:
sat_icon	structs.h	/^    void	*sat_icon;$/;"	m	struct:sign_attrs_S
sat_linehl	structs.h	/^    int		sat_linehl;$/;"	m	struct:sign_attrs_S
sat_text	structs.h	/^    char_u	*sat_text;$/;"	m	struct:sign_attrs_S
sat_texthl	structs.h	/^    int		sat_texthl;$/;"	m	struct:sign_attrs_S
sat_typenr	structs.h	/^    int		sat_typenr;$/;"	m	struct:sign_attrs_S
sattr_T	vim.h	/^typedef unsigned short sattr_T;$/;"	t
saveRedobuff	getchar.c	/^saveRedobuff(save_redo_T *save_redo)$/;"	f
save_State	structs.h	/^    int		save_State;$/;"	m	struct:__anon253
save_after	regexp_bt.c	/^    regsave_T	save_after;$/;"	m	struct:regbehind_S	file:
save_behind	regexp_bt.c	/^    regsave_T	save_behind;$/;"	m	struct:regbehind_S	file:
save_chartab	syntax.c	/^save_chartab(char_u *chartab)$/;"	f	file:
save_clipboard	os_unix.c	/^save_clipboard(void)$/;"	f	file:
save_cmdline	ex_getln.c	/^save_cmdline(cmdline_info_T *ccp)$/;"	f	file:
save_console_bg_rgb	os_win32.c	/^static guicolor_T save_console_bg_rgb;$/;"	v	file:
save_console_fg_rgb	os_win32.c	/^static guicolor_T save_console_fg_rgb;$/;"	v	file:
save_curbuf	structs.h	/^    buf_T	*save_curbuf;	\/\/ saved curbuf$/;"	m	struct:__anon244
save_current_state	ex_docmd.c	/^save_current_state(save_state_T *sst)$/;"	f
save_cursor	ex_getln.c	/^    pos_T	save_cursor;$/;"	m	struct:__anon27	file:
save_curwin	structs.h	/^    win_T	*save_curwin;	\/\/ saved curwin$/;"	m	struct:__anon244
save_dbg_stuff	ex_docmd.c	/^save_dbg_stuff(struct dbg_stuff *dsp)$/;"	f	file:
save_ei	structs.h	/^    char_u	*save_ei;		\/\/ saved value of 'eventignore'$/;"	m	struct:__anon191
save_end	regexp_bt.c	/^    save_se_T   save_end[NSUBEXP];$/;"	m	struct:regbehind_S	file:
save_file_ff	change.c	/^save_file_ff(buf_T *buf)$/;"	f
save_finish_op	structs.h	/^    int		save_finish_op;$/;"	m	struct:__anon253
save_funccal	userfunc.c	/^save_funccal(funccal_entry_T *entry)$/;"	f
save_in_queue	if_xcmdsrv.c	/^save_in_queue(char_u *propInfo, long_u len)$/;"	f	file:
save_inputbuf	structs.h	/^    char_u		*save_inputbuf;$/;"	m	struct:__anon201
save_insertmode	structs.h	/^    int		save_insertmode;$/;"	m	struct:__anon253
save_last_search_pattern	search.c	/^save_last_search_pattern(void)$/;"	f
save_level	search.c	/^static int save_level = 0;$/;"	v	file:
save_msg_didout	structs.h	/^    int		save_msg_didout;$/;"	m	struct:__anon253
save_msg_scroll	structs.h	/^    int		save_msg_scroll;$/;"	m	struct:__anon253
save_msg_silent	ex_cmds.h	/^    int		save_msg_silent; \/\/ saved value of msg_silent$/;"	m	struct:exarg
save_need_clear_subexpr	regexp_bt.c	/^    int		save_need_clear_subexpr;$/;"	m	struct:regbehind_S	file:
save_opcount	structs.h	/^    int		save_opcount;$/;"	m	struct:__anon253
save_p_ls	globals.h	/^EXTERN int  save_p_ls INIT(= -1);	\/\/ Save 'laststatus' setting$/;"	v
save_p_wmh	globals.h	/^EXTERN int  save_p_wmh INIT(= -1);	\/\/ Save 'winminheight' setting$/;"	v
save_parse_state	regexp.c	/^save_parse_state(parse_state_T *ps)$/;"	f	file:
save_patterns	os_unix.c	/^save_patterns($/;"	f	file:
save_prevwin	structs.h	/^    win_T	*save_prevwin;	\/\/ saved prevwin$/;"	m	struct:__anon244
save_re_pat	search.c	/^save_re_pat(int idx, char_u *pat, int magic)$/;"	f
save_readbuf1	structs.h	/^    buffheader_T	save_readbuf1;$/;"	m	struct:__anon201
save_readbuf2	structs.h	/^    buffheader_T	save_readbuf2;$/;"	m	struct:__anon201
save_redo_T	structs.h	/^} save_redo_T;$/;"	t	typeref:struct:__anon189
save_reg_executing	structs.h	/^    int		save_reg_executing;$/;"	m	struct:__anon253
save_reply	os_mswin.c	/^save_reply(HWND server, char_u *reply, int expr)$/;"	f	file:
save_restart_edit	structs.h	/^    int		save_restart_edit;$/;"	m	struct:__anon253
save_se	regexp_bt.c	2511;"	d	file:
save_se_T	regexp_bt.c	/^} save_se_T;$/;"	t	typeref:struct:__anon95	file:
save_se_multi	regexp_bt.c	/^save_se_multi(save_se_T *savep, lpos_T *posp)$/;"	f	file:
save_se_one	regexp_bt.c	/^save_se_one(save_se_T *savep, char_u **pp)$/;"	f	file:
save_search_patterns	search.c	/^save_search_patterns(void)$/;"	f
save_start	regexp_bt.c	/^    save_se_T   save_start[NSUBEXP];$/;"	m	struct:regbehind_S	file:
save_state_T	structs.h	/^} save_state_T;$/;"	t	typeref:struct:__anon253
save_subexpr	regexp_bt.c	/^save_subexpr(regbehind_T *bp)$/;"	f	file:
save_typeahead	getchar.c	/^save_typeahead(tasave_T *tp)$/;"	f
save_typebuf	getchar.c	/^save_typebuf(void)$/;"	f
save_typebuf	structs.h	/^    typebuf_T		save_typebuf;$/;"	m	struct:__anon201
save_viewstate	ex_getln.c	/^save_viewstate(viewstate_T *vs)$/;"	f	file:
save_vimvars	evalvars.c	/^save_vimvars(vimvars_save_T *vvsave)$/;"	f
save_yourself	os_unix.c	/^    Bool save_yourself;     \/\/ If we're in the middle of a save_yourself$/;"	m	struct:__anon75	file:
save_yourself_atom	gui_gtk_x11.c	/^static GdkAtom save_yourself_atom = GDK_NONE;$/;"	v	file:
saved	gui_mac.c	/^    short saved; \/\/ set this to zero when replying, unused$/;"	m	struct:ModificationInfo	file:
saved_cursor	globals.h	/^EXTERN pos_T	saved_cursor		\/\/ w_cursor before formatting text.$/;"	v
saved_emsg_silent	structs.h	/^    int		saved_emsg_silent;	\/\/ saved value of "emsg_silent"$/;"	m	struct:eslist_elem
saved_last_idx	search.c	/^static int	    saved_last_idx = 0;$/;"	v	file:
saved_last_search_spat	search.c	/^static spat_T	    saved_last_search_spat;$/;"	v	file:
saved_no_hlsearch	search.c	/^static int	    saved_no_hlsearch = 0;$/;"	v	file:
saved_python_thread	if_python.c	/^static PyThreadState *saved_python_thread = NULL;$/;"	v	file:
saved_spats	search.c	/^static spat_T	    saved_spats[2];$/;"	v	file:
saved_spats_last_idx	search.c	/^static int	    saved_spats_last_idx = 0;$/;"	v	file:
saved_spats_no_hlsearch	search.c	/^static int	    saved_spats_no_hlsearch = 0;$/;"	v	file:
saved_typebuf	getchar.c	/^static typebuf_T saved_typebuf[NSCRIPT];$/;"	v	file:
sb_attr	message.c	/^    int		sb_attr;	\/\/ text attributes$/;"	m	struct:msgchunk_S	file:
sb_cells	terminal.c	/^    cellattr_T	*sb_cells;	\/\/ allocated$/;"	m	struct:sb_line_S	file:
sb_clear_T	message.c	/^} sb_clear_T;$/;"	t	typeref:enum:__anon72	file:
sb_cols	terminal.c	/^    int		sb_cols;	\/\/ can differ per line$/;"	m	struct:sb_line_S	file:
sb_data	spellfile.c	/^    char_u	sb_data[1];	\/\/ data, actually longer$/;"	m	struct:sblock_S	file:
sb_eol	message.c	/^    char	sb_eol;		\/\/ TRUE when line ends after this text$/;"	m	struct:msgchunk_S	file:
sb_fill_attr	terminal.c	/^    cellattr_T	sb_fill_attr;	\/\/ for short line$/;"	m	struct:sb_line_S	file:
sb_line_S	terminal.c	/^typedef struct sb_line_S {$/;"	s	file:
sb_line_T	terminal.c	/^} sb_line_T;$/;"	t	typeref:struct:sb_line_S	file:
sb_msg_col	message.c	/^    int		sb_msg_col;	\/\/ column in which text starts$/;"	m	struct:msgchunk_S	file:
sb_next	message.c	/^    msgchunk_T	*sb_next;$/;"	m	struct:msgchunk_S	file:
sb_next	spellfile.c	/^    sblock_T	*sb_next;	\/\/ next block in list$/;"	m	struct:sblock_S	file:
sb_prev	message.c	/^    msgchunk_T	*sb_prev;$/;"	m	struct:msgchunk_S	file:
sb_text	message.c	/^    char_u	sb_text[1];	\/\/ text to be displayed, actually longer$/;"	m	struct:msgchunk_S	file:
sb_text	terminal.c	/^    char_u	*sb_text;	\/\/ for tl_scrollback_postponed$/;"	m	struct:sb_line_S	file:
sb_text_end_cmdline	message.c	/^sb_text_end_cmdline(void)$/;"	f
sb_text_start_cmdline	message.c	/^sb_text_start_cmdline(void)$/;"	f
sb_used	spellfile.c	/^    int		sb_used;	\/\/ nr of bytes already in use$/;"	m	struct:sblock_S	file:
sblock_S	spellfile.c	/^struct sblock_S$/;"	s	file:
sblock_T	spellfile.c	/^typedef struct sblock_S sblock_T;$/;"	t	typeref:struct:sblock_S	file:
sbx	blowfish.c	/^    UINT32_T	sbx[4][256];	    \/\/ S-boxes$/;"	m	struct:__anon2	file:
sbx_init	blowfish.c	/^static UINT32_T sbx_init[4][256] = {$/;"	v	file:
sc_charsets	hardcopy.c	/^static struct prt_ps_charset_S sc_charsets[] =$/;"	v	typeref:struct:prt_ps_charset_S	file:
sc_col	globals.h	/^EXTERN int	sc_col;		\/\/ column for shown command$/;"	v
sc_encodings	hardcopy.c	/^static struct prt_ps_encoding_S sc_encodings[] =$/;"	v	typeref:struct:prt_ps_encoding_S	file:
sc_lnum	structs.h	/^    linenr_T	sc_lnum;	\/\/ line number$/;"	m	struct:__anon180
sc_seq	structs.h	/^    int		sc_seq;		\/\/ sourcing sequence number$/;"	m	struct:__anon180
sc_sid	structs.h	/^    scid_T	sc_sid;		\/\/ script ID$/;"	m	struct:__anon180
sc_version	structs.h	/^    int		sc_version;	\/\/ :scriptversion$/;"	m	struct:__anon180
scanf_fmt_to_regpat	quickfix.c	/^scanf_fmt_to_regpat($/;"	f	file:
scb_callback	sound.c	/^    soundcb_T		*scb_callback;	\/\/ function to call$/;"	m	struct:soundcb_queue_S	file:
scb_id	sound.c	/^    uint32_t		scb_id;		\/\/ ID of the sound$/;"	m	struct:soundcb_queue_S	file:
scb_next	sound.c	/^    soundcb_queue_T	*scb_next;$/;"	m	struct:soundcb_queue_S	file:
scb_result	sound.c	/^    int			scb_result;	\/\/ CA_ value$/;"	m	struct:soundcb_queue_S	file:
schar_T	vim.h	/^typedef char_u schar_T;$/;"	t
scheme_add_global	if_mzsch.c	398;"	d	file:
scheme_add_global_symbol	if_mzsch.c	399;"	d	file:
scheme_apply	if_mzsch.c	400;"	d	file:
scheme_basic_env	if_mzsch.c	401;"	d	file:
scheme_builtin_value	if_mzsch.c	402;"	d	file:
scheme_byte_string_to_char_string	if_mzsch.c	404;"	d	file:
scheme_byte_string_to_char_string	if_mzsch.h	45;"	d
scheme_char_string_to_byte_string	if_mzsch.c	467;"	d	file:
scheme_char_string_to_path	if_mzsch.c	469;"	d	file:
scheme_check_threads	if_mzsch.c	407;"	d	file:
scheme_close_input_port	if_mzsch.c	408;"	d	file:
scheme_console_output	if_mzsch.c	391;"	d	file:
scheme_console_printf	if_mzsch.c	390;"	d	file:
scheme_count_lines	if_mzsch.c	409;"	d	file:
scheme_current_config	if_mzsch.c	466;"	d	file:
scheme_current_config	if_mzsch.h	33;"	d
scheme_current_continuation_marks	if_mzsch.c	410;"	d	file:
scheme_current_thread	if_mzsch.c	388;"	d	file:
scheme_display	if_mzsch.c	412;"	d	file:
scheme_display_to_string	if_mzsch.c	413;"	d	file:
scheme_do_eval	if_mzsch.c	414;"	d	file:
scheme_dont_gc_ptr	if_mzsch.c	415;"	d	file:
scheme_dynamic_wind	if_mzsch.c	479;"	d	file:
scheme_embedded_load	if_mzsch.c	496;"	d	file:
scheme_eof	if_mzsch.c	380;"	d	file:
scheme_eq	if_mzsch.c	416;"	d	file:
scheme_eval	if_mzsch.c	417;"	d	file:
scheme_eval_string	if_mzsch.c	418;"	d	file:
scheme_eval_string_all	if_mzsch.c	419;"	d	file:
scheme_external_get_thread_local_variables	if_mzsch.c	/^scheme_external_get_thread_local_variables(void)$/;"	f
scheme_false	if_mzsch.c	381;"	d	file:
scheme_finish_primitive_module	if_mzsch.c	420;"	d	file:
scheme_format	if_mzsch.c	422;"	d	file:
scheme_format_utf8	if_mzsch.c	424;"	d	file:
scheme_format_utf8	if_mzsch.h	35;"	d
scheme_free_immobile_box	if_mzsch.c	493;"	d	file:
scheme_gc_ptr_ok	if_mzsch.c	426;"	d	file:
scheme_get_param	if_mzsch.c	432;"	d	file:
scheme_get_sized_byte_string_output	if_mzsch.c	428;"	d	file:
scheme_get_sized_byte_string_output	if_mzsch.c	430;"	d	file:
scheme_get_sized_byte_string_output	if_mzsch.h	38;"	d
scheme_hash_get	if_mzsch.c	475;"	d	file:
scheme_hash_set	if_mzsch.c	474;"	d	file:
scheme_init_collection_paths	if_mzsch.c	491;"	d	file:
scheme_intern_symbol	if_mzsch.c	434;"	d	file:
scheme_lookup_global	if_mzsch.c	435;"	d	file:
scheme_main_setup	if_mzsch.c	486;"	d	file:
scheme_make_byte_string	if_mzsch.c	441;"	d	file:
scheme_make_byte_string	if_mzsch.c	444;"	d	file:
scheme_make_byte_string	if_mzsch.h	39;"	d
scheme_make_byte_string_output_port	if_mzsch.c	442;"	d	file:
scheme_make_byte_string_output_port	if_mzsch.c	445;"	d	file:
scheme_make_byte_string_output_port	if_mzsch.h	40;"	d
scheme_make_closed_prim_w_arity	if_mzsch.c	436;"	d	file:
scheme_make_double	if_mzsch.c	476;"	d	file:
scheme_make_hash_table	if_mzsch.c	473;"	d	file:
scheme_make_integer_value	if_mzsch.c	437;"	d	file:
scheme_make_pair	if_mzsch.c	438;"	d	file:
scheme_make_path	if_mzsch.c	405;"	d	file:
scheme_make_prim_w_arity	if_mzsch.c	439;"	d	file:
scheme_make_sized_byte_string	if_mzsch.c	477;"	d	file:
scheme_make_sized_byte_string	if_mzsch.h	34;"	d
scheme_make_struct_instance	if_mzsch.c	448;"	d	file:
scheme_make_struct_names	if_mzsch.c	449;"	d	file:
scheme_make_struct_type	if_mzsch.c	450;"	d	file:
scheme_make_struct_values	if_mzsch.c	451;"	d	file:
scheme_make_type	if_mzsch.c	452;"	d	file:
scheme_make_vector	if_mzsch.c	453;"	d	file:
scheme_malloc_fail_ok	if_mzsch.c	454;"	d	file:
scheme_malloc_immobile_box	if_mzsch.c	492;"	d	file:
scheme_namespace_require	if_mzsch.c	478;"	d	file:
scheme_notify_multithread	if_mzsch.c	392;"	d	file:
scheme_null	if_mzsch.c	383;"	d	file:
scheme_open_input_file	if_mzsch.c	455;"	d	file:
scheme_primitive_module	if_mzsch.c	456;"	d	file:
scheme_proper_list_length	if_mzsch.c	457;"	d	file:
scheme_raise	if_mzsch.c	458;"	d	file:
scheme_read	if_mzsch.c	459;"	d	file:
scheme_register_embedded_load	if_mzsch.c	497;"	d	file:
scheme_register_static	if_mzsch.c	460;"	d	file:
scheme_register_tls_space	if_mzsch.c	488;"	d	file:
scheme_set_collects_path	if_mzsch.c	471;"	d	file:
scheme_set_config_path	if_mzsch.c	498;"	d	file:
scheme_set_param	if_mzsch.c	465;"	d	file:
scheme_set_stack_base	if_mzsch.c	461;"	d	file:
scheme_signal_error	if_mzsch.c	462;"	d	file:
scheme_true	if_mzsch.c	384;"	d	file:
scheme_void	if_mzsch.c	382;"	d	file:
scheme_wrong_type	if_mzsch.c	463;"	d	file:
scid_T	structs.h	/^typedef int			scid_T;		\/\/ script ID$/;"	t
scl_list	syntax.c	/^    short	    *scl_list;	    \/\/ IDs in this syntax cluster$/;"	m	struct:syn_cluster_S	file:
scl_name	syntax.c	/^    char_u	    *scl_name;	    \/\/ syntax cluster name$/;"	m	struct:syn_cluster_S	file:
scl_name_u	syntax.c	/^    char_u	    *scl_name_u;    \/\/ uppercase of scl_name$/;"	m	struct:syn_cluster_S	file:
scope_S	vim9compile.c	/^struct scope_S {$/;"	s	file:
scope_T	vim9compile.c	/^typedef struct scope_S scope_T;$/;"	t	typeref:struct:scope_S	file:
scopetype_T	vim9compile.c	/^} scopetype_T;$/;"	t	typeref:enum:__anon129	file:
score	spellsuggest.c	/^    int		score;$/;"	m	struct:__anon114	file:
score_combine	spellsuggest.c	/^score_combine(suginfo_T *su)$/;"	f	file:
score_comp_sal	spellsuggest.c	/^score_comp_sal(suginfo_T *su)$/;"	f	file:
score_wordcount_adj	spellsuggest.c	/^score_wordcount_adj($/;"	f	file:
screen_Columns	globals.h	/^EXTERN int	screen_Columns INIT(= 0);   \/\/ actual size of ScreenLines[]$/;"	v
screen_Rows	globals.h	/^EXTERN int	screen_Rows INIT(= 0);	    \/\/ actual size of ScreenLines[]$/;"	v
screen_attr	screen.c	/^static int	screen_attr = 0;$/;"	v	file:
screen_callbacks	terminal.c	/^static VTermScreenCallbacks screen_callbacks = {$/;"	v	file:
screen_char	screen.c	/^screen_char(unsigned off, int row, int col)$/;"	f
screen_char_2	screen.c	/^screen_char_2(unsigned off, int row, int col)$/;"	f	file:
screen_char_attr	screen.c	/^static int screen_char_attr = 0;$/;"	v	file:
screen_cleared	globals.h	/^EXTERN int	screen_cleared INIT(= FALSE);	\/\/ screen has been cleared$/;"	v
screen_comp_differs	screen.c	/^screen_comp_differs(int off, int *u8cc)$/;"	f	file:
screen_cur_col	globals.h	/^EXTERN int	screen_cur_col INIT(= 0);$/;"	v
screen_cur_row	globals.h	/^EXTERN int	screen_cur_row INIT(= 0);$/;"	v
screen_del_lines	screen.c	/^screen_del_lines($/;"	f
screen_draw_rectangle	screen.c	/^screen_draw_rectangle($/;"	f
screen_fill	screen.c	/^screen_fill($/;"	f
screen_fill_end	screen.c	/^screen_fill_end($/;"	f	file:
screen_get_current_line_off	screen.c	/^screen_get_current_line_off()$/;"	f
screen_getbytes	screen.c	/^screen_getbytes(int row, int col, char_u *bytes, int *attrp)$/;"	f
screen_height	beval.h	/^    Dimension		screen_height;	\/\/ screen height in pixels$/;"	m	struct:BalloonEvalStruct
screen_ins_lines	screen.c	/^screen_ins_lines($/;"	f
screen_line	screen.c	/^screen_line($/;"	f
screen_putchar	screen.c	/^screen_putchar(int c, int row, int col, int attr)$/;"	f
screen_puts	screen.c	/^screen_puts($/;"	f
screen_puts_len	screen.c	/^screen_puts_len($/;"	f
screen_puts_mbyte	message.c	/^screen_puts_mbyte(char_u *s, int l, int attr)$/;"	f	file:
screen_screencol	screen.c	/^screen_screencol(void)$/;"	f
screen_screenrow	screen.c	/^screen_screenrow(void)$/;"	f
screen_search_hl	globals.h	/^EXTERN match_T	screen_search_hl; \/\/ used for 'hlsearch' highlight matching$/;"	v
screen_start	screen.c	/^screen_start(void)$/;"	f
screen_start_highlight	screen.c	/^screen_start_highlight(int attr)$/;"	f	file:
screen_stop_highlight	screen.c	/^screen_stop_highlight(void)$/;"	f
screen_valid	screen.c	/^screen_valid(int doclear)$/;"	f
screen_width	beval.h	/^    Dimension		screen_width;	\/\/ screen width in pixels$/;"	m	struct:BalloonEvalStruct
screen_zindex	globals.h	/^EXTERN int	screen_zindex INIT(= 0);$/;"	v
screenalloc	screen.c	/^screenalloc(int doclear)$/;"	f
screenclear	screen.c	/^screenclear(void)$/;"	f
screenclear2	screen.c	/^screenclear2(void)$/;"	f	file:
script	vim9.h	/^	script_T	    script;$/;"	m	union:__anon276::__anon277
script_T	vim9.h	/^} script_T;$/;"	t	typeref:struct:__anon275
script_autoload	scriptfile.c	/^script_autoload($/;"	f
script_ctx	autocmd.c	/^    sctx_T	    script_ctx;		\/\/ script context where defined$/;"	m	struct:AutoCmd	file:
script_ctx	optiondefs.h	/^    sctx_T	script_ctx;	\/\/ script context where the option was last set$/;"	m	struct:vimoption
script_do_profile	profiler.c	/^script_do_profile(scriptitem_T *si)$/;"	f
script_dump_profile	profiler.c	/^script_dump_profile(FILE *fd)$/;"	f	file:
script_get	ex_getln.c	/^script_get(exarg_T *eap, char_u *cmd)$/;"	f
script_idx	vim9.h	/^    int		script_idx;	\/\/ index in sn_var_vals$/;"	m	struct:__anon275
script_line_end	profiler.c	/^script_line_end(void)$/;"	f
script_line_exec	profiler.c	/^script_line_exec(void)$/;"	f
script_line_start	profiler.c	/^script_line_start(void)$/;"	f
script_prof_restore	profiler.c	/^script_prof_restore(proftime_T *tm)$/;"	f
script_prof_save	profiler.c	/^script_prof_save($/;"	f
script_sid	vim9.h	/^    int		script_sid;	\/\/ script ID$/;"	m	struct:__anon275
scriptin	globals.h	/^EXTERN FILE	*scriptin[NSCRIPT];	    \/\/ streams to read script from$/;"	v
scriptitem_T	structs.h	/^} scriptitem_T;$/;"	t	typeref:struct:__anon217
scriptitem_T	structs.h	/^} scriptitem_T;$/;"	t	typeref:struct:__anon222
scriptnames_slash_adjust	scriptfile.c	/^scriptnames_slash_adjust(void)$/;"	f
scriptout	globals.h	/^EXTERN FILE	*scriptout  INIT(= NULL);   \/\/ stream to write script to$/;"	v
scriptvar_T	structs.h	/^} scriptvar_T;$/;"	t	typeref:struct:__anon214
scroll	os_win32.c	/^scroll(unsigned cLines)$/;"	f	file:
scrollProc	gui_at_sb.h	/^    XtCallbackList scrollProc;	\/\/ proportional scroll$/;"	m	struct:__anon143
scroll_bg_pixel	gui.h	/^    guicolor_T	scroll_bg_pixel;	\/\/ Same in Pixel format$/;"	m	struct:Gui
scroll_cb	gui_motif.c	/^scroll_cb(Widget w UNUSED, XtPointer client_data, XtPointer call_data)$/;"	f	file:
scroll_cursor_bot	move.c	/^scroll_cursor_bot(int min_scroll, int set_topbot)$/;"	f
scroll_cursor_halfway	move.c	/^scroll_cursor_halfway(int atend)$/;"	f
scroll_cursor_top	move.c	/^scroll_cursor_top(int min_scroll, int always)$/;"	f
scroll_def_bg_pixel	gui.h	/^    guicolor_T	scroll_def_bg_pixel;  \/\/ Default scrollbar background$/;"	m	struct:Gui
scroll_def_fg_pixel	gui.h	/^    guicolor_T	scroll_def_fg_pixel;  \/\/ Default scrollbar foreground$/;"	m	struct:Gui
scroll_event	gui_gtk_x11.c	/^scroll_event(GtkWidget *widget,$/;"	f	file:
scroll_fg_pixel	gui.h	/^    guicolor_T	scroll_fg_pixel;	\/\/ Same in Pixel format$/;"	m	struct:Gui
scroll_line_len	gui.c	/^scroll_line_len(linenr_T lnum)$/;"	f	file:
scroll_mode	gui_at_sb.h	/^    char	  scroll_mode;	\/\/ see below$/;"	m	struct:__anon143
scroll_off	gui_at_sb.h	/^    float	  scroll_off;	\/\/ offset from event to top of thumb$/;"	m	struct:__anon143
scroll_redraw	normal.c	/^scroll_redraw(int up, long count)$/;"	f
scroll_region	globals.h	/^EXTERN int	scroll_region INIT(= FALSE); \/\/ term supports scroll region$/;"	v
scroll_region_bot	gui.h	/^    int		scroll_region_bot;  \/\/ Bottom (last) line of scroll region$/;"	m	struct:Gui
scroll_region_left	gui.h	/^    int		scroll_region_left;  \/\/ Left (first) column of scroll region$/;"	m	struct:Gui
scroll_region_reset	term.c	/^scroll_region_reset(void)$/;"	f
scroll_region_right	gui.h	/^    int		scroll_region_right;  \/\/ Right (last) col. of scroll region$/;"	m	struct:Gui
scroll_region_set	term.c	/^scroll_region_set(win_T *wp, int off)$/;"	f
scroll_region_top	gui.h	/^    int		scroll_region_top;  \/\/ Top (first) line of scroll region$/;"	m	struct:Gui
scroll_shift	gui.h	/^    int		scroll_shift;	\/\/ The scrollbar stuff can handle only up to$/;"	m	struct:GuiScrollbar
scroll_start	term.c	/^scroll_start(void)$/;"	f
scroll_to_fraction	window.c	/^scroll_to_fraction(win_T *wp, int prev_height)$/;"	f
scrollbar	gui_at_sb.h	/^    ScrollbarPart	scrollbar;$/;"	m	struct:_ScrollbarRec
scrollbar_T	gui.h	/^} scrollbar_T;$/;"	t	typeref:struct:GuiScrollbar
scrollbar_class	gui_at_sb.h	/^    ScrollbarClassPart		scrollbar_class;$/;"	m	struct:_ScrollbarClassRec
scrollbar_height	gui.h	/^    int		scrollbar_height;   \/\/ Height of horizontal scrollbar$/;"	m	struct:Gui
scrollbar_value	globals.h	/^EXTERN long_u	scrollbar_value;$/;"	v
scrollbar_width	gui.h	/^    int		scrollbar_width;    \/\/ Width of vertical scrollbars$/;"	m	struct:Gui
scrolldown	move.c	/^scrolldown($/;"	f
scrolldown_clamp	move.c	/^scrolldown_clamp(void)$/;"	f
scrolljump_value	move.c	/^scrolljump_value(void)$/;"	f	file:
scrollup	move.c	/^scrollup($/;"	f
scrollup_clamp	move.c	/^scrollup_clamp(void)$/;"	f
sctx	structs.h	/^	sctx_T  *sctx;      \/\/ script and modeline info$/;"	m	union:__anon225::__anon226
sctx_T	structs.h	/^} sctx_T;$/;"	t	typeref:struct:__anon180
se_for	vim9compile.c	/^	forscope_T	se_for;$/;"	m	union:scope_S::__anon130	file:
se_group	structs.h	/^    signgroup_T	 *se_group;	\/\/ sign group$/;"	m	struct:sign_entry
se_id	structs.h	/^    int		 se_id;		\/\/ unique identifier for each placed sign$/;"	m	struct:sign_entry
se_if	vim9compile.c	/^	ifscope_T	se_if;$/;"	m	union:scope_S::__anon130	file:
se_lnum	structs.h	/^    linenr_T	 se_lnum;	\/\/ line number which has this sign$/;"	m	struct:sign_entry
se_local_count	vim9compile.c	/^    int		se_local_count;	    \/\/ ctx_locals.ga_len before scope$/;"	m	struct:scope_S	file:
se_next	structs.h	/^    sign_entry_T *se_next;	\/\/ next entry in a list of signs$/;"	m	struct:sign_entry
se_outer	vim9compile.c	/^    scope_T	*se_outer;	    \/\/ scope containing this one$/;"	m	struct:scope_S	file:
se_prev	structs.h	/^    sign_entry_T *se_prev;	\/\/ previous entry -- for easy reordering$/;"	m	struct:sign_entry
se_priority	structs.h	/^    int		 se_priority;	\/\/ priority for highlighting$/;"	m	struct:sign_entry
se_try	vim9compile.c	/^	tryscope_T	se_try;$/;"	m	union:scope_S::__anon130	file:
se_type	vim9compile.c	/^    scopetype_T se_type;$/;"	m	struct:scope_S	file:
se_typenr	structs.h	/^    int		 se_typenr;	\/\/ typenr of sign$/;"	m	struct:sign_entry
se_u	regexp_bt.c	/^    } se_u;$/;"	m	struct:__anon95	typeref:union:__anon95::__anon96	file:
se_u	vim9compile.c	/^    } se_u;$/;"	m	struct:scope_S	typeref:union:scope_S::__anon130	file:
se_while	vim9compile.c	/^	whilescope_T	se_while;$/;"	m	union:scope_S::__anon130	file:
search_cmn	evalfunc.c	/^search_cmn(typval_T *argvars, pos_T *match_pos, int *flagsp)$/;"	f	file:
search_first_line	globals.h	/^EXTERN linenr_T	search_first_line INIT(= 0);	  \/\/ for :{FIRST},{last}s\/pat$/;"	v
search_for_exact_line	search.c	/^search_for_exact_line($/;"	f
search_last_line	globals.h	/^EXTERN linenr_T	search_last_line INIT(= MAXLNUM); \/\/ for :{first},{LAST}s\/pat$/;"	v
search_match_endcol	globals.h	/^EXTERN colnr_T	search_match_endcol;		\/\/ col nr of match end$/;"	v
search_match_lines	globals.h	/^EXTERN linenr_T	search_match_lines;		\/\/ lines of matched string$/;"	v
search_regcomp	search.c	/^search_regcomp($/;"	f
search_start	ex_getln.c	/^    pos_T	search_start;	\/\/ where 'incsearch' starts searching$/;"	m	struct:__anon27	file:
search_stat	search.c	/^search_stat($/;"	f	file:
searchbuf	structs.h	/^    char_u	*searchbuf;	\/\/ return: pointer to search pattern or NULL$/;"	m	struct:cmdarg_S
searchc	search.c	/^searchc(cmdarg_T *cap, int t_cmd)$/;"	f
searchcmdlen	globals.h	/^EXTERN int	searchcmdlen;		    \/\/ length of previous search cmd$/;"	v
searchit	search.c	/^searchit($/;"	f
searchit_arg_T	structs.h	/^} searchit_arg_T;$/;"	t	typeref:struct:__anon259
searchpair_cmn	evalfunc.c	/^searchpair_cmn(typval_T *argvars, pos_T *match_pos)$/;"	f	file:
searchpath	dosinst.h	/^searchpath(char *name)$/;"	f
searchpath_save	dosinst.h	/^searchpath_save(char *name)$/;"	f
secure	globals.h	/^EXTERN int	secure INIT(= FALSE);$/;"	v
seed_len	crypt.c	/^    int	    seed_len;	\/\/ length of seed, or 0 when not using salt$/;"	m	struct:__anon7	file:
seenModifyOtherKeys	globals.h	/^EXTERN int seenModifyOtherKeys INIT(= FALSE);$/;"	v
seen_b_u_curhead	undo.c	/^static int seen_b_u_curhead;$/;"	v	file:
seen_b_u_newhead	undo.c	/^static int seen_b_u_newhead;$/;"	v	file:
seen_endbrace	regexp_bt.c	/^seen_endbrace(int refnum)$/;"	f	file:
sel	gui_xmdlg.c	/^    String	sel[NONE];	\/\/ selection category$/;"	m	struct:_SharedFontSelData	file:
selFile	gui_at_fs.c	/^static Widget	selFile,$/;"	v	file:
selFileCancel	gui_at_fs.c	/^		selFileCancel,$/;"	v	file:
selFileField	gui_at_fs.c	/^		selFileField,$/;"	v	file:
selFileForm	gui_at_fs.c	/^		selFileForm,$/;"	v	file:
selFileHScroll	gui_at_fs.c	/^		selFileHScroll,$/;"	v	file:
selFileHScrolls	gui_at_fs.c	/^		selFileHScrolls[3],$/;"	v	file:
selFileLists	gui_at_fs.c	/^		selFileLists[3],$/;"	v	file:
selFileOK	gui_at_fs.c	/^		selFileOK,$/;"	v	file:
selFilePrompt	gui_at_fs.c	/^		selFilePrompt,$/;"	v	file:
selFileVScrolls	gui_at_fs.c	/^		selFileVScrolls[3];$/;"	v	file:
sel_atom	vim.h	/^    Atom	sel_atom;	\/\/ PRIMARY\/CLIPBOARD selection ID$/;"	m	struct:__anon279
select	os_unix.c	47;"	d	file:
select	os_unix.c	48;"	d	file:
selection_clear_event	gui_gtk_x11.c	/^selection_clear_event(GtkWidget		*widget UNUSED,$/;"	f	file:
selection_get_cb	gui_gtk_x11.c	/^selection_get_cb(GtkWidget	    *widget UNUSED,$/;"	f	file:
selection_received_cb	gui_gtk_x11.c	/^selection_received_cb(GtkWidget		*widget UNUSED,$/;"	f	file:
selection_targets	gui_gtk_x11.c	/^static const GtkTargetEntry selection_targets[] =$/;"	v	file:
self	if_lua.c	/^    dict_T	*self;	\/\/ selfdict$/;"	m	struct:__anon50	file:
self	if_py_both.h	/^    dict_T	*self;$/;"	m	struct:__anon158
self_test_fn	crypt.c	/^    int (* self_test_fn)();$/;"	m	struct:__anon7	file:
selfdict	structs.h	/^    dict_T	*selfdict;	\/\/ Dictionary for "self"$/;"	m	struct:__anon223
selinux_enabled	os_unix.c	/^static int selinux_enabled = -1;$/;"	v	file:
sem_id	os_beos.c	25;"	d	file:
semsg	message.c	/^semsg(const char *s, ...)$/;"	f
sendToLocalVim	main.c	/^sendToLocalVim(char_u *cmd, int asExpr, char_u **result)$/;"	f
send_common	channel.c	/^send_common($/;"	f	file:
send_keys_to_term	terminal.c	/^send_keys_to_term(term_T *term, int c, int modmask, int typed)$/;"	f
send_tabline_event	gui.c	/^send_tabline_event(int nr)$/;"	f
send_tabline_menu_event	gui.c	/^send_tabline_menu_event(int tabidx, int event)$/;"	f
sensitive	structs.h	/^    int		sensitive;	    \/\/ turn button on\/off$/;"	m	struct:VimMenu
separate_nextcmd	ex_docmd.c	/^separate_nextcmd(exarg_T *eap)$/;"	f
seq	structs.h	/^	long	   seq;$/;"	m	union:u_header::__anon185
seq	structs.h	/^	long	   seq;$/;"	m	union:u_header::__anon186
seq	structs.h	/^	long	   seq;$/;"	m	union:u_header::__anon187
seq	structs.h	/^	long	   seq;$/;"	m	union:u_header::__anon188
serial	if_xcmdsrv.c	/^    int	    serial;	\/\/ Serial number expected in result.$/;"	m	struct:PendingCommand	file:
serialize_header	undo.c	/^serialize_header(bufinfo_T *bi, char_u *hash)$/;"	f	file:
serialize_pos	undo.c	/^serialize_pos(bufinfo_T *bi, pos_T pos)$/;"	f	file:
serialize_uep	undo.c	/^serialize_uep($/;"	f	file:
serialize_uhp	undo.c	/^serialize_uhp(bufinfo_T *bi, u_header_T *uhp)$/;"	f	file:
serialize_visualinfo	undo.c	/^serialize_visualinfo(bufinfo_T *bi, visualinfo_T *info)$/;"	f	file:
server	os_mswin.c	/^    HWND	server;		\/\/ server window$/;"	m	struct:__anon74	file:
serverArg	structs.h	/^    int		serverArg;		\/\/ TRUE when argument for a server$/;"	m	struct:__anon252
serverChangeRegisteredWindow	if_xcmdsrv.c	/^serverChangeRegisteredWindow($/;"	f
serverConvert	main.c	/^serverConvert($/;"	f
serverDelayedStartName	globals.h	/^EXTERN char_u	*serverDelayedStartName INIT(= NULL);$/;"	v
serverEventProc	if_xcmdsrv.c	/^serverEventProc($/;"	f
serverForeground	os_mswin.c	/^serverForeground(char_u *name)$/;"	f
serverGetReply	os_mswin.c	/^serverGetReply(HWND server, int *expr_res, int remove, int wait, int timeout)$/;"	f
serverGetVimNames	if_xcmdsrv.c	/^serverGetVimNames(Display *dpy)$/;"	f
serverGetVimNames	os_mswin.c	/^serverGetVimNames(void)$/;"	f
serverInitMessaging	os_mswin.c	/^serverInitMessaging(void)$/;"	f
serverMakeName	main.c	/^serverMakeName(char_u *arg, char *cmd)$/;"	f	file:
serverName	globals.h	/^EXTERN char_u	*serverName INIT(= NULL);	\/\/ name of the server$/;"	v
serverName_arg	structs.h	/^    char_u	*serverName_arg;	\/\/ cmdline arg for server name$/;"	m	struct:__anon252
serverPeekReply	if_xcmdsrv.c	/^serverPeekReply(Display *dpy, Window win, char_u **str)$/;"	f
serverProcessPendingMessages	os_mswin.c	/^serverProcessPendingMessages(void)$/;"	f
serverReadReply	if_xcmdsrv.c	/^serverReadReply($/;"	f
serverRegisterName	if_xcmdsrv.c	/^serverRegisterName($/;"	f
serverReply	if_xcmdsrv.c	/^static garray_T serverReply = { 0, 0, 0, 0, 0 };$/;"	v	file:
serverSendEnc	os_mswin.c	/^serverSendEnc(HWND target)$/;"	f	file:
serverSendReply	if_xcmdsrv.c	/^serverSendReply(char_u *name, char_u *str)$/;"	f
serverSendReply	os_mswin.c	/^serverSendReply($/;"	f
serverSendToVim	if_xcmdsrv.c	/^serverSendToVim($/;"	f
serverSendToVim	os_mswin.c	/^serverSendToVim($/;"	f
serverSetName	os_mswin.c	/^serverSetName(char_u *name)$/;"	f
serverStr	structs.h	/^    char_u	*serverStr;		\/\/ remote server command$/;"	m	struct:__anon252
serverStrEnc	structs.h	/^    char_u	*serverStrEnc;		\/\/ encoding of serverStr$/;"	m	struct:__anon252
serverStrToWin	if_xcmdsrv.c	/^serverStrToWin(char_u *str)$/;"	f
server_id	os_mswin.c	/^struct server_id$/;"	s	file:
server_parse_message	if_xcmdsrv.c	/^server_parse_message($/;"	f	file:
server_parse_messages	if_xcmdsrv.c	/^server_parse_messages(void)$/;"	f
server_to_input_buf	main.c	/^server_to_input_buf(char_u *str)$/;"	f
server_waiting	if_xcmdsrv.c	/^server_waiting(void)$/;"	f
servername	structs.h	/^    char_u	*servername;		\/\/ allocated name for our server$/;"	m	struct:__anon252
ses_arglist	session.c	/^ses_arglist($/;"	f	file:
ses_do_frame	session.c	/^ses_do_frame(frame_T *fr)$/;"	f	file:
ses_do_win	session.c	/^ses_do_win(win_T *wp)$/;"	f	file:
ses_fname	session.c	/^ses_fname(FILE *fd, buf_T *buf, unsigned *flagp, int add_eol)$/;"	f	file:
ses_put_fname	session.c	/^ses_put_fname(FILE *fd, char_u *name, unsigned *flagp)$/;"	f	file:
ses_skipframe	session.c	/^ses_skipframe(frame_T *fr)$/;"	f	file:
ses_win_rec	session.c	/^ses_win_rec(FILE *fd, frame_T *fr)$/;"	f	file:
ses_winsizes	session.c	/^ses_winsizes($/;"	f	file:
sesave	regexp_bt.c	/^	save_se_T  sesave;$/;"	m	union:regitem_S::__anon97	file:
setFoldRepeat	fold.c	/^setFoldRepeat(linenr_T lnum, long count, int do_open)$/;"	f	file:
setManualFold	fold.c	/^setManualFold($/;"	f	file:
setManualFoldWin	fold.c	/^setManualFoldWin($/;"	f	file:
setSmallMaybe	fold.c	/^setSmallMaybe(garray_T *gap)$/;"	f	file:
set_alist_count	os_win32.c	/^set_alist_count(void)$/;"	f
set_ansi_colors_list	terminal.c	/^set_ansi_colors_list(VTerm *vterm, list_T *list)$/;"	f	file:
set_arglist	arglist.c	/^set_arglist(char_u *str)$/;"	f
set_argv_var	evalvars.c	/^set_argv_var(char **argv, int argc)$/;"	f
set_b0_dir_flag	memline.c	/^set_b0_dir_flag(ZERO_BL *b0p, buf_T *buf)$/;"	f	file:
set_b0_fname	memline.c	/^set_b0_fname(ZERO_BL *b0p, buf_T *buf)$/;"	f	file:
set_bat_text	dosinst.c	/^set_bat_text(int idx, char *batpath, char *name)$/;"	f	file:
set_bool_option	option.c	/^set_bool_option($/;"	f	file:
set_buffer_line	if_mzsch.c	/^set_buffer_line(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
set_buffer_line	if_ruby.c	/^set_buffer_line(buf_T *buf, linenr_T n, VALUE str)$/;"	f	file:
set_buffer_line_list	if_mzsch.c	/^set_buffer_line_list(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
set_buffer_lines	evalbuffer.c	/^set_buffer_lines($/;"	f	file:
set_buflisted	buffer.c	/^set_buflisted(int on)$/;"	f
set_bufref	buffer.c	/^set_bufref(bufref_T *bufref, buf_T *buf)$/;"	f
set_cairo_source_rgba_from_color	gui_gtk_x11.c	/^set_cairo_source_rgba_from_color(cairo_t *cr, guicolor_T color)$/;"	f	file:
set_callback	evalvars.c	/^set_callback(callback_T *dest, callback_T *src)$/;"	f
set_can_cindent	edit.c	/^set_can_cindent(int val)$/;"	f
set_chars_option	screen.c	/^set_chars_option(char_u **varp)$/;"	f
set_child_environment	os_unix.c	/^set_child_environment($/;"	f	file:
set_cmd_context	cmdexpand.c	/^set_cmd_context($/;"	f
set_cmdarg	evalvars.c	/^set_cmdarg(exarg_T *eap, char_u *oldarg)$/;"	f
set_cmdline_pos	ex_getln.c	/^set_cmdline_pos($/;"	f	file:
set_cmdspos	ex_getln.c	/^set_cmdspos(void)$/;"	f	file:
set_cmdspos_cursor	ex_getln.c	/^set_cmdspos_cursor(void)$/;"	f	file:
set_color_count	term.c	/^set_color_count(int nr)$/;"	f	file:
set_completion	insexpand.c	/^set_completion(colnr_T startcol, list_T *list)$/;"	f	file:
set_console_color_rgb	os_win32.c	/^set_console_color_rgb(void)$/;"	f	file:
set_context_for_expression	eval.c	/^set_context_for_expression($/;"	f
set_context_in_autocmd	autocmd.c	/^set_context_in_autocmd($/;"	f
set_context_in_cscope_cmd	if_cscope.c	/^set_context_in_cscope_cmd($/;"	f
set_context_in_echohl_cmd	syntax.c	/^set_context_in_echohl_cmd(expand_T *xp, char_u *arg)$/;"	f
set_context_in_highlight_cmd	highlight.c	/^set_context_in_highlight_cmd(expand_T *xp, char_u *arg)$/;"	f
set_context_in_map_cmd	map.c	/^set_context_in_map_cmd($/;"	f
set_context_in_menu_cmd	menu.c	/^set_context_in_menu_cmd($/;"	f
set_context_in_profile_cmd	profiler.c	/^set_context_in_profile_cmd(expand_T *xp, char_u *arg)$/;"	f
set_context_in_set_cmd	option.c	/^set_context_in_set_cmd($/;"	f
set_context_in_sign_cmd	sign.c	/^set_context_in_sign_cmd(expand_T *xp, char_u *arg)$/;"	f
set_context_in_syntax_cmd	syntax.c	/^set_context_in_syntax_cmd(expand_T *xp, char_u *arg)$/;"	f
set_context_in_user_cmd	usercmd.c	/^set_context_in_user_cmd(expand_T *xp, char_u *arg_in)$/;"	f
set_csearch_direction	search.c	/^set_csearch_direction(int cdir)$/;"	f
set_csearch_until	search.c	/^set_csearch_until(int t_cmd)$/;"	f
set_curbuf	buffer.c	/^set_curbuf(buf_T *buf, int action)$/;"	f
set_current_line	if_ruby.c	/^set_current_line(VALUE self UNUSED, VALUE str)$/;"	f	file:
set_cursor	if_mzsch.c	/^set_cursor(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
set_cursor_for_append_to_line	normal.c	/^set_cursor_for_append_to_line(void)$/;"	f
set_default_child_environment	os_unix.c	/^set_default_child_environment(int is_terminal)$/;"	f	file:
set_diff_option	diff.c	/^set_diff_option(win_T *wp, int value)$/;"	f	file:
set_directories_text	dosinst.c	/^set_directories_text(int idx)$/;"	f	file:
set_dirty_snapshot	terminal.c	/^set_dirty_snapshot(term_T *term)$/;"	f	file:
set_empty_rows	move.c	/^set_empty_rows(win_T *wp, int used)$/;"	f
set_errorlist	quickfix.c	/^set_errorlist($/;"	f
set_execreg_lastc	register.c	/^set_execreg_lastc(int lastc)$/;"	f
set_expand_context	cmdexpand.c	/^set_expand_context(expand_T *xp)$/;"	f	file:
set_expr_line	register.c	/^set_expr_line(char_u *new_line)$/;"	f
set_file_options	fileio.c	/^set_file_options(int set_options, exarg_T *eap)$/;"	f
set_file_time	bufwrite.c	/^set_file_time($/;"	f	file:
set_fileformat	misc2.c	/^set_fileformat($/;"	f
set_fontlist	gui_motif.c	/^set_fontlist(Widget id)$/;"	f	file:
set_forced_fenc	fileio.c	/^set_forced_fenc(exarg_T *eap)$/;"	f
set_fraction	window.c	/^set_fraction(win_T *wp)$/;"	f
set_group_colors	highlight.c	/^set_group_colors($/;"	f	file:
set_guifontwide	gui.c	/^set_guifontwide(char_u *name)$/;"	f	file:
set_helplang_default	option.c	/^set_helplang_default(char_u *lang)$/;"	f
set_histentry	cmdhist.c	/^set_histentry(int hist_type, histentry_T *entry)$/;"	f
set_hl_attr	highlight.c	/^set_hl_attr($/;"	f	file:
set_iminsert_global	option.c	/^set_iminsert_global(void)$/;"	f
set_imsearch_global	option.c	/^set_imsearch_global(void)$/;"	f
set_indent	indent.c	/^set_indent($/;"	f
set_init_1	option.c	/^set_init_1(int clean_arg)$/;"	f
set_init_2	option.c	/^set_init_2(void)$/;"	f
set_init_3	option.c	/^set_init_3(void)$/;"	f
set_input_buf	ui.c	/^set_input_buf(char_u *p)$/;"	f
set_internal_string_var	evalvars.c	/^set_internal_string_var(char_u *name, char_u *value)$/;"	f
set_keep_msg	message.c	/^set_keep_msg(char_u *s, int attr)$/;"	f
set_keep_msg_from_hist	message.c	/^set_keep_msg_from_hist(void)$/;"	f
set_label	gui_motif.c	/^set_label(Widget w, char *label)$/;"	f	file:
set_lang_var	ex_cmds2.c	/^set_lang_var(void)$/;"	f
set_last_csearch	search.c	/^set_last_csearch(int c, char_u *s UNUSED, int len UNUSED)$/;"	f
set_last_cursor	mark.c	/^set_last_cursor(win_T *win)$/;"	f
set_last_insert	edit.c	/^set_last_insert(int c)$/;"	f
set_last_search_pat	search.c	/^set_last_search_pat($/;"	f
set_local_options_default	option.c	/^set_local_options_default(win_T *wp, int do_buffer)$/;"	f
set_map_str	spellfile.c	/^set_map_str(slang_T *lp, char_u *map)$/;"	f	file:
set_mouse_termcode	mouse.c	/^set_mouse_termcode($/;"	f
set_mouse_topline	term.c	/^set_mouse_topline(win_T *wp)$/;"	f
set_mousemoved_columns	popupwin.c	/^set_mousemoved_columns(win_T *wp, int flags)$/;"	f	file:
set_mousemoved_values	popupwin.c	/^set_mousemoved_values(win_T *wp)$/;"	f	file:
set_moved_columns	popupwin.c	/^set_moved_columns(win_T *wp, int flags)$/;"	f	file:
set_moved_values	popupwin.c	/^set_moved_values(win_T *wp)$/;"	f	file:
set_no_hlsearch	ex_docmd.c	/^set_no_hlsearch(int flag)$/;"	f
set_normal_colors	highlight.c	/^set_normal_colors(void)$/;"	f
set_num_option	option.c	/^set_num_option($/;"	f	file:
set_number_default	option.c	/^set_number_default(char *name, long val)$/;"	f
set_old_sub	ex_cmds.c	/^set_old_sub(char_u *val)$/;"	f
set_one_cmd_context	cmdexpand.c	/^set_one_cmd_context($/;"	f	file:
set_op_var	normal.c	/^set_op_var(int optype)$/;"	f	file:
set_option	if_mzsch.c	/^set_option(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
set_option_default	option.c	/^set_option_default($/;"	f	file:
set_option_flag	option.c	/^set_option_flag(int opt_idx, long_u flag)$/;"	f
set_option_sctx_idx	option.c	/^set_option_sctx_idx(int opt_idx, int opt_flags, sctx_T script_ctx)$/;"	f
set_option_value	option.c	/^set_option_value($/;"	f
set_option_value_err	if_py_both.h	/^set_option_value_err(char_u *key, int numval, char_u *stringval, int opt_flags)$/;"	f
set_option_value_for	if_py_both.h	/^set_option_value_for($/;"	f
set_options_bin	option.c	/^set_options_bin($/;"	f
set_options_default	option.c	/^set_options_default($/;"	f	file:
set_padding_border	popupwin.c	/^set_padding_border(dict_T *dict, int *array, char *name, int max_val)$/;"	f	file:
set_partial	if_py_both.h	/^set_partial(FunctionObject *self, partial_T *pt, int exported)$/;"	f
set_pixel	gui_w32.c	/^set_pixel($/;"	f	file:
set_pixmap	gui_xmebw.c	/^set_pixmap(XmEnhancedButtonWidget eb)$/;"	f	file:
set_predefined_fontlist	gui_motif.c	/^set_predefined_fontlist(Widget parent, String name)$/;"	f	file:
set_predefined_label	gui_motif.c	/^set_predefined_label(Widget parent, String name, char *new_label)$/;"	f	file:
set_pressedreturn	ex_docmd.c	/^set_pressedreturn(int val)$/;"	f
set_printable_label_text	gui_beval.c	/^set_printable_label_text(GtkLabel *label, char_u *text)$/;"	f	file:
set_progpath	main.c	/^set_progpath(char_u *argv0)$/;"	f	file:
set_qf_ll_list	quickfix.c	/^set_qf_ll_list($/;"	f	file:
set_ref_in_buffers	evalbuffer.c	/^set_ref_in_buffers(int copyID)$/;"	f
set_ref_in_call_stack	userfunc.c	/^set_ref_in_call_stack(int copyID)$/;"	f
set_ref_in_channel	channel.c	/^set_ref_in_channel(int copyID)$/;"	f
set_ref_in_dict	eval.c	/^set_ref_in_dict(dict_T *d, int copyID)$/;"	f
set_ref_in_func	userfunc.c	/^set_ref_in_func(char_u *name, ufunc_T *fp_in, int copyID)$/;"	f
set_ref_in_func_args	userfunc.c	/^set_ref_in_func_args(int copyID)$/;"	f
set_ref_in_funccal	userfunc.c	/^set_ref_in_funccal(funccall_T *fc, int copyID)$/;"	f	file:
set_ref_in_functions	userfunc.c	/^set_ref_in_functions(int copyID)$/;"	f
set_ref_in_ht	eval.c	/^set_ref_in_ht(hashtab_T *ht, int copyID, list_stack_T **list_stack)$/;"	f
set_ref_in_item	eval.c	/^set_ref_in_item($/;"	f
set_ref_in_job	channel.c	/^set_ref_in_job(int copyID)$/;"	f
set_ref_in_list	eval.c	/^set_ref_in_list(list_T *ll, int copyID)$/;"	f
set_ref_in_list_items	eval.c	/^set_ref_in_list_items(list_T *l, int copyID, ht_stack_T **ht_stack)$/;"	f
set_ref_in_lua	if_lua.c	/^set_ref_in_lua(int copyID)$/;"	f
set_ref_in_nb_channel	netbeans.c	/^set_ref_in_nb_channel(int copyID)$/;"	f
set_ref_in_one_popup	popupwin.c	/^set_ref_in_one_popup(win_T *wp, int copyID)$/;"	f	file:
set_ref_in_popups	popupwin.c	/^set_ref_in_popups(int copyID)$/;"	f
set_ref_in_previous_funccal	userfunc.c	/^set_ref_in_previous_funccal(int copyID)$/;"	f
set_ref_in_py	if_py_both.h	/^set_ref_in_py(const int copyID)$/;"	f
set_ref_in_python	if_python.c	/^set_ref_in_python(int copyID)$/;"	f
set_ref_in_python3	if_python3.c	/^set_ref_in_python3(int copyID)$/;"	f
set_ref_in_quickfix	quickfix.c	/^set_ref_in_quickfix(int copyID)$/;"	f
set_ref_in_term	terminal.c	/^set_ref_in_term(int copyID)$/;"	f
set_ref_in_timer	time.c	/^set_ref_in_timer(int copyID)$/;"	f
set_reg_var	evalvars.c	/^set_reg_var(int c)$/;"	f
set_rw_fname	fileio.c	/^set_rw_fname(char_u *fname, char_u *sfname)$/;"	f
set_sal_first	spellfile.c	/^set_sal_first(slang_T *lp)$/;"	f	file:
set_scroll_region	os_win32.c	/^set_scroll_region($/;"	f	file:
set_scroll_region_lr	os_win32.c	/^set_scroll_region_lr($/;"	f	file:
set_scroll_region_tb	os_win32.c	/^set_scroll_region_tb($/;"	f	file:
set_search_direction	search.c	/^set_search_direction(int cdir)$/;"	f
set_search_match	ex_getln.c	/^set_search_match(pos_T *t)$/;"	f	file:
set_shellsize	term.c	/^set_shellsize(int width, int height, int mustset)$/;"	f
set_signals	os_unix.c	/^set_signals(void)$/;"	f	file:
set_size	gui_xmebw.c	/^set_size(XmEnhancedButtonWidget newtb)$/;"	f	file:
set_sofo	spellfile.c	/^set_sofo(slang_T *lp, char_u *from, char_u *to)$/;"	f	file:
set_spell_charflags	spellfile.c	/^set_spell_charflags($/;"	f	file:
set_spell_chartab	spellfile.c	/^set_spell_chartab(char_u *fol, char_u *low, char_u *upp)$/;"	f	file:
set_spell_finish	spellfile.c	/^set_spell_finish(spelltab_T *new_st)$/;"	f	file:
set_string_copy	if_py_both.h	/^set_string_copy(char_u *str, typval_T *tv)$/;"	f
set_string_default	option.c	/^set_string_default(char *name, char_u *val)$/;"	f
set_string_default_esc	option.c	/^set_string_default_esc(char *name, char_u *val, int escape)$/;"	f	file:
set_string_option	optionstr.c	/^set_string_option($/;"	f
set_string_option_direct	optionstr.c	/^set_string_option_direct($/;"	f
set_string_option_direct_in_buf	optionstr.c	/^set_string_option_direct_in_buf($/;"	f
set_string_option_direct_in_win	optionstr.c	/^set_string_option_direct_in_win($/;"	f
set_string_option_global	optionstr.c	/^set_string_option_global($/;"	f	file:
set_tabline_font	gui_w32.c	/^set_tabline_font(void)$/;"	f	file:
set_tagstack	tag.c	/^set_tagstack(win_T *wp, dict_T *d, int action)$/;"	f
set_term_and_win_size	terminal.c	/^set_term_and_win_size(term_T *term)$/;"	f	file:
set_term_defaults	option.c	/^set_term_defaults(void)$/;"	f
set_term_option_alloced	option.c	/^set_term_option_alloced(char_u **p)$/;"	f
set_term_option_sctx_idx	option.c	/^set_term_option_sctx_idx(char *name, int opt_idx)$/;"	f
set_terminal_default_colors	terminal.c	/^set_terminal_default_colors(int cterm_fg, int cterm_bg)$/;"	f
set_terminal_mode	terminal.c	/^set_terminal_mode(term_T *term, int normal_mode)$/;"	f	file:
set_termname	term.c	/^set_termname(char_u *term)$/;"	f
set_text_props	textprop.c	/^set_text_props(linenr_T lnum, char_u *props, int len)$/;"	f	file:
set_title_defaults	option.c	/^set_title_defaults(void)$/;"	f
set_toolbar_style	gui_gtk_x11.c	/^set_toolbar_style(GtkToolbar *toolbar)$/;"	f	file:
set_topline	move.c	/^set_topline(win_T *wp, linenr_T lnum)$/;"	f
set_tty	os_vms.c	/^set_tty(int row, int col)$/;"	f	file:
set_ufunc_name	userfunc.c	/^set_ufunc_name(ufunc_T *fp, char_u *name)$/;"	f	file:
set_var	evalvars.c	/^set_var($/;"	f
set_var_const	evalvars.c	/^set_var_const($/;"	f
set_var_lval	eval.c	/^set_var_lval($/;"	f
set_vcount	evalvars.c	/^set_vcount($/;"	f
set_vcount_ca	normal.c	/^set_vcount_ca(cmdarg_T *cap, int *set_prevcount)$/;"	f	file:
set_vim_var_char	evalvars.c	/^set_vim_var_char(int c)$/;"	f
set_vim_var_dict	evalvars.c	/^set_vim_var_dict(int idx, dict_T *val)$/;"	f
set_vim_var_list	evalvars.c	/^set_vim_var_list(int idx, list_T *val)$/;"	f
set_vim_var_nr	evalvars.c	/^set_vim_var_nr(int idx, varnumber_T val)$/;"	f
set_vim_var_string	evalvars.c	/^set_vim_var_string($/;"	f
set_vim_var_tv	evalvars.c	/^set_vim_var_tv(int idx, typval_T *tv)$/;"	f
set_vim_var_type	evalvars.c	/^set_vim_var_type(int idx, vartype_T type)$/;"	f
set_vterm_palette	terminal.c	/^set_vterm_palette(VTerm *vterm, long_u *rgb)$/;"	f	file:
set_vv_searchforward	search.c	/^set_vv_searchforward(void)$/;"	f	file:
set_window_height	if_mzsch.c	/^set_window_height(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
set_window_title	gui_w32.c	/^set_window_title(HWND hwnd, char *title)$/;"	f	file:
set_window_width	if_mzsch.c	/^set_window_width(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
set_x11_icon	os_unix.c	/^set_x11_icon(char_u *icon)$/;"	f	file:
set_x11_title	os_unix.c	/^set_x11_title(char_u *title)$/;"	f	file:
set_y_previous	register.c	/^set_y_previous(yankreg_T *yreg)$/;"	f
setaltfname	buffer.c	/^setaltfname($/;"	f
setcursor	screen.c	/^setcursor(void)$/;"	f
setcursor_mayforce	screen.c	/^setcursor_mayforce(int force)$/;"	f
setfname	buffer.c	/^setfname($/;"	f
setmark	mark.c	/^setmark(int c)$/;"	f
setmark_pos	mark.c	/^setmark_pos(int c, pos_T *pos, int fnum)$/;"	f
setmouse	mouse.c	/^setmouse(void)$/;"	f
setpcmark	mark.c	/^setpcmark(void)$/;"	f
settmode	term.c	/^settmode(int tmode)$/;"	f
setup_choices	dosinst.c	/^setup_choices(void)$/;"	f	file:
setup_fileid_api	iscygpty.c	/^static void setup_fileid_api(void)$/;"	f	file:
setup_fileid_api	iscygpty.c	100;"	d	file:
setup_job_options	terminal.c	/^setup_job_options(jobopt_T *opt, int rows, int cols)$/;"	f	file:
setup_save_yourself	gui_gtk_x11.c	/^setup_save_yourself(void)$/;"	f	file:
setup_slavepty	pty.c	/^setup_slavepty(int fd)$/;"	f
setup_term_clip	os_unix.c	/^setup_term_clip(void)$/;"	f
setup_timer	if_mzsch.c	/^setup_timer(void)$/;"	f	file:
setup_zero_width_cluster	gui_gtk_x11.c	/^setup_zero_width_cluster(PangoItem *item, PangoGlyphInfo *glyph,$/;"	f	file:
setwinvar	evalvars.c	/^setwinvar(typval_T *argvars, int off)$/;"	f	file:
sfdcnewvim	if_perlsfio.c	/^sfdcnewvim(void)$/;"	f
sfname	autocmd.c	/^    char_u	*sfname;	\/\/ sfname to match with$/;"	m	struct:AutoPatCmd_S	file:
sft_score	spellsuggest.c	/^    short	sft_score;	\/\/ lowest score used$/;"	m	struct:__anon113	file:
sft_word	spellsuggest.c	/^    char_u	sft_word[1];    \/\/ soundfolded word, actually longer$/;"	m	struct:__anon113	file:
sftword_T	spellsuggest.c	/^} sftword_T;$/;"	t	typeref:struct:__anon113	file:
sfvimwrite	if_perlsfio.c	/^sfvimwrite($/;"	f	file:
sg_cleared	highlight.c	/^    int		sg_cleared;	\/\/ "hi clear" was used$/;"	m	struct:__anon48	file:
sg_cterm	highlight.c	/^    int		sg_cterm;	\/\/ "cterm=" highlighting attr$/;"	m	struct:__anon48	file:
sg_cterm_attr	highlight.c	/^    int		sg_cterm_attr;	\/\/ Screen attr for color term mode$/;"	m	struct:__anon48	file:
sg_cterm_bg	highlight.c	/^    int		sg_cterm_bg;	\/\/ terminal bg color number + 1$/;"	m	struct:__anon48	file:
sg_cterm_bold	highlight.c	/^    int		sg_cterm_bold;	\/\/ bold attr was set for light color$/;"	m	struct:__anon48	file:
sg_cterm_fg	highlight.c	/^    int		sg_cterm_fg;	\/\/ terminal fg color number + 1$/;"	m	struct:__anon48	file:
sg_font	highlight.c	/^    GuiFont	sg_font;	\/\/ GUI font handle$/;"	m	struct:__anon48	file:
sg_font_name	highlight.c	/^    char_u	*sg_font_name;  \/\/ GUI font or fontset name$/;"	m	struct:__anon48	file:
sg_fontset	highlight.c	/^    GuiFontset	sg_fontset;	\/\/ GUI fontset handle$/;"	m	struct:__anon48	file:
sg_gui	highlight.c	/^    int		sg_gui;		\/\/ "gui=" highlighting attributes$/;"	m	struct:__anon48	file:
sg_gui_attr	highlight.c	/^    int		sg_gui_attr;    \/\/ Screen attr for GUI mode$/;"	m	struct:__anon48	file:
sg_gui_bg	highlight.c	/^    guicolor_T	sg_gui_bg;	\/\/ GUI background color handle$/;"	m	struct:__anon48	file:
sg_gui_bg_name	highlight.c	/^    char_u	*sg_gui_bg_name;\/\/ GUI background color name$/;"	m	struct:__anon48	file:
sg_gui_fg	highlight.c	/^    guicolor_T	sg_gui_fg;	\/\/ GUI foreground color handle$/;"	m	struct:__anon48	file:
sg_gui_fg_name	highlight.c	/^    char_u	*sg_gui_fg_name;\/\/ GUI foreground color name$/;"	m	struct:__anon48	file:
sg_gui_sp	highlight.c	/^    guicolor_T	sg_gui_sp;	\/\/ GUI special color handle$/;"	m	struct:__anon48	file:
sg_gui_sp_name	highlight.c	/^    char_u	*sg_gui_sp_name;\/\/ GUI special color name$/;"	m	struct:__anon48	file:
sg_link	highlight.c	/^    int		sg_link;	\/\/ link to this highlight group ID$/;"	m	struct:__anon48	file:
sg_name	highlight.c	/^    char_u	*sg_name;	\/\/ highlight group name$/;"	m	struct:__anon48	file:
sg_name	structs.h	/^    char_u	sg_name[1];		\/\/ sign group name, actually longer$/;"	m	struct:signgroup_S
sg_name_u	highlight.c	/^    char_u	*sg_name_u;	\/\/ uppercase of sg_name$/;"	m	struct:__anon48	file:
sg_next_sign_id	structs.h	/^    int		sg_next_sign_id;	\/\/ next sign id for this group$/;"	m	struct:signgroup_S
sg_refcount	structs.h	/^    short_u	sg_refcount;		\/\/ number of signs in this group$/;"	m	struct:signgroup_S
sg_script_ctx	highlight.c	/^    sctx_T	sg_script_ctx;	\/\/ script in which the group was last set$/;"	m	struct:__anon48	file:
sg_set	highlight.c	/^    int		sg_set;		\/\/ combination of SG_* flags$/;"	m	struct:__anon48	file:
sg_start	highlight.c	/^    char_u	*sg_start;	\/\/ terminal string for start highl$/;"	m	struct:__anon48	file:
sg_stop	highlight.c	/^    char_u	*sg_stop;	\/\/ terminal string for stop highl$/;"	m	struct:__anon48	file:
sg_table	sign.c	/^static hashtab_T	sg_table;	\/\/ sign group (signgroup_T) hashtable$/;"	v	file:
sg_term	highlight.c	/^    int		sg_term;	\/\/ "term=" highlighting attributes$/;"	m	struct:__anon48	file:
sg_term_attr	highlight.c	/^    int		sg_term_attr;	\/\/ Screen attr for term mode$/;"	m	struct:__anon48	file:
sha256_bytes	sha256.c	/^sha256_bytes($/;"	f
sha256_finish	sha256.c	/^sha256_finish(context_sha256_T *ctx, char_u digest[32])$/;"	f
sha256_key	sha256.c	/^sha256_key($/;"	f
sha256_padding	sha256.c	/^static char_u sha256_padding[64] = {$/;"	v	file:
sha256_process	sha256.c	/^sha256_process(context_sha256_T *ctx, char_u data[64])$/;"	f	file:
sha256_self_test	sha256.c	/^sha256_self_test(void)$/;"	f
sha256_start	sha256.c	/^sha256_start(context_sha256_T *ctx)$/;"	f
sha256_update	sha256.c	/^sha256_update(context_sha256_T *ctx, char_u *input, UINT32_T length)$/;"	f
sha2_seed	sha256.c	/^sha2_seed($/;"	f
sha_self_test_msg	sha256.c	/^static char *sha_self_test_msg[] = {$/;"	v	file:
sha_self_test_vector	sha256.c	/^static char *sha_self_test_vector[] = {$/;"	v	file:
shadow_width	gui_at_sb.h	/^    Dimension	shadow_width;$/;"	m	struct:__anon143
shape	structs.h	/^    int		shape;		\/\/ one of the SHAPE_ defines$/;"	m	struct:cursor_entry
shape_table	misc2.c	/^cursorentry_T shape_table[SHAPE_IDX_COUNT] =$/;"	v
shellRectangle	gui_x11.c	/^shellRectangle(Widget shell, XRectangle *r)$/;"	f	file:
shellWidgetClass	gui_gtk_vms.h	670;"	d
shell_created	gui.h	/^    int		shell_created;	    \/\/ Has the shell been created yet?$/;"	m	struct:Gui
shell_new_columns	window.c	/^shell_new_columns(void)$/;"	f
shell_new_rows	window.c	/^shell_new_rows(void)$/;"	f
shell_resized	term.c	/^shell_resized(void)$/;"	f
shell_resized_check	term.c	/^shell_resized_check(void)$/;"	f
shift_block	ops.c	/^shift_block(oparg_T *oap, int amount)$/;"	f	file:
shift_delete_registers	register.c	/^shift_delete_registers()$/;"	f
shift_line	ops.c	/^shift_line($/;"	f
short_u	structs.h	/^typedef unsigned short	short_u;$/;"	t
short_u	vim.h	/^typedef unsigned short	short_u;$/;"	t
shorten_buf_fname	fileio.c	/^shorten_buf_fname(buf_T *buf, char_u *dirname, int force)$/;"	f
shorten_dir	filepath.c	/^shorten_dir(char_u *str)$/;"	f
shorten_filenames	fileio.c	/^shorten_filenames(char_u **fnames, int count)$/;"	f
shorten_fname	fileio.c	/^shorten_fname(char_u *full_path, char_u *dir_name)$/;"	f
shorten_fname1	fileio.c	/^shorten_fname1(char_u *full_path)$/;"	f
shorten_fnames	fileio.c	/^shorten_fnames(int force)$/;"	f
shortmess	option.c	/^shortmess(int x)$/;"	f
shortname	optiondefs.h	/^    char	*shortname;	\/\/ permissible abbreviation$/;"	m	struct:vimoption
shortname	usercmd.c	/^    char	*shortname;$/;"	m	struct:__anon124	file:
shortpath_for_invalid_fname	filepath.c	/^shortpath_for_invalid_fname($/;"	f	file:
shortpath_for_partial	filepath.c	/^shortpath_for_partial($/;"	f	file:
should_abort	ex_eval.c	/^should_abort(int retcode)$/;"	f
showState	beval.h	/^    BeState		showState;	\/\/ tells us what's currently going on$/;"	m	struct:BalloonEvalStruct
show_autocmd	autocmd.c	/^show_autocmd(AutoPat *ap, event_T event)$/;"	f	file:
show_help	dosinst.c	/^show_help(void)$/;"	f	file:
show_menus	menu.c	/^show_menus(char_u *path_name, int modes)$/;"	f	file:
show_menus_recursive	menu.c	/^show_menus_recursive(vimmenu_T *menu, int modes, int depth)$/;"	f	file:
show_one_mark	mark.c	/^show_one_mark($/;"	f	file:
show_one_termcode	term.c	/^show_one_termcode(char_u *name, char_u *code, int printit)$/;"	f
show_pat_in_path	search.c	/^show_pat_in_path($/;"	f	file:
show_popupmenu	menu.c	/^show_popupmenu(void)$/;"	f
show_pum	insexpand.c	/^show_pum(int prev_w_wrow, int prev_w_leftcol)$/;"	f	file:
show_sb_text	message.c	/^show_sb_text(void)$/;"	f
show_shell_mess	os_unix.c	/^static int	show_shell_mess = TRUE;$/;"	v	file:
show_tabline_popup_menu	gui_w32.c	/^show_tabline_popup_menu(void)$/;"	f	file:
show_termcodes	term.c	/^show_termcodes(void)$/;"	f
show_utf8	mbyte.c	/^show_utf8(void)$/;"	f
showcmd_buf	normal.c	/^static char_u	showcmd_buf[SHOWCMD_BUFLEN];$/;"	v	file:
showcmd_is_clear	normal.c	/^static int	showcmd_is_clear = TRUE;$/;"	v	file:
showcmd_visual	normal.c	/^static int	showcmd_visual = FALSE;$/;"	v	file:
showing_tabline	gui_motif.c	/^static int	showing_tabline = 0;$/;"	v	file:
showing_tabline	gui_w32.c	/^static int		showing_tabline = 0;$/;"	v	file:
showmap	map.c	/^showmap($/;"	f	file:
showmatch	search.c	/^showmatch($/;"	f
showmatches	cmdexpand.c	/^showmatches(expand_T *xp, int wildmenu UNUSED)$/;"	f
showmode	screen.c	/^showmode(void)$/;"	f
shown	gui_at_fs.c	/^    char	*shown;$/;"	m	struct:__anon31	file:
shown	gui_at_sb.h	/^    float	  shown;	\/\/ What percent is shown in the win$/;"	m	struct:__anon143
shownLength	gui_at_sb.h	/^    Dimension	  shownLength;	\/\/ Num pixels corresponding to shown$/;"	m	struct:__anon143
showoneopt	option.c	/^showoneopt($/;"	f	file:
showoptions	option.c	/^showoptions($/;"	f	file:
showruler	drawscreen.c	/^showruler(int always)$/;"	f
shutdown	os_unix.c	/^    Bool shutdown;	    \/\/ If we're in shutdown mode$/;"	m	struct:__anon75	file:
si_add	spellfile.c	/^    int		si_add;		\/\/ addition file$/;"	m	struct:spellinfo_S	file:
si_ascii	spellfile.c	/^    int		si_ascii;	\/\/ handling only ASCII words$/;"	m	struct:spellinfo_S	file:
si_attr	syntax.c	/^    int		si_attr;		\/\/ attributes in this state$/;"	m	struct:state_item	file:
si_blocks	spellfile.c	/^    sblock_T	*si_blocks;	\/\/ memory blocks used$/;"	m	struct:spellinfo_S	file:
si_blocks_cnt	spellfile.c	/^    long	si_blocks_cnt;	\/\/ memory blocks allocated$/;"	m	struct:spellinfo_S	file:
si_cchar	syntax.c	/^    int		si_cchar;		\/\/ substitution character for conceal$/;"	m	struct:state_item	file:
si_clear_chartab	spellfile.c	/^    int		si_clear_chartab;   \/\/ when TRUE clear char tables$/;"	m	struct:spellinfo_S	file:
si_collapse	spellfile.c	/^    int		si_collapse;	\/\/ soundsalike: ?$/;"	m	struct:spellinfo_S	file:
si_commonwords	spellfile.c	/^    hashtab_T	si_commonwords;	\/\/ hashtable for common words$/;"	m	struct:spellinfo_S	file:
si_compflags	spellfile.c	/^    char_u	*si_compflags;	\/\/ flags used for compounding$/;"	m	struct:spellinfo_S	file:
si_compmax	spellfile.c	/^    int		si_compmax;	\/\/ max nr of words for compounding$/;"	m	struct:spellinfo_S	file:
si_compminlen	spellfile.c	/^    int		si_compminlen;	\/\/ minimal length for compounding$/;"	m	struct:spellinfo_S	file:
si_compoptions	spellfile.c	/^    int		si_compoptions;	\/\/ COMP_ flags$/;"	m	struct:spellinfo_S	file:
si_comppat	spellfile.c	/^    garray_T	si_comppat;	\/\/ CHECKCOMPOUNDPATTERN items, each stored as$/;"	m	struct:spellinfo_S	file:
si_compress_cnt	spellfile.c	/^    long	si_compress_cnt;    \/\/ words to add before lowering$/;"	m	struct:spellinfo_S	file:
si_compsylmax	spellfile.c	/^    int		si_compsylmax;	\/\/ max nr of syllables for compounding$/;"	m	struct:spellinfo_S	file:
si_cont_list	syntax.c	/^    short	*si_cont_list;		\/\/ list of contained groups$/;"	m	struct:state_item	file:
si_conv	spellfile.c	/^    vimconv_T	si_conv;	\/\/ for conversion to 'encoding'$/;"	m	struct:spellinfo_S	file:
si_did_emsg	spellfile.c	/^    int		si_did_emsg;	\/\/ TRUE when ran out of memory$/;"	m	struct:spellinfo_S	file:
si_end_idx	syntax.c	/^    int		si_end_idx;		\/\/ group ID for end pattern or zero$/;"	m	struct:state_item	file:
si_ends	syntax.c	/^    int		si_ends;		\/\/ if match ends before si_m_endpos$/;"	m	struct:state_item	file:
si_eoe_pos	syntax.c	/^    lpos_T	si_eoe_pos;		\/\/ end position of end pattern$/;"	m	struct:state_item	file:
si_extmatch	syntax.c	/^    reg_extmatch_T *si_extmatch;	\/\/ \\z(...\\) matches from start$/;"	m	struct:state_item	file:
si_first_free	spellfile.c	/^    wordnode_T	*si_first_free; \/\/ List of nodes that have been freed during$/;"	m	struct:spellinfo_S	file:
si_flags	syntax.c	/^    long	si_flags;		\/\/ HL_HAS_EOL flag in this state, and$/;"	m	struct:state_item	file:
si_foldroot	spellfile.c	/^    wordnode_T	*si_foldroot;	\/\/ tree with case-folded words$/;"	m	struct:spellinfo_S	file:
si_foldwcount	spellfile.c	/^    long	si_foldwcount;	\/\/ nr of words in si_foldroot$/;"	m	struct:spellinfo_S	file:
si_followup	spellfile.c	/^    int		si_followup;	\/\/ soundsalike: ?$/;"	m	struct:spellinfo_S	file:
si_free_count	spellfile.c	/^    long	si_free_count;	\/\/ number of nodes in si_first_free$/;"	m	struct:spellinfo_S	file:
si_h_endpos	syntax.c	/^    lpos_T	si_h_endpos;		\/\/ end position of the highlighting$/;"	m	struct:state_item	file:
si_h_startpos	syntax.c	/^    lpos_T	si_h_startpos;		\/\/ start position of the highlighting$/;"	m	struct:state_item	file:
si_id	syntax.c	/^    int		si_id;			\/\/ highlight group ID for keywords$/;"	m	struct:state_item	file:
si_idx	syntax.c	/^    int		si_idx;			\/\/ index of syntax pattern or$/;"	m	struct:state_item	file:
si_info	spellfile.c	/^    char_u	*si_info;	\/\/ info text chars or NULL$/;"	m	struct:spellinfo_S	file:
si_keeproot	spellfile.c	/^    wordnode_T	*si_keeproot;	\/\/ tree with keep-case words$/;"	m	struct:spellinfo_S	file:
si_keepwcount	spellfile.c	/^    long	si_keepwcount;	\/\/ nr of words in si_keeproot$/;"	m	struct:spellinfo_S	file:
si_m_endpos	syntax.c	/^    lpos_T	si_m_endpos;		\/\/ just after end posn of the match$/;"	m	struct:state_item	file:
si_m_lnum	syntax.c	/^    int		si_m_lnum;		\/\/ lnum of the match$/;"	m	struct:state_item	file:
si_m_startcol	syntax.c	/^    int		si_m_startcol;		\/\/ starting column of the match$/;"	m	struct:state_item	file:
si_map	spellfile.c	/^    garray_T	si_map;		\/\/ MAP info concatenated$/;"	m	struct:spellinfo_S	file:
si_memtot	spellfile.c	/^    int		si_memtot;	\/\/ runtime memory used$/;"	m	struct:spellinfo_S	file:
si_midword	spellfile.c	/^    char_u	*si_midword;	\/\/ MIDWORD chars or NULL$/;"	m	struct:spellinfo_S	file:
si_msg_count	spellfile.c	/^    int		si_msg_count;	\/\/ number of words added since last message$/;"	m	struct:spellinfo_S	file:
si_newcompID	spellfile.c	/^    int		si_newcompID;	\/\/ current value for compound ID$/;"	m	struct:spellinfo_S	file:
si_newprefID	spellfile.c	/^    int		si_newprefID;	\/\/ current value for ah_newID$/;"	m	struct:spellinfo_S	file:
si_next_list	syntax.c	/^    short	*si_next_list;		\/\/ nextgroup IDs after this item ends$/;"	m	struct:state_item	file:
si_nobreak	spellfile.c	/^    char_u	si_nobreak;	\/\/ NOBREAK$/;"	m	struct:spellinfo_S	file:
si_nocompoundsugs	spellfile.c	/^    int		si_nocompoundsugs; \/\/ NOCOMPOUNDSUGS item found$/;"	m	struct:spellinfo_S	file:
si_nosplitsugs	spellfile.c	/^    int		si_nosplitsugs;	\/\/ NOSPLITSUGS item found$/;"	m	struct:spellinfo_S	file:
si_nosugfile	spellfile.c	/^    int		si_nosugfile;	\/\/ NOSUGFILE item found$/;"	m	struct:spellinfo_S	file:
si_prefcond	spellfile.c	/^    garray_T	si_prefcond;	\/\/ table with conditions for postponed$/;"	m	struct:spellinfo_S	file:
si_prefroot	spellfile.c	/^    wordnode_T	*si_prefroot;	\/\/ tree with postponed prefixes$/;"	m	struct:spellinfo_S	file:
si_region	spellfile.c	/^    int		si_region;	\/\/ region mask$/;"	m	struct:spellinfo_S	file:
si_region_count	spellfile.c	/^    int		si_region_count; \/\/ number of regions supported (1 when there$/;"	m	struct:spellinfo_S	file:
si_region_name	spellfile.c	/^    char_u	si_region_name[MAXREGIONS * 2 + 1];$/;"	m	struct:spellinfo_S	file:
si_rem_accents	spellfile.c	/^    int		si_rem_accents;	\/\/ soundsalike: remove accents$/;"	m	struct:spellinfo_S	file:
si_rep	spellfile.c	/^    garray_T	si_rep;		\/\/ list of fromto_T entries from REP lines$/;"	m	struct:spellinfo_S	file:
si_repsal	spellfile.c	/^    garray_T	si_repsal;	\/\/ list of fromto_T entries from REPSAL lines$/;"	m	struct:spellinfo_S	file:
si_sal	spellfile.c	/^    garray_T	si_sal;		\/\/ list of fromto_T entries from SAL lines$/;"	m	struct:spellinfo_S	file:
si_seqnr	syntax.c	/^    int		si_seqnr;		\/\/ sequence number$/;"	m	struct:state_item	file:
si_sofofr	spellfile.c	/^    char_u	*si_sofofr;	\/\/ SOFOFROM text$/;"	m	struct:spellinfo_S	file:
si_sofoto	spellfile.c	/^    char_u	*si_sofoto;	\/\/ SOFOTO text$/;"	m	struct:spellinfo_S	file:
si_spellbuf	spellfile.c	/^    buf_T	*si_spellbuf;	\/\/ buffer used to store soundfold word table$/;"	m	struct:spellinfo_S	file:
si_sugtime	spellfile.c	/^    time_t	si_sugtime;	\/\/ timestamp for .sug file$/;"	m	struct:spellinfo_S	file:
si_sugtree	spellfile.c	/^    long	si_sugtree;	\/\/ creating the soundfolding trie$/;"	m	struct:spellinfo_S	file:
si_syllable	spellfile.c	/^    char_u	*si_syllable;	\/\/ syllable string$/;"	m	struct:spellinfo_S	file:
si_trans_id	syntax.c	/^    int		si_trans_id;		\/\/ idem, transparency removed$/;"	m	struct:state_item	file:
si_verbose	spellfile.c	/^    int		si_verbose;	\/\/ verbose messages$/;"	m	struct:spellinfo_S	file:
si_wordnode_nr	spellfile.c	/^    int		si_wordnode_nr;	\/\/ sequence nr for nodes$/;"	m	struct:spellinfo_S	file:
siemsg	message.c	/^siemsg(const char *s, ...)$/;"	f
sig	os_unix.c	/^    int	    sig;	\/\/ Signal number, eg. SIGSEGV etc$/;"	m	struct:signalinfo	file:
sig_alarm_called	os_unix.c	/^static volatile sig_atomic_t sig_alarm_called;$/;"	v	file:
sigcont_received	os_unix.c	/^static volatile sig_atomic_t sigcont_received;$/;"	v	file:
sign	sign.c	/^struct sign$/;"	s	file:
sign_T	sign.c	/^typedef struct sign sign_T;$/;"	t	typeref:struct:sign	file:
sign_attrs_S	structs.h	/^typedef struct sign_attrs_S {$/;"	s
sign_attrs_T	structs.h	/^} sign_attrs_T;$/;"	t	typeref:struct:sign_attrs_S
sign_cmd_idx	sign.c	/^sign_cmd_idx($/;"	f	file:
sign_define_by_name	sign.c	/^sign_define_by_name($/;"	f
sign_define_cmd	sign.c	/^sign_define_cmd(char_u *sign_name, char_u *cmdline)$/;"	f	file:
sign_define_from_dict	sign.c	/^sign_define_from_dict(char_u *name_arg, dict_T *dict)$/;"	f	file:
sign_define_init_icon	sign.c	/^sign_define_init_icon(sign_T *sp, char_u *icon)$/;"	f	file:
sign_define_init_text	sign.c	/^sign_define_init_text(sign_T *sp, char_u *text)$/;"	f	file:
sign_define_multiple	sign.c	/^sign_define_multiple(list_T *l, list_T *retlist)$/;"	f	file:
sign_entry	structs.h	/^struct sign_entry$/;"	s
sign_entry_T	structs.h	/^typedef struct sign_entry sign_entry_T;$/;"	t	typeref:struct:sign_entry
sign_exists_by_name	sign.c	/^sign_exists_by_name(char_u *name)$/;"	f
sign_find	sign.c	/^sign_find(char_u *name, sign_T **sp_prev)$/;"	f	file:
sign_get_image	sign.c	/^sign_get_image($/;"	f
sign_get_info	sign.c	/^sign_get_info(sign_entry_T *sign)$/;"	f	file:
sign_get_placed	sign.c	/^sign_get_placed($/;"	f	file:
sign_get_placed_in_buf	sign.c	/^sign_get_placed_in_buf($/;"	f	file:
sign_getinfo	sign.c	/^sign_getinfo(sign_T *sp, dict_T *retdict)$/;"	f	file:
sign_getlist	sign.c	/^sign_getlist(char_u *name, list_T *retlist)$/;"	f	file:
sign_group_for_window	sign.c	/^sign_group_for_window(sign_entry_T *sign, win_T *wp)$/;"	f	file:
sign_group_get_next_signid	sign.c	/^sign_group_get_next_signid(buf_T *buf, char_u *groupname)$/;"	f	file:
sign_group_ref	sign.c	/^sign_group_ref(char_u *groupname)$/;"	f	file:
sign_group_unref	sign.c	/^sign_group_unref(char_u *groupname)$/;"	f	file:
sign_gui_started	sign.c	/^sign_gui_started(void)$/;"	f
sign_in_group	sign.c	/^sign_in_group(sign_entry_T *sign, char_u *group)$/;"	f	file:
sign_jump	sign.c	/^sign_jump(int sign_id, char_u *sign_group, buf_T *buf)$/;"	f	file:
sign_jump_cmd	sign.c	/^sign_jump_cmd($/;"	f	file:
sign_list_by_name	sign.c	/^sign_list_by_name(char_u *name)$/;"	f	file:
sign_list_defined	sign.c	/^sign_list_defined(sign_T *sp)$/;"	f	file:
sign_list_placed	sign.c	/^sign_list_placed(buf_T *rbuf, char_u *sign_group)$/;"	f	file:
sign_mark_adjust	sign.c	/^sign_mark_adjust($/;"	f
sign_place	sign.c	/^sign_place($/;"	f
sign_place_cmd	sign.c	/^sign_place_cmd($/;"	f	file:
sign_place_from_dict	sign.c	/^sign_place_from_dict($/;"	f	file:
sign_sort_by_prio_on_line	sign.c	/^sign_sort_by_prio_on_line(buf_T *buf, sign_entry_T *sign)$/;"	f	file:
sign_typenr2name	sign.c	/^sign_typenr2name(int typenr)$/;"	f	file:
sign_undefine	sign.c	/^sign_undefine(sign_T *sp, sign_T *sp_prev)$/;"	f	file:
sign_undefine_by_name	sign.c	/^sign_undefine_by_name(char_u *name, int give_error)$/;"	f
sign_undefine_multiple	sign.c	/^sign_undefine_multiple(list_T *l, list_T *retlist)$/;"	f	file:
sign_unplace	sign.c	/^sign_unplace(int sign_id, char_u *sign_group, buf_T *buf, linenr_T atlnum)$/;"	f	file:
sign_unplace_at_cursor	sign.c	/^sign_unplace_at_cursor(char_u *groupname)$/;"	f	file:
sign_unplace_cmd	sign.c	/^sign_unplace_cmd($/;"	f	file:
sign_unplace_from_dict	sign.c	/^sign_unplace_from_dict(typval_T *group_tv, dict_T *dict)$/;"	f	file:
signal	os_unixx.h	17;"	d
signal_info	os_unix.c	/^} signal_info[] =$/;"	v	typeref:struct:signalinfo	file:
signal_stack	os_unix.c	/^static char *signal_stack;$/;"	v	file:
signalinfo	os_unix.c	/^static struct signalinfo$/;"	s	file:
signcolumn_on	sign.c	/^signcolumn_on(win_T *wp)$/;"	f
signgroup_S	structs.h	/^typedef struct signgroup_S$/;"	s
signgroup_T	structs.h	/^} signgroup_T;$/;"	t	typeref:struct:signgroup_S
signicon_t	gui_w32.c	/^} signicon_t;$/;"	t	typeref:struct:_signicon_t	file:
signmap	netbeans.c	/^    int			*signmap;$/;"	m	struct:nbbuf_struct	file:
signmaplen	netbeans.c	/^    short_u		 signmaplen;$/;"	m	struct:nbbuf_struct	file:
signmapused	netbeans.c	/^    short_u		 signmapused;$/;"	m	struct:nbbuf_struct	file:
sigstk	os_unix.c	/^static stack_t sigstk;			\/\/ for sigaltstack()$/;"	v	file:
sigstk	os_unix.c	/^static struct sigstack sigstk;		\/\/ for sigstack()$/;"	v	typeref:struct:sigstack	file:
silent	structs.h	/^    char	silent[MENU_MODES]; \/\/ A silent flag for each mode$/;"	m	struct:VimMenu
silent_mode	globals.h	/^EXTERN int	silent_mode INIT(= FALSE);$/;"	v
similar_chars	spellsuggest.c	/^similar_chars(slang_T *slang, int c1, int c2)$/;"	f	file:
simple	gui_at_sb.h	/^    SimplePart		simple;$/;"	m	struct:_ScrollbarRec
simple_class	gui_at_sb.h	/^    SimpleClassPart		simple_class;$/;"	m	struct:_ScrollbarClassRec
simplify_filename	findfile.c	/^simplify_filename(char_u *filename)$/;"	f
simplify_key	misc2.c	/^simplify_key(int key, int *modifiers)$/;"	f
single_input	if_python.c	115;"	d	file:
size	gui.h	/^    long	size;		\/\/ Size of scrollbar thumb$/;"	m	struct:GuiScrollbar
size	gui_mac.c	/^    FMFontSize size;$/;"	m	struct:__anon38	file:
size_callback	gui_xmdlg.c	/^size_callback(Widget w,$/;"	f	file:
size_part	gui_xmdlg.c	/^size_part(char *font, char *buf, int inPixels)$/;"	f	file:
size_set	os_amiga.c	/^int			size_set = FALSE;   \/\/ set to TRUE if window size was set$/;"	v
skip	ex_cmds.h	/^    int		skip;		\/\/ don't execute the command, only parse it$/;"	m	struct:exarg
skip_anyof	regexp.c	/^skip_anyof(char_u *p)$/;"	f	file:
skip_chars	search.c	/^skip_chars(int cclass, int dir)$/;"	f	file:
skip_cmd_arg	ex_docmd.c	/^skip_cmd_arg($/;"	f
skip_comment	ops.c	/^skip_comment($/;"	f
skip_expr	eval.c	/^skip_expr(char_u **pp)$/;"	f
skip_for_viminfo	viminfo.c	/^skip_for_viminfo(buf_T *buf)$/;"	f	file:
skip_grep_pat	ex_docmd.c	/^skip_grep_pat(exarg_T *eap)$/;"	f	file:
skip_label	cindent.c	/^skip_label(linenr_T lnum, char_u **pp)$/;"	f	file:
skip_range	ex_docmd.c	/^skip_range($/;"	f
skip_redraw	globals.h	/^EXTERN int	skip_redraw INIT(= FALSE);  \/\/ skip redraw once$/;"	v
skip_regexp	regexp.c	/^skip_regexp($/;"	f
skip_showmode	screen.c	/^skip_showmode()$/;"	f
skip_status_match_char	screen.c	/^skip_status_match_char(expand_T *xp, char_u *s)$/;"	f	file:
skip_string	cindent.c	/^skip_string(char_u *p)$/;"	f	file:
skip_term_loop	globals.h	/^EXTERN int	skip_term_loop INIT(= FALSE);$/;"	v
skip_to_option_part	misc1.c	/^skip_to_option_part(char_u *p)$/;"	f
skip_to_start	regexp_nfa.c	/^skip_to_start(int c, colnr_T *colp)$/;"	f	file:
skip_type	vim9compile.c	/^skip_type(char_u *start)$/;"	f
skip_var_list	evalvars.c	/^skip_var_list($/;"	f
skip_var_one	evalvars.c	/^skip_var_one(char_u *arg, int include_type)$/;"	f	file:
skip_vimgrep_pat	ex_cmds.c	/^skip_vimgrep_pat(char_u *p, char_u **s, int *flags)$/;"	f
skipbin	charset.c	/^skipbin(char_u *q)$/;"	f
skipchr	regexp.c	/^skipchr(void)$/;"	f	file:
skipchr_keepstart	regexp.c	/^skipchr_keepstart(void)$/;"	f	file:
skipdigits	charset.c	/^skipdigits(char_u *q)$/;"	f
skiphex	charset.c	/^skiphex(char_u *q)$/;"	f
skiptobin	charset.c	/^skiptobin(char_u *q)$/;"	f
skiptodigit	charset.c	/^skiptodigit(char_u *q)$/;"	f
skiptohex	charset.c	/^skiptohex(char_u *q)$/;"	f
skiptowhite	charset.c	/^skiptowhite(char_u *p)$/;"	f
skiptowhite_esc	charset.c	/^skiptowhite_esc(char_u *p)$/;"	f
skipwhite	charset.c	/^skipwhite(char_u *q)$/;"	f
sl_add	spell.h	/^    int		sl_add;		\/\/ TRUE if it's a .add file.$/;"	m	struct:slang_S
sl_collapse	spell.h	/^    int		sl_collapse;	\/\/ SAL collapse_result$/;"	m	struct:slang_S
sl_compallflags	spell.h	/^    char_u	*sl_compallflags; \/\/ all flags for compound words$/;"	m	struct:slang_S
sl_compmax	spell.h	/^    int		sl_compmax;	\/\/ COMPOUNDWORDMAX (default: MAXWLEN)$/;"	m	struct:slang_S
sl_compminlen	spell.h	/^    int		sl_compminlen;	\/\/ COMPOUNDMIN (default: 0)$/;"	m	struct:slang_S
sl_compoptions	spell.h	/^    int		sl_compoptions;	\/\/ COMP_* flags$/;"	m	struct:slang_S
sl_comppat	spell.h	/^    garray_T	sl_comppat;	\/\/ CHECKCOMPOUNDPATTERN items$/;"	m	struct:slang_S
sl_compprog	spell.h	/^    regprog_T	*sl_compprog;	\/\/ COMPOUNDRULE turned into a regexp progrm$/;"	m	struct:slang_S
sl_comprules	spell.h	/^    char_u	*sl_comprules;	\/\/ all COMPOUNDRULE concatenated (or NULL)$/;"	m	struct:slang_S
sl_compstartflags	spell.h	/^    char_u	*sl_compstartflags; \/\/ flags for first compound word$/;"	m	struct:slang_S
sl_compsylmax	spell.h	/^    int		sl_compsylmax;	\/\/ COMPOUNDSYLMAX (default: MAXWLEN)$/;"	m	struct:slang_S
sl_fbyts	spell.h	/^    char_u	*sl_fbyts;	\/\/ case-folded word bytes$/;"	m	struct:slang_S
sl_fidxs	spell.h	/^    idx_T	*sl_fidxs;	\/\/ case-folded word indexes$/;"	m	struct:slang_S
sl_fname	spell.h	/^    char_u	*sl_fname;	\/\/ name of .spl file$/;"	m	struct:slang_S
sl_followup	spell.h	/^    int		sl_followup;	\/\/ SAL followup$/;"	m	struct:slang_S
sl_has_map	spell.h	/^    int		sl_has_map;	\/\/ TRUE if there is a MAP line$/;"	m	struct:slang_S
sl_info	spell.h	/^    char_u	*sl_info;	\/\/ infotext string or NULL$/;"	m	struct:slang_S
sl_items	structs.h	/^    listitem_T	sl_items[10];$/;"	m	struct:__anon210
sl_kbyts	spell.h	/^    char_u	*sl_kbyts;	\/\/ keep-case word bytes$/;"	m	struct:slang_S
sl_kidxs	spell.h	/^    idx_T	*sl_kidxs;	\/\/ keep-case word indexes$/;"	m	struct:slang_S
sl_lang	spell.c	/^    char_u  sl_lang[MAXWLEN + 1];	\/\/ language name$/;"	m	struct:spelload_S	file:
sl_list	structs.h	/^    list_T	sl_list;	\/\/ must be first$/;"	m	struct:__anon210
sl_map_array	spell.h	/^    int		sl_map_array[256]; \/\/ MAP for first 256 chars$/;"	m	struct:slang_S
sl_map_hash	spell.h	/^    hashtab_T	sl_map_hash;	\/\/ MAP for multi-byte chars$/;"	m	struct:slang_S
sl_midword	spell.h	/^    char_u	*sl_midword;	\/\/ MIDWORD string or NULL$/;"	m	struct:slang_S
sl_name	spell.h	/^    char_u	*sl_name;	\/\/ language name "en", "en.rare", "nl", etc.$/;"	m	struct:slang_S
sl_next	spell.h	/^    slang_T	*sl_next;	\/\/ next language$/;"	m	struct:slang_S
sl_nobreak	spell.c	/^    int	    sl_nobreak;			\/\/ NOBREAK language found$/;"	m	struct:spelload_S	file:
sl_nobreak	spell.h	/^    char_u	sl_nobreak;	\/\/ When TRUE: no spaces between words$/;"	m	struct:slang_S
sl_nocompoundsugs	spell.h	/^    int		sl_nocompoundsugs; \/\/ don't suggest compounding$/;"	m	struct:slang_S
sl_nosplitsugs	spell.h	/^    int		sl_nosplitsugs;	\/\/ don't suggest splitting a word$/;"	m	struct:slang_S
sl_pbyts	spell.h	/^    char_u	*sl_pbyts;	\/\/ prefix tree word bytes$/;"	m	struct:slang_S
sl_pidxs	spell.h	/^    idx_T	*sl_pidxs;	\/\/ prefix tree word indexes$/;"	m	struct:slang_S
sl_prefixcnt	spell.h	/^    int		sl_prefixcnt;	\/\/ number of items in "sl_prefprog"$/;"	m	struct:slang_S
sl_prefprog	spell.h	/^    regprog_T	**sl_prefprog;	\/\/ table with regprogs for prefixes$/;"	m	struct:slang_S
sl_regions	spell.h	/^    char_u	sl_regions[MAXREGIONS * 2 + 1];$/;"	m	struct:slang_S
sl_rem_accents	spell.h	/^    int		sl_rem_accents;	\/\/ SAL remove_accents$/;"	m	struct:slang_S
sl_rep	spell.h	/^    garray_T	sl_rep;		\/\/ list of fromto_T entries from REP lines$/;"	m	struct:slang_S
sl_rep_first	spell.h	/^    short	sl_rep_first[256];  \/\/ indexes where byte first appears, -1 if$/;"	m	struct:slang_S
sl_repsal	spell.h	/^    garray_T	sl_repsal;	\/\/ list of fromto_T entries from REPSAL lines$/;"	m	struct:slang_S
sl_repsal_first	spell.h	/^    short	sl_repsal_first[256];  \/\/ sl_rep_first for REPSAL lines$/;"	m	struct:slang_S
sl_sal	spell.h	/^    garray_T	sl_sal;		\/\/ list of salitem_T entries from SAL lines$/;"	m	struct:slang_S
sl_sal_first	spell.h	/^    salfirst_T	sl_sal_first[256];  \/\/ indexes where byte first appears, -1 if$/;"	m	struct:slang_S
sl_sbyts	spell.h	/^    char_u	*sl_sbyts;	\/\/ soundfolded word bytes$/;"	m	struct:slang_S
sl_sidxs	spell.h	/^    idx_T	*sl_sidxs;	\/\/ soundfolded word indexes$/;"	m	struct:slang_S
sl_slang	spell.c	/^    slang_T *sl_slang;			\/\/ resulting slang_T struct$/;"	m	struct:spelload_S	file:
sl_sofo	spell.h	/^    int		sl_sofo;	\/\/ SOFOFROM and SOFOTO instead of SAL items:$/;"	m	struct:slang_S
sl_sounddone	spell.h	/^    hashtab_T	sl_sounddone;	\/\/ table with soundfolded words that have$/;"	m	struct:slang_S
sl_sugbuf	spell.h	/^    buf_T	*sl_sugbuf;	\/\/ buffer with word number table$/;"	m	struct:slang_S
sl_sugloaded	spell.h	/^    int		sl_sugloaded;	\/\/ TRUE when .sug file was loaded or failed to$/;"	m	struct:slang_S
sl_sugtime	spell.h	/^    time_t	sl_sugtime;	\/\/ timestamp for .sug file$/;"	m	struct:slang_S
sl_syl_items	spell.h	/^    garray_T	sl_syl_items;	\/\/ syllable items$/;"	m	struct:slang_S
sl_syllable	spell.h	/^    char_u	*sl_syllable;	\/\/ SYLLABLE repeatable chars or NULL$/;"	m	struct:slang_S
sl_wordcount	spell.h	/^    hashtab_T	sl_wordcount;	\/\/ hashtable with word count, wordcount_T$/;"	m	struct:slang_S
slang_S	spell.h	/^struct slang_S$/;"	s
slang_T	spell.h	/^typedef struct slang_S slang_T;$/;"	t	typeref:struct:slang_S
slang_alloc	spell.c	/^slang_alloc(char_u *lang)$/;"	f
slang_clear	spell.c	/^slang_clear(slang_T *lp)$/;"	f
slang_clear_sug	spell.c	/^slang_clear_sug(slang_T *lp)$/;"	f
slang_free	spell.c	/^slang_free(slang_T *lp)$/;"	f
slash_adjust	os_mswin.c	/^slash_adjust(char_u *p)$/;"	f
sleep	dosinst.h	47;"	d
slowest	structs.h	/^    proftime_T	slowest;	\/\/ time of slowest call$/;"	m	struct:__anon235
slowest	syntax.c	/^    proftime_T	slowest;$/;"	m	struct:__anon117	file:
sm_client_check_changed_any	gui_gtk_x11.c	/^sm_client_check_changed_any(GnomeClient	    *client UNUSED,$/;"	f	file:
sm_client_die	gui_gtk_x11.c	/^sm_client_die(GnomeClient *client UNUSED, gpointer data UNUSED)$/;"	f	file:
sm_client_save_yourself	gui_gtk_x11.c	/^sm_client_save_yourself(GnomeClient	    *client,$/;"	f	file:
sm_firstlnum	regexp.c	/^    linenr_T	sm_firstlnum;$/;"	m	struct:__anon101	file:
sm_gettail	cmdexpand.c	/^sm_gettail(char_u *s)$/;"	f
sm_lead	spell.h	/^    char_u	*sm_lead;	\/\/ leading letters$/;"	m	struct:salitem_S
sm_lead_w	spell.h	/^    int		*sm_lead_w;	\/\/ wide character copy of "sm_lead"$/;"	m	struct:salitem_S
sm_leadlen	spell.h	/^    int		sm_leadlen;	\/\/ length of "sm_lead"$/;"	m	struct:salitem_S
sm_line_lbr	regexp.c	/^    int		sm_line_lbr;$/;"	m	struct:__anon101	file:
sm_match	regexp.c	/^    regmatch_T	*sm_match;$/;"	m	struct:__anon101	file:
sm_maxline	regexp.c	/^    linenr_T	sm_maxline;$/;"	m	struct:__anon101	file:
sm_mmatch	regexp.c	/^    regmmatch_T	*sm_mmatch;$/;"	m	struct:__anon101	file:
sm_oneof	spell.h	/^    char_u	*sm_oneof;	\/\/ letters from () or NULL$/;"	m	struct:salitem_S
sm_oneof_w	spell.h	/^    int		*sm_oneof_w;	\/\/ wide character copy of "sm_oneof"$/;"	m	struct:salitem_S
sm_rules	spell.h	/^    char_u	*sm_rules;	\/\/ rules like ^, $, priority$/;"	m	struct:salitem_S
sm_to	spell.h	/^    char_u	*sm_to;		\/\/ replacement.$/;"	m	struct:salitem_S
sm_to_w	spell.h	/^    int		*sm_to_w;	\/\/ wide character copy of "sm_to"$/;"	m	struct:salitem_S
smcconn	os_unix.c	/^    SmcConn smcconn;	    \/\/ The SM connection ID$/;"	m	struct:__anon75	file:
smsg	message.c	/^smsg(const char *s, ...)$/;"	f
smsg_attr	message.c	/^smsg_attr(int attr, const char *s, ...)$/;"	f
smsg_attr_keep	message.c	/^smsg_attr_keep(int attr, const char *s, ...)$/;"	f
sn_had_command	structs.h	/^    int		sn_had_command;	\/\/ TRUE if any command was executed$/;"	m	struct:__anon217
sn_icon	sign.c	/^    char_u	*sn_icon;	\/\/ name of pixmap$/;"	m	struct:sign	file:
sn_image	sign.c	/^    void	*sn_image;	\/\/ icon image$/;"	m	struct:sign	file:
sn_imports	structs.h	/^    garray_T	sn_imports;	\/\/ imported items, imported_T$/;"	m	struct:__anon217
sn_line_hl	sign.c	/^    int		sn_line_hl;	\/\/ highlight ID for line$/;"	m	struct:sign	file:
sn_name	sign.c	/^    char_u	*sn_name;	\/\/ name of sign$/;"	m	struct:sign	file:
sn_name	structs.h	/^    char_u	*sn_name;$/;"	m	struct:__anon217
sn_next	sign.c	/^    sign_T	*sn_next;	\/\/ next sign in list$/;"	m	struct:sign	file:
sn_pr_child	structs.h	/^    proftime_T	sn_pr_child;	\/\/ time set when going into first child$/;"	m	struct:__anon217
sn_pr_children	structs.h	/^    proftime_T	sn_pr_children; \/\/ time in children after script start$/;"	m	struct:__anon217
sn_pr_count	structs.h	/^    int		sn_pr_count;	\/\/ nr of times sourced$/;"	m	struct:__anon217
sn_pr_force	structs.h	/^    int		sn_pr_force;	\/\/ forceit: profile functions in this script$/;"	m	struct:__anon217
sn_pr_nest	structs.h	/^    int		sn_pr_nest;	\/\/ nesting for sn_pr_child$/;"	m	struct:__anon217
sn_pr_self	structs.h	/^    proftime_T	sn_pr_self;	\/\/ time spent in script itself$/;"	m	struct:__anon217
sn_pr_start	structs.h	/^    proftime_T	sn_pr_start;	\/\/ time at script start$/;"	m	struct:__anon217
sn_pr_total	structs.h	/^    proftime_T	sn_pr_total;	\/\/ time spent in script + children$/;"	m	struct:__anon217
sn_prl_S	structs.h	/^typedef struct sn_prl_S$/;"	s
sn_prl_T	structs.h	/^} sn_prl_T;$/;"	t	typeref:struct:sn_prl_S
sn_prl_children	structs.h	/^    proftime_T	sn_prl_children; \/\/ time spent in children for this line$/;"	m	struct:__anon217
sn_prl_execed	structs.h	/^    int		sn_prl_execed;	\/\/ line being timed was executed$/;"	m	struct:__anon217
sn_prl_ga	structs.h	/^    garray_T	sn_prl_ga;	\/\/ things stored for every line$/;"	m	struct:__anon217
sn_prl_idx	structs.h	/^    int		sn_prl_idx;	\/\/ index of line being timed; -1 if none$/;"	m	struct:__anon217
sn_prl_self	structs.h	/^    proftime_T	sn_prl_self;	\/\/ time spent in a line itself$/;"	m	struct:sn_prl_S
sn_prl_start	structs.h	/^    proftime_T	sn_prl_start;	\/\/ start time for current line$/;"	m	struct:__anon217
sn_prl_total	structs.h	/^    proftime_T	sn_prl_total;	\/\/ time spent in a line + children$/;"	m	struct:sn_prl_S
sn_prl_wait	structs.h	/^    proftime_T	sn_prl_wait;	\/\/ wait start time for current line$/;"	m	struct:__anon217
sn_prof_on	structs.h	/^    int		sn_prof_on;	\/\/ TRUE when script is\/was profiled$/;"	m	struct:__anon217
sn_save_cpo	structs.h	/^    char_u	*sn_save_cpo;	\/\/ 'cpo' value when :vim9script found$/;"	m	struct:__anon217
sn_text	sign.c	/^    char_u	*sn_text;	\/\/ text used instead of pixmap$/;"	m	struct:sign	file:
sn_text_hl	sign.c	/^    int		sn_text_hl;	\/\/ highlight ID for text$/;"	m	struct:sign	file:
sn_type_list	structs.h	/^    garray_T	sn_type_list;	\/\/ keeps types used by variables$/;"	m	struct:__anon217
sn_typenr	sign.c	/^    int		sn_typenr;	\/\/ type number of sign$/;"	m	struct:sign	file:
sn_var_vals	structs.h	/^    garray_T	sn_var_vals;	\/\/ same variables as a list of svar_T$/;"	m	struct:__anon217
sn_vars	structs.h	/^    scriptvar_T	*sn_vars;	\/\/ stores s: variables for this script$/;"	m	struct:__anon217
sn_version	structs.h	/^    int		sn_version;	\/\/ :scriptversion$/;"	m	struct:__anon217
snd_callback	sound.c	/^    callback_T	snd_callback;$/;"	m	struct:soundcb_S	file:
snd_device_id	sound.c	/^    MCIDEVICEID	snd_device_id;$/;"	m	struct:soundcb_S	file:
snd_id	sound.c	/^    long	snd_id;$/;"	m	struct:soundcb_S	file:
snd_next	sound.c	/^    soundcb_T	*snd_next;$/;"	m	struct:soundcb_S	file:
snp_count	structs.h	/^    int		snp_count;	\/\/ nr of times line was executed$/;"	m	struct:sn_prl_S
so	if_mzsch.c	/^    Scheme_Object   so;$/;"	m	struct:__anon52	file:
so	if_mzsch.c	/^    Scheme_Object   so;$/;"	m	struct:__anon53	file:
so_flags	vim9.h	/^    int		so_flags;$/;"	m	struct:__anon273
so_name	vim9.h	/^    char_u	*so_name;$/;"	m	struct:__anon273
sock_T	vim.h	/^typedef __int64 sock_T;$/;"	t
sock_T	vim.h	/^typedef int sock_T;$/;"	t
sock_close	channel.c	39;"	d	file:
sock_close	channel.c	51;"	d	file:
sock_read	channel.c	38;"	d	file:
sock_read	channel.c	50;"	d	file:
sock_write	channel.c	37;"	d	file:
sock_write	channel.c	49;"	d	file:
soffset	structs.h	/^typedef struct soffset$/;"	s
soffset_T	structs.h	/^} soffset_T;$/;"	t	typeref:struct:soffset
softspace	if_py_both.h	/^    long softspace;$/;"	m	struct:__anon150
sortFunctions	eval.c	/^sortFunctions(void)$/;"	f	file:
sortItem_T	list.c	/^} sortItem_T;$/;"	t	typeref:struct:__anon64	file:
sort_abort	ex_cmds.c	/^static int	sort_abort;	\/\/ flag to indicate if sorting has been interrupted$/;"	v	file:
sort_compare	ex_cmds.c	/^sort_compare(const void *s1, const void *s2)$/;"	f	file:
sort_compare	misc2.c	/^sort_compare(const void *s1, const void *s2)$/;"	f	file:
sort_flt	ex_cmds.c	/^static int	sort_flt;	\/\/ sort on floating number$/;"	v	file:
sort_func_compare	cmdexpand.c	/^sort_func_compare(const void *s1, const void *s2)$/;"	f	file:
sort_hist	viminfo.c	/^sort_hist(const void *s1, const void *s2)$/;"	f	file:
sort_ic	ex_cmds.c	/^static int	sort_ic;	\/\/ ignore case$/;"	v	file:
sort_nr	ex_cmds.c	/^static int	sort_nr;	\/\/ sort on number$/;"	v	file:
sort_rx	ex_cmds.c	/^static int	sort_rx;	\/\/ sort on regex instead of skipping it$/;"	v	file:
sort_strings	misc2.c	/^sort_strings($/;"	f
sortbuf1	ex_cmds.c	/^static char_u	*sortbuf1;$/;"	v	file:
sortbuf2	ex_cmds.c	/^static char_u	*sortbuf2;$/;"	v	file:
sortcmp	os_amiga.c	/^sortcmp(const void *a, const void *b)$/;"	f	file:
sorti_T	ex_cmds.c	/^} sorti_T;$/;"	t	typeref:struct:__anon20	file:
sortinfo	list.c	/^static sortinfo_T	*sortinfo = NULL;$/;"	v	file:
sortinfo_T	list.c	/^} sortinfo_T;$/;"	t	typeref:struct:__anon65	file:
sound_callback	sound.c	/^sound_callback($/;"	f	file:
sound_free	sound.c	/^sound_free(void)$/;"	f
sound_id	sound.c	/^static long	    sound_id = 0;$/;"	v	file:
sound_play_common	sound.c	/^sound_play_common(typval_T *argvars, typval_T *rettv, int playfile)$/;"	f	file:
sound_window	sound.c	/^sound_window()$/;"	f	file:
sound_wndproc	sound.c	/^sound_wndproc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f	file:
soundalike_score	spellsuggest.c	/^soundalike_score($/;"	f	file:
soundcb_S	sound.c	/^struct soundcb_S {$/;"	s	file:
soundcb_T	sound.c	/^typedef struct soundcb_S soundcb_T;$/;"	t	typeref:struct:soundcb_S	file:
soundcb_queue_S	sound.c	/^struct soundcb_queue_S {$/;"	s	file:
soundcb_queue_T	sound.c	/^typedef struct soundcb_queue_S soundcb_queue_T;$/;"	t	typeref:struct:soundcb_queue_S	file:
soundfold_find	spellsuggest.c	/^soundfold_find(slang_T *slang, char_u *word)$/;"	f	file:
source_all_matches	scriptfile.c	/^source_all_matches(char_u *pat)$/;"	f	file:
source_breakpoint	scriptfile.c	/^source_breakpoint(void *cookie)$/;"	f
source_callback	scriptfile.c	/^source_callback(char_u *fname, void *cookie)$/;"	f	file:
source_cookie	scriptfile.c	/^struct source_cookie$/;"	s	file:
source_dbg_tick	scriptfile.c	/^source_dbg_tick(void *cookie)$/;"	f
source_in_path	scriptfile.c	/^source_in_path(char_u *path, char_u *name, int flags, int *ret_sid)$/;"	f
source_level	scriptfile.c	/^source_level(void *cookie)$/;"	f
source_pyx_file	ex_cmds2.c	/^source_pyx_file(exarg_T *eap, char_u *fname)$/;"	f	file:
source_runtime	scriptfile.c	/^source_runtime(char_u *name, int flags)$/;"	f
source_startup_scripts	main.c	/^source_startup_scripts(mparm_T *parmp)$/;"	f	file:
sourcing_lnum	scriptfile.c	/^    linenr_T	sourcing_lnum;	\/\/ line number of the source file$/;"	m	struct:source_cookie	file:
sp_cchar	syntax.c	/^    int		 sp_cchar;		\/\/ conceal substitute character$/;"	m	struct:syn_pattern	file:
sp_color	structs.h	/^	    guicolor_T	    sp_color;	\/\/ special color handle$/;"	m	struct:attr_entry::__anon196::__anon199
sp_cont_list	syntax.c	/^    short	*sp_cont_list;		\/\/ cont. group IDs, if non-zero$/;"	m	struct:syn_pattern	file:
sp_flags	syntax.c	/^    int		 sp_flags;		\/\/ see HL_ defines below$/;"	m	struct:syn_pattern	file:
sp_ic	syntax.c	/^    int		 sp_ic;			\/\/ ignore-case flag for sp_prog$/;"	m	struct:syn_pattern	file:
sp_line_id	syntax.c	/^    int		 sp_line_id;		\/\/ ID of last line where tried$/;"	m	struct:syn_pattern	file:
sp_next_list	syntax.c	/^    short	*sp_next_list;		\/\/ next group IDs, if non-zero$/;"	m	struct:syn_pattern	file:
sp_off_flags	syntax.c	/^    short	 sp_off_flags;		\/\/ see below$/;"	m	struct:syn_pattern	file:
sp_offsets	syntax.c	/^    int		 sp_offsets[SPO_COUNT];	\/\/ offsets$/;"	m	struct:syn_pattern	file:
sp_pattern	syntax.c	/^    char_u	*sp_pattern;		\/\/ regexp to match, pattern$/;"	m	struct:syn_pattern	file:
sp_prog	syntax.c	/^    regprog_T	*sp_prog;		\/\/ regexp to match, program$/;"	m	struct:syn_pattern	file:
sp_startcol	syntax.c	/^    int		 sp_startcol;		\/\/ next match in sp_line_id line$/;"	m	struct:syn_pattern	file:
sp_syn	structs.h	/^struct sp_syn$/;"	s
sp_syn	syntax.c	/^    struct sp_syn sp_syn;		\/\/ struct passed to in_id_list()$/;"	m	struct:syn_pattern	typeref:struct:syn_pattern::sp_syn	file:
sp_syn_match_id	syntax.c	/^    short	 sp_syn_match_id;	\/\/ highlight group ID of pattern$/;"	m	struct:syn_pattern	file:
sp_sync_idx	syntax.c	/^    int		 sp_sync_idx;		\/\/ sync item index (syncing only)$/;"	m	struct:syn_pattern	file:
sp_syncing	syntax.c	/^    char	 sp_syncing;		\/\/ this item used for syncing$/;"	m	struct:syn_pattern	file:
sp_time	syntax.c	/^    syn_time_T	 sp_time;$/;"	m	struct:syn_pattern	file:
sp_type	syntax.c	/^    char	 sp_type;		\/\/ see SPTYPE_ defines below$/;"	m	struct:syn_pattern	file:
space_to_screenline	screen.c	/^space_to_screenline(int off, int attr)$/;"	f
spacing	gui_xmebwp.h	/^    Dimension spacing;$/;"	m	struct:_XmEnhancedButtonPart
spat	quickfix.c	/^    char_u	*spat;		\/\/ search pattern$/;"	m	struct:__anon91	file:
spat	structs.h	/^typedef struct spat$/;"	s
spat_T	structs.h	/^} spat_T;$/;"	t	typeref:struct:spat
spats	search.c	/^static spat_T spats[2] =$/;"	v	file:
spcolor	gui.h	/^    GdkColor	*spcolor;	    \/\/ GDK-styled special color$/;"	m	struct:Gui
spcolor	gui.h	/^    GdkRGBA	*spcolor;	    \/\/ GDK-styled special color$/;"	m	struct:Gui
specialColor	gui_mac.c	/^RGBColor specialColor;$/;"	v
special_key	gui_gtk_x11.c	/^static struct special_key$/;"	s	file:
special_keys	gui_gtk_x11.c	/^const special_keys[] =$/;"	v	file:
special_keys	gui_mac.c	/^} special_keys[] =$/;"	v	typeref:struct:__anon39	file:
special_keys	gui_photon.c	/^} special_keys[] =$/;"	v	typeref:struct:__anon45	file:
special_keys	gui_w32.c	/^} special_keys[] =$/;"	v	typeref:struct:__anon46	file:
special_keys	gui_x11.c	/^} special_keys[] =$/;"	v	typeref:struct:specialkey	file:
special_keys	netbeans.c	/^special_keys(char_u *args)$/;"	f	file:
special_to_buf	misc2.c	/^special_to_buf(int key, int modifiers, int keycode, char_u *dst)$/;"	f
specialkey	gui_x11.c	/^static struct specialkey$/;"	s	file:
spell_add_word	spellfile.c	/^spell_add_word($/;"	f
spell_back_to_badword	insexpand.c	/^spell_back_to_badword(void)$/;"	f	file:
spell_bad_len	insexpand.c	/^static int  spell_bad_len = 0;	\/\/ length of located bad word$/;"	v	file:
spell_casefold	spell.c	/^spell_casefold($/;"	f
spell_cat_line	spell.c	/^spell_cat_line(char_u *buf, char_u *line, int maxlen)$/;"	f
spell_check	spell.c	/^spell_check($/;"	f
spell_check_msm	spellfile.c	/^spell_check_msm(void)$/;"	f
spell_check_sps	spellsuggest.c	/^spell_check_sps(void)$/;"	f
spell_clear_flags	spellfile.c	/^spell_clear_flags(wordnode_T *node)$/;"	f	file:
spell_delete_wordlist	spell.c	/^spell_delete_wordlist(void)$/;"	f
spell_dump_compl	spell.c	/^spell_dump_compl($/;"	f
spell_edit_score	spellsuggest.c	/^spell_edit_score($/;"	f	file:
spell_edit_score_limit	spellsuggest.c	/^spell_edit_score_limit($/;"	f	file:
spell_edit_score_limit_w	spellsuggest.c	/^spell_edit_score_limit_w($/;"	f	file:
spell_enc	spell.c	/^spell_enc(void)$/;"	f
spell_expand_check_cap	spell.c	/^spell_expand_check_cap(colnr_T col)$/;"	f
spell_expand_need_cap	spell.c	/^static int spell_expand_need_cap;$/;"	v	file:
spell_find_cleanup	spellsuggest.c	/^spell_find_cleanup(suginfo_T *su)$/;"	f	file:
spell_find_suggest	spellsuggest.c	/^spell_find_suggest($/;"	f	file:
spell_free_aff	spellfile.c	/^spell_free_aff(afffile_T *aff)$/;"	f	file:
spell_free_all	spell.c	/^spell_free_all(void)$/;"	f
spell_info_item	spellfile.c	/^spell_info_item(char_u *s)$/;"	f	file:
spell_iswordp	spell.c	/^spell_iswordp($/;"	f
spell_iswordp_nmw	spell.c	/^spell_iswordp_nmw(char_u *p, win_T *wp)$/;"	f
spell_iswordp_w	spell.c	/^spell_iswordp_w(int *p, win_T *wp)$/;"	f	file:
spell_load_cb	spell.c	/^spell_load_cb(char_u *fname, void *cookie)$/;"	f	file:
spell_load_file	spellfile.c	/^spell_load_file($/;"	f
spell_load_lang	spell.c	/^spell_load_lang(char_u *lang)$/;"	f	file:
spell_make_sugfile	spellfile.c	/^spell_make_sugfile(spellinfo_T *spin, char_u *wfname)$/;"	f	file:
spell_mb_isword_class	spell.c	/^spell_mb_isword_class(int cl, win_T *wp)$/;"	f	file:
spell_message	spellfile.c	/^spell_message(spellinfo_T *spin, char_u *str)$/;"	f	file:
spell_move_to	spell.c	/^spell_move_to($/;"	f
spell_print_node	spellfile.c	/^spell_print_node(wordnode_T *node, int depth)$/;"	f	file:
spell_print_tree	spellfile.c	/^spell_print_tree(wordnode_T *root)$/;"	f	file:
spell_read_aff	spellfile.c	/^spell_read_aff(spellinfo_T *spin, char_u *fname)$/;"	f	file:
spell_read_dic	spellfile.c	/^spell_read_dic(spellinfo_T *spin, char_u *fname, afffile_T *affile)$/;"	f	file:
spell_read_tree	spellfile.c	/^spell_read_tree($/;"	f	file:
spell_read_wordfile	spellfile.c	/^spell_read_wordfile(spellinfo_T *spin, char_u *fname)$/;"	f	file:
spell_redraw_lnum	globals.h	/^EXTERN linenr_T		spell_redraw_lnum INIT(= 0);$/;"	v
spell_reload	spell.c	/^spell_reload(void)$/;"	f
spell_reload_one	spellfile.c	/^spell_reload_one($/;"	f	file:
spell_soundfold	spell.c	/^spell_soundfold($/;"	f
spell_soundfold_sal	spell.c	/^spell_soundfold_sal(slang_T *slang, char_u *inword, char_u *res)$/;"	f	file:
spell_soundfold_sofo	spell.c	/^spell_soundfold_sofo(slang_T *slang, char_u *inword, char_u *res)$/;"	f	file:
spell_soundfold_wsal	spell.c	/^spell_soundfold_wsal(slang_T *slang, char_u *inword, char_u *res)$/;"	f	file:
spell_suggest	spellsuggest.c	/^spell_suggest(int count)$/;"	f
spell_suggest_expr	spellsuggest.c	/^spell_suggest_expr(suginfo_T *su, char_u *expr)$/;"	f	file:
spell_suggest_file	spellsuggest.c	/^spell_suggest_file(suginfo_T *su, char_u *fname)$/;"	f	file:
spell_suggest_intern	spellsuggest.c	/^spell_suggest_intern(suginfo_T *su, int interactive)$/;"	f	file:
spell_suggest_list	spellsuggest.c	/^spell_suggest_list($/;"	f
spell_to_word_end	spell.c	/^spell_to_word_end(char_u *start, win_T *win)$/;"	f
spell_valid_case	spell.c	/^spell_valid_case($/;"	f
spell_word_start	spell.c	/^spell_word_start(int startcol)$/;"	f
spellinfo_S	spellfile.c	/^typedef struct spellinfo_S$/;"	s	file:
spellinfo_T	spellfile.c	/^} spellinfo_T;$/;"	t	typeref:struct:spellinfo_S	file:
spelload_S	spell.c	/^typedef struct spelload_S$/;"	s	file:
spelload_T	spell.c	/^} spelload_T;$/;"	t	typeref:struct:spelload_S	file:
spelltab	spell.h	/^SPELL_EXTERN spelltab_T   spelltab;$/;"	v
spelltab_S	spell.h	/^typedef struct spelltab_S$/;"	s
spelltab_T	spell.h	/^} spelltab_T;$/;"	t	typeref:struct:spelltab_S
split	structs.h	/^    int		split;			\/\/ flags for win_split()$/;"	m	struct:__anon191
split_button_string	gui_gtk.c	/^split_button_string(char_u *button_string, int *n_buttons)$/;"	f	file:
split_button_translation	gui_gtk.c	/^split_button_translation(const char *message)$/;"	f	file:
split_disallowed	window.c	/^static int split_disallowed = 0;$/;"	v	file:
split_message	popupmenu.c	/^split_message(char_u *mesg, pumitem_T **array)$/;"	f
spo_name_tab	syntax.c	/^static char *(spo_name_tab[SPO_COUNT]) =$/;"	v	file:
sps_flags	spellsuggest.c	/^static int sps_flags = SPS_BEST;	\/\/ flags from 'spellsuggest'$/;"	v	file:
sps_limit	spellsuggest.c	/^static int sps_limit = 9999;		\/\/ max nr of suggestions given$/;"	v	file:
srWindow	os_win32.c	/^    SMALL_RECT srWindow;$/;"	m	struct:_DYN_CONSOLE_SCREEN_BUFFER_INFOEX	file:
sr_old_redobuff	structs.h	/^    buffheader_T sr_old_redobuff;$/;"	m	struct:__anon189
sr_redobuff	structs.h	/^    buffheader_T sr_redobuff;$/;"	m	struct:__anon189
srand_seed_for_testing	evalfunc.c	/^static UINT32_T srand_seed_for_testing = 0;$/;"	v	file:
srand_seed_for_testing_is_used	evalfunc.c	/^static int	srand_seed_for_testing_is_used = FALSE;$/;"	v	file:
ssop_flags	option.h	/^EXTERN unsigned	ssop_flags;$/;"	v
sst_change_lnum	structs.h	/^    linenr_T	sst_change_lnum;\/\/ when non-zero, change in this line$/;"	m	struct:syn_state
sst_ga	structs.h	/^	garray_T	sst_ga;	\/\/ growarray for long state stack$/;"	m	union:syn_state::__anon195
sst_lnum	structs.h	/^    linenr_T	sst_lnum;	\/\/ line number for this state$/;"	m	struct:syn_state
sst_next	structs.h	/^    synstate_T	*sst_next;	\/\/ next entry in used or free list$/;"	m	struct:syn_state
sst_next_flags	structs.h	/^    int		sst_next_flags;	\/\/ flags for sst_next_list$/;"	m	struct:syn_state
sst_next_list	structs.h	/^    short	*sst_next_list;	\/\/ "nextgroup" list in this state$/;"	m	struct:syn_state
sst_stack	structs.h	/^	bufstate_T	sst_stack[SST_FIX_STATES]; \/\/ short state stack$/;"	m	union:syn_state::__anon195
sst_stacksize	structs.h	/^    int		sst_stacksize;	\/\/ number of states on the stack$/;"	m	struct:syn_state
sst_tick	structs.h	/^    disptick_T	sst_tick;	\/\/ tick when last displayed$/;"	m	struct:syn_state
sst_union	structs.h	/^    } sst_union;$/;"	m	struct:syn_state	typeref:union:syn_state::__anon195
st_altscore	spellsuggest.c	/^    int		st_altscore;	\/\/ used when st_score compares equal$/;"	m	struct:suggest_S	file:
st_dev	if_cscope.h	/^    dev_t	    st_dev;	\/\/ ID of dev containing cscope db$/;"	m	struct:csi
st_error	regexp_nfa.c	/^st_error(int *postfix UNUSED, int *end UNUSED, int *p UNUSED)$/;"	f	file:
st_fold	spell.h	/^    char_u  st_fold[256];	\/\/ chars: folded case$/;"	m	struct:spelltab_S
st_had_bonus	spellsuggest.c	/^    int		st_had_bonus;	\/\/ bonus already included in score$/;"	m	struct:suggest_S	file:
st_ino	if_cscope.h	/^    ino_t	    st_ino;	\/\/ inode number of cscope db$/;"	m	struct:csi
st_isu	spell.h	/^    char_u  st_isu[256];	\/\/ flags: is uppercase char$/;"	m	struct:spelltab_S
st_isw	spell.h	/^    char_u  st_isw[256];	\/\/ flags: is word char$/;"	m	struct:spelltab_S
st_orglen	spellsuggest.c	/^    int		st_orglen;	\/\/ length of replaced text$/;"	m	struct:suggest_S	file:
st_pop	regexp_nfa.c	/^st_pop(Frag_T **p, Frag_T *stack)$/;"	f	file:
st_push	regexp_nfa.c	/^st_push(Frag_T s, Frag_T **p, Frag_T *stack_end)$/;"	f	file:
st_salscore	spellsuggest.c	/^    int		st_salscore;	\/\/ st_score is for soundalike$/;"	m	struct:suggest_S	file:
st_score	spellsuggest.c	/^    int		st_score;	\/\/ lower is better$/;"	m	struct:suggest_S	file:
st_slang	spellsuggest.c	/^    slang_T	*st_slang;	\/\/ language used for sound folding$/;"	m	struct:suggest_S	file:
st_u	ex_cmds.c	/^    } st_u;$/;"	m	struct:__anon20	typeref:union:__anon20::__anon21	file:
st_upper	spell.h	/^    char_u  st_upper[256];	\/\/ chars: upper case$/;"	m	struct:spelltab_S
st_word	spellsuggest.c	/^    char_u	*st_word;	\/\/ suggested word, allocated string$/;"	m	struct:suggest_S	file:
st_wordlen	spellsuggest.c	/^    int		st_wordlen;	\/\/ STRLEN(st_word)$/;"	m	struct:suggest_S	file:
stack_base	if_mzsch.c	/^static void *stack_base = NULL;$/;"	v	file:
stack_grows_downwards	os_unix.c	/^static int stack_grows_downwards;$/;"	v	file:
stack_limit	os_unix.c	/^static char *stack_limit = NULL;$/;"	v	file:
stackcookie	os_amiga.c	/^static const char* __attribute__((used)) stackcookie = "$STACK: 1048576";$/;"	v	file:
standend	os_win32.c	/^standend(void)$/;"	f	file:
standout	os_win32.c	/^standout(void)$/;"	f	file:
start	fold.c	/^    int		start;		\/\/ number of folds that are forced to start at$/;"	m	struct:__anon29	file:
start	if_py_both.h	/^    PyInt start;$/;"	m	struct:__anon166
start	popupmenu.c	/^    char_u	*start;$/;"	m	struct:__anon83	file:
start	regexp.h	/^    nfa_state_T		*start;		\/\/ points into state[]$/;"	m	struct:__anon174
start	regexp_nfa.c	/^	    char_u	*start;$/;"	m	struct:__anon103::__anon104::linepos	file:
start	regexp_nfa.c	/^    nfa_state_T *start;$/;"	m	struct:Frag	file:
start	structs.h	/^	    char_u	    *start;	\/\/ start escape sequence$/;"	m	struct:attr_entry::__anon196::__anon197
start	structs.h	/^    char_u	*start;$/;"	m	struct:stl_hlrec
start	structs.h	/^    pos_T	start;		\/\/ start of the operator$/;"	m	struct:oparg_S
start	vim.h	/^    pos_T	start;		\/\/ Start of selected area$/;"	m	struct:__anon279
startPS	search.c	/^startPS(linenr_T lnum, int para, int both)$/;"	f
startRange	gui_mac.c	/^    long startRange; \/\/ start of selection range (if line < 0)$/;"	m	struct:SelectionRange	file:
start_arrow	edit.c	/^start_arrow($/;"	f
start_arrow_common	edit.c	/^start_arrow_common($/;"	f	file:
start_arrow_with_change	edit.c	/^start_arrow_with_change($/;"	f	file:
start_char_vcols	structs.h	/^    colnr_T	start_char_vcols; \/\/ number of vcols of pre-block char$/;"	m	struct:block_def
start_col	regexp_nfa.c	/^	    colnr_T	start_col;$/;"	m	struct:__anon103::__anon104::multipos	file:
start_col_nr	ex_cmds.c	/^	    varnumber_T	start_col_nr;	\/\/ starting column number$/;"	m	struct:__anon20::__anon21::__anon22	file:
start_dir	main.c	/^static char_u *start_dir = NULL;	\/\/ current working dir on startup$/;"	v	file:
start_global_changes	ui.c	/^start_global_changes(void)$/;"	f
start_lnum	regexp_nfa.c	/^	    linenr_T	start_lnum;$/;"	m	struct:__anon103::__anon104::multipos	file:
start_redo	getchar.c	/^start_redo(long count, int old_redo)$/;"	f
start_redo_ins	getchar.c	/^start_redo_ins(void)$/;"	f
start_search_hl	screen.c	/^start_search_hl(void)$/;"	f
start_selection	normal.c	/^start_selection(void)$/;"	f
start_stuff	getchar.c	/^start_stuff(void)$/;"	f	file:
start_vcol	structs.h	/^    colnr_T	start_vcol;	\/\/ start col for block mode operator$/;"	m	struct:oparg_S
start_vcol	structs.h	/^    colnr_T	start_vcol;	\/\/ start col of 1st char wholly inside block$/;"	m	struct:block_def
start_xterm_trace	os_unix.c	/^start_xterm_trace(int button)$/;"	f
startcol	structs.h	/^    colnr_T	startcol;   \/\/ in win_line() points to char where HL starts$/;"	m	struct:__anon240
starting	globals.h	/^EXTERN int	starting INIT(= NO_SCREEN);$/;"	v
starting	gui.h	/^    int		starting;	    \/\/ GUI will start in a little while$/;"	m	struct:Gui
startp	regexp.h	/^    char_u		*startp[NSUBEXP];$/;"	m	struct:__anon175
startpos	regexp.h	/^    lpos_T		startpos[NSUBEXP];$/;"	m	struct:__anon176
startspaces	structs.h	/^    int		startspaces;	\/\/ 'extra' cols before first char$/;"	m	struct:block_def
starttermcap	term.c	/^starttermcap(void)$/;"	f
starttime	globals.h	/^EXTERN time_T starttime;$/;"	v
startup_mzscheme	if_mzsch.c	/^startup_mzscheme(void)$/;"	f	file:
stat	os_mswin.c	442;"	d	file:
stat	os_mswin.c	446;"	d	file:
statDone	gui_at_fs.c	/^    int		statDone;$/;"	m	struct:__anon31	file:
stat_T	vim.h	/^typedef struct _stat64 stat_T;$/;"	t	typeref:struct:_stat64
stat_T	vim.h	/^typedef struct stat stat_T;$/;"	t	typeref:struct:stat
state	beval.h	/^    unsigned int	state;		\/\/ Button\/Modifier key state$/;"	m	struct:BalloonEvalStruct
state	regexp.h	/^    nfa_state_T		state[1];	\/\/ actually longer..$/;"	m	struct:__anon174
state	regexp_nfa.c	/^    nfa_state_T	*state;		\/\/ the invisible match start state$/;"	m	struct:nfa_pim_S	file:
state	regexp_nfa.c	/^    nfa_state_T	*state;$/;"	m	struct:__anon107	file:
state	structs.h	/^  UINT32_T state[8];$/;"	m	struct:__anon250
state	vim.h	/^    short_u	state;		\/\/ Current selection state$/;"	m	struct:__anon279
state_T	spellsuggest.c	/^} state_T;$/;"	t	typeref:enum:__anon112	file:
state_in_list	regexp_nfa.c	/^state_in_list($/;"	f	file:
state_item	syntax.c	/^typedef struct state_item$/;"	s	file:
state_no_longer_safe	main.c	/^state_no_longer_safe(char *reason UNUSED)$/;"	f
state_ptr	regexp_nfa.c	/^static nfa_state_T	*state_ptr; \/\/ points to nfa_prog->state$/;"	v	file:
stateitem_T	syntax.c	/^} stateitem_T;$/;"	t	typeref:struct:state_item	file:
static	gui_gtk_x11.c	2579;"	d	file:
static	gui_gtk_x11.c	2589;"	d	file:
staticList10_T	structs.h	/^} staticList10_T;$/;"	t	typeref:struct:__anon210
status_area_enabled	mbyte.c	/^static int	status_area_enabled = TRUE;$/;"	v	file:
status_height	gui.h	/^    int		status_height;	\/\/ Height of status line$/;"	m	struct:GuiScrollbar
status_match_len	screen.c	/^status_match_len(expand_T *xp, char_u *s)$/;"	f	file:
status_redraw_all	drawscreen.c	/^status_redraw_all(void)$/;"	f
status_redraw_curbuf	drawscreen.c	/^status_redraw_curbuf(void)$/;"	f
stdout_isatty	globals.h	/^EXTERN int	stdout_isatty INIT(= TRUE);	\/\/ is stdout a terminal?$/;"	v
step	mbyte.c	/^    int step;$/;"	m	struct:__anon69	file:
stipple_bitmap	gui_xmebwp.h	/^    Pixmap stipple_bitmap;$/;"	m	struct:_XmEnhancedButtonClassPart
stipple_bits	gui_xmebw.c	/^static char stipple_bits[] = { 0x0a, 0x05, 0x0a, 0x05 };$/;"	v	file:
stipple_height	gui_xmebw.c	111;"	d	file:
stipple_width	gui_xmebw.c	110;"	d	file:
stl_connected	screen.c	/^stl_connected(win_T *wp)$/;"	f
stl_hlrec	structs.h	/^struct stl_hlrec$/;"	s
stl_syntax	globals.h	/^EXTERN int      stl_syntax INIT(= 0);$/;"	v
stock_vim_icons	gui_gtk.c	/^static IconNames stock_vim_icons[] = {$/;"	v	file:
stoggle_callback	gui_xmdlg.c	/^stoggle_callback(Widget w UNUSED,$/;"	f	file:
stop	structs.h	/^	    char_u	    *stop;	\/\/ stop escape sequence$/;"	m	struct:attr_entry::__anon196::__anon197
stop_all_timers	time.c	/^stop_all_timers(void)$/;"	f	file:
stop_arrow	edit.c	/^stop_arrow(void)$/;"	f
stop_insert	edit.c	/^stop_insert($/;"	f	file:
stop_insert_mode	globals.h	/^EXTERN int	stop_insert_mode;	\/\/ for ":stopinsert" and 'insertmode'$/;"	v
stop_redo_ins	getchar.c	/^stop_redo_ins(void)$/;"	f
stop_timer	time.c	/^stop_timer(timer_T *timer)$/;"	f
stop_xterm_trace	os_unix.c	/^stop_xterm_trace(void)$/;"	f
stoptermcap	term.c	/^stoptermcap(void)$/;"	f
store_aff_word	spellfile.c	/^store_aff_word($/;"	f	file:
store_console_bg_rgb	os_win32.c	/^static guicolor_T store_console_bg_rgb;$/;"	v	file:
store_console_fg_rgb	os_win32.c	/^static guicolor_T store_console_fg_rgb;$/;"	v	file:
store_current_state	syntax.c	/^store_current_state(void)$/;"	f	file:
store_loop_line	ex_docmd.c	/^store_loop_line(garray_T *gap, char_u *line)$/;"	f	file:
store_sb_text	message.c	/^store_sb_text($/;"	f	file:
store_session_globals	session.c	/^store_session_globals(FILE *fd)$/;"	f	file:
store_var	vim9execute.c	/^store_var(char_u *name, typval_T *tv)$/;"	f	file:
store_word	spellfile.c	/^store_word($/;"	f	file:
storenr	vim9.h	/^	storenr_T	    storenr;$/;"	m	union:__anon276::__anon277
storenr_T	vim9.h	/^} storenr_T;$/;"	t	typeref:struct:__anon272
storeopt	vim9.h	/^	storeopt_T	    storeopt;$/;"	m	union:__anon276::__anon277
storeopt_T	vim9.h	/^} storeopt_T;$/;"	t	typeref:struct:__anon273
stp_sal_score	spellsuggest.c	/^stp_sal_score($/;"	f	file:
str2special	message.c	/^str2special($/;"	f
str2special_save	message.c	/^str2special_save($/;"	f
str2specialbuf	message.c	/^str2specialbuf(char_u *sp, char_u *buf, int len)$/;"	f
str_equal	spellfile.c	/^str_equal(char_u *s1, char_u *s2)$/;"	f	file:
str_foldcase	charset.c	/^str_foldcase($/;"	f
str_idx	vim9.h	/^    int		str_idx;$/;"	m	struct:__anon272
str_to_reg	register.c	/^str_to_reg($/;"	f	file:
str_val	vim9.h	/^    varnumber_T	str_val;$/;"	m	struct:__anon272
streq	netbeans.c	963;"	d	file:
strerror	os_unix.c	/^strerror(int err)$/;"	f	file:
strerror_win32	channel.c	/^strerror_win32(int eno)$/;"	f	file:
string	hardcopy.c	/^    char	*string;$/;"	m	struct:prt_dsc_comment_S	file:
string	hardcopy.c	/^    char_u	*string;$/;"	m	struct:prt_dsc_line_S	file:
string	os_vms.c	/^    ITEM	string;$/;"	m	struct:__anon81	file:
string	structs.h	/^    char_u	*string;	\/\/ points into option string$/;"	m	struct:__anon245
string	vim9.h	/^	char_u		    *string;$/;"	m	union:__anon276::__anon277
string2blob	blob.c	/^string2blob(char_u *str)$/;"	f
string2float	eval.c	/^string2float($/;"	f
string_convert	mbyte.c	/^string_convert($/;"	f
string_convert_ext	mbyte.c	/^string_convert_ext($/;"	f
string_quote	eval.c	/^string_quote(char_u *str, int function)$/;"	f
string_to_key	option.c	/^string_to_key(char_u *arg, int multi_byte)$/;"	f
string_to_line	if_mzsch.c	/^string_to_line(Scheme_Object *obj)$/;"	f	file:
strings	if_xcmdsrv.c	/^    garray_T strings;$/;"	m	struct:ServerReply	file:
strings	structs.h	/^    char_u	*strings[MENU_MODES]; \/\/ Mapped string for each mode$/;"	m	struct:VimMenu
strlen	structs.h	/^    int		strlen;$/;"	m	struct:__anon245
strlow_save	misc2.c	/^strlow_save(char_u *orig)$/;"	f
struct_bf_test_data	blowfish.c	/^} struct_bf_test_data;$/;"	t	typeref:struct:__anon3	file:
strup_save	misc2.c	/^strup_save(char_u *orig)$/;"	f
stub_GetFileInformationByHandleEx	iscygpty.c	/^static BOOL WINAPI stub_GetFileInformationByHandleEx($/;"	f	file:
stubs_initialized	if_tcl.c	/^static int stubs_initialized = FALSE;$/;"	v	file:
stuffReadbuff	getchar.c	/^stuffReadbuff(char_u *s)$/;"	f
stuffReadbuffLen	getchar.c	/^stuffReadbuffLen(char_u *s, long len)$/;"	f
stuffReadbuffSpec	getchar.c	/^stuffReadbuffSpec(char_u *s)$/;"	f
stuffRedoReadbuff	getchar.c	/^stuffRedoReadbuff(char_u *s)$/;"	f
stuff_empty	getchar.c	/^stuff_empty(void)$/;"	f
stuff_inserted	edit.c	/^stuff_inserted($/;"	f
stuff_yank	register.c	/^stuff_yank(int regname, char_u *p)$/;"	f	file:
stuffcharReadbuff	getchar.c	/^stuffcharReadbuff(int c)$/;"	f
stuffescaped	ops.c	/^stuffescaped(char_u *arg, int literally)$/;"	f
stuffnumReadbuff	getchar.c	/^stuffnumReadbuff(long n)$/;"	f
style	gui_mac.c	/^    FMFontStyle style;$/;"	m	struct:__anon38	file:
style_callback	gui_xmdlg.c	/^style_callback(Widget w,$/;"	f	file:
style_part	gui_xmdlg.c	/^style_part(char *font, char *buf)$/;"	f	file:
su_badflags	spellsuggest.c	/^    int		su_badflags;	    \/\/ caps flags for bad word$/;"	m	struct:suginfo_S	file:
su_badlen	spellsuggest.c	/^    int		su_badlen;	    \/\/ length of detected bad word in line$/;"	m	struct:suginfo_S	file:
su_badptr	spellsuggest.c	/^    char_u	*su_badptr;	    \/\/ start of bad word in line$/;"	m	struct:suginfo_S	file:
su_badword	spellsuggest.c	/^    char_u	su_badword[MAXWLEN]; \/\/ bad word truncated at su_badlen$/;"	m	struct:suginfo_S	file:
su_banned	spellsuggest.c	/^    hashtab_T	su_banned;	    \/\/ table with banned words$/;"	m	struct:suginfo_S	file:
su_fbadword	spellsuggest.c	/^    char_u	su_fbadword[MAXWLEN]; \/\/ su_badword case-folded$/;"	m	struct:suginfo_S	file:
su_ga	spellsuggest.c	/^    garray_T	su_ga;		    \/\/ suggestions, contains "suggest_T"$/;"	m	struct:suginfo_S	file:
su_maxcount	spellsuggest.c	/^    int		su_maxcount;	    \/\/ max. number of suggestions displayed$/;"	m	struct:suginfo_S	file:
su_maxscore	spellsuggest.c	/^    int		su_maxscore;	    \/\/ maximum score for adding to su_ga$/;"	m	struct:suginfo_S	file:
su_sal_badword	spellsuggest.c	/^    char_u	su_sal_badword[MAXWLEN]; \/\/ su_badword soundfolded$/;"	m	struct:suginfo_S	file:
su_sallang	spellsuggest.c	/^    slang_T	*su_sallang;	    \/\/ default language for sound folding$/;"	m	struct:suginfo_S	file:
su_sfmaxscore	spellsuggest.c	/^    int		su_sfmaxscore;	    \/\/ idem, for when doing soundfold words$/;"	m	struct:suginfo_S	file:
su_sga	spellsuggest.c	/^    garray_T	su_sga;		    \/\/ like su_ga, sound-folded scoring$/;"	m	struct:suginfo_S	file:
sub_equal	regexp_nfa.c	/^sub_equal(regsub_T *sub1, regsub_T *sub2)$/;"	f	file:
sub_logfont	gui_w32.c	/^static LOGFONTW sub_logfont;$/;"	v	file:
sub_nlines	globals.h	/^EXTERN linenr_T	sub_nlines;	\/\/ total number of lines changed$/;"	v
sub_nsubs	globals.h	/^EXTERN long	sub_nsubs;	\/\/ total number of substitutions$/;"	v
sub_process_writer	os_win32.c	/^sub_process_writer(LPVOID param)$/;"	f	file:
subcommand	syntax.c	/^struct subcommand$/;"	s	file:
subcommands	syntax.c	/^static struct subcommand subcommands[] =$/;"	v	typeref:struct:subcommand	file:
subflags_T	ex_cmds.c	/^} subflags_T;$/;"	t	typeref:struct:__anon24	file:
submenu_change	gui_motif.c	/^submenu_change($/;"	f	file:
submenu_handle	structs.h	/^    MenuHandle	submenu_handle;$/;"	m	struct:VimMenu
submenu_id	structs.h	/^    BMenu  *submenu_id;		    \/\/ If this is submenu, add children here$/;"	m	struct:VimMenu
submenu_id	structs.h	/^    GtkWidget	*submenu_id;	    \/\/ If this is submenu, add children here$/;"	m	struct:VimMenu
submenu_id	structs.h	/^    HMENU	submenu_id;	    \/\/ If this is submenu, add children here$/;"	m	struct:VimMenu
submenu_id	structs.h	/^    PtWidget_t	*submenu_id;$/;"	m	struct:VimMenu
submenu_id	structs.h	/^    Widget	submenu_id;	    \/\/ If this is submenu, add children here$/;"	m	struct:VimMenu
submenu_id	structs.h	/^    short	submenu_id;	    \/\/ the menu id of the children (could be$/;"	m	struct:VimMenu
submenu_widget	gui_athena.c	/^submenu_widget(Widget widget)$/;"	f	file:
subs	regexp_nfa.c	/^    regsubs_T	subs;		\/\/ submatch info, only party used$/;"	m	struct:__anon107	file:
subs	regexp_nfa.c	/^    regsubs_T	subs;		\/\/ submatch info, only party used$/;"	m	struct:nfa_pim_S	file:
sug_compare	spellsuggest.c	/^sug_compare(const void *s1, const void *s2)$/;"	f	file:
sug_filltable	spellfile.c	/^sug_filltable($/;"	f	file:
sug_filltree	spellfile.c	/^sug_filltree(spellinfo_T *spin, slang_T *slang)$/;"	f	file:
sug_maketable	spellfile.c	/^sug_maketable(spellinfo_T *spin)$/;"	f	file:
sug_write	spellfile.c	/^sug_write(spellinfo_T *spin, char_u *fname)$/;"	f	file:
suggest_S	spellsuggest.c	/^typedef struct suggest_S$/;"	s	file:
suggest_T	spellsuggest.c	/^} suggest_T;$/;"	t	typeref:struct:suggest_S	file:
suggest_load_files	spellfile.c	/^suggest_load_files(void)$/;"	f
suggest_trie_walk	spellsuggest.c	/^suggest_trie_walk($/;"	f	file:
suggest_try_change	spellsuggest.c	/^suggest_try_change(suginfo_T *su)$/;"	f	file:
suggest_try_soundalike	spellsuggest.c	/^suggest_try_soundalike(suginfo_T *su)$/;"	f	file:
suggest_try_soundalike_finish	spellsuggest.c	/^suggest_try_soundalike_finish(void)$/;"	f	file:
suggest_try_soundalike_prep	spellsuggest.c	/^suggest_try_soundalike_prep(void)$/;"	f	file:
suggest_try_special	spellsuggest.c	/^suggest_try_special(suginfo_T *su)$/;"	f	file:
suginfo_S	spellsuggest.c	/^typedef struct suginfo_S$/;"	s	file:
suginfo_T	spellsuggest.c	/^} suginfo_T;$/;"	t	typeref:struct:suginfo_S	file:
supermenuTrans	gui_athena.c	/^static XtTranslations	popupTrans, parentTrans, menuTrans, supermenuTrans;$/;"	v	file:
suppress_dialog_mnemonics	gui_motif.c	/^suppress_dialog_mnemonics(Widget dialog)$/;"	f	file:
suppress_errthrow	globals.h	/^EXTERN int suppress_errthrow INIT(= FALSE);$/;"	v
suppress_winsize	os_win32.c	/^static int suppress_winsize = 1;	\/\/ don't fiddle with console$/;"	v	file:
surface	gui.h	/^    cairo_surface_t *surface;       \/\/ drawarea surface$/;"	m	struct:Gui
surrogate_pending_ch	gui_w32.c	/^static UINT	surrogate_pending_ch = 0; \/\/ 0: no surrogate pending,$/;"	v	file:
suspend_shell	ui.c	/^suspend_shell(void)$/;"	f
sv_const	structs.h	/^    int		sv_const;$/;"	m	struct:__anon215
sv_dict	structs.h	/^    dict_T	sv_dict;$/;"	m	struct:__anon214
sv_export	structs.h	/^    int		sv_export;	\/\/ "export let var = val"$/;"	m	struct:__anon215
sv_name	structs.h	/^    char_u	*sv_name;	\/\/ points into "sn_vars" di_key$/;"	m	struct:__anon215
sv_tv	structs.h	/^    typval_T	*sv_tv;		\/\/ points into "sn_vars" di_tv$/;"	m	struct:__anon215
sv_type	structs.h	/^    type_T	*sv_type;$/;"	m	struct:__anon215
sv_var	structs.h	/^    dictitem_T	sv_var;$/;"	m	struct:__anon214
svar_T	structs.h	/^} svar_T;$/;"	t	typeref:struct:__anon215
swap_exists_action	globals.h	/^EXTERN int	swap_exists_action INIT(= SEA_NONE);$/;"	v
swap_exists_did_quit	globals.h	/^EXTERN int	swap_exists_did_quit INIT(= FALSE);$/;"	v
swap_me	os_mswin.c	/^swap_me(COLORREF colorref)$/;"	f	file:
swap_tcap	term.c	/^swap_tcap(void)$/;"	f
swapchar	ops.c	/^swapchar(int op_type, pos_T *pos)$/;"	f
swapchars	ops.c	/^swapchars(int op_type, pos_T *pos, int length)$/;"	f	file:
swapfile_info	memline.c	/^swapfile_info(char_u *fname)$/;"	f	file:
swapfile_unchanged	memline.c	/^swapfile_unchanged(char_u *fname)$/;"	f	file:
swapping_screen	term.c	/^swapping_screen(void)$/;"	f
swb_flags	option.h	/^EXTERN unsigned	swb_flags;$/;"	v
switch_buffer	evalbuffer.c	/^switch_buffer(bufref_T *save_curbuf, buf_T *buf)$/;"	f
switch_to_8bit	term.c	/^switch_to_8bit(void)$/;"	f	file:
switch_to_win_for_buf	evalbuffer.c	/^switch_to_win_for_buf($/;"	f
switch_win	evalwindow.c	/^switch_win($/;"	f
switch_win_noblock	evalwindow.c	/^switch_win_noblock($/;"	f
sy_chars	spell.c	/^    char_u	sy_chars[SY_MAXLEN];	    \/\/ the sequence of chars$/;"	m	struct:syl_item_S	file:
sy_len	spell.c	/^    int		sy_len;$/;"	m	struct:syl_item_S	file:
syl_item_S	spell.c	/^typedef struct syl_item_S$/;"	s	file:
syl_item_T	spell.c	/^} syl_item_T;$/;"	t	typeref:struct:syl_item_S	file:
symbol_from_dll	if_lua.c	89;"	d	file:
symbol_from_dll	if_lua.c	93;"	d	file:
symbol_from_dll	if_python.c	139;"	d	file:
symbol_from_dll	if_python.c	143;"	d	file:
symbol_from_dll	if_python3.c	124;"	d	file:
symbol_from_dll	if_python3.c	128;"	d	file:
symbol_from_dll	if_ruby.c	166;"	d	file:
symbol_from_dll	if_ruby.c	171;"	d	file:
symbol_from_dll	if_tcl.c	168;"	d	file:
symbol_from_dll	if_tcl.c	173;"	d	file:
syn_add_cluster	syntax.c	/^syn_add_cluster(char_u *name)$/;"	f	file:
syn_add_end_off	syntax.c	/^syn_add_end_off($/;"	f	file:
syn_add_group	highlight.c	/^syn_add_group(char_u *name)$/;"	f	file:
syn_add_start_off	syntax.c	/^syn_add_start_off($/;"	f	file:
syn_attr2attr	highlight.c	/^syn_attr2attr(int attr)$/;"	f
syn_block	syntax.c	/^static synblock_T *syn_block;		\/\/ current buffer for highlighting$/;"	v	file:
syn_buf	syntax.c	/^static buf_T	*syn_buf;		\/\/ current buffer for highlighting$/;"	v	file:
syn_check_cluster	syntax.c	/^syn_check_cluster(char_u *pp, int len)$/;"	f	file:
syn_check_group	highlight.c	/^syn_check_group(char_u *pp, int len)$/;"	f
syn_clear_cluster	syntax.c	/^syn_clear_cluster(synblock_T *block, int i)$/;"	f	file:
syn_clear_keyword	syntax.c	/^syn_clear_keyword(int id, hashtab_T *ht)$/;"	f	file:
syn_clear_one	syntax.c	/^syn_clear_one(int id, int syncing)$/;"	f	file:
syn_clear_pattern	syntax.c	/^syn_clear_pattern(synblock_T *block, int i)$/;"	f	file:
syn_clear_time	syntax.c	/^syn_clear_time(syn_time_T *st)$/;"	f	file:
syn_cluster_S	syntax.c	/^typedef struct syn_cluster_S$/;"	s	file:
syn_cluster_T	syntax.c	/^} syn_cluster_T;$/;"	t	typeref:struct:syn_cluster_S	file:
syn_cmd_case	syntax.c	/^syn_cmd_case(exarg_T *eap, int syncing UNUSED)$/;"	f	file:
syn_cmd_clear	syntax.c	/^syn_cmd_clear(exarg_T *eap, int syncing)$/;"	f	file:
syn_cmd_cluster	syntax.c	/^syn_cmd_cluster(exarg_T *eap, int syncing UNUSED)$/;"	f	file:
syn_cmd_conceal	syntax.c	/^syn_cmd_conceal(exarg_T *eap UNUSED, int syncing UNUSED)$/;"	f	file:
syn_cmd_enable	syntax.c	/^syn_cmd_enable(exarg_T *eap, int syncing UNUSED)$/;"	f	file:
syn_cmd_include	syntax.c	/^syn_cmd_include(exarg_T *eap, int syncing UNUSED)$/;"	f	file:
syn_cmd_iskeyword	syntax.c	/^syn_cmd_iskeyword(exarg_T *eap, int syncing UNUSED)$/;"	f	file:
syn_cmd_keyword	syntax.c	/^syn_cmd_keyword(exarg_T *eap, int syncing UNUSED)$/;"	f	file:
syn_cmd_list	syntax.c	/^syn_cmd_list($/;"	f	file:
syn_cmd_manual	syntax.c	/^syn_cmd_manual(exarg_T *eap, int syncing UNUSED)$/;"	f	file:
syn_cmd_match	syntax.c	/^syn_cmd_match($/;"	f	file:
syn_cmd_off	syntax.c	/^syn_cmd_off(exarg_T *eap, int syncing UNUSED)$/;"	f	file:
syn_cmd_on	syntax.c	/^syn_cmd_on(exarg_T *eap, int syncing UNUSED)$/;"	f	file:
syn_cmd_onoff	syntax.c	/^syn_cmd_onoff(exarg_T *eap, char *name)$/;"	f	file:
syn_cmd_region	syntax.c	/^syn_cmd_region($/;"	f	file:
syn_cmd_reset	syntax.c	/^syn_cmd_reset(exarg_T *eap, int syncing UNUSED)$/;"	f	file:
syn_cmd_spell	syntax.c	/^syn_cmd_spell(exarg_T *eap, int syncing UNUSED)$/;"	f	file:
syn_cmd_sync	syntax.c	/^syn_cmd_sync(exarg_T *eap, int syncing UNUSED)$/;"	f	file:
syn_cmdlinep	syntax.c	/^static char_u **syn_cmdlinep;$/;"	v	file:
syn_combine_list	syntax.c	/^syn_combine_list(short **clstr1, short **clstr2, int list_op)$/;"	f	file:
syn_compare_stub	syntax.c	/^syn_compare_stub(const void *v1, const void *v2)$/;"	f	file:
syn_compare_syntime	syntax.c	/^syn_compare_syntime(const void *v1, const void *v2)$/;"	f	file:
syn_cterm_attr2entry	highlight.c	/^syn_cterm_attr2entry(int attr)$/;"	f
syn_current_attr	syntax.c	/^syn_current_attr($/;"	f	file:
syn_finish_line	syntax.c	/^syn_finish_line($/;"	f	file:
syn_get_final_id	highlight.c	/^syn_get_final_id(int hl_id)$/;"	f
syn_get_foldlevel	syntax.c	/^syn_get_foldlevel(win_T *wp, long lnum)$/;"	f
syn_get_id	syntax.c	/^syn_get_id($/;"	f
syn_get_stack_item	syntax.c	/^syn_get_stack_item(int i)$/;"	f
syn_get_sub_char	syntax.c	/^syn_get_sub_char(void)$/;"	f
syn_getcurline	syntax.c	/^syn_getcurline(void)$/;"	f	file:
syn_gui_attr2entry	highlight.c	/^syn_gui_attr2entry(int attr)$/;"	f
syn_id2attr	highlight.c	/^syn_id2attr(int hl_id)$/;"	f
syn_id2colors	highlight.c	/^syn_id2colors(int hl_id, guicolor_T *fgp, guicolor_T *bgp)$/;"	f
syn_id2cterm_bg	highlight.c	/^syn_id2cterm_bg(int hl_id, int *fgp, int *bgp)$/;"	f
syn_id2name	highlight.c	/^syn_id2name(int id)$/;"	f
syn_incl_toplevel	syntax.c	/^syn_incl_toplevel(int id, int *flagsp)$/;"	f	file:
syn_lines_msg	syntax.c	/^syn_lines_msg(void)$/;"	f	file:
syn_list_cluster	syntax.c	/^syn_list_cluster(int id)$/;"	f	file:
syn_list_flags	syntax.c	/^syn_list_flags(struct name_list *nlist, int flags, int attr)$/;"	f	file:
syn_list_header	highlight.c	/^syn_list_header($/;"	f
syn_list_keywords	syntax.c	/^syn_list_keywords($/;"	f	file:
syn_list_one	syntax.c	/^syn_list_one($/;"	f	file:
syn_match_linecont	syntax.c	/^syn_match_linecont(linenr_T lnum)$/;"	f	file:
syn_match_msg	syntax.c	/^syn_match_msg(void)$/;"	f	file:
syn_name2attr	highlight.c	/^syn_name2attr(char_u *name)$/;"	f
syn_name2id	highlight.c	/^syn_name2id(char_u *name)$/;"	f
syn_namen2id	highlight.c	/^syn_namen2id(char_u *linep, int len)$/;"	f
syn_opt_arg_T	syntax.c	/^} syn_opt_arg_T;$/;"	t	typeref:struct:__anon115	file:
syn_pattern	syntax.c	/^typedef struct syn_pattern$/;"	s	file:
syn_regexec	syntax.c	/^syn_regexec($/;"	f	file:
syn_remove_pattern	syntax.c	/^syn_remove_pattern($/;"	f	file:
syn_scl_name2id	syntax.c	/^syn_scl_name2id(char_u *name)$/;"	f	file:
syn_scl_namen2id	syntax.c	/^syn_scl_namen2id(char_u *linep, int len)$/;"	f	file:
syn_set_timeout	syntax.c	/^syn_set_timeout(proftime_T *tm)$/;"	f
syn_stack_alloc	syntax.c	/^syn_stack_alloc(void)$/;"	f	file:
syn_stack_apply_changes	syntax.c	/^syn_stack_apply_changes(buf_T *buf)$/;"	f
syn_stack_apply_changes_block	syntax.c	/^syn_stack_apply_changes_block(synblock_T *block, buf_T *buf)$/;"	f	file:
syn_stack_cleanup	syntax.c	/^syn_stack_cleanup(void)$/;"	f	file:
syn_stack_equal	syntax.c	/^syn_stack_equal(synstate_T *sp)$/;"	f	file:
syn_stack_find_entry	syntax.c	/^syn_stack_find_entry(linenr_T lnum)$/;"	f	file:
syn_stack_free_all	syntax.c	/^syn_stack_free_all(synblock_T *block)$/;"	f
syn_stack_free_block	syntax.c	/^syn_stack_free_block(synblock_T *block)$/;"	f	file:
syn_stack_free_entry	syntax.c	/^syn_stack_free_entry(synblock_T *block, synstate_T *p)$/;"	f	file:
syn_start_line	syntax.c	/^syn_start_line(void)$/;"	f	file:
syn_state	structs.h	/^struct syn_state$/;"	s
syn_sync	syntax.c	/^syn_sync($/;"	f	file:
syn_term_attr2entry	highlight.c	/^syn_term_attr2entry(int attr)$/;"	f
syn_time_T	structs.h	/^} syn_time_T;$/;"	t	typeref:struct:__anon235
syn_time_T	syntax.c	/^typedef int syn_time_T;$/;"	t	file:
syn_time_on	syntax.c	/^static int syn_time_on = FALSE;$/;"	v	file:
syn_tm	syntax.c	/^static proftime_T *syn_tm;		\/\/ timeout limit$/;"	v	file:
syn_unadd_group	highlight.c	/^syn_unadd_group(void)$/;"	f	file:
syn_update_ends	syntax.c	/^syn_update_ends(int startofline)$/;"	f	file:
syn_win	syntax.c	/^static win_T	*syn_win;		\/\/ current window for highlighting$/;"	v	file:
synblock_T	structs.h	/^} synblock_T;$/;"	t	typeref:struct:__anon239
sync_idx	syntax.c	/^    int		*sync_idx;	\/\/ syntax item for "grouphere" argument, NULL$/;"	m	struct:__anon115	file:
synpat_T	syntax.c	/^} synpat_T;$/;"	t	typeref:struct:syn_pattern	file:
synstate_T	structs.h	/^typedef struct syn_state synstate_T;$/;"	t	typeref:struct:syn_state
synt	regexp_nfa.c	/^    regsub_T	synt; \/\/ \\z( .. \\) matches$/;"	m	struct:__anon105	file:
syntax_check_changed	syntax.c	/^syntax_check_changed(linenr_T lnum)$/;"	f
syntax_clear	syntax.c	/^syntax_clear(synblock_T *block)$/;"	f
syntax_end_parsing	syntax.c	/^syntax_end_parsing(linenr_T lnum)$/;"	f
syntax_present	syntax.c	/^syntax_present(win_T *win)$/;"	f
syntax_start	syntax.c	/^syntax_start(win_T *wp, linenr_T lnum)$/;"	f
syntax_sync_clear	syntax.c	/^syntax_sync_clear(void)$/;"	f	file:
syntime_clear	syntax.c	/^syntime_clear(void)$/;"	f	file:
syntime_report	syntax.c	/^syntime_report(void)$/;"	f	file:
sys_menu	globals.h	/^EXTERN int	sys_menu INIT(= FALSE);$/;"	v
sysdrive	dosinst.h	/^char	*sysdrive;		\/\/ system drive or "c:\\"$/;"	v
sysmouse_close	os_unix.c	/^sysmouse_close(void)$/;"	f	file:
sysmouse_open	os_unix.c	/^sysmouse_open(void)$/;"	f	file:
szAppName	os_mswin.c	/^static char_u		szAppName[] = TEXT("VIM");$/;"	v	file:
szText	gui_w32.c	/^    WCHAR	szText[80];$/;"	m	struct:tagNMTTDISPINFOW	file:
szText	gui_w32.c	/^    WCHAR      szText[80];$/;"	m	struct:tagNMTTDISPINFOW_NEW	file:
szText	gui_w32.c	/^    char	szText[80];$/;"	m	struct:tagNMTTDISPINFOA	file:
szText	gui_w32.c	/^    char       szText[80];$/;"	m	struct:tagNMTTDISPINFO_NEW	file:
t	regexp_nfa.c	/^    nfa_thread_T    *t;		\/\/ allocated array of states$/;"	m	struct:__anon108	file:
t_colors	globals.h	/^EXTERN int	t_colors INIT(= 0);	    \/\/ int value of T_CCO$/;"	v
t_puts	message.c	/^t_puts($/;"	f	file:
ta_len	ui.c	/^static int ta_len;	\/\/ length of ta_str when it's not NULL$/;"	v	file:
ta_off	ui.c	/^static int ta_off;	\/\/ offset for next char to use when ta_str != NULL$/;"	v	file:
ta_str	ui.c	/^static char_u *ta_str = NULL;$/;"	v	file:
tab	if_py_both.h	/^    tabpage_T	*tab;$/;"	m	struct:__anon161
tab	structs.h	/^    int		tab;			\/\/ > 0 when ":tab" was used$/;"	m	struct:__anon191
tabLabels	gui_mac.c	/^static CFStringRef *tabLabels = NULL;$/;"	v	file:
tabLabelsSize	gui_mac.c	/^static int tabLabelsSize = 0;$/;"	v	file:
tabLine	gui_motif.c	/^static Widget	tabLine;$/;"	v	file:
tabLine_menu	gui_motif.c	/^static Widget	tabLine_menu = 0;$/;"	v	file:
tabObject	if_py_both.h	/^    TabPageObject	*tabObject;$/;"	m	struct:__anon163
tabObject	if_py_both.h	/^    TabPageObject	*tabObject;$/;"	m	struct:__anon164
tabline	gui.h	/^    GtkWidget	*tabline;	    \/\/ tab pages line handle$/;"	m	struct:Gui
tabline_balloon_cb	gui_motif.c	/^tabline_balloon_cb(BalloonEval *beval, int state UNUSED)$/;"	f	file:
tabline_button_cb	gui_motif.c	/^tabline_button_cb($/;"	f	file:
tabline_cb	gui_motif.c	/^tabline_cb($/;"	f	file:
tabline_height	gui.h	/^    int		tabline_height;$/;"	m	struct:Gui
tabline_height	window.c	/^tabline_height(void)$/;"	f
tabline_menu	gui_gtk_x11.c	/^static GtkWidget *tabline_menu;$/;"	v	file:
tabline_menu_cb	gui_motif.c	/^tabline_menu_cb($/;"	f	file:
tabline_menu_handler	gui_gtk_x11.c	/^tabline_menu_handler(GtkMenuItem *item UNUSED, gpointer user_data)$/;"	f	file:
tabline_scroller_clicked	gui_motif.c	/^tabline_scroller_clicked($/;"	f	file:
tabline_tooltip	gui_gtk_x11.c	/^static GtkTooltips *tabline_tooltip;$/;"	v	file:
tabline_wndproc	gui_w32.c	/^tabline_wndproc($/;"	f	file:
tabpage_S	structs.h	/^struct tabpage_S$/;"	s
tabpage_T	structs.h	/^typedef struct tabpage_S tabpage_T;$/;"	t	typeref:struct:tabpage_S
tabpage_close	ex_docmd.c	/^tabpage_close(int forceit)$/;"	f
tabpage_close_other	ex_docmd.c	/^tabpage_close_other(tabpage_T *tp, int forceit)$/;"	f
tabpage_index	window.c	/^tabpage_index(tabpage_T *ftp)$/;"	f
tabpage_move	window.c	/^tabpage_move(int nr)$/;"	f
tabpage_new	ex_docmd.c	/^tabpage_new(void)$/;"	f
tabstop_at	indent.c	/^tabstop_at(colnr_T col, int ts, int *vts)$/;"	f
tabstop_copy	indent.c	/^tabstop_copy(int *oldts)$/;"	f
tabstop_count	indent.c	/^tabstop_count(int *ts)$/;"	f
tabstop_eq	indent.c	/^tabstop_eq(int *ts1, int *ts2)$/;"	f	file:
tabstop_first	indent.c	/^tabstop_first(int *ts)$/;"	f
tabstop_fromto	indent.c	/^tabstop_fromto($/;"	f
tabstop_padding	indent.c	/^tabstop_padding(colnr_T col, int ts_arg, int *vts)$/;"	f
tabstop_set	indent.c	/^tabstop_set(char_u *var, int **array)$/;"	f
tabstop_start	indent.c	/^tabstop_start(colnr_T col, int ts, int *vts)$/;"	f
tabuf	structs.h	/^    tasave_T	tabuf;$/;"	m	struct:__anon253
tagCOMPOSITIONFORM	gui_w32.c	/^typedef struct tagCOMPOSITIONFORM {$/;"	s	file:
tagNMTTDISPINFOA	gui_w32.c	/^typedef struct tagNMTTDISPINFOA {$/;"	s	file:
tagNMTTDISPINFOW	gui_w32.c	/^typedef struct tagNMTTDISPINFOW {$/;"	s	file:
tagNMTTDISPINFOW_NEW	gui_w32.c	/^typedef struct tagNMTTDISPINFOW_NEW$/;"	s	file:
tagNMTTDISPINFO_NEW	gui_w32.c	/^typedef struct tagNMTTDISPINFO_NEW$/;"	s	file:
tagTOOLINFOA_NEW	gui_w32.c	/^typedef struct tagTOOLINFOA_NEW$/;"	s	file:
tagTOOLINFOW_NEW	gui_w32.c	/^typedef struct tagTOOLINFOW_NEW$/;"	s	file:
tag_fname	tag.c	/^    char_u	*tag_fname;	\/\/ file name of the tags file. This is used$/;"	m	struct:tag_pointers	file:
tag_fnames	tag.c	/^static garray_T tag_fnames = GA_EMPTY;$/;"	v	file:
tag_freematch	tag.c	/^tag_freematch(void)$/;"	f
tag_full_fname	tag.c	/^tag_full_fname(tagptrs_T *tagp)$/;"	f	file:
tag_pointers	tag.c	/^typedef struct tag_pointers$/;"	s	file:
tag_strnicmp	tag.c	/^tag_strnicmp(char_u *s1, char_u *s2, size_t len)$/;"	f	file:
taggy	structs.h	/^typedef struct taggy$/;"	s
taggy_T	structs.h	/^} taggy_T;$/;"	t	typeref:struct:taggy
tagkind	tag.c	/^    char_u	*tagkind;	\/\/ "kind:" value$/;"	m	struct:tag_pointers	file:
tagkind_end	tag.c	/^    char_u	*tagkind_end;	\/\/ end of tagkind$/;"	m	struct:tag_pointers	file:
taglen_advance	tag.c	/^taglen_advance(int l)$/;"	f	file:
tagline	tag.c	/^    linenr_T	tagline;	\/\/ "line:" value$/;"	m	struct:tag_pointers	file:
tagmatchname	tag.c	/^static char_u	*tagmatchname = NULL;	\/\/ name of last used tag$/;"	v	file:
tagname	structs.h	/^    char_u	*tagname;		\/\/ tag from -t argument$/;"	m	struct:__anon252
tagname	structs.h	/^    char_u	*tagname;	\/\/ tag name$/;"	m	struct:taggy
tagname	tag.c	/^    char_u	*tagname;	\/\/ start of tag name (skip "file:")$/;"	m	struct:tag_pointers	file:
tagname_T	structs.h	/^} tagname_T;$/;"	t	typeref:struct:__anon249
tagname_end	tag.c	/^    char_u	*tagname_end;	\/\/ char after tag name$/;"	m	struct:tag_pointers	file:
tagname_free	tag.c	/^tagname_free(tagname_T *tnp)$/;"	f
tagptrs_T	tag.c	/^} tagptrs_T;$/;"	t	typeref:struct:tag_pointers	file:
tagstack_clear	tag.c	/^tagstack_clear(win_T *wp)$/;"	f	file:
tagstack_clear_entry	tag.c	/^tagstack_clear_entry(taggy_T *item)$/;"	f	file:
tagstack_push_item	tag.c	/^tagstack_push_item($/;"	f	file:
tagstack_push_items	tag.c	/^tagstack_push_items(win_T *wp, list_T *l)$/;"	f	file:
tagstack_set_curidx	tag.c	/^tagstack_set_curidx(win_T *wp, int curidx)$/;"	f	file:
tagstack_shift	tag.c	/^tagstack_shift(win_T *wp)$/;"	f	file:
tail	autocmd.c	/^    char_u	*tail;		\/\/ tail of fname$/;"	m	struct:AutoPatCmd_S	file:
target	beval.h	/^    GtkWidget		*target;	\/\/ widget we are monitoring$/;"	m	struct:BalloonEvalStruct
target_event_cb	gui_beval.c	/^target_event_cb(GtkWidget *widget, GdkEvent *event, gpointer data)$/;"	f	file:
targets	dosinst.h	/^} targets[TARGET_COUNT] =$/;"	v	typeref:struct:__anon141
targets_atom	ui.c	/^static Atom	targets_atom;$/;"	v	file:
tasave_T	structs.h	/^} tasave_T;$/;"	t	typeref:struct:__anon201
tb_buf	structs.h	/^    char_u	*tb_buf;	\/\/ buffer for typed characters$/;"	m	struct:__anon200
tb_buflen	structs.h	/^    int		tb_buflen;	\/\/ size of tb_buf[]$/;"	m	struct:__anon200
tb_change_cnt	structs.h	/^    int		tb_change_cnt;	\/\/ nr of time tb_buf was changed; never zero$/;"	m	struct:__anon200
tb_len	structs.h	/^    int		tb_len;		\/\/ number of valid bytes in tb_buf[]$/;"	m	struct:__anon200
tb_maplen	structs.h	/^    int		tb_maplen;	\/\/ nr of mapped bytes in tb_buf[]$/;"	m	struct:__anon200
tb_no_abbr_cnt	structs.h	/^    int		tb_no_abbr_cnt; \/\/ nr of bytes without abbrev. in tb_buf[]$/;"	m	struct:__anon200
tb_noremap	structs.h	/^    char_u	*tb_noremap;	\/\/ mapping flags for characters in tb_buf[]$/;"	m	struct:__anon200
tb_off	structs.h	/^    int		tb_off;		\/\/ current position in tb_buf[]$/;"	m	struct:__anon200
tb_silent	structs.h	/^    int		tb_silent;	\/\/ nr of silently mapped bytes in tb_buf[]$/;"	m	struct:__anon200
tbis_flags	option.h	/^EXTERN unsigned tbis_flags;$/;"	v
tc_charsets	hardcopy.c	/^static struct prt_ps_charset_S tc_charsets[] =$/;"	v	typeref:struct:prt_ps_charset_S	file:
tc_encodings	hardcopy.c	/^static struct prt_ps_encoding_S tc_encodings[] =$/;"	v	typeref:struct:prt_ps_encoding_S	file:
tc_flags	option.h	/^EXTERN unsigned tc_flags;       \/\/ flags from 'tagcase'$/;"	v
tc_len	term.c	/^static int  tc_len = 0;	    \/\/ current number of entries in termcodes[]$/;"	v	file:
tc_max_len	term.c	/^static int  tc_max_len = 0; \/\/ number of entries that termcodes[] can hold$/;"	v	file:
tcd_catch_idx	vim9execute.c	/^    int	    tcd_catch_idx;	\/\/ instruction of the first catch$/;"	m	struct:__anon133	file:
tcd_caught	vim9execute.c	/^    int	    tcd_caught;		\/\/ catch block entered$/;"	m	struct:__anon133	file:
tcd_finally_idx	vim9execute.c	/^    int	    tcd_finally_idx;	\/\/ instruction of the finally block$/;"	m	struct:__anon133	file:
tcd_frame	vim9execute.c	/^    int	    tcd_frame;		\/\/ ec_frame when ISN_TRY was encountered$/;"	m	struct:__anon133	file:
tcd_return	vim9execute.c	/^    int	    tcd_return;		\/\/ when TRUE return from end of :finally$/;"	m	struct:__anon133	file:
tcl_buffer_free	if_tcl.c	/^tcl_buffer_free(buf_T *buf)$/;"	f
tcl_channel_close	if_tcl.c	/^tcl_channel_close(ClientData instance, Tcl_Interp *interp UNUSED)$/;"	f	file:
tcl_channel_gethandle	if_tcl.c	/^tcl_channel_gethandle($/;"	f	file:
tcl_channel_input	if_tcl.c	/^tcl_channel_input($/;"	f	file:
tcl_channel_output	if_tcl.c	/^tcl_channel_output($/;"	f	file:
tcl_channel_type	if_tcl.c	/^static Tcl_ChannelType tcl_channel_type =$/;"	v	file:
tcl_channel_watch	if_tcl.c	/^tcl_channel_watch(ClientData instance UNUSED, int mask UNUSED)$/;"	f	file:
tcl_enabled	if_tcl.c	/^tcl_enabled(int verbose)$/;"	f
tcl_end	if_tcl.c	/^tcl_end(void)$/;"	f
tcl_funcname_table	if_tcl.c	/^} tcl_funcname_table[] = {$/;"	v	typeref:struct:__anon61	file:
tcl_info	if_tcl.c	/^} tcl_info;$/;"	t	typeref:struct:__anon60	file:
tcl_runtime_link_init	if_tcl.c	/^tcl_runtime_link_init(char *libname, int verbose)$/;"	f	file:
tcl_window_free	if_tcl.c	/^tcl_window_free(win_T *win)$/;"	f
tcldelallrefs	if_tcl.c	/^tcldelallrefs(struct ref *ref)$/;"	f	file:
tcldelthisinterp	if_tcl.c	/^tcldelthisinterp(void)$/;"	f	file:
tcldoexcommand	if_tcl.c	/^tcldoexcommand($/;"	f	file:
tclerrmsg	if_tcl.c	/^tclerrmsg(char *text)$/;"	f	file:
tclexit	if_tcl.c	/^tclexit(int error)$/;"	f	file:
tclfindwin	if_tcl.c	/^tclfindwin(buf_T *buf)$/;"	f	file:
tclgetbuffer	if_tcl.c	/^tclgetbuffer(Tcl_Interp *interp, buf_T *buf)$/;"	f	file:
tclgetlinenum	if_tcl.c	/^tclgetlinenum($/;"	f	file:
tclgetref	if_tcl.c	/^tclgetref($/;"	f	file:
tclgetwindow	if_tcl.c	/^tclgetwindow(Tcl_Interp *interp, win_T *win)$/;"	f	file:
tclinfo	if_tcl.c	/^static tcl_info tclinfo = { NULL, 0, 0, 0, 0, NULL, NULL };$/;"	v	file:
tclinit	if_tcl.c	/^tclinit(exarg_T *eap)$/;"	f	file:
tclmsg	if_tcl.c	/^tclmsg(char *text)$/;"	f	file:
tclsetdelcmd	if_tcl.c	/^tclsetdelcmd($/;"	f	file:
tclsetoption	if_tcl.c	/^tclsetoption($/;"	f	file:
tclupdatevars	if_tcl.c	/^tclupdatevars(void)$/;"	f	file:
tclvimexpr	if_tcl.c	/^tclvimexpr($/;"	f	file:
tearoff_callback	gui_w32.c	/^tearoff_callback($/;"	f	file:
tearoff_handle	structs.h	/^    GtkWidget	*tearoff_handle;$/;"	m	struct:VimMenu
tearoff_handle	structs.h	/^    HWND	tearoff_handle;	    \/\/ hWnd of tearoff if created$/;"	m	struct:VimMenu
tearoff_lookup_menuhandle	gui_w32.c	/^tearoff_lookup_menuhandle($/;"	f	file:
tearoff_val	gui_motif.c	/^static int tearoff_val = (int)XmTEAR_OFF_ENABLED;$/;"	v	file:
temp_count	fileio.c	/^static long	temp_count = 0;		\/\/ Temp filename counter.$/;"	v	file:
tent	termlib.c	/^char	*tent;		      \/\/ Pointer to terminal entry, set by tgetent$/;"	v
term	structs.h	/^	} term;$/;"	m	union:attr_entry::__anon196	typeref:struct:attr_entry::__anon196::__anon197
term	structs.h	/^    char_u	*term;			\/\/ specified terminal name$/;"	m	struct:__anon252
term_7to8bit	term.c	/^term_7to8bit(char_u *p)$/;"	f	file:
term_T	structs.h	/^typedef struct terminal_S	term_T;$/;"	t	typeref:struct:terminal_S
term_after_channel_closed	terminal.c	/^term_after_channel_closed(term_T *term)$/;"	f	file:
term_and_job_init	terminal.c	/^term_and_job_init($/;"	f	file:
term_append_lines	term.c	/^term_append_lines(int line_count)$/;"	f
term_attr_table	highlight.c	/^static garray_T	term_attr_table = {0, 0, 0, 0, NULL};$/;"	v	file:
term_backspace_char	terminal.c	/^static int term_backspace_char = BS;$/;"	v	file:
term_bg_color	term.c	/^term_bg_color(int n)$/;"	f
term_bg_default	term.c	/^term_bg_default(void)$/;"	f
term_bg_rgb_color	term.c	/^term_bg_rgb_color(guicolor_T rgb)$/;"	f
term_change_in_curbuf	terminal.c	/^term_change_in_curbuf(void)$/;"	f
term_channel_closed	terminal.c	/^term_channel_closed(channel_T *ch)$/;"	f
term_check_channel_closed_recently	terminal.c	/^term_check_channel_closed_recently()$/;"	f
term_check_timers	terminal.c	/^term_check_timers(int next_due_arg, proftime_T *now)$/;"	f
term_close_buffer	terminal.c	/^term_close_buffer(buf_T *buf, buf_T *old_curbuf)$/;"	f	file:
term_color	term.c	/^term_color(char_u *s, int n)$/;"	f	file:
term_console	globals.h	/^EXTERN int	term_console INIT(= FALSE); \/\/ set to TRUE when console used$/;"	v
term_convert_key	terminal.c	/^term_convert_key(term_T *term, int c, int modmask, char *buf)$/;"	f	file:
term_cursor_color	term.c	/^term_cursor_color(char_u *color)$/;"	f
term_cursor_mode	term.c	/^term_cursor_mode(int forced)$/;"	f
term_cursor_right	term.c	/^term_cursor_right(int i)$/;"	f
term_cursor_shape	term.c	/^term_cursor_shape(int shape, int blink)$/;"	f
term_default_cterm_bg	terminal.c	/^static int term_default_cterm_bg = -1;$/;"	v	file:
term_default_cterm_fg	terminal.c	/^static int term_default_cterm_fg = -1;$/;"	v	file:
term_delete_lines	term.c	/^term_delete_lines(int line_count)$/;"	f
term_do_update_window	terminal.c	/^term_do_update_window(win_T *wp)$/;"	f
term_enter_job_mode	terminal.c	/^term_enter_job_mode()$/;"	f
term_enter_normal_mode	terminal.c	/^term_enter_normal_mode(void)$/;"	f	file:
term_fg_color	term.c	/^term_fg_color(int n)$/;"	f
term_fg_rgb_color	term.c	/^term_fg_rgb_color(guicolor_T rgb)$/;"	f
term_flush_messages	terminal.c	/^term_flush_messages()$/;"	f	file:
term_free_conpty	terminal.c	/^term_free_conpty(term_T *term)$/;"	f	file:
term_free_vterm	terminal.c	/^term_free_vterm(term_T *term)$/;"	f	file:
term_get_attr	terminal.c	/^term_get_attr(win_T *wp, linenr_T lnum, int col)$/;"	f
term_get_bg_color	term.c	/^term_get_bg_color(char_u *r, char_u *g, char_u *b)$/;"	f
term_get_buf	terminal.c	/^term_get_buf(typval_T *argvars, char *where)$/;"	f	file:
term_get_cursor_shape	terminal.c	/^term_get_cursor_shape(guicolor_T *fg, guicolor_T *bg)$/;"	f
term_get_fg_color	term.c	/^term_get_fg_color(char_u *r, char_u *g, char_u *b)$/;"	f
term_get_status_text	terminal.c	/^term_get_status_text(term_T *term)$/;"	f
term_get_winpos	term.c	/^term_get_winpos(int *x, int *y, varnumber_T timeout)$/;"	f
term_getjob	terminal.c	/^term_getjob(term_T *term)$/;"	f
term_in_normal_mode	terminal.c	/^term_in_normal_mode(void)$/;"	f
term_is_8bit	term.c	/^term_is_8bit(char_u *name)$/;"	f
term_is_builtin	term.c	/^term_is_builtin(char_u *name)$/;"	f	file:
term_is_finished	terminal.c	/^term_is_finished(buf_T *buf)$/;"	f
term_is_gui	term.c	/^term_is_gui(char_u *name)$/;"	f
term_is_xterm	globals.h	/^EXTERN int	term_is_xterm INIT(= FALSE);	\/\/ xterm-like 'term'$/;"	v
term_job_running	terminal.c	/^term_job_running(term_T *term)$/;"	f
term_job_running_check	terminal.c	/^term_job_running_check(term_T *term, int check_job_status)$/;"	f	file:
term_line2screenline	terminal.c	/^term_line2screenline($/;"	f	file:
term_load_dump	terminal.c	/^term_load_dump(typval_T *argvars, typval_T *rettv, int do_diff)$/;"	f	file:
term_mouse_click	terminal.c	/^term_mouse_click(VTerm *vterm, int key)$/;"	f	file:
term_none_open	terminal.c	/^term_none_open(term_T *term)$/;"	f
term_paste_register	terminal.c	/^term_paste_register(int prev_c UNUSED)$/;"	f	file:
term_pop_title	term.c	/^term_pop_title(int which)$/;"	f
term_push_title	term.c	/^term_push_title(int which)$/;"	f
term_replace_bs_del_keycode	term.c	/^term_replace_bs_del_keycode(char_u *ta_buf, int ta_len, int len)$/;"	f
term_report_winsize	terminal.c	/^term_report_winsize(term_T *term, int rows, int cols)$/;"	f	file:
term_rgb_color	term.c	/^term_rgb_color(char_u *s, guicolor_T rgb)$/;"	f	file:
term_scroll_up	terminal.c	/^term_scroll_up(term_T *term, int start_row, int count)$/;"	f	file:
term_send_eof	terminal.c	/^term_send_eof(channel_T *ch)$/;"	f
term_send_mouse	terminal.c	/^term_send_mouse(VTerm *vterm, int button, int pressed)$/;"	f	file:
term_set_winpos	term.c	/^term_set_winpos(int x, int y)$/;"	f
term_set_winsize	term.c	/^term_set_winsize(int height, int width)$/;"	f
term_settitle	term.c	/^term_settitle(char_u *title)$/;"	f
term_should_restore	terminal.c	/^term_should_restore(buf_T *buf)$/;"	f
term_show_buffer	terminal.c	/^term_show_buffer(buf_T *buf)$/;"	f
term_start	terminal.c	/^term_start($/;"	f
term_strings	term.c	/^char_u *(term_strings[(int)KS_LAST + 1]);$/;"	v
term_swap_diff	terminal.c	/^term_swap_diff()$/;"	f
term_try_stop_job	terminal.c	/^term_try_stop_job(buf_T *buf)$/;"	f
term_update_colors	terminal.c	/^term_update_colors(void)$/;"	f
term_update_window	terminal.c	/^term_update_window(win_T *wp)$/;"	f
term_use_loop	terminal.c	/^term_use_loop(void)$/;"	f
term_use_loop_check	terminal.c	/^term_use_loop_check(int check_job_status)$/;"	f	file:
term_vgetc	terminal.c	/^term_vgetc()$/;"	f	file:
term_win_entered	terminal.c	/^term_win_entered()$/;"	f
term_windgoto	term.c	/^term_windgoto(int row, int col)$/;"	f
term_write_job_output	terminal.c	/^term_write_job_output(term_T *term, char_u *msg, size_t len)$/;"	f	file:
term_write_session	terminal.c	/^term_write_session(FILE *fd, win_T *wp)$/;"	f
termcap_active	globals.h	/^EXTERN int	termcap_active INIT(= FALSE);	\/\/ set by starttermcap()$/;"	v
termcap_mode_end	os_win32.c	/^termcap_mode_end(void)$/;"	f	file:
termcap_mode_start	os_win32.c	/^termcap_mode_start(void)$/;"	f	file:
termcapinit	term.c	/^termcapinit(char_u *name)$/;"	f
termcode	term.c	/^static struct termcode$/;"	s	file:
termcode_star	term.c	/^termcode_star(char_u *code, int len)$/;"	f	file:
termcodes	term.c	/^} *termcodes = NULL;$/;"	v	typeref:struct:termcode	file:
termgui_get_color	term.c	/^termgui_get_color(char_u *name)$/;"	f
termgui_mch_get_color	term.c	/^termgui_mch_get_color(char_u *name)$/;"	f	file:
termgui_mch_get_rgb	term.c	/^termgui_mch_get_rgb(guicolor_T color)$/;"	f
terminal_S	terminal.c	/^struct terminal_S {$/;"	s	file:
terminal_enabled	terminal.c	/^terminal_enabled(void)$/;"	f
terminal_is_active	terminal.c	/^terminal_is_active()$/;"	f
terminal_loop	terminal.c	/^terminal_loop(int blocking)$/;"	f
terminals_to_free	terminal.c	/^static term_T	*terminals_to_free = NULL;$/;"	v	file:
terminate_all	os_win32.c	/^terminate_all(HANDLE process, int code)$/;"	f	file:
termleader	term.c	/^static char_u	termleader[256 + 1];	    \/\/ for check_termcode()$/;"	v	file:
termrequest_T	term.c	/^} termrequest_T;$/;"	t	typeref:struct:__anon120	file:
termrequest_any_pending	term.c	/^termrequest_any_pending()$/;"	f	file:
termrequest_sent	term.c	/^termrequest_sent(termrequest_T *status)$/;"	f	file:
test_autochdir	globals.h	/^EXTERN int	test_autochdir INIT(= FALSE);$/;"	v
test_decode_find_end	json_test.c	/^test_decode_find_end(void)$/;"	f	file:
test_fill_called_on_find_end	json_test.c	/^test_fill_called_on_find_end(void)$/;"	f	file:
test_fill_called_on_string	json_test.c	/^test_fill_called_on_string(void)$/;"	f	file:
test_for_current	tag.c	/^test_for_current($/;"	f	file:
test_for_static	tag.c	/^test_for_static(tagptrs_T *tagp)$/;"	f	file:
test_isword_funcs_utf8	kword_test.c	/^test_isword_funcs_utf8(void)$/;"	f	file:
test_mf_hash	memfile_test.c	/^test_mf_hash(void)$/;"	f	file:
test_trunc_string	message_test.c	/^test_trunc_string(void)$/;"	f	file:
test_vim_snprintf	message_test.c	/^test_vim_snprintf(void)$/;"	f	file:
test_x11_window	os_unix.c	/^test_x11_window(Display *dpy)$/;"	f	file:
text	dosinst.c	/^    char    *text;			\/\/ text displayed for this choice$/;"	m	struct:choice	file:
textAntialiasMode	gui_dwrite.h	/^    int textAntialiasMode;$/;"	m	struct:DWriteRenderingParams
textArea	gui_athena.c	/^Widget textArea = (Widget)0;$/;"	v
textArea	gui_motif.c	/^Widget textArea;$/;"	v
textAreaForm	gui_motif.c	/^static Widget textAreaForm;$/;"	v	file:
textResources	gui_at_fs.c	/^static XtResource textResources[] =$/;"	v	file:
text_atom	ui.c	/^static Atom	text_atom;$/;"	v	file:
text_context	gui.h	/^    PangoContext     *text_context; \/\/ the context used for all text$/;"	m	struct:Gui
text_gc	gui.h	/^    GC		text_gc;$/;"	m	struct:Gui
text_gc	gui.h	/^    GdkGC	*text_gc;	    \/\/ cached GC for normal text$/;"	m	struct:Gui
text_locked	ex_getln.c	/^text_locked(void)$/;"	f
text_locked_msg	ex_getln.c	/^text_locked_msg(void)$/;"	f
text_prop_compare	drawline.c	/^text_prop_compare(const void *s1, const void *s2)$/;"	f	file:
text_prop_frozen	globals.h	/^EXTERN int	text_prop_frozen INIT(= 0);$/;"	v
text_prop_type_by_id	textprop.c	/^text_prop_type_by_id(buf_T *buf, int id)$/;"	f
text_to_screenline	drawscreen.c	/^text_to_screenline(win_T *wp, char_u *text, int col)$/;"	f	file:
textattr	os_win32.c	/^textattr(WORD wAttr)$/;"	f	file:
textbackground	os_win32.c	/^textbackground(WORD wAttr)$/;"	f	file:
textcol	structs.h	/^    colnr_T	textcol;	\/\/ index of chars (partially) in block$/;"	m	struct:block_def
textcolor	os_win32.c	/^textcolor(WORD wAttr)$/;"	f	file:
textdomain	gui_gtk.c	58;"	d	file:
textdomain	gui_gtk_x11.c	42;"	d	file:
textdomain	vim.h	544;"	d
textdomain	vim.h	569;"	d
textdomain	vim.h	571;"	d
textlen	structs.h	/^    int		textlen;	\/\/ chars in block$/;"	m	struct:block_def
textlock	globals.h	/^EXTERN int	textlock INIT(= 0);$/;"	v
textpos2screenpos	move.c	/^textpos2screenpos($/;"	f
textprop_S	structs.h	/^typedef struct textprop_S$/;"	s
textprop_T	structs.h	/^} textprop_T;$/;"	t	typeref:struct:textprop_S
textstart	structs.h	/^    char_u	*textstart;	\/\/ pointer to 1st char (partially) in block$/;"	m	struct:block_def
tfu_in_use	tag.c	/^static int  tfu_in_use = FALSE;	    \/\/ disallow recursive call of tagfunc$/;"	v	file:
tfu_inv_ret_msg	tag.c	/^static char_u *tfu_inv_ret_msg = (char_u *)N_("E987: invalid return value from tagfunc");$/;"	v	file:
tgetch	os_win32.c	/^tgetch(int *pmodifiers, WCHAR *pch2)$/;"	f	file:
tgetent	termlib.c	/^tgetent($/;"	f
tgetent_error	term.c	/^tgetent_error(char_u *tbuf, char_u *term)$/;"	f	file:
tgetflag	termlib.c	/^tgetflag(char *id)$/;"	f
tgetnum	termlib.c	/^tgetnum(char *id)$/;"	f
tgetstr	term.c	24;"	d	file:
tgetstr	term.c	51;"	d	file:
tgetstr	termlib.c	/^tgetstr(char *id, char **buf)$/;"	f
tgoto	term.c	/^tgoto(char *cm, int x, int y)$/;"	f	file:
tgoto	termlib.c	/^tgoto($/;"	f
theDate	gui_mac.c	/^    long *theDate;  \/\/ where to put the modification date\/time$/;"	m	struct:CW_GetText	file:
theDate	gui_mac.c	/^    long *theDate; \/\/ where to put the modification date\/time$/;"	m	struct:WindowSearch	file:
theDate	gui_mac.c	/^    long theDate; \/\/ modification date\/time$/;"	m	struct:SelectionRange	file:
theDate	gui_mac.c	/^    long theDate; \/\/ the date\/time the file was last modified$/;"	m	struct:ModificationInfo	file:
theFile	gui_mac.c	/^    FSSpec theFile; \/\/ identifies the file$/;"	m	struct:CW_GetText	file:
theFile	gui_mac.c	/^    FSSpec theFile; \/\/ identifies the file$/;"	m	struct:ModificationInfo	file:
theFile	gui_mac.c	/^    FSSpec theFile; \/\/ identifies the file$/;"	m	struct:WindowSearch	file:
theText	gui_mac.c	/^    Handle theText; \/\/ the location where you return the text (must be resized properly)$/;"	m	struct:CW_GetText	file:
thickness	gui_at_sb.h	/^    Dimension	  thickness;	\/\/ either width or height$/;"	m	struct:__anon143
thread_id	os_beos.c	26;"	d	file:
throw_exception	ex_eval.c	/^throw_exception(void *value, except_type_T type, char_u *cmdname)$/;"	f
throw_lnum	structs.h	/^    linenr_T		throw_lnum;	\/\/ line number of the throw point$/;"	m	struct:vim_exception
throw_msg	structs.h	/^    char		*throw_msg;	\/\/ msg to throw: usually original one$/;"	m	struct:msglist
throw_name	structs.h	/^    char_u		*throw_name;	\/\/ name of the throw point$/;"	m	struct:vim_exception
thumb	gui_at_sb.h	/^    Pixmap	  thumb;	\/\/ thumb color$/;"	m	struct:__anon143
thumbProc	gui_at_sb.h	/^    XtCallbackList thumbProc;	\/\/ jump (to position) scroll$/;"	m	struct:__anon143
tilde_replace	ex_getln.c	/^tilde_replace($/;"	f
time_T	vim.h	/^typedef __time64_t  time_T;$/;"	t
time_T	vim.h	/^typedef long  time_T;$/;"	t
time_T	vim.h	/^typedef time_t	    time_T;$/;"	t
time_diff	time.c	/^time_diff(struct timeval *then, struct timeval *now)$/;"	f	file:
time_diff_ms	mouse.c	/^time_diff_ms(struct timeval *t1, struct timeval *t2)$/;"	f	file:
time_differs	fileio.c	/^time_differs(long t1, long t2)$/;"	f
time_entry_T	syntax.c	/^} time_entry_T;$/;"	t	typeref:struct:__anon117	file:
time_fd	globals.h	/^EXTERN FILE *time_fd INIT(= NULL);  \/\/ where to write startup timing$/;"	v
time_for_testing	globals.h	/^EXTERN time_T time_for_testing INIT(= 0);$/;"	v
time_msg	time.c	/^time_msg($/;"	f
time_pop	time.c	/^time_pop($/;"	f
time_push	time.c	/^time_push(void *tv_rel, void *tv_start)$/;"	f
time_set	structs.h	/^    time_T	time_set;$/;"	m	struct:xfilemark
time_set	structs.h	/^    time_t	time_set;	\/\/ when it was typed, zero if unknown$/;"	m	struct:hist_entry
time_to_bytes	time.c	/^time_to_bytes(time_T the_time, char_u *buf)$/;"	f
timeout_add	gui_gtk_x11.c	/^timeout_add(int time, timeout_cb_type (*callback)(gpointer), int *flagp)$/;"	f	file:
timeout_cb	gui_beval.c	/^timeout_cb(gpointer data)$/;"	f	file:
timeout_cb_type	gui_gtk_x11.c	/^typedef gboolean timeout_cb_type;$/;"	t	file:
timeout_remove	gui_gtk_x11.c	/^timeout_remove(guint timer)$/;"	f	file:
timer	gui_athena.c	/^static XtIntervalId timer = 0;	    \/\/ 0 = expired, otherwise active$/;"	v	file:
timerID	beval.h	/^    unsigned int	timerID;	\/\/ timer for run$/;"	m	struct:BalloonEvalStruct
timerRoutine	gui_beval.c	/^timerRoutine(XtPointer dx, XtIntervalId *id UNUSED)$/;"	f	file:
timerUPP	if_mzsch.c	/^static EventLoopTimerUPP timerUPP;$/;"	v	file:
timer_S	structs.h	/^struct timer_S$/;"	s
timer_T	structs.h	/^typedef struct timer_S timer_T;$/;"	t	typeref:struct:timer_S
timer_busy	globals.h	/^EXTERN int  timer_busy INIT(= 0);   \/\/ when timer is inside vgetc() then > 0$/;"	v
timer_callback	time.c	/^timer_callback(timer_T *timer)$/;"	f	file:
timer_free_all	time.c	/^timer_free_all()$/;"	f
timer_id	gui_at_sb.h	/^    XtIntervalId  timer_id;	\/\/ autorepeat timer; remove on destruction$/;"	m	struct:__anon143
timer_id	if_mzsch.c	/^static EventLoopTimerRef timer_id = NULL;$/;"	v	file:
timer_id	if_mzsch.c	/^static UINT timer_id = 0;$/;"	v	file:
timer_id	if_mzsch.c	/^static XtIntervalId timer_id = (XtIntervalId)0;$/;"	v	file:
timer_id	if_mzsch.c	/^static guint timer_id = 0;$/;"	v	file:
timer_proc	if_mzsch.c	/^timer_proc(HWND hwnd UNUSED, UINT uMsg UNUSED, UINT_PTR idEvent UNUSED, DWORD dwTime UNUSED)$/;"	f	file:
timestamp_atom	ui.c	/^static Atom	timestamp_atom;	\/\/ Used to get a timestamp$/;"	v	file:
tip	structs.h	/^    BalloonEval *tip;		    \/\/ tooltip for this menu item$/;"	m	struct:VimMenu
title	hardcopy.c	/^    char_u  title[256];$/;"	m	struct:prt_ps_resource_S	file:
tl_api	terminal.c	/^    char_u	*tl_api;	\/\/ prefix for terminal API function$/;"	m	struct:terminal_S	file:
tl_arg0_cmd	terminal.c	/^    char_u	*tl_arg0_cmd;	\/\/ To format the status bar$/;"	m	struct:terminal_S	file:
tl_bot_diff_rows	terminal.c	/^    linenr_T	tl_bot_diff_rows;   \/\/ rows of bottom diff file$/;"	m	struct:terminal_S	file:
tl_buffer	terminal.c	/^    buf_T	*tl_buffer;$/;"	m	struct:terminal_S	file:
tl_channel_closed	terminal.c	/^    int		tl_channel_closed;$/;"	m	struct:terminal_S	file:
tl_channel_recently_closed	terminal.c	/^    int		tl_channel_recently_closed; \/\/ still need to handle tl_finish$/;"	m	struct:terminal_S	file:
tl_cols	terminal.c	/^    int		tl_cols;$/;"	m	struct:terminal_S	file:
tl_command	terminal.c	/^    char_u	*tl_command;$/;"	m	struct:terminal_S	file:
tl_conpty	terminal.c	/^    HPCON	tl_conpty;$/;"	m	struct:terminal_S	file:
tl_cursor_blink	terminal.c	/^    int		tl_cursor_blink;$/;"	m	struct:terminal_S	file:
tl_cursor_color	terminal.c	/^    char_u	*tl_cursor_color; \/\/ NULL or allocated$/;"	m	struct:terminal_S	file:
tl_cursor_pos	terminal.c	/^    VTermPos	tl_cursor_pos;$/;"	m	struct:terminal_S	file:
tl_cursor_shape	terminal.c	/^    int		tl_cursor_shape;  \/\/ 1: block, 2: underline, 3: bar$/;"	m	struct:terminal_S	file:
tl_cursor_visible	terminal.c	/^    int		tl_cursor_visible;$/;"	m	struct:terminal_S	file:
tl_default_color	terminal.c	/^    cellattr_T	tl_default_color;$/;"	m	struct:terminal_S	file:
tl_dirty_row_end	terminal.c	/^    int		tl_dirty_row_end;   \/\/ row below last one to update$/;"	m	struct:terminal_S	file:
tl_dirty_row_start	terminal.c	/^    int		tl_dirty_row_start; \/\/ MAX_ROW if nothing dirty$/;"	m	struct:terminal_S	file:
tl_dirty_snapshot	terminal.c	/^    int		tl_dirty_snapshot;  \/\/ text updated after making snapshot$/;"	m	struct:terminal_S	file:
tl_eof_chars	terminal.c	/^    char_u	*tl_eof_chars;$/;"	m	struct:terminal_S	file:
tl_finish	terminal.c	/^    int		tl_finish;$/;"	m	struct:terminal_S	file:
tl_job	terminal.c	/^    job_T	*tl_job;$/;"	m	struct:terminal_S	file:
tl_kill	terminal.c	/^    char_u	*tl_kill;$/;"	m	struct:terminal_S	file:
tl_next	terminal.c	/^    term_T	*tl_next;$/;"	m	struct:terminal_S	file:
tl_normal_mode	terminal.c	/^    int		tl_normal_mode; \/\/ TRUE: Terminal-Normal mode$/;"	m	struct:terminal_S	file:
tl_opencmd	terminal.c	/^    char_u	*tl_opencmd;$/;"	m	struct:terminal_S	file:
tl_out_fd	terminal.c	/^    FILE	*tl_out_fd;$/;"	m	struct:terminal_S	file:
tl_postponed_scroll	terminal.c	/^    int		tl_postponed_scroll;	\/\/ to be scrolled up$/;"	m	struct:terminal_S	file:
tl_rows	terminal.c	/^    int		tl_rows;$/;"	m	struct:terminal_S	file:
tl_scrollback	terminal.c	/^    garray_T	tl_scrollback;$/;"	m	struct:terminal_S	file:
tl_scrollback_postponed	terminal.c	/^    garray_T	tl_scrollback_postponed;$/;"	m	struct:terminal_S	file:
tl_scrollback_scrolled	terminal.c	/^    int		tl_scrollback_scrolled;$/;"	m	struct:terminal_S	file:
tl_siex	terminal.c	/^    DYN_STARTUPINFOEXW tl_siex;	\/\/ Structure that always needs to be hold$/;"	m	struct:terminal_S	file:
tl_status_text	terminal.c	/^    char_u	*tl_status_text; \/\/ NULL or allocated$/;"	m	struct:terminal_S	file:
tl_system	terminal.c	/^    int		tl_system;	\/\/ when non-zero used for :!cmd output$/;"	m	struct:terminal_S	file:
tl_timer_due	terminal.c	/^    proftime_T	tl_timer_due;$/;"	m	struct:terminal_S	file:
tl_timer_set	terminal.c	/^    int		tl_timer_set;$/;"	m	struct:terminal_S	file:
tl_title	terminal.c	/^    char_u	*tl_title; \/\/ NULL or allocated$/;"	m	struct:terminal_S	file:
tl_top_diff_rows	terminal.c	/^    linenr_T	tl_top_diff_rows;   \/\/ rows of top diff file or zero$/;"	m	struct:terminal_S	file:
tl_toprow	terminal.c	/^    int		tl_toprow;	\/\/ row with first line of system terminal$/;"	m	struct:terminal_S	file:
tl_using_altscreen	terminal.c	/^    int		tl_using_altscreen;$/;"	m	struct:terminal_S	file:
tl_vterm	terminal.c	/^    VTerm	*tl_vterm;$/;"	m	struct:terminal_S	file:
tl_vterm_size_changed	terminal.c	/^    int		tl_vterm_size_changed;$/;"	m	struct:terminal_S	file:
tl_winpty	terminal.c	/^    void	*tl_winpty;$/;"	m	struct:terminal_S	file:
tl_winpty_config	terminal.c	/^    void	*tl_winpty_config;$/;"	m	struct:terminal_S	file:
tls_space	if_mzsch.c	/^static THREAD_LOCAL void *tls_space;$/;"	v	file:
tls_space	if_mzsch.c	/^static __thread void *tls_space;$/;"	v	file:
tltoa	term.c	/^tltoa(unsigned long i)$/;"	f
tm	structs.h	/^    proftime_T	tm;	    \/\/ for a time limit$/;"	m	struct:__anon240
tn_did_filefind_init	structs.h	/^    int		tn_did_filefind_init;$/;"	m	struct:__anon249
tn_hf_idx	structs.h	/^    int		tn_hf_idx;$/;"	m	struct:__anon249
tn_np	structs.h	/^    char_u	*tn_np;		\/\/ current position in tn_tags$/;"	m	struct:__anon249
tn_search_ctx	structs.h	/^    void	*tn_search_ctx;$/;"	m	struct:__anon249
tn_tags	structs.h	/^    char_u	*tn_tags;	\/\/ value of 'tags' when starting$/;"	m	struct:__anon249
to	digraph.c	/^    char_u	*to;$/;"	m	struct:__anon12	file:
to	map.c	/^    int     to;$/;"	m	struct:__anon66	file:
to	menu.c	/^    char_u	*to;		\/\/ translated name$/;"	m	struct:__anon71	file:
toLower	mbyte.c	/^static convertStruct toLower[] =$/;"	v	file:
toUpper	mbyte.c	/^static convertStruct toUpper[] =$/;"	v	file:
to_device_units	hardcopy.c	/^to_device_units(int idx, double physsize, int def_number)$/;"	f	file:
to_device_units	os_mswin.c	/^to_device_units(int idx, int dpi, int physsize, int offset, int def_number)$/;"	f	file:
to_fp	if_cscope.h	/^    FILE *	    to_fp;	\/\/ to cscope: FILE.$/;"	m	struct:csi
to_name_const_end	vim9compile.c	/^to_name_const_end(char_u *arg)$/;"	f
to_name_end	vim9compile.c	/^to_name_end(char_u *arg)$/;"	f
todo	if_py_both.h	/^    long_u	todo;$/;"	m	struct:__anon155
tofree	beval.h	/^    void		*tofree;$/;"	m	struct:BalloonEvalStruct
tofree	list.c	/^    char_u	*tofree;$/;"	m	struct:join_S	file:
toggle_Magic	regexp.c	/^toggle_Magic(int x)$/;"	f	file:
toggle_bat_choice	dosinst.c	/^toggle_bat_choice(int idx)$/;"	f	file:
toggle_shortcut_choice	dosinst.c	/^toggle_shortcut_choice(int idx)$/;"	f
toggle_startmenu_choice	dosinst.c	/^toggle_startmenu_choice(int idx)$/;"	f	file:
toggle_tearoff	gui_motif.c	/^toggle_tearoff(Widget wid)$/;"	f	file:
tolower_tab	globals.h	/^EXTERN char_u	tolower_tab[256];	\/\/ table for tolower()$/;"	v
tomatch	quickfix.c	/^    long	tomatch;	\/\/ maximum number of matches to find$/;"	m	struct:__anon91	file:
toolBar	gui_athena.c	/^static Widget toolBar = (Widget)0;$/;"	v	file:
toolBar	gui_motif.c	/^static Widget toolBar;$/;"	v	file:
toolBarFrame	gui_motif.c	/^static Widget toolBarFrame;$/;"	v	file:
toolbar	gui.h	/^    GtkWidget	*toolbar;	    \/\/ toolbar$/;"	m	struct:Gui
toolbar_button_focus_in_event	gui_gtk.c	/^toolbar_button_focus_in_event(GtkWidget *widget UNUSED,$/;"	f	file:
toolbar_flags	option.h	/^EXTERN unsigned toolbar_flags;$/;"	v
toolbar_h	gui.h	/^    GtkWidget	*toolbar_h;	    \/\/ toolbar handle$/;"	m	struct:Gui
toolbar_height	gui.h	/^    int		toolbar_height;	    \/\/ height of the toolbar$/;"	m	struct:Gui
toolbar_height	gui.h	/^    int		toolbar_height;$/;"	m	struct:Gui
toolbar_names	menu.c	/^static const char *toolbar_names[] =$/;"	v	file:
toolbar_wndproc	gui_w32.c	/^toolbar_wndproc($/;"	f	file:
toolbarbutton_enter_cb	gui_motif.c	/^toolbarbutton_enter_cb($/;"	f	file:
toolbarbutton_leave_cb	gui_motif.c	/^toolbarbutton_leave_cb($/;"	f	file:
tooltip_bg_pixel	gui.h	/^    guicolor_T	tooltip_bg_pixel;	\/\/ tooltip background color$/;"	m	struct:Gui
tooltip_fg_pixel	gui.h	/^    guicolor_T	tooltip_fg_pixel;	\/\/ tooltip foreground color$/;"	m	struct:Gui
tooltip_fontset	gui.h	/^    XFontSet	tooltip_fontset;	\/\/ tooltip fontset$/;"	m	struct:Gui
top	gui.h	/^    int		top;		\/\/ Top of scroll bar (chars from row 0)$/;"	m	struct:GuiScrollbar
top	gui_at_sb.h	/^    float	  top;		\/\/ What percent is above the win's top$/;"	m	struct:__anon143
topLeft	gui_mac.c	123;"	d	file:
topLevelShellClassRec	gui_gtk_vms.h	671;"	d
topLevelShellWidgetClass	gui_gtk_vms.h	672;"	d
topLoc	gui_at_sb.h	/^    Position	  topLoc;	\/\/ Pixel that corresponds to top$/;"	m	struct:__anon143
top_bot_msg	globals.h	/^EXTERN char top_bot_msg[] INIT(= N_("search hit TOP, continuing at BOTTOM"));$/;"	v
top_file_num	buffer.c	/^static int	top_file_num = 1;	\/\/ highest file number$/;"	v	file:
top_funccal	structs.h	/^    void	    *top_funccal;$/;"	m	struct:funccal_entry
top_shadow_GC	gui_at_sb.h	/^    GC		top_shadow_GC;$/;"	m	struct:__anon143
top_shadow_contrast	gui_at_sb.h	/^    int		top_shadow_contrast;$/;"	m	struct:__anon143
top_shadow_pixel	gui_at_sb.h	/^    Pixel	top_shadow_pixel;$/;"	m	struct:__anon143
topframe	globals.h	/^EXTERN frame_T	*topframe;	\/\/ top of the window frame tree$/;"	v
topline_back	move.c	/^topline_back(lineoff_T *lp)$/;"	f	file:
topline_botline	move.c	/^topline_botline(lineoff_T *lp)$/;"	f	file:
toplnum	structs.h	/^    linenr_T	toplnum;		\/\/ top buffer line$/;"	m	struct:posmatch
topmsg	tag.c	/^static char_u *topmsg = (char_u *)N_("E556: at top of tag stack");$/;"	v	file:
total	structs.h	/^    proftime_T	total;		\/\/ total time used$/;"	m	struct:__anon235
total	structs.h	/^  UINT32_T total[2];$/;"	m	struct:__anon250
total	syntax.c	/^    proftime_T	total;$/;"	m	struct:__anon117	file:
total_mem_used	memfile.c	/^static long_u	total_mem_used = 0;	\/\/ total memory used for memfiles$/;"	v	file:
toupper_tab	globals.h	/^EXTERN char_u	toupper_tab[256];	\/\/ table for toupper()$/;"	v
tp_ch_used	structs.h	/^    long	    tp_ch_used;	    \/\/ value of 'cmdheight' when frame size$/;"	m	struct:tabpage_S
tp_col	structs.h	/^    colnr_T	tp_col;		\/\/ start column (one based, in bytes)$/;"	m	struct:textprop_S
tp_curwin	structs.h	/^    win_T	    *tp_curwin;	    \/\/ current window in this Tab page$/;"	m	struct:tabpage_S
tp_diff_invalid	structs.h	/^    int		    tp_diff_invalid;	\/\/ list of diffs is outdated$/;"	m	struct:tabpage_S
tp_diff_update	structs.h	/^    int		    tp_diff_update;	\/\/ update diffs before redrawing$/;"	m	struct:tabpage_S
tp_diffbuf	structs.h	/^    buf_T	    *(tp_diffbuf[DB_COUNT]);$/;"	m	struct:tabpage_S
tp_first_diff	structs.h	/^    diff_T	    *tp_first_diff;$/;"	m	struct:tabpage_S
tp_first_popupwin	structs.h	/^    win_T	    *tp_first_popupwin; \/\/ first popup window in this Tab page$/;"	m	struct:tabpage_S
tp_firstwin	structs.h	/^    win_T	    *tp_firstwin;   \/\/ first window in this Tab page$/;"	m	struct:tabpage_S
tp_flags	structs.h	/^    int		tp_flags;	\/\/ TP_FLAG_ values$/;"	m	struct:textprop_S
tp_id	structs.h	/^    int		tp_id;		\/\/ identifier$/;"	m	struct:textprop_S
tp_lastwin	structs.h	/^    win_T	    *tp_lastwin;    \/\/ last window in this Tab page$/;"	m	struct:tabpage_S
tp_len	structs.h	/^    colnr_T	tp_len;		\/\/ length in bytes$/;"	m	struct:textprop_S
tp_localdir	structs.h	/^    char_u	    *tp_localdir;	\/\/ absolute path of local directory or$/;"	m	struct:tabpage_S
tp_next	structs.h	/^    tabpage_T	    *tp_next;	    \/\/ next tabpage or NULL$/;"	m	struct:tabpage_S
tp_old_Columns	structs.h	/^    long	    tp_old_Columns; \/\/ Columns when Tab page was left$/;"	m	struct:tabpage_S
tp_old_Rows	structs.h	/^    long	    tp_old_Rows;    \/\/ Rows when Tab page was left$/;"	m	struct:tabpage_S
tp_prev_which_scrollbars	structs.h	/^    int		    tp_prev_which_scrollbars[3];$/;"	m	struct:tabpage_S
tp_prevwin	structs.h	/^    win_T	    *tp_prevwin;    \/\/ previous window in this Tab page$/;"	m	struct:tabpage_S
tp_python3_ref	structs.h	/^    void	    *tp_python3_ref;	\/\/ The Python value for this tab page$/;"	m	struct:tabpage_S
tp_python_ref	structs.h	/^    void	    *tp_python_ref;	\/\/ The Python value for this tab page$/;"	m	struct:tabpage_S
tp_snapshot	structs.h	/^    frame_T	    *(tp_snapshot[SNAP_COUNT]);  \/\/ window layout snapshots$/;"	m	struct:tabpage_S
tp_topframe	structs.h	/^    frame_T	    *tp_topframe;   \/\/ topframe for the windows$/;"	m	struct:tabpage_S
tp_type	structs.h	/^    int		tp_type;	\/\/ property type$/;"	m	struct:textprop_S
tp_vars	structs.h	/^    dict_T	    *tp_vars;	    \/\/ internal variables, local to tab page$/;"	m	struct:tabpage_S
tp_winvar	structs.h	/^    dictitem_T	    tp_winvar;	    \/\/ variable for "t:" Dictionary$/;"	m	struct:tabpage_S
tputs	termlib.c	/^tputs($/;"	f
tr_callback	structs.h	/^    callback_T	tr_callback;$/;"	m	struct:timer_S
tr_due	structs.h	/^    proftime_T	tr_due;		    \/\/ when the callback is to be invoked$/;"	m	struct:timer_S
tr_emsg_count	structs.h	/^    int		tr_emsg_count;$/;"	m	struct:timer_S
tr_firing	structs.h	/^    char	tr_firing;	    \/\/ when TRUE callback is being called$/;"	m	struct:timer_S
tr_id	structs.h	/^    long	tr_id;$/;"	m	struct:timer_S
tr_interval	structs.h	/^    long	tr_interval;	    \/\/ msec$/;"	m	struct:timer_S
tr_next	structs.h	/^    timer_T	*tr_next;$/;"	m	struct:timer_S
tr_paused	structs.h	/^    char	tr_paused;	    \/\/ when TRUE callback is not invoked$/;"	m	struct:timer_S
tr_prev	structs.h	/^    timer_T	*tr_prev;$/;"	m	struct:timer_S
tr_progress	term.c	/^    request_progress_T	    tr_progress;$/;"	m	struct:__anon120	file:
tr_repeat	structs.h	/^    int		tr_repeat;	    \/\/ number of times to repeat, -1 forever$/;"	m	struct:timer_S
tr_start	term.c	/^    time_t		    tr_start;	\/\/ when request was sent, -1 for never$/;"	m	struct:__anon120	file:
trans_characters	charset.c	/^trans_characters($/;"	f
trans_function_name	userfunc.c	/^trans_function_name($/;"	f
trans_special	misc2.c	/^trans_special($/;"	f
transchar	charset.c	/^transchar(int c)$/;"	f
transchar_buf	charset.c	/^static char_u	transchar_buf[7];$/;"	v	file:
transchar_byte	charset.c	/^transchar_byte(int c)$/;"	f
transchar_hex	charset.c	/^transchar_hex(char_u *buf, int c)$/;"	f
transchar_nonprint	charset.c	/^transchar_nonprint(char_u *buf, int c)$/;"	f
transientShellWidgetClass	gui_gtk_vms.h	673;"	d
translate_mapping	map.c	/^translate_mapping(char_u *str)$/;"	f	file:
translate_mnemonic_tag	gui_gtk.c	/^translate_mnemonic_tag(char_u *name, int use_mnemonic)$/;"	f	file:
translate_pango_attributes	mbyte.c	/^translate_pango_attributes(PangoAttrIterator *iter)$/;"	f	file:
translated_function_exists	userfunc.c	/^translated_function_exists(char_u *name)$/;"	f
transstr	charset.c	/^transstr(char_u *s)$/;"	f
trash_input_buf	ui.c	/^trash_input_buf(void)$/;"	f
traverse	if_py_both.h	/^    traversefun traverse;$/;"	m	struct:__anon153
traversefun	if_py_both.h	/^typedef int (*traversefun)(void *, visitproc, void *);$/;"	t
tree_add_word	spellfile.c	/^tree_add_word($/;"	f	file:
tree_count_words	spellfile.c	/^tree_count_words(char_u *byts, idx_T *idxs)$/;"	f	file:
trigger_cmd_autocmd	ex_getln.c	/^trigger_cmd_autocmd(int typechar, int evt)$/;"	f	file:
trigger_complete_changed_event	insexpand.c	/^trigger_complete_changed_event(int cur)$/;"	f	file:
trigger_cursorhold	autocmd.c	/^trigger_cursorhold(void)$/;"	f
trigger_optionsset_string	optionstr.c	/^trigger_optionsset_string($/;"	f
trunc_string	message.c	/^trunc_string($/;"	f
truncate_fold	fold.c	/^truncate_fold(fold_T *fp, linenr_T end)$/;"	f	file:
truncate_line	change.c	/^truncate_line(int fixpos)$/;"	f
truncate_spaces	edit.c	/^truncate_spaces(char_u *line)$/;"	f
try_T	vim9.h	/^} try_T;$/;"	t	typeref:struct:__anon268
try_catch	vim9.h	/^    int	    try_catch;	    \/\/ position to jump to on throw$/;"	m	struct:__anon268
try_finally	vim9.h	/^    int	    try_finally;    \/\/ position to jump to for return$/;"	m	struct:__anon268
trycmd_T	vim9execute.c	/^} trycmd_T;$/;"	t	typeref:struct:__anon133	file:
trylevel	ex_docmd.c	/^    int		trylevel;$/;"	m	struct:dbg_stuff	file:
trylevel	globals.h	/^EXTERN int trylevel INIT(= 0);$/;"	v
tryscope_T	vim9compile.c	/^} tryscope_T;$/;"	t	typeref:struct:__anon128	file:
trystate_S	spellsuggest.c	/^typedef struct trystate_S$/;"	s	file:
trystate_T	spellsuggest.c	/^} trystate_T;$/;"	t	typeref:struct:trystate_S	file:
ts	beval.h	/^    int			ts;		\/\/ tabstop setting for this buffer$/;"	m	struct:BalloonEvalStruct
ts_arridx	spellsuggest.c	/^    idx_T	ts_arridx;	\/\/ index in tree array, start of node$/;"	m	struct:trystate_S	file:
ts_catch_label	vim9compile.c	/^    int		ts_catch_label;	    \/\/ instruction idx of last CATCH$/;"	m	struct:__anon128	file:
ts_caught_all	vim9compile.c	/^    int		ts_caught_all;	    \/\/ "catch" without argument encountered$/;"	m	struct:__anon128	file:
ts_complen	spellsuggest.c	/^    char_u	ts_complen;	\/\/ nr of compound words used$/;"	m	struct:trystate_S	file:
ts_compsplit	spellsuggest.c	/^    char_u	ts_compsplit;	\/\/ index for "compflags" where word was spit$/;"	m	struct:trystate_S	file:
ts_curi	spellsuggest.c	/^    short	ts_curi;	\/\/ index in list of child nodes$/;"	m	struct:trystate_S	file:
ts_delidx	spellsuggest.c	/^    char_u	ts_delidx;	\/\/ index in fword for char that was deleted,$/;"	m	struct:trystate_S	file:
ts_end_label	vim9compile.c	/^    endlabel_T	*ts_end_label;	    \/\/ jump to :finally or :endtry$/;"	m	struct:__anon128	file:
ts_fcharstart	spellsuggest.c	/^    char_u	ts_fcharstart;	\/\/ index in fword where badword char started$/;"	m	struct:trystate_S	file:
ts_fidx	spellsuggest.c	/^    char_u	ts_fidx;	\/\/ index in fword[], case-folded bad word$/;"	m	struct:trystate_S	file:
ts_fidxtry	spellsuggest.c	/^    char_u	ts_fidxtry;	\/\/ ts_fidx at which bytes may be changed$/;"	m	struct:trystate_S	file:
ts_flags	spellsuggest.c	/^    char_u	ts_flags;	\/\/ TSF_ flags$/;"	m	struct:trystate_S	file:
ts_isdiff	spellsuggest.c	/^    char_u	ts_isdiff;	\/\/ DIFF_ values$/;"	m	struct:trystate_S	file:
ts_prefixdepth	spellsuggest.c	/^    char_u	ts_prefixdepth;	\/\/ stack depth for end of prefix or$/;"	m	struct:trystate_S	file:
ts_prewordlen	spellsuggest.c	/^    char_u	ts_prewordlen;	\/\/ length of word in "preword[]"$/;"	m	struct:trystate_S	file:
ts_save_badflags	spellsuggest.c	/^    char_u	ts_save_badflags;   \/\/ su_badflags saved here$/;"	m	struct:trystate_S	file:
ts_score	spellsuggest.c	/^    int		ts_score;	\/\/ score$/;"	m	struct:trystate_S	file:
ts_splitfidx	spellsuggest.c	/^    char_u	ts_splitfidx;	\/\/ "ts_fidx" at word split$/;"	m	struct:trystate_S	file:
ts_splitoff	spellsuggest.c	/^    char_u	ts_splitoff;	\/\/ index in "tword" after last split$/;"	m	struct:trystate_S	file:
ts_state	spellsuggest.c	/^    state_T	ts_state;	\/\/ state at this level, STATE_$/;"	m	struct:trystate_S	file:
ts_tcharidx	spellsuggest.c	/^    char_u	ts_tcharidx;	\/\/ current byte index in tword character$/;"	m	struct:trystate_S	file:
ts_tcharlen	spellsuggest.c	/^    char_u	ts_tcharlen;	\/\/ number of bytes in tword character$/;"	m	struct:trystate_S	file:
ts_try_label	vim9compile.c	/^    int		ts_try_label;	    \/\/ instruction idx at TRY$/;"	m	struct:__anon128	file:
ts_twordlen	spellsuggest.c	/^    char_u	ts_twordlen;	\/\/ valid length of tword[]$/;"	m	struct:trystate_S	file:
tt_argcount	structs.h	/^    short	    tt_argcount;    \/\/ for func, partial, -1 for unknown$/;"	m	struct:type_S
tt_args	structs.h	/^    type_T	    *tt_args;	    \/\/ func arguments$/;"	m	struct:type_S
tt_member	structs.h	/^    type_T	    *tt_member;	    \/\/ for list, dict, func return type$/;"	m	struct:type_S
tt_type	structs.h	/^    vartype_T	    tt_type;$/;"	m	struct:type_S
ttest	term.c	/^ttest(int pairs)$/;"	f
tty_fail	structs.h	/^    int		tty_fail;		\/\/ exit if not a tty$/;"	m	struct:__anon252
ttyinfo_T	structs.h	/^} ttyinfo_T;$/;"	t	typeref:struct:__anon227
ttym_flags	option.h	/^EXTERN unsigned ttym_flags;$/;"	v
tv	quickfix.c	/^    typval_T	*tv;$/;"	m	struct:__anon89	file:
tv2bool	vim9execute.c	/^tv2bool(typval_T *tv)$/;"	f
tv2string	eval.c	/^tv2string($/;"	f
tv_check_lock	eval.c	/^tv_check_lock(typval_T *tv, char_u *name, int use_gettext)$/;"	f	file:
tv_equal	eval.c	/^tv_equal($/;"	f
tv_equal_recurse_limit	eval.c	/^static int tv_equal_recurse_limit;$/;"	v	file:
tv_float	message.c	/^tv_float(typval_T *tvs, int *idxp)$/;"	f	file:
tv_get_buf	evalfunc.c	/^tv_get_buf(typval_T *tv, int curtab_only)$/;"	f
tv_get_float	eval.c	/^tv_get_float(typval_T *varp)$/;"	f
tv_get_lnum	evalfunc.c	/^tv_get_lnum(typval_T *argvars)$/;"	f
tv_get_lnum_buf	evalfunc.c	/^tv_get_lnum_buf(typval_T *argvars, buf_T *buf)$/;"	f
tv_get_number	eval.c	/^tv_get_number(typval_T *varp)$/;"	f
tv_get_number_chk	eval.c	/^tv_get_number_chk(typval_T *varp, int *denote)$/;"	f
tv_get_string	eval.c	/^tv_get_string(typval_T *varp)$/;"	f
tv_get_string_buf	eval.c	/^tv_get_string_buf(typval_T *varp, char_u *buf)$/;"	f
tv_get_string_buf_chk	eval.c	/^tv_get_string_buf_chk(typval_T *varp, char_u *buf)$/;"	f
tv_get_string_chk	eval.c	/^tv_get_string_chk(typval_T *varp)$/;"	f
tv_islocked	evalfunc.c	/^tv_islocked(typval_T *tv)$/;"	f	file:
tv_nr	message.c	/^tv_nr(typval_T *tvs, int *idxp)$/;"	f	file:
tv_op	eval.c	/^tv_op(typval_T *tv1, typval_T *tv2, char_u *op)$/;"	f	file:
tv_str	message.c	/^tv_str(typval_T *tvs, int *idxp, char_u **tofree)$/;"	f	file:
tv_stringify	eval.c	/^tv_stringify(typval_T *varp, char_u *buf)$/;"	f	file:
txtlen	winclip.c	/^    int txtlen;		\/\/ length of CF_TEXT in bytes$/;"	m	struct:__anon138	file:
type	gui.h	/^    int		type;		\/\/ one of SBAR_{LEFT,RIGHT,BOTTOM}$/;"	m	struct:GuiScrollbar
type	hardcopy.c	/^    int		type;$/;"	m	struct:prt_dsc_comment_S	file:
type	hardcopy.c	/^    int		type;$/;"	m	struct:prt_dsc_line_S	file:
type	hardcopy.c	/^    int     type;$/;"	m	struct:prt_ps_resource_S	file:
type	os_vms.c	/^    char	type;$/;"	m	struct:__anon76	file:
type	quickfix.c	/^    int		type;$/;"	m	struct:__anon90	file:
type	structs.h	/^    except_type_T	type;		\/\/ exception type$/;"	m	struct:vim_exception
type	vim9.h	/^	checktype_T	    type;$/;"	m	union:__anon276::__anon277
type	winclip.c	/^    int type;		\/\/ MCHAR, MBLOCK or MLINE$/;"	m	struct:__anon138	file:
type_S	structs.h	/^struct type_S {$/;"	s
type_T	structs.h	/^typedef struct type_S type_T;$/;"	t	typeref:struct:type_S
type_mismatch	vim9compile.c	/^type_mismatch(type_T *expected, type_T *actual)$/;"	f	file:
type_name	vim9compile.c	/^type_name(type_T *type, char **tofree)$/;"	f
typeahead	os_vms.c	/^} typeahead;$/;"	v	typeref:struct:typeahead_st
typeahead_char	getchar.c	/^static int typeahead_char = 0;		\/\/ typeahead char that's not flushed$/;"	v	file:
typeahead_noflush	getchar.c	/^typeahead_noflush(int c)$/;"	f
typeahead_st	os_vms.c	/^struct typeahead_st {$/;"	s	file:
typebuf	globals.h	/^EXTERN typebuf_T typebuf		\/\/ typeahead buffer$/;"	v
typebuf_T	structs.h	/^} typebuf_T;$/;"	t	typeref:struct:__anon200
typebuf_changed	getchar.c	/^typebuf_changed($/;"	f
typebuf_init	getchar.c	/^static char_u	typebuf_init[TYPELEN_INIT];	\/\/ initial typebuf.tb_buf$/;"	v	file:
typebuf_maplen	getchar.c	/^typebuf_maplen(void)$/;"	f
typebuf_typed	getchar.c	/^typebuf_typed(void)$/;"	f
typebuf_valid	structs.h	/^    int			typebuf_valid;	    \/\/ TRUE when save_typebuf valid$/;"	m	struct:__anon201
typebuf_was_filled	globals.h	/^EXTERN int	typebuf_was_filled INIT(= FALSE); \/\/ received text from client$/;"	v
typval_T	structs.h	/^} typval_T;$/;"	t	typeref:struct:__anon205
typval_compare	eval.c	/^typval_compare($/;"	f
typval_tostring	eval.c	/^typval_tostring(typval_T *arg)$/;"	f
tz_cache	time.c	/^static char	tz_cache[64];$/;"	v	file:
u32_T	crypt_zip.c	/^typedef unsigned int u32_T;	\/\/ int is at least 32 bits$/;"	t	file:
u7_status	term.c	/^static termrequest_T u7_status = TERMREQUEST_INIT;$/;"	v	file:
u8char_T	vim.h	/^typedef unsigned int u8char_T;	\/\/ int is 32 bits or more$/;"	t
uFlags	gui_w32.c	/^    UINT	uFlags;$/;"	m	struct:tagNMTTDISPINFOA	file:
uFlags	gui_w32.c	/^    UINT	uFlags;$/;"	m	struct:tagNMTTDISPINFOW	file:
uFlags	gui_w32.c	/^    UINT       uFlags;$/;"	m	struct:tagNMTTDISPINFOW_NEW	file:
uFlags	gui_w32.c	/^    UINT       uFlags;$/;"	m	struct:tagNMTTDISPINFO_NEW	file:
uFlags	gui_w32.c	/^    UINT       uFlags;$/;"	m	struct:tagTOOLINFOA_NEW	file:
uFlags	gui_w32.c	/^    UINT       uFlags;$/;"	m	struct:tagTOOLINFOW_NEW	file:
uId	gui_w32.c	/^    UINT_PTR   uId;$/;"	m	struct:tagTOOLINFOA_NEW	file:
uId	gui_w32.c	/^    UINT_PTR   uId;$/;"	m	struct:tagTOOLINFOW_NEW	file:
uType	gui_w32.c	/^    UINT	uType;$/;"	m	struct:_signicon_t	file:
u_acute	regexp_nfa.c	750;"	d	file:
u_blockfree	undo.c	/^u_blockfree(buf_T *buf)$/;"	f
u_check	undo.c	/^u_check(int newhead_may_be_NULL)$/;"	f	file:
u_check_tree	undo.c	/^u_check_tree(u_header_T *uhp,$/;"	f	file:
u_circumflex	regexp_nfa.c	751;"	d	file:
u_clearall	undo.c	/^u_clearall(buf_T *buf)$/;"	f
u_clearline	undo.c	/^u_clearline(void)$/;"	f
u_compute_hash	undo.c	/^u_compute_hash(char_u *hash)$/;"	f
u_diaeresis	regexp_nfa.c	752;"	d	file:
u_doit	undo.c	/^u_doit(int startcount)$/;"	f	file:
u_entry	structs.h	/^struct u_entry$/;"	s
u_entry_T	structs.h	/^typedef struct u_entry u_entry_T;$/;"	t	typeref:struct:u_entry
u_eval_tree	undo.c	/^u_eval_tree(u_header_T *first_uhp, list_T *list)$/;"	f	file:
u_find_first_changed	undo.c	/^u_find_first_changed(void)$/;"	f
u_free_uhp	undo.c	/^u_free_uhp(u_header_T *uhp)$/;"	f	file:
u_freebranch	undo.c	/^u_freebranch($/;"	f	file:
u_freeentries	undo.c	/^u_freeentries($/;"	f	file:
u_freeentry	undo.c	/^u_freeentry(u_entry_T *uep, long n)$/;"	f	file:
u_freeheader	undo.c	/^u_freeheader($/;"	f	file:
u_get_headentry	undo.c	/^u_get_headentry(void)$/;"	f	file:
u_get_undo_file_name	undo.c	/^u_get_undo_file_name(char_u *buf_ffname, int reading)$/;"	f	file:
u_getbot	undo.c	/^u_getbot(void)$/;"	f	file:
u_grave	regexp_nfa.c	749;"	d	file:
u_header	structs.h	/^struct u_header$/;"	s
u_header_T	structs.h	/^typedef struct u_header u_header_T;$/;"	t	typeref:struct:u_header
u_inssub	undo.c	/^u_inssub(linenr_T lnum)$/;"	f
u_newcount	undo.c	/^static long	u_newcount, u_oldcount;$/;"	v	file:
u_oldcount	undo.c	/^static long	u_newcount, u_oldcount;$/;"	v	file:
u_read_undo	undo.c	/^u_read_undo(char_u *name, char_u *hash, char_u *orig_name UNUSED)$/;"	f
u_redo	undo.c	/^u_redo(int count)$/;"	f
u_save	undo.c	/^u_save(linenr_T top, linenr_T bot)$/;"	f
u_save_cursor	undo.c	/^u_save_cursor(void)$/;"	f
u_save_line	undo.c	/^u_save_line(undoline_T *ul, linenr_T lnum)$/;"	f	file:
u_savecommon	undo.c	/^u_savecommon($/;"	f
u_savedel	undo.c	/^u_savedel(linenr_T lnum, long nlines)$/;"	f
u_saveline	undo.c	/^u_saveline(linenr_T lnum)$/;"	f	file:
u_savesub	undo.c	/^u_savesub(linenr_T lnum)$/;"	f
u_sync	undo.c	/^u_sync($/;"	f
u_sync_once	globals.h	/^EXTERN int u_sync_once INIT(= 0);	\/\/ Call u_sync() once when evaluating$/;"	v
u_unch_branch	undo.c	/^u_unch_branch(u_header_T *uhp)$/;"	f	file:
u_unchanged	undo.c	/^u_unchanged(buf_T *buf)$/;"	f
u_undo	undo.c	/^u_undo(int count)$/;"	f
u_undo_end	undo.c	/^u_undo_end($/;"	f	file:
u_undoline	undo.c	/^u_undoline(void)$/;"	f
u_undoredo	undo.c	/^u_undoredo(int undo)$/;"	f	file:
u_update_save_nr	undo.c	/^u_update_save_nr(buf_T *buf)$/;"	f
u_write_undo	undo.c	/^u_write_undo($/;"	f
uc	blowfish.c	/^    char_u   uc[8];$/;"	m	union:__anon1	file:
uc_add_command	usercmd.c	/^uc_add_command($/;"	f	file:
uc_addr_type	usercmd.c	/^    cmd_addr_T	uc_addr_type;	\/\/ The command's address type$/;"	m	struct:ucmd	file:
uc_argt	usercmd.c	/^    long_u	uc_argt;	\/\/ The argument type$/;"	m	struct:ucmd	file:
uc_check_code	usercmd.c	/^uc_check_code($/;"	f	file:
uc_clear	usercmd.c	/^uc_clear(garray_T *gap)$/;"	f
uc_compl	usercmd.c	/^    int		uc_compl;	\/\/ completion type$/;"	m	struct:ucmd	file:
uc_compl_arg	usercmd.c	/^    char_u	*uc_compl_arg;	\/\/ completion argument if any$/;"	m	struct:ucmd	file:
uc_def	usercmd.c	/^    long	uc_def;		\/\/ The default value for a range\/count$/;"	m	struct:ucmd	file:
uc_fun_cmd	usercmd.c	/^uc_fun_cmd(void)$/;"	f
uc_list	usercmd.c	/^uc_list(char_u *name, size_t name_len)$/;"	f	file:
uc_name	usercmd.c	/^    char_u	*uc_name;	\/\/ The command name$/;"	m	struct:ucmd	file:
uc_rep	usercmd.c	/^    char_u	*uc_rep;	\/\/ The command's replacement string$/;"	m	struct:ucmd	file:
uc_scan_attr	usercmd.c	/^uc_scan_attr($/;"	f	file:
uc_script_ctx	usercmd.c	/^    sctx_T	uc_script_ctx;	\/\/ SCTX where the command was defined$/;"	m	struct:ucmd	file:
uc_split_args	usercmd.c	/^uc_split_args(char_u *arg, size_t *lenp)$/;"	f	file:
ucmd	usercmd.c	/^typedef struct ucmd$/;"	s	file:
ucmd_T	usercmd.c	/^} ucmd_T;$/;"	t	typeref:struct:ucmd	file:
ucmds	usercmd.c	/^static garray_T ucmds = {0, 0, sizeof(ucmd_T), 4, NULL};$/;"	v	file:
ucs2bytes	bufwrite.c	/^ucs2bytes($/;"	f	file:
ucslen	winclip.c	/^    int ucslen;		\/\/ length of CF_UNICODETEXT in words$/;"	m	struct:__anon138	file:
ue_array	structs.h	/^    undoline_T	*ue_array;	\/\/ array of lines in undo block$/;"	m	struct:u_entry
ue_bot	structs.h	/^    linenr_T	ue_bot;		\/\/ number of line below undo block$/;"	m	struct:u_entry
ue_lcount	structs.h	/^    linenr_T	ue_lcount;	\/\/ linecount when u_save called$/;"	m	struct:u_entry
ue_magic	structs.h	/^    int		ue_magic;	\/\/ magic number to check allocation$/;"	m	struct:u_entry
ue_next	structs.h	/^    u_entry_T	*ue_next;	\/\/ pointer to next entry in list$/;"	m	struct:u_entry
ue_size	structs.h	/^    long	ue_size;	\/\/ number of lines in ue_array$/;"	m	struct:u_entry
ue_top	structs.h	/^    linenr_T	ue_top;		\/\/ number of line above undo block$/;"	m	struct:u_entry
uf_arg_types	structs.h	/^    type_T	**uf_arg_types;	\/\/ argument types (count == uf_args.ga_len)$/;"	m	struct:__anon211
uf_args	structs.h	/^    garray_T	uf_args;	\/\/ arguments$/;"	m	struct:__anon211
uf_calls	structs.h	/^    int		uf_calls;	\/\/ nr of active calls$/;"	m	struct:__anon211
uf_cleared	structs.h	/^    int		uf_cleared;	\/\/ func_clear() was already called$/;"	m	struct:__anon211
uf_def_arg_idx	structs.h	/^    int		*uf_def_arg_idx; \/\/ instruction indexes for evaluating$/;"	m	struct:__anon211
uf_def_args	structs.h	/^    garray_T	uf_def_args;	\/\/ default argument expressions$/;"	m	struct:__anon211
uf_dfunc_idx	structs.h	/^    int		uf_dfunc_idx;	\/\/ >= 0 for :def function only$/;"	m	struct:__anon211
uf_flags	structs.h	/^    int		uf_flags;	\/\/ FC_ flags$/;"	m	struct:__anon211
uf_lines	structs.h	/^    garray_T	uf_lines;	\/\/ function lines$/;"	m	struct:__anon211
uf_name	structs.h	/^    char_u	uf_name[1];	\/\/ name of function (actually longer); can$/;"	m	struct:__anon211
uf_name_exp	structs.h	/^    char_u	*uf_name_exp;	\/\/ if "uf_name[]" starts with SNR the name with$/;"	m	struct:__anon211
uf_prof_initialized	structs.h	/^    int		uf_prof_initialized;$/;"	m	struct:__anon211
uf_profiling	structs.h	/^    int		uf_profiling;	\/\/ TRUE when func is being profiled$/;"	m	struct:__anon211
uf_refcount	structs.h	/^    int		uf_refcount;	\/\/ reference count, see func_name_refcount()$/;"	m	struct:__anon211
uf_ret_type	structs.h	/^    type_T	*uf_ret_type;	\/\/ return type$/;"	m	struct:__anon211
uf_scoped	structs.h	/^    funccall_T	*uf_scoped;	\/\/ l: local variables for closure$/;"	m	struct:__anon211
uf_script_ctx	structs.h	/^    sctx_T	uf_script_ctx;	\/\/ SCTX where function was defined,$/;"	m	struct:__anon211
uf_tm_children	structs.h	/^    proftime_T	uf_tm_children;	\/\/ time spent in children this call$/;"	m	struct:__anon211
uf_tm_count	structs.h	/^    int		uf_tm_count;	\/\/ nr of calls$/;"	m	struct:__anon211
uf_tm_self	structs.h	/^    proftime_T	uf_tm_self;	\/\/ time spent in function itself$/;"	m	struct:__anon211
uf_tm_total	structs.h	/^    proftime_T	uf_tm_total;	\/\/ time spent in function + children$/;"	m	struct:__anon211
uf_tml_children	structs.h	/^    proftime_T	uf_tml_children; \/\/ time spent in children for this line$/;"	m	struct:__anon211
uf_tml_count	structs.h	/^    int		*uf_tml_count;	\/\/ nr of times line was executed$/;"	m	struct:__anon211
uf_tml_execed	structs.h	/^    int		uf_tml_execed;	\/\/ line being timed was executed$/;"	m	struct:__anon211
uf_tml_idx	structs.h	/^    int		uf_tml_idx;	\/\/ index of line being timed; -1 if none$/;"	m	struct:__anon211
uf_tml_self	structs.h	/^    proftime_T	*uf_tml_self;	\/\/ time spent in a line itself$/;"	m	struct:__anon211
uf_tml_start	structs.h	/^    proftime_T	uf_tml_start;	\/\/ start time for current line$/;"	m	struct:__anon211
uf_tml_total	structs.h	/^    proftime_T	*uf_tml_total;	\/\/ time spent in a line + children$/;"	m	struct:__anon211
uf_tml_wait	structs.h	/^    proftime_T	uf_tml_wait;	\/\/ start wait time for current line$/;"	m	struct:__anon211
uf_type_list	structs.h	/^    garray_T	uf_type_list;	\/\/ types used in arg and return types$/;"	m	struct:__anon211
uf_va_name	structs.h	/^    char_u	*uf_va_name;	\/\/ name from "...name" or NULL$/;"	m	struct:__anon211
uf_va_type	structs.h	/^    type_T	*uf_va_type;	\/\/ type from "...name: type" or NULL$/;"	m	struct:__anon211
uf_varargs	structs.h	/^    int		uf_varargs;	\/\/ variable nr of arguments (old style)$/;"	m	struct:__anon211
ufunc	structs.h	/^	ufunc_T *ufunc;     \/\/ function info$/;"	m	union:__anon225::__anon226
ufunc	vim9.h	/^	cufunc_T	    ufunc;$/;"	m	union:__anon276::__anon277
ufunc_T	structs.h	/^} ufunc_T;$/;"	t	typeref:struct:__anon211
ufunc_T	structs.h	/^} ufunc_T;$/;"	t	typeref:struct:__anon218
ufunc_argcount	vim9execute.c	/^ufunc_argcount(ufunc_T *ufunc)$/;"	f	file:
uh_alt_next	structs.h	/^    } uh_alt_next;$/;"	m	struct:u_header	typeref:union:u_header::__anon187
uh_alt_prev	structs.h	/^    } uh_alt_prev;$/;"	m	struct:u_header	typeref:union:u_header::__anon188
uh_cursor	structs.h	/^    pos_T	uh_cursor;	\/\/ cursor position before saving$/;"	m	struct:u_header
uh_cursor_vcol	structs.h	/^    long	uh_cursor_vcol;$/;"	m	struct:u_header
uh_entry	structs.h	/^    u_entry_T	*uh_entry;	\/\/ pointer to first entry$/;"	m	struct:u_header
uh_flags	structs.h	/^    int		uh_flags;	\/\/ see below$/;"	m	struct:u_header
uh_getbot_entry	structs.h	/^    u_entry_T	*uh_getbot_entry; \/\/ pointer to where ue_bot must be set$/;"	m	struct:u_header
uh_magic	structs.h	/^    int		uh_magic;	\/\/ magic number to check allocation$/;"	m	struct:u_header
uh_namedm	structs.h	/^    pos_T	uh_namedm[NMARKS];	\/\/ marks before undo\/after redo$/;"	m	struct:u_header
uh_next	structs.h	/^    } uh_next;$/;"	m	struct:u_header	typeref:union:u_header::__anon185
uh_prev	structs.h	/^    } uh_prev;$/;"	m	struct:u_header	typeref:union:u_header::__anon186
uh_save_nr	structs.h	/^    long	uh_save_nr;	\/\/ set when the file was saved after the$/;"	m	struct:u_header
uh_seq	structs.h	/^    long	uh_seq;		\/\/ sequence number, higher == newer undo$/;"	m	struct:u_header
uh_time	structs.h	/^    time_T	uh_time;	\/\/ timestamp when the change was made$/;"	m	struct:u_header
uh_visual	structs.h	/^    visualinfo_T uh_visual;	\/\/ Visual areas before undo\/after redo$/;"	m	struct:u_header
uh_walk	structs.h	/^    int		uh_walk;	\/\/ used by undo_time()$/;"	m	struct:u_header
ui_breakcheck	ui.c	/^ui_breakcheck(void)$/;"	f
ui_breakcheck_force	ui.c	/^ui_breakcheck_force(int force)$/;"	f
ui_char_avail	ui.c	/^ui_char_avail(void)$/;"	f
ui_cursor_shape	ui.c	/^ui_cursor_shape(void)$/;"	f
ui_cursor_shape_forced	ui.c	/^ui_cursor_shape_forced(int forced)$/;"	f
ui_delay	ui.c	/^ui_delay(long msec, int ignoreinput)$/;"	f
ui_focus_change	ui.c	/^ui_focus_change($/;"	f
ui_get_shellsize	ui.c	/^ui_get_shellsize(void)$/;"	f
ui_get_winpos	ui.c	/^ui_get_winpos(int *x, int *y, varnumber_T timeout UNUSED)$/;"	f
ui_inchar	ui.c	/^ui_inchar($/;"	f
ui_inchar_undo	ui.c	/^ui_inchar_undo(char_u *s, int len)$/;"	f
ui_may_remove_balloon	popupmenu.c	/^ui_may_remove_balloon(void)$/;"	f
ui_new_shellsize	ui.c	/^ui_new_shellsize(void)$/;"	f
ui_post_balloon	popupmenu.c	/^ui_post_balloon(char_u *mesg, list_T *list)$/;"	f
ui_remove_balloon	popupmenu.c	/^ui_remove_balloon(void)$/;"	f
ui_set_shellsize	ui.c	/^ui_set_shellsize($/;"	f
ui_suspend	ui.c	/^ui_suspend(void)$/;"	f
ui_wait_for_chars_or_timer	ui.c	/^ui_wait_for_chars_or_timer($/;"	f
ui_write	ui.c	/^ui_write(char_u *s, int len)$/;"	f
ul	blowfish.c	/^    UINT32_T ul[2];$/;"	m	union:__anon1	file:
ul_len	structs.h	/^    long	ul_len;		\/\/ length of the line including NUL, plus text$/;"	m	struct:__anon184
ul_line	structs.h	/^    char_u	*ul_line;	\/\/ text of the line$/;"	m	struct:__anon184
uline_offset	hardcopy.c	/^    int		uline_offset;$/;"	m	struct:prt_ps_font_S	file:
uline_width	hardcopy.c	/^    int		uline_width;$/;"	m	struct:prt_ps_font_S	file:
un_Magic	regexp.c	29;"	d	file:
unadjust_for_sel	normal.c	/^unadjust_for_sel(void)$/;"	f
unblock_autocmds	autocmd.c	/^unblock_autocmds(void)$/;"	f
unblock_signals	os_unix.c	/^unblock_signals(sigset_t *set)$/;"	f	file:
unchanged	change.c	/^unchanged(buf_T *buf, int ff, int always_inc_changedtick)$/;"	f
undercurl	structs.h	/^    int		undercurl;$/;"	m	struct:__anon246
underline	structs.h	/^    int		underline;$/;"	m	struct:__anon246
undisplay_dollar	edit.c	/^undisplay_dollar(void)$/;"	f
undo	gui_motif.c	/^    Widget undo;	\/\/ 'Undo' action button$/;"	m	struct:_SharedFindReplace	file:
undo_allowed	undo.c	/^undo_allowed(void)$/;"	f
undo_flush	undo.c	/^undo_flush(bufinfo_T *bi)$/;"	f	file:
undo_off	globals.h	/^EXTERN int	undo_off INIT(= FALSE);	    \/\/ undo switched off for now$/;"	v
undo_read	undo.c	/^undo_read(bufinfo_T *bi, char_u *buffer, size_t size)$/;"	f	file:
undo_read_2c	undo.c	/^undo_read_2c(bufinfo_T *bi)$/;"	f	file:
undo_read_4c	undo.c	/^undo_read_4c(bufinfo_T *bi)$/;"	f	file:
undo_read_byte	undo.c	/^undo_read_byte(bufinfo_T *bi)$/;"	f	file:
undo_read_time	undo.c	/^undo_read_time(bufinfo_T *bi)$/;"	f	file:
undo_time	undo.c	/^undo_time($/;"	f
undo_undoes	undo.c	/^static int	undo_undoes = FALSE;$/;"	v	file:
undo_write	undo.c	/^undo_write(bufinfo_T *bi, char_u *ptr, size_t len)$/;"	f	file:
undo_write_bytes	undo.c	/^undo_write_bytes(bufinfo_T *bi, long_u nr, int len)$/;"	f	file:
undoline_T	structs.h	/^} undoline_T;$/;"	t	typeref:struct:__anon184
undrawBalloon	gui_beval.c	/^undrawBalloon(BalloonEval *beval)$/;"	f	file:
unescape_shellxquote	os_win32.c	/^unescape_shellxquote(char_u *p, char_u *escaped)$/;"	f	file:
ungetchr	regexp.c	/^ungetchr(void)$/;"	f	file:
uninstall_check	dosinst.c	/^uninstall_check(int skip_question)$/;"	f	file:
uniquefy_paths	findfile.c	/^uniquefy_paths(garray_T *gap, char_u *pattern)$/;"	f
unix_build_argv	os_unix.c	/^unix_build_argv($/;"	f
unix_did_set_title	os_unix.c	/^static int	unix_did_set_title = FALSE;$/;"	v	file:
unix_expandpath	filepath.c	/^unix_expandpath($/;"	f
unload_dummy_buffer	quickfix.c	/^unload_dummy_buffer(buf_T *buf, char_u *dirname_start)$/;"	f	file:
unputcmdline	ex_getln.c	/^unputcmdline(void)$/;"	f
unref_extmatch	regexp.c	/^unref_extmatch(reg_extmatch_T *em)$/;"	f
unref_var_dict	evalvars.c	/^unref_var_dict(dict_T *dict)$/;"	f
unserialize_pos	undo.c	/^unserialize_pos(bufinfo_T *bi, pos_T *pos)$/;"	f	file:
unserialize_uep	undo.c	/^unserialize_uep(bufinfo_T *bi, int *error, char_u *file_name)$/;"	f	file:
unserialize_uhp	undo.c	/^unserialize_uhp(bufinfo_T *bi, char_u *file_name)$/;"	f	file:
unserialize_visualinfo	undo.c	/^unserialize_visualinfo(bufinfo_T *bi, visualinfo_T *info)$/;"	f	file:
unset_global_local_option	option.c	/^unset_global_local_option(char_u *name, void *from)$/;"	f
unshift_special	normal.c	/^unshift_special(cmdarg_T *cap)$/;"	f	file:
unshowmode	screen.c	/^unshowmode(int force)$/;"	f
unused	gui_mac.c	/^    long *unused;   \/\/ 0 (not used)$/;"	m	struct:CW_GetText	file:
unused1	gui_mac.c	/^    short unused1; \/\/ 0 (not used)$/;"	m	struct:SelectionRange	file:
unused2	gui_mac.c	/^    long unused2; \/\/ 0 (not used)$/;"	m	struct:SelectionRange	file:
up	gui_gtk.c	/^    GtkWidget *up;	\/\/ search direction 'Up' radio button$/;"	m	struct:_SharedFindReplace	file:
up	gui_motif.c	/^    Widget up;		\/\/ search direction 'Up' radio button$/;"	m	struct:_SharedFindReplace	file:
upd_block0_T	memline.c	/^} upd_block0_T;$/;"	t	typeref:enum:__anon70	file:
updateWindow	drawscreen.c	/^updateWindow(win_T *wp)$/;"	f
update_Insstart_orig	edit.c	/^static int	update_Insstart_orig = TRUE; \/\/ set Insstart_orig to Insstart$/;"	v	file:
update_curbuf	drawscreen.c	/^update_curbuf(int type)$/;"	f
update_cursor	terminal.c	/^update_cursor(term_T *term, int redraw)$/;"	f	file:
update_curswant	move.c	/^update_curswant(void)$/;"	f
update_debug_sign	drawscreen.c	/^update_debug_sign(buf_T *buf, linenr_T lnum)$/;"	f
update_finish	drawscreen.c	/^update_finish(void)$/;"	f	file:
update_force_abort	ex_eval.c	/^update_force_abort(void)$/;"	f
update_im_font	gui_w32.c	/^update_im_font(void)$/;"	f	file:
update_mouseshape	misc2.c	/^update_mouseshape(int shape_idx)$/;"	f
update_offset	blowfish.c	/^    int		update_offset;$/;"	m	struct:__anon2	file:
update_popup_transparent	popupwin.c	/^update_popup_transparent(win_T *wp, int val)$/;"	f	file:
update_popups	popupwin.c	/^update_popups(void (*win_update)(win_T *wp))$/;"	f
update_prepare	drawscreen.c	/^update_prepare(void)$/;"	f	file:
update_screen	drawscreen.c	/^update_screen(int type_arg)$/;"	f
update_search_hl	highlight.c	/^update_search_hl($/;"	f
update_si_attr	syntax.c	/^update_si_attr(int idx)$/;"	f	file:
update_si_end	syntax.c	/^update_si_end($/;"	f	file:
update_snapshot	terminal.c	/^update_snapshot(term_T *term)$/;"	f	file:
update_system_term	terminal.c	/^update_system_term(term_T *term)$/;"	f	file:
update_tcap	term.c	/^update_tcap(int attr)$/;"	f
update_topline	move.c	/^update_topline(void)$/;"	f
update_topline_cursor	ex_docmd.c	/^update_topline_cursor(void)$/;"	f
update_topline_redraw	move.c	/^update_topline_redraw(void)$/;"	f
update_window_manager_hints	gui_gtk_x11.c	/^update_window_manager_hints(int force_width, int force_height)$/;"	f	file:
updatescript	getchar.c	/^updatescript(int c)$/;"	f	file:
updating_screen	globals.h	/^EXTERN int	updating_screen INIT(= FALSE);$/;"	v
usage	if_cscope.h	/^    char *  usage;$/;"	m	struct:__anon147
usage	main.c	/^usage(void)$/;"	f	file:
useAntialias_cached	gui_mac.c	/^UInt32      useAntialias_cached = 0x0;$/;"	v
use_aucmd_win	structs.h	/^    int		use_aucmd_win;	\/\/ using aucmd_win$/;"	m	struct:__anon244
use_conpty	terminal.c	/^use_conpty(void)$/;"	f
use_debug_break_level	structs.h	/^    int		use_debug_break_level;$/;"	m	struct:__anon252
use_ef	structs.h	/^    char_u	*use_ef;		\/\/ 'errorfile' from -q argument$/;"	m	struct:__anon252
use_gvimrc	globals.h	/^EXTERN char_u	*use_gvimrc INIT(= NULL);	\/\/ "-U" cmdline argument$/;"	v
use_midword	spell.c	/^use_midword(slang_T *lp, win_T *wp)$/;"	f	file:
use_multibytecode	regexp_bt.c	/^use_multibytecode(int c)$/;"	f	file:
use_popup_T	vim.h	/^} use_popup_T;$/;"	t	typeref:enum:__anon283
use_reg_one	structs.h	/^    int		use_reg_one;	\/\/ TRUE if delete uses reg 1 even when not$/;"	m	struct:oparg_S
use_vimrc	structs.h	/^    char_u	*use_vimrc;		\/\/ vimrc from -u argument$/;"	m	struct:__anon252
use_viscol	quickfix.c	/^    char_u	use_viscol;$/;"	m	struct:__anon90	file:
use_vtp	os_win32.c	/^use_vtp(void)$/;"	f
use_xterm_like_mouse	os_unix.c	/^use_xterm_like_mouse(char_u *name)$/;"	f
use_xterm_mouse	os_unix.c	/^use_xterm_mouse(void)$/;"	f
used_alist_count	os_win32.c	/^static int	used_alist_count = 0;$/;"	v	file:
used_file_arg	os_win32.c	/^used_file_arg(char *name, int literal, int full_path, int diff_mode)$/;"	f
used_file_argc	os_win32.c	/^static int	used_file_argc = 0;	\/\/ last argument in global_argv[] used$/;"	v	file:
used_file_count	os_win32.c	/^static int	used_file_count = 0;	\/\/ nr of entries in used_file_indexes$/;"	v	file:
used_file_diff_mode	os_win32.c	/^static int	used_file_diff_mode = FALSE;  \/\/ file name was with diff mode$/;"	v	file:
used_file_full_path	os_win32.c	/^static int	used_file_full_path = FALSE;  \/\/ file name was full path$/;"	v	file:
used_file_indexes	os_win32.c	/^static int	*used_file_indexes = NULL; \/\/ indexes in global_argv[] for$/;"	v	file:
used_file_literal	os_win32.c	/^static int	used_file_literal = FALSE;  \/\/ take file names literally$/;"	v	file:
used_for	structs.h	/^    char	used_for;	\/\/ SHAPE_MOUSE and\/or SHAPE_CURSOR$/;"	m	struct:cursor_entry
usefilter	ex_cmds.h	/^    int		usefilter;	\/\/ TRUE with ":w !command" and ":r!command"$/;"	m	struct:exarg
user_abort	structs.h	/^    int		user_abort;$/;"	m	struct:__anon247
user_data	structs.h	/^    char_u	*user_data;	\/\/ used with tagfunc$/;"	m	struct:taggy
user_data	tag.c	/^    char_u	*user_data;	\/\/ user_data string$/;"	m	struct:tag_pointers	file:
user_data_end	tag.c	/^    char_u	*user_data_end;	\/\/ end of user_data$/;"	m	struct:tag_pointers	file:
user_digraphs	digraph.c	/^static garray_T	user_digraphs = {0, 0, (int)sizeof(digr_T), 10, NULL};$/;"	v	file:
user_func_error	userfunc.c	/^user_func_error(int error, char_u *name)$/;"	f
userhl	structs.h	/^    int		userhl;		\/\/ 0: no HL, 1-9: User HL, < 0 for syn ID$/;"	m	struct:stl_hlrec
useridx	ex_cmds.h	/^    int		useridx;	\/\/ user command index$/;"	m	struct:exarg
username	misc2.c	/^static char_u	*username = NULL; \/\/ cached result of mch_get_user_name()$/;"	v	file:
using_gnome	gui_gtk_x11.c	/^static int using_gnome = 0;$/;"	v	file:
using_gnome	gui_gtk_x11.c	396;"	d	file:
using_script	getchar.c	/^using_script(void)$/;"	f
utf16_to_enc	winclip.c	/^utf16_to_enc(short_u *str, int *lenp)$/;"	f
utf16_to_utf8	winclip.c	/^utf16_to_utf8(short_u *instr, int inlen, char_u *outstr)$/;"	f
utf16ascncmp	os_mswin.c	/^utf16ascncmp(const WCHAR *w, const char *p, size_t n)$/;"	f	file:
utf8_atom	ui.c	/^static Atom	utf8_atom;$/;"	v	file:
utf8_string_atom	gui_gtk_x11.c	/^static GdkAtom utf8_string_atom = GDK_NONE;$/;"	v	file:
utf8_to_utf16	winclip.c	/^utf8_to_utf16(char_u *instr, int inlen, short_u *outstr, int *unconvlenp)$/;"	f
utf8len_tab	mbyte.c	/^static char utf8len_tab[256] =$/;"	v	file:
utf8len_tab_zero	mbyte.c	/^static char utf8len_tab_zero[256] =$/;"	v	file:
utf_ambiguous_width	mbyte.c	/^utf_ambiguous_width(int c)$/;"	f
utf_byte2len	mbyte.c	/^utf_byte2len(int b)$/;"	f
utf_char2bytes	mbyte.c	/^utf_char2bytes(int c, char_u *buf)$/;"	f
utf_char2cells	mbyte.c	/^utf_char2cells(int c)$/;"	f
utf_char2len	mbyte.c	/^utf_char2len(int c)$/;"	f
utf_class	mbyte.c	/^utf_class(int c)$/;"	f
utf_class_buf	mbyte.c	/^utf_class_buf(int c, buf_T *buf)$/;"	f
utf_composinglike	mbyte.c	/^utf_composinglike(char_u *p1, char_u *p2)$/;"	f
utf_convert	mbyte.c	/^utf_convert($/;"	f	file:
utf_find_illegal	mbyte.c	/^utf_find_illegal(void)$/;"	f
utf_fold	mbyte.c	/^utf_fold(int a)$/;"	f
utf_head_off	mbyte.c	/^utf_head_off(char_u *base, char_u *p)$/;"	f
utf_iscomposing	mbyte.c	/^utf_iscomposing(int c)$/;"	f
utf_iscomposing_uint	mbyte.c	/^utf_iscomposing_uint(UINT32_T c)$/;"	f
utf_islower	mbyte.c	/^utf_islower(int a)$/;"	f
utf_isupper	mbyte.c	/^utf_isupper(int a)$/;"	f
utf_off2cells	mbyte.c	/^utf_off2cells(unsigned off, unsigned max_off)$/;"	f
utf_printable	mbyte.c	/^utf_printable(int c)$/;"	f
utf_ptr2cells	mbyte.c	/^utf_ptr2cells($/;"	f
utf_ptr2cells_len	mbyte.c	/^utf_ptr2cells_len(char_u *p, int size)$/;"	f	file:
utf_ptr2char	mbyte.c	/^utf_ptr2char(char_u *p)$/;"	f
utf_ptr2len	mbyte.c	/^utf_ptr2len(char_u *p)$/;"	f
utf_ptr2len_len	mbyte.c	/^utf_ptr2len_len(char_u *p, int size)$/;"	f
utf_safe_read_char_adv	mbyte.c	/^utf_safe_read_char_adv(char_u **s, size_t *n)$/;"	f	file:
utf_strnicmp	mbyte.c	/^utf_strnicmp($/;"	f	file:
utf_tolower	mbyte.c	/^utf_tolower(int a)$/;"	f
utf_toupper	mbyte.c	/^utf_toupper(int a)$/;"	f
utf_uint2cells	mbyte.c	/^utf_uint2cells(UINT32_T c)$/;"	f
utf_valid_string	mbyte.c	/^utf_valid_string(char_u *s, char_u *end)$/;"	f
utfc_char2bytes	mbyte.c	/^utfc_char2bytes(int off, char_u *buf)$/;"	f
utfc_ptr2char	mbyte.c	/^utfc_ptr2char($/;"	f
utfc_ptr2char_len	mbyte.c	/^utfc_ptr2char_len($/;"	f
utfc_ptr2len	mbyte.c	/^utfc_ptr2len(char_u *p)$/;"	f
utfc_ptr2len_len	mbyte.c	/^utfc_ptr2len_len(char_u *p, int size)$/;"	f
uvarnumber_T	structs.h	/^   typedef uint64_t		uvarnumber_T;$/;"	t
uvarnumber_T	structs.h	/^   typedef unsigned __int64	uvarnumber_T;$/;"	t
uvarnumber_T	structs.h	/^   typedef unsigned long	uvarnumber_T;$/;"	t
uvarnumber_T	structs.h	/^  typedef unsigned long long	uvarnumber_T;$/;"	t
v2buf	term.c	/^    char v2buf[KSSIZE]; \/\/ save buffer in vtp2 mode$/;"	m	struct:ks_tbl_s	file:
vOrigin	gui_at_fs.c	/^    int		vOrigin;$/;"	m	struct:__anon32	file:
v_blob	structs.h	/^	blob_T		*v_blob;	\/\/ blob value (can be NULL!)$/;"	m	union:__anon205::__anon206
v_channel	structs.h	/^	channel_T	*v_channel;	\/\/ channel value (can be NULL!)$/;"	m	union:__anon205::__anon206
v_dict	structs.h	/^	dict_T		*v_dict;	\/\/ dict value (can be NULL!)$/;"	m	union:__anon205::__anon206
v_dying	globals.h	/^EXTERN int	v_dying INIT(= 0); \/\/ internal value of v:dying$/;"	v
v_exception	evalvars.c	/^v_exception(char_u *oldval)$/;"	f
v_float	structs.h	/^	float_T		v_float;	\/\/ floating number value$/;"	m	union:__anon205::__anon206
v_job	structs.h	/^	job_T		*v_job;		\/\/ job value (can be NULL!)$/;"	m	union:__anon205::__anon206
v_list	structs.h	/^	list_T		*v_list;	\/\/ list value (can be NULL!)$/;"	m	union:__anon205::__anon206
v_lock	structs.h	/^    char	v_lock;	    \/\/ see below: VAR_LOCKED, VAR_FIXED$/;"	m	struct:__anon205
v_number	structs.h	/^	varnumber_T	v_number;	\/\/ number value$/;"	m	union:__anon205::__anon206
v_partial	structs.h	/^	partial_T	*v_partial;	\/\/ closure: function with args$/;"	m	union:__anon205::__anon206
v_string	structs.h	/^	char_u		*v_string;	\/\/ string value (can be NULL!)$/;"	m	union:__anon205::__anon206
v_swap_corners	normal.c	/^v_swap_corners(int cmdchar)$/;"	f	file:
v_throwpoint	evalvars.c	/^v_throwpoint(char_u *oldval)$/;"	f
v_type	structs.h	/^    vartype_T	v_type;$/;"	m	struct:__anon205
v_visop	normal.c	/^v_visop(cmdarg_T *cap)$/;"	f	file:
val	if_py_both.h	/^    int		val;$/;"	m	struct:numeric_constant
val	regexp.h	/^    int			val;$/;"	m	struct:nfa_state
valObject	if_py_both.h	/^    PyObject	*valObject;$/;"	m	struct:object_constant
valid	quickfix.c	/^    int		valid;$/;"	m	struct:__anon90	file:
valid_filetype	optionstr.c	/^valid_filetype(char_u *val)$/;"	f	file:
valid_fold	fold.c	3039;"	d	file:
valid_fold	fold.c	3156;"	d	file:
valid_name	option.c	/^valid_name(char_u *val, char *allowed)$/;"	f
valid_spellang	spell.c	/^valid_spellang(char_u *val)$/;"	f
valid_spellfile	spell.c	/^valid_spellfile(char_u *val)$/;"	f
valid_tabpage	window.c	/^valid_tabpage(tabpage_T *tpc)$/;"	f
valid_tabpage_win	window.c	/^valid_tabpage_win(tabpage_T *tpc)$/;"	f
valid_varname	evalvars.c	/^valid_varname(char_u *varname)$/;"	f
valid_word_prefix	spell.c	/^valid_word_prefix($/;"	f
valid_yank_reg	register.c	/^valid_yank_reg($/;"	f
validate_botline	move.c	/^validate_botline(void)$/;"	f
validate_cheight	move.c	/^validate_cheight(void)$/;"	f
validate_cline_row	move.c	/^validate_cline_row(void)$/;"	f
validate_current_state	syntax.c	/^validate_current_state(void)$/;"	f	file:
validate_cursor	move.c	/^validate_cursor(void)$/;"	f
validate_cursor_col	move.c	/^validate_cursor_col(void)$/;"	f
validate_maphash	map.c	/^validate_maphash(void)$/;"	f	file:
validate_virtcol	move.c	/^validate_virtcol(void)$/;"	f
validate_virtcol_win	move.c	/^validate_virtcol_win(win_T *wp)$/;"	f
value	ex_cmds.c	/^	    varnumber_T	value;		\/\/ value if sorting by integer$/;"	m	struct:__anon20::__anon21::__anon23	file:
value	gui.h	/^    long	value;		\/\/ Represents top line number visible$/;"	m	struct:GuiScrollbar
value	structs.h	/^    char		*value;		\/\/ exception value$/;"	m	struct:vim_exception
value_changed	buffer.c	/^value_changed(char_u *str, char_u **last)$/;"	f	file:
value_flt	ex_cmds.c	/^	float_T value_flt;		\/\/ value if sorting by float$/;"	m	union:__anon20::__anon21	file:
var	optiondefs.h	/^    char_u	*var;		\/\/ global option: pointer to variable;$/;"	m	struct:vimoption
var	structs.h	/^	dictitem_T	var;		\/\/ variable (without room for name)$/;"	m	struct:funccall_S::__anon212
var2fpos	eval.c	/^var2fpos($/;"	f
var_check_fixed	evalvars.c	/^var_check_fixed(int flags, char_u *name, int use_gettext)$/;"	f
var_check_func_name	evalvars.c	/^var_check_func_name($/;"	f
var_check_lock	evalvars.c	/^var_check_lock(int lock, char_u *name, int use_gettext)$/;"	f
var_check_ro	evalvars.c	/^var_check_ro(int flags, char_u *name, int use_gettext)$/;"	f
var_exists	evalvars.c	/^var_exists(char_u *var)$/;"	f
var_flavour	session.c	/^var_flavour(char_u *varname)$/;"	f
var_flavour_T	structs.h	/^} var_flavour_T;$/;"	t	typeref:enum:__anon256
var_redir_start	evalvars.c	/^var_redir_start(char_u *name, int append)$/;"	f
var_redir_stop	evalvars.c	/^var_redir_stop(void)$/;"	f
var_redir_str	evalvars.c	/^var_redir_str(char_u *value, int value_len)$/;"	f
varnamebuf	evalvars.c	/^static char_u	*varnamebuf = NULL;$/;"	v	file:
varnamebuflen	evalvars.c	/^static int	varnamebuflen = 0;$/;"	v	file:
varnumber_T	structs.h	/^   typedef __int64		varnumber_T;$/;"	t
varnumber_T	structs.h	/^   typedef int64_t		varnumber_T;$/;"	t
varnumber_T	structs.h	/^   typedef long			varnumber_T;$/;"	t
varnumber_T	structs.h	/^  typedef long long		varnumber_T;$/;"	t
vars_clear	evalvars.c	/^vars_clear(hashtab_T *ht)$/;"	f
vars_clear_ext	evalvars.c	/^vars_clear_ext(hashtab_T *ht, int free_val)$/;"	f
vartype_T	structs.h	/^} vartype_T;$/;"	t	typeref:enum:__anon204
vartype_name	vim9compile.c	/^vartype_name(vartype_T type)$/;"	f
vbuf	term.c	/^    char vbuf[KSSIZE];  \/\/ save buffer in vtp mode$/;"	m	struct:ks_tbl_s	file:
vc	quickfix.c	/^    vimconv_T	vc;$/;"	m	struct:__anon89	file:
vc_cpfrom	structs.h	/^    int		vc_cpfrom;	\/\/ codepage to convert from (CONV_CODEPAGE)$/;"	m	struct:__anon202
vc_cpto	structs.h	/^    int		vc_cpto;	\/\/ codepage to convert to (CONV_CODEPAGE)$/;"	m	struct:__anon202
vc_factor	structs.h	/^    int		vc_factor;	\/\/ max. expansion factor$/;"	m	struct:__anon202
vc_fail	structs.h	/^    int		vc_fail;	\/\/ fail for invalid char, don't use '?'$/;"	m	struct:__anon202
vc_fd	structs.h	/^    iconv_t	vc_fd;		\/\/ for CONV_ICONV$/;"	m	struct:__anon202
vc_type	structs.h	/^    int		vc_type;	\/\/ zero or one of the CONV_ values$/;"	m	struct:__anon202
vcol2col	mouse.c	/^vcol2col(win_T *wp, linenr_T lnum, int vcol)$/;"	f
vdcmp	gui.h	/^    int	vdcmp;			    \/\/ Vim Direct Communication Message Port$/;"	m	struct:Gui
ve_flags	option.h	/^EXTERN unsigned ve_flags;$/;"	v
vendorShellClassRec	gui_gtk_vms.h	674;"	d
vendorShellWidgetClass	gui_gtk_vms.h	675;"	d
verb_msg	message.c	/^verb_msg(char *s)$/;"	f
verbose_did_open	message.c	/^static int  verbose_did_open = FALSE;$/;"	v	file:
verbose_enter	message.c	/^verbose_enter(void)$/;"	f
verbose_enter_scroll	message.c	/^verbose_enter_scroll(void)$/;"	f
verbose_fd	message.c	/^static FILE *verbose_fd = NULL;$/;"	v	file:
verbose_leave	message.c	/^verbose_leave(void)$/;"	f
verbose_leave_scroll	message.c	/^verbose_leave_scroll(void)$/;"	f
verbose_open	message.c	/^verbose_open(void)$/;"	f
verbose_save	ex_cmds.h	/^    long	verbose_save;	 \/\/ saved value of p_verbose$/;"	m	struct:exarg
verbose_stop	message.c	/^verbose_stop(void)$/;"	f
version	hardcopy.c	/^    char_u  version[256];$/;"	m	struct:prt_ps_resource_S	file:
version	os_amiga.c	/^static char version[] __attribute__((used)) =$/;"	v	file:
version_msg	version.c	/^version_msg(char *s)$/;"	f	file:
version_msg_wrap	version.c	/^version_msg_wrap(char_u *s, int wrap)$/;"	f	file:
vgetc	getchar.c	/^vgetc(void)$/;"	f
vgetc_busy	globals.h	/^EXTERN int	vgetc_busy INIT(= 0);	      \/\/ when inside vgetc() then > 0$/;"	v
vgetc_im_active	globals.h	/^EXTERN int	vgetc_im_active;	\/\/ Input Method was active for last$/;"	v
vgetorpeek	getchar.c	/^vgetorpeek(int advance)$/;"	f	file:
vgmDlgItm	gui_mac.c	/^} vgmDlgItm; \/\/ Vim Gui_Mac.c Dialog Item$/;"	t	typeref:struct:__anon40	file:
vgr_args_T	quickfix.c	/^} vgr_args_T;$/;"	t	typeref:struct:__anon91	file:
vgr_display_fname	quickfix.c	/^vgr_display_fname(char_u *fname)$/;"	f	file:
vgr_get_auname	quickfix.c	/^vgr_get_auname(cmdidx_T cmdidx)$/;"	f	file:
vgr_init_regmatch	quickfix.c	/^vgr_init_regmatch(regmmatch_T *regmatch, char_u *s)$/;"	f	file:
vgr_jump_to_match	quickfix.c	/^vgr_jump_to_match($/;"	f	file:
vgr_load_dummy_buf	quickfix.c	/^vgr_load_dummy_buf($/;"	f	file:
vgr_match_buflines	quickfix.c	/^vgr_match_buflines($/;"	f	file:
vgr_process_args	quickfix.c	/^vgr_process_args($/;"	f	file:
vgr_process_files	quickfix.c	/^vgr_process_files($/;"	f	file:
vgr_qflist_valid	quickfix.c	/^vgr_qflist_valid($/;"	f	file:
vi_curswant	structs.h	/^    colnr_T	vi_curswant;	\/\/ MAXCOL from w_curswant$/;"	m	struct:__anon183
vi_end	structs.h	/^    pos_T	vi_end;		\/\/ end position of last VIsual$/;"	m	struct:__anon183
vi_jumplist	viminfo.c	/^static xfmark_T *vi_jumplist = NULL;$/;"	v	file:
vi_jumplist_len	viminfo.c	/^static int vi_jumplist_len = 0;$/;"	v	file:
vi_mode	structs.h	/^    int		vi_mode;	\/\/ VIsual_mode of last VIsual$/;"	m	struct:__anon183
vi_namedfm	viminfo.c	/^static xfmark_T *vi_namedfm = NULL;$/;"	v	file:
vi_start	structs.h	/^    pos_T	vi_start;	\/\/ start pos of last VIsual$/;"	m	struct:__anon183
viewstate_T	ex_getln.c	/^} viewstate_T;$/;"	t	typeref:struct:__anon26	file:
vimApp	gui.h	/^    VimApp     *vimApp;$/;"	m	struct:Gui
vimContainer	gui.h	/^    PtWidget_t	*vimContainer;		\/\/ PtPanel$/;"	m	struct:Gui
vimForm	gui.h	/^    VimFormView *vimForm;$/;"	m	struct:Gui
vimForm	gui_athena.c	/^static Widget vimForm = (Widget)0;$/;"	v	file:
vimForm	gui_motif.c	/^static Widget vimForm;$/;"	v	file:
vimLoadLib	os_win32.c	/^vimLoadLib(char *name)$/;"	f
vimMenuBar	gui.h	/^    PtWidget_t	*vimMenuBar;$/;"	m	struct:Gui
vimProperty	if_xcmdsrv.c	/^static Atom	vimProperty = None;$/;"	v	file:
vimSetDlgItemText	os_mswin.c	/^vimSetDlgItemText(HWND hDlg, int nIDDlgItem, char_u *s)$/;"	f	file:
vimShell	gui_x11.c	/^Widget vimShell = (Widget)0;$/;"	v
vimTextArea	gui.h	/^    PtWidget_t	*vimTextArea;		\/\/ PtRaw$/;"	m	struct:Gui
vimTextArea	gui.h	/^    VimTextAreaView *vimTextArea;$/;"	m	struct:Gui
vimToolBar	gui.h	/^    PtWidget_t	*vimToolBar;$/;"	m	struct:Gui
vimToolBarGroup	gui.h	/^    PtWidget_t	*vimToolBarGroup;$/;"	m	struct:Gui
vimWindow	gui.h	/^    PtWidget_t	*vimWindow;		\/\/ PtWindow$/;"	m	struct:Gui
vimWindow	gui.h	/^    VimWindow  *vimWindow;$/;"	m	struct:Gui
vim_FullName	filepath.c	/^vim_FullName($/;"	f
vim_SelFile	gui_at_fs.c	/^vim_SelFile($/;"	f
vim_WindowProc	gui_w32.c	/^vim_WindowProc(HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam)$/;"	f
vim_XawScrollbarSetThumb	gui_at_sb.c	/^vim_XawScrollbarSetThumb(Widget w, double top, double shown, double max)$/;"	f
vim_acl_T	vim.h	/^typedef void	    *vim_acl_T;		\/\/ dummy to pass an ACL to a function$/;"	t
vim_acl_solaris_T	os_unix.c	/^typedef struct vim_acl_solaris_T {$/;"	s	file:
vim_acl_solaris_T	os_unix.c	/^} vim_acl_solaris_T;$/;"	t	typeref:struct:vim_acl_solaris_T	file:
vim_atom	gui_gtk_x11.c	/^static GdkAtom vim_atom = GDK_NONE;	\/\/ Vim's own special selection format$/;"	v	file:
vim_atom	ui.c	/^static Atom	vim_atom;	\/\/ Vim's own special selection format$/;"	v	file:
vim_backtick	filepath.c	/^vim_backtick(char_u *p)$/;"	f	file:
vim_beep	misc1.c	/^vim_beep($/;"	f
vim_blob	if_ruby.c	/^vim_blob(VALUE self UNUSED, VALUE str)$/;"	f	file:
vim_buffer_validp	if_mzsch.c	/^vim_buffer_validp(void *data UNUSED, int argc UNUSED, Scheme_Object **argv)$/;"	f	file:
vim_bufferp	if_mzsch.c	/^vim_bufferp(void *data UNUSED, int argc UNUSED, Scheme_Object **argv)$/;"	f	file:
vim_chdir	misc2.c	/^vim_chdir(char_u *new_dir)$/;"	f
vim_chdirfile	misc2.c	/^vim_chdirfile(char_u *fname, char *trigger_autocmd)$/;"	f
vim_code0	gui_mac.c	/^    char_u  vim_code0;$/;"	m	struct:__anon39	file:
vim_code0	gui_photon.c	/^    char_u  vim_code0;$/;"	m	struct:__anon45	file:
vim_code0	gui_w32.c	/^    char_u  vim_code0;$/;"	m	struct:__anon46	file:
vim_code0	gui_x11.c	/^    char_u  vim_code0;$/;"	m	struct:specialkey	file:
vim_code1	gui_mac.c	/^    char_u  vim_code1;$/;"	m	struct:__anon39	file:
vim_code1	gui_photon.c	/^    char_u  vim_code1;$/;"	m	struct:__anon45	file:
vim_code1	gui_w32.c	/^    char_u  vim_code1;$/;"	m	struct:__anon46	file:
vim_code1	gui_x11.c	/^    char_u  vim_code1;$/;"	m	struct:specialkey	file:
vim_command	if_mzsch.c	/^vim_command(void *data, int argc, Scheme_Object **argv)$/;"	f	file:
vim_command	if_ruby.c	/^vim_command(VALUE self UNUSED, VALUE str)$/;"	f	file:
vim_create_process	os_win32.c	/^vim_create_process($/;"	f	file:
vim_deltempdir	fileio.c	/^vim_deltempdir(void)$/;"	f
vim_dialog_yesno	message.c	/^vim_dialog_yesno($/;"	f
vim_dialog_yesnoallcancel	message.c	/^vim_dialog_yesnoallcancel($/;"	f
vim_dialog_yesnocancel	message.c	/^vim_dialog_yesnocancel($/;"	f
vim_error_check	if_mzsch.c	/^vim_error_check(void)$/;"	f	file:
vim_eval	if_mzsch.c	/^vim_eval(void *data UNUSED, int argc UNUSED, Scheme_Object **argv UNUSED)$/;"	f	file:
vim_evaluate	if_ruby.c	/^vim_evaluate(VALUE self UNUSED, VALUE str)$/;"	f	file:
vim_exception	structs.h	/^struct vim_exception$/;"	s
vim_exn	if_mzsch.c	/^static Scheme_Object *vim_exn = NULL; \/\/ Vim Error exception$/;"	v	file:
vim_fexists	filepath.c	/^vim_fexists(char_u *fname)$/;"	f
vim_fgets	fileio.c	/^vim_fgets(char_u *buf, int size, FILE *fp)$/;"	f
vim_findfile	findfile.c	/^vim_findfile(void *search_ctx_arg)$/;"	f
vim_findfile_cleanup	findfile.c	/^vim_findfile_cleanup(void *ctx)$/;"	f
vim_findfile_free_visited	findfile.c	/^vim_findfile_free_visited(void *search_ctx_arg)$/;"	f	file:
vim_findfile_free_visited_list	findfile.c	/^vim_findfile_free_visited_list(ff_visited_list_hdr_T **list_headp)$/;"	f	file:
vim_findfile_init	findfile.c	/^vim_findfile_init($/;"	f
vim_findfile_stopdir	findfile.c	/^vim_findfile_stopdir(char_u *buf)$/;"	f
vim_fnamecmp	filepath.c	/^vim_fnamecmp(char_u *x, char_u *y)$/;"	f
vim_fnamencmp	filepath.c	/^vim_fnamencmp(char_u *x, char_u *y, size_t len)$/;"	f
vim_free	misc2.c	/^vim_free(void *x)$/;"	f
vim_free_in_input_buf	ui.c	/^vim_free_in_input_buf(void)$/;"	f
vim_fseek	vim.h	382;"	d
vim_fseek	vim.h	386;"	d
vim_fseek	vim.h	398;"	d
vim_fseek	vim.h	402;"	d
vim_fsync	fileio.c	/^vim_fsync(int fd)$/;"	f
vim_ftell	vim.h	383;"	d
vim_ftell	vim.h	387;"	d
vim_ftell	vim.h	397;"	d
vim_ftell	vim.h	401;"	d
vim_funcref	if_mzsch.c	/^vim_funcref(void *name, int argc, Scheme_Object **argv)$/;"	f	file:
vim_getenv	misc1.c	/^vim_getenv(char_u *name, int *mustfree)$/;"	f
vim_handle_signal	os_unix.c	/^vim_handle_signal(int sig)$/;"	f
vim_handle_signal	vim.h	2432;"	d
vim_ignored	globals.h	/^EXTERN int vim_ignored;$/;"	v
vim_ignoredp	globals.h	/^EXTERN char *vim_ignoredp;$/;"	v
vim_isAbsName	filepath.c	/^vim_isAbsName(char_u *name)$/;"	f
vim_isIDc	charset.c	/^vim_isIDc(int c)$/;"	f
vim_is_ctrl_x_key	insexpand.c	/^vim_is_ctrl_x_key(int c)$/;"	f
vim_is_fastterm	os_unix.c	/^vim_is_fastterm(char_u *name)$/;"	f
vim_is_input_buf_empty	ui.c	/^vim_is_input_buf_empty(void)$/;"	f
vim_is_input_buf_full	ui.c	/^vim_is_input_buf_full(void)$/;"	f
vim_is_iris	os_unix.c	/^vim_is_iris(char_u *name)$/;"	f
vim_is_vt300	os_unix.c	/^vim_is_vt300(char_u *name)$/;"	f
vim_is_xterm	os_unix.c	/^vim_is_xterm(char_u *name)$/;"	f
vim_isbdigit	charset.c	/^vim_isbdigit(int c)$/;"	f
vim_isblankline	charset.c	/^vim_isblankline(char_u *lbuf)$/;"	f
vim_isdigit	charset.c	/^vim_isdigit(int c)$/;"	f
vim_isfilec	charset.c	/^vim_isfilec(int c)$/;"	f
vim_isfilec_or_wc	charset.c	/^vim_isfilec_or_wc(int c)$/;"	f
vim_islower	charset.c	/^vim_islower(int c)$/;"	f
vim_ispathlistsep	findfile.c	/^vim_ispathlistsep(int c)$/;"	f
vim_ispathsep	filepath.c	/^vim_ispathsep(int c)$/;"	f
vim_ispathsep_nocolon	filepath.c	/^vim_ispathsep_nocolon(int c)$/;"	f
vim_isprintc	charset.c	/^vim_isprintc(int c)$/;"	f
vim_isprintc_strict	charset.c	/^vim_isprintc_strict(int c)$/;"	f
vim_isspace	misc2.c	/^vim_isspace(int x)$/;"	f
vim_isupper	charset.c	/^vim_isupper(int c)$/;"	f
vim_iswordc	charset.c	/^vim_iswordc(int c)$/;"	f
vim_iswordc_buf	charset.c	/^vim_iswordc_buf(int c, buf_T *buf)$/;"	f
vim_iswordp	charset.c	/^vim_iswordp(char_u *p)$/;"	f
vim_iswordp_buf	charset.c	/^vim_iswordp_buf(char_u *p, buf_T *buf)$/;"	f
vim_isxdigit	charset.c	/^vim_isxdigit(int c)$/;"	f
vim_localtime	time.c	/^vim_localtime($/;"	f	file:
vim_lseek	vim.h	381;"	d
vim_lseek	vim.h	385;"	d
vim_lseek	vim.h	396;"	d
vim_lseek	vim.h	400;"	d
vim_main2	main.c	/^vim_main2(void)$/;"	f
vim_mem_profile_dump	misc2.c	/^vim_mem_profile_dump(void)$/;"	f
vim_memsave	misc2.c	/^vim_memsave(char_u *p, size_t len)$/;"	f
vim_memset	misc2.c	/^vim_memset(void *ptr, int c, size_t size)$/;"	f
vim_memset	vim.h	1718;"	d
vim_message	if_ruby.c	/^vim_message(VALUE self UNUSED, VALUE str)$/;"	f	file:
vim_mkdir	dosinst.h	42;"	d
vim_mkdir	dosinst.h	44;"	d
vim_mkdir	os_amiga.h	236;"	d
vim_mkdir	os_unix.h	77;"	d
vim_mkdir	os_unix.h	79;"	d
vim_mkdir	os_win32.h	201;"	d
vim_mkdir_emsg	ex_docmd.c	/^vim_mkdir_emsg(char_u *name, int prot UNUSED)$/;"	f
vim_module	if_py_both.h	/^static PyObject *vim_module;$/;"	v
vim_mz_buffer	if_mzsch.c	/^} vim_mz_buffer;$/;"	t	typeref:struct:__anon52	file:
vim_mz_window	if_mzsch.c	/^} vim_mz_window;$/;"	t	typeref:struct:__anon53	file:
vim_open_clipboard	winclip.c	/^vim_open_clipboard(void)$/;"	f	file:
vim_parent_hwnd	gui_w32.c	/^HWND vim_parent_hwnd = NULL;$/;"	v
vim_read	vim.h	1736;"	d
vim_read	vim.h	1739;"	d
vim_realloc	vim.h	2244;"	d
vim_realloc	vim.h	2246;"	d
vim_regcomp	regexp.c	/^vim_regcomp(char_u *expr_arg, int re_flags)$/;"	f
vim_regcomp_had_eol	regexp_bt.c	/^vim_regcomp_had_eol(void)$/;"	f
vim_regexec	regexp.c	/^vim_regexec(regmatch_T *rmp, char_u *line, colnr_T col)$/;"	f
vim_regexec_multi	regexp.c	/^vim_regexec_multi($/;"	f
vim_regexec_nl	regexp.c	/^vim_regexec_nl(regmatch_T *rmp, char_u *line, colnr_T col)$/;"	f
vim_regexec_prog	regexp.c	/^vim_regexec_prog($/;"	f
vim_regexec_string	regexp.c	/^vim_regexec_string($/;"	f	file:
vim_regfree	regexp.c	/^vim_regfree(regprog_T *prog)$/;"	f
vim_regsub	regexp.c	/^vim_regsub($/;"	f
vim_regsub_both	regexp.c	/^vim_regsub_both($/;"	f	file:
vim_regsub_multi	regexp.c	/^vim_regsub_multi($/;"	f
vim_rename	fileio.c	/^vim_rename(char_u *from, char_u *to)$/;"	f
vim_resources	gui_x11.c	/^static XtResource vim_resources[] =$/;"	v	file:
vim_round	evalfunc.c	/^vim_round(float_T f)$/;"	f
vim_ruby_init	if_ruby.c	/^vim_ruby_init(void *stack_start)$/;"	f
vim_scrollbarClassRec	gui_at_sb.c	/^ScrollbarClassRec vim_scrollbarClassRec =$/;"	v
vim_scrollbarWidgetClass	gui_at_sb.c	/^WidgetClass vim_scrollbarWidgetClass = (WidgetClass)&vim_scrollbarClassRec;$/;"	v
vim_set_option	if_ruby.c	/^vim_set_option(VALUE self UNUSED, VALUE str)$/;"	f	file:
vim_setenv	misc1.c	/^vim_setenv(char_u *name, char_u *val)$/;"	f
vim_setenv_ext	misc1.c	/^vim_setenv_ext(char_u *name, char_u *val)$/;"	f
vim_settempdir	fileio.c	/^vim_settempdir(char_u *tempdir)$/;"	f	file:
vim_shell_execute	os_win32.c	/^vim_shell_execute($/;"	f	file:
vim_snprintf	message.c	/^vim_snprintf(char *str, size_t str_m, const char *fmt, ...)$/;"	f
vim_snprintf_add	message.c	/^vim_snprintf_add(char *str, size_t str_m, const char *fmt, ...)$/;"	f
vim_special_path	if_py_both.h	/^static const char *vim_special_path = "_vim_path_";$/;"	v
vim_special_path_object	if_py_both.h	/^static PyObject *vim_special_path_object;$/;"	v
vim_stat	misc2.c	/^vim_stat(const char *name, stat_T *stp)$/;"	f
vim_stat	os_mswin.c	/^vim_stat(const char *name, stat_T *stp)$/;"	f
vim_str2nr	charset.c	/^vim_str2nr($/;"	f
vim_str2rb_enc_str	if_ruby.c	/^vim_str2rb_enc_str(const char *s)$/;"	f	file:
vim_strbyte	misc2.c	/^vim_strbyte(char_u *string, int c)$/;"	f
vim_strcat	misc2.c	/^vim_strcat(char_u *to, char_u *from, size_t tosize)$/;"	f
vim_strchr	misc2.c	/^vim_strchr(char_u *string, int c)$/;"	f
vim_stricmp	misc2.c	/^vim_stricmp(char *s1, char *s2)$/;"	f
vim_strncpy	misc2.c	/^vim_strncpy(char_u *to, char_u *from, size_t len)$/;"	f
vim_strnicmp	misc2.c	/^vim_strnicmp(char *s1, char *s2, size_t len)$/;"	f
vim_strnsave	misc2.c	/^vim_strnsave(char_u *string, int len)$/;"	f
vim_strnsave_up	misc2.c	/^vim_strnsave_up(char_u *string, int len)$/;"	f
vim_strnsize	charset.c	/^vim_strnsize(char_u *s, int len)$/;"	f
vim_strpbrk	misc2.c	/^vim_strpbrk(char_u *s, char_u *charset)$/;"	f
vim_strpbrk	misc2.c	1973;"	d	file:
vim_strpbrk	vim.h	1629;"	d
vim_strrchr	misc2.c	/^vim_strrchr(char_u *string, int c)$/;"	f
vim_strsave	misc2.c	/^vim_strsave(char_u *string)$/;"	f
vim_strsave_escape_csi	map.c	/^vim_strsave_escape_csi($/;"	f
vim_strsave_escaped	misc2.c	/^vim_strsave_escaped(char_u *string, char_u *esc_chars)$/;"	f
vim_strsave_escaped_ext	misc2.c	/^vim_strsave_escaped_ext($/;"	f
vim_strsave_fnameescape	ex_getln.c	/^vim_strsave_fnameescape(char_u *fname, int shell UNUSED)$/;"	f
vim_strsave_shellescape	misc2.c	/^vim_strsave_shellescape(char_u *string, int do_special, int do_newline)$/;"	f
vim_strsave_up	misc2.c	/^vim_strsave_up(char_u *string)$/;"	f
vim_strsize	charset.c	/^vim_strsize(char_u *s)$/;"	f
vim_strup	misc2.c	/^vim_strup($/;"	f
vim_tcl_init	if_tcl.c	/^vim_tcl_init(char *arg)$/;"	f
vim_tempdir	globals.h	/^EXTERN char_u	*vim_tempdir INIT(= NULL); \/\/ Name of Vim's own temp dir.$/;"	v
vim_tempname	fileio.c	/^vim_tempname($/;"	f
vim_tgetstr	term.c	/^vim_tgetstr(char *s, char_u **pp)$/;"	f	file:
vim_time	time.c	/^vim_time(void)$/;"	f
vim_to_mzscheme	if_mzsch.c	/^vim_to_mzscheme(typval_T *vim_value)$/;"	f	file:
vim_to_mzscheme_impl	if_mzsch.c	/^vim_to_mzscheme_impl(typval_T *vim_value, int depth, Scheme_Hash_Table *visited)$/;"	f	file:
vim_to_ruby	if_ruby.c	/^vim_to_ruby(typval_T *tv)$/;"	f	file:
vim_tolower	charset.c	/^vim_tolower(int c)$/;"	f
vim_toupper	charset.c	/^vim_toupper(int c)$/;"	f
vim_unescape_csi	map.c	/^vim_unescape_csi(char_u *p)$/;"	f
vim_unsetenv	misc1.c	/^vim_unsetenv(char_u *var)$/;"	f
vim_used_in_input_buf	ui.c	/^vim_used_in_input_buf(void)$/;"	f
vim_version_dir	misc1.c	/^vim_version_dir(char_u *vimdir)$/;"	f	file:
vim_vsnprintf	message.c	/^vim_vsnprintf($/;"	f
vim_vsnprintf_typval	message.c	/^vim_vsnprintf_typval($/;"	f
vim_window_validp	if_mzsch.c	/^vim_window_validp(void *data UNUSED, int argc UNUSED, Scheme_Object **argv)$/;"	f	file:
vim_windowp	if_mzsch.c	/^vim_windowp(void *data UNUSED, int argc UNUSED, Scheme_Object **argv)$/;"	f	file:
vim_write	vim.h	1737;"	d
vim_write	vim.h	1740;"	d
vimconv_T	structs.h	/^} vimconv_T;$/;"	t	typeref:struct:__anon202
vimenc_atom	gui_gtk_x11.c	/^static GdkAtom vimenc_atom = GDK_NONE;	\/\/ Vim's extended selection format$/;"	v	file:
vimenc_atom	ui.c	/^static Atom	vimenc_atom;	\/\/ Vim's extended selection format$/;"	v	file:
vimerror	if_tcl.c	/^vimerror(Tcl_Interp *interp)$/;"	f	file:
vimfiles_dir_choices	dosinst.c	/^static char *(vimfiles_dir_choices[]) =$/;"	v	file:
vimfiles_dir_home	dosinst.c	/^    vimfiles_dir_home$/;"	e	enum:__anon16	file:
vimfiles_dir_none	dosinst.c	/^    vimfiles_dir_none = 1,$/;"	e	enum:__anon16	file:
vimfiles_dir_vim	dosinst.c	/^    vimfiles_dir_vim,$/;"	e	enum:__anon16	file:
vimfiles_subdirs	dosinst.c	/^static char	*(vimfiles_subdirs[]) =$/;"	v	file:
viminfo	structs.h	/^    int		viminfo;	\/\/ when TRUE hisstr comes from viminfo$/;"	m	struct:hist_entry
viminfo_add_at_front	viminfo.c	/^static int	viminfo_add_at_front = FALSE;$/;"	v	file:
viminfo_encoding	viminfo.c	/^viminfo_encoding(vir_T *virp)$/;"	f	file:
viminfo_errcnt	viminfo.c	/^static int  viminfo_errcnt;$/;"	v	file:
viminfo_error	viminfo.c	/^viminfo_error(char *errnum, char *message, char_u *line)$/;"	f	file:
viminfo_filename	viminfo.c	/^viminfo_filename(char_u *file)$/;"	f	file:
viminfo_hisidx	viminfo.c	/^static int	viminfo_hisidx[HIST_COUNT] = {0, 0, 0, 0, 0};$/;"	v	file:
viminfo_hislen	viminfo.c	/^static int	viminfo_hislen[HIST_COUNT] = {0, 0, 0, 0, 0};$/;"	v	file:
viminfo_history	viminfo.c	/^static histentry_T *viminfo_history[HIST_COUNT] =$/;"	v	file:
viminfo_readline	viminfo.c	/^viminfo_readline(vir_T *virp)$/;"	f	file:
viminfo_readstring	viminfo.c	/^viminfo_readstring($/;"	f	file:
viminfo_writestring	viminfo.c	/^viminfo_writestring(FILE *fd, char_u *p)$/;"	f	file:
vimlist_remove	list.c	/^vimlist_remove(list_T *l, listitem_T *item, listitem_T *item2)$/;"	f
vimmenu_T	structs.h	/^typedef int vimmenu_T;$/;"	t
vimmenu_T	structs.h	/^typedef struct VimMenu vimmenu_T;$/;"	t	typeref:struct:VimMenu
vimmodule	if_python3.c	/^static struct PyModuleDef vimmodule;$/;"	v	typeref:struct:PyModuleDef	file:
vimobj	if_tcl.c	/^    void	*vimobj;    \/\/ Vim window or buffer (win_T* or buf_T*)$/;"	m	struct:ref	file:
vimoption	optiondefs.h	/^struct vimoption$/;"	s
vimpty_getenv	misc2.c	/^vimpty_getenv(const char_u *string)$/;"	f
vimrc	dosinst.c	/^char	vimrc[BUFSIZE];		\/\/ name of vimrc file to create$/;"	v
vimrc_found	option.c	/^vimrc_found(char_u *fname, char_u *envname)$/;"	f
vimrun_path	os_win32.c	/^static char *vimrun_path = "vimrun ";$/;"	v	file:
vimvar	evalvars.c	/^static struct vimvar$/;"	s	file:
vimvar_T	evalvars.c	/^typedef struct vimvar vimvar_T;$/;"	t	typeref:struct:vimvar	file:
vimvardict	evalvars.c	/^static dict_T		vimvardict;		\/\/ Dictionary with v: variables$/;"	v	file:
vimvarht	evalvars.c	162;"	d	file:
vimvars	evalvars.c	/^} vimvars[VV_LEN] =$/;"	v	typeref:struct:vimvar	file:
vimvars_save_T	structs.h	/^} vimvars_save_T;$/;"	t	typeref:struct:__anon254
vimvars_var	evalvars.c	/^static dictitem_T	vimvars_var;		\/\/ variable used for v:$/;"	v	file:
vir_T	viminfo.c	/^} vir_T;$/;"	t	typeref:struct:__anon135	file:
vir_barlines	viminfo.c	/^    garray_T	vir_barlines;	\/\/ lines starting with |$/;"	m	struct:__anon135	file:
vir_conv	viminfo.c	/^    vimconv_T	vir_conv;	\/\/ encoding conversion$/;"	m	struct:__anon135	file:
vir_fd	viminfo.c	/^    FILE	*vir_fd;	\/\/ file descriptor$/;"	m	struct:__anon135	file:
vir_line	viminfo.c	/^    char_u	*vir_line;	\/\/ text of the current line$/;"	m	struct:__anon135	file:
vir_version	viminfo.c	/^    int		vir_version;	\/\/ viminfo version detected or -1$/;"	m	struct:__anon135	file:
virtual_active	misc2.c	/^virtual_active(void)$/;"	f
virtual_op	globals.h	/^EXTERN int	virtual_op INIT(= MAYBE);$/;"	v
visibility	gui.h	/^    int		visibility;	    \/\/ Is shell partially\/fully obscured?$/;"	m	struct:Gui
visibility	gui.h	/^    int		visibility;	    \/\/ Is window partially\/fully obscured?$/;"	m	struct:Gui
visibility_event	gui_gtk_x11.c	/^visibility_event(GtkWidget *widget UNUSED,$/;"	f	file:
visual_bell	os_win32.c	/^visual_bell(void)$/;"	f	file:
visualinfo_T	structs.h	/^} visualinfo_T;$/;"	t	typeref:struct:__anon183
vk_Clr	gui_mac.c	199;"	d	file:
vk_Copy	gui_mac.c	222;"	d	file:
vk_Cut	gui_mac.c	221;"	d	file:
vk_Delete	gui_mac.c	206;"	d	file:
vk_Down	gui_mac.c	216;"	d	file:
vk_End	gui_mac.c	212;"	d	file:
vk_Enter	gui_mac.c	200;"	d	file:
vk_Esc	gui_mac.c	181;"	d	file:
vk_F1	gui_mac.c	183;"	d	file:
vk_F10	gui_mac.c	192;"	d	file:
vk_F11	gui_mac.c	193;"	d	file:
vk_F12	gui_mac.c	194;"	d	file:
vk_F13	gui_mac.c	195;"	d	file:
vk_F14	gui_mac.c	196;"	d	file:
vk_F15	gui_mac.c	197;"	d	file:
vk_F2	gui_mac.c	184;"	d	file:
vk_F3	gui_mac.c	185;"	d	file:
vk_F4	gui_mac.c	186;"	d	file:
vk_F5	gui_mac.c	187;"	d	file:
vk_F6	gui_mac.c	188;"	d	file:
vk_F7	gui_mac.c	189;"	d	file:
vk_F8	gui_mac.c	190;"	d	file:
vk_F9	gui_mac.c	191;"	d	file:
vk_FwdDelete	gui_mac.c	211;"	d	file:
vk_Help	gui_mac.c	208;"	d	file:
vk_Home	gui_mac.c	209;"	d	file:
vk_Insert	gui_mac.c	228;"	d	file:
vk_Left	gui_mac.c	217;"	d	file:
vk_NumLock	gui_mac.c	227;"	d	file:
vk_PageDown	gui_mac.c	213;"	d	file:
vk_PageUp	gui_mac.c	210;"	d	file:
vk_Paste	gui_mac.c	223;"	d	file:
vk_Pause	gui_mac.c	226;"	d	file:
vk_PrintScreen	gui_mac.c	224;"	d	file:
vk_Return	gui_mac.c	204;"	d	file:
vk_Right	gui_mac.c	218;"	d	file:
vk_SCrollLock	gui_mac.c	225;"	d	file:
vk_Space	gui_mac.c	202;"	d	file:
vk_Tab	gui_mac.c	203;"	d	file:
vk_Undo	gui_mac.c	220;"	d	file:
vk_Up	gui_mac.c	215;"	d	file:
vmode	vim.h	/^    int		vmode;		\/\/ Visual mode character$/;"	m	struct:__anon279
vms_fixfilename	os_vms.c	/^vms_fixfilename(void *instring)$/;"	f
vms_fmatch	os_vms.c	/^static char_u **vms_fmatch = NULL;$/;"	v	file:
vms_fspec_proc	os_vms.c	/^vms_fspec_proc(char *fil, int val)$/;"	f	file:
vms_match_free	os_vms.c	/^static int vms_match_free = 0;$/;"	v	file:
vms_match_num	os_vms.c	/^static int vms_match_num = 0;$/;"	v	file:
vms_read	os_vms.c	/^vms_read(char *inbuf, size_t nbytes)$/;"	f
vms_remove_version	os_vms.c	/^vms_remove_version(void * fname)$/;"	f
vms_sys	os_vms.c	/^vms_sys(char *cmd, char *out, char *inp)$/;"	f
vms_sys_status	os_vms.c	/^vms_sys_status(int status)$/;"	f
vms_tolower	os_vms.c	/^vms_tolower( char *name )$/;"	f
vms_unix_mixed_filespec	os_vms.c	/^vms_unix_mixed_filespec(char *in, char *out)$/;"	f	file:
vms_wproc	os_vms.c	/^vms_wproc(char *name, int val)$/;"	f	file:
vop_flags	option.h	/^EXTERN unsigned	vop_flags;	\/\/ uses SSOP_ flags$/;"	v
vpeekc	getchar.c	/^vpeekc(void)$/;"	f
vpeekc_any	getchar.c	/^vpeekc_any(void)$/;"	f
vpeekc_nomap	getchar.c	/^vpeekc_nomap(void)$/;"	f
vr_lines_changed	globals.h	/^EXTERN int	vr_lines_changed INIT(= 0); \/\/ #Lines changed by "gR" so far$/;"	v
vs_botline	ex_getln.c	/^    linenr_T	vs_botline;$/;"	m	struct:__anon26	file:
vs_curswant	ex_getln.c	/^    colnr_T	vs_curswant;$/;"	m	struct:__anon26	file:
vs_empty_rows	ex_getln.c	/^    linenr_T	vs_empty_rows;$/;"	m	struct:__anon26	file:
vs_leftcol	ex_getln.c	/^    colnr_T	vs_leftcol;$/;"	m	struct:__anon26	file:
vs_topfill	ex_getln.c	/^    int		vs_topfill;$/;"	m	struct:__anon26	file:
vs_topline	ex_getln.c	/^    linenr_T	vs_topline;$/;"	m	struct:__anon26	file:
vtermAttr2hl	terminal.c	/^vtermAttr2hl(VTermScreenCellAttrs cellattrs)$/;"	f	file:
vterm_allocator	terminal.c	/^static VTermAllocatorFunctions vterm_allocator = {$/;"	v	file:
vterm_malloc	terminal.c	/^vterm_malloc(size_t size, void *data UNUSED)$/;"	f	file:
vterm_memfree	terminal.c	/^vterm_memfree(void *ptr, void *data UNUSED)$/;"	f	file:
vtp	term.c	/^    char *vtp;		\/\/ code in vtp mode$/;"	m	struct:ks_tbl_s	file:
vtp2	term.c	/^    char *vtp2;		\/\/ code in vtp2 mode$/;"	m	struct:ks_tbl_s	file:
vtp_exit	os_win32.c	/^vtp_exit(void)$/;"	f	file:
vtp_flag_init	os_win32.c	/^vtp_flag_init(void)$/;"	f	file:
vtp_init	os_win32.c	/^vtp_init(void)$/;"	f	file:
vtp_printf	os_win32.c	/^vtp_printf($/;"	f	file:
vtp_sgr_bulk	os_win32.c	/^vtp_sgr_bulk($/;"	f	file:
vtp_sgr_bulks	os_win32.c	/^vtp_sgr_bulks($/;"	f	file:
vtp_working	os_win32.c	/^static int vtp_working = 0;$/;"	v	file:
vts	beval.h	/^    int			*vts;		\/\/ vartabstop setting for this buffer$/;"	m	struct:BalloonEvalStruct
vul_desc	os_vms.c	/^vul_desc(DESC *des, char *str)$/;"	f	file:
vul_item	os_vms.c	/^vul_item(ITEM *itm, short len, short cod, char *adr, int *ret)$/;"	f	file:
vungetc	getchar.c	/^vungetc(int c)$/;"	f
vv_blob	evalvars.c	157;"	d	file:
vv_count	structs.h	/^    varnumber_T vv_count;$/;"	m	struct:__anon254
vv_count1	structs.h	/^    varnumber_T vv_count1;$/;"	m	struct:__anon254
vv_di	evalvars.c	/^    dictitem16_T vv_di;		\/\/ value and name for key (max 16 chars!)$/;"	m	struct:vimvar	file:
vv_dict	evalvars.c	156;"	d	file:
vv_exception	ex_docmd.c	/^    char_u	*vv_exception;$/;"	m	struct:dbg_stuff	file:
vv_flags	evalvars.c	/^    char	vv_flags;	\/\/ VV_COMPAT, VV_RO, VV_RO_SBX$/;"	m	struct:vimvar	file:
vv_float	evalvars.c	153;"	d	file:
vv_list	evalvars.c	155;"	d	file:
vv_name	evalvars.c	/^    char	*vv_name;	\/\/ name of variable, without v:$/;"	m	struct:vimvar	file:
vv_nr	evalvars.c	152;"	d	file:
vv_prevcount	structs.h	/^    varnumber_T vv_prevcount;$/;"	m	struct:__anon254
vv_str	evalvars.c	154;"	d	file:
vv_throwpoint	ex_docmd.c	/^    char_u	*vv_throwpoint;$/;"	m	struct:dbg_stuff	file:
vv_tv	evalvars.c	158;"	d	file:
vv_type	evalvars.c	151;"	d	file:
vval	structs.h	/^    }		vval;$/;"	m	struct:__anon205	typeref:union:__anon205::__anon206
wAttributes	os_win32.c	/^    WORD wAttributes;$/;"	m	struct:_DYN_CONSOLE_SCREEN_BUFFER_INFOEX	file:
wPopupAttributes	os_win32.c	/^    WORD wPopupAttributes;$/;"	m	struct:_DYN_CONSOLE_SCREEN_BUFFER_INFOEX	file:
wVirtKey	os_win32.c	/^    WORD    wVirtKey;$/;"	m	struct:__anon82	file:
wWinMain	os_w32exe.c	/^wWinMain($/;"	f
w_alist	structs.h	/^    alist_T	*w_alist;	    \/\/ pointer to arglist for this window$/;"	m	struct:window_S
w_allbuf_opt	structs.h	/^    winopt_T	w_allbuf_opt;$/;"	m	struct:window_S
w_alt_fnum	structs.h	/^    int		w_alt_fnum;	    \/\/ alternate file (for # and CTRL-^)$/;"	m	struct:window_S
w_arg_idx	structs.h	/^    int		w_arg_idx;	    \/\/ current index in argument list (can be$/;"	m	struct:window_S
w_arg_idx_invalid	structs.h	/^    int		w_arg_idx_invalid;  \/\/ editing another file than w_arg_idx$/;"	m	struct:window_S
w_border_char	structs.h	/^    int		w_border_char[8];   \/\/ popup border characters$/;"	m	struct:window_S
w_border_highlight	structs.h	/^    char_u	*w_border_highlight[4];  \/\/ popup border highlight$/;"	m	struct:window_S
w_botfill	structs.h	/^    int		w_botfill;	    \/\/ TRUE when filler lines are actually$/;"	m	struct:window_S
w_botline	structs.h	/^    linenr_T	w_botline;	    \/\/ number of the line below the bottom of$/;"	m	struct:window_S
w_briopt_min	structs.h	/^    int		w_briopt_min;	    \/\/ minimum width for breakindent$/;"	m	struct:window_S
w_briopt_sbr	structs.h	/^    int		w_briopt_sbr;	    \/\/ sbr in 'briopt'$/;"	m	struct:window_S
w_briopt_shift	structs.h	/^    int		w_briopt_shift;	    \/\/ additional shift for breakindent$/;"	m	struct:window_S
w_buffer	structs.h	/^    buf_T	*w_buffer;	    \/\/ buffer we are a window into$/;"	m	struct:window_S
w_changelistidx	structs.h	/^    int		w_changelistidx;	\/\/ current position in b_changelist$/;"	m	struct:window_S
w_cline_folded	structs.h	/^    int		w_cline_folded;	    \/\/ cursor line is folded$/;"	m	struct:window_S
w_cline_height	structs.h	/^    int		w_cline_height;	    \/\/ current size of cursor line$/;"	m	struct:window_S
w_cline_row	structs.h	/^    int		w_cline_row;	    \/\/ starting row of the cursor line$/;"	m	struct:window_S
w_close_cb	structs.h	/^    callback_T	w_close_cb;	    \/\/ popup close callback$/;"	m	struct:window_S
w_closing	structs.h	/^    int		w_closing;	    \/\/ window is being closed, don't let$/;"	m	struct:window_S
w_cursor	structs.h	/^    pos_T	w_cursor;	    \/\/ cursor position in buffer$/;"	m	struct:window_S
w_cursor_corr	structs.h	/^    pos_T	w_cursor_corr;	\/\/ corrected cursor position$/;"	m	struct:__anon242
w_cursor_save	structs.h	/^    pos_T	w_cursor_save;	\/\/ original cursor position$/;"	m	struct:__anon242
w_curswant	structs.h	/^    colnr_T	w_curswant;	    \/\/ The column we'd like to be at.  This is$/;"	m	struct:window_S
w_empty_rows	structs.h	/^    int		w_empty_rows;	    \/\/ number of ~ rows in window$/;"	m	struct:window_S
w_filler_rows	structs.h	/^    int		w_filler_rows;	    \/\/ number of filler rows at the end of the$/;"	m	struct:window_S
w_filter_cb	structs.h	/^    callback_T	w_filter_cb;	    \/\/ popup filter callback$/;"	m	struct:window_S
w_filter_mode	structs.h	/^    int		w_filter_mode;	    \/\/ mode when filter callback is used$/;"	m	struct:window_S
w_firstline	structs.h	/^    int		w_firstline;	    \/\/ "firstline" for popup window$/;"	m	struct:window_S
w_fold_manual	structs.h	/^    char	w_fold_manual;	    \/\/ when TRUE: some folds are opened\/closed$/;"	m	struct:window_S
w_foldinvalid	structs.h	/^    char	w_foldinvalid;	    \/\/ when TRUE: folding needs to be$/;"	m	struct:window_S
w_folds	structs.h	/^    garray_T	w_folds;	    \/\/ array of nested folds$/;"	m	struct:window_S
w_fraction	structs.h	/^    int		w_fraction;$/;"	m	struct:window_S
w_frame	structs.h	/^    frame_T	*w_frame;	    \/\/ frame containing this window$/;"	m	struct:window_S
w_has_scrollbar	structs.h	/^    int		w_has_scrollbar;    \/\/ 1 if scrollbar displayed, 0 otherwise$/;"	m	struct:window_S
w_height	structs.h	/^    int		w_height;	    \/\/ number of rows in window, excluding$/;"	m	struct:window_S
w_id	structs.h	/^    int		w_id;		    \/\/ unique window ID$/;"	m	struct:window_S
w_jumplist	structs.h	/^    xfmark_T	w_jumplist[JUMPLISTSIZE];$/;"	m	struct:window_S
w_jumplistidx	structs.h	/^    int		w_jumplistidx;		\/\/ current position$/;"	m	struct:window_S
w_jumplistlen	structs.h	/^    int		w_jumplistlen;		\/\/ number of active entries$/;"	m	struct:window_S
w_last_cursorline	structs.h	/^    linenr_T	w_last_cursorline;  \/\/ where last time 'cursorline' was drawn$/;"	m	struct:window_S
w_leftcol	structs.h	/^    colnr_T	w_leftcol;	    \/\/ window column number of the left most$/;"	m	struct:window_S
w_line	structs.h	/^typedef struct w_line$/;"	s
w_lines	structs.h	/^    wline_T	*w_lines;$/;"	m	struct:window_S
w_lines_valid	structs.h	/^    int		w_lines_valid;	    \/\/ number of valid entries$/;"	m	struct:window_S
w_llist	structs.h	/^    qf_info_T	*w_llist;		\/\/ Location list for this window$/;"	m	struct:window_S
w_llist_ref	structs.h	/^    qf_info_T	*w_llist_ref;$/;"	m	struct:window_S
w_localdir	structs.h	/^    char_u	*w_localdir;	    \/\/ absolute path of local directory or$/;"	m	struct:window_S
w_match_head	structs.h	/^    matchitem_T	*w_match_head;		\/\/ head of match list$/;"	m	struct:window_S
w_maxheight	structs.h	/^    int		w_maxheight;	    \/\/ "maxheight" for popup window$/;"	m	struct:window_S
w_maxwidth	structs.h	/^    int		w_maxwidth;	    \/\/ "maxwidth" for popup window$/;"	m	struct:window_S
w_minheight	structs.h	/^    int		w_minheight;	    \/\/ "minheight" for popup window$/;"	m	struct:window_S
w_minwidth	structs.h	/^    int		w_minwidth;	    \/\/ "minwidth" for popup window$/;"	m	struct:window_S
w_mzscheme_ref	structs.h	/^    void	*w_mzscheme_ref;	\/\/ The MzScheme value for this window$/;"	m	struct:window_S
w_next	structs.h	/^    win_T	*w_next;	    \/\/ link to next window$/;"	m	struct:window_S
w_next_match_id	structs.h	/^    int		w_next_match_id;	\/\/ next match ID$/;"	m	struct:window_S
w_nrwidth	structs.h	/^    int		w_nrwidth;	    \/\/ width of 'number' and 'relativenumber'$/;"	m	struct:window_S
w_nrwidth_line_count	structs.h	/^    linenr_T	w_nrwidth_line_count;	\/\/ line count when ml_nrwidth_width$/;"	m	struct:window_S
w_nrwidth_width	structs.h	/^    int		w_nrwidth_width;	\/\/ nr of chars to print line count.$/;"	m	struct:window_S
w_nuw_cached	structs.h	/^    long	w_nuw_cached;		\/\/ 'numberwidth' option cached$/;"	m	struct:window_S
w_old_botfill	structs.h	/^    int		w_old_botfill;	    \/\/ w_botfill at last redraw$/;"	m	struct:window_S
w_old_cursor_fcol	structs.h	/^    colnr_T	w_old_cursor_fcol;  \/\/ first column for block visual part$/;"	m	struct:window_S
w_old_cursor_lcol	structs.h	/^    colnr_T	w_old_cursor_lcol;  \/\/ last column for block visual part$/;"	m	struct:window_S
w_old_cursor_lnum	structs.h	/^    linenr_T	w_old_cursor_lnum;  \/\/ last known end of visual part$/;"	m	struct:window_S
w_old_curswant	structs.h	/^    colnr_T	w_old_curswant;	    \/\/ last known value of Curswant$/;"	m	struct:window_S
w_old_topfill	structs.h	/^    int		w_old_topfill;	    \/\/ w_topfill at last redraw$/;"	m	struct:window_S
w_old_visual_col	structs.h	/^    colnr_T	w_old_visual_col;   \/\/ last known start of visual part$/;"	m	struct:window_S
w_old_visual_lnum	structs.h	/^    linenr_T	w_old_visual_lnum;  \/\/ last known start of visual part$/;"	m	struct:window_S
w_old_visual_mode	structs.h	/^    char	w_old_visual_mode;  \/\/ last known VIsual_mode$/;"	m	struct:window_S
w_onebuf_opt	structs.h	/^    winopt_T	w_onebuf_opt;$/;"	m	struct:window_S
w_p_arab	structs.h	172;"	d
w_p_bri	structs.h	176;"	d
w_p_briopt	structs.h	178;"	d
w_p_cc	structs.h	260;"	d
w_p_cc_cols	structs.h	/^    int		*w_p_cc_cols;	    \/\/ array of columns to highlight or NULL$/;"	m	struct:window_S
w_p_cocu	structs.h	284;"	d
w_p_cole	structs.h	286;"	d
w_p_crb	structs.h	289;"	d
w_p_crb_save	structs.h	291;"	d
w_p_cuc	structs.h	254;"	d
w_p_cul	structs.h	256;"	d
w_p_culopt	structs.h	258;"	d
w_p_culopt_flags	structs.h	/^    char_u	w_p_culopt_flags;   \/\/ flags for cursorline highlighting$/;"	m	struct:window_S
w_p_diff	structs.h	184;"	d
w_p_diff_saved	structs.h	273;"	d
w_p_fdc	structs.h	188;"	d
w_p_fdc_save	structs.h	190;"	d
w_p_fde	structs.h	211;"	d
w_p_fde_flags	structs.h	/^    long_u	w_p_fde_flags;	    \/\/ flags for 'foldexpr'$/;"	m	struct:window_S
w_p_fdi	structs.h	196;"	d
w_p_fdl	structs.h	198;"	d
w_p_fdl_save	structs.h	200;"	d
w_p_fdm	structs.h	202;"	d
w_p_fdm_save	structs.h	204;"	d
w_p_fdn	structs.h	208;"	d
w_p_fdt	structs.h	213;"	d
w_p_fdt_flags	structs.h	/^    long_u	w_p_fdt_flags;	    \/\/ flags for 'foldtext'$/;"	m	struct:window_S
w_p_fen	structs.h	192;"	d
w_p_fen_save	structs.h	194;"	d
w_p_fml	structs.h	206;"	d
w_p_fmr	structs.h	216;"	d
w_p_lbr	structs.h	220;"	d
w_p_list	structs.h	223;"	d
w_p_nu	structs.h	225;"	d
w_p_nuw	structs.h	230;"	d
w_p_pvw	structs.h	238;"	d
w_p_rl	structs.h	242;"	d
w_p_rlc	structs.h	244;"	d
w_p_rnu	structs.h	227;"	d
w_p_sbr	structs.h	264;"	d
w_p_scb	structs.h	271;"	d
w_p_scb_save	structs.h	275;"	d
w_p_scl	structs.h	294;"	d
w_p_scr	structs.h	247;"	d
w_p_script_ctx	structs.h	305;"	d
w_p_siso	structs.h	/^    long	w_p_siso;	    \/\/ 'sidescrolloff' local value$/;"	m	struct:window_S
w_p_so	structs.h	/^    long	w_p_so;		    \/\/ 'scrolloff' local value$/;"	m	struct:window_S
w_p_spell	structs.h	250;"	d
w_p_stl	structs.h	268;"	d
w_p_stl_flags	structs.h	/^    long_u	w_p_stl_flags;	    \/\/ flags for 'statusline'$/;"	m	struct:window_S
w_p_twk	structs.h	298;"	d
w_p_tws	structs.h	300;"	d
w_p_wcr	structs.h	181;"	d
w_p_wfh	structs.h	233;"	d
w_p_wfw	structs.h	235;"	d
w_p_wrap	structs.h	277;"	d
w_p_wrap_save	structs.h	280;"	d
w_pcmark	structs.h	/^    pos_T	w_pcmark;	\/\/ previous context mark$/;"	m	struct:window_S
w_perl_private	structs.h	/^    void	*w_perl_private;$/;"	m	struct:window_S
w_popup_border	structs.h	/^    int		w_popup_border[4];  \/\/ popup border top\/right\/bot\/left$/;"	m	struct:window_S
w_popup_close	structs.h	/^    popclose_T	w_popup_close;	    \/\/ allow closing the popup with the mouse$/;"	m	struct:window_S
w_popup_curwin	structs.h	/^    win_T	*w_popup_curwin;    \/\/ close popup if curwin differs$/;"	m	struct:window_S
w_popup_fixed	structs.h	/^    int		w_popup_fixed;	    \/\/ do not shift popup to fit on screen$/;"	m	struct:window_S
w_popup_flags	structs.h	/^    int		w_popup_flags;	    \/\/ POPF_ values$/;"	m	struct:window_S
w_popup_handled	structs.h	/^    int		w_popup_handled;    \/\/ POPUP_HANDLE[0-9] flags$/;"	m	struct:window_S
w_popup_last_changedtick	structs.h	/^    varnumber_T	w_popup_last_changedtick; \/\/ b:changedtick of popup buffer$/;"	m	struct:window_S
w_popup_last_curline	structs.h	/^    linenr_T	w_popup_last_curline; \/\/ last known w_cursor.lnum of window$/;"	m	struct:window_S
w_popup_leftoff	structs.h	/^    int		w_popup_leftoff;    \/\/ columns left of the screen$/;"	m	struct:window_S
w_popup_lnum	structs.h	/^    linenr_T	w_popup_lnum;	    \/\/ close popup if cursor not on this line$/;"	m	struct:window_S
w_popup_mask	structs.h	/^    list_T	*w_popup_mask;	     \/\/ list of lists for "mask"$/;"	m	struct:window_S
w_popup_mask_cells	structs.h	/^    char_u	*w_popup_mask_cells; \/\/ cached mask cells$/;"	m	struct:window_S
w_popup_mask_height	structs.h	/^    int		w_popup_mask_height; \/\/ height of w_popup_mask_cells$/;"	m	struct:window_S
w_popup_mask_width	structs.h	/^    int		w_popup_mask_width;  \/\/ width of w_popup_mask_cells$/;"	m	struct:window_S
w_popup_maxcol	structs.h	/^    colnr_T	w_popup_maxcol;	    \/\/ close popup if cursor after this col$/;"	m	struct:window_S
w_popup_mincol	structs.h	/^    colnr_T	w_popup_mincol;	    \/\/ close popup if cursor before this col$/;"	m	struct:window_S
w_popup_mouse_maxcol	structs.h	/^    int		w_popup_mouse_maxcol;  \/\/ close popup if mouse moves away$/;"	m	struct:window_S
w_popup_mouse_mincol	structs.h	/^    int		w_popup_mouse_mincol;  \/\/ close popup if mouse moves away$/;"	m	struct:window_S
w_popup_mouse_row	structs.h	/^    int		w_popup_mouse_row;  \/\/ close popup if mouse moves away$/;"	m	struct:window_S
w_popup_padding	structs.h	/^    int		w_popup_padding[4]; \/\/ popup padding top\/right\/bot\/left$/;"	m	struct:window_S
w_popup_pos	structs.h	/^    poppos_T	w_popup_pos;$/;"	m	struct:window_S
w_popup_prop_changedtick	structs.h	/^    varnumber_T	w_popup_prop_changedtick; \/\/ b:changedtick of buffer with$/;"	m	struct:window_S
w_popup_prop_id	structs.h	/^    int		w_popup_prop_id;    \/\/ when not zero: textprop ID$/;"	m	struct:window_S
w_popup_prop_topline	structs.h	/^    int		w_popup_prop_topline; \/\/ w_topline of window with$/;"	m	struct:window_S
w_popup_prop_type	structs.h	/^    int		w_popup_prop_type;  \/\/ when not zero: textprop type ID$/;"	m	struct:window_S
w_popup_prop_win	structs.h	/^    win_T	*w_popup_prop_win;  \/\/ window to search for textprop$/;"	m	struct:window_S
w_popup_rightoff	structs.h	/^    int		w_popup_rightoff;   \/\/ columns right of the screen$/;"	m	struct:window_S
w_popup_timer	structs.h	/^    timer_T	*w_popup_timer;	    \/\/ timer for closing popup window$/;"	m	struct:window_S
w_popup_title	structs.h	/^    char_u	*w_popup_title;$/;"	m	struct:window_S
w_prev	structs.h	/^    win_T	*w_prev;	    \/\/ link to previous window$/;"	m	struct:window_S
w_prev_fraction_row	structs.h	/^    int		w_prev_fraction_row;$/;"	m	struct:window_S
w_prev_pcmark	structs.h	/^    pos_T	w_prev_pcmark;	\/\/ previous w_pcmark$/;"	m	struct:window_S
w_python3_ref	structs.h	/^    void	*w_python3_ref;		\/\/ The Python value for this window$/;"	m	struct:window_S
w_python_ref	structs.h	/^    void	*w_python_ref;		\/\/ The Python value for this window$/;"	m	struct:window_S
w_redr_status	structs.h	/^    int		w_redr_status;	    \/\/ if TRUE status line must be redrawn$/;"	m	struct:window_S
w_redr_type	structs.h	/^    int		w_redr_type;	    \/\/ type of redraw to be performed on win$/;"	m	struct:window_S
w_redraw_bot	structs.h	/^    linenr_T	w_redraw_bot;	    \/\/ when != 0: last line needing redraw$/;"	m	struct:window_S
w_redraw_top	structs.h	/^    linenr_T	w_redraw_top;	    \/\/ when != 0: first line needing redraw$/;"	m	struct:window_S
w_ru_cursor	structs.h	/^    pos_T	w_ru_cursor;	    \/\/ cursor position shown in ruler$/;"	m	struct:window_S
w_ru_empty	structs.h	/^    char	w_ru_empty;	    \/\/ TRUE if ruler shows 0-1 (empty line)$/;"	m	struct:window_S
w_ru_line_count	structs.h	/^    linenr_T	w_ru_line_count;    \/\/ line count used for ruler$/;"	m	struct:window_S
w_ru_topfill	structs.h	/^    int		w_ru_topfill;	    \/\/ topfill shown in ruler$/;"	m	struct:window_S
w_ru_topline	structs.h	/^    linenr_T	w_ru_topline;	    \/\/ topline shown in ruler$/;"	m	struct:window_S
w_ru_virtcol	structs.h	/^    colnr_T	w_ru_virtcol;	    \/\/ virtcol shown in ruler$/;"	m	struct:window_S
w_ruby_ref	structs.h	/^    void	*w_ruby_ref;$/;"	m	struct:window_S
w_s	structs.h	/^    synblock_T	*w_s;		    \/\/ for :ownsyntax$/;"	m	struct:window_S
w_save_cursor	structs.h	/^    pos_save_T	w_save_cursor;	    \/\/ backup of cursor pos and topline$/;"	m	struct:window_S
w_scbind_pos	structs.h	/^    long	w_scbind_pos;$/;"	m	struct:window_S
w_scrollbar_highlight	structs.h	/^    char_u	*w_scrollbar_highlight; \/\/ "scrollbarhighlight"$/;"	m	struct:window_S
w_scrollbars	structs.h	/^    scrollbar_T	w_scrollbars[2];	\/\/ vert. Scrollbars for this window$/;"	m	struct:window_S
w_set_curswant	structs.h	/^    int		w_set_curswant;	    \/\/ If set, then update w_curswant the next$/;"	m	struct:window_S
w_skipcol	structs.h	/^    colnr_T	w_skipcol;	    \/\/ starting column when a single line$/;"	m	struct:window_S
w_status_height	structs.h	/^    int		w_status_height;    \/\/ number of status lines (0 or 1)$/;"	m	struct:window_S
w_tagstack	structs.h	/^    taggy_T	w_tagstack[TAGSTACKSIZE];   \/\/ the tag stack$/;"	m	struct:window_S
w_tagstackidx	structs.h	/^    int		w_tagstackidx;		    \/\/ idx just below active entry$/;"	m	struct:window_S
w_tagstacklen	structs.h	/^    int		w_tagstacklen;		    \/\/ number of tags on stack$/;"	m	struct:window_S
w_tcl_ref	structs.h	/^    void	*w_tcl_ref;$/;"	m	struct:window_S
w_thumb_highlight	structs.h	/^    char_u	*w_thumb_highlight; \/\/ "thumbhighlight"$/;"	m	struct:window_S
w_topfill	structs.h	/^    int		w_topfill;	    \/\/ number of filler lines above w_topline$/;"	m	struct:window_S
w_topline	structs.h	/^    linenr_T	w_topline;	    \/\/ buffer line number of the line at the$/;"	m	struct:window_S
w_topline_corr	structs.h	/^    int		w_topline_corr;	\/\/ corrected topline value$/;"	m	struct:__anon242
w_topline_save	structs.h	/^    int		w_topline_save;	\/\/ original topline value$/;"	m	struct:__anon242
w_topline_was_set	structs.h	/^    char	w_topline_was_set;  \/\/ flag set to TRUE when topline is set,$/;"	m	struct:window_S
w_upd_rows	structs.h	/^    int		w_upd_rows;	    \/\/ number of window lines to update when$/;"	m	struct:window_S
w_valid	structs.h	/^    int		w_valid;$/;"	m	struct:window_S
w_valid_cursor	structs.h	/^    pos_T	w_valid_cursor;	    \/\/ last known position of w_cursor, used$/;"	m	struct:window_S
w_valid_leftcol	structs.h	/^    colnr_T	w_valid_leftcol;    \/\/ last known w_leftcol$/;"	m	struct:window_S
w_vars	structs.h	/^    dict_T	*w_vars;	\/\/ internal variables, local to window$/;"	m	struct:window_S
w_virtcol	structs.h	/^    colnr_T	w_virtcol;	    \/\/ column number of the cursor in the$/;"	m	struct:window_S
w_vsep_width	structs.h	/^    int		w_vsep_width;	    \/\/ Number of separator columns (0 or 1).$/;"	m	struct:window_S
w_want_scrollbar	structs.h	/^    int		w_want_scrollbar;   \/\/ when zero don't use a scrollbar$/;"	m	struct:window_S
w_wantcol	structs.h	/^    int		w_wantcol;	    \/\/ "col" for popup window$/;"	m	struct:window_S
w_wantline	structs.h	/^    int		w_wantline;	    \/\/ "line" for popup window$/;"	m	struct:window_S
w_wcol	structs.h	/^    int		w_wrow, w_wcol;	    \/\/ cursor position in window$/;"	m	struct:window_S
w_width	structs.h	/^    int		w_width;	    \/\/ Width of window, excluding separation.$/;"	m	struct:window_S
w_winbar	structs.h	/^    vimmenu_T	*w_winbar;	    \/\/ The root of the WinBar menu hierarchy.$/;"	m	struct:window_S
w_winbar_height	structs.h	/^    int		w_winbar_height;    \/\/ 1 if there is a window toolbar$/;"	m	struct:window_S
w_winbar_items	structs.h	/^    winbar_item_T *w_winbar_items;  \/\/ list of items in the WinBar$/;"	m	struct:window_S
w_wincol	structs.h	/^    int		w_wincol;	    \/\/ Leftmost column of window in screen.$/;"	m	struct:window_S
w_winrow	structs.h	/^    int		w_winrow;	    \/\/ first row of window in screen$/;"	m	struct:window_S
w_winvar	structs.h	/^    dictitem_T	w_winvar;	\/\/ variable for "w:" Dictionary$/;"	m	struct:window_S
w_wrow	structs.h	/^    int		w_wrow, w_wcol;	    \/\/ cursor position in window$/;"	m	struct:window_S
w_zindex	structs.h	/^    int		w_zindex;$/;"	m	struct:window_S
wait4pid	os_unix.c	/^wait4pid(pid_t child, waitstatus *status)$/;"	f	file:
wait_for_single_object	os_win32.c	/^wait_for_single_object($/;"	f	file:
wait_return	message.c	/^wait_return(int redraw)$/;"	f
waitstatus	os_unix.c	/^typedef int waitstatus;$/;"	t	file:
waitstatus	os_unix.c	/^typedef union wait waitstatus;$/;"	t	typeref:union:wait	file:
want_full_screen	structs.h	/^    int		want_full_screen;$/;"	m	struct:__anon252
want_garbage_collect	globals.h	/^EXTERN int	want_garbage_collect INIT(= FALSE);$/;"	v
was_safe	main.c	/^static int	was_safe = FALSE;$/;"	v	file:
was_set_insecurely	option.c	/^was_set_insecurely(char_u *opt, int opt_flags)$/;"	f
wb_endcol	structs.h	/^    int		wb_endcol;$/;"	m	struct:__anon243
wb_menu	structs.h	/^    vimmenu_T	*wb_menu;$/;"	m	struct:__anon243
wb_startcol	structs.h	/^    int		wb_startcol;$/;"	m	struct:__anon243
wb_window	os_amiga.c	/^static struct Window	*wb_window;$/;"	v	typeref:struct:Window	file:
wc_count	spell.h	/^    short_u	wc_count;	    \/\/ nr of times word was seen$/;"	m	struct:wordcount_S
wc_use_keyname	option.c	/^wc_use_keyname(char_u *varp, long *wcp)$/;"	f	file:
wc_word	spell.h	/^    char_u	wc_word[1];	    \/\/ word, actually longer$/;"	m	struct:wordcount_S
wcmd_T	ex_docmd.c	/^} wcmd_T;$/;"	t	typeref:struct:__anon25	file:
what	gui_gtk.c	/^    GtkWidget *what;	\/\/ 'Find what' entry text widget$/;"	m	struct:_SharedFindReplace	file:
what	gui_motif.c	/^    Widget what;	\/\/ 'Find what' entry text widget$/;"	m	struct:_SharedFindReplace	file:
where_paste_started	globals.h	/^EXTERN pos_T	where_paste_started;$/;"	v
which_scrollbars	gui.h	/^    int		which_scrollbars[3];\/\/ Which scrollbar boxes are active?$/;"	m	struct:Gui
whilescope_T	vim9compile.c	/^} whilescope_T;$/;"	t	typeref:struct:__anon126	file:
whole_undofile	crypt.c	/^    int	    whole_undofile; \/\/ whole undo file is encrypted$/;"	m	struct:__anon7	file:
wi_fold_manual	structs.h	/^    int		wi_fold_manual;	\/\/ copy of w_fold_manual$/;"	m	struct:wininfo_S
wi_folds	structs.h	/^    garray_T	wi_folds;	\/\/ clone of w_folds$/;"	m	struct:wininfo_S
wi_fpos	structs.h	/^    pos_T	wi_fpos;	\/\/ last cursor position in the file$/;"	m	struct:wininfo_S
wi_next	structs.h	/^    wininfo_T	*wi_next;	\/\/ next entry or NULL for last entry$/;"	m	struct:wininfo_S
wi_opt	structs.h	/^    winopt_T	wi_opt;		\/\/ local window options$/;"	m	struct:wininfo_S
wi_optset	structs.h	/^    int		wi_optset;	\/\/ TRUE when wi_opt has useful values$/;"	m	struct:wininfo_S
wi_prev	structs.h	/^    wininfo_T	*wi_prev;	\/\/ previous entry or NULL for first entry$/;"	m	struct:wininfo_S
wi_win	structs.h	/^    win_T	*wi_win;	\/\/ pointer to window that did set wi_fpos$/;"	m	struct:wininfo_S
wid	gui.h	/^    Window	wid;		    \/\/ Window id of text area$/;"	m	struct:Gui
wid	gui.h	/^    WindowPtr	wid;		    \/\/ Window id of text area$/;"	m	struct:Gui
wide_bold_font	gui.h	/^    GuiFont	wide_bold_font;	    \/\/ Bold 'guifontwide' font$/;"	m	struct:Gui
wide_boldital_font	gui.h	/^    GuiFont	wide_boldital_font; \/\/ Bold-Italic 'guifontwide' font$/;"	m	struct:Gui
wide_font	gui.h	/^    GuiFont	wide_font;	    \/\/ Normal 'guifontwide' font$/;"	m	struct:Gui
wide_ital_font	gui.h	/^    GuiFont	wide_ital_font;	    \/\/ Italic 'guifontwide' font$/;"	m	struct:Gui
widget	gui_gtk_f.c	/^    GtkWidget *widget;$/;"	m	struct:_GtkFormChild	file:
width	gui.h	/^    int		width;		\/\/ Current width of scroll bar in cols$/;"	m	struct:GuiScrollbar
width	gui_mac.c	/^    short   width;	\/\/ Size of the text in pixel$/;"	m	struct:__anon40	file:
width	hardcopy.c	/^    float	width;		\/\/ width and height in points for portrait$/;"	m	struct:prt_mediasize_S	file:
width	os_vms.c	/^    short	width;$/;"	m	struct:__anon76	file:
width	terminal.c	/^  char			width;$/;"	m	struct:__anon121	file:
wild	gui_xmdlg.c	/^static char wild[3] = "*";$/;"	v	file:
wild_menu_showing	globals.h	/^EXTERN int  wild_menu_showing INIT(= 0);$/;"	v
wim_flags	globals.h	/^EXTERN char_u	wim_flags[4];$/;"	v
win	if_mzsch.c	/^    win_T	    *win;$/;"	m	struct:__anon53	file:
win	if_py_both.h	/^    win_T	*win;$/;"	m	struct:__anon163
win32_build_cmd	channel.c	/^win32_build_cmd(list_T *l, garray_T *gap)$/;"	f
win32_build_env	os_win32.c	/^win32_build_env(dict_T *env, garray_T *gap, int is_terminal)$/;"	f
win32_enable_privilege	os_win32.c	/^win32_enable_privilege(LPTSTR lpszPrivilege, BOOL bEnable)$/;"	f	file:
win32_escape_arg	channel.c	/^win32_escape_arg(char_u *arg)$/;"	f	file:
win32_fileinfo	os_win32.c	/^win32_fileinfo(char_u *fname, BY_HANDLE_FILE_INFORMATION *info)$/;"	f
win32_getattrs	os_win32.c	/^win32_getattrs(char_u *name)$/;"	f	file:
win32_kbd_patch_key	os_win32.c	/^win32_kbd_patch_key($/;"	f	file:
win32_set_archive	os_win32.c	/^win32_set_archive(char_u *name)$/;"	f	file:
win32_set_foreground	os_mswin.c	/^win32_set_foreground(void)$/;"	f
win32_setattrs	os_win32.c	/^win32_setattrs(char_u *name, int attrs)$/;"	f	file:
win8_or_later	os_win32.c	/^static BOOL win8_or_later = FALSE;$/;"	v	file:
winEventHandlerUPP	gui_mac.c	/^static EventHandlerUPP winEventHandlerUPP = NULL;$/;"	v	file:
win_T	structs.h	/^typedef struct window_S		win_T;$/;"	t	typeref:struct:window_S
win_alloc	window.c	/^win_alloc(win_T *after UNUSED, int hidden UNUSED)$/;"	f	file:
win_alloc_first	window.c	/^win_alloc_first(void)$/;"	f
win_alloc_firstwin	window.c	/^win_alloc_firstwin(win_T *oldwin)$/;"	f	file:
win_alloc_lines	window.c	/^win_alloc_lines(win_T *wp)$/;"	f
win_alloc_popup_win	window.c	/^win_alloc_popup_win(void)$/;"	f
win_altframe	window.c	/^win_altframe($/;"	f	file:
win_append	window.c	/^win_append(win_T *after, win_T *wp)$/;"	f	file:
win_chartabsize	charset.c	/^win_chartabsize(win_T *wp, char_u *p, colnr_T col)$/;"	f	file:
win_clip_init	winclip.c	/^win_clip_init(void)$/;"	f
win_close	window.c	/^win_close(win_T *win, int free_buf)$/;"	f
win_close_buffer	window.c	/^win_close_buffer(win_T *win, int action, int abort_if_last)$/;"	f	file:
win_close_othertab	window.c	/^win_close_othertab(win_T *win, int free_buf, tabpage_T *tp)$/;"	f
win_col_off	move.c	/^win_col_off(win_T *wp)$/;"	f
win_col_off2	move.c	/^win_col_off2(win_T *wp)$/;"	f
win_comp_pos	window.c	/^win_comp_pos(void)$/;"	f
win_comp_scroll	window.c	/^win_comp_scroll(win_T *wp)$/;"	f
win_copy_options	option.c	/^win_copy_options(win_T *wp_from, win_T *wp_to)$/;"	f
win_count	window.c	/^win_count(void)$/;"	f
win_del_lines	screen.c	/^win_del_lines($/;"	f
win_do_lines	screen.c	/^win_do_lines($/;"	f	file:
win_drag_status_line	window.c	/^win_drag_status_line(win_T *dragwin, int offset)$/;"	f
win_drag_vsep_line	window.c	/^win_drag_vsep_line(win_T *dragwin, int offset)$/;"	f
win_draw_end	screen.c	/^win_draw_end($/;"	f
win_enter	window.c	/^win_enter(win_T *wp, int undo_sync)$/;"	f
win_enter_ext	window.c	/^win_enter_ext($/;"	f	file:
win_equal	window.c	/^win_equal($/;"	f
win_equal_rec	window.c	/^win_equal_rec($/;"	f	file:
win_exchange	window.c	/^win_exchange(long Prenum)$/;"	f	file:
win_find_nr	window.c	/^win_find_nr(int winnr)$/;"	f
win_find_tabpage	window.c	/^win_find_tabpage(win_T *win)$/;"	f
win_findbuf	evalwindow.c	/^win_findbuf(typval_T *argvars, list_T *list)$/;"	f
win_foldinfo	globals.h	/^EXTERN foldinfo_T win_foldinfo;	\/\/ info for 'foldcolumn'$/;"	v
win_free	window.c	/^win_free($/;"	f	file:
win_free_all	window.c	/^win_free_all(void)$/;"	f
win_free_lsize	window.c	/^win_free_lsize(win_T *wp)$/;"	f
win_free_mem	window.c	/^win_free_mem($/;"	f	file:
win_free_popup	window.c	/^win_free_popup(win_T *win)$/;"	f
win_getid	evalwindow.c	/^win_getid(typval_T *argvars)$/;"	f	file:
win_goto	window.c	/^win_goto(win_T *wp)$/;"	f
win_goto_hor	window.c	/^win_goto_hor($/;"	f	file:
win_goto_ver	window.c	/^win_goto_ver($/;"	f	file:
win_hasvertsplit	window.c	/^win_hasvertsplit(void)$/;"	f
win_horz_neighbor	window.c	/^win_horz_neighbor(tabpage_T *tp, win_T *wp, int left, long count)$/;"	f
win_id2tabwin	evalwindow.c	/^win_id2tabwin(typval_T *argvars, list_T *list)$/;"	f	file:
win_id2win	evalwindow.c	/^win_id2win(typval_T *argvars)$/;"	f	file:
win_id2wp	evalwindow.c	/^win_id2wp(int id)$/;"	f
win_id2wp_tp	evalwindow.c	/^win_id2wp_tp(int id, tabpage_T **tpp)$/;"	f
win_init	window.c	/^win_init(win_T *newp, win_T *oldp, int flags UNUSED)$/;"	f	file:
win_init_empty	window.c	/^win_init_empty(win_T *wp)$/;"	f	file:
win_init_popup_win	window.c	/^win_init_popup_win(win_T *wp, buf_T *buf)$/;"	f
win_init_size	window.c	/^win_init_size(void)$/;"	f
win_init_some	window.c	/^win_init_some(win_T *newp, win_T *oldp)$/;"	f	file:
win_ins_lines	screen.c	/^win_ins_lines($/;"	f
win_lbr_chartabsize	charset.c	/^win_lbr_chartabsize($/;"	f
win_line	drawline.c	/^win_line($/;"	f
win_linetabsize	charset.c	/^win_linetabsize(win_T *wp, char_u *line, colnr_T len)$/;"	f
win_move_after	window.c	/^win_move_after(win_T *win1, win_T *win2)$/;"	f
win_move_into_split	evalwindow.c	/^win_move_into_split(win_T *wp, win_T *targetwin, int size, int flags)$/;"	f	file:
win_new_height	window.c	/^win_new_height(win_T *wp, int height)$/;"	f
win_new_shellsize	term.c	/^win_new_shellsize(void)$/;"	f
win_new_tabpage	window.c	/^win_new_tabpage(int after)$/;"	f
win_new_width	window.c	/^win_new_width(win_T *wp, int width)$/;"	f
win_nolbr_chartabsize	charset.c	/^win_nolbr_chartabsize($/;"	f	file:
win_redr_custom	screen.c	/^win_redr_custom($/;"	f
win_redr_ruler	drawscreen.c	/^win_redr_ruler(win_T *wp, int always, int ignore_pum)$/;"	f
win_redr_status	drawscreen.c	/^win_redr_status(win_T *wp, int ignore_pum UNUSED)$/;"	f
win_redr_status_matches	screen.c	/^win_redr_status_matches($/;"	f
win_redraw_last_status	drawscreen.c	/^win_redraw_last_status(frame_T *frp)$/;"	f
win_remove	window.c	/^win_remove($/;"	f
win_resize_off	os_amiga.c	/^win_resize_off(void)$/;"	f
win_resize_on	os_amiga.c	/^win_resize_on(void)$/;"	f
win_rest_invalid	screen.c	/^win_rest_invalid(win_T *wp)$/;"	f	file:
win_rotate	window.c	/^win_rotate(int upwards, int count)$/;"	f	file:
win_set_loclist	quickfix.c	/^win_set_loclist(win_T *wp, qf_info_T *qi)$/;"	f	file:
win_setheight	window.c	/^win_setheight(int height)$/;"	f
win_setheight_win	window.c	/^win_setheight_win(int height, win_T *win)$/;"	f
win_setminheight	window.c	/^win_setminheight(void)$/;"	f
win_setminwidth	window.c	/^win_setminwidth(void)$/;"	f
win_setwidth	window.c	/^win_setwidth(int width)$/;"	f
win_setwidth_win	window.c	/^win_setwidth_win(int width, win_T *wp)$/;"	f
win_size_restore	window.c	/^win_size_restore(garray_T *gap)$/;"	f
win_size_save	window.c	/^win_size_save(garray_T *gap)$/;"	f
win_socket_id	globals.h	/^EXTERN long_u	win_socket_id INIT(= 0);$/;"	v
win_split	window.c	/^win_split(int size, int flags)$/;"	f
win_split_ins	window.c	/^win_split_ins($/;"	f
win_totop	window.c	/^win_totop(int size, int flags)$/;"	f	file:
win_unlisted	window.c	/^win_unlisted(win_T *wp)$/;"	f	file:
win_update	drawscreen.c	/^win_update(win_T *wp)$/;"	f	file:
win_valid	window.c	/^win_valid(win_T *win)$/;"	f
win_valid_any_tab	window.c	/^win_valid_any_tab(win_T *win)$/;"	f
win_valid_popup	window.c	/^win_valid_popup(win_T *win UNUSED)$/;"	f
win_vert_neighbor	window.c	/^win_vert_neighbor(tabpage_T *tp, win_T *wp, int up, long count)$/;"	f
winbar_click	menu.c	/^winbar_click(win_T *wp, int col)$/;"	f
winbar_height	menu.c	/^winbar_height(win_T *wp)$/;"	f
winbar_item_T	structs.h	/^} winbar_item_T;$/;"	t	typeref:struct:__anon243
windgoto	screen.c	/^windgoto(int row, int col)$/;"	f
window	gui_gtk_f.c	/^    GdkWindow *window;$/;"	m	struct:_GtkFormChild	file:
window_S	structs.h	/^struct window_S$/;"	s
window_buffer	if_ruby.c	/^window_buffer(VALUE self)$/;"	f	file:
window_cb	dosinst.c	/^window_cb(HWND hwnd, LPARAM lparam)$/;"	f	file:
window_count	structs.h	/^    int		window_count;		\/\/ number of windows to use$/;"	m	struct:__anon252
window_cursor	if_ruby.c	/^window_cursor(VALUE self)$/;"	f	file:
window_dsize	if_ruby.c	/^window_dsize(const void *win UNUSED)$/;"	f	file:
window_fixup_proc	if_mzsch.c	/^static int window_fixup_proc(void *obj)$/;"	f	file:
window_height	if_ruby.c	/^window_height(VALUE self)$/;"	f	file:
window_layout	structs.h	/^    int		window_layout;		\/\/ 0, WIN_HOR, WIN_VER or WIN_TABS$/;"	m	struct:__anon252
window_mark_proc	if_mzsch.c	/^static int window_mark_proc(void *obj)$/;"	f	file:
window_new	if_mzsch.c	/^window_new(win_T *win)$/;"	f	file:
window_new	if_ruby.c	/^window_new(win_T *win)$/;"	f	file:
window_s_aref	if_ruby.c	/^window_s_aref(VALUE self UNUSED, VALUE num)$/;"	f	file:
window_s_count	if_ruby.c	/^window_s_count(void)$/;"	f	file:
window_s_current	if_ruby.c	/^window_s_current(void)$/;"	f	file:
window_set_cursor	if_ruby.c	/^window_set_cursor(VALUE self, VALUE pos)$/;"	f	file:
window_set_height	if_ruby.c	/^window_set_height(VALUE self, VALUE height)$/;"	f	file:
window_set_width	if_ruby.c	/^window_set_width(VALUE self UNUSED, VALUE width)$/;"	f	file:
window_size_proc	if_mzsch.c	/^static int window_size_proc(void *obj UNUSED)$/;"	f	file:
window_type	if_ruby.c	/^static const rb_data_type_t window_type = {$/;"	v	file:
window_width	if_ruby.c	/^window_width(VALUE self UNUSED)$/;"	f	file:
windowcmd	if_tcl.c	/^windowcmd($/;"	f	file:
windowsVersion	globals.h	/^EXTERN char windowsVersion[20] INIT(= {0});$/;"	v
winframe_remove	window.c	/^winframe_remove($/;"	f
wininfo_S	structs.h	/^struct wininfo_S$/;"	s
wininfo_T	structs.h	/^typedef struct wininfo_S	wininfo_T;$/;"	t	typeref:struct:wininfo_S
wininfo_other_tab_diff	buffer.c	/^wininfo_other_tab_diff(wininfo_T *wip)$/;"	f	file:
winopt_T	structs.h	/^} winopt_T;$/;"	t	typeref:struct:__anon182
winpos_status	term.c	/^static termrequest_T winpos_status = TERMREQUEST_INIT;$/;"	v	file:
winpos_x	term.c	/^static int winpos_x = -1;$/;"	v	file:
winpos_y	term.c	/^static int winpos_y = -1;$/;"	v	file:
winpty_agent_process	terminal.c	/^HANDLE (*winpty_agent_process)(void*);$/;"	v
winpty_conerr_name	terminal.c	/^LPCWSTR (*winpty_conerr_name)(void*);$/;"	v
winpty_config_free	terminal.c	/^void (*winpty_config_free)(void*);$/;"	v
winpty_config_new	terminal.c	/^void* (*winpty_config_new)(UINT64, void*);$/;"	v
winpty_config_set_initial_size	terminal.c	/^void (*winpty_config_set_initial_size)(void*, int, int);$/;"	v
winpty_config_set_mouse_mode	terminal.c	/^void (*winpty_config_set_mouse_mode)(void*, int);$/;"	v
winpty_conin_name	terminal.c	/^LPCWSTR (*winpty_conin_name)(void*);$/;"	v
winpty_conout_name	terminal.c	/^LPCWSTR (*winpty_conout_name)(void*);$/;"	v
winpty_error_free	terminal.c	/^void (*winpty_error_free)(void*);$/;"	v
winpty_error_msg	terminal.c	/^LPCWSTR (*winpty_error_msg)(void*);$/;"	v
winpty_free	terminal.c	/^void (*winpty_free)(void*);$/;"	v
winpty_open	terminal.c	/^void* (*winpty_open)(void*, void*);$/;"	v
winpty_set_size	terminal.c	/^BOOL (*winpty_set_size)(void*, int, int, void*);$/;"	v
winpty_spawn	terminal.c	/^BOOL (*winpty_spawn)(void*, void*, HANDLE*, HANDLE*, DWORD*, void*);$/;"	v
winpty_spawn_config_free	terminal.c	/^void (*winpty_spawn_config_free)(void*);$/;"	v
winpty_spawn_config_new	terminal.c	/^void* (*winpty_spawn_config_new)(UINT64, void*, LPCWSTR, void*, void*, void*);$/;"	v
winpty_term_and_job_init	terminal.c	/^winpty_term_and_job_init($/;"	f	file:
winselfcmd	if_tcl.c	/^winselfcmd($/;"	f	file:
wipe_buffer	buffer.c	/^wipe_buffer($/;"	f
wipe_dummy_buffer	quickfix.c	/^wipe_dummy_buffer(buf_T *buf, char_u *dirname_start)$/;"	f	file:
wipe_qf_buffer	quickfix.c	/^wipe_qf_buffer(qf_info_T *qi)$/;"	f	file:
with	gui_gtk.c	/^    GtkWidget *with;	\/\/ 'Replace with' entry text widget$/;"	m	struct:_SharedFindReplace	file:
with	gui_motif.c	/^    Widget with;	\/\/ 'Replace with' entry text widget$/;"	m	struct:_SharedFindReplace	file:
wl_folded	structs.h	/^    char	wl_folded;	\/\/ TRUE when this is a range of folded lines$/;"	m	struct:w_line
wl_lastlnum	structs.h	/^    linenr_T	wl_lastlnum;	\/\/ last buffer line number for logical line$/;"	m	struct:w_line
wl_lnum	structs.h	/^    linenr_T	wl_lnum;	\/\/ buffer line number for logical line$/;"	m	struct:w_line
wl_size	structs.h	/^    short_u	wl_size;	\/\/ height in screen lines$/;"	m	struct:w_line
wl_valid	structs.h	/^    char	wl_valid;	\/\/ TRUE values are valid for text in buffer$/;"	m	struct:w_line
wline_T	structs.h	/^} wline_T;$/;"	t	typeref:struct:w_line
wmDeleteWindowTranslation	gui_at_fs.c	/^static char *wmDeleteWindowTranslation = "\\$/;"	v	file:
wmShellWidgetClass	gui_gtk_vms.h	676;"	d
wm_atoms	gui_x11.c	/^static Atom   wm_atoms[2];	\/\/ Window Manager Atoms$/;"	v	file:
wm_protocols_atom	gui_gtk_x11.c	/^static GdkAtom wm_protocols_atom = GDK_NONE;$/;"	v	file:
wn_affixID	spellfile.c	/^    char_u	wn_affixID;	\/\/ supported\/required prefix ID or 0$/;"	m	struct:wordnode_S	file:
wn_byte	spellfile.c	/^    char_u	wn_byte;	\/\/ Byte for this node. NUL for word end$/;"	m	struct:wordnode_S	file:
wn_child	spellfile.c	/^    wordnode_T	*wn_child;	\/\/ child (next byte in word)$/;"	m	struct:wordnode_S	file:
wn_flags	spellfile.c	/^    short_u	wn_flags;	\/\/ WF_ flags$/;"	m	struct:wordnode_S	file:
wn_nr	spellfile.c	/^    int		wn_nr;		\/\/ sequence nr for printing$/;"	m	struct:wordnode_S	file:
wn_refs	spellfile.c	/^    int		wn_refs;	\/\/ Nr. of references to this node.  Only$/;"	m	struct:wordnode_S	file:
wn_region	spellfile.c	/^    short	wn_region;	\/\/ region mask$/;"	m	struct:wordnode_S	file:
wn_sibling	spellfile.c	/^    wordnode_T  *wn_sibling;	\/\/ next sibling (alternate byte in word,$/;"	m	struct:wordnode_S	file:
wn_u1	spellfile.c	/^    } wn_u1;$/;"	m	struct:wordnode_S	typeref:union:wordnode_S::__anon110	file:
wn_u2	spellfile.c	/^    } wn_u2;$/;"	m	struct:wordnode_S	typeref:union:wordnode_S::__anon111	file:
wnode	spellfile.c	/^	wordnode_T *wnode;	\/\/ parent node that will write this node$/;"	m	union:wordnode_S::__anon111	file:
wo_arab	structs.h	/^    int		wo_arab;$/;"	m	struct:__anon182
wo_bri	structs.h	/^    int		wo_bri;$/;"	m	struct:__anon182
wo_briopt	structs.h	/^    char_u	*wo_briopt;$/;"	m	struct:__anon182
wo_cc	structs.h	/^    char_u	*wo_cc;$/;"	m	struct:__anon182
wo_cocu	structs.h	/^    char_u	*wo_cocu;		\/\/ 'concealcursor'$/;"	m	struct:__anon182
wo_cole	structs.h	/^    long	wo_cole;		\/\/ 'conceallevel'$/;"	m	struct:__anon182
wo_crb	structs.h	/^    int		wo_crb;$/;"	m	struct:__anon182
wo_crb_save	structs.h	/^    int		wo_crb_save;	\/\/ 'cursorbind' state saved for diff mode$/;"	m	struct:__anon182
wo_cuc	structs.h	/^    int		wo_cuc;$/;"	m	struct:__anon182
wo_cul	structs.h	/^    int		wo_cul;$/;"	m	struct:__anon182
wo_culopt	structs.h	/^    char_u	*wo_culopt;$/;"	m	struct:__anon182
wo_diff	structs.h	/^    int		wo_diff;$/;"	m	struct:__anon182
wo_diff_saved	structs.h	/^    int		wo_diff_saved; \/\/ options were saved for starting diff mode$/;"	m	struct:__anon182
wo_fdc	structs.h	/^    long	wo_fdc;$/;"	m	struct:__anon182
wo_fdc_save	structs.h	/^    int		wo_fdc_save;$/;"	m	struct:__anon182
wo_fde	structs.h	/^    char_u	*wo_fde;$/;"	m	struct:__anon182
wo_fdi	structs.h	/^    char_u	*wo_fdi;$/;"	m	struct:__anon182
wo_fdl	structs.h	/^    long	wo_fdl;$/;"	m	struct:__anon182
wo_fdl_save	structs.h	/^    int		wo_fdl_save;$/;"	m	struct:__anon182
wo_fdm	structs.h	/^    char_u	*wo_fdm;$/;"	m	struct:__anon182
wo_fdm_save	structs.h	/^    char_u	*wo_fdm_save;$/;"	m	struct:__anon182
wo_fdn	structs.h	/^    long	wo_fdn;$/;"	m	struct:__anon182
wo_fdt	structs.h	/^    char_u	*wo_fdt;$/;"	m	struct:__anon182
wo_fen	structs.h	/^    int		wo_fen;$/;"	m	struct:__anon182
wo_fen_save	structs.h	/^    int		wo_fen_save;$/;"	m	struct:__anon182
wo_fml	structs.h	/^    long	wo_fml;$/;"	m	struct:__anon182
wo_fmr	structs.h	/^    char_u	*wo_fmr;$/;"	m	struct:__anon182
wo_lbr	structs.h	/^    int		wo_lbr;$/;"	m	struct:__anon182
wo_list	structs.h	/^    int		wo_list;$/;"	m	struct:__anon182
wo_nu	structs.h	/^    int		wo_nu;$/;"	m	struct:__anon182
wo_nuw	structs.h	/^    long	wo_nuw;$/;"	m	struct:__anon182
wo_pvw	structs.h	/^    int		wo_pvw;$/;"	m	struct:__anon182
wo_rl	structs.h	/^    int		wo_rl;$/;"	m	struct:__anon182
wo_rlc	structs.h	/^    char_u	*wo_rlc;$/;"	m	struct:__anon182
wo_rnu	structs.h	/^    int		wo_rnu;$/;"	m	struct:__anon182
wo_sbr	structs.h	/^    char_u	*wo_sbr;$/;"	m	struct:__anon182
wo_scb	structs.h	/^    int		wo_scb;$/;"	m	struct:__anon182
wo_scb_save	structs.h	/^    int		wo_scb_save;	\/\/ 'scrollbind' saved for diff mode$/;"	m	struct:__anon182
wo_scl	structs.h	/^    char_u	*wo_scl;$/;"	m	struct:__anon182
wo_scr	structs.h	/^    long	wo_scr;$/;"	m	struct:__anon182
wo_script_ctx	structs.h	/^    sctx_T	wo_script_ctx[WV_COUNT];	\/\/ SCTXs for window-local options$/;"	m	struct:__anon182
wo_spell	structs.h	/^    int		wo_spell;$/;"	m	struct:__anon182
wo_stl	structs.h	/^    char_u	*wo_stl;$/;"	m	struct:__anon182
wo_twk	structs.h	/^    char_u	*wo_twk;$/;"	m	struct:__anon182
wo_tws	structs.h	/^    char_u	*wo_tws;$/;"	m	struct:__anon182
wo_wcr	structs.h	/^    char_u	*wo_wcr;$/;"	m	struct:__anon182
wo_wfh	structs.h	/^    int		wo_wfh;$/;"	m	struct:__anon182
wo_wfw	structs.h	/^    int		wo_wfw;$/;"	m	struct:__anon182
wo_wrap	structs.h	/^    int		wo_wrap;$/;"	m	struct:__anon182
wo_wrap_save	structs.h	/^    int		wo_wrap_save;	\/\/ 'wrap' state saved for diff mode$/;"	m	struct:__anon182
word_end_col	vim.h	/^    short_u	word_end_col;$/;"	m	struct:__anon279
word_start_col	vim.h	/^    short_u	word_start_col;$/;"	m	struct:__anon279
wordcount_S	spell.h	/^typedef struct wordcount_S$/;"	s
wordcount_T	spell.h	/^} wordcount_T;$/;"	t	typeref:struct:wordcount_S
wordnode_S	spellfile.c	/^struct wordnode_S$/;"	s	file:
wordnode_T	spellfile.c	/^typedef struct wordnode_S wordnode_T;$/;"	t	typeref:struct:wordnode_S	file:
wordtree_alloc	spellfile.c	/^wordtree_alloc(spellinfo_T *spin)$/;"	f	file:
wordtree_compress	spellfile.c	/^wordtree_compress(spellinfo_T *spin, wordnode_T *root)$/;"	f	file:
works_inplace	crypt.c	/^    int	    works_inplace; \/\/ encryption\/decryption can be done in-place$/;"	m	struct:__anon7	file:
wp	fold.c	/^    win_T	*wp;		\/\/ window$/;"	m	struct:__anon29	file:
wp	gui.h	/^    win_T	*wp;		\/\/ Scrollbar's window, NULL for bottom$/;"	m	struct:GuiScrollbar
wq_ga	structs.h	/^    garray_T	wq_ga;$/;"	m	struct:writeq_S
wq_next	structs.h	/^    writeq_T	*wq_next;$/;"	m	struct:writeq_S
wq_prev	structs.h	/^    writeq_T	*wq_prev;$/;"	m	struct:writeq_S
write_blob	blob.c	/^write_blob(FILE *fd, blob_T *blob)$/;"	f
write_buf_line	channel.c	/^write_buf_line(buf_T *buf, linenr_T lnum, channel_T *channel)$/;"	f	file:
write_buffer_marks	viminfo.c	/^write_buffer_marks(buf_T *buf, FILE *fp_out)$/;"	f	file:
write_chars	os_win32.c	/^write_chars($/;"	f	file:
write_eintr	fileio.c	/^write_eintr(int fd, void *buf, size_t bufsize)$/;"	f
write_eintr	vim.h	1730;"	d
write_list	list.c	/^write_list(FILE *fd, list_T *list, int binary)$/;"	f
write_lnum_adjust	fileio.c	/^write_lnum_adjust(linenr_T offset)$/;"	f
write_one_filemark	viminfo.c	/^write_one_filemark($/;"	f	file:
write_one_mark	viminfo.c	/^write_one_mark(FILE *fp_out, int c, pos_T *pos)$/;"	f	file:
write_output	if_py_both.h	/^write_output(OutputObject *self, PyObject *string)$/;"	f
write_reg_contents	register.c	/^write_reg_contents($/;"	f
write_reg_contents_ex	register.c	/^write_reg_contents_ex($/;"	f
write_reg_contents_lst	register.c	/^write_reg_contents_lst($/;"	f
write_session_file	session.c	/^write_session_file(char_u *filename)$/;"	f
write_spell_prefcond	spellfile.c	/^write_spell_prefcond(FILE *fd, garray_T *gap)$/;"	f	file:
write_string	json.c	/^write_string(garray_T *gap, char_u *str)$/;"	f	file:
write_to_term	terminal.c	/^write_to_term(buf_T *buffer, char_u *msg, channel_T *channel)$/;"	f
write_vim_spell	spellfile.c	/^write_vim_spell(spellinfo_T *spin, char_u *fname)$/;"	f	file:
write_viminfo	viminfo.c	/^write_viminfo(char_u *file, int forceit)$/;"	f
write_viminfo_barlines	viminfo.c	/^write_viminfo_barlines(vir_T *virp, FILE *fp_out)$/;"	f	file:
write_viminfo_bufferlist	viminfo.c	/^write_viminfo_bufferlist(FILE *fp)$/;"	f	file:
write_viminfo_filemarks	viminfo.c	/^write_viminfo_filemarks(FILE *fp)$/;"	f	file:
write_viminfo_history	viminfo.c	/^write_viminfo_history(FILE *fp, int merge)$/;"	f	file:
write_viminfo_marks	viminfo.c	/^write_viminfo_marks(FILE *fp_out, garray_T *buflist)$/;"	f	file:
write_viminfo_registers	viminfo.c	/^write_viminfo_registers(FILE *fp)$/;"	f	file:
write_viminfo_search_pattern	viminfo.c	/^write_viminfo_search_pattern(FILE *fp)$/;"	f	file:
write_viminfo_sub_string	viminfo.c	/^write_viminfo_sub_string(FILE *fp)$/;"	f	file:
write_viminfo_varlist	viminfo.c	/^write_viminfo_varlist(FILE *fp)$/;"	f	file:
write_viminfo_version	viminfo.c	/^write_viminfo_version(FILE *fp_out)$/;"	f	file:
writefn	if_py_both.h	/^typedef void (*writefn)(char_u *);$/;"	t
writeq_S	structs.h	/^struct writeq_S$/;"	s
writeq_T	structs.h	/^typedef struct writeq_S writeq_T;$/;"	t	typeref:struct:writeq_S
writer	if_py_both.h	/^writer(writefn fn, char_u *str, PyInt n)$/;"	f
ws_end_label	vim9compile.c	/^    endlabel_T	*ws_end_label;	    \/\/ instructions to set end$/;"	m	struct:__anon126	file:
ws_top_label	vim9compile.c	/^    int		ws_top_label;	    \/\/ instruction idx at WHILE$/;"	m	struct:__anon126	file:
wstat_symlink_aware	os_mswin.c	/^wstat_symlink_aware(const WCHAR *name, stat_T *stp)$/;"	f	file:
wvsp_one	viminfo.c	/^wvsp_one($/;"	f	file:
wword	gui_gtk.c	/^    GtkWidget *wword;	\/\/ 'Whole word only' check button$/;"	m	struct:_SharedFindReplace	file:
wword	gui_motif.c	/^    Widget wword;	\/\/ 'Exact match' check button$/;"	m	struct:_SharedFindReplace	file:
wx	hardcopy.c	/^    int		wx;$/;"	m	struct:prt_ps_font_S	file:
x	beval.h	/^    int			x;$/;"	m	struct:BalloonEvalStruct
x	gui_gtk_f.c	/^    gint x;		\/\/ relative subwidget x position$/;"	m	struct:_GtkFormChild	file:
x	iid_ole.c	/^    unsigned long x;$/;"	m	struct:_IID	file:
x	os_vms.c	/^    }	x;$/;"	m	struct:__anon76	typeref:union:__anon76::__anon77	file:
x11_display	os_unix.c	/^Display	    *x11_display = NULL;$/;"	v
x11_export_final_selection	ops.c	/^x11_export_final_selection(void)$/;"	f
x11_setup_atoms	ui.c	/^x11_setup_atoms(Display *dpy)$/;"	f
x11_setup_selection	ui.c	/^x11_setup_selection(Widget w)$/;"	f
x11_window	os_unix.c	/^Window	    x11_window = 0;$/;"	v
x_IOerror_check	os_unix.c	/^x_IOerror_check(Display *dpy UNUSED)$/;"	f	file:
x_IOerror_handler	os_unix.c	/^x_IOerror_handler(Display *dpy UNUSED)$/;"	f	file:
x_cmdqueue	if_xcmdsrv.c	/^struct x_cmdqueue$/;"	s	file:
x_connect_to_server	os_unix.c	/^x_connect_to_server(void)$/;"	f	file:
x_error_check	if_xcmdsrv.c	/^x_error_check(Display *dpy UNUSED, XErrorEvent *error_event UNUSED)$/;"	f	file:
x_error_check	os_unix.c	/^x_error_check(Display *dpy UNUSED, XErrorEvent *error_event UNUSED)$/;"	f	file:
x_error_handler	os_unix.c	/^x_error_handler(Display *dpy, XErrorEvent *error_event)$/;"	f	file:
x_force_connect	globals.h	/^EXTERN int	x_force_connect INIT(= FALSE);	\/\/ Do connect to X server.$/;"	v
x_jump_env	globals.h	/^EXTERN JMP_BUF x_jump_env;$/;"	v
x_no_connect	globals.h	/^EXTERN int	x_no_connect INIT(= FALSE); \/\/ don't connect to X server$/;"	v
x_queue_T	if_xcmdsrv.c	/^typedef struct x_cmdqueue x_queue_T;$/;"	t	typeref:struct:x_cmdqueue	file:
xdiff_out	diff.c	/^xdiff_out(void *priv, mmbuffer_t *mb, int nbuf)$/;"	f	file:
xfilemark	structs.h	/^typedef struct xfilemark$/;"	s
xfmark_T	structs.h	/^} xfmark_T;$/;"	t	typeref:struct:xfilemark
xic	globals.h	/^EXTERN GtkIMContext	*xic INIT(= NULL);$/;"	v
xic	globals.h	/^EXTERN XIC		xic INIT(= NULL);$/;"	v
xim_bg_color	globals.h	/^EXTERN guicolor_T	xim_bg_color INIT(= INVALCOLOR);$/;"	v
xim_changed_while_preediting	globals.h	/^EXTERN int		xim_changed_while_preediting INIT(= FALSE);$/;"	v
xim_destroy_cb	mbyte.c	/^xim_destroy_cb($/;"	f	file:
xim_expected_char	mbyte.c	/^static int xim_expected_char = NUL;$/;"	v	file:
xim_fg_color	globals.h	/^EXTERN guicolor_T	xim_fg_color INIT(= INVALCOLOR);$/;"	v
xim_get_status_area_height	mbyte.c	/^xim_get_status_area_height(void)$/;"	f
xim_has_focus	mbyte.c	/^static int	xim_has_focus = FALSE;	\/\/ XIM is really being used for Vim$/;"	v	file:
xim_has_preediting	mbyte.c	/^static int xim_has_preediting INIT(= FALSE);  \/\/ IM current status$/;"	v	file:
xim_ignored_char	mbyte.c	/^static int xim_ignored_char = FALSE;$/;"	v	file:
xim_init	mbyte.c	/^xim_init(void)$/;"	f
xim_instantiate_cb	mbyte.c	/^xim_instantiate_cb($/;"	f	file:
xim_is_active	mbyte.c	/^static int	xim_is_active = FALSE;  \/\/ XIM should be active in the current$/;"	v	file:
xim_log	mbyte.c	/^xim_log(char *s, ...)$/;"	f	file:
xim_queue_key_press_event	mbyte.c	/^xim_queue_key_press_event(GdkEventKey *event, int down)$/;"	f
xim_real_init	mbyte.c	/^xim_real_init(Window x11_window, Display *x11_display)$/;"	f	file:
xim_reset	mbyte.c	/^xim_reset(void)$/;"	f
xim_set_focus	mbyte.c	/^xim_set_focus(int focus)$/;"	f
xim_set_preedit	mbyte.c	/^xim_set_preedit(void)$/;"	f
xim_set_status_area	mbyte.c	/^xim_set_status_area(void)$/;"	f
xmArrowButtonWidgetClass	gui_gtk_vms.h	677;"	d
xmCascadeButtonClassRec	gui_gtk_vms.h	678;"	d
xmCascadeButtonGadgetClass	gui_gtk_vms.h	679;"	d
xmCascadeButtonWidgetClass	gui_gtk_vms.h	680;"	d
xmDialogShellWidgetClass	gui_gtk_vms.h	681;"	d
xmDrawingAreaWidgetClass	gui_gtk_vms.h	682;"	d
xmDrawnButtonWidgetClass	gui_gtk_vms.h	683;"	d
xmEnhancedButtonClassRec	gui_xmebw.c	/^XmEnhancedButtonClassRec xmEnhancedButtonClassRec =$/;"	v
xmEnhancedButtonPrimClassExtRec	gui_xmebw.c	/^XmPrimitiveClassExtRec xmEnhancedButtonPrimClassExtRec =$/;"	v
xmEnhancedButtonWidgetClass	gui_xmebw.c	/^WidgetClass xmEnhancedButtonWidgetClass =$/;"	v
xmFileSelectionBoxWidgetClass	gui_gtk_vms.h	684;"	d
xmFormWidgetClass	gui_gtk_vms.h	685;"	d
xmFrameWidgetClass	gui_gtk_vms.h	686;"	d
xmGadgetClass	gui_gtk_vms.h	687;"	d
xmLabelGadgetClass	gui_gtk_vms.h	688;"	d
xmLabelWidgetClass	gui_gtk_vms.h	689;"	d
xmListWidgetClass	gui_gtk_vms.h	690;"	d
xmMainWindowWidgetClass	gui_gtk_vms.h	691;"	d
xmManagerClassRec	gui_gtk_vms.h	692;"	d
xmManagerWidgetClass	gui_gtk_vms.h	693;"	d
xmMenuShellWidgetClass	gui_gtk_vms.h	694;"	d
xmMessageBoxWidgetClass	gui_gtk_vms.h	695;"	d
xmPrimitiveClassRec	gui_gtk_vms.h	696;"	d
xmPrimitiveWidgetClass	gui_gtk_vms.h	697;"	d
xmPushButtonClassRec	gui_gtk_vms.h	698;"	d
xmPushButtonGadgetClass	gui_gtk_vms.h	699;"	d
xmPushButtonWidgetClass	gui_gtk_vms.h	700;"	d
xmRowColumnWidgetClass	gui_gtk_vms.h	701;"	d
xmSashWidgetClass	gui_gtk_vms.h	702;"	d
xmScrollBarWidgetClass	gui_gtk_vms.h	703;"	d
xmScrolledWindowClassRec	gui_gtk_vms.h	704;"	d
xmScrolledWindowWidgetClass	gui_gtk_vms.h	705;"	d
xmSeparatorGadgetClass	gui_gtk_vms.h	706;"	d
xmSeparatorWidgetClass	gui_gtk_vms.h	707;"	d
xmTextFieldWidgetClass	gui_gtk_vms.h	708;"	d
xmTextWidgetClass	gui_gtk_vms.h	709;"	d
xmToggleButtonGadgetClass	gui_gtk_vms.h	710;"	d
xmToggleButtonWidgetClass	gui_gtk_vms.h	711;"	d
xopen_message	os_unix.c	/^xopen_message(long elapsed_msec)$/;"	f	file:
xp_arg	structs.h	/^    char_u	*xp_arg;		\/\/ completion function$/;"	m	struct:expand
xp_arg	structs.h	/^    char_u	*xp_arg;	\/\/ user-defined expansion arg$/;"	m	struct:__anon190
xp_backslash	structs.h	/^    int		xp_backslash;		\/\/ one of the XP_BS_ values$/;"	m	struct:expand
xp_col	structs.h	/^    int		xp_col;			\/\/ cursor position in line$/;"	m	struct:expand
xp_context	structs.h	/^    int		xp_context;		\/\/ type of expansion$/;"	m	struct:expand
xp_context	structs.h	/^    int		xp_context;	\/\/ type of expansion$/;"	m	struct:__anon190
xp_files	structs.h	/^    char_u	**xp_files;		\/\/ list of files$/;"	m	struct:expand
xp_line	structs.h	/^    char_u	*xp_line;		\/\/ text being completed$/;"	m	struct:expand
xp_numfiles	structs.h	/^    int		xp_numfiles;		\/\/ number of files found by$/;"	m	struct:expand
xp_pattern	structs.h	/^    char_u	*xp_pattern;		\/\/ start of item to expand$/;"	m	struct:expand
xp_pattern_len	structs.h	/^    int		xp_pattern_len;		\/\/ bytes in xp_pattern before cursor$/;"	m	struct:expand
xp_script_ctx	structs.h	/^    sctx_T	xp_script_ctx;		\/\/ SCTX for completion function$/;"	m	struct:expand
xp_shell	structs.h	/^    int		xp_shell;		\/\/ TRUE for a shell command, more$/;"	m	struct:expand
xpc	structs.h	/^    expand_T	*xpc;		\/\/ struct being used for expansion, xp_pattern$/;"	m	struct:__anon190
xpm	structs.h	/^    char	**xpm;		    \/\/ pixmap data$/;"	m	struct:VimMenu
xpm_fname	structs.h	/^    char	*xpm_fname;	    \/\/ file with pixmap data$/;"	m	struct:VimMenu
xsmp	os_unix.c	/^static xsmp_config_T xsmp;$/;"	v	file:
xsmp_close	os_unix.c	/^xsmp_close(void)$/;"	f
xsmp_config_T	os_unix.c	/^} xsmp_config_T;$/;"	t	typeref:struct:__anon75	file:
xsmp_die	os_unix.c	/^xsmp_die(SmcConn smc_conn UNUSED, SmPointer client_data UNUSED)$/;"	f	file:
xsmp_handle_interaction	os_unix.c	/^xsmp_handle_interaction(SmcConn smc_conn, SmPointer client_data UNUSED)$/;"	f	file:
xsmp_handle_requests	os_unix.c	/^xsmp_handle_requests(void)$/;"	f
xsmp_handle_save_yourself	os_unix.c	/^xsmp_handle_save_yourself($/;"	f	file:
xsmp_ice_connection	os_unix.c	/^xsmp_ice_connection($/;"	f	file:
xsmp_icefd	globals.h	/^EXTERN int xsmp_icefd INIT(= -1);   \/\/ The actual connection$/;"	v
xsmp_init	os_unix.c	/^xsmp_init(void)$/;"	f
xsmp_save_complete	os_unix.c	/^xsmp_save_complete($/;"	f	file:
xsmp_shutdown_cancelled	os_unix.c	/^xsmp_shutdown_cancelled($/;"	f	file:
xt_index_in	term.c	/^static int xt_index_in = 0;$/;"	v	file:
xt_index_out	term.c	/^static int xt_index_out = 0;$/;"	v	file:
xterm_Shell	os_unix.c	/^static Widget	xterm_Shell = (Widget)0;$/;"	v	file:
xterm_button	os_unix.c	/^static int	xterm_button;$/;"	v	file:
xterm_display	globals.h	/^EXTERN char	*xterm_display INIT(= NULL);$/;"	v
xterm_display_allocated	globals.h	/^EXTERN int	xterm_display_allocated INIT(= FALSE);$/;"	v
xterm_dpy	globals.h	/^EXTERN Display	*xterm_dpy INIT(= NULL);$/;"	v
xterm_dpy_retry_count	os_unix.c	/^static int xterm_dpy_retry_count = 0;$/;"	v	file:
xterm_trace	os_unix.c	/^static int	xterm_trace = -1;	\/\/ default: disabled$/;"	v	file:
xterm_update	os_unix.c	/^xterm_update(void)$/;"	f	file:
xy2win	gui.c	/^xy2win(int x, int y, mouse_find_T popup)$/;"	f	file:
y	beval.h	/^    int			y;$/;"	m	struct:BalloonEvalStruct
y	gui_gtk_f.c	/^    gint y;		\/\/ relative subwidget y position$/;"	m	struct:_GtkFormChild	file:
y	os_vms.c	/^	}	y;$/;"	m	union:__anon76::__anon77	typeref:struct:__anon76::__anon77::__anon78	file:
y_acute	regexp_nfa.c	753;"	d	file:
y_append	register.c	/^static int		y_append;	    \/\/ TRUE when appending$/;"	v	file:
y_array	structs.h	/^    char_u	**y_array;	\/\/ pointer to array of line pointers$/;"	m	struct:__anon258
y_current	register.c	/^static yankreg_T	*y_current;	    \/\/ ptr to current yankreg$/;"	v	file:
y_diaeresis	regexp_nfa.c	754;"	d	file:
y_previous	register.c	/^static yankreg_T	*y_previous = NULL; \/\/ ptr to last written yankreg$/;"	v	file:
y_read_regs	viminfo.c	/^static yankreg_T *y_read_regs = NULL;$/;"	v	file:
y_regs	register.c	/^static yankreg_T	y_regs[NUM_REGISTERS];$/;"	v	file:
y_size	structs.h	/^    linenr_T	y_size;		\/\/ number of lines in y_array$/;"	m	struct:__anon258
y_time_set	structs.h	/^    time_t	y_time_set;$/;"	m	struct:__anon258
y_type	structs.h	/^    char_u	y_type;		\/\/ MLINE, MCHAR or MBLOCK$/;"	m	struct:__anon258
y_width	structs.h	/^    colnr_T	y_width;	\/\/ only set if y_type == MBLOCK$/;"	m	struct:__anon258
yank_copy_line	register.c	/^yank_copy_line(struct block_def *bd, long y_idx)$/;"	f	file:
yank_cut_buffer0	ui.c	/^yank_cut_buffer0(Display *dpy, Clipboard_T *cbd)$/;"	f
yank_do_autocmd	register.c	/^yank_do_autocmd(oparg_T *oap, yankreg_T *reg)$/;"	f
yank_register_mline	register.c	/^yank_register_mline(int regname)$/;"	f
yankreg_T	structs.h	/^} yankreg_T;$/;"	t	typeref:struct:__anon258
zip_state_T	crypt_zip.c	/^} zip_state_T;$/;"	t	typeref:struct:__anon8	file:
